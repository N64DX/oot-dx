SECTIONS {
    _RomSize = 0;
    _RomStart = _RomSize;

    _makeromSegmentRomStart = _RomSize;
    ..makerom : AT(_RomSize)
    {
        _makeromSegmentStart = .;
        . = ALIGN(0x10);
        _makeromSegmentTextStart = .;
            build/asm/rom_header.o (.text)
            build/asm/ipl3.o (.text)
            build/asm/entry.o (.text)
        _makeromSegmentTextEnd = .;
    _makeromSegmentTextSize = ABSOLUTE( _makeromSegmentTextEnd - _makeromSegmentTextStart );
        _makeromSegmentDataStart = .;
            build/asm/rom_header.o (.data)
            build/asm/ipl3.o (.data)
            build/asm/entry.o (.data)
        _makeromSegmentDataEnd = .;
    _makeromSegmentDataSize = ABSOLUTE( _makeromSegmentDataEnd - _makeromSegmentDataStart );
        _makeromSegmentRoDataStart = .;
            build/asm/rom_header.o (.rodata)
            build/asm/ipl3.o (.rodata)
            build/asm/entry.o (.rodata)
        _makeromSegmentRoDataEnd = .;
    _makeromSegmentRoDataSize = ABSOLUTE( _makeromSegmentRoDataEnd - _makeromSegmentRoDataStart );
        _makeromSegmentSDataStart = .;
            build/asm/rom_header.o (.sdata)
            build/asm/ipl3.o (.sdata)
            build/asm/entry.o (.sdata)
        . = ALIGN(0x10);
        _makeromSegmentSDataEnd = .;
        _makeromSegmentOvlStart = .;
            build/asm/rom_header.o (.ovl)
            build/asm/ipl3.o (.ovl)
            build/asm/entry.o (.ovl)
        . = ALIGN(0x10);
        _makeromSegmentOvlEnd = .;
    }
    _RomSize += ( _makeromSegmentOvlEnd - _makeromSegmentTextStart );
    _makeromSegmentRomEnd = _RomSize;

    ..makerom.bss ADDR(..makerom) + SIZEOF(..makerom) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _makeromSegmentBssStart = .;
            build/asm/rom_header.o (.sbss)
            build/asm/ipl3.o (.sbss)
            build/asm/entry.o (.sbss)
            build/asm/rom_header.o (.scommon)
            build/asm/ipl3.o (.scommon)
            build/asm/entry.o (.scommon)
            build/asm/rom_header.o (.bss)
            build/asm/ipl3.o (.bss)
            build/asm/entry.o (.bss)
            build/asm/rom_header.o (COMMON)
            build/asm/ipl3.o (COMMON)
            build/asm/entry.o (COMMON)
        . = ALIGN(0x10);
        _makeromSegmentBssEnd = .;
        _makeromSegmentEnd = .;
    }
    _makeromSegmentBssSize = ABSOLUTE( _makeromSegmentBssEnd - _makeromSegmentBssStart );

    _bootSegmentRomStart = _RomSize;
    ..boot 0x80000460 : AT(_RomSize)
    {
        _bootSegmentStart = .;
        . = ALIGN(0x10);
        _bootSegmentTextStart = .;
            build/src/boot/boot_main.o (.text)
            build/src/boot/idle.o (.text)
            build/src/boot/viconfig.o (.text)
            build/src/boot/z_std_dma.o (.text)
            build/src/boot/yaz0.o (.text)
            build/src/boot/z_locale.o (.text)
            build/src/boot/assert.o (.text)
            build/src/boot/is_debug.o (.text)
            build/src/libultra_boot_O2/osDriveRomInit.o (.text)
            build/asm/mio0.o (.text)
            build/src/boot/stackcheck.o (.text)
            build/src/boot/logutils.o (.text)
            build/src/libultra_boot_O2/sprintf.o (.text)
            build/src/libultra_boot_O1/piacs.o (.text)
            build/src/libultra_boot_O1/osSendMesg.o (.text)
            build/src/libultra_boot_O1/osStopThread.o (.text)
            build/src/libultra_boot_O1/osViExtendVStart.o (.text)
            build/src/libultra_boot_O1/osViModePalLan1.o (.text)
            build/src/libultra_boot_O1/osRecvMesg.o (.text)
            build/src/libultra_boot_O1/initialize.o (.text)
            build/asm/libm.o (.text)
            build/asm/exceptasm.o (.text)
            build/src/libultra_boot_O1/__osDequeueThread.o (.text)
            build/src/libultra_boot_O1/osDestroyThread.o (.text)
            build/asm/bzero.o (.text)
            build/src/libultra_boot_O1/osCreateThread.o (.text)
            build/asm/__osSetSR.o (.text)
            build/asm/__osGetSR.o (.text)
            build/asm/osWritebackDCache.o (.text)
            build/src/libultra_boot_O2/osViGetNextFramebuffer.o (.text)
            build/src/libultra_boot_O2/pimgr.o (.text)
            build/src/libultra_boot_O2/__osDevMgrMain.o (.text)
            build/src/libultra_boot_O2/__osPiRawStartDma.o (.text)
            build/src/libultra_boot_O1/osVirtualToPhysical.o (.text)
            build/src/libultra_boot_O2/osViBlack.o (.text)
            build/src/libultra_boot_O2/__osSiRawReadIo.o (.text)
            build/src/libultra_boot_O1/osGetThreadId.o (.text)
            build/asm/osSetIntMask.o (.text)
            build/src/libultra_boot_O2/osViSetMode.o (.text)
            build/asm/__osProbeTLB.o (.text)
            build/src/libultra_boot_O1/osGetMemSize.o (.text)
            build/src/libultra_boot_O1/osSetEventMesg.o (.text)
            build/src/libultra_boot_O2/_Printf.o (.text)
            build/asm/osUnmapTLBAll.o (.text)
            build/src/libultra_boot_O2/osEPiStartDma.o (.text)
            build/src/libultra_boot_O2/string.o (.text)
            build/asm/osInvalICache.o (.text)
            build/src/libultra_boot_O1/osCreateMesgQueue.o (.text)
            build/asm/osInvalDCache.o (.text)
            build/src/libultra_boot_O2/__osSiDeviceBusy.o (.text)
            build/src/libultra_boot_O1/osJamMesg.o (.text)
            build/src/libultra_boot_O1/osSetThreadPri.o (.text)
            build/src/libultra_boot_O1/osGetThreadPri.o (.text)
            build/src/libultra_boot_O2/__osEPiRawReadIo.o (.text)
            build/src/libultra_boot_O2/osViSwapBuffer.o (.text)
            build/src/libultra_boot_O2/__osEPiRawStartDma.o (.text)
            build/asm/bcmp.o (.text)
            build/src/libultra_boot_O1/osGetTime.o (.text)
            build/src/libultra_boot_O1/timerintr.o (.text)
            build/asm/osGetCount.o (.text)
            build/src/libultra_boot_O1/__osSetGlobalIntMask.o (.text)
            build/asm/__osSetCompare.o (.text)
            build/asm/bcopy.o (.text)
            build/src/libultra_boot_O1/__osResetGlobalIntMask.o (.text)
            build/asm/__osDisableInt.o (.text)
            build/asm/__osRestoreInt.o (.text)
            build/src/libultra_boot_O2/osViModeNtscLan1.o (.text)
            build/src/libultra_boot_O2/osViModeMpalLan1.o (.text)
            build/src/libultra_boot_O2/__osViInit.o (.text)
            build/src/libultra_boot_O2/__osViSwapContext.o (.text)
            build/src/libultra_boot_O2/osPiGetCmdQueue.o (.text)
            build/src/libultra_boot_O2/osEPiReadIo.o (.text)
            build/src/libultra_boot_O2/osViSetSpecialFeatures.o (.text)
            build/src/libultra_boot_O2/osCartRomInit.o (.text)
            build/src/libultra_boot_O2/osViModeFpalLan1.o (.text)
            build/asm/__osSetFpcCsr.o (.text)
            build/asm/__osGetFpcCsr.o (.text)
            build/src/libultra_boot_O2/osEPiWriteIo.o (.text)
            build/asm/osMapTLBRdb.o (.text)
            build/src/libultra_boot_O1/osYieldThread.o (.text)
            build/asm/__osGetCause.o (.text)
            build/src/libultra_boot_O2/__osEPiRawWriteIo.o (.text)
            build/src/libultra_boot_O2/_Litob.o (.text)
            build/src/libultra_boot_O2/ldiv.o (.text)
            build/src/libultra_boot_O2/_Ldtob.o (.text)
            build/src/boot/build.o (.text)
            build/src/libultra_boot_O2/__osSiRawWriteIo.o (.text)
            build/src/libultra_boot_O2/vimgr.o (.text)
            build/src/libultra_boot_O2/__osViGetCurrentContext.o (.text)
            build/src/libultra_boot_O1/osStartThread.o (.text)
            build/src/libultra_boot_O2/osViSetYScale.o (.text)
            build/src/libultra_boot_O2/osViSetXScale.o (.text)
            build/src/libultra_boot_O1/__osSetHWIntrRoutine.o (.text)
            build/src/libultra_boot_O1/__osGetHWIntrRoutine.o (.text)
            build/asm/__osSetWatchLo.o (.text)
            build/data/rsp_boot.text.o (.text)
        _bootSegmentTextEnd = .;
    _bootSegmentTextSize = ABSOLUTE( _bootSegmentTextEnd - _bootSegmentTextStart );
        _bootSegmentDataStart = .;
            build/src/boot/boot_main.o (.data)
            build/src/boot/idle.o (.data)
            build/src/boot/viconfig.o (.data)
            build/src/boot/z_std_dma.o (.data)
            build/src/boot/yaz0.o (.data)
            build/src/boot/z_locale.o (.data)
            build/src/boot/assert.o (.data)
            build/src/boot/is_debug.o (.data)
            build/src/libultra_boot_O2/osDriveRomInit.o (.data)
            build/asm/mio0.o (.data)
            build/src/boot/stackcheck.o (.data)
            build/src/boot/logutils.o (.data)
            build/src/libultra_boot_O2/sprintf.o (.data)
            build/src/libultra_boot_O1/piacs.o (.data)
            build/src/libultra_boot_O1/osSendMesg.o (.data)
            build/src/libultra_boot_O1/osStopThread.o (.data)
            build/src/libultra_boot_O1/osViExtendVStart.o (.data)
            build/src/libultra_boot_O1/osViModePalLan1.o (.data)
            build/src/libultra_boot_O1/osRecvMesg.o (.data)
            build/src/libultra_boot_O1/initialize.o (.data)
            build/asm/libm.o (.data)
            build/asm/exceptasm.o (.data)
            build/src/libultra_boot_O1/__osDequeueThread.o (.data)
            build/src/libultra_boot_O1/osDestroyThread.o (.data)
            build/asm/bzero.o (.data)
            build/src/libultra_boot_O1/osCreateThread.o (.data)
            build/asm/__osSetSR.o (.data)
            build/asm/__osGetSR.o (.data)
            build/asm/osWritebackDCache.o (.data)
            build/src/libultra_boot_O2/osViGetNextFramebuffer.o (.data)
            build/src/libultra_boot_O2/pimgr.o (.data)
            build/src/libultra_boot_O2/__osDevMgrMain.o (.data)
            build/src/libultra_boot_O2/__osPiRawStartDma.o (.data)
            build/src/libultra_boot_O1/osVirtualToPhysical.o (.data)
            build/src/libultra_boot_O2/osViBlack.o (.data)
            build/src/libultra_boot_O2/__osSiRawReadIo.o (.data)
            build/src/libultra_boot_O1/osGetThreadId.o (.data)
            build/asm/osSetIntMask.o (.data)
            build/src/libultra_boot_O2/osViSetMode.o (.data)
            build/asm/__osProbeTLB.o (.data)
            build/src/libultra_boot_O1/osGetMemSize.o (.data)
            build/src/libultra_boot_O1/osSetEventMesg.o (.data)
            build/src/libultra_boot_O2/_Printf.o (.data)
            build/asm/osUnmapTLBAll.o (.data)
            build/src/libultra_boot_O2/osEPiStartDma.o (.data)
            build/src/libultra_boot_O2/string.o (.data)
            build/asm/osInvalICache.o (.data)
            build/src/libultra_boot_O1/osCreateMesgQueue.o (.data)
            build/asm/osInvalDCache.o (.data)
            build/src/libultra_boot_O2/__osSiDeviceBusy.o (.data)
            build/src/libultra_boot_O1/osJamMesg.o (.data)
            build/src/libultra_boot_O1/osSetThreadPri.o (.data)
            build/src/libultra_boot_O1/osGetThreadPri.o (.data)
            build/src/libultra_boot_O2/__osEPiRawReadIo.o (.data)
            build/src/libultra_boot_O2/osViSwapBuffer.o (.data)
            build/src/libultra_boot_O2/__osEPiRawStartDma.o (.data)
            build/asm/bcmp.o (.data)
            build/src/libultra_boot_O1/osGetTime.o (.data)
            build/src/libultra_boot_O1/timerintr.o (.data)
            build/asm/osGetCount.o (.data)
            build/src/libultra_boot_O1/__osSetGlobalIntMask.o (.data)
            build/asm/__osSetCompare.o (.data)
            build/asm/bcopy.o (.data)
            build/src/libultra_boot_O1/__osResetGlobalIntMask.o (.data)
            build/asm/__osDisableInt.o (.data)
            build/asm/__osRestoreInt.o (.data)
            build/src/libultra_boot_O2/osViModeNtscLan1.o (.data)
            build/src/libultra_boot_O2/osViModeMpalLan1.o (.data)
            build/src/libultra_boot_O2/__osViInit.o (.data)
            build/src/libultra_boot_O2/__osViSwapContext.o (.data)
            build/src/libultra_boot_O2/osPiGetCmdQueue.o (.data)
            build/src/libultra_boot_O2/osEPiReadIo.o (.data)
            build/src/libultra_boot_O2/osViSetSpecialFeatures.o (.data)
            build/src/libultra_boot_O2/osCartRomInit.o (.data)
            build/src/libultra_boot_O2/osViModeFpalLan1.o (.data)
            build/asm/__osSetFpcCsr.o (.data)
            build/asm/__osGetFpcCsr.o (.data)
            build/src/libultra_boot_O2/osEPiWriteIo.o (.data)
            build/asm/osMapTLBRdb.o (.data)
            build/src/libultra_boot_O1/osYieldThread.o (.data)
            build/asm/__osGetCause.o (.data)
            build/src/libultra_boot_O2/__osEPiRawWriteIo.o (.data)
            build/src/libultra_boot_O2/_Litob.o (.data)
            build/src/libultra_boot_O2/ldiv.o (.data)
            build/src/libultra_boot_O2/_Ldtob.o (.data)
            build/src/boot/build.o (.data)
            build/src/libultra_boot_O2/__osSiRawWriteIo.o (.data)
            build/src/libultra_boot_O2/vimgr.o (.data)
            build/src/libultra_boot_O2/__osViGetCurrentContext.o (.data)
            build/src/libultra_boot_O1/osStartThread.o (.data)
            build/src/libultra_boot_O2/osViSetYScale.o (.data)
            build/src/libultra_boot_O2/osViSetXScale.o (.data)
            build/src/libultra_boot_O1/__osSetHWIntrRoutine.o (.data)
            build/src/libultra_boot_O1/__osGetHWIntrRoutine.o (.data)
            build/asm/__osSetWatchLo.o (.data)
            build/data/rsp_boot.text.o (.data)
        _bootSegmentDataEnd = .;
    _bootSegmentDataSize = ABSOLUTE( _bootSegmentDataEnd - _bootSegmentDataStart );
        _bootSegmentRoDataStart = .;
            build/src/boot/boot_main.o (.rodata)
            build/src/boot/idle.o (.rodata)
            build/src/boot/viconfig.o (.rodata)
            build/src/boot/z_std_dma.o (.rodata)
            build/src/boot/yaz0.o (.rodata)
            build/src/boot/z_locale.o (.rodata)
            build/src/boot/assert.o (.rodata)
            build/src/boot/is_debug.o (.rodata)
            build/src/libultra_boot_O2/osDriveRomInit.o (.rodata)
            build/asm/mio0.o (.rodata)
            build/src/boot/stackcheck.o (.rodata)
            build/src/boot/logutils.o (.rodata)
            build/src/libultra_boot_O2/sprintf.o (.rodata)
            build/src/libultra_boot_O1/piacs.o (.rodata)
            build/src/libultra_boot_O1/osSendMesg.o (.rodata)
            build/src/libultra_boot_O1/osStopThread.o (.rodata)
            build/src/libultra_boot_O1/osViExtendVStart.o (.rodata)
            build/src/libultra_boot_O1/osViModePalLan1.o (.rodata)
            build/src/libultra_boot_O1/osRecvMesg.o (.rodata)
            build/src/libultra_boot_O1/initialize.o (.rodata)
            build/asm/libm.o (.rodata)
            build/asm/exceptasm.o (.rodata)
            build/src/libultra_boot_O1/__osDequeueThread.o (.rodata)
            build/src/libultra_boot_O1/osDestroyThread.o (.rodata)
            build/asm/bzero.o (.rodata)
            build/src/libultra_boot_O1/osCreateThread.o (.rodata)
            build/asm/__osSetSR.o (.rodata)
            build/asm/__osGetSR.o (.rodata)
            build/asm/osWritebackDCache.o (.rodata)
            build/src/libultra_boot_O2/osViGetNextFramebuffer.o (.rodata)
            build/src/libultra_boot_O2/pimgr.o (.rodata)
            build/src/libultra_boot_O2/__osDevMgrMain.o (.rodata)
            build/src/libultra_boot_O2/__osPiRawStartDma.o (.rodata)
            build/src/libultra_boot_O1/osVirtualToPhysical.o (.rodata)
            build/src/libultra_boot_O2/osViBlack.o (.rodata)
            build/src/libultra_boot_O2/__osSiRawReadIo.o (.rodata)
            build/src/libultra_boot_O1/osGetThreadId.o (.rodata)
            build/asm/osSetIntMask.o (.rodata)
            build/src/libultra_boot_O2/osViSetMode.o (.rodata)
            build/asm/__osProbeTLB.o (.rodata)
            build/src/libultra_boot_O1/osGetMemSize.o (.rodata)
            build/src/libultra_boot_O1/osSetEventMesg.o (.rodata)
            build/src/libultra_boot_O2/_Printf.o (.rodata)
            build/asm/osUnmapTLBAll.o (.rodata)
            build/src/libultra_boot_O2/osEPiStartDma.o (.rodata)
            build/src/libultra_boot_O2/string.o (.rodata)
            build/asm/osInvalICache.o (.rodata)
            build/src/libultra_boot_O1/osCreateMesgQueue.o (.rodata)
            build/asm/osInvalDCache.o (.rodata)
            build/src/libultra_boot_O2/__osSiDeviceBusy.o (.rodata)
            build/src/libultra_boot_O1/osJamMesg.o (.rodata)
            build/src/libultra_boot_O1/osSetThreadPri.o (.rodata)
            build/src/libultra_boot_O1/osGetThreadPri.o (.rodata)
            build/src/libultra_boot_O2/__osEPiRawReadIo.o (.rodata)
            build/src/libultra_boot_O2/osViSwapBuffer.o (.rodata)
            build/src/libultra_boot_O2/__osEPiRawStartDma.o (.rodata)
            build/asm/bcmp.o (.rodata)
            build/src/libultra_boot_O1/osGetTime.o (.rodata)
            build/src/libultra_boot_O1/timerintr.o (.rodata)
            build/asm/osGetCount.o (.rodata)
            build/src/libultra_boot_O1/__osSetGlobalIntMask.o (.rodata)
            build/asm/__osSetCompare.o (.rodata)
            build/asm/bcopy.o (.rodata)
            build/src/libultra_boot_O1/__osResetGlobalIntMask.o (.rodata)
            build/asm/__osDisableInt.o (.rodata)
            build/asm/__osRestoreInt.o (.rodata)
            build/src/libultra_boot_O2/osViModeNtscLan1.o (.rodata)
            build/src/libultra_boot_O2/osViModeMpalLan1.o (.rodata)
            build/src/libultra_boot_O2/__osViInit.o (.rodata)
            build/src/libultra_boot_O2/__osViSwapContext.o (.rodata)
            build/src/libultra_boot_O2/osPiGetCmdQueue.o (.rodata)
            build/src/libultra_boot_O2/osEPiReadIo.o (.rodata)
            build/src/libultra_boot_O2/osViSetSpecialFeatures.o (.rodata)
            build/src/libultra_boot_O2/osCartRomInit.o (.rodata)
            build/src/libultra_boot_O2/osViModeFpalLan1.o (.rodata)
            build/asm/__osSetFpcCsr.o (.rodata)
            build/asm/__osGetFpcCsr.o (.rodata)
            build/src/libultra_boot_O2/osEPiWriteIo.o (.rodata)
            build/asm/osMapTLBRdb.o (.rodata)
            build/src/libultra_boot_O1/osYieldThread.o (.rodata)
            build/asm/__osGetCause.o (.rodata)
            build/src/libultra_boot_O2/__osEPiRawWriteIo.o (.rodata)
            build/src/libultra_boot_O2/_Litob.o (.rodata)
            build/src/libultra_boot_O2/ldiv.o (.rodata)
            build/src/libultra_boot_O2/_Ldtob.o (.rodata)
            build/src/boot/build.o (.rodata)
            build/src/libultra_boot_O2/__osSiRawWriteIo.o (.rodata)
            build/src/libultra_boot_O2/vimgr.o (.rodata)
            build/src/libultra_boot_O2/__osViGetCurrentContext.o (.rodata)
            build/src/libultra_boot_O1/osStartThread.o (.rodata)
            build/src/libultra_boot_O2/osViSetYScale.o (.rodata)
            build/src/libultra_boot_O2/osViSetXScale.o (.rodata)
            build/src/libultra_boot_O1/__osSetHWIntrRoutine.o (.rodata)
            build/src/libultra_boot_O1/__osGetHWIntrRoutine.o (.rodata)
            build/asm/__osSetWatchLo.o (.rodata)
            build/data/rsp_boot.text.o (.rodata)
        _bootSegmentRoDataEnd = .;
    _bootSegmentRoDataSize = ABSOLUTE( _bootSegmentRoDataEnd - _bootSegmentRoDataStart );
        _bootSegmentSDataStart = .;
            build/src/boot/boot_main.o (.sdata)
            build/src/boot/idle.o (.sdata)
            build/src/boot/viconfig.o (.sdata)
            build/src/boot/z_std_dma.o (.sdata)
            build/src/boot/yaz0.o (.sdata)
            build/src/boot/z_locale.o (.sdata)
            build/src/boot/assert.o (.sdata)
            build/src/boot/is_debug.o (.sdata)
            build/src/libultra_boot_O2/osDriveRomInit.o (.sdata)
            build/asm/mio0.o (.sdata)
            build/src/boot/stackcheck.o (.sdata)
            build/src/boot/logutils.o (.sdata)
            build/src/libultra_boot_O2/sprintf.o (.sdata)
            build/src/libultra_boot_O1/piacs.o (.sdata)
            build/src/libultra_boot_O1/osSendMesg.o (.sdata)
            build/src/libultra_boot_O1/osStopThread.o (.sdata)
            build/src/libultra_boot_O1/osViExtendVStart.o (.sdata)
            build/src/libultra_boot_O1/osViModePalLan1.o (.sdata)
            build/src/libultra_boot_O1/osRecvMesg.o (.sdata)
            build/src/libultra_boot_O1/initialize.o (.sdata)
            build/asm/libm.o (.sdata)
            build/asm/exceptasm.o (.sdata)
            build/src/libultra_boot_O1/__osDequeueThread.o (.sdata)
            build/src/libultra_boot_O1/osDestroyThread.o (.sdata)
            build/asm/bzero.o (.sdata)
            build/src/libultra_boot_O1/osCreateThread.o (.sdata)
            build/asm/__osSetSR.o (.sdata)
            build/asm/__osGetSR.o (.sdata)
            build/asm/osWritebackDCache.o (.sdata)
            build/src/libultra_boot_O2/osViGetNextFramebuffer.o (.sdata)
            build/src/libultra_boot_O2/pimgr.o (.sdata)
            build/src/libultra_boot_O2/__osDevMgrMain.o (.sdata)
            build/src/libultra_boot_O2/__osPiRawStartDma.o (.sdata)
            build/src/libultra_boot_O1/osVirtualToPhysical.o (.sdata)
            build/src/libultra_boot_O2/osViBlack.o (.sdata)
            build/src/libultra_boot_O2/__osSiRawReadIo.o (.sdata)
            build/src/libultra_boot_O1/osGetThreadId.o (.sdata)
            build/asm/osSetIntMask.o (.sdata)
            build/src/libultra_boot_O2/osViSetMode.o (.sdata)
            build/asm/__osProbeTLB.o (.sdata)
            build/src/libultra_boot_O1/osGetMemSize.o (.sdata)
            build/src/libultra_boot_O1/osSetEventMesg.o (.sdata)
            build/src/libultra_boot_O2/_Printf.o (.sdata)
            build/asm/osUnmapTLBAll.o (.sdata)
            build/src/libultra_boot_O2/osEPiStartDma.o (.sdata)
            build/src/libultra_boot_O2/string.o (.sdata)
            build/asm/osInvalICache.o (.sdata)
            build/src/libultra_boot_O1/osCreateMesgQueue.o (.sdata)
            build/asm/osInvalDCache.o (.sdata)
            build/src/libultra_boot_O2/__osSiDeviceBusy.o (.sdata)
            build/src/libultra_boot_O1/osJamMesg.o (.sdata)
            build/src/libultra_boot_O1/osSetThreadPri.o (.sdata)
            build/src/libultra_boot_O1/osGetThreadPri.o (.sdata)
            build/src/libultra_boot_O2/__osEPiRawReadIo.o (.sdata)
            build/src/libultra_boot_O2/osViSwapBuffer.o (.sdata)
            build/src/libultra_boot_O2/__osEPiRawStartDma.o (.sdata)
            build/asm/bcmp.o (.sdata)
            build/src/libultra_boot_O1/osGetTime.o (.sdata)
            build/src/libultra_boot_O1/timerintr.o (.sdata)
            build/asm/osGetCount.o (.sdata)
            build/src/libultra_boot_O1/__osSetGlobalIntMask.o (.sdata)
            build/asm/__osSetCompare.o (.sdata)
            build/asm/bcopy.o (.sdata)
            build/src/libultra_boot_O1/__osResetGlobalIntMask.o (.sdata)
            build/asm/__osDisableInt.o (.sdata)
            build/asm/__osRestoreInt.o (.sdata)
            build/src/libultra_boot_O2/osViModeNtscLan1.o (.sdata)
            build/src/libultra_boot_O2/osViModeMpalLan1.o (.sdata)
            build/src/libultra_boot_O2/__osViInit.o (.sdata)
            build/src/libultra_boot_O2/__osViSwapContext.o (.sdata)
            build/src/libultra_boot_O2/osPiGetCmdQueue.o (.sdata)
            build/src/libultra_boot_O2/osEPiReadIo.o (.sdata)
            build/src/libultra_boot_O2/osViSetSpecialFeatures.o (.sdata)
            build/src/libultra_boot_O2/osCartRomInit.o (.sdata)
            build/src/libultra_boot_O2/osViModeFpalLan1.o (.sdata)
            build/asm/__osSetFpcCsr.o (.sdata)
            build/asm/__osGetFpcCsr.o (.sdata)
            build/src/libultra_boot_O2/osEPiWriteIo.o (.sdata)
            build/asm/osMapTLBRdb.o (.sdata)
            build/src/libultra_boot_O1/osYieldThread.o (.sdata)
            build/asm/__osGetCause.o (.sdata)
            build/src/libultra_boot_O2/__osEPiRawWriteIo.o (.sdata)
            build/src/libultra_boot_O2/_Litob.o (.sdata)
            build/src/libultra_boot_O2/ldiv.o (.sdata)
            build/src/libultra_boot_O2/_Ldtob.o (.sdata)
            build/src/boot/build.o (.sdata)
            build/src/libultra_boot_O2/__osSiRawWriteIo.o (.sdata)
            build/src/libultra_boot_O2/vimgr.o (.sdata)
            build/src/libultra_boot_O2/__osViGetCurrentContext.o (.sdata)
            build/src/libultra_boot_O1/osStartThread.o (.sdata)
            build/src/libultra_boot_O2/osViSetYScale.o (.sdata)
            build/src/libultra_boot_O2/osViSetXScale.o (.sdata)
            build/src/libultra_boot_O1/__osSetHWIntrRoutine.o (.sdata)
            build/src/libultra_boot_O1/__osGetHWIntrRoutine.o (.sdata)
            build/asm/__osSetWatchLo.o (.sdata)
            build/data/rsp_boot.text.o (.sdata)
        . = ALIGN(0x10);
        _bootSegmentSDataEnd = .;
        _bootSegmentOvlStart = .;
            build/src/boot/boot_main.o (.ovl)
            build/src/boot/idle.o (.ovl)
            build/src/boot/viconfig.o (.ovl)
            build/src/boot/z_std_dma.o (.ovl)
            build/src/boot/yaz0.o (.ovl)
            build/src/boot/z_locale.o (.ovl)
            build/src/boot/assert.o (.ovl)
            build/src/boot/is_debug.o (.ovl)
            build/src/libultra_boot_O2/osDriveRomInit.o (.ovl)
            build/asm/mio0.o (.ovl)
            build/src/boot/stackcheck.o (.ovl)
            build/src/boot/logutils.o (.ovl)
            build/src/libultra_boot_O2/sprintf.o (.ovl)
            build/src/libultra_boot_O1/piacs.o (.ovl)
            build/src/libultra_boot_O1/osSendMesg.o (.ovl)
            build/src/libultra_boot_O1/osStopThread.o (.ovl)
            build/src/libultra_boot_O1/osViExtendVStart.o (.ovl)
            build/src/libultra_boot_O1/osViModePalLan1.o (.ovl)
            build/src/libultra_boot_O1/osRecvMesg.o (.ovl)
            build/src/libultra_boot_O1/initialize.o (.ovl)
            build/asm/libm.o (.ovl)
            build/asm/exceptasm.o (.ovl)
            build/src/libultra_boot_O1/__osDequeueThread.o (.ovl)
            build/src/libultra_boot_O1/osDestroyThread.o (.ovl)
            build/asm/bzero.o (.ovl)
            build/src/libultra_boot_O1/osCreateThread.o (.ovl)
            build/asm/__osSetSR.o (.ovl)
            build/asm/__osGetSR.o (.ovl)
            build/asm/osWritebackDCache.o (.ovl)
            build/src/libultra_boot_O2/osViGetNextFramebuffer.o (.ovl)
            build/src/libultra_boot_O2/pimgr.o (.ovl)
            build/src/libultra_boot_O2/__osDevMgrMain.o (.ovl)
            build/src/libultra_boot_O2/__osPiRawStartDma.o (.ovl)
            build/src/libultra_boot_O1/osVirtualToPhysical.o (.ovl)
            build/src/libultra_boot_O2/osViBlack.o (.ovl)
            build/src/libultra_boot_O2/__osSiRawReadIo.o (.ovl)
            build/src/libultra_boot_O1/osGetThreadId.o (.ovl)
            build/asm/osSetIntMask.o (.ovl)
            build/src/libultra_boot_O2/osViSetMode.o (.ovl)
            build/asm/__osProbeTLB.o (.ovl)
            build/src/libultra_boot_O1/osGetMemSize.o (.ovl)
            build/src/libultra_boot_O1/osSetEventMesg.o (.ovl)
            build/src/libultra_boot_O2/_Printf.o (.ovl)
            build/asm/osUnmapTLBAll.o (.ovl)
            build/src/libultra_boot_O2/osEPiStartDma.o (.ovl)
            build/src/libultra_boot_O2/string.o (.ovl)
            build/asm/osInvalICache.o (.ovl)
            build/src/libultra_boot_O1/osCreateMesgQueue.o (.ovl)
            build/asm/osInvalDCache.o (.ovl)
            build/src/libultra_boot_O2/__osSiDeviceBusy.o (.ovl)
            build/src/libultra_boot_O1/osJamMesg.o (.ovl)
            build/src/libultra_boot_O1/osSetThreadPri.o (.ovl)
            build/src/libultra_boot_O1/osGetThreadPri.o (.ovl)
            build/src/libultra_boot_O2/__osEPiRawReadIo.o (.ovl)
            build/src/libultra_boot_O2/osViSwapBuffer.o (.ovl)
            build/src/libultra_boot_O2/__osEPiRawStartDma.o (.ovl)
            build/asm/bcmp.o (.ovl)
            build/src/libultra_boot_O1/osGetTime.o (.ovl)
            build/src/libultra_boot_O1/timerintr.o (.ovl)
            build/asm/osGetCount.o (.ovl)
            build/src/libultra_boot_O1/__osSetGlobalIntMask.o (.ovl)
            build/asm/__osSetCompare.o (.ovl)
            build/asm/bcopy.o (.ovl)
            build/src/libultra_boot_O1/__osResetGlobalIntMask.o (.ovl)
            build/asm/__osDisableInt.o (.ovl)
            build/asm/__osRestoreInt.o (.ovl)
            build/src/libultra_boot_O2/osViModeNtscLan1.o (.ovl)
            build/src/libultra_boot_O2/osViModeMpalLan1.o (.ovl)
            build/src/libultra_boot_O2/__osViInit.o (.ovl)
            build/src/libultra_boot_O2/__osViSwapContext.o (.ovl)
            build/src/libultra_boot_O2/osPiGetCmdQueue.o (.ovl)
            build/src/libultra_boot_O2/osEPiReadIo.o (.ovl)
            build/src/libultra_boot_O2/osViSetSpecialFeatures.o (.ovl)
            build/src/libultra_boot_O2/osCartRomInit.o (.ovl)
            build/src/libultra_boot_O2/osViModeFpalLan1.o (.ovl)
            build/asm/__osSetFpcCsr.o (.ovl)
            build/asm/__osGetFpcCsr.o (.ovl)
            build/src/libultra_boot_O2/osEPiWriteIo.o (.ovl)
            build/asm/osMapTLBRdb.o (.ovl)
            build/src/libultra_boot_O1/osYieldThread.o (.ovl)
            build/asm/__osGetCause.o (.ovl)
            build/src/libultra_boot_O2/__osEPiRawWriteIo.o (.ovl)
            build/src/libultra_boot_O2/_Litob.o (.ovl)
            build/src/libultra_boot_O2/ldiv.o (.ovl)
            build/src/libultra_boot_O2/_Ldtob.o (.ovl)
            build/src/boot/build.o (.ovl)
            build/src/libultra_boot_O2/__osSiRawWriteIo.o (.ovl)
            build/src/libultra_boot_O2/vimgr.o (.ovl)
            build/src/libultra_boot_O2/__osViGetCurrentContext.o (.ovl)
            build/src/libultra_boot_O1/osStartThread.o (.ovl)
            build/src/libultra_boot_O2/osViSetYScale.o (.ovl)
            build/src/libultra_boot_O2/osViSetXScale.o (.ovl)
            build/src/libultra_boot_O1/__osSetHWIntrRoutine.o (.ovl)
            build/src/libultra_boot_O1/__osGetHWIntrRoutine.o (.ovl)
            build/asm/__osSetWatchLo.o (.ovl)
            build/data/rsp_boot.text.o (.ovl)
        . = ALIGN(0x10);
        _bootSegmentOvlEnd = .;
    }
    _RomSize += ( _bootSegmentOvlEnd - _bootSegmentTextStart );
    _bootSegmentRomEnd = _RomSize;

    ..boot.bss ADDR(..boot) + SIZEOF(..boot) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bootSegmentBssStart = .;
            build/src/boot/boot_main.o (.sbss)
            build/src/boot/idle.o (.sbss)
            build/src/boot/viconfig.o (.sbss)
            build/src/boot/z_std_dma.o (.sbss)
            build/src/boot/yaz0.o (.sbss)
            build/src/boot/z_locale.o (.sbss)
            build/src/boot/assert.o (.sbss)
            build/src/boot/is_debug.o (.sbss)
            build/src/libultra_boot_O2/osDriveRomInit.o (.sbss)
            build/asm/mio0.o (.sbss)
            build/src/boot/stackcheck.o (.sbss)
            build/src/boot/logutils.o (.sbss)
            build/src/libultra_boot_O2/sprintf.o (.sbss)
            build/src/libultra_boot_O1/piacs.o (.sbss)
            build/src/libultra_boot_O1/osSendMesg.o (.sbss)
            build/src/libultra_boot_O1/osStopThread.o (.sbss)
            build/src/libultra_boot_O1/osViExtendVStart.o (.sbss)
            build/src/libultra_boot_O1/osViModePalLan1.o (.sbss)
            build/src/libultra_boot_O1/osRecvMesg.o (.sbss)
            build/src/libultra_boot_O1/initialize.o (.sbss)
            build/asm/libm.o (.sbss)
            build/asm/exceptasm.o (.sbss)
            build/src/libultra_boot_O1/__osDequeueThread.o (.sbss)
            build/src/libultra_boot_O1/osDestroyThread.o (.sbss)
            build/asm/bzero.o (.sbss)
            build/src/libultra_boot_O1/osCreateThread.o (.sbss)
            build/asm/__osSetSR.o (.sbss)
            build/asm/__osGetSR.o (.sbss)
            build/asm/osWritebackDCache.o (.sbss)
            build/src/libultra_boot_O2/osViGetNextFramebuffer.o (.sbss)
            build/src/libultra_boot_O2/pimgr.o (.sbss)
            build/src/libultra_boot_O2/__osDevMgrMain.o (.sbss)
            build/src/libultra_boot_O2/__osPiRawStartDma.o (.sbss)
            build/src/libultra_boot_O1/osVirtualToPhysical.o (.sbss)
            build/src/libultra_boot_O2/osViBlack.o (.sbss)
            build/src/libultra_boot_O2/__osSiRawReadIo.o (.sbss)
            build/src/libultra_boot_O1/osGetThreadId.o (.sbss)
            build/asm/osSetIntMask.o (.sbss)
            build/src/libultra_boot_O2/osViSetMode.o (.sbss)
            build/asm/__osProbeTLB.o (.sbss)
            build/src/libultra_boot_O1/osGetMemSize.o (.sbss)
            build/src/libultra_boot_O1/osSetEventMesg.o (.sbss)
            build/src/libultra_boot_O2/_Printf.o (.sbss)
            build/asm/osUnmapTLBAll.o (.sbss)
            build/src/libultra_boot_O2/osEPiStartDma.o (.sbss)
            build/src/libultra_boot_O2/string.o (.sbss)
            build/asm/osInvalICache.o (.sbss)
            build/src/libultra_boot_O1/osCreateMesgQueue.o (.sbss)
            build/asm/osInvalDCache.o (.sbss)
            build/src/libultra_boot_O2/__osSiDeviceBusy.o (.sbss)
            build/src/libultra_boot_O1/osJamMesg.o (.sbss)
            build/src/libultra_boot_O1/osSetThreadPri.o (.sbss)
            build/src/libultra_boot_O1/osGetThreadPri.o (.sbss)
            build/src/libultra_boot_O2/__osEPiRawReadIo.o (.sbss)
            build/src/libultra_boot_O2/osViSwapBuffer.o (.sbss)
            build/src/libultra_boot_O2/__osEPiRawStartDma.o (.sbss)
            build/asm/bcmp.o (.sbss)
            build/src/libultra_boot_O1/osGetTime.o (.sbss)
            build/src/libultra_boot_O1/timerintr.o (.sbss)
            build/asm/osGetCount.o (.sbss)
            build/src/libultra_boot_O1/__osSetGlobalIntMask.o (.sbss)
            build/asm/__osSetCompare.o (.sbss)
            build/asm/bcopy.o (.sbss)
            build/src/libultra_boot_O1/__osResetGlobalIntMask.o (.sbss)
            build/asm/__osDisableInt.o (.sbss)
            build/asm/__osRestoreInt.o (.sbss)
            build/src/libultra_boot_O2/osViModeNtscLan1.o (.sbss)
            build/src/libultra_boot_O2/osViModeMpalLan1.o (.sbss)
            build/src/libultra_boot_O2/__osViInit.o (.sbss)
            build/src/libultra_boot_O2/__osViSwapContext.o (.sbss)
            build/src/libultra_boot_O2/osPiGetCmdQueue.o (.sbss)
            build/src/libultra_boot_O2/osEPiReadIo.o (.sbss)
            build/src/libultra_boot_O2/osViSetSpecialFeatures.o (.sbss)
            build/src/libultra_boot_O2/osCartRomInit.o (.sbss)
            build/src/libultra_boot_O2/osViModeFpalLan1.o (.sbss)
            build/asm/__osSetFpcCsr.o (.sbss)
            build/asm/__osGetFpcCsr.o (.sbss)
            build/src/libultra_boot_O2/osEPiWriteIo.o (.sbss)
            build/asm/osMapTLBRdb.o (.sbss)
            build/src/libultra_boot_O1/osYieldThread.o (.sbss)
            build/asm/__osGetCause.o (.sbss)
            build/src/libultra_boot_O2/__osEPiRawWriteIo.o (.sbss)
            build/src/libultra_boot_O2/_Litob.o (.sbss)
            build/src/libultra_boot_O2/ldiv.o (.sbss)
            build/src/libultra_boot_O2/_Ldtob.o (.sbss)
            build/src/boot/build.o (.sbss)
            build/src/libultra_boot_O2/__osSiRawWriteIo.o (.sbss)
            build/src/libultra_boot_O2/vimgr.o (.sbss)
            build/src/libultra_boot_O2/__osViGetCurrentContext.o (.sbss)
            build/src/libultra_boot_O1/osStartThread.o (.sbss)
            build/src/libultra_boot_O2/osViSetYScale.o (.sbss)
            build/src/libultra_boot_O2/osViSetXScale.o (.sbss)
            build/src/libultra_boot_O1/__osSetHWIntrRoutine.o (.sbss)
            build/src/libultra_boot_O1/__osGetHWIntrRoutine.o (.sbss)
            build/asm/__osSetWatchLo.o (.sbss)
            build/data/rsp_boot.text.o (.sbss)
            build/src/boot/boot_main.o (.scommon)
            build/src/boot/idle.o (.scommon)
            build/src/boot/viconfig.o (.scommon)
            build/src/boot/z_std_dma.o (.scommon)
            build/src/boot/yaz0.o (.scommon)
            build/src/boot/z_locale.o (.scommon)
            build/src/boot/assert.o (.scommon)
            build/src/boot/is_debug.o (.scommon)
            build/src/libultra_boot_O2/osDriveRomInit.o (.scommon)
            build/asm/mio0.o (.scommon)
            build/src/boot/stackcheck.o (.scommon)
            build/src/boot/logutils.o (.scommon)
            build/src/libultra_boot_O2/sprintf.o (.scommon)
            build/src/libultra_boot_O1/piacs.o (.scommon)
            build/src/libultra_boot_O1/osSendMesg.o (.scommon)
            build/src/libultra_boot_O1/osStopThread.o (.scommon)
            build/src/libultra_boot_O1/osViExtendVStart.o (.scommon)
            build/src/libultra_boot_O1/osViModePalLan1.o (.scommon)
            build/src/libultra_boot_O1/osRecvMesg.o (.scommon)
            build/src/libultra_boot_O1/initialize.o (.scommon)
            build/asm/libm.o (.scommon)
            build/asm/exceptasm.o (.scommon)
            build/src/libultra_boot_O1/__osDequeueThread.o (.scommon)
            build/src/libultra_boot_O1/osDestroyThread.o (.scommon)
            build/asm/bzero.o (.scommon)
            build/src/libultra_boot_O1/osCreateThread.o (.scommon)
            build/asm/__osSetSR.o (.scommon)
            build/asm/__osGetSR.o (.scommon)
            build/asm/osWritebackDCache.o (.scommon)
            build/src/libultra_boot_O2/osViGetNextFramebuffer.o (.scommon)
            build/src/libultra_boot_O2/pimgr.o (.scommon)
            build/src/libultra_boot_O2/__osDevMgrMain.o (.scommon)
            build/src/libultra_boot_O2/__osPiRawStartDma.o (.scommon)
            build/src/libultra_boot_O1/osVirtualToPhysical.o (.scommon)
            build/src/libultra_boot_O2/osViBlack.o (.scommon)
            build/src/libultra_boot_O2/__osSiRawReadIo.o (.scommon)
            build/src/libultra_boot_O1/osGetThreadId.o (.scommon)
            build/asm/osSetIntMask.o (.scommon)
            build/src/libultra_boot_O2/osViSetMode.o (.scommon)
            build/asm/__osProbeTLB.o (.scommon)
            build/src/libultra_boot_O1/osGetMemSize.o (.scommon)
            build/src/libultra_boot_O1/osSetEventMesg.o (.scommon)
            build/src/libultra_boot_O2/_Printf.o (.scommon)
            build/asm/osUnmapTLBAll.o (.scommon)
            build/src/libultra_boot_O2/osEPiStartDma.o (.scommon)
            build/src/libultra_boot_O2/string.o (.scommon)
            build/asm/osInvalICache.o (.scommon)
            build/src/libultra_boot_O1/osCreateMesgQueue.o (.scommon)
            build/asm/osInvalDCache.o (.scommon)
            build/src/libultra_boot_O2/__osSiDeviceBusy.o (.scommon)
            build/src/libultra_boot_O1/osJamMesg.o (.scommon)
            build/src/libultra_boot_O1/osSetThreadPri.o (.scommon)
            build/src/libultra_boot_O1/osGetThreadPri.o (.scommon)
            build/src/libultra_boot_O2/__osEPiRawReadIo.o (.scommon)
            build/src/libultra_boot_O2/osViSwapBuffer.o (.scommon)
            build/src/libultra_boot_O2/__osEPiRawStartDma.o (.scommon)
            build/asm/bcmp.o (.scommon)
            build/src/libultra_boot_O1/osGetTime.o (.scommon)
            build/src/libultra_boot_O1/timerintr.o (.scommon)
            build/asm/osGetCount.o (.scommon)
            build/src/libultra_boot_O1/__osSetGlobalIntMask.o (.scommon)
            build/asm/__osSetCompare.o (.scommon)
            build/asm/bcopy.o (.scommon)
            build/src/libultra_boot_O1/__osResetGlobalIntMask.o (.scommon)
            build/asm/__osDisableInt.o (.scommon)
            build/asm/__osRestoreInt.o (.scommon)
            build/src/libultra_boot_O2/osViModeNtscLan1.o (.scommon)
            build/src/libultra_boot_O2/osViModeMpalLan1.o (.scommon)
            build/src/libultra_boot_O2/__osViInit.o (.scommon)
            build/src/libultra_boot_O2/__osViSwapContext.o (.scommon)
            build/src/libultra_boot_O2/osPiGetCmdQueue.o (.scommon)
            build/src/libultra_boot_O2/osEPiReadIo.o (.scommon)
            build/src/libultra_boot_O2/osViSetSpecialFeatures.o (.scommon)
            build/src/libultra_boot_O2/osCartRomInit.o (.scommon)
            build/src/libultra_boot_O2/osViModeFpalLan1.o (.scommon)
            build/asm/__osSetFpcCsr.o (.scommon)
            build/asm/__osGetFpcCsr.o (.scommon)
            build/src/libultra_boot_O2/osEPiWriteIo.o (.scommon)
            build/asm/osMapTLBRdb.o (.scommon)
            build/src/libultra_boot_O1/osYieldThread.o (.scommon)
            build/asm/__osGetCause.o (.scommon)
            build/src/libultra_boot_O2/__osEPiRawWriteIo.o (.scommon)
            build/src/libultra_boot_O2/_Litob.o (.scommon)
            build/src/libultra_boot_O2/ldiv.o (.scommon)
            build/src/libultra_boot_O2/_Ldtob.o (.scommon)
            build/src/boot/build.o (.scommon)
            build/src/libultra_boot_O2/__osSiRawWriteIo.o (.scommon)
            build/src/libultra_boot_O2/vimgr.o (.scommon)
            build/src/libultra_boot_O2/__osViGetCurrentContext.o (.scommon)
            build/src/libultra_boot_O1/osStartThread.o (.scommon)
            build/src/libultra_boot_O2/osViSetYScale.o (.scommon)
            build/src/libultra_boot_O2/osViSetXScale.o (.scommon)
            build/src/libultra_boot_O1/__osSetHWIntrRoutine.o (.scommon)
            build/src/libultra_boot_O1/__osGetHWIntrRoutine.o (.scommon)
            build/asm/__osSetWatchLo.o (.scommon)
            build/data/rsp_boot.text.o (.scommon)
            build/src/boot/boot_main.o (.bss)
            build/src/boot/idle.o (.bss)
            build/src/boot/viconfig.o (.bss)
            build/src/boot/z_std_dma.o (.bss)
            build/src/boot/yaz0.o (.bss)
            build/src/boot/z_locale.o (.bss)
            build/src/boot/assert.o (.bss)
            build/src/boot/is_debug.o (.bss)
            build/src/libultra_boot_O2/osDriveRomInit.o (.bss)
            build/asm/mio0.o (.bss)
            build/src/boot/stackcheck.o (.bss)
            build/src/boot/logutils.o (.bss)
            build/src/libultra_boot_O2/sprintf.o (.bss)
            build/src/libultra_boot_O1/piacs.o (.bss)
            build/src/libultra_boot_O1/osSendMesg.o (.bss)
            build/src/libultra_boot_O1/osStopThread.o (.bss)
            build/src/libultra_boot_O1/osViExtendVStart.o (.bss)
            build/src/libultra_boot_O1/osViModePalLan1.o (.bss)
            build/src/libultra_boot_O1/osRecvMesg.o (.bss)
            build/src/libultra_boot_O1/initialize.o (.bss)
            build/asm/libm.o (.bss)
            build/asm/exceptasm.o (.bss)
            build/src/libultra_boot_O1/__osDequeueThread.o (.bss)
            build/src/libultra_boot_O1/osDestroyThread.o (.bss)
            build/asm/bzero.o (.bss)
            build/src/libultra_boot_O1/osCreateThread.o (.bss)
            build/asm/__osSetSR.o (.bss)
            build/asm/__osGetSR.o (.bss)
            build/asm/osWritebackDCache.o (.bss)
            build/src/libultra_boot_O2/osViGetNextFramebuffer.o (.bss)
            build/src/libultra_boot_O2/pimgr.o (.bss)
            build/src/libultra_boot_O2/__osDevMgrMain.o (.bss)
            build/src/libultra_boot_O2/__osPiRawStartDma.o (.bss)
            build/src/libultra_boot_O1/osVirtualToPhysical.o (.bss)
            build/src/libultra_boot_O2/osViBlack.o (.bss)
            build/src/libultra_boot_O2/__osSiRawReadIo.o (.bss)
            build/src/libultra_boot_O1/osGetThreadId.o (.bss)
            build/asm/osSetIntMask.o (.bss)
            build/src/libultra_boot_O2/osViSetMode.o (.bss)
            build/asm/__osProbeTLB.o (.bss)
            build/src/libultra_boot_O1/osGetMemSize.o (.bss)
            build/src/libultra_boot_O1/osSetEventMesg.o (.bss)
            build/src/libultra_boot_O2/_Printf.o (.bss)
            build/asm/osUnmapTLBAll.o (.bss)
            build/src/libultra_boot_O2/osEPiStartDma.o (.bss)
            build/src/libultra_boot_O2/string.o (.bss)
            build/asm/osInvalICache.o (.bss)
            build/src/libultra_boot_O1/osCreateMesgQueue.o (.bss)
            build/asm/osInvalDCache.o (.bss)
            build/src/libultra_boot_O2/__osSiDeviceBusy.o (.bss)
            build/src/libultra_boot_O1/osJamMesg.o (.bss)
            build/src/libultra_boot_O1/osSetThreadPri.o (.bss)
            build/src/libultra_boot_O1/osGetThreadPri.o (.bss)
            build/src/libultra_boot_O2/__osEPiRawReadIo.o (.bss)
            build/src/libultra_boot_O2/osViSwapBuffer.o (.bss)
            build/src/libultra_boot_O2/__osEPiRawStartDma.o (.bss)
            build/asm/bcmp.o (.bss)
            build/src/libultra_boot_O1/osGetTime.o (.bss)
            build/src/libultra_boot_O1/timerintr.o (.bss)
            build/asm/osGetCount.o (.bss)
            build/src/libultra_boot_O1/__osSetGlobalIntMask.o (.bss)
            build/asm/__osSetCompare.o (.bss)
            build/asm/bcopy.o (.bss)
            build/src/libultra_boot_O1/__osResetGlobalIntMask.o (.bss)
            build/asm/__osDisableInt.o (.bss)
            build/asm/__osRestoreInt.o (.bss)
            build/src/libultra_boot_O2/osViModeNtscLan1.o (.bss)
            build/src/libultra_boot_O2/osViModeMpalLan1.o (.bss)
            build/src/libultra_boot_O2/__osViInit.o (.bss)
            build/src/libultra_boot_O2/__osViSwapContext.o (.bss)
            build/src/libultra_boot_O2/osPiGetCmdQueue.o (.bss)
            build/src/libultra_boot_O2/osEPiReadIo.o (.bss)
            build/src/libultra_boot_O2/osViSetSpecialFeatures.o (.bss)
            build/src/libultra_boot_O2/osCartRomInit.o (.bss)
            build/src/libultra_boot_O2/osViModeFpalLan1.o (.bss)
            build/asm/__osSetFpcCsr.o (.bss)
            build/asm/__osGetFpcCsr.o (.bss)
            build/src/libultra_boot_O2/osEPiWriteIo.o (.bss)
            build/asm/osMapTLBRdb.o (.bss)
            build/src/libultra_boot_O1/osYieldThread.o (.bss)
            build/asm/__osGetCause.o (.bss)
            build/src/libultra_boot_O2/__osEPiRawWriteIo.o (.bss)
            build/src/libultra_boot_O2/_Litob.o (.bss)
            build/src/libultra_boot_O2/ldiv.o (.bss)
            build/src/libultra_boot_O2/_Ldtob.o (.bss)
            build/src/boot/build.o (.bss)
            build/src/libultra_boot_O2/__osSiRawWriteIo.o (.bss)
            build/src/libultra_boot_O2/vimgr.o (.bss)
            build/src/libultra_boot_O2/__osViGetCurrentContext.o (.bss)
            build/src/libultra_boot_O1/osStartThread.o (.bss)
            build/src/libultra_boot_O2/osViSetYScale.o (.bss)
            build/src/libultra_boot_O2/osViSetXScale.o (.bss)
            build/src/libultra_boot_O1/__osSetHWIntrRoutine.o (.bss)
            build/src/libultra_boot_O1/__osGetHWIntrRoutine.o (.bss)
            build/asm/__osSetWatchLo.o (.bss)
            build/data/rsp_boot.text.o (.bss)
            build/src/boot/boot_main.o (COMMON)
            build/src/boot/idle.o (COMMON)
            build/src/boot/viconfig.o (COMMON)
            build/src/boot/z_std_dma.o (COMMON)
            build/src/boot/yaz0.o (COMMON)
            build/src/boot/z_locale.o (COMMON)
            build/src/boot/assert.o (COMMON)
            build/src/boot/is_debug.o (COMMON)
            build/src/libultra_boot_O2/osDriveRomInit.o (COMMON)
            build/asm/mio0.o (COMMON)
            build/src/boot/stackcheck.o (COMMON)
            build/src/boot/logutils.o (COMMON)
            build/src/libultra_boot_O2/sprintf.o (COMMON)
            build/src/libultra_boot_O1/piacs.o (COMMON)
            build/src/libultra_boot_O1/osSendMesg.o (COMMON)
            build/src/libultra_boot_O1/osStopThread.o (COMMON)
            build/src/libultra_boot_O1/osViExtendVStart.o (COMMON)
            build/src/libultra_boot_O1/osViModePalLan1.o (COMMON)
            build/src/libultra_boot_O1/osRecvMesg.o (COMMON)
            build/src/libultra_boot_O1/initialize.o (COMMON)
            build/asm/libm.o (COMMON)
            build/asm/exceptasm.o (COMMON)
            build/src/libultra_boot_O1/__osDequeueThread.o (COMMON)
            build/src/libultra_boot_O1/osDestroyThread.o (COMMON)
            build/asm/bzero.o (COMMON)
            build/src/libultra_boot_O1/osCreateThread.o (COMMON)
            build/asm/__osSetSR.o (COMMON)
            build/asm/__osGetSR.o (COMMON)
            build/asm/osWritebackDCache.o (COMMON)
            build/src/libultra_boot_O2/osViGetNextFramebuffer.o (COMMON)
            build/src/libultra_boot_O2/pimgr.o (COMMON)
            build/src/libultra_boot_O2/__osDevMgrMain.o (COMMON)
            build/src/libultra_boot_O2/__osPiRawStartDma.o (COMMON)
            build/src/libultra_boot_O1/osVirtualToPhysical.o (COMMON)
            build/src/libultra_boot_O2/osViBlack.o (COMMON)
            build/src/libultra_boot_O2/__osSiRawReadIo.o (COMMON)
            build/src/libultra_boot_O1/osGetThreadId.o (COMMON)
            build/asm/osSetIntMask.o (COMMON)
            build/src/libultra_boot_O2/osViSetMode.o (COMMON)
            build/asm/__osProbeTLB.o (COMMON)
            build/src/libultra_boot_O1/osGetMemSize.o (COMMON)
            build/src/libultra_boot_O1/osSetEventMesg.o (COMMON)
            build/src/libultra_boot_O2/_Printf.o (COMMON)
            build/asm/osUnmapTLBAll.o (COMMON)
            build/src/libultra_boot_O2/osEPiStartDma.o (COMMON)
            build/src/libultra_boot_O2/string.o (COMMON)
            build/asm/osInvalICache.o (COMMON)
            build/src/libultra_boot_O1/osCreateMesgQueue.o (COMMON)
            build/asm/osInvalDCache.o (COMMON)
            build/src/libultra_boot_O2/__osSiDeviceBusy.o (COMMON)
            build/src/libultra_boot_O1/osJamMesg.o (COMMON)
            build/src/libultra_boot_O1/osSetThreadPri.o (COMMON)
            build/src/libultra_boot_O1/osGetThreadPri.o (COMMON)
            build/src/libultra_boot_O2/__osEPiRawReadIo.o (COMMON)
            build/src/libultra_boot_O2/osViSwapBuffer.o (COMMON)
            build/src/libultra_boot_O2/__osEPiRawStartDma.o (COMMON)
            build/asm/bcmp.o (COMMON)
            build/src/libultra_boot_O1/osGetTime.o (COMMON)
            build/src/libultra_boot_O1/timerintr.o (COMMON)
            build/asm/osGetCount.o (COMMON)
            build/src/libultra_boot_O1/__osSetGlobalIntMask.o (COMMON)
            build/asm/__osSetCompare.o (COMMON)
            build/asm/bcopy.o (COMMON)
            build/src/libultra_boot_O1/__osResetGlobalIntMask.o (COMMON)
            build/asm/__osDisableInt.o (COMMON)
            build/asm/__osRestoreInt.o (COMMON)
            build/src/libultra_boot_O2/osViModeNtscLan1.o (COMMON)
            build/src/libultra_boot_O2/osViModeMpalLan1.o (COMMON)
            build/src/libultra_boot_O2/__osViInit.o (COMMON)
            build/src/libultra_boot_O2/__osViSwapContext.o (COMMON)
            build/src/libultra_boot_O2/osPiGetCmdQueue.o (COMMON)
            build/src/libultra_boot_O2/osEPiReadIo.o (COMMON)
            build/src/libultra_boot_O2/osViSetSpecialFeatures.o (COMMON)
            build/src/libultra_boot_O2/osCartRomInit.o (COMMON)
            build/src/libultra_boot_O2/osViModeFpalLan1.o (COMMON)
            build/asm/__osSetFpcCsr.o (COMMON)
            build/asm/__osGetFpcCsr.o (COMMON)
            build/src/libultra_boot_O2/osEPiWriteIo.o (COMMON)
            build/asm/osMapTLBRdb.o (COMMON)
            build/src/libultra_boot_O1/osYieldThread.o (COMMON)
            build/asm/__osGetCause.o (COMMON)
            build/src/libultra_boot_O2/__osEPiRawWriteIo.o (COMMON)
            build/src/libultra_boot_O2/_Litob.o (COMMON)
            build/src/libultra_boot_O2/ldiv.o (COMMON)
            build/src/libultra_boot_O2/_Ldtob.o (COMMON)
            build/src/boot/build.o (COMMON)
            build/src/libultra_boot_O2/__osSiRawWriteIo.o (COMMON)
            build/src/libultra_boot_O2/vimgr.o (COMMON)
            build/src/libultra_boot_O2/__osViGetCurrentContext.o (COMMON)
            build/src/libultra_boot_O1/osStartThread.o (COMMON)
            build/src/libultra_boot_O2/osViSetYScale.o (COMMON)
            build/src/libultra_boot_O2/osViSetXScale.o (COMMON)
            build/src/libultra_boot_O1/__osSetHWIntrRoutine.o (COMMON)
            build/src/libultra_boot_O1/__osGetHWIntrRoutine.o (COMMON)
            build/asm/__osSetWatchLo.o (COMMON)
            build/data/rsp_boot.text.o (COMMON)
        . = ALIGN(0x10);
        _bootSegmentBssEnd = .;
        _bootSegmentEnd = .;
    }
    _bootSegmentBssSize = ABSOLUTE( _bootSegmentBssEnd - _bootSegmentBssStart );

    _dmadataSegmentRomStart = _RomSize;
    ..dmadata : AT(_RomSize)
    {
        _dmadataSegmentStart = .;
        . = ALIGN(0x10);
        _dmadataSegmentTextStart = .;
            build/asm/dmadata.o (.text)
        _dmadataSegmentTextEnd = .;
    _dmadataSegmentTextSize = ABSOLUTE( _dmadataSegmentTextEnd - _dmadataSegmentTextStart );
        _dmadataSegmentDataStart = .;
            build/asm/dmadata.o (.data)
        _dmadataSegmentDataEnd = .;
    _dmadataSegmentDataSize = ABSOLUTE( _dmadataSegmentDataEnd - _dmadataSegmentDataStart );
        _dmadataSegmentRoDataStart = .;
            build/asm/dmadata.o (.rodata)
        _dmadataSegmentRoDataEnd = .;
    _dmadataSegmentRoDataSize = ABSOLUTE( _dmadataSegmentRoDataEnd - _dmadataSegmentRoDataStart );
        _dmadataSegmentSDataStart = .;
            build/asm/dmadata.o (.sdata)
        . = ALIGN(0x10);
        _dmadataSegmentSDataEnd = .;
        _dmadataSegmentOvlStart = .;
            build/asm/dmadata.o (.ovl)
        . = ALIGN(0x10);
        _dmadataSegmentOvlEnd = .;
    }
    _RomSize += ( _dmadataSegmentOvlEnd - _dmadataSegmentTextStart );
    _dmadataSegmentRomEnd = _RomSize;

    ..dmadata.bss ADDR(..dmadata) + SIZEOF(..dmadata) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _dmadataSegmentBssStart = .;
            build/asm/dmadata.o (.sbss)
            build/asm/dmadata.o (.scommon)
            build/asm/dmadata.o (.bss)
            build/asm/dmadata.o (COMMON)
        . = ALIGN(0x10);
        _dmadataSegmentBssEnd = .;
        _dmadataSegmentEnd = .;
    }
    _dmadataSegmentBssSize = ABSOLUTE( _dmadataSegmentBssEnd - _dmadataSegmentBssStart );

    _AudiobankSegmentRomStart = _RomSize;
    ..Audiobank 0x00000010 : AT(_RomSize)
    {
        _AudiobankSegmentStart = .;
        . = ALIGN(0x10);
        _AudiobankSegmentTextStart = .;
            build/baserom/Audiobank.o (.text)
        _AudiobankSegmentTextEnd = .;
    _AudiobankSegmentTextSize = ABSOLUTE( _AudiobankSegmentTextEnd - _AudiobankSegmentTextStart );
        _AudiobankSegmentDataStart = .;
            build/baserom/Audiobank.o (.data)
        _AudiobankSegmentDataEnd = .;
    _AudiobankSegmentDataSize = ABSOLUTE( _AudiobankSegmentDataEnd - _AudiobankSegmentDataStart );
        _AudiobankSegmentRoDataStart = .;
            build/baserom/Audiobank.o (.rodata)
        _AudiobankSegmentRoDataEnd = .;
    _AudiobankSegmentRoDataSize = ABSOLUTE( _AudiobankSegmentRoDataEnd - _AudiobankSegmentRoDataStart );
        _AudiobankSegmentSDataStart = .;
            build/baserom/Audiobank.o (.sdata)
        . = ALIGN(0x10);
        _AudiobankSegmentSDataEnd = .;
        _AudiobankSegmentOvlStart = .;
            build/baserom/Audiobank.o (.ovl)
        . = ALIGN(0x10);
        _AudiobankSegmentOvlEnd = .;
    }
    _RomSize += ( _AudiobankSegmentOvlEnd - _AudiobankSegmentTextStart );
    _AudiobankSegmentRomEnd = _RomSize;

    ..Audiobank.bss ADDR(..Audiobank) + SIZEOF(..Audiobank) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _AudiobankSegmentBssStart = .;
            build/baserom/Audiobank.o (.sbss)
            build/baserom/Audiobank.o (.scommon)
            build/baserom/Audiobank.o (.bss)
            build/baserom/Audiobank.o (COMMON)
        . = ALIGN(0x10);
        _AudiobankSegmentBssEnd = .;
        _AudiobankSegmentEnd = .;
    }
    _AudiobankSegmentBssSize = ABSOLUTE( _AudiobankSegmentBssEnd - _AudiobankSegmentBssStart );

    _AudioseqSegmentRomStart = _RomSize;
    ..Audioseq : AT(_RomSize)
    {
        _AudioseqSegmentStart = .;
        . = ALIGN(0x10);
        _AudioseqSegmentTextStart = .;
            build/baserom/Audioseq.o (.text)
        _AudioseqSegmentTextEnd = .;
    _AudioseqSegmentTextSize = ABSOLUTE( _AudioseqSegmentTextEnd - _AudioseqSegmentTextStart );
        _AudioseqSegmentDataStart = .;
            build/baserom/Audioseq.o (.data)
        _AudioseqSegmentDataEnd = .;
    _AudioseqSegmentDataSize = ABSOLUTE( _AudioseqSegmentDataEnd - _AudioseqSegmentDataStart );
        _AudioseqSegmentRoDataStart = .;
            build/baserom/Audioseq.o (.rodata)
        _AudioseqSegmentRoDataEnd = .;
    _AudioseqSegmentRoDataSize = ABSOLUTE( _AudioseqSegmentRoDataEnd - _AudioseqSegmentRoDataStart );
        _AudioseqSegmentSDataStart = .;
            build/baserom/Audioseq.o (.sdata)
        . = ALIGN(0x10);
        _AudioseqSegmentSDataEnd = .;
        _AudioseqSegmentOvlStart = .;
            build/baserom/Audioseq.o (.ovl)
        . = ALIGN(0x10);
        _AudioseqSegmentOvlEnd = .;
    }
    _RomSize += ( _AudioseqSegmentOvlEnd - _AudioseqSegmentTextStart );
    _AudioseqSegmentRomEnd = _RomSize;

    ..Audioseq.bss ADDR(..Audioseq) + SIZEOF(..Audioseq) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _AudioseqSegmentBssStart = .;
            build/baserom/Audioseq.o (.sbss)
            build/baserom/Audioseq.o (.scommon)
            build/baserom/Audioseq.o (.bss)
            build/baserom/Audioseq.o (COMMON)
        . = ALIGN(0x10);
        _AudioseqSegmentBssEnd = .;
        _AudioseqSegmentEnd = .;
    }
    _AudioseqSegmentBssSize = ABSOLUTE( _AudioseqSegmentBssEnd - _AudioseqSegmentBssStart );

    _AudiotableSegmentRomStart = _RomSize;
    ..Audiotable : AT(_RomSize)
    {
        _AudiotableSegmentStart = .;
        . = ALIGN(0x10);
        _AudiotableSegmentTextStart = .;
            build/baserom/Audiotable.o (.text)
        _AudiotableSegmentTextEnd = .;
    _AudiotableSegmentTextSize = ABSOLUTE( _AudiotableSegmentTextEnd - _AudiotableSegmentTextStart );
        _AudiotableSegmentDataStart = .;
            build/baserom/Audiotable.o (.data)
        _AudiotableSegmentDataEnd = .;
    _AudiotableSegmentDataSize = ABSOLUTE( _AudiotableSegmentDataEnd - _AudiotableSegmentDataStart );
        _AudiotableSegmentRoDataStart = .;
            build/baserom/Audiotable.o (.rodata)
        _AudiotableSegmentRoDataEnd = .;
    _AudiotableSegmentRoDataSize = ABSOLUTE( _AudiotableSegmentRoDataEnd - _AudiotableSegmentRoDataStart );
        _AudiotableSegmentSDataStart = .;
            build/baserom/Audiotable.o (.sdata)
        . = ALIGN(0x10);
        _AudiotableSegmentSDataEnd = .;
        _AudiotableSegmentOvlStart = .;
            build/baserom/Audiotable.o (.ovl)
        . = ALIGN(0x10);
        _AudiotableSegmentOvlEnd = .;
    }
    _RomSize += ( _AudiotableSegmentOvlEnd - _AudiotableSegmentTextStart );
    _AudiotableSegmentRomEnd = _RomSize;

    ..Audiotable.bss ADDR(..Audiotable) + SIZEOF(..Audiotable) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _AudiotableSegmentBssStart = .;
            build/baserom/Audiotable.o (.sbss)
            build/baserom/Audiotable.o (.scommon)
            build/baserom/Audiotable.o (.bss)
            build/baserom/Audiotable.o (COMMON)
        . = ALIGN(0x10);
        _AudiotableSegmentBssEnd = .;
        _AudiotableSegmentEnd = .;
    }
    _AudiotableSegmentBssSize = ABSOLUTE( _AudiotableSegmentBssEnd - _AudiotableSegmentBssStart );

    _link_animetionSegmentRomStart = _RomSize;
    ..link_animetion : AT(_RomSize)
    {
        _link_animetionSegmentStart = .;
        . = ALIGN(0x10);
        _link_animetionSegmentTextStart = .;
            build/baserom/link_animetion.o (.text)
        _link_animetionSegmentTextEnd = .;
    _link_animetionSegmentTextSize = ABSOLUTE( _link_animetionSegmentTextEnd - _link_animetionSegmentTextStart );
        _link_animetionSegmentDataStart = .;
            build/baserom/link_animetion.o (.data)
        _link_animetionSegmentDataEnd = .;
    _link_animetionSegmentDataSize = ABSOLUTE( _link_animetionSegmentDataEnd - _link_animetionSegmentDataStart );
        _link_animetionSegmentRoDataStart = .;
            build/baserom/link_animetion.o (.rodata)
        _link_animetionSegmentRoDataEnd = .;
    _link_animetionSegmentRoDataSize = ABSOLUTE( _link_animetionSegmentRoDataEnd - _link_animetionSegmentRoDataStart );
        _link_animetionSegmentSDataStart = .;
            build/baserom/link_animetion.o (.sdata)
        . = ALIGN(0x10);
        _link_animetionSegmentSDataEnd = .;
        _link_animetionSegmentOvlStart = .;
            build/baserom/link_animetion.o (.ovl)
        . = ALIGN(0x10);
        _link_animetionSegmentOvlEnd = .;
    }
    _RomSize += ( _link_animetionSegmentOvlEnd - _link_animetionSegmentTextStart );
    _link_animetionSegmentRomEnd = _RomSize;

    ..link_animetion.bss ADDR(..link_animetion) + SIZEOF(..link_animetion) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _link_animetionSegmentBssStart = .;
            build/baserom/link_animetion.o (.sbss)
            build/baserom/link_animetion.o (.scommon)
            build/baserom/link_animetion.o (.bss)
            build/baserom/link_animetion.o (COMMON)
        . = ALIGN(0x10);
        _link_animetionSegmentBssEnd = .;
        _link_animetionSegmentEnd = .;
    }
    _link_animetionSegmentBssSize = ABSOLUTE( _link_animetionSegmentBssEnd - _link_animetionSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _icon_item_staticSegmentRomStart = _RomSize;
    ..icon_item_static : AT(_RomSize)
    {
        _icon_item_staticSegmentStart = .;
        . = ALIGN(0x10);
        _icon_item_staticSegmentTextStart = .;
            build/assets/textures/icon_item_static/icon_item_static.o (.text)
        _icon_item_staticSegmentTextEnd = .;
    _icon_item_staticSegmentTextSize = ABSOLUTE( _icon_item_staticSegmentTextEnd - _icon_item_staticSegmentTextStart );
        _icon_item_staticSegmentDataStart = .;
            build/assets/textures/icon_item_static/icon_item_static.o (.data)
        _icon_item_staticSegmentDataEnd = .;
    _icon_item_staticSegmentDataSize = ABSOLUTE( _icon_item_staticSegmentDataEnd - _icon_item_staticSegmentDataStart );
        _icon_item_staticSegmentRoDataStart = .;
            build/assets/textures/icon_item_static/icon_item_static.o (.rodata)
        _icon_item_staticSegmentRoDataEnd = .;
    _icon_item_staticSegmentRoDataSize = ABSOLUTE( _icon_item_staticSegmentRoDataEnd - _icon_item_staticSegmentRoDataStart );
        _icon_item_staticSegmentSDataStart = .;
            build/assets/textures/icon_item_static/icon_item_static.o (.sdata)
        . = ALIGN(0x10);
        _icon_item_staticSegmentSDataEnd = .;
        _icon_item_staticSegmentOvlStart = .;
            build/assets/textures/icon_item_static/icon_item_static.o (.ovl)
        . = ALIGN(0x10);
        _icon_item_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _icon_item_staticSegmentOvlEnd - _icon_item_staticSegmentTextStart );
    _icon_item_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..icon_item_static.bss ADDR(..icon_item_static) + SIZEOF(..icon_item_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _icon_item_staticSegmentBssStart = .;
            build/assets/textures/icon_item_static/icon_item_static.o (.sbss)
            build/assets/textures/icon_item_static/icon_item_static.o (.scommon)
            build/assets/textures/icon_item_static/icon_item_static.o (.bss)
            build/assets/textures/icon_item_static/icon_item_static.o (COMMON)
        . = ALIGN(0x10);
        _icon_item_staticSegmentBssEnd = .;
        _icon_item_staticSegmentEnd = .;
    }
    _icon_item_staticSegmentBssSize = ABSOLUTE( _icon_item_staticSegmentBssEnd - _icon_item_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _icon_item_24_staticSegmentRomStart = _RomSize;
    ..icon_item_24_static : AT(_RomSize)
    {
        _icon_item_24_staticSegmentStart = .;
        . = ALIGN(0x10);
        _icon_item_24_staticSegmentTextStart = .;
            build/assets/textures/icon_item_24_static/icon_item_24_static.o (.text)
        _icon_item_24_staticSegmentTextEnd = .;
    _icon_item_24_staticSegmentTextSize = ABSOLUTE( _icon_item_24_staticSegmentTextEnd - _icon_item_24_staticSegmentTextStart );
        _icon_item_24_staticSegmentDataStart = .;
            build/assets/textures/icon_item_24_static/icon_item_24_static.o (.data)
        _icon_item_24_staticSegmentDataEnd = .;
    _icon_item_24_staticSegmentDataSize = ABSOLUTE( _icon_item_24_staticSegmentDataEnd - _icon_item_24_staticSegmentDataStart );
        _icon_item_24_staticSegmentRoDataStart = .;
            build/assets/textures/icon_item_24_static/icon_item_24_static.o (.rodata)
        _icon_item_24_staticSegmentRoDataEnd = .;
    _icon_item_24_staticSegmentRoDataSize = ABSOLUTE( _icon_item_24_staticSegmentRoDataEnd - _icon_item_24_staticSegmentRoDataStart );
        _icon_item_24_staticSegmentSDataStart = .;
            build/assets/textures/icon_item_24_static/icon_item_24_static.o (.sdata)
        . = ALIGN(0x10);
        _icon_item_24_staticSegmentSDataEnd = .;
        _icon_item_24_staticSegmentOvlStart = .;
            build/assets/textures/icon_item_24_static/icon_item_24_static.o (.ovl)
        . = ALIGN(0x10);
        _icon_item_24_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _icon_item_24_staticSegmentOvlEnd - _icon_item_24_staticSegmentTextStart );
    _icon_item_24_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..icon_item_24_static.bss ADDR(..icon_item_24_static) + SIZEOF(..icon_item_24_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _icon_item_24_staticSegmentBssStart = .;
            build/assets/textures/icon_item_24_static/icon_item_24_static.o (.sbss)
            build/assets/textures/icon_item_24_static/icon_item_24_static.o (.scommon)
            build/assets/textures/icon_item_24_static/icon_item_24_static.o (.bss)
            build/assets/textures/icon_item_24_static/icon_item_24_static.o (COMMON)
        . = ALIGN(0x10);
        _icon_item_24_staticSegmentBssEnd = .;
        _icon_item_24_staticSegmentEnd = .;
    }
    _icon_item_24_staticSegmentBssSize = ABSOLUTE( _icon_item_24_staticSegmentBssEnd - _icon_item_24_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _icon_item_field_staticSegmentRomStart = _RomSize;
    ..icon_item_field_static : AT(_RomSize)
    {
        _icon_item_field_staticSegmentStart = .;
        . = ALIGN(0x10);
        _icon_item_field_staticSegmentTextStart = .;
            build/assets/textures/icon_item_field_static/icon_item_field_static.o (.text)
        _icon_item_field_staticSegmentTextEnd = .;
    _icon_item_field_staticSegmentTextSize = ABSOLUTE( _icon_item_field_staticSegmentTextEnd - _icon_item_field_staticSegmentTextStart );
        _icon_item_field_staticSegmentDataStart = .;
            build/assets/textures/icon_item_field_static/icon_item_field_static.o (.data)
        _icon_item_field_staticSegmentDataEnd = .;
    _icon_item_field_staticSegmentDataSize = ABSOLUTE( _icon_item_field_staticSegmentDataEnd - _icon_item_field_staticSegmentDataStart );
        _icon_item_field_staticSegmentRoDataStart = .;
            build/assets/textures/icon_item_field_static/icon_item_field_static.o (.rodata)
        _icon_item_field_staticSegmentRoDataEnd = .;
    _icon_item_field_staticSegmentRoDataSize = ABSOLUTE( _icon_item_field_staticSegmentRoDataEnd - _icon_item_field_staticSegmentRoDataStart );
        _icon_item_field_staticSegmentSDataStart = .;
            build/assets/textures/icon_item_field_static/icon_item_field_static.o (.sdata)
        . = ALIGN(0x10);
        _icon_item_field_staticSegmentSDataEnd = .;
        _icon_item_field_staticSegmentOvlStart = .;
            build/assets/textures/icon_item_field_static/icon_item_field_static.o (.ovl)
        . = ALIGN(0x10);
        _icon_item_field_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _icon_item_field_staticSegmentOvlEnd - _icon_item_field_staticSegmentTextStart );
    _icon_item_field_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..icon_item_field_static.bss ADDR(..icon_item_field_static) + SIZEOF(..icon_item_field_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _icon_item_field_staticSegmentBssStart = .;
            build/assets/textures/icon_item_field_static/icon_item_field_static.o (.sbss)
            build/assets/textures/icon_item_field_static/icon_item_field_static.o (.scommon)
            build/assets/textures/icon_item_field_static/icon_item_field_static.o (.bss)
            build/assets/textures/icon_item_field_static/icon_item_field_static.o (COMMON)
        . = ALIGN(0x10);
        _icon_item_field_staticSegmentBssEnd = .;
        _icon_item_field_staticSegmentEnd = .;
    }
    _icon_item_field_staticSegmentBssSize = ABSOLUTE( _icon_item_field_staticSegmentBssEnd - _icon_item_field_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _icon_item_dungeon_staticSegmentRomStart = _RomSize;
    ..icon_item_dungeon_static : AT(_RomSize)
    {
        _icon_item_dungeon_staticSegmentStart = .;
        . = ALIGN(0x10);
        _icon_item_dungeon_staticSegmentTextStart = .;
            build/assets/textures/icon_item_dungeon_static/icon_item_dungeon_static.o (.text)
        _icon_item_dungeon_staticSegmentTextEnd = .;
    _icon_item_dungeon_staticSegmentTextSize = ABSOLUTE( _icon_item_dungeon_staticSegmentTextEnd - _icon_item_dungeon_staticSegmentTextStart );
        _icon_item_dungeon_staticSegmentDataStart = .;
            build/assets/textures/icon_item_dungeon_static/icon_item_dungeon_static.o (.data)
        _icon_item_dungeon_staticSegmentDataEnd = .;
    _icon_item_dungeon_staticSegmentDataSize = ABSOLUTE( _icon_item_dungeon_staticSegmentDataEnd - _icon_item_dungeon_staticSegmentDataStart );
        _icon_item_dungeon_staticSegmentRoDataStart = .;
            build/assets/textures/icon_item_dungeon_static/icon_item_dungeon_static.o (.rodata)
        _icon_item_dungeon_staticSegmentRoDataEnd = .;
    _icon_item_dungeon_staticSegmentRoDataSize = ABSOLUTE( _icon_item_dungeon_staticSegmentRoDataEnd - _icon_item_dungeon_staticSegmentRoDataStart );
        _icon_item_dungeon_staticSegmentSDataStart = .;
            build/assets/textures/icon_item_dungeon_static/icon_item_dungeon_static.o (.sdata)
        . = ALIGN(0x10);
        _icon_item_dungeon_staticSegmentSDataEnd = .;
        _icon_item_dungeon_staticSegmentOvlStart = .;
            build/assets/textures/icon_item_dungeon_static/icon_item_dungeon_static.o (.ovl)
        . = ALIGN(0x10);
        _icon_item_dungeon_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _icon_item_dungeon_staticSegmentOvlEnd - _icon_item_dungeon_staticSegmentTextStart );
    _icon_item_dungeon_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..icon_item_dungeon_static.bss ADDR(..icon_item_dungeon_static) + SIZEOF(..icon_item_dungeon_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _icon_item_dungeon_staticSegmentBssStart = .;
            build/assets/textures/icon_item_dungeon_static/icon_item_dungeon_static.o (.sbss)
            build/assets/textures/icon_item_dungeon_static/icon_item_dungeon_static.o (.scommon)
            build/assets/textures/icon_item_dungeon_static/icon_item_dungeon_static.o (.bss)
            build/assets/textures/icon_item_dungeon_static/icon_item_dungeon_static.o (COMMON)
        . = ALIGN(0x10);
        _icon_item_dungeon_staticSegmentBssEnd = .;
        _icon_item_dungeon_staticSegmentEnd = .;
    }
    _icon_item_dungeon_staticSegmentBssSize = ABSOLUTE( _icon_item_dungeon_staticSegmentBssEnd - _icon_item_dungeon_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _icon_item_gameover_staticSegmentRomStart = _RomSize;
    ..icon_item_gameover_static : AT(_RomSize)
    {
        _icon_item_gameover_staticSegmentStart = .;
        . = ALIGN(0x10);
        _icon_item_gameover_staticSegmentTextStart = .;
            build/baserom/icon_item_gameover_static.o (.text)
        _icon_item_gameover_staticSegmentTextEnd = .;
    _icon_item_gameover_staticSegmentTextSize = ABSOLUTE( _icon_item_gameover_staticSegmentTextEnd - _icon_item_gameover_staticSegmentTextStart );
        _icon_item_gameover_staticSegmentDataStart = .;
            build/baserom/icon_item_gameover_static.o (.data)
        _icon_item_gameover_staticSegmentDataEnd = .;
    _icon_item_gameover_staticSegmentDataSize = ABSOLUTE( _icon_item_gameover_staticSegmentDataEnd - _icon_item_gameover_staticSegmentDataStart );
        _icon_item_gameover_staticSegmentRoDataStart = .;
            build/baserom/icon_item_gameover_static.o (.rodata)
        _icon_item_gameover_staticSegmentRoDataEnd = .;
    _icon_item_gameover_staticSegmentRoDataSize = ABSOLUTE( _icon_item_gameover_staticSegmentRoDataEnd - _icon_item_gameover_staticSegmentRoDataStart );
        _icon_item_gameover_staticSegmentSDataStart = .;
            build/baserom/icon_item_gameover_static.o (.sdata)
        . = ALIGN(0x10);
        _icon_item_gameover_staticSegmentSDataEnd = .;
        _icon_item_gameover_staticSegmentOvlStart = .;
            build/baserom/icon_item_gameover_static.o (.ovl)
        . = ALIGN(0x10);
        _icon_item_gameover_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _icon_item_gameover_staticSegmentOvlEnd - _icon_item_gameover_staticSegmentTextStart );
    _icon_item_gameover_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..icon_item_gameover_static.bss ADDR(..icon_item_gameover_static) + SIZEOF(..icon_item_gameover_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _icon_item_gameover_staticSegmentBssStart = .;
            build/baserom/icon_item_gameover_static.o (.sbss)
            build/baserom/icon_item_gameover_static.o (.scommon)
            build/baserom/icon_item_gameover_static.o (.bss)
            build/baserom/icon_item_gameover_static.o (COMMON)
        . = ALIGN(0x10);
        _icon_item_gameover_staticSegmentBssEnd = .;
        _icon_item_gameover_staticSegmentEnd = .;
    }
    _icon_item_gameover_staticSegmentBssSize = ABSOLUTE( _icon_item_gameover_staticSegmentBssEnd - _icon_item_gameover_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _icon_item_nes_staticSegmentRomStart = _RomSize;
    ..icon_item_nes_static : AT(_RomSize)
    {
        _icon_item_nes_staticSegmentStart = .;
        . = ALIGN(0x10);
        _icon_item_nes_staticSegmentTextStart = .;
            build/baserom/icon_item_nes_static.o (.text)
        _icon_item_nes_staticSegmentTextEnd = .;
    _icon_item_nes_staticSegmentTextSize = ABSOLUTE( _icon_item_nes_staticSegmentTextEnd - _icon_item_nes_staticSegmentTextStart );
        _icon_item_nes_staticSegmentDataStart = .;
            build/baserom/icon_item_nes_static.o (.data)
        _icon_item_nes_staticSegmentDataEnd = .;
    _icon_item_nes_staticSegmentDataSize = ABSOLUTE( _icon_item_nes_staticSegmentDataEnd - _icon_item_nes_staticSegmentDataStart );
        _icon_item_nes_staticSegmentRoDataStart = .;
            build/baserom/icon_item_nes_static.o (.rodata)
        _icon_item_nes_staticSegmentRoDataEnd = .;
    _icon_item_nes_staticSegmentRoDataSize = ABSOLUTE( _icon_item_nes_staticSegmentRoDataEnd - _icon_item_nes_staticSegmentRoDataStart );
        _icon_item_nes_staticSegmentSDataStart = .;
            build/baserom/icon_item_nes_static.o (.sdata)
        . = ALIGN(0x10);
        _icon_item_nes_staticSegmentSDataEnd = .;
        _icon_item_nes_staticSegmentOvlStart = .;
            build/baserom/icon_item_nes_static.o (.ovl)
        . = ALIGN(0x10);
        _icon_item_nes_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _icon_item_nes_staticSegmentOvlEnd - _icon_item_nes_staticSegmentTextStart );
    _icon_item_nes_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..icon_item_nes_static.bss ADDR(..icon_item_nes_static) + SIZEOF(..icon_item_nes_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _icon_item_nes_staticSegmentBssStart = .;
            build/baserom/icon_item_nes_static.o (.sbss)
            build/baserom/icon_item_nes_static.o (.scommon)
            build/baserom/icon_item_nes_static.o (.bss)
            build/baserom/icon_item_nes_static.o (COMMON)
        . = ALIGN(0x10);
        _icon_item_nes_staticSegmentBssEnd = .;
        _icon_item_nes_staticSegmentEnd = .;
    }
    _icon_item_nes_staticSegmentBssSize = ABSOLUTE( _icon_item_nes_staticSegmentBssEnd - _icon_item_nes_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _icon_item_ger_staticSegmentRomStart = _RomSize;
    ..icon_item_ger_static : AT(_RomSize)
    {
        _icon_item_ger_staticSegmentStart = .;
        . = ALIGN(0x10);
        _icon_item_ger_staticSegmentTextStart = .;
            build/baserom/icon_item_ger_static.o (.text)
        _icon_item_ger_staticSegmentTextEnd = .;
    _icon_item_ger_staticSegmentTextSize = ABSOLUTE( _icon_item_ger_staticSegmentTextEnd - _icon_item_ger_staticSegmentTextStart );
        _icon_item_ger_staticSegmentDataStart = .;
            build/baserom/icon_item_ger_static.o (.data)
        _icon_item_ger_staticSegmentDataEnd = .;
    _icon_item_ger_staticSegmentDataSize = ABSOLUTE( _icon_item_ger_staticSegmentDataEnd - _icon_item_ger_staticSegmentDataStart );
        _icon_item_ger_staticSegmentRoDataStart = .;
            build/baserom/icon_item_ger_static.o (.rodata)
        _icon_item_ger_staticSegmentRoDataEnd = .;
    _icon_item_ger_staticSegmentRoDataSize = ABSOLUTE( _icon_item_ger_staticSegmentRoDataEnd - _icon_item_ger_staticSegmentRoDataStart );
        _icon_item_ger_staticSegmentSDataStart = .;
            build/baserom/icon_item_ger_static.o (.sdata)
        . = ALIGN(0x10);
        _icon_item_ger_staticSegmentSDataEnd = .;
        _icon_item_ger_staticSegmentOvlStart = .;
            build/baserom/icon_item_ger_static.o (.ovl)
        . = ALIGN(0x10);
        _icon_item_ger_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _icon_item_ger_staticSegmentOvlEnd - _icon_item_ger_staticSegmentTextStart );
    _icon_item_ger_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..icon_item_ger_static.bss ADDR(..icon_item_ger_static) + SIZEOF(..icon_item_ger_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _icon_item_ger_staticSegmentBssStart = .;
            build/baserom/icon_item_ger_static.o (.sbss)
            build/baserom/icon_item_ger_static.o (.scommon)
            build/baserom/icon_item_ger_static.o (.bss)
            build/baserom/icon_item_ger_static.o (COMMON)
        . = ALIGN(0x10);
        _icon_item_ger_staticSegmentBssEnd = .;
        _icon_item_ger_staticSegmentEnd = .;
    }
    _icon_item_ger_staticSegmentBssSize = ABSOLUTE( _icon_item_ger_staticSegmentBssEnd - _icon_item_ger_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _icon_item_fra_staticSegmentRomStart = _RomSize;
    ..icon_item_fra_static : AT(_RomSize)
    {
        _icon_item_fra_staticSegmentStart = .;
        . = ALIGN(0x10);
        _icon_item_fra_staticSegmentTextStart = .;
            build/baserom/icon_item_fra_static.o (.text)
        _icon_item_fra_staticSegmentTextEnd = .;
    _icon_item_fra_staticSegmentTextSize = ABSOLUTE( _icon_item_fra_staticSegmentTextEnd - _icon_item_fra_staticSegmentTextStart );
        _icon_item_fra_staticSegmentDataStart = .;
            build/baserom/icon_item_fra_static.o (.data)
        _icon_item_fra_staticSegmentDataEnd = .;
    _icon_item_fra_staticSegmentDataSize = ABSOLUTE( _icon_item_fra_staticSegmentDataEnd - _icon_item_fra_staticSegmentDataStart );
        _icon_item_fra_staticSegmentRoDataStart = .;
            build/baserom/icon_item_fra_static.o (.rodata)
        _icon_item_fra_staticSegmentRoDataEnd = .;
    _icon_item_fra_staticSegmentRoDataSize = ABSOLUTE( _icon_item_fra_staticSegmentRoDataEnd - _icon_item_fra_staticSegmentRoDataStart );
        _icon_item_fra_staticSegmentSDataStart = .;
            build/baserom/icon_item_fra_static.o (.sdata)
        . = ALIGN(0x10);
        _icon_item_fra_staticSegmentSDataEnd = .;
        _icon_item_fra_staticSegmentOvlStart = .;
            build/baserom/icon_item_fra_static.o (.ovl)
        . = ALIGN(0x10);
        _icon_item_fra_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _icon_item_fra_staticSegmentOvlEnd - _icon_item_fra_staticSegmentTextStart );
    _icon_item_fra_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..icon_item_fra_static.bss ADDR(..icon_item_fra_static) + SIZEOF(..icon_item_fra_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _icon_item_fra_staticSegmentBssStart = .;
            build/baserom/icon_item_fra_static.o (.sbss)
            build/baserom/icon_item_fra_static.o (.scommon)
            build/baserom/icon_item_fra_static.o (.bss)
            build/baserom/icon_item_fra_static.o (COMMON)
        . = ALIGN(0x10);
        _icon_item_fra_staticSegmentBssEnd = .;
        _icon_item_fra_staticSegmentEnd = .;
    }
    _icon_item_fra_staticSegmentBssSize = ABSOLUTE( _icon_item_fra_staticSegmentBssEnd - _icon_item_fra_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _item_name_staticSegmentRomStart = _RomSize;
    ..item_name_static : AT(_RomSize)
    {
        _item_name_staticSegmentStart = .;
        . = ALIGN(0x10);
        _item_name_staticSegmentTextStart = .;
            build/baserom/item_name_static.o (.text)
        _item_name_staticSegmentTextEnd = .;
    _item_name_staticSegmentTextSize = ABSOLUTE( _item_name_staticSegmentTextEnd - _item_name_staticSegmentTextStart );
        _item_name_staticSegmentDataStart = .;
            build/baserom/item_name_static.o (.data)
        _item_name_staticSegmentDataEnd = .;
    _item_name_staticSegmentDataSize = ABSOLUTE( _item_name_staticSegmentDataEnd - _item_name_staticSegmentDataStart );
        _item_name_staticSegmentRoDataStart = .;
            build/baserom/item_name_static.o (.rodata)
        _item_name_staticSegmentRoDataEnd = .;
    _item_name_staticSegmentRoDataSize = ABSOLUTE( _item_name_staticSegmentRoDataEnd - _item_name_staticSegmentRoDataStart );
        _item_name_staticSegmentSDataStart = .;
            build/baserom/item_name_static.o (.sdata)
        . = ALIGN(0x10);
        _item_name_staticSegmentSDataEnd = .;
        _item_name_staticSegmentOvlStart = .;
            build/baserom/item_name_static.o (.ovl)
        . = ALIGN(0x10);
        _item_name_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _item_name_staticSegmentOvlEnd - _item_name_staticSegmentTextStart );
    _item_name_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..item_name_static.bss ADDR(..item_name_static) + SIZEOF(..item_name_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _item_name_staticSegmentBssStart = .;
            build/baserom/item_name_static.o (.sbss)
            build/baserom/item_name_static.o (.scommon)
            build/baserom/item_name_static.o (.bss)
            build/baserom/item_name_static.o (COMMON)
        . = ALIGN(0x10);
        _item_name_staticSegmentBssEnd = .;
        _item_name_staticSegmentEnd = .;
    }
    _item_name_staticSegmentBssSize = ABSOLUTE( _item_name_staticSegmentBssEnd - _item_name_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _map_name_staticSegmentRomStart = _RomSize;
    ..map_name_static : AT(_RomSize)
    {
        _map_name_staticSegmentStart = .;
        . = ALIGN(0x10);
        _map_name_staticSegmentTextStart = .;
            build/baserom/map_name_static.o (.text)
        _map_name_staticSegmentTextEnd = .;
    _map_name_staticSegmentTextSize = ABSOLUTE( _map_name_staticSegmentTextEnd - _map_name_staticSegmentTextStart );
        _map_name_staticSegmentDataStart = .;
            build/baserom/map_name_static.o (.data)
        _map_name_staticSegmentDataEnd = .;
    _map_name_staticSegmentDataSize = ABSOLUTE( _map_name_staticSegmentDataEnd - _map_name_staticSegmentDataStart );
        _map_name_staticSegmentRoDataStart = .;
            build/baserom/map_name_static.o (.rodata)
        _map_name_staticSegmentRoDataEnd = .;
    _map_name_staticSegmentRoDataSize = ABSOLUTE( _map_name_staticSegmentRoDataEnd - _map_name_staticSegmentRoDataStart );
        _map_name_staticSegmentSDataStart = .;
            build/baserom/map_name_static.o (.sdata)
        . = ALIGN(0x10);
        _map_name_staticSegmentSDataEnd = .;
        _map_name_staticSegmentOvlStart = .;
            build/baserom/map_name_static.o (.ovl)
        . = ALIGN(0x10);
        _map_name_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _map_name_staticSegmentOvlEnd - _map_name_staticSegmentTextStart );
    _map_name_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..map_name_static.bss ADDR(..map_name_static) + SIZEOF(..map_name_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _map_name_staticSegmentBssStart = .;
            build/baserom/map_name_static.o (.sbss)
            build/baserom/map_name_static.o (.scommon)
            build/baserom/map_name_static.o (.bss)
            build/baserom/map_name_static.o (COMMON)
        . = ALIGN(0x10);
        _map_name_staticSegmentBssEnd = .;
        _map_name_staticSegmentEnd = .;
    }
    _map_name_staticSegmentBssSize = ABSOLUTE( _map_name_staticSegmentBssEnd - _map_name_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _do_action_staticSegmentRomStart = _RomSize;
    ..do_action_static : AT(_RomSize)
    {
        _do_action_staticSegmentStart = .;
        . = ALIGN(0x10);
        _do_action_staticSegmentTextStart = .;
            build/baserom/do_action_static.o (.text)
        _do_action_staticSegmentTextEnd = .;
    _do_action_staticSegmentTextSize = ABSOLUTE( _do_action_staticSegmentTextEnd - _do_action_staticSegmentTextStart );
        _do_action_staticSegmentDataStart = .;
            build/baserom/do_action_static.o (.data)
        _do_action_staticSegmentDataEnd = .;
    _do_action_staticSegmentDataSize = ABSOLUTE( _do_action_staticSegmentDataEnd - _do_action_staticSegmentDataStart );
        _do_action_staticSegmentRoDataStart = .;
            build/baserom/do_action_static.o (.rodata)
        _do_action_staticSegmentRoDataEnd = .;
    _do_action_staticSegmentRoDataSize = ABSOLUTE( _do_action_staticSegmentRoDataEnd - _do_action_staticSegmentRoDataStart );
        _do_action_staticSegmentSDataStart = .;
            build/baserom/do_action_static.o (.sdata)
        . = ALIGN(0x10);
        _do_action_staticSegmentSDataEnd = .;
        _do_action_staticSegmentOvlStart = .;
            build/baserom/do_action_static.o (.ovl)
        . = ALIGN(0x10);
        _do_action_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _do_action_staticSegmentOvlEnd - _do_action_staticSegmentTextStart );
    _do_action_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..do_action_static.bss ADDR(..do_action_static) + SIZEOF(..do_action_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _do_action_staticSegmentBssStart = .;
            build/baserom/do_action_static.o (.sbss)
            build/baserom/do_action_static.o (.scommon)
            build/baserom/do_action_static.o (.bss)
            build/baserom/do_action_static.o (COMMON)
        . = ALIGN(0x10);
        _do_action_staticSegmentBssEnd = .;
        _do_action_staticSegmentEnd = .;
    }
    _do_action_staticSegmentBssSize = ABSOLUTE( _do_action_staticSegmentBssEnd - _do_action_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _message_staticSegmentRomStart = _RomSize;
    ..message_static : AT(_RomSize)
    {
        _message_staticSegmentStart = .;
        . = ALIGN(0x10);
        _message_staticSegmentTextStart = .;
            build/baserom/message_static.o (.text)
        _message_staticSegmentTextEnd = .;
    _message_staticSegmentTextSize = ABSOLUTE( _message_staticSegmentTextEnd - _message_staticSegmentTextStart );
        _message_staticSegmentDataStart = .;
            build/baserom/message_static.o (.data)
        _message_staticSegmentDataEnd = .;
    _message_staticSegmentDataSize = ABSOLUTE( _message_staticSegmentDataEnd - _message_staticSegmentDataStart );
        _message_staticSegmentRoDataStart = .;
            build/baserom/message_static.o (.rodata)
        _message_staticSegmentRoDataEnd = .;
    _message_staticSegmentRoDataSize = ABSOLUTE( _message_staticSegmentRoDataEnd - _message_staticSegmentRoDataStart );
        _message_staticSegmentSDataStart = .;
            build/baserom/message_static.o (.sdata)
        . = ALIGN(0x10);
        _message_staticSegmentSDataEnd = .;
        _message_staticSegmentOvlStart = .;
            build/baserom/message_static.o (.ovl)
        . = ALIGN(0x10);
        _message_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _message_staticSegmentOvlEnd - _message_staticSegmentTextStart );
    _message_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..message_static.bss ADDR(..message_static) + SIZEOF(..message_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _message_staticSegmentBssStart = .;
            build/baserom/message_static.o (.sbss)
            build/baserom/message_static.o (.scommon)
            build/baserom/message_static.o (.bss)
            build/baserom/message_static.o (COMMON)
        . = ALIGN(0x10);
        _message_staticSegmentBssEnd = .;
        _message_staticSegmentEnd = .;
    }
    _message_staticSegmentBssSize = ABSOLUTE( _message_staticSegmentBssEnd - _message_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _message_texture_staticSegmentRomStart = _RomSize;
    ..message_texture_static : AT(_RomSize)
    {
        _message_texture_staticSegmentStart = .;
        . = ALIGN(0x10);
        _message_texture_staticSegmentTextStart = .;
            build/baserom/message_texture_static.o (.text)
        _message_texture_staticSegmentTextEnd = .;
    _message_texture_staticSegmentTextSize = ABSOLUTE( _message_texture_staticSegmentTextEnd - _message_texture_staticSegmentTextStart );
        _message_texture_staticSegmentDataStart = .;
            build/baserom/message_texture_static.o (.data)
        _message_texture_staticSegmentDataEnd = .;
    _message_texture_staticSegmentDataSize = ABSOLUTE( _message_texture_staticSegmentDataEnd - _message_texture_staticSegmentDataStart );
        _message_texture_staticSegmentRoDataStart = .;
            build/baserom/message_texture_static.o (.rodata)
        _message_texture_staticSegmentRoDataEnd = .;
    _message_texture_staticSegmentRoDataSize = ABSOLUTE( _message_texture_staticSegmentRoDataEnd - _message_texture_staticSegmentRoDataStart );
        _message_texture_staticSegmentSDataStart = .;
            build/baserom/message_texture_static.o (.sdata)
        . = ALIGN(0x10);
        _message_texture_staticSegmentSDataEnd = .;
        _message_texture_staticSegmentOvlStart = .;
            build/baserom/message_texture_static.o (.ovl)
        . = ALIGN(0x10);
        _message_texture_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _message_texture_staticSegmentOvlEnd - _message_texture_staticSegmentTextStart );
    _message_texture_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..message_texture_static.bss ADDR(..message_texture_static) + SIZEOF(..message_texture_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _message_texture_staticSegmentBssStart = .;
            build/baserom/message_texture_static.o (.sbss)
            build/baserom/message_texture_static.o (.scommon)
            build/baserom/message_texture_static.o (.bss)
            build/baserom/message_texture_static.o (COMMON)
        . = ALIGN(0x10);
        _message_texture_staticSegmentBssEnd = .;
        _message_texture_staticSegmentEnd = .;
    }
    _message_texture_staticSegmentBssSize = ABSOLUTE( _message_texture_staticSegmentBssEnd - _message_texture_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _nes_font_staticSegmentRomStart = _RomSize;
    ..nes_font_static : AT(_RomSize)
    {
        _nes_font_staticSegmentStart = .;
        . = ALIGN(0x10);
        _nes_font_staticSegmentTextStart = .;
            build/baserom/nes_font_static.o (.text)
        _nes_font_staticSegmentTextEnd = .;
    _nes_font_staticSegmentTextSize = ABSOLUTE( _nes_font_staticSegmentTextEnd - _nes_font_staticSegmentTextStart );
        _nes_font_staticSegmentDataStart = .;
            build/baserom/nes_font_static.o (.data)
        _nes_font_staticSegmentDataEnd = .;
    _nes_font_staticSegmentDataSize = ABSOLUTE( _nes_font_staticSegmentDataEnd - _nes_font_staticSegmentDataStart );
        _nes_font_staticSegmentRoDataStart = .;
            build/baserom/nes_font_static.o (.rodata)
        _nes_font_staticSegmentRoDataEnd = .;
    _nes_font_staticSegmentRoDataSize = ABSOLUTE( _nes_font_staticSegmentRoDataEnd - _nes_font_staticSegmentRoDataStart );
        _nes_font_staticSegmentSDataStart = .;
            build/baserom/nes_font_static.o (.sdata)
        . = ALIGN(0x10);
        _nes_font_staticSegmentSDataEnd = .;
        _nes_font_staticSegmentOvlStart = .;
            build/baserom/nes_font_static.o (.ovl)
        . = ALIGN(0x10);
        _nes_font_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _nes_font_staticSegmentOvlEnd - _nes_font_staticSegmentTextStart );
    _nes_font_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..nes_font_static.bss ADDR(..nes_font_static) + SIZEOF(..nes_font_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _nes_font_staticSegmentBssStart = .;
            build/baserom/nes_font_static.o (.sbss)
            build/baserom/nes_font_static.o (.scommon)
            build/baserom/nes_font_static.o (.bss)
            build/baserom/nes_font_static.o (COMMON)
        . = ALIGN(0x10);
        _nes_font_staticSegmentBssEnd = .;
        _nes_font_staticSegmentEnd = .;
    }
    _nes_font_staticSegmentBssSize = ABSOLUTE( _nes_font_staticSegmentBssEnd - _nes_font_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _nes_message_data_staticSegmentRomStart = _RomSize;
    ..nes_message_data_static : AT(_RomSize)
    {
        _nes_message_data_staticSegmentStart = .;
        . = ALIGN(0x10);
        _nes_message_data_staticSegmentTextStart = .;
            build/baserom/nes_message_data_static.o (.text)
        _nes_message_data_staticSegmentTextEnd = .;
    _nes_message_data_staticSegmentTextSize = ABSOLUTE( _nes_message_data_staticSegmentTextEnd - _nes_message_data_staticSegmentTextStart );
        _nes_message_data_staticSegmentDataStart = .;
            build/baserom/nes_message_data_static.o (.data)
        _nes_message_data_staticSegmentDataEnd = .;
    _nes_message_data_staticSegmentDataSize = ABSOLUTE( _nes_message_data_staticSegmentDataEnd - _nes_message_data_staticSegmentDataStart );
        _nes_message_data_staticSegmentRoDataStart = .;
            build/baserom/nes_message_data_static.o (.rodata)
        _nes_message_data_staticSegmentRoDataEnd = .;
    _nes_message_data_staticSegmentRoDataSize = ABSOLUTE( _nes_message_data_staticSegmentRoDataEnd - _nes_message_data_staticSegmentRoDataStart );
        _nes_message_data_staticSegmentSDataStart = .;
            build/baserom/nes_message_data_static.o (.sdata)
        . = ALIGN(0x10);
        _nes_message_data_staticSegmentSDataEnd = .;
        _nes_message_data_staticSegmentOvlStart = .;
            build/baserom/nes_message_data_static.o (.ovl)
        . = ALIGN(0x10);
        _nes_message_data_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _nes_message_data_staticSegmentOvlEnd - _nes_message_data_staticSegmentTextStart );
    _nes_message_data_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..nes_message_data_static.bss ADDR(..nes_message_data_static) + SIZEOF(..nes_message_data_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _nes_message_data_staticSegmentBssStart = .;
            build/baserom/nes_message_data_static.o (.sbss)
            build/baserom/nes_message_data_static.o (.scommon)
            build/baserom/nes_message_data_static.o (.bss)
            build/baserom/nes_message_data_static.o (COMMON)
        . = ALIGN(0x10);
        _nes_message_data_staticSegmentBssEnd = .;
        _nes_message_data_staticSegmentEnd = .;
    }
    _nes_message_data_staticSegmentBssSize = ABSOLUTE( _nes_message_data_staticSegmentBssEnd - _nes_message_data_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ger_message_data_staticSegmentRomStart = _RomSize;
    ..ger_message_data_static : AT(_RomSize)
    {
        _ger_message_data_staticSegmentStart = .;
        . = ALIGN(0x10);
        _ger_message_data_staticSegmentTextStart = .;
            build/baserom/ger_message_data_static.o (.text)
        _ger_message_data_staticSegmentTextEnd = .;
    _ger_message_data_staticSegmentTextSize = ABSOLUTE( _ger_message_data_staticSegmentTextEnd - _ger_message_data_staticSegmentTextStart );
        _ger_message_data_staticSegmentDataStart = .;
            build/baserom/ger_message_data_static.o (.data)
        _ger_message_data_staticSegmentDataEnd = .;
    _ger_message_data_staticSegmentDataSize = ABSOLUTE( _ger_message_data_staticSegmentDataEnd - _ger_message_data_staticSegmentDataStart );
        _ger_message_data_staticSegmentRoDataStart = .;
            build/baserom/ger_message_data_static.o (.rodata)
        _ger_message_data_staticSegmentRoDataEnd = .;
    _ger_message_data_staticSegmentRoDataSize = ABSOLUTE( _ger_message_data_staticSegmentRoDataEnd - _ger_message_data_staticSegmentRoDataStart );
        _ger_message_data_staticSegmentSDataStart = .;
            build/baserom/ger_message_data_static.o (.sdata)
        . = ALIGN(0x10);
        _ger_message_data_staticSegmentSDataEnd = .;
        _ger_message_data_staticSegmentOvlStart = .;
            build/baserom/ger_message_data_static.o (.ovl)
        . = ALIGN(0x10);
        _ger_message_data_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _ger_message_data_staticSegmentOvlEnd - _ger_message_data_staticSegmentTextStart );
    _ger_message_data_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ger_message_data_static.bss ADDR(..ger_message_data_static) + SIZEOF(..ger_message_data_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ger_message_data_staticSegmentBssStart = .;
            build/baserom/ger_message_data_static.o (.sbss)
            build/baserom/ger_message_data_static.o (.scommon)
            build/baserom/ger_message_data_static.o (.bss)
            build/baserom/ger_message_data_static.o (COMMON)
        . = ALIGN(0x10);
        _ger_message_data_staticSegmentBssEnd = .;
        _ger_message_data_staticSegmentEnd = .;
    }
    _ger_message_data_staticSegmentBssSize = ABSOLUTE( _ger_message_data_staticSegmentBssEnd - _ger_message_data_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _fra_message_data_staticSegmentRomStart = _RomSize;
    ..fra_message_data_static : AT(_RomSize)
    {
        _fra_message_data_staticSegmentStart = .;
        . = ALIGN(0x10);
        _fra_message_data_staticSegmentTextStart = .;
            build/baserom/fra_message_data_static.o (.text)
        _fra_message_data_staticSegmentTextEnd = .;
    _fra_message_data_staticSegmentTextSize = ABSOLUTE( _fra_message_data_staticSegmentTextEnd - _fra_message_data_staticSegmentTextStart );
        _fra_message_data_staticSegmentDataStart = .;
            build/baserom/fra_message_data_static.o (.data)
        _fra_message_data_staticSegmentDataEnd = .;
    _fra_message_data_staticSegmentDataSize = ABSOLUTE( _fra_message_data_staticSegmentDataEnd - _fra_message_data_staticSegmentDataStart );
        _fra_message_data_staticSegmentRoDataStart = .;
            build/baserom/fra_message_data_static.o (.rodata)
        _fra_message_data_staticSegmentRoDataEnd = .;
    _fra_message_data_staticSegmentRoDataSize = ABSOLUTE( _fra_message_data_staticSegmentRoDataEnd - _fra_message_data_staticSegmentRoDataStart );
        _fra_message_data_staticSegmentSDataStart = .;
            build/baserom/fra_message_data_static.o (.sdata)
        . = ALIGN(0x10);
        _fra_message_data_staticSegmentSDataEnd = .;
        _fra_message_data_staticSegmentOvlStart = .;
            build/baserom/fra_message_data_static.o (.ovl)
        . = ALIGN(0x10);
        _fra_message_data_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _fra_message_data_staticSegmentOvlEnd - _fra_message_data_staticSegmentTextStart );
    _fra_message_data_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..fra_message_data_static.bss ADDR(..fra_message_data_static) + SIZEOF(..fra_message_data_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _fra_message_data_staticSegmentBssStart = .;
            build/baserom/fra_message_data_static.o (.sbss)
            build/baserom/fra_message_data_static.o (.scommon)
            build/baserom/fra_message_data_static.o (.bss)
            build/baserom/fra_message_data_static.o (COMMON)
        . = ALIGN(0x10);
        _fra_message_data_staticSegmentBssEnd = .;
        _fra_message_data_staticSegmentEnd = .;
    }
    _fra_message_data_staticSegmentBssSize = ABSOLUTE( _fra_message_data_staticSegmentBssEnd - _fra_message_data_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _staff_message_data_staticSegmentRomStart = _RomSize;
    ..staff_message_data_static : AT(_RomSize)
    {
        _staff_message_data_staticSegmentStart = .;
        . = ALIGN(0x10);
        _staff_message_data_staticSegmentTextStart = .;
            build/baserom/staff_message_data_static.o (.text)
        _staff_message_data_staticSegmentTextEnd = .;
    _staff_message_data_staticSegmentTextSize = ABSOLUTE( _staff_message_data_staticSegmentTextEnd - _staff_message_data_staticSegmentTextStart );
        _staff_message_data_staticSegmentDataStart = .;
            build/baserom/staff_message_data_static.o (.data)
        _staff_message_data_staticSegmentDataEnd = .;
    _staff_message_data_staticSegmentDataSize = ABSOLUTE( _staff_message_data_staticSegmentDataEnd - _staff_message_data_staticSegmentDataStart );
        _staff_message_data_staticSegmentRoDataStart = .;
            build/baserom/staff_message_data_static.o (.rodata)
        _staff_message_data_staticSegmentRoDataEnd = .;
    _staff_message_data_staticSegmentRoDataSize = ABSOLUTE( _staff_message_data_staticSegmentRoDataEnd - _staff_message_data_staticSegmentRoDataStart );
        _staff_message_data_staticSegmentSDataStart = .;
            build/baserom/staff_message_data_static.o (.sdata)
        . = ALIGN(0x10);
        _staff_message_data_staticSegmentSDataEnd = .;
        _staff_message_data_staticSegmentOvlStart = .;
            build/baserom/staff_message_data_static.o (.ovl)
        . = ALIGN(0x10);
        _staff_message_data_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _staff_message_data_staticSegmentOvlEnd - _staff_message_data_staticSegmentTextStart );
    _staff_message_data_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..staff_message_data_static.bss ADDR(..staff_message_data_static) + SIZEOF(..staff_message_data_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _staff_message_data_staticSegmentBssStart = .;
            build/baserom/staff_message_data_static.o (.sbss)
            build/baserom/staff_message_data_static.o (.scommon)
            build/baserom/staff_message_data_static.o (.bss)
            build/baserom/staff_message_data_static.o (COMMON)
        . = ALIGN(0x10);
        _staff_message_data_staticSegmentBssEnd = .;
        _staff_message_data_staticSegmentEnd = .;
    }
    _staff_message_data_staticSegmentBssSize = ABSOLUTE( _staff_message_data_staticSegmentBssEnd - _staff_message_data_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _map_grand_staticSegmentRomStart = _RomSize;
    ..map_grand_static : AT(_RomSize)
    {
        _map_grand_staticSegmentStart = .;
        . = ALIGN(0x10);
        _map_grand_staticSegmentTextStart = .;
            build/baserom/map_grand_static.o (.text)
        _map_grand_staticSegmentTextEnd = .;
    _map_grand_staticSegmentTextSize = ABSOLUTE( _map_grand_staticSegmentTextEnd - _map_grand_staticSegmentTextStart );
        _map_grand_staticSegmentDataStart = .;
            build/baserom/map_grand_static.o (.data)
        _map_grand_staticSegmentDataEnd = .;
    _map_grand_staticSegmentDataSize = ABSOLUTE( _map_grand_staticSegmentDataEnd - _map_grand_staticSegmentDataStart );
        _map_grand_staticSegmentRoDataStart = .;
            build/baserom/map_grand_static.o (.rodata)
        _map_grand_staticSegmentRoDataEnd = .;
    _map_grand_staticSegmentRoDataSize = ABSOLUTE( _map_grand_staticSegmentRoDataEnd - _map_grand_staticSegmentRoDataStart );
        _map_grand_staticSegmentSDataStart = .;
            build/baserom/map_grand_static.o (.sdata)
        . = ALIGN(0x10);
        _map_grand_staticSegmentSDataEnd = .;
        _map_grand_staticSegmentOvlStart = .;
            build/baserom/map_grand_static.o (.ovl)
        . = ALIGN(0x10);
        _map_grand_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _map_grand_staticSegmentOvlEnd - _map_grand_staticSegmentTextStart );
    _map_grand_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..map_grand_static.bss ADDR(..map_grand_static) + SIZEOF(..map_grand_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _map_grand_staticSegmentBssStart = .;
            build/baserom/map_grand_static.o (.sbss)
            build/baserom/map_grand_static.o (.scommon)
            build/baserom/map_grand_static.o (.bss)
            build/baserom/map_grand_static.o (COMMON)
        . = ALIGN(0x10);
        _map_grand_staticSegmentBssEnd = .;
        _map_grand_staticSegmentEnd = .;
    }
    _map_grand_staticSegmentBssSize = ABSOLUTE( _map_grand_staticSegmentBssEnd - _map_grand_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _map_48x85_staticSegmentRomStart = _RomSize;
    ..map_48x85_static : AT(_RomSize)
    {
        _map_48x85_staticSegmentStart = .;
        . = ALIGN(0x10);
        _map_48x85_staticSegmentTextStart = .;
            build/baserom/map_48x85_static.o (.text)
        _map_48x85_staticSegmentTextEnd = .;
    _map_48x85_staticSegmentTextSize = ABSOLUTE( _map_48x85_staticSegmentTextEnd - _map_48x85_staticSegmentTextStart );
        _map_48x85_staticSegmentDataStart = .;
            build/baserom/map_48x85_static.o (.data)
        _map_48x85_staticSegmentDataEnd = .;
    _map_48x85_staticSegmentDataSize = ABSOLUTE( _map_48x85_staticSegmentDataEnd - _map_48x85_staticSegmentDataStart );
        _map_48x85_staticSegmentRoDataStart = .;
            build/baserom/map_48x85_static.o (.rodata)
        _map_48x85_staticSegmentRoDataEnd = .;
    _map_48x85_staticSegmentRoDataSize = ABSOLUTE( _map_48x85_staticSegmentRoDataEnd - _map_48x85_staticSegmentRoDataStart );
        _map_48x85_staticSegmentSDataStart = .;
            build/baserom/map_48x85_static.o (.sdata)
        . = ALIGN(0x10);
        _map_48x85_staticSegmentSDataEnd = .;
        _map_48x85_staticSegmentOvlStart = .;
            build/baserom/map_48x85_static.o (.ovl)
        . = ALIGN(0x10);
        _map_48x85_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _map_48x85_staticSegmentOvlEnd - _map_48x85_staticSegmentTextStart );
    _map_48x85_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..map_48x85_static.bss ADDR(..map_48x85_static) + SIZEOF(..map_48x85_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _map_48x85_staticSegmentBssStart = .;
            build/baserom/map_48x85_static.o (.sbss)
            build/baserom/map_48x85_static.o (.scommon)
            build/baserom/map_48x85_static.o (.bss)
            build/baserom/map_48x85_static.o (COMMON)
        . = ALIGN(0x10);
        _map_48x85_staticSegmentBssEnd = .;
        _map_48x85_staticSegmentEnd = .;
    }
    _map_48x85_staticSegmentBssSize = ABSOLUTE( _map_48x85_staticSegmentBssEnd - _map_48x85_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _map_i_staticSegmentRomStart = _RomSize;
    ..map_i_static : AT(_RomSize)
    {
        _map_i_staticSegmentStart = .;
        . = ALIGN(0x10);
        _map_i_staticSegmentTextStart = .;
            build/baserom/map_i_static.o (.text)
        _map_i_staticSegmentTextEnd = .;
    _map_i_staticSegmentTextSize = ABSOLUTE( _map_i_staticSegmentTextEnd - _map_i_staticSegmentTextStart );
        _map_i_staticSegmentDataStart = .;
            build/baserom/map_i_static.o (.data)
        _map_i_staticSegmentDataEnd = .;
    _map_i_staticSegmentDataSize = ABSOLUTE( _map_i_staticSegmentDataEnd - _map_i_staticSegmentDataStart );
        _map_i_staticSegmentRoDataStart = .;
            build/baserom/map_i_static.o (.rodata)
        _map_i_staticSegmentRoDataEnd = .;
    _map_i_staticSegmentRoDataSize = ABSOLUTE( _map_i_staticSegmentRoDataEnd - _map_i_staticSegmentRoDataStart );
        _map_i_staticSegmentSDataStart = .;
            build/baserom/map_i_static.o (.sdata)
        . = ALIGN(0x10);
        _map_i_staticSegmentSDataEnd = .;
        _map_i_staticSegmentOvlStart = .;
            build/baserom/map_i_static.o (.ovl)
        . = ALIGN(0x10);
        _map_i_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _map_i_staticSegmentOvlEnd - _map_i_staticSegmentTextStart );
    _map_i_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..map_i_static.bss ADDR(..map_i_static) + SIZEOF(..map_i_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _map_i_staticSegmentBssStart = .;
            build/baserom/map_i_static.o (.sbss)
            build/baserom/map_i_static.o (.scommon)
            build/baserom/map_i_static.o (.bss)
            build/baserom/map_i_static.o (COMMON)
        . = ALIGN(0x10);
        _map_i_staticSegmentBssEnd = .;
        _map_i_staticSegmentEnd = .;
    }
    _map_i_staticSegmentBssSize = ABSOLUTE( _map_i_staticSegmentBssEnd - _map_i_staticSegmentBssStart );

    _codeSegmentRomStart = _RomSize;
    ..code _dmadataSegmentEnd : AT(_RomSize)
    {
        _codeSegmentStart = .;
        . = ALIGN(0x10);
        _codeSegmentTextStart = .;
            build/src/code/z_en_a_keep.o (.text)
            build/src/code/z_en_item00.o (.text)
            build/data/z_en_item00.data.o (.text)
            build/data/z_en_item00.bss.o (.text)
            build/src/code/z_eff_blure.o (.text)
            build/src/code/z_eff_shield_particle.o (.text)
            build/src/code/z_eff_spark.o (.text)
            build/src/code/z_eff_ss_dead.o (.text)
            build/src/code/z_effect.o (.text)
            build/src/code/z_effect_soft_sprite.o (.text)
            build/src/code/z_effect_soft_sprite_old_init.o (.text)
            build/src/code/z_effect_soft_sprite_dlftbls.o (.text)
            build/src/code/flg_set.o (.text)
            build/src/code/z_DLF.o (.text)
            build/src/code/z_actor.o (.text)
            build/src/code/z_actor_dlftbls.o (.text)
            build/src/code/z_bgcheck.o (.text)
            build/data/z_bgcheck.data.o (.text)
            build/data/z_bgcheck.rodata.o (.text)
            build/data/z_bgcheck.bss.o (.text)
            build/src/code/code_800430A0.o (.text)
            build/src/code/code_80043480.o (.text)
            build/src/code/z_camera.o (.text)
            build/data/z_camera.bss.o (.text)
            build/src/code/z_collision_btltbls.o (.text)
            build/src/code/z_collision_check.o (.text)
            build/src/code/z_common_data.o (.text)
            build/src/code/z_debug.o (.text)
            build/src/code/z_debug_display.o (.text)
            build/src/code/z_demo.o (.text)
            build/src/code/code_80069420.o (.text)
            build/src/code/z_draw.o (.text)
            build/src/code/code_8006BA00.o (.text)
            build/src/code/z_elf_message.o (.text)
            build/src/code/z_face_reaction.o (.text)
            build/src/code/code_8006C3A0.o (.text)
            build/src/code/code_8006C510.o (.text)
            build/src/code/z_fcurve_data_skelanime.o (.text)
            build/src/code/z_game_dlftbls.o (.text)
            build/src/code/z_horse.o (.text)
            build/src/code/z_jpeg.o (.text)
            build/src/code/z_kaleido_setup.o (.text)
            build/src/code/z_kanfont.o (.text)
            build/src/code/z_kankyo.o (.text)
            build/data/z_kankyo.data.o (.text)
            build/data/z_kankyo.bss.o (.text)
            build/src/code/z_lib.o (.text)
            build/src/code/z_lifemeter.o (.text)
            build/data/z_lifemeter.data.o (.text)
            build/src/code/z_lights.o (.text)
            build/src/code/z_malloc.o (.text)
            build/src/code/z_map_mark.o (.text)
            build/src/code/z_moji.o (.text)
            build/src/code/z_prenmi_buff.o (.text)
            build/src/code/z_msgevent.o (.text)
            build/src/code/z_olib.o (.text)
            build/src/code/z_onepointdemo.o (.text)
            build/data/z_onepointdemo.data.o (.text)
            build/src/code/z_map_exp.o (.text)
            build/src/code/z_map_data.o (.text)
            build/src/code/z_parameter.o (.text)
            build/src/code/z_path.o (.text)
            build/src/code/code_8008E6A0.o (.text)
            build/src/code/z_player_lib.o (.text)
            build/src/code/z_prenmi.o (.text)
            build/src/code/z_quake.o (.text)
            build/src/code/z_rcp.o (.text)
            build/src/code/z_room.o (.text)
            build/src/code/z_sample.o (.text)
            build/src/code/code_80097A00.o (.text)
            build/src/code/z_scene.o (.text)
            build/src/code/z_scene_table.o (.text)
            build/src/code/z_skelanime.o (.text)
            build/src/code/z_skin.o (.text)
            build/data/z_skin.bss.o (.text)
            build/src/code/z_skin_awb.o (.text)
            build/src/code/z_skin_matrix.o (.text)
            build/src/code/z_sram.o (.text)
            build/src/code/z_ss_sram.o (.text)
            build/src/code/code_800A9F30.o (.text)
            build/data/z_text.data.o (.text)
            build/src/code/z_view.o (.text)
            build/src/code/z_vimode.o (.text)
            build/src/code/code_800ACE70.o (.text)
            build/src/code/z_vismono.o (.text)
            build/src/code/code_800AD920.o (.text)
            build/src/code/z_vr_box.o (.text)
            build/data/z_vr_box.data.o (.text)
            build/src/code/z_vr_box_draw.o (.text)
            build/src/code/z_player_call.o (.text)
            build/src/code/z_fbdemo.o (.text)
            build/src/code/z_fbdemo_triforce.o (.text)
            build/src/code/z_fbdemo_wipe1.o (.text)
            build/src/code/z_fbdemo_circle.o (.text)
            build/src/code/z_fbdemo_fade.o (.text)
            build/src/code/shrink_window.o (.text)
            build/src/code/db_camera.o (.text)
            build/data/db_camera.rodata.o (.text)
            build/data/db_camera.data.o (.text)
            build/data/db_camera.bss.o (.text)
            build/src/code/code_800BB0A0.o (.text)
            build/src/code/mempak.o (.text)
            build/src/code/z_kaleido_manager.o (.text)
            build/src/code/z_kaleido_scope_call.o (.text)
            build/src/code/z_play.o (.text)
            build/src/code/PreRender.o (.text)
            build/src/code/TwoHeadArena.o (.text)
            build/src/code/code_800C3C20.o (.text)
            build/src/code/audioMgr.o (.text)
            build/src/code/title_setup.o (.text)
            build/src/code/game.o (.text)
            build/src/code/gamealloc.o (.text)
            build/src/code/graph.o (.text)
            build/src/code/listalloc.o (.text)
            build/src/code/main.o (.text)
            build/src/code/padmgr.o (.text)
            build/src/code/sched.o (.text)
            build/src/code/speed_meter.o (.text)
            build/src/code/sys_cfb.o (.text)
            build/src/code/sys_math.o (.text)
            build/src/code/sys_math3d.o (.text)
            build/src/code/sys_math_atan.o (.text)
            build/src/code/sys_matrix.o (.text)
            build/src/code/sys_ucode.o (.text)
            build/src/code/code_800D2E30.o (.text)
            build/data/code_800D2E30.data.o (.text)
            build/src/code/code_800D31A0.o (.text)
            build/src/code/irqmgr.o (.text)
            build/src/code/debug_malloc.o (.text)
            build/src/code/fault.o (.text)
            build/data/fault.bss.o (.text)
            build/src/code/fault_drawer.o (.text)
            build/data/fault_drawer.bss.o (.text)
            build/asm/code_800D71F0.o (.text)
            build/src/code/ucode_disas.o (.text)
            build/src/code/code_800DACC0.o (.text)
            build/data/code_800DACC0.data.o (.text)
            build/data/code_800DACC0.bss.o (.text)
            build/src/code/audio_heap.o (.text)
            build/src/code/code_800E11F0.o (.text)
            build/data/code_800E11F0.data.o (.text)
            build/data/code_800E11F0.rodata.o (.text)
            build/src/libultra_code_O2/code_800E6840.o (.text)
            build/src/libultra_code_O2/osAiSetNextBuffer.o (.text)
            build/src/code/audio_playback.o (.text)
            build/src/code/audio_effects.o (.text)
            build/data/audio_effects.data.o (.text)
            build/src/code/audio_seqplayer.o (.text)
            build/src/code/code_800EC960.o (.text)
            build/data/code_800EC960.data.o (.text)
            build/src/code/code_800F7260.o (.text)
            build/data/code_800F7260.data.o (.text)
            build/src/code/code_800F9280.o (.text)
            build/data/code_800F9280.data.o (.text)
            build/data/code_800F9280.rodata.o (.text)
            build/src/code/logseverity.o (.text)
            build/src/code/gfxprint.o (.text)
            build/src/code/code_800FBCE0.o (.text)
            build/src/code/loadfragment2.o (.text)
            build/src/code/mtxuty-cvt.o (.text)
            build/src/code/relocation.o (.text)
            build/src/code/code_800FC620.o (.text)
            build/src/code/padutils.o (.text)
            build/src/code/padsetup.o (.text)
            build/src/code/code_800FCE80.o (.text)
            build/asm/fp.o (.text)
            build/src/code/system_malloc.o (.text)
            build/src/code/code_800FD970.o (.text)
            build/src/code/__osMalloc.o (.text)
            build/src/code/printutils.o (.text)
            build/src/code/sleep.o (.text)
            build/src/code/jpegutils.o (.text)
            build/src/code/jpegdecoder.o (.text)
            build/src/libultra_code_O2/osPfsFreeBlocks.o (.text)
            build/asm/guScale.o (.text)
            build/src/libultra_code_O2/sinf.o (.text)
            build/src/libultra_code_O2/sins.o (.text)
            build/src/libultra_code_O2/sptask.o (.text)
            build/src/libultra_code_O2/osRumblePak.o (.text)
            build/src/libultra_code_O2/__osSiCreateAccessQueue.o (.text)
            build/src/libultra_code_O2/osContInit.o (.text)
            build/src/libultra_code_O2/osContStartReadData.o (.text)
            build/src/libultra_code_O2/guPerspectiveF.o (.text)
            build/src/libultra_code_O2/__osSpRawStartDma.o (.text)
            build/src/libultra_code_O2/__osSiRawStartDma.o (.text)
            build/src/libultra_code_O2/osSpTaskYield.o (.text)
            build/src/libultra_code_O2/pfsreadwritefile.o (.text)
            build/src/libultra_code_O2/__osPfsGetStatus.o (.text)
            build/asm/guMtxIdentF.o (.text)
            build/src/libultra_code_O2/guLookAt.o (.text)
            build/src/libultra_code_O2/pfsallocatefile.o (.text)
            build/src/libultra_code_O1/osStopTimer.o (.text)
            build/src/libultra_code_O2/contpfs.o (.text)
            build/src/libultra_code_O2/code_80102FA0.o (.text)
            build/src/libultra_code_O2/osPfsFindFile.o (.text)
            build/src/libultra_code_O2/sqrtf.o (.text)
            build/src/libultra_code_O2/osAfterPreNMI.o (.text)
            build/src/libultra_code_O2/contquery.o (.text)
            build/src/libultra_code_O2/guLookAtHilite.o (.text)
            build/src/libultra_code_O2/sp.o (.text)
            build/asm/guMtxIdent.o (.text)
            build/src/libultra_code_O2/guPosition.o (.text)
            build/src/libultra_code_O2/osSpTaskYielded.o (.text)
            build/src/libultra_code_O2/rotate.o (.text)
            build/src/libultra_code_O2/osAiSetFrequency.o (.text)
            build/src/libultra_code_O2/__osGetActiveQueue.o (.text)
            build/asm/guNormalize.o (.text)
            build/src/libultra_code_O2/osDpGetStatus.o (.text)
            build/src/libultra_code_O2/osDpSetStatus.o (.text)
            build/src/libultra_code_O2/osPfsDeleteFile.o (.text)
            build/src/libultra_code_O2/ortho.o (.text)
            build/src/libultra_code_O2/cosf.o (.text)
            build/data/__libm_qnan_f.rodata.o (.text)
            build/src/libultra_code_O2/coss.o (.text)
            build/src/libultra_code_O2/osViSetEvent.o (.text)
            build/src/libultra_code_O2/osPfsIsPlug.o (.text)
            build/src/libultra_code_O2/guS2DInitBg.o (.text)
            build/src/libultra_code_O2/__osPfsSelectBank.o (.text)
            build/src/libultra_code_O2/osContSetCh.o (.text)
            build/src/libultra_code_O2/code_80104D60.o (.text)
            build/src/libultra_code_O2/pfsinitpak.o (.text)
            build/src/libultra_code_O2/pfschecker.o (.text)
            build/src/libultra_code_O2/osAiGetLength.o (.text)
            build/asm/guTranslate.o (.text)
            build/src/libultra_code_O2/__osContRamWrite.o (.text)
            build/src/libultra_code_O2/__osContRamRead.o (.text)
            build/src/libultra_code_O2/__osContAddressCrc.o (.text)
            build/src/libultra_code_O1/osSetTimer.o (.text)
            build/src/libultra_code_O2/__osSpGetStatus.o (.text)
            build/src/libultra_code_O2/__osSpSetStatus.o (.text)
            build/asm/osWritebackDCacheAll.o (.text)
            build/src/libultra_code_O2/__osGetCurrFaultedThread.o (.text)
            build/asm/guMtxF2L.o (.text)
            build/src/libultra_code_O1/llcvt.o (.text)
            build/src/libultra_code_O2/osViGetCurrentFramebuffer.o (.text)
            build/src/libultra_code_O2/__osSpSetPc.o (.text)
            build/src/libultra_code_O2_g3/sqrt.o (.text)
            build/src/libultra_code_O2_g3/absf.o (.text)
            build/src/code/code_801067F0.o (.text)
            build/src/code/code_80106860.o (.text)
            build/src/code/code_801068B0.o (.text)
            build/data/z_message_PAL.rodata.o (.text)
            build/src/code/z_message_PAL.o (.text)
            build/data/z_message_PAL.bss.o (.text)
            build/src/code/code_80110450.o (.text)
            build/src/code/z_construct.o (.text)
            build/data/rsp.text.o (.text)
            build/data/rsp.rodata.o (.text)
        _codeSegmentTextEnd = .;
    _codeSegmentTextSize = ABSOLUTE( _codeSegmentTextEnd - _codeSegmentTextStart );
        _codeSegmentDataStart = .;
            build/src/code/z_en_a_keep.o (.data)
            build/src/code/z_en_item00.o (.data)
            build/data/z_en_item00.data.o (.data)
            build/data/z_en_item00.bss.o (.data)
            build/src/code/z_eff_blure.o (.data)
            build/src/code/z_eff_shield_particle.o (.data)
            build/src/code/z_eff_spark.o (.data)
            build/src/code/z_eff_ss_dead.o (.data)
            build/src/code/z_effect.o (.data)
            build/src/code/z_effect_soft_sprite.o (.data)
            build/src/code/z_effect_soft_sprite_old_init.o (.data)
            build/src/code/z_effect_soft_sprite_dlftbls.o (.data)
            build/src/code/flg_set.o (.data)
            build/src/code/z_DLF.o (.data)
            build/src/code/z_actor.o (.data)
            build/src/code/z_actor_dlftbls.o (.data)
            build/src/code/z_bgcheck.o (.data)
            build/data/z_bgcheck.data.o (.data)
            build/data/z_bgcheck.rodata.o (.data)
            build/data/z_bgcheck.bss.o (.data)
            build/src/code/code_800430A0.o (.data)
            build/src/code/code_80043480.o (.data)
            build/src/code/z_camera.o (.data)
            build/data/z_camera.bss.o (.data)
            build/src/code/z_collision_btltbls.o (.data)
            build/src/code/z_collision_check.o (.data)
            build/src/code/z_common_data.o (.data)
            build/src/code/z_debug.o (.data)
            build/src/code/z_debug_display.o (.data)
            build/src/code/z_demo.o (.data)
            build/src/code/code_80069420.o (.data)
            build/src/code/z_draw.o (.data)
            build/src/code/code_8006BA00.o (.data)
            build/src/code/z_elf_message.o (.data)
            build/src/code/z_face_reaction.o (.data)
            build/src/code/code_8006C3A0.o (.data)
            build/src/code/code_8006C510.o (.data)
            build/src/code/z_fcurve_data_skelanime.o (.data)
            build/src/code/z_game_dlftbls.o (.data)
            build/src/code/z_horse.o (.data)
            build/src/code/z_jpeg.o (.data)
            build/src/code/z_kaleido_setup.o (.data)
            build/src/code/z_kanfont.o (.data)
            build/src/code/z_kankyo.o (.data)
            build/data/z_kankyo.data.o (.data)
            build/data/z_kankyo.bss.o (.data)
            build/src/code/z_lib.o (.data)
            build/src/code/z_lifemeter.o (.data)
            build/data/z_lifemeter.data.o (.data)
            build/src/code/z_lights.o (.data)
            build/src/code/z_malloc.o (.data)
            build/src/code/z_map_mark.o (.data)
            build/src/code/z_moji.o (.data)
            build/src/code/z_prenmi_buff.o (.data)
            build/src/code/z_msgevent.o (.data)
            build/src/code/z_olib.o (.data)
            build/src/code/z_onepointdemo.o (.data)
            build/data/z_onepointdemo.data.o (.data)
            build/src/code/z_map_exp.o (.data)
            build/src/code/z_map_data.o (.data)
            build/src/code/z_parameter.o (.data)
            build/src/code/z_path.o (.data)
            build/src/code/code_8008E6A0.o (.data)
            build/src/code/z_player_lib.o (.data)
            build/src/code/z_prenmi.o (.data)
            build/src/code/z_quake.o (.data)
            build/src/code/z_rcp.o (.data)
            build/src/code/z_room.o (.data)
            build/src/code/z_sample.o (.data)
            build/src/code/code_80097A00.o (.data)
            build/src/code/z_scene.o (.data)
            build/src/code/z_scene_table.o (.data)
            build/src/code/z_skelanime.o (.data)
            build/src/code/z_skin.o (.data)
            build/data/z_skin.bss.o (.data)
            build/src/code/z_skin_awb.o (.data)
            build/src/code/z_skin_matrix.o (.data)
            build/src/code/z_sram.o (.data)
            build/src/code/z_ss_sram.o (.data)
            build/src/code/code_800A9F30.o (.data)
            build/data/z_text.data.o (.data)
            build/src/code/z_view.o (.data)
            build/src/code/z_vimode.o (.data)
            build/src/code/code_800ACE70.o (.data)
            build/src/code/z_vismono.o (.data)
            build/src/code/code_800AD920.o (.data)
            build/src/code/z_vr_box.o (.data)
            build/data/z_vr_box.data.o (.data)
            build/src/code/z_vr_box_draw.o (.data)
            build/src/code/z_player_call.o (.data)
            build/src/code/z_fbdemo.o (.data)
            build/src/code/z_fbdemo_triforce.o (.data)
            build/src/code/z_fbdemo_wipe1.o (.data)
            build/src/code/z_fbdemo_circle.o (.data)
            build/src/code/z_fbdemo_fade.o (.data)
            build/src/code/shrink_window.o (.data)
            build/src/code/db_camera.o (.data)
            build/data/db_camera.rodata.o (.data)
            build/data/db_camera.data.o (.data)
            build/data/db_camera.bss.o (.data)
            build/src/code/code_800BB0A0.o (.data)
            build/src/code/mempak.o (.data)
            build/src/code/z_kaleido_manager.o (.data)
            build/src/code/z_kaleido_scope_call.o (.data)
            build/src/code/z_play.o (.data)
            build/src/code/PreRender.o (.data)
            build/src/code/TwoHeadArena.o (.data)
            build/src/code/code_800C3C20.o (.data)
            build/src/code/audioMgr.o (.data)
            build/src/code/title_setup.o (.data)
            build/src/code/game.o (.data)
            build/src/code/gamealloc.o (.data)
            build/src/code/graph.o (.data)
            build/src/code/listalloc.o (.data)
            build/src/code/main.o (.data)
            build/src/code/padmgr.o (.data)
            build/src/code/sched.o (.data)
            build/src/code/speed_meter.o (.data)
            build/src/code/sys_cfb.o (.data)
            build/src/code/sys_math.o (.data)
            build/src/code/sys_math3d.o (.data)
            build/src/code/sys_math_atan.o (.data)
            build/src/code/sys_matrix.o (.data)
            build/src/code/sys_ucode.o (.data)
            build/src/code/code_800D2E30.o (.data)
            build/data/code_800D2E30.data.o (.data)
            build/src/code/code_800D31A0.o (.data)
            build/src/code/irqmgr.o (.data)
            build/src/code/debug_malloc.o (.data)
            build/src/code/fault.o (.data)
            build/data/fault.bss.o (.data)
            build/src/code/fault_drawer.o (.data)
            build/data/fault_drawer.bss.o (.data)
            build/asm/code_800D71F0.o (.data)
            build/src/code/ucode_disas.o (.data)
            build/src/code/code_800DACC0.o (.data)
            build/data/code_800DACC0.data.o (.data)
            build/data/code_800DACC0.bss.o (.data)
            build/src/code/audio_heap.o (.data)
            build/src/code/code_800E11F0.o (.data)
            build/data/code_800E11F0.data.o (.data)
            build/data/code_800E11F0.rodata.o (.data)
            build/src/libultra_code_O2/code_800E6840.o (.data)
            build/src/libultra_code_O2/osAiSetNextBuffer.o (.data)
            build/src/code/audio_playback.o (.data)
            build/src/code/audio_effects.o (.data)
            build/data/audio_effects.data.o (.data)
            build/src/code/audio_seqplayer.o (.data)
            build/src/code/code_800EC960.o (.data)
            build/data/code_800EC960.data.o (.data)
            build/src/code/code_800F7260.o (.data)
            build/data/code_800F7260.data.o (.data)
            build/src/code/code_800F9280.o (.data)
            build/data/code_800F9280.data.o (.data)
            build/data/code_800F9280.rodata.o (.data)
            build/src/code/logseverity.o (.data)
            build/src/code/gfxprint.o (.data)
            build/src/code/code_800FBCE0.o (.data)
            build/src/code/loadfragment2.o (.data)
            build/src/code/mtxuty-cvt.o (.data)
            build/src/code/relocation.o (.data)
            build/src/code/code_800FC620.o (.data)
            build/src/code/padutils.o (.data)
            build/src/code/padsetup.o (.data)
            build/src/code/code_800FCE80.o (.data)
            build/asm/fp.o (.data)
            build/src/code/system_malloc.o (.data)
            build/src/code/code_800FD970.o (.data)
            build/src/code/__osMalloc.o (.data)
            build/src/code/printutils.o (.data)
            build/src/code/sleep.o (.data)
            build/src/code/jpegutils.o (.data)
            build/src/code/jpegdecoder.o (.data)
            build/src/libultra_code_O2/osPfsFreeBlocks.o (.data)
            build/asm/guScale.o (.data)
            build/src/libultra_code_O2/sinf.o (.data)
            build/src/libultra_code_O2/sins.o (.data)
            build/src/libultra_code_O2/sptask.o (.data)
            build/src/libultra_code_O2/osRumblePak.o (.data)
            build/src/libultra_code_O2/__osSiCreateAccessQueue.o (.data)
            build/src/libultra_code_O2/osContInit.o (.data)
            build/src/libultra_code_O2/osContStartReadData.o (.data)
            build/src/libultra_code_O2/guPerspectiveF.o (.data)
            build/src/libultra_code_O2/__osSpRawStartDma.o (.data)
            build/src/libultra_code_O2/__osSiRawStartDma.o (.data)
            build/src/libultra_code_O2/osSpTaskYield.o (.data)
            build/src/libultra_code_O2/pfsreadwritefile.o (.data)
            build/src/libultra_code_O2/__osPfsGetStatus.o (.data)
            build/asm/guMtxIdentF.o (.data)
            build/src/libultra_code_O2/guLookAt.o (.data)
            build/src/libultra_code_O2/pfsallocatefile.o (.data)
            build/src/libultra_code_O1/osStopTimer.o (.data)
            build/src/libultra_code_O2/contpfs.o (.data)
            build/src/libultra_code_O2/code_80102FA0.o (.data)
            build/src/libultra_code_O2/osPfsFindFile.o (.data)
            build/src/libultra_code_O2/sqrtf.o (.data)
            build/src/libultra_code_O2/osAfterPreNMI.o (.data)
            build/src/libultra_code_O2/contquery.o (.data)
            build/src/libultra_code_O2/guLookAtHilite.o (.data)
            build/src/libultra_code_O2/sp.o (.data)
            build/asm/guMtxIdent.o (.data)
            build/src/libultra_code_O2/guPosition.o (.data)
            build/src/libultra_code_O2/osSpTaskYielded.o (.data)
            build/src/libultra_code_O2/rotate.o (.data)
            build/src/libultra_code_O2/osAiSetFrequency.o (.data)
            build/src/libultra_code_O2/__osGetActiveQueue.o (.data)
            build/asm/guNormalize.o (.data)
            build/src/libultra_code_O2/osDpGetStatus.o (.data)
            build/src/libultra_code_O2/osDpSetStatus.o (.data)
            build/src/libultra_code_O2/osPfsDeleteFile.o (.data)
            build/src/libultra_code_O2/ortho.o (.data)
            build/src/libultra_code_O2/cosf.o (.data)
            build/data/__libm_qnan_f.rodata.o (.data)
            build/src/libultra_code_O2/coss.o (.data)
            build/src/libultra_code_O2/osViSetEvent.o (.data)
            build/src/libultra_code_O2/osPfsIsPlug.o (.data)
            build/src/libultra_code_O2/guS2DInitBg.o (.data)
            build/src/libultra_code_O2/__osPfsSelectBank.o (.data)
            build/src/libultra_code_O2/osContSetCh.o (.data)
            build/src/libultra_code_O2/code_80104D60.o (.data)
            build/src/libultra_code_O2/pfsinitpak.o (.data)
            build/src/libultra_code_O2/pfschecker.o (.data)
            build/src/libultra_code_O2/osAiGetLength.o (.data)
            build/asm/guTranslate.o (.data)
            build/src/libultra_code_O2/__osContRamWrite.o (.data)
            build/src/libultra_code_O2/__osContRamRead.o (.data)
            build/src/libultra_code_O2/__osContAddressCrc.o (.data)
            build/src/libultra_code_O1/osSetTimer.o (.data)
            build/src/libultra_code_O2/__osSpGetStatus.o (.data)
            build/src/libultra_code_O2/__osSpSetStatus.o (.data)
            build/asm/osWritebackDCacheAll.o (.data)
            build/src/libultra_code_O2/__osGetCurrFaultedThread.o (.data)
            build/asm/guMtxF2L.o (.data)
            build/src/libultra_code_O1/llcvt.o (.data)
            build/src/libultra_code_O2/osViGetCurrentFramebuffer.o (.data)
            build/src/libultra_code_O2/__osSpSetPc.o (.data)
            build/src/libultra_code_O2_g3/sqrt.o (.data)
            build/src/libultra_code_O2_g3/absf.o (.data)
            build/src/code/code_801067F0.o (.data)
            build/src/code/code_80106860.o (.data)
            build/src/code/code_801068B0.o (.data)
            build/data/z_message_PAL.rodata.o (.data)
            build/src/code/z_message_PAL.o (.data)
            build/data/z_message_PAL.bss.o (.data)
            build/src/code/code_80110450.o (.data)
            build/src/code/z_construct.o (.data)
            build/data/rsp.text.o (.data)
            build/data/rsp.rodata.o (.data)
        _codeSegmentDataEnd = .;
    _codeSegmentDataSize = ABSOLUTE( _codeSegmentDataEnd - _codeSegmentDataStart );
        _codeSegmentRoDataStart = .;
            build/src/code/z_en_a_keep.o (.rodata)
            build/src/code/z_en_item00.o (.rodata)
            build/data/z_en_item00.data.o (.rodata)
            build/data/z_en_item00.bss.o (.rodata)
            build/src/code/z_eff_blure.o (.rodata)
            build/src/code/z_eff_shield_particle.o (.rodata)
            build/src/code/z_eff_spark.o (.rodata)
            build/src/code/z_eff_ss_dead.o (.rodata)
            build/src/code/z_effect.o (.rodata)
            build/src/code/z_effect_soft_sprite.o (.rodata)
            build/src/code/z_effect_soft_sprite_old_init.o (.rodata)
            build/src/code/z_effect_soft_sprite_dlftbls.o (.rodata)
            build/src/code/flg_set.o (.rodata)
            build/src/code/z_DLF.o (.rodata)
            build/src/code/z_actor.o (.rodata)
            build/src/code/z_actor_dlftbls.o (.rodata)
            build/src/code/z_bgcheck.o (.rodata)
            build/data/z_bgcheck.data.o (.rodata)
            build/data/z_bgcheck.rodata.o (.rodata)
            build/data/z_bgcheck.bss.o (.rodata)
            build/src/code/code_800430A0.o (.rodata)
            build/src/code/code_80043480.o (.rodata)
            build/src/code/z_camera.o (.rodata)
            build/data/z_camera.bss.o (.rodata)
            build/src/code/z_collision_btltbls.o (.rodata)
            build/src/code/z_collision_check.o (.rodata)
            build/src/code/z_common_data.o (.rodata)
            build/src/code/z_debug.o (.rodata)
            build/src/code/z_debug_display.o (.rodata)
            build/src/code/z_demo.o (.rodata)
            build/src/code/code_80069420.o (.rodata)
            build/src/code/z_draw.o (.rodata)
            build/src/code/code_8006BA00.o (.rodata)
            build/src/code/z_elf_message.o (.rodata)
            build/src/code/z_face_reaction.o (.rodata)
            build/src/code/code_8006C3A0.o (.rodata)
            build/src/code/code_8006C510.o (.rodata)
            build/src/code/z_fcurve_data_skelanime.o (.rodata)
            build/src/code/z_game_dlftbls.o (.rodata)
            build/src/code/z_horse.o (.rodata)
            build/src/code/z_jpeg.o (.rodata)
            build/src/code/z_kaleido_setup.o (.rodata)
            build/src/code/z_kanfont.o (.rodata)
            build/src/code/z_kankyo.o (.rodata)
            build/data/z_kankyo.data.o (.rodata)
            build/data/z_kankyo.bss.o (.rodata)
            build/src/code/z_lib.o (.rodata)
            build/src/code/z_lifemeter.o (.rodata)
            build/data/z_lifemeter.data.o (.rodata)
            build/src/code/z_lights.o (.rodata)
            build/src/code/z_malloc.o (.rodata)
            build/src/code/z_map_mark.o (.rodata)
            build/src/code/z_moji.o (.rodata)
            build/src/code/z_prenmi_buff.o (.rodata)
            build/src/code/z_msgevent.o (.rodata)
            build/src/code/z_olib.o (.rodata)
            build/src/code/z_onepointdemo.o (.rodata)
            build/data/z_onepointdemo.data.o (.rodata)
            build/src/code/z_map_exp.o (.rodata)
            build/src/code/z_map_data.o (.rodata)
            build/src/code/z_parameter.o (.rodata)
            build/src/code/z_path.o (.rodata)
            build/src/code/code_8008E6A0.o (.rodata)
            build/src/code/z_player_lib.o (.rodata)
            build/src/code/z_prenmi.o (.rodata)
            build/src/code/z_quake.o (.rodata)
            build/src/code/z_rcp.o (.rodata)
            build/src/code/z_room.o (.rodata)
            build/src/code/z_sample.o (.rodata)
            build/src/code/code_80097A00.o (.rodata)
            build/src/code/z_scene.o (.rodata)
            build/src/code/z_scene_table.o (.rodata)
            build/src/code/z_skelanime.o (.rodata)
            build/src/code/z_skin.o (.rodata)
            build/data/z_skin.bss.o (.rodata)
            build/src/code/z_skin_awb.o (.rodata)
            build/src/code/z_skin_matrix.o (.rodata)
            build/src/code/z_sram.o (.rodata)
            build/src/code/z_ss_sram.o (.rodata)
            build/src/code/code_800A9F30.o (.rodata)
            build/data/z_text.data.o (.rodata)
            build/src/code/z_view.o (.rodata)
            build/src/code/z_vimode.o (.rodata)
            build/src/code/code_800ACE70.o (.rodata)
            build/src/code/z_vismono.o (.rodata)
            build/src/code/code_800AD920.o (.rodata)
            build/src/code/z_vr_box.o (.rodata)
            build/data/z_vr_box.data.o (.rodata)
            build/src/code/z_vr_box_draw.o (.rodata)
            build/src/code/z_player_call.o (.rodata)
            build/src/code/z_fbdemo.o (.rodata)
            build/src/code/z_fbdemo_triforce.o (.rodata)
            build/src/code/z_fbdemo_wipe1.o (.rodata)
            build/src/code/z_fbdemo_circle.o (.rodata)
            build/src/code/z_fbdemo_fade.o (.rodata)
            build/src/code/shrink_window.o (.rodata)
            build/src/code/db_camera.o (.rodata)
            build/data/db_camera.rodata.o (.rodata)
            build/data/db_camera.data.o (.rodata)
            build/data/db_camera.bss.o (.rodata)
            build/src/code/code_800BB0A0.o (.rodata)
            build/src/code/mempak.o (.rodata)
            build/src/code/z_kaleido_manager.o (.rodata)
            build/src/code/z_kaleido_scope_call.o (.rodata)
            build/src/code/z_play.o (.rodata)
            build/src/code/PreRender.o (.rodata)
            build/src/code/TwoHeadArena.o (.rodata)
            build/src/code/code_800C3C20.o (.rodata)
            build/src/code/audioMgr.o (.rodata)
            build/src/code/title_setup.o (.rodata)
            build/src/code/game.o (.rodata)
            build/src/code/gamealloc.o (.rodata)
            build/src/code/graph.o (.rodata)
            build/src/code/listalloc.o (.rodata)
            build/src/code/main.o (.rodata)
            build/src/code/padmgr.o (.rodata)
            build/src/code/sched.o (.rodata)
            build/src/code/speed_meter.o (.rodata)
            build/src/code/sys_cfb.o (.rodata)
            build/src/code/sys_math.o (.rodata)
            build/src/code/sys_math3d.o (.rodata)
            build/src/code/sys_math_atan.o (.rodata)
            build/src/code/sys_matrix.o (.rodata)
            build/src/code/sys_ucode.o (.rodata)
            build/src/code/code_800D2E30.o (.rodata)
            build/data/code_800D2E30.data.o (.rodata)
            build/src/code/code_800D31A0.o (.rodata)
            build/src/code/irqmgr.o (.rodata)
            build/src/code/debug_malloc.o (.rodata)
            build/src/code/fault.o (.rodata)
            build/data/fault.bss.o (.rodata)
            build/src/code/fault_drawer.o (.rodata)
            build/data/fault_drawer.bss.o (.rodata)
            build/asm/code_800D71F0.o (.rodata)
            build/src/code/ucode_disas.o (.rodata)
            build/src/code/code_800DACC0.o (.rodata)
            build/data/code_800DACC0.data.o (.rodata)
            build/data/code_800DACC0.bss.o (.rodata)
            build/src/code/audio_heap.o (.rodata)
            build/src/code/code_800E11F0.o (.rodata)
            build/data/code_800E11F0.data.o (.rodata)
            build/data/code_800E11F0.rodata.o (.rodata)
            build/src/libultra_code_O2/code_800E6840.o (.rodata)
            build/src/libultra_code_O2/osAiSetNextBuffer.o (.rodata)
            build/src/code/audio_playback.o (.rodata)
            build/src/code/audio_effects.o (.rodata)
            build/data/audio_effects.data.o (.rodata)
            build/src/code/audio_seqplayer.o (.rodata)
            build/src/code/code_800EC960.o (.rodata)
            build/data/code_800EC960.data.o (.rodata)
            build/src/code/code_800F7260.o (.rodata)
            build/data/code_800F7260.data.o (.rodata)
            build/src/code/code_800F9280.o (.rodata)
            build/data/code_800F9280.data.o (.rodata)
            build/data/code_800F9280.rodata.o (.rodata)
            build/src/code/logseverity.o (.rodata)
            build/src/code/gfxprint.o (.rodata)
            build/src/code/code_800FBCE0.o (.rodata)
            build/src/code/loadfragment2.o (.rodata)
            build/src/code/mtxuty-cvt.o (.rodata)
            build/src/code/relocation.o (.rodata)
            build/src/code/code_800FC620.o (.rodata)
            build/src/code/padutils.o (.rodata)
            build/src/code/padsetup.o (.rodata)
            build/src/code/code_800FCE80.o (.rodata)
            build/asm/fp.o (.rodata)
            build/src/code/system_malloc.o (.rodata)
            build/src/code/code_800FD970.o (.rodata)
            build/src/code/__osMalloc.o (.rodata)
            build/src/code/printutils.o (.rodata)
            build/src/code/sleep.o (.rodata)
            build/src/code/jpegutils.o (.rodata)
            build/src/code/jpegdecoder.o (.rodata)
            build/src/libultra_code_O2/osPfsFreeBlocks.o (.rodata)
            build/asm/guScale.o (.rodata)
            build/src/libultra_code_O2/sinf.o (.rodata)
            build/src/libultra_code_O2/sins.o (.rodata)
            build/src/libultra_code_O2/sptask.o (.rodata)
            build/src/libultra_code_O2/osRumblePak.o (.rodata)
            build/src/libultra_code_O2/__osSiCreateAccessQueue.o (.rodata)
            build/src/libultra_code_O2/osContInit.o (.rodata)
            build/src/libultra_code_O2/osContStartReadData.o (.rodata)
            build/src/libultra_code_O2/guPerspectiveF.o (.rodata)
            build/src/libultra_code_O2/__osSpRawStartDma.o (.rodata)
            build/src/libultra_code_O2/__osSiRawStartDma.o (.rodata)
            build/src/libultra_code_O2/osSpTaskYield.o (.rodata)
            build/src/libultra_code_O2/pfsreadwritefile.o (.rodata)
            build/src/libultra_code_O2/__osPfsGetStatus.o (.rodata)
            build/asm/guMtxIdentF.o (.rodata)
            build/src/libultra_code_O2/guLookAt.o (.rodata)
            build/src/libultra_code_O2/pfsallocatefile.o (.rodata)
            build/src/libultra_code_O1/osStopTimer.o (.rodata)
            build/src/libultra_code_O2/contpfs.o (.rodata)
            build/src/libultra_code_O2/code_80102FA0.o (.rodata)
            build/src/libultra_code_O2/osPfsFindFile.o (.rodata)
            build/src/libultra_code_O2/sqrtf.o (.rodata)
            build/src/libultra_code_O2/osAfterPreNMI.o (.rodata)
            build/src/libultra_code_O2/contquery.o (.rodata)
            build/src/libultra_code_O2/guLookAtHilite.o (.rodata)
            build/src/libultra_code_O2/sp.o (.rodata)
            build/asm/guMtxIdent.o (.rodata)
            build/src/libultra_code_O2/guPosition.o (.rodata)
            build/src/libultra_code_O2/osSpTaskYielded.o (.rodata)
            build/src/libultra_code_O2/rotate.o (.rodata)
            build/src/libultra_code_O2/osAiSetFrequency.o (.rodata)
            build/src/libultra_code_O2/__osGetActiveQueue.o (.rodata)
            build/asm/guNormalize.o (.rodata)
            build/src/libultra_code_O2/osDpGetStatus.o (.rodata)
            build/src/libultra_code_O2/osDpSetStatus.o (.rodata)
            build/src/libultra_code_O2/osPfsDeleteFile.o (.rodata)
            build/src/libultra_code_O2/ortho.o (.rodata)
            build/src/libultra_code_O2/cosf.o (.rodata)
            build/data/__libm_qnan_f.rodata.o (.rodata)
            build/src/libultra_code_O2/coss.o (.rodata)
            build/src/libultra_code_O2/osViSetEvent.o (.rodata)
            build/src/libultra_code_O2/osPfsIsPlug.o (.rodata)
            build/src/libultra_code_O2/guS2DInitBg.o (.rodata)
            build/src/libultra_code_O2/__osPfsSelectBank.o (.rodata)
            build/src/libultra_code_O2/osContSetCh.o (.rodata)
            build/src/libultra_code_O2/code_80104D60.o (.rodata)
            build/src/libultra_code_O2/pfsinitpak.o (.rodata)
            build/src/libultra_code_O2/pfschecker.o (.rodata)
            build/src/libultra_code_O2/osAiGetLength.o (.rodata)
            build/asm/guTranslate.o (.rodata)
            build/src/libultra_code_O2/__osContRamWrite.o (.rodata)
            build/src/libultra_code_O2/__osContRamRead.o (.rodata)
            build/src/libultra_code_O2/__osContAddressCrc.o (.rodata)
            build/src/libultra_code_O1/osSetTimer.o (.rodata)
            build/src/libultra_code_O2/__osSpGetStatus.o (.rodata)
            build/src/libultra_code_O2/__osSpSetStatus.o (.rodata)
            build/asm/osWritebackDCacheAll.o (.rodata)
            build/src/libultra_code_O2/__osGetCurrFaultedThread.o (.rodata)
            build/asm/guMtxF2L.o (.rodata)
            build/src/libultra_code_O1/llcvt.o (.rodata)
            build/src/libultra_code_O2/osViGetCurrentFramebuffer.o (.rodata)
            build/src/libultra_code_O2/__osSpSetPc.o (.rodata)
            build/src/libultra_code_O2_g3/sqrt.o (.rodata)
            build/src/libultra_code_O2_g3/absf.o (.rodata)
            build/src/code/code_801067F0.o (.rodata)
            build/src/code/code_80106860.o (.rodata)
            build/src/code/code_801068B0.o (.rodata)
            build/data/z_message_PAL.rodata.o (.rodata)
            build/src/code/z_message_PAL.o (.rodata)
            build/data/z_message_PAL.bss.o (.rodata)
            build/src/code/code_80110450.o (.rodata)
            build/src/code/z_construct.o (.rodata)
            build/data/rsp.text.o (.rodata)
            build/data/rsp.rodata.o (.rodata)
        _codeSegmentRoDataEnd = .;
    _codeSegmentRoDataSize = ABSOLUTE( _codeSegmentRoDataEnd - _codeSegmentRoDataStart );
        _codeSegmentSDataStart = .;
            build/src/code/z_en_a_keep.o (.sdata)
            build/src/code/z_en_item00.o (.sdata)
            build/data/z_en_item00.data.o (.sdata)
            build/data/z_en_item00.bss.o (.sdata)
            build/src/code/z_eff_blure.o (.sdata)
            build/src/code/z_eff_shield_particle.o (.sdata)
            build/src/code/z_eff_spark.o (.sdata)
            build/src/code/z_eff_ss_dead.o (.sdata)
            build/src/code/z_effect.o (.sdata)
            build/src/code/z_effect_soft_sprite.o (.sdata)
            build/src/code/z_effect_soft_sprite_old_init.o (.sdata)
            build/src/code/z_effect_soft_sprite_dlftbls.o (.sdata)
            build/src/code/flg_set.o (.sdata)
            build/src/code/z_DLF.o (.sdata)
            build/src/code/z_actor.o (.sdata)
            build/src/code/z_actor_dlftbls.o (.sdata)
            build/src/code/z_bgcheck.o (.sdata)
            build/data/z_bgcheck.data.o (.sdata)
            build/data/z_bgcheck.rodata.o (.sdata)
            build/data/z_bgcheck.bss.o (.sdata)
            build/src/code/code_800430A0.o (.sdata)
            build/src/code/code_80043480.o (.sdata)
            build/src/code/z_camera.o (.sdata)
            build/data/z_camera.bss.o (.sdata)
            build/src/code/z_collision_btltbls.o (.sdata)
            build/src/code/z_collision_check.o (.sdata)
            build/src/code/z_common_data.o (.sdata)
            build/src/code/z_debug.o (.sdata)
            build/src/code/z_debug_display.o (.sdata)
            build/src/code/z_demo.o (.sdata)
            build/src/code/code_80069420.o (.sdata)
            build/src/code/z_draw.o (.sdata)
            build/src/code/code_8006BA00.o (.sdata)
            build/src/code/z_elf_message.o (.sdata)
            build/src/code/z_face_reaction.o (.sdata)
            build/src/code/code_8006C3A0.o (.sdata)
            build/src/code/code_8006C510.o (.sdata)
            build/src/code/z_fcurve_data_skelanime.o (.sdata)
            build/src/code/z_game_dlftbls.o (.sdata)
            build/src/code/z_horse.o (.sdata)
            build/src/code/z_jpeg.o (.sdata)
            build/src/code/z_kaleido_setup.o (.sdata)
            build/src/code/z_kanfont.o (.sdata)
            build/src/code/z_kankyo.o (.sdata)
            build/data/z_kankyo.data.o (.sdata)
            build/data/z_kankyo.bss.o (.sdata)
            build/src/code/z_lib.o (.sdata)
            build/src/code/z_lifemeter.o (.sdata)
            build/data/z_lifemeter.data.o (.sdata)
            build/src/code/z_lights.o (.sdata)
            build/src/code/z_malloc.o (.sdata)
            build/src/code/z_map_mark.o (.sdata)
            build/src/code/z_moji.o (.sdata)
            build/src/code/z_prenmi_buff.o (.sdata)
            build/src/code/z_msgevent.o (.sdata)
            build/src/code/z_olib.o (.sdata)
            build/src/code/z_onepointdemo.o (.sdata)
            build/data/z_onepointdemo.data.o (.sdata)
            build/src/code/z_map_exp.o (.sdata)
            build/src/code/z_map_data.o (.sdata)
            build/src/code/z_parameter.o (.sdata)
            build/src/code/z_path.o (.sdata)
            build/src/code/code_8008E6A0.o (.sdata)
            build/src/code/z_player_lib.o (.sdata)
            build/src/code/z_prenmi.o (.sdata)
            build/src/code/z_quake.o (.sdata)
            build/src/code/z_rcp.o (.sdata)
            build/src/code/z_room.o (.sdata)
            build/src/code/z_sample.o (.sdata)
            build/src/code/code_80097A00.o (.sdata)
            build/src/code/z_scene.o (.sdata)
            build/src/code/z_scene_table.o (.sdata)
            build/src/code/z_skelanime.o (.sdata)
            build/src/code/z_skin.o (.sdata)
            build/data/z_skin.bss.o (.sdata)
            build/src/code/z_skin_awb.o (.sdata)
            build/src/code/z_skin_matrix.o (.sdata)
            build/src/code/z_sram.o (.sdata)
            build/src/code/z_ss_sram.o (.sdata)
            build/src/code/code_800A9F30.o (.sdata)
            build/data/z_text.data.o (.sdata)
            build/src/code/z_view.o (.sdata)
            build/src/code/z_vimode.o (.sdata)
            build/src/code/code_800ACE70.o (.sdata)
            build/src/code/z_vismono.o (.sdata)
            build/src/code/code_800AD920.o (.sdata)
            build/src/code/z_vr_box.o (.sdata)
            build/data/z_vr_box.data.o (.sdata)
            build/src/code/z_vr_box_draw.o (.sdata)
            build/src/code/z_player_call.o (.sdata)
            build/src/code/z_fbdemo.o (.sdata)
            build/src/code/z_fbdemo_triforce.o (.sdata)
            build/src/code/z_fbdemo_wipe1.o (.sdata)
            build/src/code/z_fbdemo_circle.o (.sdata)
            build/src/code/z_fbdemo_fade.o (.sdata)
            build/src/code/shrink_window.o (.sdata)
            build/src/code/db_camera.o (.sdata)
            build/data/db_camera.rodata.o (.sdata)
            build/data/db_camera.data.o (.sdata)
            build/data/db_camera.bss.o (.sdata)
            build/src/code/code_800BB0A0.o (.sdata)
            build/src/code/mempak.o (.sdata)
            build/src/code/z_kaleido_manager.o (.sdata)
            build/src/code/z_kaleido_scope_call.o (.sdata)
            build/src/code/z_play.o (.sdata)
            build/src/code/PreRender.o (.sdata)
            build/src/code/TwoHeadArena.o (.sdata)
            build/src/code/code_800C3C20.o (.sdata)
            build/src/code/audioMgr.o (.sdata)
            build/src/code/title_setup.o (.sdata)
            build/src/code/game.o (.sdata)
            build/src/code/gamealloc.o (.sdata)
            build/src/code/graph.o (.sdata)
            build/src/code/listalloc.o (.sdata)
            build/src/code/main.o (.sdata)
            build/src/code/padmgr.o (.sdata)
            build/src/code/sched.o (.sdata)
            build/src/code/speed_meter.o (.sdata)
            build/src/code/sys_cfb.o (.sdata)
            build/src/code/sys_math.o (.sdata)
            build/src/code/sys_math3d.o (.sdata)
            build/src/code/sys_math_atan.o (.sdata)
            build/src/code/sys_matrix.o (.sdata)
            build/src/code/sys_ucode.o (.sdata)
            build/src/code/code_800D2E30.o (.sdata)
            build/data/code_800D2E30.data.o (.sdata)
            build/src/code/code_800D31A0.o (.sdata)
            build/src/code/irqmgr.o (.sdata)
            build/src/code/debug_malloc.o (.sdata)
            build/src/code/fault.o (.sdata)
            build/data/fault.bss.o (.sdata)
            build/src/code/fault_drawer.o (.sdata)
            build/data/fault_drawer.bss.o (.sdata)
            build/asm/code_800D71F0.o (.sdata)
            build/src/code/ucode_disas.o (.sdata)
            build/src/code/code_800DACC0.o (.sdata)
            build/data/code_800DACC0.data.o (.sdata)
            build/data/code_800DACC0.bss.o (.sdata)
            build/src/code/audio_heap.o (.sdata)
            build/src/code/code_800E11F0.o (.sdata)
            build/data/code_800E11F0.data.o (.sdata)
            build/data/code_800E11F0.rodata.o (.sdata)
            build/src/libultra_code_O2/code_800E6840.o (.sdata)
            build/src/libultra_code_O2/osAiSetNextBuffer.o (.sdata)
            build/src/code/audio_playback.o (.sdata)
            build/src/code/audio_effects.o (.sdata)
            build/data/audio_effects.data.o (.sdata)
            build/src/code/audio_seqplayer.o (.sdata)
            build/src/code/code_800EC960.o (.sdata)
            build/data/code_800EC960.data.o (.sdata)
            build/src/code/code_800F7260.o (.sdata)
            build/data/code_800F7260.data.o (.sdata)
            build/src/code/code_800F9280.o (.sdata)
            build/data/code_800F9280.data.o (.sdata)
            build/data/code_800F9280.rodata.o (.sdata)
            build/src/code/logseverity.o (.sdata)
            build/src/code/gfxprint.o (.sdata)
            build/src/code/code_800FBCE0.o (.sdata)
            build/src/code/loadfragment2.o (.sdata)
            build/src/code/mtxuty-cvt.o (.sdata)
            build/src/code/relocation.o (.sdata)
            build/src/code/code_800FC620.o (.sdata)
            build/src/code/padutils.o (.sdata)
            build/src/code/padsetup.o (.sdata)
            build/src/code/code_800FCE80.o (.sdata)
            build/asm/fp.o (.sdata)
            build/src/code/system_malloc.o (.sdata)
            build/src/code/code_800FD970.o (.sdata)
            build/src/code/__osMalloc.o (.sdata)
            build/src/code/printutils.o (.sdata)
            build/src/code/sleep.o (.sdata)
            build/src/code/jpegutils.o (.sdata)
            build/src/code/jpegdecoder.o (.sdata)
            build/src/libultra_code_O2/osPfsFreeBlocks.o (.sdata)
            build/asm/guScale.o (.sdata)
            build/src/libultra_code_O2/sinf.o (.sdata)
            build/src/libultra_code_O2/sins.o (.sdata)
            build/src/libultra_code_O2/sptask.o (.sdata)
            build/src/libultra_code_O2/osRumblePak.o (.sdata)
            build/src/libultra_code_O2/__osSiCreateAccessQueue.o (.sdata)
            build/src/libultra_code_O2/osContInit.o (.sdata)
            build/src/libultra_code_O2/osContStartReadData.o (.sdata)
            build/src/libultra_code_O2/guPerspectiveF.o (.sdata)
            build/src/libultra_code_O2/__osSpRawStartDma.o (.sdata)
            build/src/libultra_code_O2/__osSiRawStartDma.o (.sdata)
            build/src/libultra_code_O2/osSpTaskYield.o (.sdata)
            build/src/libultra_code_O2/pfsreadwritefile.o (.sdata)
            build/src/libultra_code_O2/__osPfsGetStatus.o (.sdata)
            build/asm/guMtxIdentF.o (.sdata)
            build/src/libultra_code_O2/guLookAt.o (.sdata)
            build/src/libultra_code_O2/pfsallocatefile.o (.sdata)
            build/src/libultra_code_O1/osStopTimer.o (.sdata)
            build/src/libultra_code_O2/contpfs.o (.sdata)
            build/src/libultra_code_O2/code_80102FA0.o (.sdata)
            build/src/libultra_code_O2/osPfsFindFile.o (.sdata)
            build/src/libultra_code_O2/sqrtf.o (.sdata)
            build/src/libultra_code_O2/osAfterPreNMI.o (.sdata)
            build/src/libultra_code_O2/contquery.o (.sdata)
            build/src/libultra_code_O2/guLookAtHilite.o (.sdata)
            build/src/libultra_code_O2/sp.o (.sdata)
            build/asm/guMtxIdent.o (.sdata)
            build/src/libultra_code_O2/guPosition.o (.sdata)
            build/src/libultra_code_O2/osSpTaskYielded.o (.sdata)
            build/src/libultra_code_O2/rotate.o (.sdata)
            build/src/libultra_code_O2/osAiSetFrequency.o (.sdata)
            build/src/libultra_code_O2/__osGetActiveQueue.o (.sdata)
            build/asm/guNormalize.o (.sdata)
            build/src/libultra_code_O2/osDpGetStatus.o (.sdata)
            build/src/libultra_code_O2/osDpSetStatus.o (.sdata)
            build/src/libultra_code_O2/osPfsDeleteFile.o (.sdata)
            build/src/libultra_code_O2/ortho.o (.sdata)
            build/src/libultra_code_O2/cosf.o (.sdata)
            build/data/__libm_qnan_f.rodata.o (.sdata)
            build/src/libultra_code_O2/coss.o (.sdata)
            build/src/libultra_code_O2/osViSetEvent.o (.sdata)
            build/src/libultra_code_O2/osPfsIsPlug.o (.sdata)
            build/src/libultra_code_O2/guS2DInitBg.o (.sdata)
            build/src/libultra_code_O2/__osPfsSelectBank.o (.sdata)
            build/src/libultra_code_O2/osContSetCh.o (.sdata)
            build/src/libultra_code_O2/code_80104D60.o (.sdata)
            build/src/libultra_code_O2/pfsinitpak.o (.sdata)
            build/src/libultra_code_O2/pfschecker.o (.sdata)
            build/src/libultra_code_O2/osAiGetLength.o (.sdata)
            build/asm/guTranslate.o (.sdata)
            build/src/libultra_code_O2/__osContRamWrite.o (.sdata)
            build/src/libultra_code_O2/__osContRamRead.o (.sdata)
            build/src/libultra_code_O2/__osContAddressCrc.o (.sdata)
            build/src/libultra_code_O1/osSetTimer.o (.sdata)
            build/src/libultra_code_O2/__osSpGetStatus.o (.sdata)
            build/src/libultra_code_O2/__osSpSetStatus.o (.sdata)
            build/asm/osWritebackDCacheAll.o (.sdata)
            build/src/libultra_code_O2/__osGetCurrFaultedThread.o (.sdata)
            build/asm/guMtxF2L.o (.sdata)
            build/src/libultra_code_O1/llcvt.o (.sdata)
            build/src/libultra_code_O2/osViGetCurrentFramebuffer.o (.sdata)
            build/src/libultra_code_O2/__osSpSetPc.o (.sdata)
            build/src/libultra_code_O2_g3/sqrt.o (.sdata)
            build/src/libultra_code_O2_g3/absf.o (.sdata)
            build/src/code/code_801067F0.o (.sdata)
            build/src/code/code_80106860.o (.sdata)
            build/src/code/code_801068B0.o (.sdata)
            build/data/z_message_PAL.rodata.o (.sdata)
            build/src/code/z_message_PAL.o (.sdata)
            build/data/z_message_PAL.bss.o (.sdata)
            build/src/code/code_80110450.o (.sdata)
            build/src/code/z_construct.o (.sdata)
            build/data/rsp.text.o (.sdata)
            build/data/rsp.rodata.o (.sdata)
        . = ALIGN(0x10);
        _codeSegmentSDataEnd = .;
        _codeSegmentOvlStart = .;
            build/src/code/z_en_a_keep.o (.ovl)
            build/src/code/z_en_item00.o (.ovl)
            build/data/z_en_item00.data.o (.ovl)
            build/data/z_en_item00.bss.o (.ovl)
            build/src/code/z_eff_blure.o (.ovl)
            build/src/code/z_eff_shield_particle.o (.ovl)
            build/src/code/z_eff_spark.o (.ovl)
            build/src/code/z_eff_ss_dead.o (.ovl)
            build/src/code/z_effect.o (.ovl)
            build/src/code/z_effect_soft_sprite.o (.ovl)
            build/src/code/z_effect_soft_sprite_old_init.o (.ovl)
            build/src/code/z_effect_soft_sprite_dlftbls.o (.ovl)
            build/src/code/flg_set.o (.ovl)
            build/src/code/z_DLF.o (.ovl)
            build/src/code/z_actor.o (.ovl)
            build/src/code/z_actor_dlftbls.o (.ovl)
            build/src/code/z_bgcheck.o (.ovl)
            build/data/z_bgcheck.data.o (.ovl)
            build/data/z_bgcheck.rodata.o (.ovl)
            build/data/z_bgcheck.bss.o (.ovl)
            build/src/code/code_800430A0.o (.ovl)
            build/src/code/code_80043480.o (.ovl)
            build/src/code/z_camera.o (.ovl)
            build/data/z_camera.bss.o (.ovl)
            build/src/code/z_collision_btltbls.o (.ovl)
            build/src/code/z_collision_check.o (.ovl)
            build/src/code/z_common_data.o (.ovl)
            build/src/code/z_debug.o (.ovl)
            build/src/code/z_debug_display.o (.ovl)
            build/src/code/z_demo.o (.ovl)
            build/src/code/code_80069420.o (.ovl)
            build/src/code/z_draw.o (.ovl)
            build/src/code/code_8006BA00.o (.ovl)
            build/src/code/z_elf_message.o (.ovl)
            build/src/code/z_face_reaction.o (.ovl)
            build/src/code/code_8006C3A0.o (.ovl)
            build/src/code/code_8006C510.o (.ovl)
            build/src/code/z_fcurve_data_skelanime.o (.ovl)
            build/src/code/z_game_dlftbls.o (.ovl)
            build/src/code/z_horse.o (.ovl)
            build/src/code/z_jpeg.o (.ovl)
            build/src/code/z_kaleido_setup.o (.ovl)
            build/src/code/z_kanfont.o (.ovl)
            build/src/code/z_kankyo.o (.ovl)
            build/data/z_kankyo.data.o (.ovl)
            build/data/z_kankyo.bss.o (.ovl)
            build/src/code/z_lib.o (.ovl)
            build/src/code/z_lifemeter.o (.ovl)
            build/data/z_lifemeter.data.o (.ovl)
            build/src/code/z_lights.o (.ovl)
            build/src/code/z_malloc.o (.ovl)
            build/src/code/z_map_mark.o (.ovl)
            build/src/code/z_moji.o (.ovl)
            build/src/code/z_prenmi_buff.o (.ovl)
            build/src/code/z_msgevent.o (.ovl)
            build/src/code/z_olib.o (.ovl)
            build/src/code/z_onepointdemo.o (.ovl)
            build/data/z_onepointdemo.data.o (.ovl)
            build/src/code/z_map_exp.o (.ovl)
            build/src/code/z_map_data.o (.ovl)
            build/src/code/z_parameter.o (.ovl)
            build/src/code/z_path.o (.ovl)
            build/src/code/code_8008E6A0.o (.ovl)
            build/src/code/z_player_lib.o (.ovl)
            build/src/code/z_prenmi.o (.ovl)
            build/src/code/z_quake.o (.ovl)
            build/src/code/z_rcp.o (.ovl)
            build/src/code/z_room.o (.ovl)
            build/src/code/z_sample.o (.ovl)
            build/src/code/code_80097A00.o (.ovl)
            build/src/code/z_scene.o (.ovl)
            build/src/code/z_scene_table.o (.ovl)
            build/src/code/z_skelanime.o (.ovl)
            build/src/code/z_skin.o (.ovl)
            build/data/z_skin.bss.o (.ovl)
            build/src/code/z_skin_awb.o (.ovl)
            build/src/code/z_skin_matrix.o (.ovl)
            build/src/code/z_sram.o (.ovl)
            build/src/code/z_ss_sram.o (.ovl)
            build/src/code/code_800A9F30.o (.ovl)
            build/data/z_text.data.o (.ovl)
            build/src/code/z_view.o (.ovl)
            build/src/code/z_vimode.o (.ovl)
            build/src/code/code_800ACE70.o (.ovl)
            build/src/code/z_vismono.o (.ovl)
            build/src/code/code_800AD920.o (.ovl)
            build/src/code/z_vr_box.o (.ovl)
            build/data/z_vr_box.data.o (.ovl)
            build/src/code/z_vr_box_draw.o (.ovl)
            build/src/code/z_player_call.o (.ovl)
            build/src/code/z_fbdemo.o (.ovl)
            build/src/code/z_fbdemo_triforce.o (.ovl)
            build/src/code/z_fbdemo_wipe1.o (.ovl)
            build/src/code/z_fbdemo_circle.o (.ovl)
            build/src/code/z_fbdemo_fade.o (.ovl)
            build/src/code/shrink_window.o (.ovl)
            build/src/code/db_camera.o (.ovl)
            build/data/db_camera.rodata.o (.ovl)
            build/data/db_camera.data.o (.ovl)
            build/data/db_camera.bss.o (.ovl)
            build/src/code/code_800BB0A0.o (.ovl)
            build/src/code/mempak.o (.ovl)
            build/src/code/z_kaleido_manager.o (.ovl)
            build/src/code/z_kaleido_scope_call.o (.ovl)
            build/src/code/z_play.o (.ovl)
            build/src/code/PreRender.o (.ovl)
            build/src/code/TwoHeadArena.o (.ovl)
            build/src/code/code_800C3C20.o (.ovl)
            build/src/code/audioMgr.o (.ovl)
            build/src/code/title_setup.o (.ovl)
            build/src/code/game.o (.ovl)
            build/src/code/gamealloc.o (.ovl)
            build/src/code/graph.o (.ovl)
            build/src/code/listalloc.o (.ovl)
            build/src/code/main.o (.ovl)
            build/src/code/padmgr.o (.ovl)
            build/src/code/sched.o (.ovl)
            build/src/code/speed_meter.o (.ovl)
            build/src/code/sys_cfb.o (.ovl)
            build/src/code/sys_math.o (.ovl)
            build/src/code/sys_math3d.o (.ovl)
            build/src/code/sys_math_atan.o (.ovl)
            build/src/code/sys_matrix.o (.ovl)
            build/src/code/sys_ucode.o (.ovl)
            build/src/code/code_800D2E30.o (.ovl)
            build/data/code_800D2E30.data.o (.ovl)
            build/src/code/code_800D31A0.o (.ovl)
            build/src/code/irqmgr.o (.ovl)
            build/src/code/debug_malloc.o (.ovl)
            build/src/code/fault.o (.ovl)
            build/data/fault.bss.o (.ovl)
            build/src/code/fault_drawer.o (.ovl)
            build/data/fault_drawer.bss.o (.ovl)
            build/asm/code_800D71F0.o (.ovl)
            build/src/code/ucode_disas.o (.ovl)
            build/src/code/code_800DACC0.o (.ovl)
            build/data/code_800DACC0.data.o (.ovl)
            build/data/code_800DACC0.bss.o (.ovl)
            build/src/code/audio_heap.o (.ovl)
            build/src/code/code_800E11F0.o (.ovl)
            build/data/code_800E11F0.data.o (.ovl)
            build/data/code_800E11F0.rodata.o (.ovl)
            build/src/libultra_code_O2/code_800E6840.o (.ovl)
            build/src/libultra_code_O2/osAiSetNextBuffer.o (.ovl)
            build/src/code/audio_playback.o (.ovl)
            build/src/code/audio_effects.o (.ovl)
            build/data/audio_effects.data.o (.ovl)
            build/src/code/audio_seqplayer.o (.ovl)
            build/src/code/code_800EC960.o (.ovl)
            build/data/code_800EC960.data.o (.ovl)
            build/src/code/code_800F7260.o (.ovl)
            build/data/code_800F7260.data.o (.ovl)
            build/src/code/code_800F9280.o (.ovl)
            build/data/code_800F9280.data.o (.ovl)
            build/data/code_800F9280.rodata.o (.ovl)
            build/src/code/logseverity.o (.ovl)
            build/src/code/gfxprint.o (.ovl)
            build/src/code/code_800FBCE0.o (.ovl)
            build/src/code/loadfragment2.o (.ovl)
            build/src/code/mtxuty-cvt.o (.ovl)
            build/src/code/relocation.o (.ovl)
            build/src/code/code_800FC620.o (.ovl)
            build/src/code/padutils.o (.ovl)
            build/src/code/padsetup.o (.ovl)
            build/src/code/code_800FCE80.o (.ovl)
            build/asm/fp.o (.ovl)
            build/src/code/system_malloc.o (.ovl)
            build/src/code/code_800FD970.o (.ovl)
            build/src/code/__osMalloc.o (.ovl)
            build/src/code/printutils.o (.ovl)
            build/src/code/sleep.o (.ovl)
            build/src/code/jpegutils.o (.ovl)
            build/src/code/jpegdecoder.o (.ovl)
            build/src/libultra_code_O2/osPfsFreeBlocks.o (.ovl)
            build/asm/guScale.o (.ovl)
            build/src/libultra_code_O2/sinf.o (.ovl)
            build/src/libultra_code_O2/sins.o (.ovl)
            build/src/libultra_code_O2/sptask.o (.ovl)
            build/src/libultra_code_O2/osRumblePak.o (.ovl)
            build/src/libultra_code_O2/__osSiCreateAccessQueue.o (.ovl)
            build/src/libultra_code_O2/osContInit.o (.ovl)
            build/src/libultra_code_O2/osContStartReadData.o (.ovl)
            build/src/libultra_code_O2/guPerspectiveF.o (.ovl)
            build/src/libultra_code_O2/__osSpRawStartDma.o (.ovl)
            build/src/libultra_code_O2/__osSiRawStartDma.o (.ovl)
            build/src/libultra_code_O2/osSpTaskYield.o (.ovl)
            build/src/libultra_code_O2/pfsreadwritefile.o (.ovl)
            build/src/libultra_code_O2/__osPfsGetStatus.o (.ovl)
            build/asm/guMtxIdentF.o (.ovl)
            build/src/libultra_code_O2/guLookAt.o (.ovl)
            build/src/libultra_code_O2/pfsallocatefile.o (.ovl)
            build/src/libultra_code_O1/osStopTimer.o (.ovl)
            build/src/libultra_code_O2/contpfs.o (.ovl)
            build/src/libultra_code_O2/code_80102FA0.o (.ovl)
            build/src/libultra_code_O2/osPfsFindFile.o (.ovl)
            build/src/libultra_code_O2/sqrtf.o (.ovl)
            build/src/libultra_code_O2/osAfterPreNMI.o (.ovl)
            build/src/libultra_code_O2/contquery.o (.ovl)
            build/src/libultra_code_O2/guLookAtHilite.o (.ovl)
            build/src/libultra_code_O2/sp.o (.ovl)
            build/asm/guMtxIdent.o (.ovl)
            build/src/libultra_code_O2/guPosition.o (.ovl)
            build/src/libultra_code_O2/osSpTaskYielded.o (.ovl)
            build/src/libultra_code_O2/rotate.o (.ovl)
            build/src/libultra_code_O2/osAiSetFrequency.o (.ovl)
            build/src/libultra_code_O2/__osGetActiveQueue.o (.ovl)
            build/asm/guNormalize.o (.ovl)
            build/src/libultra_code_O2/osDpGetStatus.o (.ovl)
            build/src/libultra_code_O2/osDpSetStatus.o (.ovl)
            build/src/libultra_code_O2/osPfsDeleteFile.o (.ovl)
            build/src/libultra_code_O2/ortho.o (.ovl)
            build/src/libultra_code_O2/cosf.o (.ovl)
            build/data/__libm_qnan_f.rodata.o (.ovl)
            build/src/libultra_code_O2/coss.o (.ovl)
            build/src/libultra_code_O2/osViSetEvent.o (.ovl)
            build/src/libultra_code_O2/osPfsIsPlug.o (.ovl)
            build/src/libultra_code_O2/guS2DInitBg.o (.ovl)
            build/src/libultra_code_O2/__osPfsSelectBank.o (.ovl)
            build/src/libultra_code_O2/osContSetCh.o (.ovl)
            build/src/libultra_code_O2/code_80104D60.o (.ovl)
            build/src/libultra_code_O2/pfsinitpak.o (.ovl)
            build/src/libultra_code_O2/pfschecker.o (.ovl)
            build/src/libultra_code_O2/osAiGetLength.o (.ovl)
            build/asm/guTranslate.o (.ovl)
            build/src/libultra_code_O2/__osContRamWrite.o (.ovl)
            build/src/libultra_code_O2/__osContRamRead.o (.ovl)
            build/src/libultra_code_O2/__osContAddressCrc.o (.ovl)
            build/src/libultra_code_O1/osSetTimer.o (.ovl)
            build/src/libultra_code_O2/__osSpGetStatus.o (.ovl)
            build/src/libultra_code_O2/__osSpSetStatus.o (.ovl)
            build/asm/osWritebackDCacheAll.o (.ovl)
            build/src/libultra_code_O2/__osGetCurrFaultedThread.o (.ovl)
            build/asm/guMtxF2L.o (.ovl)
            build/src/libultra_code_O1/llcvt.o (.ovl)
            build/src/libultra_code_O2/osViGetCurrentFramebuffer.o (.ovl)
            build/src/libultra_code_O2/__osSpSetPc.o (.ovl)
            build/src/libultra_code_O2_g3/sqrt.o (.ovl)
            build/src/libultra_code_O2_g3/absf.o (.ovl)
            build/src/code/code_801067F0.o (.ovl)
            build/src/code/code_80106860.o (.ovl)
            build/src/code/code_801068B0.o (.ovl)
            build/data/z_message_PAL.rodata.o (.ovl)
            build/src/code/z_message_PAL.o (.ovl)
            build/data/z_message_PAL.bss.o (.ovl)
            build/src/code/code_80110450.o (.ovl)
            build/src/code/z_construct.o (.ovl)
            build/data/rsp.text.o (.ovl)
            build/data/rsp.rodata.o (.ovl)
        . = ALIGN(0x10);
        _codeSegmentOvlEnd = .;
    }
    _RomSize += ( _codeSegmentOvlEnd - _codeSegmentTextStart );
    _codeSegmentRomEnd = _RomSize;

    ..code.bss ADDR(..code) + SIZEOF(..code) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _codeSegmentBssStart = .;
            build/src/code/z_en_a_keep.o (.sbss)
            build/src/code/z_en_item00.o (.sbss)
            build/data/z_en_item00.data.o (.sbss)
            build/data/z_en_item00.bss.o (.sbss)
            build/src/code/z_eff_blure.o (.sbss)
            build/src/code/z_eff_shield_particle.o (.sbss)
            build/src/code/z_eff_spark.o (.sbss)
            build/src/code/z_eff_ss_dead.o (.sbss)
            build/src/code/z_effect.o (.sbss)
            build/src/code/z_effect_soft_sprite.o (.sbss)
            build/src/code/z_effect_soft_sprite_old_init.o (.sbss)
            build/src/code/z_effect_soft_sprite_dlftbls.o (.sbss)
            build/src/code/flg_set.o (.sbss)
            build/src/code/z_DLF.o (.sbss)
            build/src/code/z_actor.o (.sbss)
            build/src/code/z_actor_dlftbls.o (.sbss)
            build/src/code/z_bgcheck.o (.sbss)
            build/data/z_bgcheck.data.o (.sbss)
            build/data/z_bgcheck.rodata.o (.sbss)
            build/data/z_bgcheck.bss.o (.sbss)
            build/src/code/code_800430A0.o (.sbss)
            build/src/code/code_80043480.o (.sbss)
            build/src/code/z_camera.o (.sbss)
            build/data/z_camera.bss.o (.sbss)
            build/src/code/z_collision_btltbls.o (.sbss)
            build/src/code/z_collision_check.o (.sbss)
            build/src/code/z_common_data.o (.sbss)
            build/src/code/z_debug.o (.sbss)
            build/src/code/z_debug_display.o (.sbss)
            build/src/code/z_demo.o (.sbss)
            build/src/code/code_80069420.o (.sbss)
            build/src/code/z_draw.o (.sbss)
            build/src/code/code_8006BA00.o (.sbss)
            build/src/code/z_elf_message.o (.sbss)
            build/src/code/z_face_reaction.o (.sbss)
            build/src/code/code_8006C3A0.o (.sbss)
            build/src/code/code_8006C510.o (.sbss)
            build/src/code/z_fcurve_data_skelanime.o (.sbss)
            build/src/code/z_game_dlftbls.o (.sbss)
            build/src/code/z_horse.o (.sbss)
            build/src/code/z_jpeg.o (.sbss)
            build/src/code/z_kaleido_setup.o (.sbss)
            build/src/code/z_kanfont.o (.sbss)
            build/src/code/z_kankyo.o (.sbss)
            build/data/z_kankyo.data.o (.sbss)
            build/data/z_kankyo.bss.o (.sbss)
            build/src/code/z_lib.o (.sbss)
            build/src/code/z_lifemeter.o (.sbss)
            build/data/z_lifemeter.data.o (.sbss)
            build/src/code/z_lights.o (.sbss)
            build/src/code/z_malloc.o (.sbss)
            build/src/code/z_map_mark.o (.sbss)
            build/src/code/z_moji.o (.sbss)
            build/src/code/z_prenmi_buff.o (.sbss)
            build/src/code/z_msgevent.o (.sbss)
            build/src/code/z_olib.o (.sbss)
            build/src/code/z_onepointdemo.o (.sbss)
            build/data/z_onepointdemo.data.o (.sbss)
            build/src/code/z_map_exp.o (.sbss)
            build/src/code/z_map_data.o (.sbss)
            build/src/code/z_parameter.o (.sbss)
            build/src/code/z_path.o (.sbss)
            build/src/code/code_8008E6A0.o (.sbss)
            build/src/code/z_player_lib.o (.sbss)
            build/src/code/z_prenmi.o (.sbss)
            build/src/code/z_quake.o (.sbss)
            build/src/code/z_rcp.o (.sbss)
            build/src/code/z_room.o (.sbss)
            build/src/code/z_sample.o (.sbss)
            build/src/code/code_80097A00.o (.sbss)
            build/src/code/z_scene.o (.sbss)
            build/src/code/z_scene_table.o (.sbss)
            build/src/code/z_skelanime.o (.sbss)
            build/src/code/z_skin.o (.sbss)
            build/data/z_skin.bss.o (.sbss)
            build/src/code/z_skin_awb.o (.sbss)
            build/src/code/z_skin_matrix.o (.sbss)
            build/src/code/z_sram.o (.sbss)
            build/src/code/z_ss_sram.o (.sbss)
            build/src/code/code_800A9F30.o (.sbss)
            build/data/z_text.data.o (.sbss)
            build/src/code/z_view.o (.sbss)
            build/src/code/z_vimode.o (.sbss)
            build/src/code/code_800ACE70.o (.sbss)
            build/src/code/z_vismono.o (.sbss)
            build/src/code/code_800AD920.o (.sbss)
            build/src/code/z_vr_box.o (.sbss)
            build/data/z_vr_box.data.o (.sbss)
            build/src/code/z_vr_box_draw.o (.sbss)
            build/src/code/z_player_call.o (.sbss)
            build/src/code/z_fbdemo.o (.sbss)
            build/src/code/z_fbdemo_triforce.o (.sbss)
            build/src/code/z_fbdemo_wipe1.o (.sbss)
            build/src/code/z_fbdemo_circle.o (.sbss)
            build/src/code/z_fbdemo_fade.o (.sbss)
            build/src/code/shrink_window.o (.sbss)
            build/src/code/db_camera.o (.sbss)
            build/data/db_camera.rodata.o (.sbss)
            build/data/db_camera.data.o (.sbss)
            build/data/db_camera.bss.o (.sbss)
            build/src/code/code_800BB0A0.o (.sbss)
            build/src/code/mempak.o (.sbss)
            build/src/code/z_kaleido_manager.o (.sbss)
            build/src/code/z_kaleido_scope_call.o (.sbss)
            build/src/code/z_play.o (.sbss)
            build/src/code/PreRender.o (.sbss)
            build/src/code/TwoHeadArena.o (.sbss)
            build/src/code/code_800C3C20.o (.sbss)
            build/src/code/audioMgr.o (.sbss)
            build/src/code/title_setup.o (.sbss)
            build/src/code/game.o (.sbss)
            build/src/code/gamealloc.o (.sbss)
            build/src/code/graph.o (.sbss)
            build/src/code/listalloc.o (.sbss)
            build/src/code/main.o (.sbss)
            build/src/code/padmgr.o (.sbss)
            build/src/code/sched.o (.sbss)
            build/src/code/speed_meter.o (.sbss)
            build/src/code/sys_cfb.o (.sbss)
            build/src/code/sys_math.o (.sbss)
            build/src/code/sys_math3d.o (.sbss)
            build/src/code/sys_math_atan.o (.sbss)
            build/src/code/sys_matrix.o (.sbss)
            build/src/code/sys_ucode.o (.sbss)
            build/src/code/code_800D2E30.o (.sbss)
            build/data/code_800D2E30.data.o (.sbss)
            build/src/code/code_800D31A0.o (.sbss)
            build/src/code/irqmgr.o (.sbss)
            build/src/code/debug_malloc.o (.sbss)
            build/src/code/fault.o (.sbss)
            build/data/fault.bss.o (.sbss)
            build/src/code/fault_drawer.o (.sbss)
            build/data/fault_drawer.bss.o (.sbss)
            build/asm/code_800D71F0.o (.sbss)
            build/src/code/ucode_disas.o (.sbss)
            build/src/code/code_800DACC0.o (.sbss)
            build/data/code_800DACC0.data.o (.sbss)
            build/data/code_800DACC0.bss.o (.sbss)
            build/src/code/audio_heap.o (.sbss)
            build/src/code/code_800E11F0.o (.sbss)
            build/data/code_800E11F0.data.o (.sbss)
            build/data/code_800E11F0.rodata.o (.sbss)
            build/src/libultra_code_O2/code_800E6840.o (.sbss)
            build/src/libultra_code_O2/osAiSetNextBuffer.o (.sbss)
            build/src/code/audio_playback.o (.sbss)
            build/src/code/audio_effects.o (.sbss)
            build/data/audio_effects.data.o (.sbss)
            build/src/code/audio_seqplayer.o (.sbss)
            build/src/code/code_800EC960.o (.sbss)
            build/data/code_800EC960.data.o (.sbss)
            build/src/code/code_800F7260.o (.sbss)
            build/data/code_800F7260.data.o (.sbss)
            build/src/code/code_800F9280.o (.sbss)
            build/data/code_800F9280.data.o (.sbss)
            build/data/code_800F9280.rodata.o (.sbss)
            build/src/code/logseverity.o (.sbss)
            build/src/code/gfxprint.o (.sbss)
            build/src/code/code_800FBCE0.o (.sbss)
            build/src/code/loadfragment2.o (.sbss)
            build/src/code/mtxuty-cvt.o (.sbss)
            build/src/code/relocation.o (.sbss)
            build/src/code/code_800FC620.o (.sbss)
            build/src/code/padutils.o (.sbss)
            build/src/code/padsetup.o (.sbss)
            build/src/code/code_800FCE80.o (.sbss)
            build/asm/fp.o (.sbss)
            build/src/code/system_malloc.o (.sbss)
            build/src/code/code_800FD970.o (.sbss)
            build/src/code/__osMalloc.o (.sbss)
            build/src/code/printutils.o (.sbss)
            build/src/code/sleep.o (.sbss)
            build/src/code/jpegutils.o (.sbss)
            build/src/code/jpegdecoder.o (.sbss)
            build/src/libultra_code_O2/osPfsFreeBlocks.o (.sbss)
            build/asm/guScale.o (.sbss)
            build/src/libultra_code_O2/sinf.o (.sbss)
            build/src/libultra_code_O2/sins.o (.sbss)
            build/src/libultra_code_O2/sptask.o (.sbss)
            build/src/libultra_code_O2/osRumblePak.o (.sbss)
            build/src/libultra_code_O2/__osSiCreateAccessQueue.o (.sbss)
            build/src/libultra_code_O2/osContInit.o (.sbss)
            build/src/libultra_code_O2/osContStartReadData.o (.sbss)
            build/src/libultra_code_O2/guPerspectiveF.o (.sbss)
            build/src/libultra_code_O2/__osSpRawStartDma.o (.sbss)
            build/src/libultra_code_O2/__osSiRawStartDma.o (.sbss)
            build/src/libultra_code_O2/osSpTaskYield.o (.sbss)
            build/src/libultra_code_O2/pfsreadwritefile.o (.sbss)
            build/src/libultra_code_O2/__osPfsGetStatus.o (.sbss)
            build/asm/guMtxIdentF.o (.sbss)
            build/src/libultra_code_O2/guLookAt.o (.sbss)
            build/src/libultra_code_O2/pfsallocatefile.o (.sbss)
            build/src/libultra_code_O1/osStopTimer.o (.sbss)
            build/src/libultra_code_O2/contpfs.o (.sbss)
            build/src/libultra_code_O2/code_80102FA0.o (.sbss)
            build/src/libultra_code_O2/osPfsFindFile.o (.sbss)
            build/src/libultra_code_O2/sqrtf.o (.sbss)
            build/src/libultra_code_O2/osAfterPreNMI.o (.sbss)
            build/src/libultra_code_O2/contquery.o (.sbss)
            build/src/libultra_code_O2/guLookAtHilite.o (.sbss)
            build/src/libultra_code_O2/sp.o (.sbss)
            build/asm/guMtxIdent.o (.sbss)
            build/src/libultra_code_O2/guPosition.o (.sbss)
            build/src/libultra_code_O2/osSpTaskYielded.o (.sbss)
            build/src/libultra_code_O2/rotate.o (.sbss)
            build/src/libultra_code_O2/osAiSetFrequency.o (.sbss)
            build/src/libultra_code_O2/__osGetActiveQueue.o (.sbss)
            build/asm/guNormalize.o (.sbss)
            build/src/libultra_code_O2/osDpGetStatus.o (.sbss)
            build/src/libultra_code_O2/osDpSetStatus.o (.sbss)
            build/src/libultra_code_O2/osPfsDeleteFile.o (.sbss)
            build/src/libultra_code_O2/ortho.o (.sbss)
            build/src/libultra_code_O2/cosf.o (.sbss)
            build/data/__libm_qnan_f.rodata.o (.sbss)
            build/src/libultra_code_O2/coss.o (.sbss)
            build/src/libultra_code_O2/osViSetEvent.o (.sbss)
            build/src/libultra_code_O2/osPfsIsPlug.o (.sbss)
            build/src/libultra_code_O2/guS2DInitBg.o (.sbss)
            build/src/libultra_code_O2/__osPfsSelectBank.o (.sbss)
            build/src/libultra_code_O2/osContSetCh.o (.sbss)
            build/src/libultra_code_O2/code_80104D60.o (.sbss)
            build/src/libultra_code_O2/pfsinitpak.o (.sbss)
            build/src/libultra_code_O2/pfschecker.o (.sbss)
            build/src/libultra_code_O2/osAiGetLength.o (.sbss)
            build/asm/guTranslate.o (.sbss)
            build/src/libultra_code_O2/__osContRamWrite.o (.sbss)
            build/src/libultra_code_O2/__osContRamRead.o (.sbss)
            build/src/libultra_code_O2/__osContAddressCrc.o (.sbss)
            build/src/libultra_code_O1/osSetTimer.o (.sbss)
            build/src/libultra_code_O2/__osSpGetStatus.o (.sbss)
            build/src/libultra_code_O2/__osSpSetStatus.o (.sbss)
            build/asm/osWritebackDCacheAll.o (.sbss)
            build/src/libultra_code_O2/__osGetCurrFaultedThread.o (.sbss)
            build/asm/guMtxF2L.o (.sbss)
            build/src/libultra_code_O1/llcvt.o (.sbss)
            build/src/libultra_code_O2/osViGetCurrentFramebuffer.o (.sbss)
            build/src/libultra_code_O2/__osSpSetPc.o (.sbss)
            build/src/libultra_code_O2_g3/sqrt.o (.sbss)
            build/src/libultra_code_O2_g3/absf.o (.sbss)
            build/src/code/code_801067F0.o (.sbss)
            build/src/code/code_80106860.o (.sbss)
            build/src/code/code_801068B0.o (.sbss)
            build/data/z_message_PAL.rodata.o (.sbss)
            build/src/code/z_message_PAL.o (.sbss)
            build/data/z_message_PAL.bss.o (.sbss)
            build/src/code/code_80110450.o (.sbss)
            build/src/code/z_construct.o (.sbss)
            build/data/rsp.text.o (.sbss)
            build/data/rsp.rodata.o (.sbss)
            build/src/code/z_en_a_keep.o (.scommon)
            build/src/code/z_en_item00.o (.scommon)
            build/data/z_en_item00.data.o (.scommon)
            build/data/z_en_item00.bss.o (.scommon)
            build/src/code/z_eff_blure.o (.scommon)
            build/src/code/z_eff_shield_particle.o (.scommon)
            build/src/code/z_eff_spark.o (.scommon)
            build/src/code/z_eff_ss_dead.o (.scommon)
            build/src/code/z_effect.o (.scommon)
            build/src/code/z_effect_soft_sprite.o (.scommon)
            build/src/code/z_effect_soft_sprite_old_init.o (.scommon)
            build/src/code/z_effect_soft_sprite_dlftbls.o (.scommon)
            build/src/code/flg_set.o (.scommon)
            build/src/code/z_DLF.o (.scommon)
            build/src/code/z_actor.o (.scommon)
            build/src/code/z_actor_dlftbls.o (.scommon)
            build/src/code/z_bgcheck.o (.scommon)
            build/data/z_bgcheck.data.o (.scommon)
            build/data/z_bgcheck.rodata.o (.scommon)
            build/data/z_bgcheck.bss.o (.scommon)
            build/src/code/code_800430A0.o (.scommon)
            build/src/code/code_80043480.o (.scommon)
            build/src/code/z_camera.o (.scommon)
            build/data/z_camera.bss.o (.scommon)
            build/src/code/z_collision_btltbls.o (.scommon)
            build/src/code/z_collision_check.o (.scommon)
            build/src/code/z_common_data.o (.scommon)
            build/src/code/z_debug.o (.scommon)
            build/src/code/z_debug_display.o (.scommon)
            build/src/code/z_demo.o (.scommon)
            build/src/code/code_80069420.o (.scommon)
            build/src/code/z_draw.o (.scommon)
            build/src/code/code_8006BA00.o (.scommon)
            build/src/code/z_elf_message.o (.scommon)
            build/src/code/z_face_reaction.o (.scommon)
            build/src/code/code_8006C3A0.o (.scommon)
            build/src/code/code_8006C510.o (.scommon)
            build/src/code/z_fcurve_data_skelanime.o (.scommon)
            build/src/code/z_game_dlftbls.o (.scommon)
            build/src/code/z_horse.o (.scommon)
            build/src/code/z_jpeg.o (.scommon)
            build/src/code/z_kaleido_setup.o (.scommon)
            build/src/code/z_kanfont.o (.scommon)
            build/src/code/z_kankyo.o (.scommon)
            build/data/z_kankyo.data.o (.scommon)
            build/data/z_kankyo.bss.o (.scommon)
            build/src/code/z_lib.o (.scommon)
            build/src/code/z_lifemeter.o (.scommon)
            build/data/z_lifemeter.data.o (.scommon)
            build/src/code/z_lights.o (.scommon)
            build/src/code/z_malloc.o (.scommon)
            build/src/code/z_map_mark.o (.scommon)
            build/src/code/z_moji.o (.scommon)
            build/src/code/z_prenmi_buff.o (.scommon)
            build/src/code/z_msgevent.o (.scommon)
            build/src/code/z_olib.o (.scommon)
            build/src/code/z_onepointdemo.o (.scommon)
            build/data/z_onepointdemo.data.o (.scommon)
            build/src/code/z_map_exp.o (.scommon)
            build/src/code/z_map_data.o (.scommon)
            build/src/code/z_parameter.o (.scommon)
            build/src/code/z_path.o (.scommon)
            build/src/code/code_8008E6A0.o (.scommon)
            build/src/code/z_player_lib.o (.scommon)
            build/src/code/z_prenmi.o (.scommon)
            build/src/code/z_quake.o (.scommon)
            build/src/code/z_rcp.o (.scommon)
            build/src/code/z_room.o (.scommon)
            build/src/code/z_sample.o (.scommon)
            build/src/code/code_80097A00.o (.scommon)
            build/src/code/z_scene.o (.scommon)
            build/src/code/z_scene_table.o (.scommon)
            build/src/code/z_skelanime.o (.scommon)
            build/src/code/z_skin.o (.scommon)
            build/data/z_skin.bss.o (.scommon)
            build/src/code/z_skin_awb.o (.scommon)
            build/src/code/z_skin_matrix.o (.scommon)
            build/src/code/z_sram.o (.scommon)
            build/src/code/z_ss_sram.o (.scommon)
            build/src/code/code_800A9F30.o (.scommon)
            build/data/z_text.data.o (.scommon)
            build/src/code/z_view.o (.scommon)
            build/src/code/z_vimode.o (.scommon)
            build/src/code/code_800ACE70.o (.scommon)
            build/src/code/z_vismono.o (.scommon)
            build/src/code/code_800AD920.o (.scommon)
            build/src/code/z_vr_box.o (.scommon)
            build/data/z_vr_box.data.o (.scommon)
            build/src/code/z_vr_box_draw.o (.scommon)
            build/src/code/z_player_call.o (.scommon)
            build/src/code/z_fbdemo.o (.scommon)
            build/src/code/z_fbdemo_triforce.o (.scommon)
            build/src/code/z_fbdemo_wipe1.o (.scommon)
            build/src/code/z_fbdemo_circle.o (.scommon)
            build/src/code/z_fbdemo_fade.o (.scommon)
            build/src/code/shrink_window.o (.scommon)
            build/src/code/db_camera.o (.scommon)
            build/data/db_camera.rodata.o (.scommon)
            build/data/db_camera.data.o (.scommon)
            build/data/db_camera.bss.o (.scommon)
            build/src/code/code_800BB0A0.o (.scommon)
            build/src/code/mempak.o (.scommon)
            build/src/code/z_kaleido_manager.o (.scommon)
            build/src/code/z_kaleido_scope_call.o (.scommon)
            build/src/code/z_play.o (.scommon)
            build/src/code/PreRender.o (.scommon)
            build/src/code/TwoHeadArena.o (.scommon)
            build/src/code/code_800C3C20.o (.scommon)
            build/src/code/audioMgr.o (.scommon)
            build/src/code/title_setup.o (.scommon)
            build/src/code/game.o (.scommon)
            build/src/code/gamealloc.o (.scommon)
            build/src/code/graph.o (.scommon)
            build/src/code/listalloc.o (.scommon)
            build/src/code/main.o (.scommon)
            build/src/code/padmgr.o (.scommon)
            build/src/code/sched.o (.scommon)
            build/src/code/speed_meter.o (.scommon)
            build/src/code/sys_cfb.o (.scommon)
            build/src/code/sys_math.o (.scommon)
            build/src/code/sys_math3d.o (.scommon)
            build/src/code/sys_math_atan.o (.scommon)
            build/src/code/sys_matrix.o (.scommon)
            build/src/code/sys_ucode.o (.scommon)
            build/src/code/code_800D2E30.o (.scommon)
            build/data/code_800D2E30.data.o (.scommon)
            build/src/code/code_800D31A0.o (.scommon)
            build/src/code/irqmgr.o (.scommon)
            build/src/code/debug_malloc.o (.scommon)
            build/src/code/fault.o (.scommon)
            build/data/fault.bss.o (.scommon)
            build/src/code/fault_drawer.o (.scommon)
            build/data/fault_drawer.bss.o (.scommon)
            build/asm/code_800D71F0.o (.scommon)
            build/src/code/ucode_disas.o (.scommon)
            build/src/code/code_800DACC0.o (.scommon)
            build/data/code_800DACC0.data.o (.scommon)
            build/data/code_800DACC0.bss.o (.scommon)
            build/src/code/audio_heap.o (.scommon)
            build/src/code/code_800E11F0.o (.scommon)
            build/data/code_800E11F0.data.o (.scommon)
            build/data/code_800E11F0.rodata.o (.scommon)
            build/src/libultra_code_O2/code_800E6840.o (.scommon)
            build/src/libultra_code_O2/osAiSetNextBuffer.o (.scommon)
            build/src/code/audio_playback.o (.scommon)
            build/src/code/audio_effects.o (.scommon)
            build/data/audio_effects.data.o (.scommon)
            build/src/code/audio_seqplayer.o (.scommon)
            build/src/code/code_800EC960.o (.scommon)
            build/data/code_800EC960.data.o (.scommon)
            build/src/code/code_800F7260.o (.scommon)
            build/data/code_800F7260.data.o (.scommon)
            build/src/code/code_800F9280.o (.scommon)
            build/data/code_800F9280.data.o (.scommon)
            build/data/code_800F9280.rodata.o (.scommon)
            build/src/code/logseverity.o (.scommon)
            build/src/code/gfxprint.o (.scommon)
            build/src/code/code_800FBCE0.o (.scommon)
            build/src/code/loadfragment2.o (.scommon)
            build/src/code/mtxuty-cvt.o (.scommon)
            build/src/code/relocation.o (.scommon)
            build/src/code/code_800FC620.o (.scommon)
            build/src/code/padutils.o (.scommon)
            build/src/code/padsetup.o (.scommon)
            build/src/code/code_800FCE80.o (.scommon)
            build/asm/fp.o (.scommon)
            build/src/code/system_malloc.o (.scommon)
            build/src/code/code_800FD970.o (.scommon)
            build/src/code/__osMalloc.o (.scommon)
            build/src/code/printutils.o (.scommon)
            build/src/code/sleep.o (.scommon)
            build/src/code/jpegutils.o (.scommon)
            build/src/code/jpegdecoder.o (.scommon)
            build/src/libultra_code_O2/osPfsFreeBlocks.o (.scommon)
            build/asm/guScale.o (.scommon)
            build/src/libultra_code_O2/sinf.o (.scommon)
            build/src/libultra_code_O2/sins.o (.scommon)
            build/src/libultra_code_O2/sptask.o (.scommon)
            build/src/libultra_code_O2/osRumblePak.o (.scommon)
            build/src/libultra_code_O2/__osSiCreateAccessQueue.o (.scommon)
            build/src/libultra_code_O2/osContInit.o (.scommon)
            build/src/libultra_code_O2/osContStartReadData.o (.scommon)
            build/src/libultra_code_O2/guPerspectiveF.o (.scommon)
            build/src/libultra_code_O2/__osSpRawStartDma.o (.scommon)
            build/src/libultra_code_O2/__osSiRawStartDma.o (.scommon)
            build/src/libultra_code_O2/osSpTaskYield.o (.scommon)
            build/src/libultra_code_O2/pfsreadwritefile.o (.scommon)
            build/src/libultra_code_O2/__osPfsGetStatus.o (.scommon)
            build/asm/guMtxIdentF.o (.scommon)
            build/src/libultra_code_O2/guLookAt.o (.scommon)
            build/src/libultra_code_O2/pfsallocatefile.o (.scommon)
            build/src/libultra_code_O1/osStopTimer.o (.scommon)
            build/src/libultra_code_O2/contpfs.o (.scommon)
            build/src/libultra_code_O2/code_80102FA0.o (.scommon)
            build/src/libultra_code_O2/osPfsFindFile.o (.scommon)
            build/src/libultra_code_O2/sqrtf.o (.scommon)
            build/src/libultra_code_O2/osAfterPreNMI.o (.scommon)
            build/src/libultra_code_O2/contquery.o (.scommon)
            build/src/libultra_code_O2/guLookAtHilite.o (.scommon)
            build/src/libultra_code_O2/sp.o (.scommon)
            build/asm/guMtxIdent.o (.scommon)
            build/src/libultra_code_O2/guPosition.o (.scommon)
            build/src/libultra_code_O2/osSpTaskYielded.o (.scommon)
            build/src/libultra_code_O2/rotate.o (.scommon)
            build/src/libultra_code_O2/osAiSetFrequency.o (.scommon)
            build/src/libultra_code_O2/__osGetActiveQueue.o (.scommon)
            build/asm/guNormalize.o (.scommon)
            build/src/libultra_code_O2/osDpGetStatus.o (.scommon)
            build/src/libultra_code_O2/osDpSetStatus.o (.scommon)
            build/src/libultra_code_O2/osPfsDeleteFile.o (.scommon)
            build/src/libultra_code_O2/ortho.o (.scommon)
            build/src/libultra_code_O2/cosf.o (.scommon)
            build/data/__libm_qnan_f.rodata.o (.scommon)
            build/src/libultra_code_O2/coss.o (.scommon)
            build/src/libultra_code_O2/osViSetEvent.o (.scommon)
            build/src/libultra_code_O2/osPfsIsPlug.o (.scommon)
            build/src/libultra_code_O2/guS2DInitBg.o (.scommon)
            build/src/libultra_code_O2/__osPfsSelectBank.o (.scommon)
            build/src/libultra_code_O2/osContSetCh.o (.scommon)
            build/src/libultra_code_O2/code_80104D60.o (.scommon)
            build/src/libultra_code_O2/pfsinitpak.o (.scommon)
            build/src/libultra_code_O2/pfschecker.o (.scommon)
            build/src/libultra_code_O2/osAiGetLength.o (.scommon)
            build/asm/guTranslate.o (.scommon)
            build/src/libultra_code_O2/__osContRamWrite.o (.scommon)
            build/src/libultra_code_O2/__osContRamRead.o (.scommon)
            build/src/libultra_code_O2/__osContAddressCrc.o (.scommon)
            build/src/libultra_code_O1/osSetTimer.o (.scommon)
            build/src/libultra_code_O2/__osSpGetStatus.o (.scommon)
            build/src/libultra_code_O2/__osSpSetStatus.o (.scommon)
            build/asm/osWritebackDCacheAll.o (.scommon)
            build/src/libultra_code_O2/__osGetCurrFaultedThread.o (.scommon)
            build/asm/guMtxF2L.o (.scommon)
            build/src/libultra_code_O1/llcvt.o (.scommon)
            build/src/libultra_code_O2/osViGetCurrentFramebuffer.o (.scommon)
            build/src/libultra_code_O2/__osSpSetPc.o (.scommon)
            build/src/libultra_code_O2_g3/sqrt.o (.scommon)
            build/src/libultra_code_O2_g3/absf.o (.scommon)
            build/src/code/code_801067F0.o (.scommon)
            build/src/code/code_80106860.o (.scommon)
            build/src/code/code_801068B0.o (.scommon)
            build/data/z_message_PAL.rodata.o (.scommon)
            build/src/code/z_message_PAL.o (.scommon)
            build/data/z_message_PAL.bss.o (.scommon)
            build/src/code/code_80110450.o (.scommon)
            build/src/code/z_construct.o (.scommon)
            build/data/rsp.text.o (.scommon)
            build/data/rsp.rodata.o (.scommon)
            build/src/code/z_en_a_keep.o (.bss)
            build/src/code/z_en_item00.o (.bss)
            build/data/z_en_item00.data.o (.bss)
            build/data/z_en_item00.bss.o (.bss)
            build/src/code/z_eff_blure.o (.bss)
            build/src/code/z_eff_shield_particle.o (.bss)
            build/src/code/z_eff_spark.o (.bss)
            build/src/code/z_eff_ss_dead.o (.bss)
            build/src/code/z_effect.o (.bss)
            build/src/code/z_effect_soft_sprite.o (.bss)
            build/src/code/z_effect_soft_sprite_old_init.o (.bss)
            build/src/code/z_effect_soft_sprite_dlftbls.o (.bss)
            build/src/code/flg_set.o (.bss)
            build/src/code/z_DLF.o (.bss)
            build/src/code/z_actor.o (.bss)
            build/src/code/z_actor_dlftbls.o (.bss)
            build/src/code/z_bgcheck.o (.bss)
            build/data/z_bgcheck.data.o (.bss)
            build/data/z_bgcheck.rodata.o (.bss)
            build/data/z_bgcheck.bss.o (.bss)
            build/src/code/code_800430A0.o (.bss)
            build/src/code/code_80043480.o (.bss)
            build/src/code/z_camera.o (.bss)
            build/data/z_camera.bss.o (.bss)
            build/src/code/z_collision_btltbls.o (.bss)
            build/src/code/z_collision_check.o (.bss)
            build/src/code/z_common_data.o (.bss)
            build/src/code/z_debug.o (.bss)
            build/src/code/z_debug_display.o (.bss)
            build/src/code/z_demo.o (.bss)
            build/src/code/code_80069420.o (.bss)
            build/src/code/z_draw.o (.bss)
            build/src/code/code_8006BA00.o (.bss)
            build/src/code/z_elf_message.o (.bss)
            build/src/code/z_face_reaction.o (.bss)
            build/src/code/code_8006C3A0.o (.bss)
            build/src/code/code_8006C510.o (.bss)
            build/src/code/z_fcurve_data_skelanime.o (.bss)
            build/src/code/z_game_dlftbls.o (.bss)
            build/src/code/z_horse.o (.bss)
            build/src/code/z_jpeg.o (.bss)
            build/src/code/z_kaleido_setup.o (.bss)
            build/src/code/z_kanfont.o (.bss)
            build/src/code/z_kankyo.o (.bss)
            build/data/z_kankyo.data.o (.bss)
            build/data/z_kankyo.bss.o (.bss)
            build/src/code/z_lib.o (.bss)
            build/src/code/z_lifemeter.o (.bss)
            build/data/z_lifemeter.data.o (.bss)
            build/src/code/z_lights.o (.bss)
            build/src/code/z_malloc.o (.bss)
            build/src/code/z_map_mark.o (.bss)
            build/src/code/z_moji.o (.bss)
            build/src/code/z_prenmi_buff.o (.bss)
            build/src/code/z_msgevent.o (.bss)
            build/src/code/z_olib.o (.bss)
            build/src/code/z_onepointdemo.o (.bss)
            build/data/z_onepointdemo.data.o (.bss)
            build/src/code/z_map_exp.o (.bss)
            build/src/code/z_map_data.o (.bss)
            build/src/code/z_parameter.o (.bss)
            build/src/code/z_path.o (.bss)
            build/src/code/code_8008E6A0.o (.bss)
            build/src/code/z_player_lib.o (.bss)
            build/src/code/z_prenmi.o (.bss)
            build/src/code/z_quake.o (.bss)
            build/src/code/z_rcp.o (.bss)
            build/src/code/z_room.o (.bss)
            build/src/code/z_sample.o (.bss)
            build/src/code/code_80097A00.o (.bss)
            build/src/code/z_scene.o (.bss)
            build/src/code/z_scene_table.o (.bss)
            build/src/code/z_skelanime.o (.bss)
            build/src/code/z_skin.o (.bss)
            build/data/z_skin.bss.o (.bss)
            build/src/code/z_skin_awb.o (.bss)
            build/src/code/z_skin_matrix.o (.bss)
            build/src/code/z_sram.o (.bss)
            build/src/code/z_ss_sram.o (.bss)
            build/src/code/code_800A9F30.o (.bss)
            build/data/z_text.data.o (.bss)
            build/src/code/z_view.o (.bss)
            build/src/code/z_vimode.o (.bss)
            build/src/code/code_800ACE70.o (.bss)
            build/src/code/z_vismono.o (.bss)
            build/src/code/code_800AD920.o (.bss)
            build/src/code/z_vr_box.o (.bss)
            build/data/z_vr_box.data.o (.bss)
            build/src/code/z_vr_box_draw.o (.bss)
            build/src/code/z_player_call.o (.bss)
            build/src/code/z_fbdemo.o (.bss)
            build/src/code/z_fbdemo_triforce.o (.bss)
            build/src/code/z_fbdemo_wipe1.o (.bss)
            build/src/code/z_fbdemo_circle.o (.bss)
            build/src/code/z_fbdemo_fade.o (.bss)
            build/src/code/shrink_window.o (.bss)
            build/src/code/db_camera.o (.bss)
            build/data/db_camera.rodata.o (.bss)
            build/data/db_camera.data.o (.bss)
            build/data/db_camera.bss.o (.bss)
            build/src/code/code_800BB0A0.o (.bss)
            build/src/code/mempak.o (.bss)
            build/src/code/z_kaleido_manager.o (.bss)
            build/src/code/z_kaleido_scope_call.o (.bss)
            build/src/code/z_play.o (.bss)
            build/src/code/PreRender.o (.bss)
            build/src/code/TwoHeadArena.o (.bss)
            build/src/code/code_800C3C20.o (.bss)
            build/src/code/audioMgr.o (.bss)
            build/src/code/title_setup.o (.bss)
            build/src/code/game.o (.bss)
            build/src/code/gamealloc.o (.bss)
            build/src/code/graph.o (.bss)
            build/src/code/listalloc.o (.bss)
            build/src/code/main.o (.bss)
            build/src/code/padmgr.o (.bss)
            build/src/code/sched.o (.bss)
            build/src/code/speed_meter.o (.bss)
            build/src/code/sys_cfb.o (.bss)
            build/src/code/sys_math.o (.bss)
            build/src/code/sys_math3d.o (.bss)
            build/src/code/sys_math_atan.o (.bss)
            build/src/code/sys_matrix.o (.bss)
            build/src/code/sys_ucode.o (.bss)
            build/src/code/code_800D2E30.o (.bss)
            build/data/code_800D2E30.data.o (.bss)
            build/src/code/code_800D31A0.o (.bss)
            build/src/code/irqmgr.o (.bss)
            build/src/code/debug_malloc.o (.bss)
            build/src/code/fault.o (.bss)
            build/data/fault.bss.o (.bss)
            build/src/code/fault_drawer.o (.bss)
            build/data/fault_drawer.bss.o (.bss)
            build/asm/code_800D71F0.o (.bss)
            build/src/code/ucode_disas.o (.bss)
            build/src/code/code_800DACC0.o (.bss)
            build/data/code_800DACC0.data.o (.bss)
            build/data/code_800DACC0.bss.o (.bss)
            build/src/code/audio_heap.o (.bss)
            build/src/code/code_800E11F0.o (.bss)
            build/data/code_800E11F0.data.o (.bss)
            build/data/code_800E11F0.rodata.o (.bss)
            build/src/libultra_code_O2/code_800E6840.o (.bss)
            build/src/libultra_code_O2/osAiSetNextBuffer.o (.bss)
            build/src/code/audio_playback.o (.bss)
            build/src/code/audio_effects.o (.bss)
            build/data/audio_effects.data.o (.bss)
            build/src/code/audio_seqplayer.o (.bss)
            build/src/code/code_800EC960.o (.bss)
            build/data/code_800EC960.data.o (.bss)
            build/src/code/code_800F7260.o (.bss)
            build/data/code_800F7260.data.o (.bss)
            build/src/code/code_800F9280.o (.bss)
            build/data/code_800F9280.data.o (.bss)
            build/data/code_800F9280.rodata.o (.bss)
            build/src/code/logseverity.o (.bss)
            build/src/code/gfxprint.o (.bss)
            build/src/code/code_800FBCE0.o (.bss)
            build/src/code/loadfragment2.o (.bss)
            build/src/code/mtxuty-cvt.o (.bss)
            build/src/code/relocation.o (.bss)
            build/src/code/code_800FC620.o (.bss)
            build/src/code/padutils.o (.bss)
            build/src/code/padsetup.o (.bss)
            build/src/code/code_800FCE80.o (.bss)
            build/asm/fp.o (.bss)
            build/src/code/system_malloc.o (.bss)
            build/src/code/code_800FD970.o (.bss)
            build/src/code/__osMalloc.o (.bss)
            build/src/code/printutils.o (.bss)
            build/src/code/sleep.o (.bss)
            build/src/code/jpegutils.o (.bss)
            build/src/code/jpegdecoder.o (.bss)
            build/src/libultra_code_O2/osPfsFreeBlocks.o (.bss)
            build/asm/guScale.o (.bss)
            build/src/libultra_code_O2/sinf.o (.bss)
            build/src/libultra_code_O2/sins.o (.bss)
            build/src/libultra_code_O2/sptask.o (.bss)
            build/src/libultra_code_O2/osRumblePak.o (.bss)
            build/src/libultra_code_O2/__osSiCreateAccessQueue.o (.bss)
            build/src/libultra_code_O2/osContInit.o (.bss)
            build/src/libultra_code_O2/osContStartReadData.o (.bss)
            build/src/libultra_code_O2/guPerspectiveF.o (.bss)
            build/src/libultra_code_O2/__osSpRawStartDma.o (.bss)
            build/src/libultra_code_O2/__osSiRawStartDma.o (.bss)
            build/src/libultra_code_O2/osSpTaskYield.o (.bss)
            build/src/libultra_code_O2/pfsreadwritefile.o (.bss)
            build/src/libultra_code_O2/__osPfsGetStatus.o (.bss)
            build/asm/guMtxIdentF.o (.bss)
            build/src/libultra_code_O2/guLookAt.o (.bss)
            build/src/libultra_code_O2/pfsallocatefile.o (.bss)
            build/src/libultra_code_O1/osStopTimer.o (.bss)
            build/src/libultra_code_O2/contpfs.o (.bss)
            build/src/libultra_code_O2/code_80102FA0.o (.bss)
            build/src/libultra_code_O2/osPfsFindFile.o (.bss)
            build/src/libultra_code_O2/sqrtf.o (.bss)
            build/src/libultra_code_O2/osAfterPreNMI.o (.bss)
            build/src/libultra_code_O2/contquery.o (.bss)
            build/src/libultra_code_O2/guLookAtHilite.o (.bss)
            build/src/libultra_code_O2/sp.o (.bss)
            build/asm/guMtxIdent.o (.bss)
            build/src/libultra_code_O2/guPosition.o (.bss)
            build/src/libultra_code_O2/osSpTaskYielded.o (.bss)
            build/src/libultra_code_O2/rotate.o (.bss)
            build/src/libultra_code_O2/osAiSetFrequency.o (.bss)
            build/src/libultra_code_O2/__osGetActiveQueue.o (.bss)
            build/asm/guNormalize.o (.bss)
            build/src/libultra_code_O2/osDpGetStatus.o (.bss)
            build/src/libultra_code_O2/osDpSetStatus.o (.bss)
            build/src/libultra_code_O2/osPfsDeleteFile.o (.bss)
            build/src/libultra_code_O2/ortho.o (.bss)
            build/src/libultra_code_O2/cosf.o (.bss)
            build/data/__libm_qnan_f.rodata.o (.bss)
            build/src/libultra_code_O2/coss.o (.bss)
            build/src/libultra_code_O2/osViSetEvent.o (.bss)
            build/src/libultra_code_O2/osPfsIsPlug.o (.bss)
            build/src/libultra_code_O2/guS2DInitBg.o (.bss)
            build/src/libultra_code_O2/__osPfsSelectBank.o (.bss)
            build/src/libultra_code_O2/osContSetCh.o (.bss)
            build/src/libultra_code_O2/code_80104D60.o (.bss)
            build/src/libultra_code_O2/pfsinitpak.o (.bss)
            build/src/libultra_code_O2/pfschecker.o (.bss)
            build/src/libultra_code_O2/osAiGetLength.o (.bss)
            build/asm/guTranslate.o (.bss)
            build/src/libultra_code_O2/__osContRamWrite.o (.bss)
            build/src/libultra_code_O2/__osContRamRead.o (.bss)
            build/src/libultra_code_O2/__osContAddressCrc.o (.bss)
            build/src/libultra_code_O1/osSetTimer.o (.bss)
            build/src/libultra_code_O2/__osSpGetStatus.o (.bss)
            build/src/libultra_code_O2/__osSpSetStatus.o (.bss)
            build/asm/osWritebackDCacheAll.o (.bss)
            build/src/libultra_code_O2/__osGetCurrFaultedThread.o (.bss)
            build/asm/guMtxF2L.o (.bss)
            build/src/libultra_code_O1/llcvt.o (.bss)
            build/src/libultra_code_O2/osViGetCurrentFramebuffer.o (.bss)
            build/src/libultra_code_O2/__osSpSetPc.o (.bss)
            build/src/libultra_code_O2_g3/sqrt.o (.bss)
            build/src/libultra_code_O2_g3/absf.o (.bss)
            build/src/code/code_801067F0.o (.bss)
            build/src/code/code_80106860.o (.bss)
            build/src/code/code_801068B0.o (.bss)
            build/data/z_message_PAL.rodata.o (.bss)
            build/src/code/z_message_PAL.o (.bss)
            build/data/z_message_PAL.bss.o (.bss)
            build/src/code/code_80110450.o (.bss)
            build/src/code/z_construct.o (.bss)
            build/data/rsp.text.o (.bss)
            build/data/rsp.rodata.o (.bss)
            build/src/code/z_en_a_keep.o (COMMON)
            build/src/code/z_en_item00.o (COMMON)
            build/data/z_en_item00.data.o (COMMON)
            build/data/z_en_item00.bss.o (COMMON)
            build/src/code/z_eff_blure.o (COMMON)
            build/src/code/z_eff_shield_particle.o (COMMON)
            build/src/code/z_eff_spark.o (COMMON)
            build/src/code/z_eff_ss_dead.o (COMMON)
            build/src/code/z_effect.o (COMMON)
            build/src/code/z_effect_soft_sprite.o (COMMON)
            build/src/code/z_effect_soft_sprite_old_init.o (COMMON)
            build/src/code/z_effect_soft_sprite_dlftbls.o (COMMON)
            build/src/code/flg_set.o (COMMON)
            build/src/code/z_DLF.o (COMMON)
            build/src/code/z_actor.o (COMMON)
            build/src/code/z_actor_dlftbls.o (COMMON)
            build/src/code/z_bgcheck.o (COMMON)
            build/data/z_bgcheck.data.o (COMMON)
            build/data/z_bgcheck.rodata.o (COMMON)
            build/data/z_bgcheck.bss.o (COMMON)
            build/src/code/code_800430A0.o (COMMON)
            build/src/code/code_80043480.o (COMMON)
            build/src/code/z_camera.o (COMMON)
            build/data/z_camera.bss.o (COMMON)
            build/src/code/z_collision_btltbls.o (COMMON)
            build/src/code/z_collision_check.o (COMMON)
            build/src/code/z_common_data.o (COMMON)
            build/src/code/z_debug.o (COMMON)
            build/src/code/z_debug_display.o (COMMON)
            build/src/code/z_demo.o (COMMON)
            build/src/code/code_80069420.o (COMMON)
            build/src/code/z_draw.o (COMMON)
            build/src/code/code_8006BA00.o (COMMON)
            build/src/code/z_elf_message.o (COMMON)
            build/src/code/z_face_reaction.o (COMMON)
            build/src/code/code_8006C3A0.o (COMMON)
            build/src/code/code_8006C510.o (COMMON)
            build/src/code/z_fcurve_data_skelanime.o (COMMON)
            build/src/code/z_game_dlftbls.o (COMMON)
            build/src/code/z_horse.o (COMMON)
            build/src/code/z_jpeg.o (COMMON)
            build/src/code/z_kaleido_setup.o (COMMON)
            build/src/code/z_kanfont.o (COMMON)
            build/src/code/z_kankyo.o (COMMON)
            build/data/z_kankyo.data.o (COMMON)
            build/data/z_kankyo.bss.o (COMMON)
            build/src/code/z_lib.o (COMMON)
            build/src/code/z_lifemeter.o (COMMON)
            build/data/z_lifemeter.data.o (COMMON)
            build/src/code/z_lights.o (COMMON)
            build/src/code/z_malloc.o (COMMON)
            build/src/code/z_map_mark.o (COMMON)
            build/src/code/z_moji.o (COMMON)
            build/src/code/z_prenmi_buff.o (COMMON)
            build/src/code/z_msgevent.o (COMMON)
            build/src/code/z_olib.o (COMMON)
            build/src/code/z_onepointdemo.o (COMMON)
            build/data/z_onepointdemo.data.o (COMMON)
            build/src/code/z_map_exp.o (COMMON)
            build/src/code/z_map_data.o (COMMON)
            build/src/code/z_parameter.o (COMMON)
            build/src/code/z_path.o (COMMON)
            build/src/code/code_8008E6A0.o (COMMON)
            build/src/code/z_player_lib.o (COMMON)
            build/src/code/z_prenmi.o (COMMON)
            build/src/code/z_quake.o (COMMON)
            build/src/code/z_rcp.o (COMMON)
            build/src/code/z_room.o (COMMON)
            build/src/code/z_sample.o (COMMON)
            build/src/code/code_80097A00.o (COMMON)
            build/src/code/z_scene.o (COMMON)
            build/src/code/z_scene_table.o (COMMON)
            build/src/code/z_skelanime.o (COMMON)
            build/src/code/z_skin.o (COMMON)
            build/data/z_skin.bss.o (COMMON)
            build/src/code/z_skin_awb.o (COMMON)
            build/src/code/z_skin_matrix.o (COMMON)
            build/src/code/z_sram.o (COMMON)
            build/src/code/z_ss_sram.o (COMMON)
            build/src/code/code_800A9F30.o (COMMON)
            build/data/z_text.data.o (COMMON)
            build/src/code/z_view.o (COMMON)
            build/src/code/z_vimode.o (COMMON)
            build/src/code/code_800ACE70.o (COMMON)
            build/src/code/z_vismono.o (COMMON)
            build/src/code/code_800AD920.o (COMMON)
            build/src/code/z_vr_box.o (COMMON)
            build/data/z_vr_box.data.o (COMMON)
            build/src/code/z_vr_box_draw.o (COMMON)
            build/src/code/z_player_call.o (COMMON)
            build/src/code/z_fbdemo.o (COMMON)
            build/src/code/z_fbdemo_triforce.o (COMMON)
            build/src/code/z_fbdemo_wipe1.o (COMMON)
            build/src/code/z_fbdemo_circle.o (COMMON)
            build/src/code/z_fbdemo_fade.o (COMMON)
            build/src/code/shrink_window.o (COMMON)
            build/src/code/db_camera.o (COMMON)
            build/data/db_camera.rodata.o (COMMON)
            build/data/db_camera.data.o (COMMON)
            build/data/db_camera.bss.o (COMMON)
            build/src/code/code_800BB0A0.o (COMMON)
            build/src/code/mempak.o (COMMON)
            build/src/code/z_kaleido_manager.o (COMMON)
            build/src/code/z_kaleido_scope_call.o (COMMON)
            build/src/code/z_play.o (COMMON)
            build/src/code/PreRender.o (COMMON)
            build/src/code/TwoHeadArena.o (COMMON)
            build/src/code/code_800C3C20.o (COMMON)
            build/src/code/audioMgr.o (COMMON)
            build/src/code/title_setup.o (COMMON)
            build/src/code/game.o (COMMON)
            build/src/code/gamealloc.o (COMMON)
            build/src/code/graph.o (COMMON)
            build/src/code/listalloc.o (COMMON)
            build/src/code/main.o (COMMON)
            build/src/code/padmgr.o (COMMON)
            build/src/code/sched.o (COMMON)
            build/src/code/speed_meter.o (COMMON)
            build/src/code/sys_cfb.o (COMMON)
            build/src/code/sys_math.o (COMMON)
            build/src/code/sys_math3d.o (COMMON)
            build/src/code/sys_math_atan.o (COMMON)
            build/src/code/sys_matrix.o (COMMON)
            build/src/code/sys_ucode.o (COMMON)
            build/src/code/code_800D2E30.o (COMMON)
            build/data/code_800D2E30.data.o (COMMON)
            build/src/code/code_800D31A0.o (COMMON)
            build/src/code/irqmgr.o (COMMON)
            build/src/code/debug_malloc.o (COMMON)
            build/src/code/fault.o (COMMON)
            build/data/fault.bss.o (COMMON)
            build/src/code/fault_drawer.o (COMMON)
            build/data/fault_drawer.bss.o (COMMON)
            build/asm/code_800D71F0.o (COMMON)
            build/src/code/ucode_disas.o (COMMON)
            build/src/code/code_800DACC0.o (COMMON)
            build/data/code_800DACC0.data.o (COMMON)
            build/data/code_800DACC0.bss.o (COMMON)
            build/src/code/audio_heap.o (COMMON)
            build/src/code/code_800E11F0.o (COMMON)
            build/data/code_800E11F0.data.o (COMMON)
            build/data/code_800E11F0.rodata.o (COMMON)
            build/src/libultra_code_O2/code_800E6840.o (COMMON)
            build/src/libultra_code_O2/osAiSetNextBuffer.o (COMMON)
            build/src/code/audio_playback.o (COMMON)
            build/src/code/audio_effects.o (COMMON)
            build/data/audio_effects.data.o (COMMON)
            build/src/code/audio_seqplayer.o (COMMON)
            build/src/code/code_800EC960.o (COMMON)
            build/data/code_800EC960.data.o (COMMON)
            build/src/code/code_800F7260.o (COMMON)
            build/data/code_800F7260.data.o (COMMON)
            build/src/code/code_800F9280.o (COMMON)
            build/data/code_800F9280.data.o (COMMON)
            build/data/code_800F9280.rodata.o (COMMON)
            build/src/code/logseverity.o (COMMON)
            build/src/code/gfxprint.o (COMMON)
            build/src/code/code_800FBCE0.o (COMMON)
            build/src/code/loadfragment2.o (COMMON)
            build/src/code/mtxuty-cvt.o (COMMON)
            build/src/code/relocation.o (COMMON)
            build/src/code/code_800FC620.o (COMMON)
            build/src/code/padutils.o (COMMON)
            build/src/code/padsetup.o (COMMON)
            build/src/code/code_800FCE80.o (COMMON)
            build/asm/fp.o (COMMON)
            build/src/code/system_malloc.o (COMMON)
            build/src/code/code_800FD970.o (COMMON)
            build/src/code/__osMalloc.o (COMMON)
            build/src/code/printutils.o (COMMON)
            build/src/code/sleep.o (COMMON)
            build/src/code/jpegutils.o (COMMON)
            build/src/code/jpegdecoder.o (COMMON)
            build/src/libultra_code_O2/osPfsFreeBlocks.o (COMMON)
            build/asm/guScale.o (COMMON)
            build/src/libultra_code_O2/sinf.o (COMMON)
            build/src/libultra_code_O2/sins.o (COMMON)
            build/src/libultra_code_O2/sptask.o (COMMON)
            build/src/libultra_code_O2/osRumblePak.o (COMMON)
            build/src/libultra_code_O2/__osSiCreateAccessQueue.o (COMMON)
            build/src/libultra_code_O2/osContInit.o (COMMON)
            build/src/libultra_code_O2/osContStartReadData.o (COMMON)
            build/src/libultra_code_O2/guPerspectiveF.o (COMMON)
            build/src/libultra_code_O2/__osSpRawStartDma.o (COMMON)
            build/src/libultra_code_O2/__osSiRawStartDma.o (COMMON)
            build/src/libultra_code_O2/osSpTaskYield.o (COMMON)
            build/src/libultra_code_O2/pfsreadwritefile.o (COMMON)
            build/src/libultra_code_O2/__osPfsGetStatus.o (COMMON)
            build/asm/guMtxIdentF.o (COMMON)
            build/src/libultra_code_O2/guLookAt.o (COMMON)
            build/src/libultra_code_O2/pfsallocatefile.o (COMMON)
            build/src/libultra_code_O1/osStopTimer.o (COMMON)
            build/src/libultra_code_O2/contpfs.o (COMMON)
            build/src/libultra_code_O2/code_80102FA0.o (COMMON)
            build/src/libultra_code_O2/osPfsFindFile.o (COMMON)
            build/src/libultra_code_O2/sqrtf.o (COMMON)
            build/src/libultra_code_O2/osAfterPreNMI.o (COMMON)
            build/src/libultra_code_O2/contquery.o (COMMON)
            build/src/libultra_code_O2/guLookAtHilite.o (COMMON)
            build/src/libultra_code_O2/sp.o (COMMON)
            build/asm/guMtxIdent.o (COMMON)
            build/src/libultra_code_O2/guPosition.o (COMMON)
            build/src/libultra_code_O2/osSpTaskYielded.o (COMMON)
            build/src/libultra_code_O2/rotate.o (COMMON)
            build/src/libultra_code_O2/osAiSetFrequency.o (COMMON)
            build/src/libultra_code_O2/__osGetActiveQueue.o (COMMON)
            build/asm/guNormalize.o (COMMON)
            build/src/libultra_code_O2/osDpGetStatus.o (COMMON)
            build/src/libultra_code_O2/osDpSetStatus.o (COMMON)
            build/src/libultra_code_O2/osPfsDeleteFile.o (COMMON)
            build/src/libultra_code_O2/ortho.o (COMMON)
            build/src/libultra_code_O2/cosf.o (COMMON)
            build/data/__libm_qnan_f.rodata.o (COMMON)
            build/src/libultra_code_O2/coss.o (COMMON)
            build/src/libultra_code_O2/osViSetEvent.o (COMMON)
            build/src/libultra_code_O2/osPfsIsPlug.o (COMMON)
            build/src/libultra_code_O2/guS2DInitBg.o (COMMON)
            build/src/libultra_code_O2/__osPfsSelectBank.o (COMMON)
            build/src/libultra_code_O2/osContSetCh.o (COMMON)
            build/src/libultra_code_O2/code_80104D60.o (COMMON)
            build/src/libultra_code_O2/pfsinitpak.o (COMMON)
            build/src/libultra_code_O2/pfschecker.o (COMMON)
            build/src/libultra_code_O2/osAiGetLength.o (COMMON)
            build/asm/guTranslate.o (COMMON)
            build/src/libultra_code_O2/__osContRamWrite.o (COMMON)
            build/src/libultra_code_O2/__osContRamRead.o (COMMON)
            build/src/libultra_code_O2/__osContAddressCrc.o (COMMON)
            build/src/libultra_code_O1/osSetTimer.o (COMMON)
            build/src/libultra_code_O2/__osSpGetStatus.o (COMMON)
            build/src/libultra_code_O2/__osSpSetStatus.o (COMMON)
            build/asm/osWritebackDCacheAll.o (COMMON)
            build/src/libultra_code_O2/__osGetCurrFaultedThread.o (COMMON)
            build/asm/guMtxF2L.o (COMMON)
            build/src/libultra_code_O1/llcvt.o (COMMON)
            build/src/libultra_code_O2/osViGetCurrentFramebuffer.o (COMMON)
            build/src/libultra_code_O2/__osSpSetPc.o (COMMON)
            build/src/libultra_code_O2_g3/sqrt.o (COMMON)
            build/src/libultra_code_O2_g3/absf.o (COMMON)
            build/src/code/code_801067F0.o (COMMON)
            build/src/code/code_80106860.o (COMMON)
            build/src/code/code_801068B0.o (COMMON)
            build/data/z_message_PAL.rodata.o (COMMON)
            build/src/code/z_message_PAL.o (COMMON)
            build/data/z_message_PAL.bss.o (COMMON)
            build/src/code/code_80110450.o (COMMON)
            build/src/code/z_construct.o (COMMON)
            build/data/rsp.text.o (COMMON)
            build/data/rsp.rodata.o (COMMON)
        . = ALIGN(0x10);
        _codeSegmentBssEnd = .;
        _codeSegmentEnd = .;
    }
    _codeSegmentBssSize = ABSOLUTE( _codeSegmentBssEnd - _codeSegmentBssStart );

    _buffersSegmentRomStart = _RomSize;
    ..buffers : AT(_RomSize)
    {
        _buffersSegmentStart = .;
        . = ALIGN(0x10);
        _buffersSegmentTextStart = .;
        . = ALIGN(0x40);
            build/src/buffers/zbuffer.o (.text)
            build/src/buffers/gfxbuffers.o (.text)
            build/src/buffers/heaps.o (.text)
        _buffersSegmentTextEnd = .;
    _buffersSegmentTextSize = ABSOLUTE( _buffersSegmentTextEnd - _buffersSegmentTextStart );
        _buffersSegmentDataStart = .;
            build/src/buffers/zbuffer.o (.data)
            build/src/buffers/gfxbuffers.o (.data)
            build/src/buffers/heaps.o (.data)
        _buffersSegmentDataEnd = .;
    _buffersSegmentDataSize = ABSOLUTE( _buffersSegmentDataEnd - _buffersSegmentDataStart );
        _buffersSegmentRoDataStart = .;
            build/src/buffers/zbuffer.o (.rodata)
            build/src/buffers/gfxbuffers.o (.rodata)
            build/src/buffers/heaps.o (.rodata)
        _buffersSegmentRoDataEnd = .;
    _buffersSegmentRoDataSize = ABSOLUTE( _buffersSegmentRoDataEnd - _buffersSegmentRoDataStart );
        _buffersSegmentSDataStart = .;
            build/src/buffers/zbuffer.o (.sdata)
            build/src/buffers/gfxbuffers.o (.sdata)
            build/src/buffers/heaps.o (.sdata)
        . = ALIGN(0x10);
        _buffersSegmentSDataEnd = .;
        _buffersSegmentOvlStart = .;
            build/src/buffers/zbuffer.o (.ovl)
            build/src/buffers/gfxbuffers.o (.ovl)
            build/src/buffers/heaps.o (.ovl)
        . = ALIGN(0x10);
        _buffersSegmentOvlEnd = .;
    }
    _RomSize += ( _buffersSegmentOvlEnd - _buffersSegmentTextStart );
    _buffersSegmentRomEnd = _RomSize;

    ..buffers.bss ADDR(..buffers) + SIZEOF(..buffers) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _buffersSegmentBssStart = .;
        . = ALIGN(0x40);
            build/src/buffers/zbuffer.o (.sbss)
            build/src/buffers/gfxbuffers.o (.sbss)
            build/src/buffers/heaps.o (.sbss)
            build/src/buffers/zbuffer.o (.scommon)
            build/src/buffers/gfxbuffers.o (.scommon)
            build/src/buffers/heaps.o (.scommon)
            build/src/buffers/zbuffer.o (.bss)
            build/src/buffers/gfxbuffers.o (.bss)
            build/src/buffers/heaps.o (.bss)
            build/src/buffers/zbuffer.o (COMMON)
            build/src/buffers/gfxbuffers.o (COMMON)
            build/src/buffers/heaps.o (COMMON)
        . = ALIGN(0x10);
        _buffersSegmentBssEnd = .;
        _buffersSegmentEnd = .;
    }
    _buffersSegmentBssSize = ABSOLUTE( _buffersSegmentBssEnd - _buffersSegmentBssStart );

    _ovl_titleSegmentRomStart = _RomSize;
    ..ovl_title 0x80800000 : AT(_RomSize)
    {
        _ovl_titleSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_titleSegmentTextStart = .;
            build/src/overlays/gamestates/ovl_title/z_title.o (.text)
            build/src/overlays/gamestates/ovl_title/ovl_title_reloc.o (.text)
        _ovl_titleSegmentTextEnd = .;
    _ovl_titleSegmentTextSize = ABSOLUTE( _ovl_titleSegmentTextEnd - _ovl_titleSegmentTextStart );
        _ovl_titleSegmentDataStart = .;
            build/src/overlays/gamestates/ovl_title/z_title.o (.data)
            build/src/overlays/gamestates/ovl_title/ovl_title_reloc.o (.data)
        _ovl_titleSegmentDataEnd = .;
    _ovl_titleSegmentDataSize = ABSOLUTE( _ovl_titleSegmentDataEnd - _ovl_titleSegmentDataStart );
        _ovl_titleSegmentRoDataStart = .;
            build/src/overlays/gamestates/ovl_title/z_title.o (.rodata)
            build/src/overlays/gamestates/ovl_title/ovl_title_reloc.o (.rodata)
        _ovl_titleSegmentRoDataEnd = .;
    _ovl_titleSegmentRoDataSize = ABSOLUTE( _ovl_titleSegmentRoDataEnd - _ovl_titleSegmentRoDataStart );
        _ovl_titleSegmentSDataStart = .;
            build/src/overlays/gamestates/ovl_title/z_title.o (.sdata)
            build/src/overlays/gamestates/ovl_title/ovl_title_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_titleSegmentSDataEnd = .;
        _ovl_titleSegmentOvlStart = .;
            build/src/overlays/gamestates/ovl_title/z_title.o (.ovl)
            build/src/overlays/gamestates/ovl_title/ovl_title_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_titleSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_titleSegmentOvlEnd - _ovl_titleSegmentTextStart );
    _ovl_titleSegmentRomEnd = _RomSize;

    ..ovl_title.bss ADDR(..ovl_title) + SIZEOF(..ovl_title) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_titleSegmentBssStart = .;
            build/src/overlays/gamestates/ovl_title/z_title.o (.sbss)
            build/src/overlays/gamestates/ovl_title/ovl_title_reloc.o (.sbss)
            build/src/overlays/gamestates/ovl_title/z_title.o (.scommon)
            build/src/overlays/gamestates/ovl_title/ovl_title_reloc.o (.scommon)
            build/src/overlays/gamestates/ovl_title/z_title.o (.bss)
            build/src/overlays/gamestates/ovl_title/ovl_title_reloc.o (.bss)
            build/src/overlays/gamestates/ovl_title/z_title.o (COMMON)
            build/src/overlays/gamestates/ovl_title/ovl_title_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_titleSegmentBssEnd = .;
        _ovl_titleSegmentEnd = .;
    }
    _ovl_titleSegmentBssSize = ABSOLUTE( _ovl_titleSegmentBssEnd - _ovl_titleSegmentBssStart );

    _ovl_selectSegmentRomStart = _RomSize;
    ..ovl_select : AT(_RomSize)
    {
        _ovl_selectSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_selectSegmentTextStart = .;
            build/src/overlays/gamestates/ovl_select/z_select.o (.text)
            build/src/overlays/gamestates/ovl_select/ovl_select_reloc.o (.text)
        _ovl_selectSegmentTextEnd = .;
    _ovl_selectSegmentTextSize = ABSOLUTE( _ovl_selectSegmentTextEnd - _ovl_selectSegmentTextStart );
        _ovl_selectSegmentDataStart = .;
            build/src/overlays/gamestates/ovl_select/z_select.o (.data)
            build/src/overlays/gamestates/ovl_select/ovl_select_reloc.o (.data)
        _ovl_selectSegmentDataEnd = .;
    _ovl_selectSegmentDataSize = ABSOLUTE( _ovl_selectSegmentDataEnd - _ovl_selectSegmentDataStart );
        _ovl_selectSegmentRoDataStart = .;
            build/src/overlays/gamestates/ovl_select/z_select.o (.rodata)
            build/src/overlays/gamestates/ovl_select/ovl_select_reloc.o (.rodata)
        _ovl_selectSegmentRoDataEnd = .;
    _ovl_selectSegmentRoDataSize = ABSOLUTE( _ovl_selectSegmentRoDataEnd - _ovl_selectSegmentRoDataStart );
        _ovl_selectSegmentSDataStart = .;
            build/src/overlays/gamestates/ovl_select/z_select.o (.sdata)
            build/src/overlays/gamestates/ovl_select/ovl_select_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_selectSegmentSDataEnd = .;
        _ovl_selectSegmentOvlStart = .;
            build/src/overlays/gamestates/ovl_select/z_select.o (.ovl)
            build/src/overlays/gamestates/ovl_select/ovl_select_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_selectSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_selectSegmentOvlEnd - _ovl_selectSegmentTextStart );
    _ovl_selectSegmentRomEnd = _RomSize;

    ..ovl_select.bss ADDR(..ovl_select) + SIZEOF(..ovl_select) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_selectSegmentBssStart = .;
            build/src/overlays/gamestates/ovl_select/z_select.o (.sbss)
            build/src/overlays/gamestates/ovl_select/ovl_select_reloc.o (.sbss)
            build/src/overlays/gamestates/ovl_select/z_select.o (.scommon)
            build/src/overlays/gamestates/ovl_select/ovl_select_reloc.o (.scommon)
            build/src/overlays/gamestates/ovl_select/z_select.o (.bss)
            build/src/overlays/gamestates/ovl_select/ovl_select_reloc.o (.bss)
            build/src/overlays/gamestates/ovl_select/z_select.o (COMMON)
            build/src/overlays/gamestates/ovl_select/ovl_select_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_selectSegmentBssEnd = .;
        _ovl_selectSegmentEnd = .;
    }
    _ovl_selectSegmentBssSize = ABSOLUTE( _ovl_selectSegmentBssEnd - _ovl_selectSegmentBssStart );

    _ovl_openingSegmentRomStart = _RomSize;
    ..ovl_opening : AT(_RomSize)
    {
        _ovl_openingSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_openingSegmentTextStart = .;
            build/src/overlays/gamestates/ovl_opening/z_opening.o (.text)
            build/src/overlays/gamestates/ovl_opening/ovl_opening_reloc.o (.text)
        _ovl_openingSegmentTextEnd = .;
    _ovl_openingSegmentTextSize = ABSOLUTE( _ovl_openingSegmentTextEnd - _ovl_openingSegmentTextStart );
        _ovl_openingSegmentDataStart = .;
            build/src/overlays/gamestates/ovl_opening/z_opening.o (.data)
            build/src/overlays/gamestates/ovl_opening/ovl_opening_reloc.o (.data)
        _ovl_openingSegmentDataEnd = .;
    _ovl_openingSegmentDataSize = ABSOLUTE( _ovl_openingSegmentDataEnd - _ovl_openingSegmentDataStart );
        _ovl_openingSegmentRoDataStart = .;
            build/src/overlays/gamestates/ovl_opening/z_opening.o (.rodata)
            build/src/overlays/gamestates/ovl_opening/ovl_opening_reloc.o (.rodata)
        _ovl_openingSegmentRoDataEnd = .;
    _ovl_openingSegmentRoDataSize = ABSOLUTE( _ovl_openingSegmentRoDataEnd - _ovl_openingSegmentRoDataStart );
        _ovl_openingSegmentSDataStart = .;
            build/src/overlays/gamestates/ovl_opening/z_opening.o (.sdata)
            build/src/overlays/gamestates/ovl_opening/ovl_opening_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_openingSegmentSDataEnd = .;
        _ovl_openingSegmentOvlStart = .;
            build/src/overlays/gamestates/ovl_opening/z_opening.o (.ovl)
            build/src/overlays/gamestates/ovl_opening/ovl_opening_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_openingSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_openingSegmentOvlEnd - _ovl_openingSegmentTextStart );
    _ovl_openingSegmentRomEnd = _RomSize;

    ..ovl_opening.bss ADDR(..ovl_opening) + SIZEOF(..ovl_opening) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_openingSegmentBssStart = .;
            build/src/overlays/gamestates/ovl_opening/z_opening.o (.sbss)
            build/src/overlays/gamestates/ovl_opening/ovl_opening_reloc.o (.sbss)
            build/src/overlays/gamestates/ovl_opening/z_opening.o (.scommon)
            build/src/overlays/gamestates/ovl_opening/ovl_opening_reloc.o (.scommon)
            build/src/overlays/gamestates/ovl_opening/z_opening.o (.bss)
            build/src/overlays/gamestates/ovl_opening/ovl_opening_reloc.o (.bss)
            build/src/overlays/gamestates/ovl_opening/z_opening.o (COMMON)
            build/src/overlays/gamestates/ovl_opening/ovl_opening_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_openingSegmentBssEnd = .;
        _ovl_openingSegmentEnd = .;
    }
    _ovl_openingSegmentBssSize = ABSOLUTE( _ovl_openingSegmentBssEnd - _ovl_openingSegmentBssStart );

    _ovl_file_chooseSegmentRomStart = _RomSize;
    ..ovl_file_choose : AT(_RomSize)
    {
        _ovl_file_chooseSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_file_chooseSegmentTextStart = .;
            build/src/overlays/gamestates/ovl_file_choose/z_file_nameset_PAL.o (.text)
            build/data/overlays/gamestates/z_file_nameset_PAL.data.o (.text)
            build/data/overlays/gamestates/z_file_nameset_PAL.rodata.o (.text)
            build/data/overlays/gamestates/z_file_nameset_PAL.bss.o (.text)
            build/src/overlays/gamestates/ovl_file_choose/z_file_choose.o (.text)
            build/data/overlays/gamestates/z_file_choose.rodata.o (.text)
            build/data/overlays/gamestates/z_file_choose.reloc.o (.text)
        _ovl_file_chooseSegmentTextEnd = .;
    _ovl_file_chooseSegmentTextSize = ABSOLUTE( _ovl_file_chooseSegmentTextEnd - _ovl_file_chooseSegmentTextStart );
        _ovl_file_chooseSegmentDataStart = .;
            build/src/overlays/gamestates/ovl_file_choose/z_file_nameset_PAL.o (.data)
            build/data/overlays/gamestates/z_file_nameset_PAL.data.o (.data)
            build/data/overlays/gamestates/z_file_nameset_PAL.rodata.o (.data)
            build/data/overlays/gamestates/z_file_nameset_PAL.bss.o (.data)
            build/src/overlays/gamestates/ovl_file_choose/z_file_choose.o (.data)
            build/data/overlays/gamestates/z_file_choose.rodata.o (.data)
            build/data/overlays/gamestates/z_file_choose.reloc.o (.data)
        _ovl_file_chooseSegmentDataEnd = .;
    _ovl_file_chooseSegmentDataSize = ABSOLUTE( _ovl_file_chooseSegmentDataEnd - _ovl_file_chooseSegmentDataStart );
        _ovl_file_chooseSegmentRoDataStart = .;
            build/src/overlays/gamestates/ovl_file_choose/z_file_nameset_PAL.o (.rodata)
            build/data/overlays/gamestates/z_file_nameset_PAL.data.o (.rodata)
            build/data/overlays/gamestates/z_file_nameset_PAL.rodata.o (.rodata)
            build/data/overlays/gamestates/z_file_nameset_PAL.bss.o (.rodata)
            build/src/overlays/gamestates/ovl_file_choose/z_file_choose.o (.rodata)
            build/data/overlays/gamestates/z_file_choose.rodata.o (.rodata)
            build/data/overlays/gamestates/z_file_choose.reloc.o (.rodata)
        _ovl_file_chooseSegmentRoDataEnd = .;
    _ovl_file_chooseSegmentRoDataSize = ABSOLUTE( _ovl_file_chooseSegmentRoDataEnd - _ovl_file_chooseSegmentRoDataStart );
        _ovl_file_chooseSegmentSDataStart = .;
            build/src/overlays/gamestates/ovl_file_choose/z_file_nameset_PAL.o (.sdata)
            build/data/overlays/gamestates/z_file_nameset_PAL.data.o (.sdata)
            build/data/overlays/gamestates/z_file_nameset_PAL.rodata.o (.sdata)
            build/data/overlays/gamestates/z_file_nameset_PAL.bss.o (.sdata)
            build/src/overlays/gamestates/ovl_file_choose/z_file_choose.o (.sdata)
            build/data/overlays/gamestates/z_file_choose.rodata.o (.sdata)
            build/data/overlays/gamestates/z_file_choose.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_file_chooseSegmentSDataEnd = .;
        _ovl_file_chooseSegmentOvlStart = .;
            build/src/overlays/gamestates/ovl_file_choose/z_file_nameset_PAL.o (.ovl)
            build/data/overlays/gamestates/z_file_nameset_PAL.data.o (.ovl)
            build/data/overlays/gamestates/z_file_nameset_PAL.rodata.o (.ovl)
            build/data/overlays/gamestates/z_file_nameset_PAL.bss.o (.ovl)
            build/src/overlays/gamestates/ovl_file_choose/z_file_choose.o (.ovl)
            build/data/overlays/gamestates/z_file_choose.rodata.o (.ovl)
            build/data/overlays/gamestates/z_file_choose.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_file_chooseSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_file_chooseSegmentOvlEnd - _ovl_file_chooseSegmentTextStart );
    _ovl_file_chooseSegmentRomEnd = _RomSize;

    ..ovl_file_choose.bss ADDR(..ovl_file_choose) + SIZEOF(..ovl_file_choose) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_file_chooseSegmentBssStart = .;
            build/src/overlays/gamestates/ovl_file_choose/z_file_nameset_PAL.o (.sbss)
            build/data/overlays/gamestates/z_file_nameset_PAL.data.o (.sbss)
            build/data/overlays/gamestates/z_file_nameset_PAL.rodata.o (.sbss)
            build/data/overlays/gamestates/z_file_nameset_PAL.bss.o (.sbss)
            build/src/overlays/gamestates/ovl_file_choose/z_file_choose.o (.sbss)
            build/data/overlays/gamestates/z_file_choose.rodata.o (.sbss)
            build/data/overlays/gamestates/z_file_choose.reloc.o (.sbss)
            build/src/overlays/gamestates/ovl_file_choose/z_file_nameset_PAL.o (.scommon)
            build/data/overlays/gamestates/z_file_nameset_PAL.data.o (.scommon)
            build/data/overlays/gamestates/z_file_nameset_PAL.rodata.o (.scommon)
            build/data/overlays/gamestates/z_file_nameset_PAL.bss.o (.scommon)
            build/src/overlays/gamestates/ovl_file_choose/z_file_choose.o (.scommon)
            build/data/overlays/gamestates/z_file_choose.rodata.o (.scommon)
            build/data/overlays/gamestates/z_file_choose.reloc.o (.scommon)
            build/src/overlays/gamestates/ovl_file_choose/z_file_nameset_PAL.o (.bss)
            build/data/overlays/gamestates/z_file_nameset_PAL.data.o (.bss)
            build/data/overlays/gamestates/z_file_nameset_PAL.rodata.o (.bss)
            build/data/overlays/gamestates/z_file_nameset_PAL.bss.o (.bss)
            build/src/overlays/gamestates/ovl_file_choose/z_file_choose.o (.bss)
            build/data/overlays/gamestates/z_file_choose.rodata.o (.bss)
            build/data/overlays/gamestates/z_file_choose.reloc.o (.bss)
            build/src/overlays/gamestates/ovl_file_choose/z_file_nameset_PAL.o (COMMON)
            build/data/overlays/gamestates/z_file_nameset_PAL.data.o (COMMON)
            build/data/overlays/gamestates/z_file_nameset_PAL.rodata.o (COMMON)
            build/data/overlays/gamestates/z_file_nameset_PAL.bss.o (COMMON)
            build/src/overlays/gamestates/ovl_file_choose/z_file_choose.o (COMMON)
            build/data/overlays/gamestates/z_file_choose.rodata.o (COMMON)
            build/data/overlays/gamestates/z_file_choose.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_file_chooseSegmentBssEnd = .;
        _ovl_file_chooseSegmentEnd = .;
    }
    _ovl_file_chooseSegmentBssSize = ABSOLUTE( _ovl_file_chooseSegmentBssEnd - _ovl_file_chooseSegmentBssStart );

    _ovl_kaleido_scopeSegmentRomStart = _RomSize;
    ..ovl_kaleido_scope : AT(_RomSize)
    {
        _ovl_kaleido_scopeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_kaleido_scopeSegmentTextStart = .;
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_collect.o (.text)
            build/data/overlays/actors/z_kaleido_collect.data.o (.text)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_debug.o (.text)
            build/data/overlays/actors/z_kaleido_debug.data.o (.text)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_equipment.o (.text)
            build/data/overlays/actors/z_kaleido_equipment.data.o (.text)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_item.o (.text)
            build/data/overlays/actors/z_kaleido_item.data.o (.text)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_map_PAL.o (.text)
            build/data/overlays/actors/z_kaleido_map_PAL.data.o (.text)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_scope_PAL.o (.text)
            build/data/overlays/actors/z_kaleido_scope_PAL.data.o (.text)
            build/data/overlays/actors/z_kaleido_scope_PAL.bss.o (.text)
            build/src/overlays/actors/ovl_kaleido_scope/z_lmap_mark.o (.text)
            build/data/overlays/actors/z_lmap_mark.data.o (.text)
            build/data/overlays/actors/z_lmap_mark.rodata.o (.text)
            build/data/overlays/actors/z_kaleido_scope.reloc.o (.text)
        _ovl_kaleido_scopeSegmentTextEnd = .;
    _ovl_kaleido_scopeSegmentTextSize = ABSOLUTE( _ovl_kaleido_scopeSegmentTextEnd - _ovl_kaleido_scopeSegmentTextStart );
        _ovl_kaleido_scopeSegmentDataStart = .;
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_collect.o (.data)
            build/data/overlays/actors/z_kaleido_collect.data.o (.data)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_debug.o (.data)
            build/data/overlays/actors/z_kaleido_debug.data.o (.data)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_equipment.o (.data)
            build/data/overlays/actors/z_kaleido_equipment.data.o (.data)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_item.o (.data)
            build/data/overlays/actors/z_kaleido_item.data.o (.data)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_map_PAL.o (.data)
            build/data/overlays/actors/z_kaleido_map_PAL.data.o (.data)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_scope_PAL.o (.data)
            build/data/overlays/actors/z_kaleido_scope_PAL.data.o (.data)
            build/data/overlays/actors/z_kaleido_scope_PAL.bss.o (.data)
            build/src/overlays/actors/ovl_kaleido_scope/z_lmap_mark.o (.data)
            build/data/overlays/actors/z_lmap_mark.data.o (.data)
            build/data/overlays/actors/z_lmap_mark.rodata.o (.data)
            build/data/overlays/actors/z_kaleido_scope.reloc.o (.data)
        _ovl_kaleido_scopeSegmentDataEnd = .;
    _ovl_kaleido_scopeSegmentDataSize = ABSOLUTE( _ovl_kaleido_scopeSegmentDataEnd - _ovl_kaleido_scopeSegmentDataStart );
        _ovl_kaleido_scopeSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_collect.o (.rodata)
            build/data/overlays/actors/z_kaleido_collect.data.o (.rodata)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_debug.o (.rodata)
            build/data/overlays/actors/z_kaleido_debug.data.o (.rodata)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_equipment.o (.rodata)
            build/data/overlays/actors/z_kaleido_equipment.data.o (.rodata)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_item.o (.rodata)
            build/data/overlays/actors/z_kaleido_item.data.o (.rodata)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_map_PAL.o (.rodata)
            build/data/overlays/actors/z_kaleido_map_PAL.data.o (.rodata)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_scope_PAL.o (.rodata)
            build/data/overlays/actors/z_kaleido_scope_PAL.data.o (.rodata)
            build/data/overlays/actors/z_kaleido_scope_PAL.bss.o (.rodata)
            build/src/overlays/actors/ovl_kaleido_scope/z_lmap_mark.o (.rodata)
            build/data/overlays/actors/z_lmap_mark.data.o (.rodata)
            build/data/overlays/actors/z_lmap_mark.rodata.o (.rodata)
            build/data/overlays/actors/z_kaleido_scope.reloc.o (.rodata)
        _ovl_kaleido_scopeSegmentRoDataEnd = .;
    _ovl_kaleido_scopeSegmentRoDataSize = ABSOLUTE( _ovl_kaleido_scopeSegmentRoDataEnd - _ovl_kaleido_scopeSegmentRoDataStart );
        _ovl_kaleido_scopeSegmentSDataStart = .;
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_collect.o (.sdata)
            build/data/overlays/actors/z_kaleido_collect.data.o (.sdata)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_debug.o (.sdata)
            build/data/overlays/actors/z_kaleido_debug.data.o (.sdata)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_equipment.o (.sdata)
            build/data/overlays/actors/z_kaleido_equipment.data.o (.sdata)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_item.o (.sdata)
            build/data/overlays/actors/z_kaleido_item.data.o (.sdata)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_map_PAL.o (.sdata)
            build/data/overlays/actors/z_kaleido_map_PAL.data.o (.sdata)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_scope_PAL.o (.sdata)
            build/data/overlays/actors/z_kaleido_scope_PAL.data.o (.sdata)
            build/data/overlays/actors/z_kaleido_scope_PAL.bss.o (.sdata)
            build/src/overlays/actors/ovl_kaleido_scope/z_lmap_mark.o (.sdata)
            build/data/overlays/actors/z_lmap_mark.data.o (.sdata)
            build/data/overlays/actors/z_lmap_mark.rodata.o (.sdata)
            build/data/overlays/actors/z_kaleido_scope.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_kaleido_scopeSegmentSDataEnd = .;
        _ovl_kaleido_scopeSegmentOvlStart = .;
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_collect.o (.ovl)
            build/data/overlays/actors/z_kaleido_collect.data.o (.ovl)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_debug.o (.ovl)
            build/data/overlays/actors/z_kaleido_debug.data.o (.ovl)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_equipment.o (.ovl)
            build/data/overlays/actors/z_kaleido_equipment.data.o (.ovl)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_item.o (.ovl)
            build/data/overlays/actors/z_kaleido_item.data.o (.ovl)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_map_PAL.o (.ovl)
            build/data/overlays/actors/z_kaleido_map_PAL.data.o (.ovl)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_scope_PAL.o (.ovl)
            build/data/overlays/actors/z_kaleido_scope_PAL.data.o (.ovl)
            build/data/overlays/actors/z_kaleido_scope_PAL.bss.o (.ovl)
            build/src/overlays/actors/ovl_kaleido_scope/z_lmap_mark.o (.ovl)
            build/data/overlays/actors/z_lmap_mark.data.o (.ovl)
            build/data/overlays/actors/z_lmap_mark.rodata.o (.ovl)
            build/data/overlays/actors/z_kaleido_scope.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_kaleido_scopeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_kaleido_scopeSegmentOvlEnd - _ovl_kaleido_scopeSegmentTextStart );
    _ovl_kaleido_scopeSegmentRomEnd = _RomSize;

    ..ovl_kaleido_scope.bss ADDR(..ovl_kaleido_scope) + SIZEOF(..ovl_kaleido_scope) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_kaleido_scopeSegmentBssStart = .;
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_collect.o (.sbss)
            build/data/overlays/actors/z_kaleido_collect.data.o (.sbss)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_debug.o (.sbss)
            build/data/overlays/actors/z_kaleido_debug.data.o (.sbss)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_equipment.o (.sbss)
            build/data/overlays/actors/z_kaleido_equipment.data.o (.sbss)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_item.o (.sbss)
            build/data/overlays/actors/z_kaleido_item.data.o (.sbss)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_map_PAL.o (.sbss)
            build/data/overlays/actors/z_kaleido_map_PAL.data.o (.sbss)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_scope_PAL.o (.sbss)
            build/data/overlays/actors/z_kaleido_scope_PAL.data.o (.sbss)
            build/data/overlays/actors/z_kaleido_scope_PAL.bss.o (.sbss)
            build/src/overlays/actors/ovl_kaleido_scope/z_lmap_mark.o (.sbss)
            build/data/overlays/actors/z_lmap_mark.data.o (.sbss)
            build/data/overlays/actors/z_lmap_mark.rodata.o (.sbss)
            build/data/overlays/actors/z_kaleido_scope.reloc.o (.sbss)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_collect.o (.scommon)
            build/data/overlays/actors/z_kaleido_collect.data.o (.scommon)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_debug.o (.scommon)
            build/data/overlays/actors/z_kaleido_debug.data.o (.scommon)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_equipment.o (.scommon)
            build/data/overlays/actors/z_kaleido_equipment.data.o (.scommon)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_item.o (.scommon)
            build/data/overlays/actors/z_kaleido_item.data.o (.scommon)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_map_PAL.o (.scommon)
            build/data/overlays/actors/z_kaleido_map_PAL.data.o (.scommon)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_scope_PAL.o (.scommon)
            build/data/overlays/actors/z_kaleido_scope_PAL.data.o (.scommon)
            build/data/overlays/actors/z_kaleido_scope_PAL.bss.o (.scommon)
            build/src/overlays/actors/ovl_kaleido_scope/z_lmap_mark.o (.scommon)
            build/data/overlays/actors/z_lmap_mark.data.o (.scommon)
            build/data/overlays/actors/z_lmap_mark.rodata.o (.scommon)
            build/data/overlays/actors/z_kaleido_scope.reloc.o (.scommon)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_collect.o (.bss)
            build/data/overlays/actors/z_kaleido_collect.data.o (.bss)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_debug.o (.bss)
            build/data/overlays/actors/z_kaleido_debug.data.o (.bss)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_equipment.o (.bss)
            build/data/overlays/actors/z_kaleido_equipment.data.o (.bss)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_item.o (.bss)
            build/data/overlays/actors/z_kaleido_item.data.o (.bss)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_map_PAL.o (.bss)
            build/data/overlays/actors/z_kaleido_map_PAL.data.o (.bss)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_scope_PAL.o (.bss)
            build/data/overlays/actors/z_kaleido_scope_PAL.data.o (.bss)
            build/data/overlays/actors/z_kaleido_scope_PAL.bss.o (.bss)
            build/src/overlays/actors/ovl_kaleido_scope/z_lmap_mark.o (.bss)
            build/data/overlays/actors/z_lmap_mark.data.o (.bss)
            build/data/overlays/actors/z_lmap_mark.rodata.o (.bss)
            build/data/overlays/actors/z_kaleido_scope.reloc.o (.bss)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_collect.o (COMMON)
            build/data/overlays/actors/z_kaleido_collect.data.o (COMMON)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_debug.o (COMMON)
            build/data/overlays/actors/z_kaleido_debug.data.o (COMMON)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_equipment.o (COMMON)
            build/data/overlays/actors/z_kaleido_equipment.data.o (COMMON)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_item.o (COMMON)
            build/data/overlays/actors/z_kaleido_item.data.o (COMMON)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_map_PAL.o (COMMON)
            build/data/overlays/actors/z_kaleido_map_PAL.data.o (COMMON)
            build/src/overlays/actors/ovl_kaleido_scope/z_kaleido_scope_PAL.o (COMMON)
            build/data/overlays/actors/z_kaleido_scope_PAL.data.o (COMMON)
            build/data/overlays/actors/z_kaleido_scope_PAL.bss.o (COMMON)
            build/src/overlays/actors/ovl_kaleido_scope/z_lmap_mark.o (COMMON)
            build/data/overlays/actors/z_lmap_mark.data.o (COMMON)
            build/data/overlays/actors/z_lmap_mark.rodata.o (COMMON)
            build/data/overlays/actors/z_kaleido_scope.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_kaleido_scopeSegmentBssEnd = .;
        _ovl_kaleido_scopeSegmentEnd = .;
    }
    _ovl_kaleido_scopeSegmentBssSize = ABSOLUTE( _ovl_kaleido_scopeSegmentBssEnd - _ovl_kaleido_scopeSegmentBssStart );

    _ovl_player_actorSegmentRomStart = _RomSize;
    ..ovl_player_actor : AT(_RomSize)
    {
        _ovl_player_actorSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_player_actorSegmentTextStart = .;
            build/src/overlays/actors/ovl_player_actor/z_player.o (.text)
            build/data/overlays/actors/z_player.reloc.o (.text)
        _ovl_player_actorSegmentTextEnd = .;
    _ovl_player_actorSegmentTextSize = ABSOLUTE( _ovl_player_actorSegmentTextEnd - _ovl_player_actorSegmentTextStart );
        _ovl_player_actorSegmentDataStart = .;
            build/src/overlays/actors/ovl_player_actor/z_player.o (.data)
            build/data/overlays/actors/z_player.reloc.o (.data)
        _ovl_player_actorSegmentDataEnd = .;
    _ovl_player_actorSegmentDataSize = ABSOLUTE( _ovl_player_actorSegmentDataEnd - _ovl_player_actorSegmentDataStart );
        _ovl_player_actorSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_player_actor/z_player.o (.rodata)
            build/data/overlays/actors/z_player.reloc.o (.rodata)
        _ovl_player_actorSegmentRoDataEnd = .;
    _ovl_player_actorSegmentRoDataSize = ABSOLUTE( _ovl_player_actorSegmentRoDataEnd - _ovl_player_actorSegmentRoDataStart );
        _ovl_player_actorSegmentSDataStart = .;
            build/src/overlays/actors/ovl_player_actor/z_player.o (.sdata)
            build/data/overlays/actors/z_player.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_player_actorSegmentSDataEnd = .;
        _ovl_player_actorSegmentOvlStart = .;
            build/src/overlays/actors/ovl_player_actor/z_player.o (.ovl)
            build/data/overlays/actors/z_player.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_player_actorSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_player_actorSegmentOvlEnd - _ovl_player_actorSegmentTextStart );
    _ovl_player_actorSegmentRomEnd = _RomSize;

    ..ovl_player_actor.bss ADDR(..ovl_player_actor) + SIZEOF(..ovl_player_actor) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_player_actorSegmentBssStart = .;
            build/src/overlays/actors/ovl_player_actor/z_player.o (.sbss)
            build/data/overlays/actors/z_player.reloc.o (.sbss)
            build/src/overlays/actors/ovl_player_actor/z_player.o (.scommon)
            build/data/overlays/actors/z_player.reloc.o (.scommon)
            build/src/overlays/actors/ovl_player_actor/z_player.o (.bss)
            build/data/overlays/actors/z_player.reloc.o (.bss)
            build/src/overlays/actors/ovl_player_actor/z_player.o (COMMON)
            build/data/overlays/actors/z_player.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_player_actorSegmentBssEnd = .;
        _ovl_player_actorSegmentEnd = .;
    }
    _ovl_player_actorSegmentBssSize = ABSOLUTE( _ovl_player_actorSegmentBssEnd - _ovl_player_actorSegmentBssStart );

    _ovl_map_mark_dataSegmentRomStart = _RomSize;
    ..ovl_map_mark_data : AT(_RomSize)
    {
        _ovl_map_mark_dataSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_map_mark_dataSegmentTextStart = .;
            build/asm/overlays/data/ovl_map_mark_data/z_map_mark_data.o (.text)
        _ovl_map_mark_dataSegmentTextEnd = .;
    _ovl_map_mark_dataSegmentTextSize = ABSOLUTE( _ovl_map_mark_dataSegmentTextEnd - _ovl_map_mark_dataSegmentTextStart );
        _ovl_map_mark_dataSegmentDataStart = .;
            build/asm/overlays/data/ovl_map_mark_data/z_map_mark_data.o (.data)
        _ovl_map_mark_dataSegmentDataEnd = .;
    _ovl_map_mark_dataSegmentDataSize = ABSOLUTE( _ovl_map_mark_dataSegmentDataEnd - _ovl_map_mark_dataSegmentDataStart );
        _ovl_map_mark_dataSegmentRoDataStart = .;
            build/asm/overlays/data/ovl_map_mark_data/z_map_mark_data.o (.rodata)
        _ovl_map_mark_dataSegmentRoDataEnd = .;
    _ovl_map_mark_dataSegmentRoDataSize = ABSOLUTE( _ovl_map_mark_dataSegmentRoDataEnd - _ovl_map_mark_dataSegmentRoDataStart );
        _ovl_map_mark_dataSegmentSDataStart = .;
            build/asm/overlays/data/ovl_map_mark_data/z_map_mark_data.o (.sdata)
        . = ALIGN(0x10);
        _ovl_map_mark_dataSegmentSDataEnd = .;
        _ovl_map_mark_dataSegmentOvlStart = .;
            build/asm/overlays/data/ovl_map_mark_data/z_map_mark_data.o (.ovl)
        . = ALIGN(0x10);
        _ovl_map_mark_dataSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_map_mark_dataSegmentOvlEnd - _ovl_map_mark_dataSegmentTextStart );
    _ovl_map_mark_dataSegmentRomEnd = _RomSize;

    ..ovl_map_mark_data.bss ADDR(..ovl_map_mark_data) + SIZEOF(..ovl_map_mark_data) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_map_mark_dataSegmentBssStart = .;
            build/asm/overlays/data/ovl_map_mark_data/z_map_mark_data.o (.sbss)
            build/asm/overlays/data/ovl_map_mark_data/z_map_mark_data.o (.scommon)
            build/asm/overlays/data/ovl_map_mark_data/z_map_mark_data.o (.bss)
            build/asm/overlays/data/ovl_map_mark_data/z_map_mark_data.o (COMMON)
        . = ALIGN(0x10);
        _ovl_map_mark_dataSegmentBssEnd = .;
        _ovl_map_mark_dataSegmentEnd = .;
    }
    _ovl_map_mark_dataSegmentBssSize = ABSOLUTE( _ovl_map_mark_dataSegmentBssEnd - _ovl_map_mark_dataSegmentBssStart );

    _ovl_En_TestSegmentRomStart = _RomSize;
    ..ovl_En_Test : AT(_RomSize)
    {
        _ovl_En_TestSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_TestSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Test/z_en_test.o (.text)
            build/data/overlays/actors/z_en_test.data.o (.text)
            build/data/overlays/actors/z_en_test.reloc.o (.text)
        _ovl_En_TestSegmentTextEnd = .;
    _ovl_En_TestSegmentTextSize = ABSOLUTE( _ovl_En_TestSegmentTextEnd - _ovl_En_TestSegmentTextStart );
        _ovl_En_TestSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Test/z_en_test.o (.data)
            build/data/overlays/actors/z_en_test.data.o (.data)
            build/data/overlays/actors/z_en_test.reloc.o (.data)
        _ovl_En_TestSegmentDataEnd = .;
    _ovl_En_TestSegmentDataSize = ABSOLUTE( _ovl_En_TestSegmentDataEnd - _ovl_En_TestSegmentDataStart );
        _ovl_En_TestSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Test/z_en_test.o (.rodata)
            build/data/overlays/actors/z_en_test.data.o (.rodata)
            build/data/overlays/actors/z_en_test.reloc.o (.rodata)
        _ovl_En_TestSegmentRoDataEnd = .;
    _ovl_En_TestSegmentRoDataSize = ABSOLUTE( _ovl_En_TestSegmentRoDataEnd - _ovl_En_TestSegmentRoDataStart );
        _ovl_En_TestSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Test/z_en_test.o (.sdata)
            build/data/overlays/actors/z_en_test.data.o (.sdata)
            build/data/overlays/actors/z_en_test.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_TestSegmentSDataEnd = .;
        _ovl_En_TestSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Test/z_en_test.o (.ovl)
            build/data/overlays/actors/z_en_test.data.o (.ovl)
            build/data/overlays/actors/z_en_test.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_TestSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_TestSegmentOvlEnd - _ovl_En_TestSegmentTextStart );
    _ovl_En_TestSegmentRomEnd = _RomSize;

    ..ovl_En_Test.bss ADDR(..ovl_En_Test) + SIZEOF(..ovl_En_Test) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_TestSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Test/z_en_test.o (.sbss)
            build/data/overlays/actors/z_en_test.data.o (.sbss)
            build/data/overlays/actors/z_en_test.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Test/z_en_test.o (.scommon)
            build/data/overlays/actors/z_en_test.data.o (.scommon)
            build/data/overlays/actors/z_en_test.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Test/z_en_test.o (.bss)
            build/data/overlays/actors/z_en_test.data.o (.bss)
            build/data/overlays/actors/z_en_test.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Test/z_en_test.o (COMMON)
            build/data/overlays/actors/z_en_test.data.o (COMMON)
            build/data/overlays/actors/z_en_test.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_TestSegmentBssEnd = .;
        _ovl_En_TestSegmentEnd = .;
    }
    _ovl_En_TestSegmentBssSize = ABSOLUTE( _ovl_En_TestSegmentBssEnd - _ovl_En_TestSegmentBssStart );

    _ovl_Arms_HookSegmentRomStart = _RomSize;
    ..ovl_Arms_Hook : AT(_RomSize)
    {
        _ovl_Arms_HookSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Arms_HookSegmentTextStart = .;
            build/src/overlays/actors/ovl_Arms_Hook/z_arms_hook.o (.text)
            build/src/overlays/actors/ovl_Arms_Hook/ovl_Arms_Hook_reloc.o (.text)
        _ovl_Arms_HookSegmentTextEnd = .;
    _ovl_Arms_HookSegmentTextSize = ABSOLUTE( _ovl_Arms_HookSegmentTextEnd - _ovl_Arms_HookSegmentTextStart );
        _ovl_Arms_HookSegmentDataStart = .;
            build/src/overlays/actors/ovl_Arms_Hook/z_arms_hook.o (.data)
            build/src/overlays/actors/ovl_Arms_Hook/ovl_Arms_Hook_reloc.o (.data)
        _ovl_Arms_HookSegmentDataEnd = .;
    _ovl_Arms_HookSegmentDataSize = ABSOLUTE( _ovl_Arms_HookSegmentDataEnd - _ovl_Arms_HookSegmentDataStart );
        _ovl_Arms_HookSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Arms_Hook/z_arms_hook.o (.rodata)
            build/src/overlays/actors/ovl_Arms_Hook/ovl_Arms_Hook_reloc.o (.rodata)
        _ovl_Arms_HookSegmentRoDataEnd = .;
    _ovl_Arms_HookSegmentRoDataSize = ABSOLUTE( _ovl_Arms_HookSegmentRoDataEnd - _ovl_Arms_HookSegmentRoDataStart );
        _ovl_Arms_HookSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Arms_Hook/z_arms_hook.o (.sdata)
            build/src/overlays/actors/ovl_Arms_Hook/ovl_Arms_Hook_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Arms_HookSegmentSDataEnd = .;
        _ovl_Arms_HookSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Arms_Hook/z_arms_hook.o (.ovl)
            build/src/overlays/actors/ovl_Arms_Hook/ovl_Arms_Hook_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Arms_HookSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Arms_HookSegmentOvlEnd - _ovl_Arms_HookSegmentTextStart );
    _ovl_Arms_HookSegmentRomEnd = _RomSize;

    ..ovl_Arms_Hook.bss ADDR(..ovl_Arms_Hook) + SIZEOF(..ovl_Arms_Hook) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Arms_HookSegmentBssStart = .;
            build/src/overlays/actors/ovl_Arms_Hook/z_arms_hook.o (.sbss)
            build/src/overlays/actors/ovl_Arms_Hook/ovl_Arms_Hook_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Arms_Hook/z_arms_hook.o (.scommon)
            build/src/overlays/actors/ovl_Arms_Hook/ovl_Arms_Hook_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Arms_Hook/z_arms_hook.o (.bss)
            build/src/overlays/actors/ovl_Arms_Hook/ovl_Arms_Hook_reloc.o (.bss)
            build/src/overlays/actors/ovl_Arms_Hook/z_arms_hook.o (COMMON)
            build/src/overlays/actors/ovl_Arms_Hook/ovl_Arms_Hook_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Arms_HookSegmentBssEnd = .;
        _ovl_Arms_HookSegmentEnd = .;
    }
    _ovl_Arms_HookSegmentBssSize = ABSOLUTE( _ovl_Arms_HookSegmentBssEnd - _ovl_Arms_HookSegmentBssStart );

    _ovl_Arrow_FireSegmentRomStart = _RomSize;
    ..ovl_Arrow_Fire : AT(_RomSize)
    {
        _ovl_Arrow_FireSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Arrow_FireSegmentTextStart = .;
            build/src/overlays/actors/ovl_Arrow_Fire/z_arrow_fire.o (.text)
            build/src/overlays/actors/ovl_Arrow_Fire/ovl_Arrow_Fire_reloc.o (.text)
        _ovl_Arrow_FireSegmentTextEnd = .;
    _ovl_Arrow_FireSegmentTextSize = ABSOLUTE( _ovl_Arrow_FireSegmentTextEnd - _ovl_Arrow_FireSegmentTextStart );
        _ovl_Arrow_FireSegmentDataStart = .;
            build/src/overlays/actors/ovl_Arrow_Fire/z_arrow_fire.o (.data)
            build/src/overlays/actors/ovl_Arrow_Fire/ovl_Arrow_Fire_reloc.o (.data)
        _ovl_Arrow_FireSegmentDataEnd = .;
    _ovl_Arrow_FireSegmentDataSize = ABSOLUTE( _ovl_Arrow_FireSegmentDataEnd - _ovl_Arrow_FireSegmentDataStart );
        _ovl_Arrow_FireSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Arrow_Fire/z_arrow_fire.o (.rodata)
            build/src/overlays/actors/ovl_Arrow_Fire/ovl_Arrow_Fire_reloc.o (.rodata)
        _ovl_Arrow_FireSegmentRoDataEnd = .;
    _ovl_Arrow_FireSegmentRoDataSize = ABSOLUTE( _ovl_Arrow_FireSegmentRoDataEnd - _ovl_Arrow_FireSegmentRoDataStart );
        _ovl_Arrow_FireSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Arrow_Fire/z_arrow_fire.o (.sdata)
            build/src/overlays/actors/ovl_Arrow_Fire/ovl_Arrow_Fire_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Arrow_FireSegmentSDataEnd = .;
        _ovl_Arrow_FireSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Arrow_Fire/z_arrow_fire.o (.ovl)
            build/src/overlays/actors/ovl_Arrow_Fire/ovl_Arrow_Fire_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Arrow_FireSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Arrow_FireSegmentOvlEnd - _ovl_Arrow_FireSegmentTextStart );
    _ovl_Arrow_FireSegmentRomEnd = _RomSize;

    ..ovl_Arrow_Fire.bss ADDR(..ovl_Arrow_Fire) + SIZEOF(..ovl_Arrow_Fire) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Arrow_FireSegmentBssStart = .;
            build/src/overlays/actors/ovl_Arrow_Fire/z_arrow_fire.o (.sbss)
            build/src/overlays/actors/ovl_Arrow_Fire/ovl_Arrow_Fire_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Arrow_Fire/z_arrow_fire.o (.scommon)
            build/src/overlays/actors/ovl_Arrow_Fire/ovl_Arrow_Fire_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Arrow_Fire/z_arrow_fire.o (.bss)
            build/src/overlays/actors/ovl_Arrow_Fire/ovl_Arrow_Fire_reloc.o (.bss)
            build/src/overlays/actors/ovl_Arrow_Fire/z_arrow_fire.o (COMMON)
            build/src/overlays/actors/ovl_Arrow_Fire/ovl_Arrow_Fire_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Arrow_FireSegmentBssEnd = .;
        _ovl_Arrow_FireSegmentEnd = .;
    }
    _ovl_Arrow_FireSegmentBssSize = ABSOLUTE( _ovl_Arrow_FireSegmentBssEnd - _ovl_Arrow_FireSegmentBssStart );

    _ovl_Arrow_IceSegmentRomStart = _RomSize;
    ..ovl_Arrow_Ice : AT(_RomSize)
    {
        _ovl_Arrow_IceSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Arrow_IceSegmentTextStart = .;
            build/src/overlays/actors/ovl_Arrow_Ice/z_arrow_ice.o (.text)
            build/src/overlays/actors/ovl_Arrow_Ice/ovl_Arrow_Ice_reloc.o (.text)
        _ovl_Arrow_IceSegmentTextEnd = .;
    _ovl_Arrow_IceSegmentTextSize = ABSOLUTE( _ovl_Arrow_IceSegmentTextEnd - _ovl_Arrow_IceSegmentTextStart );
        _ovl_Arrow_IceSegmentDataStart = .;
            build/src/overlays/actors/ovl_Arrow_Ice/z_arrow_ice.o (.data)
            build/src/overlays/actors/ovl_Arrow_Ice/ovl_Arrow_Ice_reloc.o (.data)
        _ovl_Arrow_IceSegmentDataEnd = .;
    _ovl_Arrow_IceSegmentDataSize = ABSOLUTE( _ovl_Arrow_IceSegmentDataEnd - _ovl_Arrow_IceSegmentDataStart );
        _ovl_Arrow_IceSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Arrow_Ice/z_arrow_ice.o (.rodata)
            build/src/overlays/actors/ovl_Arrow_Ice/ovl_Arrow_Ice_reloc.o (.rodata)
        _ovl_Arrow_IceSegmentRoDataEnd = .;
    _ovl_Arrow_IceSegmentRoDataSize = ABSOLUTE( _ovl_Arrow_IceSegmentRoDataEnd - _ovl_Arrow_IceSegmentRoDataStart );
        _ovl_Arrow_IceSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Arrow_Ice/z_arrow_ice.o (.sdata)
            build/src/overlays/actors/ovl_Arrow_Ice/ovl_Arrow_Ice_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Arrow_IceSegmentSDataEnd = .;
        _ovl_Arrow_IceSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Arrow_Ice/z_arrow_ice.o (.ovl)
            build/src/overlays/actors/ovl_Arrow_Ice/ovl_Arrow_Ice_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Arrow_IceSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Arrow_IceSegmentOvlEnd - _ovl_Arrow_IceSegmentTextStart );
    _ovl_Arrow_IceSegmentRomEnd = _RomSize;

    ..ovl_Arrow_Ice.bss ADDR(..ovl_Arrow_Ice) + SIZEOF(..ovl_Arrow_Ice) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Arrow_IceSegmentBssStart = .;
            build/src/overlays/actors/ovl_Arrow_Ice/z_arrow_ice.o (.sbss)
            build/src/overlays/actors/ovl_Arrow_Ice/ovl_Arrow_Ice_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Arrow_Ice/z_arrow_ice.o (.scommon)
            build/src/overlays/actors/ovl_Arrow_Ice/ovl_Arrow_Ice_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Arrow_Ice/z_arrow_ice.o (.bss)
            build/src/overlays/actors/ovl_Arrow_Ice/ovl_Arrow_Ice_reloc.o (.bss)
            build/src/overlays/actors/ovl_Arrow_Ice/z_arrow_ice.o (COMMON)
            build/src/overlays/actors/ovl_Arrow_Ice/ovl_Arrow_Ice_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Arrow_IceSegmentBssEnd = .;
        _ovl_Arrow_IceSegmentEnd = .;
    }
    _ovl_Arrow_IceSegmentBssSize = ABSOLUTE( _ovl_Arrow_IceSegmentBssEnd - _ovl_Arrow_IceSegmentBssStart );

    _ovl_Arrow_LightSegmentRomStart = _RomSize;
    ..ovl_Arrow_Light : AT(_RomSize)
    {
        _ovl_Arrow_LightSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Arrow_LightSegmentTextStart = .;
            build/src/overlays/actors/ovl_Arrow_Light/z_arrow_light.o (.text)
            build/src/overlays/actors/ovl_Arrow_Light/ovl_Arrow_Light_reloc.o (.text)
        _ovl_Arrow_LightSegmentTextEnd = .;
    _ovl_Arrow_LightSegmentTextSize = ABSOLUTE( _ovl_Arrow_LightSegmentTextEnd - _ovl_Arrow_LightSegmentTextStart );
        _ovl_Arrow_LightSegmentDataStart = .;
            build/src/overlays/actors/ovl_Arrow_Light/z_arrow_light.o (.data)
            build/src/overlays/actors/ovl_Arrow_Light/ovl_Arrow_Light_reloc.o (.data)
        _ovl_Arrow_LightSegmentDataEnd = .;
    _ovl_Arrow_LightSegmentDataSize = ABSOLUTE( _ovl_Arrow_LightSegmentDataEnd - _ovl_Arrow_LightSegmentDataStart );
        _ovl_Arrow_LightSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Arrow_Light/z_arrow_light.o (.rodata)
            build/src/overlays/actors/ovl_Arrow_Light/ovl_Arrow_Light_reloc.o (.rodata)
        _ovl_Arrow_LightSegmentRoDataEnd = .;
    _ovl_Arrow_LightSegmentRoDataSize = ABSOLUTE( _ovl_Arrow_LightSegmentRoDataEnd - _ovl_Arrow_LightSegmentRoDataStart );
        _ovl_Arrow_LightSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Arrow_Light/z_arrow_light.o (.sdata)
            build/src/overlays/actors/ovl_Arrow_Light/ovl_Arrow_Light_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Arrow_LightSegmentSDataEnd = .;
        _ovl_Arrow_LightSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Arrow_Light/z_arrow_light.o (.ovl)
            build/src/overlays/actors/ovl_Arrow_Light/ovl_Arrow_Light_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Arrow_LightSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Arrow_LightSegmentOvlEnd - _ovl_Arrow_LightSegmentTextStart );
    _ovl_Arrow_LightSegmentRomEnd = _RomSize;

    ..ovl_Arrow_Light.bss ADDR(..ovl_Arrow_Light) + SIZEOF(..ovl_Arrow_Light) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Arrow_LightSegmentBssStart = .;
            build/src/overlays/actors/ovl_Arrow_Light/z_arrow_light.o (.sbss)
            build/src/overlays/actors/ovl_Arrow_Light/ovl_Arrow_Light_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Arrow_Light/z_arrow_light.o (.scommon)
            build/src/overlays/actors/ovl_Arrow_Light/ovl_Arrow_Light_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Arrow_Light/z_arrow_light.o (.bss)
            build/src/overlays/actors/ovl_Arrow_Light/ovl_Arrow_Light_reloc.o (.bss)
            build/src/overlays/actors/ovl_Arrow_Light/z_arrow_light.o (COMMON)
            build/src/overlays/actors/ovl_Arrow_Light/ovl_Arrow_Light_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Arrow_LightSegmentBssEnd = .;
        _ovl_Arrow_LightSegmentEnd = .;
    }
    _ovl_Arrow_LightSegmentBssSize = ABSOLUTE( _ovl_Arrow_LightSegmentBssEnd - _ovl_Arrow_LightSegmentBssStart );

    _ovl_Bg_Bdan_ObjectsSegmentRomStart = _RomSize;
    ..ovl_Bg_Bdan_Objects : AT(_RomSize)
    {
        _ovl_Bg_Bdan_ObjectsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Bdan_ObjectsSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/z_bg_bdan_objects.o (.text)
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/ovl_Bg_Bdan_Objects_reloc.o (.text)
        _ovl_Bg_Bdan_ObjectsSegmentTextEnd = .;
    _ovl_Bg_Bdan_ObjectsSegmentTextSize = ABSOLUTE( _ovl_Bg_Bdan_ObjectsSegmentTextEnd - _ovl_Bg_Bdan_ObjectsSegmentTextStart );
        _ovl_Bg_Bdan_ObjectsSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/z_bg_bdan_objects.o (.data)
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/ovl_Bg_Bdan_Objects_reloc.o (.data)
        _ovl_Bg_Bdan_ObjectsSegmentDataEnd = .;
    _ovl_Bg_Bdan_ObjectsSegmentDataSize = ABSOLUTE( _ovl_Bg_Bdan_ObjectsSegmentDataEnd - _ovl_Bg_Bdan_ObjectsSegmentDataStart );
        _ovl_Bg_Bdan_ObjectsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/z_bg_bdan_objects.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/ovl_Bg_Bdan_Objects_reloc.o (.rodata)
        _ovl_Bg_Bdan_ObjectsSegmentRoDataEnd = .;
    _ovl_Bg_Bdan_ObjectsSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Bdan_ObjectsSegmentRoDataEnd - _ovl_Bg_Bdan_ObjectsSegmentRoDataStart );
        _ovl_Bg_Bdan_ObjectsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/z_bg_bdan_objects.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/ovl_Bg_Bdan_Objects_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Bdan_ObjectsSegmentSDataEnd = .;
        _ovl_Bg_Bdan_ObjectsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/z_bg_bdan_objects.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/ovl_Bg_Bdan_Objects_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Bdan_ObjectsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Bdan_ObjectsSegmentOvlEnd - _ovl_Bg_Bdan_ObjectsSegmentTextStart );
    _ovl_Bg_Bdan_ObjectsSegmentRomEnd = _RomSize;

    ..ovl_Bg_Bdan_Objects.bss ADDR(..ovl_Bg_Bdan_Objects) + SIZEOF(..ovl_Bg_Bdan_Objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Bdan_ObjectsSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/z_bg_bdan_objects.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/ovl_Bg_Bdan_Objects_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/z_bg_bdan_objects.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/ovl_Bg_Bdan_Objects_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/z_bg_bdan_objects.o (.bss)
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/ovl_Bg_Bdan_Objects_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/z_bg_bdan_objects.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Bdan_Objects/ovl_Bg_Bdan_Objects_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Bdan_ObjectsSegmentBssEnd = .;
        _ovl_Bg_Bdan_ObjectsSegmentEnd = .;
    }
    _ovl_Bg_Bdan_ObjectsSegmentBssSize = ABSOLUTE( _ovl_Bg_Bdan_ObjectsSegmentBssEnd - _ovl_Bg_Bdan_ObjectsSegmentBssStart );

    _ovl_Bg_Bdan_SwitchSegmentRomStart = _RomSize;
    ..ovl_Bg_Bdan_Switch : AT(_RomSize)
    {
        _ovl_Bg_Bdan_SwitchSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Bdan_SwitchSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/z_bg_bdan_switch.o (.text)
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/ovl_Bg_Bdan_Switch_reloc.o (.text)
        _ovl_Bg_Bdan_SwitchSegmentTextEnd = .;
    _ovl_Bg_Bdan_SwitchSegmentTextSize = ABSOLUTE( _ovl_Bg_Bdan_SwitchSegmentTextEnd - _ovl_Bg_Bdan_SwitchSegmentTextStart );
        _ovl_Bg_Bdan_SwitchSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/z_bg_bdan_switch.o (.data)
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/ovl_Bg_Bdan_Switch_reloc.o (.data)
        _ovl_Bg_Bdan_SwitchSegmentDataEnd = .;
    _ovl_Bg_Bdan_SwitchSegmentDataSize = ABSOLUTE( _ovl_Bg_Bdan_SwitchSegmentDataEnd - _ovl_Bg_Bdan_SwitchSegmentDataStart );
        _ovl_Bg_Bdan_SwitchSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/z_bg_bdan_switch.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/ovl_Bg_Bdan_Switch_reloc.o (.rodata)
        _ovl_Bg_Bdan_SwitchSegmentRoDataEnd = .;
    _ovl_Bg_Bdan_SwitchSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Bdan_SwitchSegmentRoDataEnd - _ovl_Bg_Bdan_SwitchSegmentRoDataStart );
        _ovl_Bg_Bdan_SwitchSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/z_bg_bdan_switch.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/ovl_Bg_Bdan_Switch_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Bdan_SwitchSegmentSDataEnd = .;
        _ovl_Bg_Bdan_SwitchSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/z_bg_bdan_switch.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/ovl_Bg_Bdan_Switch_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Bdan_SwitchSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Bdan_SwitchSegmentOvlEnd - _ovl_Bg_Bdan_SwitchSegmentTextStart );
    _ovl_Bg_Bdan_SwitchSegmentRomEnd = _RomSize;

    ..ovl_Bg_Bdan_Switch.bss ADDR(..ovl_Bg_Bdan_Switch) + SIZEOF(..ovl_Bg_Bdan_Switch) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Bdan_SwitchSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/z_bg_bdan_switch.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/ovl_Bg_Bdan_Switch_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/z_bg_bdan_switch.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/ovl_Bg_Bdan_Switch_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/z_bg_bdan_switch.o (.bss)
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/ovl_Bg_Bdan_Switch_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/z_bg_bdan_switch.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Bdan_Switch/ovl_Bg_Bdan_Switch_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Bdan_SwitchSegmentBssEnd = .;
        _ovl_Bg_Bdan_SwitchSegmentEnd = .;
    }
    _ovl_Bg_Bdan_SwitchSegmentBssSize = ABSOLUTE( _ovl_Bg_Bdan_SwitchSegmentBssEnd - _ovl_Bg_Bdan_SwitchSegmentBssStart );

    _ovl_Bg_Bom_GuardSegmentRomStart = _RomSize;
    ..ovl_Bg_Bom_Guard : AT(_RomSize)
    {
        _ovl_Bg_Bom_GuardSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Bom_GuardSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Bom_Guard/z_bg_bom_guard.o (.text)
            build/src/overlays/actors/ovl_Bg_Bom_Guard/ovl_Bg_Bom_Guard_reloc.o (.text)
        _ovl_Bg_Bom_GuardSegmentTextEnd = .;
    _ovl_Bg_Bom_GuardSegmentTextSize = ABSOLUTE( _ovl_Bg_Bom_GuardSegmentTextEnd - _ovl_Bg_Bom_GuardSegmentTextStart );
        _ovl_Bg_Bom_GuardSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bom_Guard/z_bg_bom_guard.o (.data)
            build/src/overlays/actors/ovl_Bg_Bom_Guard/ovl_Bg_Bom_Guard_reloc.o (.data)
        _ovl_Bg_Bom_GuardSegmentDataEnd = .;
    _ovl_Bg_Bom_GuardSegmentDataSize = ABSOLUTE( _ovl_Bg_Bom_GuardSegmentDataEnd - _ovl_Bg_Bom_GuardSegmentDataStart );
        _ovl_Bg_Bom_GuardSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bom_Guard/z_bg_bom_guard.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Bom_Guard/ovl_Bg_Bom_Guard_reloc.o (.rodata)
        _ovl_Bg_Bom_GuardSegmentRoDataEnd = .;
    _ovl_Bg_Bom_GuardSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Bom_GuardSegmentRoDataEnd - _ovl_Bg_Bom_GuardSegmentRoDataStart );
        _ovl_Bg_Bom_GuardSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bom_Guard/z_bg_bom_guard.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Bom_Guard/ovl_Bg_Bom_Guard_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Bom_GuardSegmentSDataEnd = .;
        _ovl_Bg_Bom_GuardSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Bom_Guard/z_bg_bom_guard.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Bom_Guard/ovl_Bg_Bom_Guard_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Bom_GuardSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Bom_GuardSegmentOvlEnd - _ovl_Bg_Bom_GuardSegmentTextStart );
    _ovl_Bg_Bom_GuardSegmentRomEnd = _RomSize;

    ..ovl_Bg_Bom_Guard.bss ADDR(..ovl_Bg_Bom_Guard) + SIZEOF(..ovl_Bg_Bom_Guard) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Bom_GuardSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Bom_Guard/z_bg_bom_guard.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Bom_Guard/ovl_Bg_Bom_Guard_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Bom_Guard/z_bg_bom_guard.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Bom_Guard/ovl_Bg_Bom_Guard_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Bom_Guard/z_bg_bom_guard.o (.bss)
            build/src/overlays/actors/ovl_Bg_Bom_Guard/ovl_Bg_Bom_Guard_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Bom_Guard/z_bg_bom_guard.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Bom_Guard/ovl_Bg_Bom_Guard_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Bom_GuardSegmentBssEnd = .;
        _ovl_Bg_Bom_GuardSegmentEnd = .;
    }
    _ovl_Bg_Bom_GuardSegmentBssSize = ABSOLUTE( _ovl_Bg_Bom_GuardSegmentBssEnd - _ovl_Bg_Bom_GuardSegmentBssStart );

    _ovl_Bg_BombwallSegmentRomStart = _RomSize;
    ..ovl_Bg_Bombwall : AT(_RomSize)
    {
        _ovl_Bg_BombwallSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_BombwallSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Bombwall/z_bg_bombwall.o (.text)
            build/data/overlays/actors/z_bg_bombwall.data.o (.text)
            build/data/overlays/actors/z_bg_bombwall.reloc.o (.text)
        _ovl_Bg_BombwallSegmentTextEnd = .;
    _ovl_Bg_BombwallSegmentTextSize = ABSOLUTE( _ovl_Bg_BombwallSegmentTextEnd - _ovl_Bg_BombwallSegmentTextStart );
        _ovl_Bg_BombwallSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bombwall/z_bg_bombwall.o (.data)
            build/data/overlays/actors/z_bg_bombwall.data.o (.data)
            build/data/overlays/actors/z_bg_bombwall.reloc.o (.data)
        _ovl_Bg_BombwallSegmentDataEnd = .;
    _ovl_Bg_BombwallSegmentDataSize = ABSOLUTE( _ovl_Bg_BombwallSegmentDataEnd - _ovl_Bg_BombwallSegmentDataStart );
        _ovl_Bg_BombwallSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bombwall/z_bg_bombwall.o (.rodata)
            build/data/overlays/actors/z_bg_bombwall.data.o (.rodata)
            build/data/overlays/actors/z_bg_bombwall.reloc.o (.rodata)
        _ovl_Bg_BombwallSegmentRoDataEnd = .;
    _ovl_Bg_BombwallSegmentRoDataSize = ABSOLUTE( _ovl_Bg_BombwallSegmentRoDataEnd - _ovl_Bg_BombwallSegmentRoDataStart );
        _ovl_Bg_BombwallSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bombwall/z_bg_bombwall.o (.sdata)
            build/data/overlays/actors/z_bg_bombwall.data.o (.sdata)
            build/data/overlays/actors/z_bg_bombwall.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_BombwallSegmentSDataEnd = .;
        _ovl_Bg_BombwallSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Bombwall/z_bg_bombwall.o (.ovl)
            build/data/overlays/actors/z_bg_bombwall.data.o (.ovl)
            build/data/overlays/actors/z_bg_bombwall.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_BombwallSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_BombwallSegmentOvlEnd - _ovl_Bg_BombwallSegmentTextStart );
    _ovl_Bg_BombwallSegmentRomEnd = _RomSize;

    ..ovl_Bg_Bombwall.bss ADDR(..ovl_Bg_Bombwall) + SIZEOF(..ovl_Bg_Bombwall) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_BombwallSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Bombwall/z_bg_bombwall.o (.sbss)
            build/data/overlays/actors/z_bg_bombwall.data.o (.sbss)
            build/data/overlays/actors/z_bg_bombwall.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Bombwall/z_bg_bombwall.o (.scommon)
            build/data/overlays/actors/z_bg_bombwall.data.o (.scommon)
            build/data/overlays/actors/z_bg_bombwall.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Bombwall/z_bg_bombwall.o (.bss)
            build/data/overlays/actors/z_bg_bombwall.data.o (.bss)
            build/data/overlays/actors/z_bg_bombwall.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Bombwall/z_bg_bombwall.o (COMMON)
            build/data/overlays/actors/z_bg_bombwall.data.o (COMMON)
            build/data/overlays/actors/z_bg_bombwall.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_BombwallSegmentBssEnd = .;
        _ovl_Bg_BombwallSegmentEnd = .;
    }
    _ovl_Bg_BombwallSegmentBssSize = ABSOLUTE( _ovl_Bg_BombwallSegmentBssEnd - _ovl_Bg_BombwallSegmentBssStart );

    _ovl_Bg_Bowl_WallSegmentRomStart = _RomSize;
    ..ovl_Bg_Bowl_Wall : AT(_RomSize)
    {
        _ovl_Bg_Bowl_WallSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Bowl_WallSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Bowl_Wall/z_bg_bowl_wall.o (.text)
            build/data/overlays/actors/z_bg_bowl_wall.data.o (.text)
            build/data/overlays/actors/z_bg_bowl_wall.reloc.o (.text)
        _ovl_Bg_Bowl_WallSegmentTextEnd = .;
    _ovl_Bg_Bowl_WallSegmentTextSize = ABSOLUTE( _ovl_Bg_Bowl_WallSegmentTextEnd - _ovl_Bg_Bowl_WallSegmentTextStart );
        _ovl_Bg_Bowl_WallSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bowl_Wall/z_bg_bowl_wall.o (.data)
            build/data/overlays/actors/z_bg_bowl_wall.data.o (.data)
            build/data/overlays/actors/z_bg_bowl_wall.reloc.o (.data)
        _ovl_Bg_Bowl_WallSegmentDataEnd = .;
    _ovl_Bg_Bowl_WallSegmentDataSize = ABSOLUTE( _ovl_Bg_Bowl_WallSegmentDataEnd - _ovl_Bg_Bowl_WallSegmentDataStart );
        _ovl_Bg_Bowl_WallSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bowl_Wall/z_bg_bowl_wall.o (.rodata)
            build/data/overlays/actors/z_bg_bowl_wall.data.o (.rodata)
            build/data/overlays/actors/z_bg_bowl_wall.reloc.o (.rodata)
        _ovl_Bg_Bowl_WallSegmentRoDataEnd = .;
    _ovl_Bg_Bowl_WallSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Bowl_WallSegmentRoDataEnd - _ovl_Bg_Bowl_WallSegmentRoDataStart );
        _ovl_Bg_Bowl_WallSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Bowl_Wall/z_bg_bowl_wall.o (.sdata)
            build/data/overlays/actors/z_bg_bowl_wall.data.o (.sdata)
            build/data/overlays/actors/z_bg_bowl_wall.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Bowl_WallSegmentSDataEnd = .;
        _ovl_Bg_Bowl_WallSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Bowl_Wall/z_bg_bowl_wall.o (.ovl)
            build/data/overlays/actors/z_bg_bowl_wall.data.o (.ovl)
            build/data/overlays/actors/z_bg_bowl_wall.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Bowl_WallSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Bowl_WallSegmentOvlEnd - _ovl_Bg_Bowl_WallSegmentTextStart );
    _ovl_Bg_Bowl_WallSegmentRomEnd = _RomSize;

    ..ovl_Bg_Bowl_Wall.bss ADDR(..ovl_Bg_Bowl_Wall) + SIZEOF(..ovl_Bg_Bowl_Wall) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Bowl_WallSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Bowl_Wall/z_bg_bowl_wall.o (.sbss)
            build/data/overlays/actors/z_bg_bowl_wall.data.o (.sbss)
            build/data/overlays/actors/z_bg_bowl_wall.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Bowl_Wall/z_bg_bowl_wall.o (.scommon)
            build/data/overlays/actors/z_bg_bowl_wall.data.o (.scommon)
            build/data/overlays/actors/z_bg_bowl_wall.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Bowl_Wall/z_bg_bowl_wall.o (.bss)
            build/data/overlays/actors/z_bg_bowl_wall.data.o (.bss)
            build/data/overlays/actors/z_bg_bowl_wall.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Bowl_Wall/z_bg_bowl_wall.o (COMMON)
            build/data/overlays/actors/z_bg_bowl_wall.data.o (COMMON)
            build/data/overlays/actors/z_bg_bowl_wall.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Bowl_WallSegmentBssEnd = .;
        _ovl_Bg_Bowl_WallSegmentEnd = .;
    }
    _ovl_Bg_Bowl_WallSegmentBssSize = ABSOLUTE( _ovl_Bg_Bowl_WallSegmentBssEnd - _ovl_Bg_Bowl_WallSegmentBssStart );

    _ovl_Bg_BreakwallSegmentRomStart = _RomSize;
    ..ovl_Bg_Breakwall : AT(_RomSize)
    {
        _ovl_Bg_BreakwallSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_BreakwallSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Breakwall/z_bg_breakwall.o (.text)
            build/data/overlays/actors/z_bg_breakwall.data.o (.text)
            build/data/overlays/actors/z_bg_breakwall.reloc.o (.text)
        _ovl_Bg_BreakwallSegmentTextEnd = .;
    _ovl_Bg_BreakwallSegmentTextSize = ABSOLUTE( _ovl_Bg_BreakwallSegmentTextEnd - _ovl_Bg_BreakwallSegmentTextStart );
        _ovl_Bg_BreakwallSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Breakwall/z_bg_breakwall.o (.data)
            build/data/overlays/actors/z_bg_breakwall.data.o (.data)
            build/data/overlays/actors/z_bg_breakwall.reloc.o (.data)
        _ovl_Bg_BreakwallSegmentDataEnd = .;
    _ovl_Bg_BreakwallSegmentDataSize = ABSOLUTE( _ovl_Bg_BreakwallSegmentDataEnd - _ovl_Bg_BreakwallSegmentDataStart );
        _ovl_Bg_BreakwallSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Breakwall/z_bg_breakwall.o (.rodata)
            build/data/overlays/actors/z_bg_breakwall.data.o (.rodata)
            build/data/overlays/actors/z_bg_breakwall.reloc.o (.rodata)
        _ovl_Bg_BreakwallSegmentRoDataEnd = .;
    _ovl_Bg_BreakwallSegmentRoDataSize = ABSOLUTE( _ovl_Bg_BreakwallSegmentRoDataEnd - _ovl_Bg_BreakwallSegmentRoDataStart );
        _ovl_Bg_BreakwallSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Breakwall/z_bg_breakwall.o (.sdata)
            build/data/overlays/actors/z_bg_breakwall.data.o (.sdata)
            build/data/overlays/actors/z_bg_breakwall.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_BreakwallSegmentSDataEnd = .;
        _ovl_Bg_BreakwallSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Breakwall/z_bg_breakwall.o (.ovl)
            build/data/overlays/actors/z_bg_breakwall.data.o (.ovl)
            build/data/overlays/actors/z_bg_breakwall.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_BreakwallSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_BreakwallSegmentOvlEnd - _ovl_Bg_BreakwallSegmentTextStart );
    _ovl_Bg_BreakwallSegmentRomEnd = _RomSize;

    ..ovl_Bg_Breakwall.bss ADDR(..ovl_Bg_Breakwall) + SIZEOF(..ovl_Bg_Breakwall) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_BreakwallSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Breakwall/z_bg_breakwall.o (.sbss)
            build/data/overlays/actors/z_bg_breakwall.data.o (.sbss)
            build/data/overlays/actors/z_bg_breakwall.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Breakwall/z_bg_breakwall.o (.scommon)
            build/data/overlays/actors/z_bg_breakwall.data.o (.scommon)
            build/data/overlays/actors/z_bg_breakwall.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Breakwall/z_bg_breakwall.o (.bss)
            build/data/overlays/actors/z_bg_breakwall.data.o (.bss)
            build/data/overlays/actors/z_bg_breakwall.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Breakwall/z_bg_breakwall.o (COMMON)
            build/data/overlays/actors/z_bg_breakwall.data.o (COMMON)
            build/data/overlays/actors/z_bg_breakwall.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_BreakwallSegmentBssEnd = .;
        _ovl_Bg_BreakwallSegmentEnd = .;
    }
    _ovl_Bg_BreakwallSegmentBssSize = ABSOLUTE( _ovl_Bg_BreakwallSegmentBssEnd - _ovl_Bg_BreakwallSegmentBssStart );

    _ovl_Bg_Ddan_JdSegmentRomStart = _RomSize;
    ..ovl_Bg_Ddan_Jd : AT(_RomSize)
    {
        _ovl_Bg_Ddan_JdSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Ddan_JdSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/z_bg_ddan_jd.o (.text)
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/ovl_Bg_Ddan_Jd_reloc.o (.text)
        _ovl_Bg_Ddan_JdSegmentTextEnd = .;
    _ovl_Bg_Ddan_JdSegmentTextSize = ABSOLUTE( _ovl_Bg_Ddan_JdSegmentTextEnd - _ovl_Bg_Ddan_JdSegmentTextStart );
        _ovl_Bg_Ddan_JdSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/z_bg_ddan_jd.o (.data)
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/ovl_Bg_Ddan_Jd_reloc.o (.data)
        _ovl_Bg_Ddan_JdSegmentDataEnd = .;
    _ovl_Bg_Ddan_JdSegmentDataSize = ABSOLUTE( _ovl_Bg_Ddan_JdSegmentDataEnd - _ovl_Bg_Ddan_JdSegmentDataStart );
        _ovl_Bg_Ddan_JdSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/z_bg_ddan_jd.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/ovl_Bg_Ddan_Jd_reloc.o (.rodata)
        _ovl_Bg_Ddan_JdSegmentRoDataEnd = .;
    _ovl_Bg_Ddan_JdSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Ddan_JdSegmentRoDataEnd - _ovl_Bg_Ddan_JdSegmentRoDataStart );
        _ovl_Bg_Ddan_JdSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/z_bg_ddan_jd.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/ovl_Bg_Ddan_Jd_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Ddan_JdSegmentSDataEnd = .;
        _ovl_Bg_Ddan_JdSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/z_bg_ddan_jd.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/ovl_Bg_Ddan_Jd_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Ddan_JdSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Ddan_JdSegmentOvlEnd - _ovl_Bg_Ddan_JdSegmentTextStart );
    _ovl_Bg_Ddan_JdSegmentRomEnd = _RomSize;

    ..ovl_Bg_Ddan_Jd.bss ADDR(..ovl_Bg_Ddan_Jd) + SIZEOF(..ovl_Bg_Ddan_Jd) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Ddan_JdSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/z_bg_ddan_jd.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/ovl_Bg_Ddan_Jd_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/z_bg_ddan_jd.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/ovl_Bg_Ddan_Jd_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/z_bg_ddan_jd.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/ovl_Bg_Ddan_Jd_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/z_bg_ddan_jd.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Ddan_Jd/ovl_Bg_Ddan_Jd_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Ddan_JdSegmentBssEnd = .;
        _ovl_Bg_Ddan_JdSegmentEnd = .;
    }
    _ovl_Bg_Ddan_JdSegmentBssSize = ABSOLUTE( _ovl_Bg_Ddan_JdSegmentBssEnd - _ovl_Bg_Ddan_JdSegmentBssStart );

    _ovl_Bg_Ddan_KdSegmentRomStart = _RomSize;
    ..ovl_Bg_Ddan_Kd : AT(_RomSize)
    {
        _ovl_Bg_Ddan_KdSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Ddan_KdSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/z_bg_ddan_kd.o (.text)
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/ovl_Bg_Ddan_Kd_reloc.o (.text)
        _ovl_Bg_Ddan_KdSegmentTextEnd = .;
    _ovl_Bg_Ddan_KdSegmentTextSize = ABSOLUTE( _ovl_Bg_Ddan_KdSegmentTextEnd - _ovl_Bg_Ddan_KdSegmentTextStart );
        _ovl_Bg_Ddan_KdSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/z_bg_ddan_kd.o (.data)
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/ovl_Bg_Ddan_Kd_reloc.o (.data)
        _ovl_Bg_Ddan_KdSegmentDataEnd = .;
    _ovl_Bg_Ddan_KdSegmentDataSize = ABSOLUTE( _ovl_Bg_Ddan_KdSegmentDataEnd - _ovl_Bg_Ddan_KdSegmentDataStart );
        _ovl_Bg_Ddan_KdSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/z_bg_ddan_kd.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/ovl_Bg_Ddan_Kd_reloc.o (.rodata)
        _ovl_Bg_Ddan_KdSegmentRoDataEnd = .;
    _ovl_Bg_Ddan_KdSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Ddan_KdSegmentRoDataEnd - _ovl_Bg_Ddan_KdSegmentRoDataStart );
        _ovl_Bg_Ddan_KdSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/z_bg_ddan_kd.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/ovl_Bg_Ddan_Kd_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Ddan_KdSegmentSDataEnd = .;
        _ovl_Bg_Ddan_KdSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/z_bg_ddan_kd.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/ovl_Bg_Ddan_Kd_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Ddan_KdSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Ddan_KdSegmentOvlEnd - _ovl_Bg_Ddan_KdSegmentTextStart );
    _ovl_Bg_Ddan_KdSegmentRomEnd = _RomSize;

    ..ovl_Bg_Ddan_Kd.bss ADDR(..ovl_Bg_Ddan_Kd) + SIZEOF(..ovl_Bg_Ddan_Kd) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Ddan_KdSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/z_bg_ddan_kd.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/ovl_Bg_Ddan_Kd_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/z_bg_ddan_kd.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/ovl_Bg_Ddan_Kd_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/z_bg_ddan_kd.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/ovl_Bg_Ddan_Kd_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/z_bg_ddan_kd.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Ddan_Kd/ovl_Bg_Ddan_Kd_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Ddan_KdSegmentBssEnd = .;
        _ovl_Bg_Ddan_KdSegmentEnd = .;
    }
    _ovl_Bg_Ddan_KdSegmentBssSize = ABSOLUTE( _ovl_Bg_Ddan_KdSegmentBssEnd - _ovl_Bg_Ddan_KdSegmentBssStart );

    _ovl_Bg_DodoagoSegmentRomStart = _RomSize;
    ..ovl_Bg_Dodoago : AT(_RomSize)
    {
        _ovl_Bg_DodoagoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_DodoagoSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Dodoago/z_bg_dodoago.o (.text)
            build/src/overlays/actors/ovl_Bg_Dodoago/ovl_Bg_Dodoago_reloc.o (.text)
        _ovl_Bg_DodoagoSegmentTextEnd = .;
    _ovl_Bg_DodoagoSegmentTextSize = ABSOLUTE( _ovl_Bg_DodoagoSegmentTextEnd - _ovl_Bg_DodoagoSegmentTextStart );
        _ovl_Bg_DodoagoSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Dodoago/z_bg_dodoago.o (.data)
            build/src/overlays/actors/ovl_Bg_Dodoago/ovl_Bg_Dodoago_reloc.o (.data)
        _ovl_Bg_DodoagoSegmentDataEnd = .;
    _ovl_Bg_DodoagoSegmentDataSize = ABSOLUTE( _ovl_Bg_DodoagoSegmentDataEnd - _ovl_Bg_DodoagoSegmentDataStart );
        _ovl_Bg_DodoagoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Dodoago/z_bg_dodoago.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Dodoago/ovl_Bg_Dodoago_reloc.o (.rodata)
        _ovl_Bg_DodoagoSegmentRoDataEnd = .;
    _ovl_Bg_DodoagoSegmentRoDataSize = ABSOLUTE( _ovl_Bg_DodoagoSegmentRoDataEnd - _ovl_Bg_DodoagoSegmentRoDataStart );
        _ovl_Bg_DodoagoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Dodoago/z_bg_dodoago.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Dodoago/ovl_Bg_Dodoago_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_DodoagoSegmentSDataEnd = .;
        _ovl_Bg_DodoagoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Dodoago/z_bg_dodoago.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Dodoago/ovl_Bg_Dodoago_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_DodoagoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_DodoagoSegmentOvlEnd - _ovl_Bg_DodoagoSegmentTextStart );
    _ovl_Bg_DodoagoSegmentRomEnd = _RomSize;

    ..ovl_Bg_Dodoago.bss ADDR(..ovl_Bg_Dodoago) + SIZEOF(..ovl_Bg_Dodoago) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_DodoagoSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Dodoago/z_bg_dodoago.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Dodoago/ovl_Bg_Dodoago_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Dodoago/z_bg_dodoago.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Dodoago/ovl_Bg_Dodoago_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Dodoago/z_bg_dodoago.o (.bss)
            build/src/overlays/actors/ovl_Bg_Dodoago/ovl_Bg_Dodoago_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Dodoago/z_bg_dodoago.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Dodoago/ovl_Bg_Dodoago_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_DodoagoSegmentBssEnd = .;
        _ovl_Bg_DodoagoSegmentEnd = .;
    }
    _ovl_Bg_DodoagoSegmentBssSize = ABSOLUTE( _ovl_Bg_DodoagoSegmentBssEnd - _ovl_Bg_DodoagoSegmentBssStart );

    _ovl_Bg_Dy_YoseizoSegmentRomStart = _RomSize;
    ..ovl_Bg_Dy_Yoseizo : AT(_RomSize)
    {
        _ovl_Bg_Dy_YoseizoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Dy_YoseizoSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Dy_Yoseizo/z_bg_dy_yoseizo.o (.text)
            build/data/overlays/actors/z_bg_dy_yoseizo.data.o (.text)
            build/data/overlays/actors/z_bg_dy_yoseizo.reloc.o (.text)
        _ovl_Bg_Dy_YoseizoSegmentTextEnd = .;
    _ovl_Bg_Dy_YoseizoSegmentTextSize = ABSOLUTE( _ovl_Bg_Dy_YoseizoSegmentTextEnd - _ovl_Bg_Dy_YoseizoSegmentTextStart );
        _ovl_Bg_Dy_YoseizoSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Dy_Yoseizo/z_bg_dy_yoseizo.o (.data)
            build/data/overlays/actors/z_bg_dy_yoseizo.data.o (.data)
            build/data/overlays/actors/z_bg_dy_yoseizo.reloc.o (.data)
        _ovl_Bg_Dy_YoseizoSegmentDataEnd = .;
    _ovl_Bg_Dy_YoseizoSegmentDataSize = ABSOLUTE( _ovl_Bg_Dy_YoseizoSegmentDataEnd - _ovl_Bg_Dy_YoseizoSegmentDataStart );
        _ovl_Bg_Dy_YoseizoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Dy_Yoseizo/z_bg_dy_yoseizo.o (.rodata)
            build/data/overlays/actors/z_bg_dy_yoseizo.data.o (.rodata)
            build/data/overlays/actors/z_bg_dy_yoseizo.reloc.o (.rodata)
        _ovl_Bg_Dy_YoseizoSegmentRoDataEnd = .;
    _ovl_Bg_Dy_YoseizoSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Dy_YoseizoSegmentRoDataEnd - _ovl_Bg_Dy_YoseizoSegmentRoDataStart );
        _ovl_Bg_Dy_YoseizoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Dy_Yoseizo/z_bg_dy_yoseizo.o (.sdata)
            build/data/overlays/actors/z_bg_dy_yoseizo.data.o (.sdata)
            build/data/overlays/actors/z_bg_dy_yoseizo.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Dy_YoseizoSegmentSDataEnd = .;
        _ovl_Bg_Dy_YoseizoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Dy_Yoseizo/z_bg_dy_yoseizo.o (.ovl)
            build/data/overlays/actors/z_bg_dy_yoseizo.data.o (.ovl)
            build/data/overlays/actors/z_bg_dy_yoseizo.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Dy_YoseizoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Dy_YoseizoSegmentOvlEnd - _ovl_Bg_Dy_YoseizoSegmentTextStart );
    _ovl_Bg_Dy_YoseizoSegmentRomEnd = _RomSize;

    ..ovl_Bg_Dy_Yoseizo.bss ADDR(..ovl_Bg_Dy_Yoseizo) + SIZEOF(..ovl_Bg_Dy_Yoseizo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Dy_YoseizoSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Dy_Yoseizo/z_bg_dy_yoseizo.o (.sbss)
            build/data/overlays/actors/z_bg_dy_yoseizo.data.o (.sbss)
            build/data/overlays/actors/z_bg_dy_yoseizo.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Dy_Yoseizo/z_bg_dy_yoseizo.o (.scommon)
            build/data/overlays/actors/z_bg_dy_yoseizo.data.o (.scommon)
            build/data/overlays/actors/z_bg_dy_yoseizo.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Dy_Yoseizo/z_bg_dy_yoseizo.o (.bss)
            build/data/overlays/actors/z_bg_dy_yoseizo.data.o (.bss)
            build/data/overlays/actors/z_bg_dy_yoseizo.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Dy_Yoseizo/z_bg_dy_yoseizo.o (COMMON)
            build/data/overlays/actors/z_bg_dy_yoseizo.data.o (COMMON)
            build/data/overlays/actors/z_bg_dy_yoseizo.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Dy_YoseizoSegmentBssEnd = .;
        _ovl_Bg_Dy_YoseizoSegmentEnd = .;
    }
    _ovl_Bg_Dy_YoseizoSegmentBssSize = ABSOLUTE( _ovl_Bg_Dy_YoseizoSegmentBssEnd - _ovl_Bg_Dy_YoseizoSegmentBssStart );

    _ovl_Bg_Ganon_OtyukaSegmentRomStart = _RomSize;
    ..ovl_Bg_Ganon_Otyuka : AT(_RomSize)
    {
        _ovl_Bg_Ganon_OtyukaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Ganon_OtyukaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Ganon_Otyuka/z_bg_ganon_otyuka.o (.text)
            build/data/overlays/actors/z_bg_ganon_otyuka.data.o (.text)
            build/data/overlays/actors/z_bg_ganon_otyuka.reloc.o (.text)
        _ovl_Bg_Ganon_OtyukaSegmentTextEnd = .;
    _ovl_Bg_Ganon_OtyukaSegmentTextSize = ABSOLUTE( _ovl_Bg_Ganon_OtyukaSegmentTextEnd - _ovl_Bg_Ganon_OtyukaSegmentTextStart );
        _ovl_Bg_Ganon_OtyukaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ganon_Otyuka/z_bg_ganon_otyuka.o (.data)
            build/data/overlays/actors/z_bg_ganon_otyuka.data.o (.data)
            build/data/overlays/actors/z_bg_ganon_otyuka.reloc.o (.data)
        _ovl_Bg_Ganon_OtyukaSegmentDataEnd = .;
    _ovl_Bg_Ganon_OtyukaSegmentDataSize = ABSOLUTE( _ovl_Bg_Ganon_OtyukaSegmentDataEnd - _ovl_Bg_Ganon_OtyukaSegmentDataStart );
        _ovl_Bg_Ganon_OtyukaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ganon_Otyuka/z_bg_ganon_otyuka.o (.rodata)
            build/data/overlays/actors/z_bg_ganon_otyuka.data.o (.rodata)
            build/data/overlays/actors/z_bg_ganon_otyuka.reloc.o (.rodata)
        _ovl_Bg_Ganon_OtyukaSegmentRoDataEnd = .;
    _ovl_Bg_Ganon_OtyukaSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Ganon_OtyukaSegmentRoDataEnd - _ovl_Bg_Ganon_OtyukaSegmentRoDataStart );
        _ovl_Bg_Ganon_OtyukaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ganon_Otyuka/z_bg_ganon_otyuka.o (.sdata)
            build/data/overlays/actors/z_bg_ganon_otyuka.data.o (.sdata)
            build/data/overlays/actors/z_bg_ganon_otyuka.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Ganon_OtyukaSegmentSDataEnd = .;
        _ovl_Bg_Ganon_OtyukaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Ganon_Otyuka/z_bg_ganon_otyuka.o (.ovl)
            build/data/overlays/actors/z_bg_ganon_otyuka.data.o (.ovl)
            build/data/overlays/actors/z_bg_ganon_otyuka.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Ganon_OtyukaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Ganon_OtyukaSegmentOvlEnd - _ovl_Bg_Ganon_OtyukaSegmentTextStart );
    _ovl_Bg_Ganon_OtyukaSegmentRomEnd = _RomSize;

    ..ovl_Bg_Ganon_Otyuka.bss ADDR(..ovl_Bg_Ganon_Otyuka) + SIZEOF(..ovl_Bg_Ganon_Otyuka) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Ganon_OtyukaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Ganon_Otyuka/z_bg_ganon_otyuka.o (.sbss)
            build/data/overlays/actors/z_bg_ganon_otyuka.data.o (.sbss)
            build/data/overlays/actors/z_bg_ganon_otyuka.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ganon_Otyuka/z_bg_ganon_otyuka.o (.scommon)
            build/data/overlays/actors/z_bg_ganon_otyuka.data.o (.scommon)
            build/data/overlays/actors/z_bg_ganon_otyuka.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ganon_Otyuka/z_bg_ganon_otyuka.o (.bss)
            build/data/overlays/actors/z_bg_ganon_otyuka.data.o (.bss)
            build/data/overlays/actors/z_bg_ganon_otyuka.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ganon_Otyuka/z_bg_ganon_otyuka.o (COMMON)
            build/data/overlays/actors/z_bg_ganon_otyuka.data.o (COMMON)
            build/data/overlays/actors/z_bg_ganon_otyuka.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Ganon_OtyukaSegmentBssEnd = .;
        _ovl_Bg_Ganon_OtyukaSegmentEnd = .;
    }
    _ovl_Bg_Ganon_OtyukaSegmentBssSize = ABSOLUTE( _ovl_Bg_Ganon_OtyukaSegmentBssEnd - _ovl_Bg_Ganon_OtyukaSegmentBssStart );

    _ovl_Bg_Gate_ShutterSegmentRomStart = _RomSize;
    ..ovl_Bg_Gate_Shutter : AT(_RomSize)
    {
        _ovl_Bg_Gate_ShutterSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Gate_ShutterSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/z_bg_gate_shutter.o (.text)
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/ovl_Bg_Gate_Shutter_reloc.o (.text)
        _ovl_Bg_Gate_ShutterSegmentTextEnd = .;
    _ovl_Bg_Gate_ShutterSegmentTextSize = ABSOLUTE( _ovl_Bg_Gate_ShutterSegmentTextEnd - _ovl_Bg_Gate_ShutterSegmentTextStart );
        _ovl_Bg_Gate_ShutterSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/z_bg_gate_shutter.o (.data)
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/ovl_Bg_Gate_Shutter_reloc.o (.data)
        _ovl_Bg_Gate_ShutterSegmentDataEnd = .;
    _ovl_Bg_Gate_ShutterSegmentDataSize = ABSOLUTE( _ovl_Bg_Gate_ShutterSegmentDataEnd - _ovl_Bg_Gate_ShutterSegmentDataStart );
        _ovl_Bg_Gate_ShutterSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/z_bg_gate_shutter.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/ovl_Bg_Gate_Shutter_reloc.o (.rodata)
        _ovl_Bg_Gate_ShutterSegmentRoDataEnd = .;
    _ovl_Bg_Gate_ShutterSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Gate_ShutterSegmentRoDataEnd - _ovl_Bg_Gate_ShutterSegmentRoDataStart );
        _ovl_Bg_Gate_ShutterSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/z_bg_gate_shutter.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/ovl_Bg_Gate_Shutter_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Gate_ShutterSegmentSDataEnd = .;
        _ovl_Bg_Gate_ShutterSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/z_bg_gate_shutter.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/ovl_Bg_Gate_Shutter_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Gate_ShutterSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Gate_ShutterSegmentOvlEnd - _ovl_Bg_Gate_ShutterSegmentTextStart );
    _ovl_Bg_Gate_ShutterSegmentRomEnd = _RomSize;

    ..ovl_Bg_Gate_Shutter.bss ADDR(..ovl_Bg_Gate_Shutter) + SIZEOF(..ovl_Bg_Gate_Shutter) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Gate_ShutterSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/z_bg_gate_shutter.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/ovl_Bg_Gate_Shutter_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/z_bg_gate_shutter.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/ovl_Bg_Gate_Shutter_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/z_bg_gate_shutter.o (.bss)
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/ovl_Bg_Gate_Shutter_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/z_bg_gate_shutter.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Gate_Shutter/ovl_Bg_Gate_Shutter_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Gate_ShutterSegmentBssEnd = .;
        _ovl_Bg_Gate_ShutterSegmentEnd = .;
    }
    _ovl_Bg_Gate_ShutterSegmentBssSize = ABSOLUTE( _ovl_Bg_Gate_ShutterSegmentBssEnd - _ovl_Bg_Gate_ShutterSegmentBssStart );

    _ovl_Bg_Gjyo_BridgeSegmentRomStart = _RomSize;
    ..ovl_Bg_Gjyo_Bridge : AT(_RomSize)
    {
        _ovl_Bg_Gjyo_BridgeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Gjyo_BridgeSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/z_bg_gjyo_bridge.o (.text)
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/ovl_Bg_Gjyo_Bridge_reloc.o (.text)
        _ovl_Bg_Gjyo_BridgeSegmentTextEnd = .;
    _ovl_Bg_Gjyo_BridgeSegmentTextSize = ABSOLUTE( _ovl_Bg_Gjyo_BridgeSegmentTextEnd - _ovl_Bg_Gjyo_BridgeSegmentTextStart );
        _ovl_Bg_Gjyo_BridgeSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/z_bg_gjyo_bridge.o (.data)
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/ovl_Bg_Gjyo_Bridge_reloc.o (.data)
        _ovl_Bg_Gjyo_BridgeSegmentDataEnd = .;
    _ovl_Bg_Gjyo_BridgeSegmentDataSize = ABSOLUTE( _ovl_Bg_Gjyo_BridgeSegmentDataEnd - _ovl_Bg_Gjyo_BridgeSegmentDataStart );
        _ovl_Bg_Gjyo_BridgeSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/z_bg_gjyo_bridge.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/ovl_Bg_Gjyo_Bridge_reloc.o (.rodata)
        _ovl_Bg_Gjyo_BridgeSegmentRoDataEnd = .;
    _ovl_Bg_Gjyo_BridgeSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Gjyo_BridgeSegmentRoDataEnd - _ovl_Bg_Gjyo_BridgeSegmentRoDataStart );
        _ovl_Bg_Gjyo_BridgeSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/z_bg_gjyo_bridge.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/ovl_Bg_Gjyo_Bridge_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Gjyo_BridgeSegmentSDataEnd = .;
        _ovl_Bg_Gjyo_BridgeSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/z_bg_gjyo_bridge.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/ovl_Bg_Gjyo_Bridge_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Gjyo_BridgeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Gjyo_BridgeSegmentOvlEnd - _ovl_Bg_Gjyo_BridgeSegmentTextStart );
    _ovl_Bg_Gjyo_BridgeSegmentRomEnd = _RomSize;

    ..ovl_Bg_Gjyo_Bridge.bss ADDR(..ovl_Bg_Gjyo_Bridge) + SIZEOF(..ovl_Bg_Gjyo_Bridge) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Gjyo_BridgeSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/z_bg_gjyo_bridge.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/ovl_Bg_Gjyo_Bridge_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/z_bg_gjyo_bridge.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/ovl_Bg_Gjyo_Bridge_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/z_bg_gjyo_bridge.o (.bss)
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/ovl_Bg_Gjyo_Bridge_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/z_bg_gjyo_bridge.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Gjyo_Bridge/ovl_Bg_Gjyo_Bridge_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Gjyo_BridgeSegmentBssEnd = .;
        _ovl_Bg_Gjyo_BridgeSegmentEnd = .;
    }
    _ovl_Bg_Gjyo_BridgeSegmentBssSize = ABSOLUTE( _ovl_Bg_Gjyo_BridgeSegmentBssEnd - _ovl_Bg_Gjyo_BridgeSegmentBssStart );

    _ovl_Bg_Gnd_DarkmeiroSegmentRomStart = _RomSize;
    ..ovl_Bg_Gnd_Darkmeiro : AT(_RomSize)
    {
        _ovl_Bg_Gnd_DarkmeiroSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_DarkmeiroSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/z_bg_gnd_darkmeiro.o (.text)
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/ovl_Bg_Gnd_Darkmeiro_reloc.o (.text)
        _ovl_Bg_Gnd_DarkmeiroSegmentTextEnd = .;
    _ovl_Bg_Gnd_DarkmeiroSegmentTextSize = ABSOLUTE( _ovl_Bg_Gnd_DarkmeiroSegmentTextEnd - _ovl_Bg_Gnd_DarkmeiroSegmentTextStart );
        _ovl_Bg_Gnd_DarkmeiroSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/z_bg_gnd_darkmeiro.o (.data)
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/ovl_Bg_Gnd_Darkmeiro_reloc.o (.data)
        _ovl_Bg_Gnd_DarkmeiroSegmentDataEnd = .;
    _ovl_Bg_Gnd_DarkmeiroSegmentDataSize = ABSOLUTE( _ovl_Bg_Gnd_DarkmeiroSegmentDataEnd - _ovl_Bg_Gnd_DarkmeiroSegmentDataStart );
        _ovl_Bg_Gnd_DarkmeiroSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/z_bg_gnd_darkmeiro.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/ovl_Bg_Gnd_Darkmeiro_reloc.o (.rodata)
        _ovl_Bg_Gnd_DarkmeiroSegmentRoDataEnd = .;
    _ovl_Bg_Gnd_DarkmeiroSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Gnd_DarkmeiroSegmentRoDataEnd - _ovl_Bg_Gnd_DarkmeiroSegmentRoDataStart );
        _ovl_Bg_Gnd_DarkmeiroSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/z_bg_gnd_darkmeiro.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/ovl_Bg_Gnd_Darkmeiro_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_DarkmeiroSegmentSDataEnd = .;
        _ovl_Bg_Gnd_DarkmeiroSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/z_bg_gnd_darkmeiro.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/ovl_Bg_Gnd_Darkmeiro_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_DarkmeiroSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Gnd_DarkmeiroSegmentOvlEnd - _ovl_Bg_Gnd_DarkmeiroSegmentTextStart );
    _ovl_Bg_Gnd_DarkmeiroSegmentRomEnd = _RomSize;

    ..ovl_Bg_Gnd_Darkmeiro.bss ADDR(..ovl_Bg_Gnd_Darkmeiro) + SIZEOF(..ovl_Bg_Gnd_Darkmeiro) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_DarkmeiroSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/z_bg_gnd_darkmeiro.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/ovl_Bg_Gnd_Darkmeiro_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/z_bg_gnd_darkmeiro.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/ovl_Bg_Gnd_Darkmeiro_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/z_bg_gnd_darkmeiro.o (.bss)
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/ovl_Bg_Gnd_Darkmeiro_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/z_bg_gnd_darkmeiro.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Gnd_Darkmeiro/ovl_Bg_Gnd_Darkmeiro_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_DarkmeiroSegmentBssEnd = .;
        _ovl_Bg_Gnd_DarkmeiroSegmentEnd = .;
    }
    _ovl_Bg_Gnd_DarkmeiroSegmentBssSize = ABSOLUTE( _ovl_Bg_Gnd_DarkmeiroSegmentBssEnd - _ovl_Bg_Gnd_DarkmeiroSegmentBssStart );

    _ovl_Bg_Gnd_FiremeiroSegmentRomStart = _RomSize;
    ..ovl_Bg_Gnd_Firemeiro : AT(_RomSize)
    {
        _ovl_Bg_Gnd_FiremeiroSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_FiremeiroSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Firemeiro/z_bg_gnd_firemeiro.o (.text)
            build/data/overlays/actors/z_bg_gnd_firemeiro.data.o (.text)
            build/data/overlays/actors/z_bg_gnd_firemeiro.reloc.o (.text)
        _ovl_Bg_Gnd_FiremeiroSegmentTextEnd = .;
    _ovl_Bg_Gnd_FiremeiroSegmentTextSize = ABSOLUTE( _ovl_Bg_Gnd_FiremeiroSegmentTextEnd - _ovl_Bg_Gnd_FiremeiroSegmentTextStart );
        _ovl_Bg_Gnd_FiremeiroSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Firemeiro/z_bg_gnd_firemeiro.o (.data)
            build/data/overlays/actors/z_bg_gnd_firemeiro.data.o (.data)
            build/data/overlays/actors/z_bg_gnd_firemeiro.reloc.o (.data)
        _ovl_Bg_Gnd_FiremeiroSegmentDataEnd = .;
    _ovl_Bg_Gnd_FiremeiroSegmentDataSize = ABSOLUTE( _ovl_Bg_Gnd_FiremeiroSegmentDataEnd - _ovl_Bg_Gnd_FiremeiroSegmentDataStart );
        _ovl_Bg_Gnd_FiremeiroSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Firemeiro/z_bg_gnd_firemeiro.o (.rodata)
            build/data/overlays/actors/z_bg_gnd_firemeiro.data.o (.rodata)
            build/data/overlays/actors/z_bg_gnd_firemeiro.reloc.o (.rodata)
        _ovl_Bg_Gnd_FiremeiroSegmentRoDataEnd = .;
    _ovl_Bg_Gnd_FiremeiroSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Gnd_FiremeiroSegmentRoDataEnd - _ovl_Bg_Gnd_FiremeiroSegmentRoDataStart );
        _ovl_Bg_Gnd_FiremeiroSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Firemeiro/z_bg_gnd_firemeiro.o (.sdata)
            build/data/overlays/actors/z_bg_gnd_firemeiro.data.o (.sdata)
            build/data/overlays/actors/z_bg_gnd_firemeiro.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_FiremeiroSegmentSDataEnd = .;
        _ovl_Bg_Gnd_FiremeiroSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Firemeiro/z_bg_gnd_firemeiro.o (.ovl)
            build/data/overlays/actors/z_bg_gnd_firemeiro.data.o (.ovl)
            build/data/overlays/actors/z_bg_gnd_firemeiro.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_FiremeiroSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Gnd_FiremeiroSegmentOvlEnd - _ovl_Bg_Gnd_FiremeiroSegmentTextStart );
    _ovl_Bg_Gnd_FiremeiroSegmentRomEnd = _RomSize;

    ..ovl_Bg_Gnd_Firemeiro.bss ADDR(..ovl_Bg_Gnd_Firemeiro) + SIZEOF(..ovl_Bg_Gnd_Firemeiro) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_FiremeiroSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Firemeiro/z_bg_gnd_firemeiro.o (.sbss)
            build/data/overlays/actors/z_bg_gnd_firemeiro.data.o (.sbss)
            build/data/overlays/actors/z_bg_gnd_firemeiro.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Gnd_Firemeiro/z_bg_gnd_firemeiro.o (.scommon)
            build/data/overlays/actors/z_bg_gnd_firemeiro.data.o (.scommon)
            build/data/overlays/actors/z_bg_gnd_firemeiro.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Gnd_Firemeiro/z_bg_gnd_firemeiro.o (.bss)
            build/data/overlays/actors/z_bg_gnd_firemeiro.data.o (.bss)
            build/data/overlays/actors/z_bg_gnd_firemeiro.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Gnd_Firemeiro/z_bg_gnd_firemeiro.o (COMMON)
            build/data/overlays/actors/z_bg_gnd_firemeiro.data.o (COMMON)
            build/data/overlays/actors/z_bg_gnd_firemeiro.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_FiremeiroSegmentBssEnd = .;
        _ovl_Bg_Gnd_FiremeiroSegmentEnd = .;
    }
    _ovl_Bg_Gnd_FiremeiroSegmentBssSize = ABSOLUTE( _ovl_Bg_Gnd_FiremeiroSegmentBssEnd - _ovl_Bg_Gnd_FiremeiroSegmentBssStart );

    _ovl_Bg_Gnd_IceblockSegmentRomStart = _RomSize;
    ..ovl_Bg_Gnd_Iceblock : AT(_RomSize)
    {
        _ovl_Bg_Gnd_IceblockSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_IceblockSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Iceblock/z_bg_gnd_iceblock.o (.text)
            build/data/overlays/actors/z_bg_gnd_iceblock.data.o (.text)
            build/data/overlays/actors/z_bg_gnd_iceblock.rodata.o (.text)
            build/data/overlays/actors/z_bg_gnd_iceblock.bss.o (.text)
            build/data/overlays/actors/z_bg_gnd_iceblock.reloc.o (.text)
        _ovl_Bg_Gnd_IceblockSegmentTextEnd = .;
    _ovl_Bg_Gnd_IceblockSegmentTextSize = ABSOLUTE( _ovl_Bg_Gnd_IceblockSegmentTextEnd - _ovl_Bg_Gnd_IceblockSegmentTextStart );
        _ovl_Bg_Gnd_IceblockSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Iceblock/z_bg_gnd_iceblock.o (.data)
            build/data/overlays/actors/z_bg_gnd_iceblock.data.o (.data)
            build/data/overlays/actors/z_bg_gnd_iceblock.rodata.o (.data)
            build/data/overlays/actors/z_bg_gnd_iceblock.bss.o (.data)
            build/data/overlays/actors/z_bg_gnd_iceblock.reloc.o (.data)
        _ovl_Bg_Gnd_IceblockSegmentDataEnd = .;
    _ovl_Bg_Gnd_IceblockSegmentDataSize = ABSOLUTE( _ovl_Bg_Gnd_IceblockSegmentDataEnd - _ovl_Bg_Gnd_IceblockSegmentDataStart );
        _ovl_Bg_Gnd_IceblockSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Iceblock/z_bg_gnd_iceblock.o (.rodata)
            build/data/overlays/actors/z_bg_gnd_iceblock.data.o (.rodata)
            build/data/overlays/actors/z_bg_gnd_iceblock.rodata.o (.rodata)
            build/data/overlays/actors/z_bg_gnd_iceblock.bss.o (.rodata)
            build/data/overlays/actors/z_bg_gnd_iceblock.reloc.o (.rodata)
        _ovl_Bg_Gnd_IceblockSegmentRoDataEnd = .;
    _ovl_Bg_Gnd_IceblockSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Gnd_IceblockSegmentRoDataEnd - _ovl_Bg_Gnd_IceblockSegmentRoDataStart );
        _ovl_Bg_Gnd_IceblockSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Iceblock/z_bg_gnd_iceblock.o (.sdata)
            build/data/overlays/actors/z_bg_gnd_iceblock.data.o (.sdata)
            build/data/overlays/actors/z_bg_gnd_iceblock.rodata.o (.sdata)
            build/data/overlays/actors/z_bg_gnd_iceblock.bss.o (.sdata)
            build/data/overlays/actors/z_bg_gnd_iceblock.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_IceblockSegmentSDataEnd = .;
        _ovl_Bg_Gnd_IceblockSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Iceblock/z_bg_gnd_iceblock.o (.ovl)
            build/data/overlays/actors/z_bg_gnd_iceblock.data.o (.ovl)
            build/data/overlays/actors/z_bg_gnd_iceblock.rodata.o (.ovl)
            build/data/overlays/actors/z_bg_gnd_iceblock.bss.o (.ovl)
            build/data/overlays/actors/z_bg_gnd_iceblock.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_IceblockSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Gnd_IceblockSegmentOvlEnd - _ovl_Bg_Gnd_IceblockSegmentTextStart );
    _ovl_Bg_Gnd_IceblockSegmentRomEnd = _RomSize;

    ..ovl_Bg_Gnd_Iceblock.bss ADDR(..ovl_Bg_Gnd_Iceblock) + SIZEOF(..ovl_Bg_Gnd_Iceblock) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_IceblockSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Iceblock/z_bg_gnd_iceblock.o (.sbss)
            build/data/overlays/actors/z_bg_gnd_iceblock.data.o (.sbss)
            build/data/overlays/actors/z_bg_gnd_iceblock.rodata.o (.sbss)
            build/data/overlays/actors/z_bg_gnd_iceblock.bss.o (.sbss)
            build/data/overlays/actors/z_bg_gnd_iceblock.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Gnd_Iceblock/z_bg_gnd_iceblock.o (.scommon)
            build/data/overlays/actors/z_bg_gnd_iceblock.data.o (.scommon)
            build/data/overlays/actors/z_bg_gnd_iceblock.rodata.o (.scommon)
            build/data/overlays/actors/z_bg_gnd_iceblock.bss.o (.scommon)
            build/data/overlays/actors/z_bg_gnd_iceblock.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Gnd_Iceblock/z_bg_gnd_iceblock.o (.bss)
            build/data/overlays/actors/z_bg_gnd_iceblock.data.o (.bss)
            build/data/overlays/actors/z_bg_gnd_iceblock.rodata.o (.bss)
            build/data/overlays/actors/z_bg_gnd_iceblock.bss.o (.bss)
            build/data/overlays/actors/z_bg_gnd_iceblock.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Gnd_Iceblock/z_bg_gnd_iceblock.o (COMMON)
            build/data/overlays/actors/z_bg_gnd_iceblock.data.o (COMMON)
            build/data/overlays/actors/z_bg_gnd_iceblock.rodata.o (COMMON)
            build/data/overlays/actors/z_bg_gnd_iceblock.bss.o (COMMON)
            build/data/overlays/actors/z_bg_gnd_iceblock.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_IceblockSegmentBssEnd = .;
        _ovl_Bg_Gnd_IceblockSegmentEnd = .;
    }
    _ovl_Bg_Gnd_IceblockSegmentBssSize = ABSOLUTE( _ovl_Bg_Gnd_IceblockSegmentBssEnd - _ovl_Bg_Gnd_IceblockSegmentBssStart );

    _ovl_Bg_Gnd_NisekabeSegmentRomStart = _RomSize;
    ..ovl_Bg_Gnd_Nisekabe : AT(_RomSize)
    {
        _ovl_Bg_Gnd_NisekabeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_NisekabeSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/z_bg_gnd_nisekabe.o (.text)
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/ovl_Bg_Gnd_Nisekabe_reloc.o (.text)
        _ovl_Bg_Gnd_NisekabeSegmentTextEnd = .;
    _ovl_Bg_Gnd_NisekabeSegmentTextSize = ABSOLUTE( _ovl_Bg_Gnd_NisekabeSegmentTextEnd - _ovl_Bg_Gnd_NisekabeSegmentTextStart );
        _ovl_Bg_Gnd_NisekabeSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/z_bg_gnd_nisekabe.o (.data)
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/ovl_Bg_Gnd_Nisekabe_reloc.o (.data)
        _ovl_Bg_Gnd_NisekabeSegmentDataEnd = .;
    _ovl_Bg_Gnd_NisekabeSegmentDataSize = ABSOLUTE( _ovl_Bg_Gnd_NisekabeSegmentDataEnd - _ovl_Bg_Gnd_NisekabeSegmentDataStart );
        _ovl_Bg_Gnd_NisekabeSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/z_bg_gnd_nisekabe.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/ovl_Bg_Gnd_Nisekabe_reloc.o (.rodata)
        _ovl_Bg_Gnd_NisekabeSegmentRoDataEnd = .;
    _ovl_Bg_Gnd_NisekabeSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Gnd_NisekabeSegmentRoDataEnd - _ovl_Bg_Gnd_NisekabeSegmentRoDataStart );
        _ovl_Bg_Gnd_NisekabeSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/z_bg_gnd_nisekabe.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/ovl_Bg_Gnd_Nisekabe_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_NisekabeSegmentSDataEnd = .;
        _ovl_Bg_Gnd_NisekabeSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/z_bg_gnd_nisekabe.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/ovl_Bg_Gnd_Nisekabe_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_NisekabeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Gnd_NisekabeSegmentOvlEnd - _ovl_Bg_Gnd_NisekabeSegmentTextStart );
    _ovl_Bg_Gnd_NisekabeSegmentRomEnd = _RomSize;

    ..ovl_Bg_Gnd_Nisekabe.bss ADDR(..ovl_Bg_Gnd_Nisekabe) + SIZEOF(..ovl_Bg_Gnd_Nisekabe) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_NisekabeSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/z_bg_gnd_nisekabe.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/ovl_Bg_Gnd_Nisekabe_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/z_bg_gnd_nisekabe.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/ovl_Bg_Gnd_Nisekabe_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/z_bg_gnd_nisekabe.o (.bss)
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/ovl_Bg_Gnd_Nisekabe_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/z_bg_gnd_nisekabe.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Gnd_Nisekabe/ovl_Bg_Gnd_Nisekabe_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_NisekabeSegmentBssEnd = .;
        _ovl_Bg_Gnd_NisekabeSegmentEnd = .;
    }
    _ovl_Bg_Gnd_NisekabeSegmentBssSize = ABSOLUTE( _ovl_Bg_Gnd_NisekabeSegmentBssEnd - _ovl_Bg_Gnd_NisekabeSegmentBssStart );

    _ovl_Bg_Gnd_SoulmeiroSegmentRomStart = _RomSize;
    ..ovl_Bg_Gnd_Soulmeiro : AT(_RomSize)
    {
        _ovl_Bg_Gnd_SoulmeiroSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_SoulmeiroSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/z_bg_gnd_soulmeiro.o (.text)
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/ovl_Bg_Gnd_Soulmeiro_reloc.o (.text)
        _ovl_Bg_Gnd_SoulmeiroSegmentTextEnd = .;
    _ovl_Bg_Gnd_SoulmeiroSegmentTextSize = ABSOLUTE( _ovl_Bg_Gnd_SoulmeiroSegmentTextEnd - _ovl_Bg_Gnd_SoulmeiroSegmentTextStart );
        _ovl_Bg_Gnd_SoulmeiroSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/z_bg_gnd_soulmeiro.o (.data)
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/ovl_Bg_Gnd_Soulmeiro_reloc.o (.data)
        _ovl_Bg_Gnd_SoulmeiroSegmentDataEnd = .;
    _ovl_Bg_Gnd_SoulmeiroSegmentDataSize = ABSOLUTE( _ovl_Bg_Gnd_SoulmeiroSegmentDataEnd - _ovl_Bg_Gnd_SoulmeiroSegmentDataStart );
        _ovl_Bg_Gnd_SoulmeiroSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/z_bg_gnd_soulmeiro.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/ovl_Bg_Gnd_Soulmeiro_reloc.o (.rodata)
        _ovl_Bg_Gnd_SoulmeiroSegmentRoDataEnd = .;
    _ovl_Bg_Gnd_SoulmeiroSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Gnd_SoulmeiroSegmentRoDataEnd - _ovl_Bg_Gnd_SoulmeiroSegmentRoDataStart );
        _ovl_Bg_Gnd_SoulmeiroSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/z_bg_gnd_soulmeiro.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/ovl_Bg_Gnd_Soulmeiro_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_SoulmeiroSegmentSDataEnd = .;
        _ovl_Bg_Gnd_SoulmeiroSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/z_bg_gnd_soulmeiro.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/ovl_Bg_Gnd_Soulmeiro_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_SoulmeiroSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Gnd_SoulmeiroSegmentOvlEnd - _ovl_Bg_Gnd_SoulmeiroSegmentTextStart );
    _ovl_Bg_Gnd_SoulmeiroSegmentRomEnd = _RomSize;

    ..ovl_Bg_Gnd_Soulmeiro.bss ADDR(..ovl_Bg_Gnd_Soulmeiro) + SIZEOF(..ovl_Bg_Gnd_Soulmeiro) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_SoulmeiroSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/z_bg_gnd_soulmeiro.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/ovl_Bg_Gnd_Soulmeiro_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/z_bg_gnd_soulmeiro.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/ovl_Bg_Gnd_Soulmeiro_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/z_bg_gnd_soulmeiro.o (.bss)
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/ovl_Bg_Gnd_Soulmeiro_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/z_bg_gnd_soulmeiro.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Gnd_Soulmeiro/ovl_Bg_Gnd_Soulmeiro_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Gnd_SoulmeiroSegmentBssEnd = .;
        _ovl_Bg_Gnd_SoulmeiroSegmentEnd = .;
    }
    _ovl_Bg_Gnd_SoulmeiroSegmentBssSize = ABSOLUTE( _ovl_Bg_Gnd_SoulmeiroSegmentBssEnd - _ovl_Bg_Gnd_SoulmeiroSegmentBssStart );

    _ovl_Bg_HakaSegmentRomStart = _RomSize;
    ..ovl_Bg_Haka : AT(_RomSize)
    {
        _ovl_Bg_HakaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_HakaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Haka/z_bg_haka.o (.text)
            build/src/overlays/actors/ovl_Bg_Haka/ovl_Bg_Haka_reloc.o (.text)
        _ovl_Bg_HakaSegmentTextEnd = .;
    _ovl_Bg_HakaSegmentTextSize = ABSOLUTE( _ovl_Bg_HakaSegmentTextEnd - _ovl_Bg_HakaSegmentTextStart );
        _ovl_Bg_HakaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka/z_bg_haka.o (.data)
            build/src/overlays/actors/ovl_Bg_Haka/ovl_Bg_Haka_reloc.o (.data)
        _ovl_Bg_HakaSegmentDataEnd = .;
    _ovl_Bg_HakaSegmentDataSize = ABSOLUTE( _ovl_Bg_HakaSegmentDataEnd - _ovl_Bg_HakaSegmentDataStart );
        _ovl_Bg_HakaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka/z_bg_haka.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Haka/ovl_Bg_Haka_reloc.o (.rodata)
        _ovl_Bg_HakaSegmentRoDataEnd = .;
    _ovl_Bg_HakaSegmentRoDataSize = ABSOLUTE( _ovl_Bg_HakaSegmentRoDataEnd - _ovl_Bg_HakaSegmentRoDataStart );
        _ovl_Bg_HakaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka/z_bg_haka.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Haka/ovl_Bg_Haka_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_HakaSegmentSDataEnd = .;
        _ovl_Bg_HakaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Haka/z_bg_haka.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Haka/ovl_Bg_Haka_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_HakaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_HakaSegmentOvlEnd - _ovl_Bg_HakaSegmentTextStart );
    _ovl_Bg_HakaSegmentRomEnd = _RomSize;

    ..ovl_Bg_Haka.bss ADDR(..ovl_Bg_Haka) + SIZEOF(..ovl_Bg_Haka) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_HakaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Haka/z_bg_haka.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka/ovl_Bg_Haka_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka/z_bg_haka.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka/ovl_Bg_Haka_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka/z_bg_haka.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka/ovl_Bg_Haka_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka/z_bg_haka.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Haka/ovl_Bg_Haka_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_HakaSegmentBssEnd = .;
        _ovl_Bg_HakaSegmentEnd = .;
    }
    _ovl_Bg_HakaSegmentBssSize = ABSOLUTE( _ovl_Bg_HakaSegmentBssEnd - _ovl_Bg_HakaSegmentBssStart );

    _ovl_Bg_Haka_GateSegmentRomStart = _RomSize;
    ..ovl_Bg_Haka_Gate : AT(_RomSize)
    {
        _ovl_Bg_Haka_GateSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Haka_GateSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Gate/z_bg_haka_gate.o (.text)
            build/data/overlays/actors/z_bg_haka_gate.data.o (.text)
            build/data/overlays/actors/z_bg_haka_gate.bss.o (.text)
            build/data/overlays/actors/z_bg_haka_gate.reloc.o (.text)
        _ovl_Bg_Haka_GateSegmentTextEnd = .;
    _ovl_Bg_Haka_GateSegmentTextSize = ABSOLUTE( _ovl_Bg_Haka_GateSegmentTextEnd - _ovl_Bg_Haka_GateSegmentTextStart );
        _ovl_Bg_Haka_GateSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Gate/z_bg_haka_gate.o (.data)
            build/data/overlays/actors/z_bg_haka_gate.data.o (.data)
            build/data/overlays/actors/z_bg_haka_gate.bss.o (.data)
            build/data/overlays/actors/z_bg_haka_gate.reloc.o (.data)
        _ovl_Bg_Haka_GateSegmentDataEnd = .;
    _ovl_Bg_Haka_GateSegmentDataSize = ABSOLUTE( _ovl_Bg_Haka_GateSegmentDataEnd - _ovl_Bg_Haka_GateSegmentDataStart );
        _ovl_Bg_Haka_GateSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Gate/z_bg_haka_gate.o (.rodata)
            build/data/overlays/actors/z_bg_haka_gate.data.o (.rodata)
            build/data/overlays/actors/z_bg_haka_gate.bss.o (.rodata)
            build/data/overlays/actors/z_bg_haka_gate.reloc.o (.rodata)
        _ovl_Bg_Haka_GateSegmentRoDataEnd = .;
    _ovl_Bg_Haka_GateSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Haka_GateSegmentRoDataEnd - _ovl_Bg_Haka_GateSegmentRoDataStart );
        _ovl_Bg_Haka_GateSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Gate/z_bg_haka_gate.o (.sdata)
            build/data/overlays/actors/z_bg_haka_gate.data.o (.sdata)
            build/data/overlays/actors/z_bg_haka_gate.bss.o (.sdata)
            build/data/overlays/actors/z_bg_haka_gate.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_GateSegmentSDataEnd = .;
        _ovl_Bg_Haka_GateSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Gate/z_bg_haka_gate.o (.ovl)
            build/data/overlays/actors/z_bg_haka_gate.data.o (.ovl)
            build/data/overlays/actors/z_bg_haka_gate.bss.o (.ovl)
            build/data/overlays/actors/z_bg_haka_gate.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_GateSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Haka_GateSegmentOvlEnd - _ovl_Bg_Haka_GateSegmentTextStart );
    _ovl_Bg_Haka_GateSegmentRomEnd = _RomSize;

    ..ovl_Bg_Haka_Gate.bss ADDR(..ovl_Bg_Haka_Gate) + SIZEOF(..ovl_Bg_Haka_Gate) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Haka_GateSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Gate/z_bg_haka_gate.o (.sbss)
            build/data/overlays/actors/z_bg_haka_gate.data.o (.sbss)
            build/data/overlays/actors/z_bg_haka_gate.bss.o (.sbss)
            build/data/overlays/actors/z_bg_haka_gate.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_Gate/z_bg_haka_gate.o (.scommon)
            build/data/overlays/actors/z_bg_haka_gate.data.o (.scommon)
            build/data/overlays/actors/z_bg_haka_gate.bss.o (.scommon)
            build/data/overlays/actors/z_bg_haka_gate.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_Gate/z_bg_haka_gate.o (.bss)
            build/data/overlays/actors/z_bg_haka_gate.data.o (.bss)
            build/data/overlays/actors/z_bg_haka_gate.bss.o (.bss)
            build/data/overlays/actors/z_bg_haka_gate.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_Gate/z_bg_haka_gate.o (COMMON)
            build/data/overlays/actors/z_bg_haka_gate.data.o (COMMON)
            build/data/overlays/actors/z_bg_haka_gate.bss.o (COMMON)
            build/data/overlays/actors/z_bg_haka_gate.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_GateSegmentBssEnd = .;
        _ovl_Bg_Haka_GateSegmentEnd = .;
    }
    _ovl_Bg_Haka_GateSegmentBssSize = ABSOLUTE( _ovl_Bg_Haka_GateSegmentBssEnd - _ovl_Bg_Haka_GateSegmentBssStart );

    _ovl_Bg_Haka_HutaSegmentRomStart = _RomSize;
    ..ovl_Bg_Haka_Huta : AT(_RomSize)
    {
        _ovl_Bg_Haka_HutaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Haka_HutaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Huta/z_bg_haka_huta.o (.text)
            build/data/overlays/actors/z_bg_haka_huta.data.o (.text)
            build/data/overlays/actors/z_bg_haka_huta.reloc.o (.text)
        _ovl_Bg_Haka_HutaSegmentTextEnd = .;
    _ovl_Bg_Haka_HutaSegmentTextSize = ABSOLUTE( _ovl_Bg_Haka_HutaSegmentTextEnd - _ovl_Bg_Haka_HutaSegmentTextStart );
        _ovl_Bg_Haka_HutaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Huta/z_bg_haka_huta.o (.data)
            build/data/overlays/actors/z_bg_haka_huta.data.o (.data)
            build/data/overlays/actors/z_bg_haka_huta.reloc.o (.data)
        _ovl_Bg_Haka_HutaSegmentDataEnd = .;
    _ovl_Bg_Haka_HutaSegmentDataSize = ABSOLUTE( _ovl_Bg_Haka_HutaSegmentDataEnd - _ovl_Bg_Haka_HutaSegmentDataStart );
        _ovl_Bg_Haka_HutaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Huta/z_bg_haka_huta.o (.rodata)
            build/data/overlays/actors/z_bg_haka_huta.data.o (.rodata)
            build/data/overlays/actors/z_bg_haka_huta.reloc.o (.rodata)
        _ovl_Bg_Haka_HutaSegmentRoDataEnd = .;
    _ovl_Bg_Haka_HutaSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Haka_HutaSegmentRoDataEnd - _ovl_Bg_Haka_HutaSegmentRoDataStart );
        _ovl_Bg_Haka_HutaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Huta/z_bg_haka_huta.o (.sdata)
            build/data/overlays/actors/z_bg_haka_huta.data.o (.sdata)
            build/data/overlays/actors/z_bg_haka_huta.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_HutaSegmentSDataEnd = .;
        _ovl_Bg_Haka_HutaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Huta/z_bg_haka_huta.o (.ovl)
            build/data/overlays/actors/z_bg_haka_huta.data.o (.ovl)
            build/data/overlays/actors/z_bg_haka_huta.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_HutaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Haka_HutaSegmentOvlEnd - _ovl_Bg_Haka_HutaSegmentTextStart );
    _ovl_Bg_Haka_HutaSegmentRomEnd = _RomSize;

    ..ovl_Bg_Haka_Huta.bss ADDR(..ovl_Bg_Haka_Huta) + SIZEOF(..ovl_Bg_Haka_Huta) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Haka_HutaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Huta/z_bg_haka_huta.o (.sbss)
            build/data/overlays/actors/z_bg_haka_huta.data.o (.sbss)
            build/data/overlays/actors/z_bg_haka_huta.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_Huta/z_bg_haka_huta.o (.scommon)
            build/data/overlays/actors/z_bg_haka_huta.data.o (.scommon)
            build/data/overlays/actors/z_bg_haka_huta.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_Huta/z_bg_haka_huta.o (.bss)
            build/data/overlays/actors/z_bg_haka_huta.data.o (.bss)
            build/data/overlays/actors/z_bg_haka_huta.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_Huta/z_bg_haka_huta.o (COMMON)
            build/data/overlays/actors/z_bg_haka_huta.data.o (COMMON)
            build/data/overlays/actors/z_bg_haka_huta.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_HutaSegmentBssEnd = .;
        _ovl_Bg_Haka_HutaSegmentEnd = .;
    }
    _ovl_Bg_Haka_HutaSegmentBssSize = ABSOLUTE( _ovl_Bg_Haka_HutaSegmentBssEnd - _ovl_Bg_Haka_HutaSegmentBssStart );

    _ovl_Bg_Haka_MeganeSegmentRomStart = _RomSize;
    ..ovl_Bg_Haka_Megane : AT(_RomSize)
    {
        _ovl_Bg_Haka_MeganeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Haka_MeganeSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Megane/z_bg_haka_megane.o (.text)
            build/src/overlays/actors/ovl_Bg_Haka_Megane/ovl_Bg_Haka_Megane_reloc.o (.text)
        _ovl_Bg_Haka_MeganeSegmentTextEnd = .;
    _ovl_Bg_Haka_MeganeSegmentTextSize = ABSOLUTE( _ovl_Bg_Haka_MeganeSegmentTextEnd - _ovl_Bg_Haka_MeganeSegmentTextStart );
        _ovl_Bg_Haka_MeganeSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Megane/z_bg_haka_megane.o (.data)
            build/src/overlays/actors/ovl_Bg_Haka_Megane/ovl_Bg_Haka_Megane_reloc.o (.data)
        _ovl_Bg_Haka_MeganeSegmentDataEnd = .;
    _ovl_Bg_Haka_MeganeSegmentDataSize = ABSOLUTE( _ovl_Bg_Haka_MeganeSegmentDataEnd - _ovl_Bg_Haka_MeganeSegmentDataStart );
        _ovl_Bg_Haka_MeganeSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Megane/z_bg_haka_megane.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Haka_Megane/ovl_Bg_Haka_Megane_reloc.o (.rodata)
        _ovl_Bg_Haka_MeganeSegmentRoDataEnd = .;
    _ovl_Bg_Haka_MeganeSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Haka_MeganeSegmentRoDataEnd - _ovl_Bg_Haka_MeganeSegmentRoDataStart );
        _ovl_Bg_Haka_MeganeSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Megane/z_bg_haka_megane.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Haka_Megane/ovl_Bg_Haka_Megane_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_MeganeSegmentSDataEnd = .;
        _ovl_Bg_Haka_MeganeSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Megane/z_bg_haka_megane.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Haka_Megane/ovl_Bg_Haka_Megane_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_MeganeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Haka_MeganeSegmentOvlEnd - _ovl_Bg_Haka_MeganeSegmentTextStart );
    _ovl_Bg_Haka_MeganeSegmentRomEnd = _RomSize;

    ..ovl_Bg_Haka_Megane.bss ADDR(..ovl_Bg_Haka_Megane) + SIZEOF(..ovl_Bg_Haka_Megane) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Haka_MeganeSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Megane/z_bg_haka_megane.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_Megane/ovl_Bg_Haka_Megane_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_Megane/z_bg_haka_megane.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_Megane/ovl_Bg_Haka_Megane_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_Megane/z_bg_haka_megane.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_Megane/ovl_Bg_Haka_Megane_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_Megane/z_bg_haka_megane.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Haka_Megane/ovl_Bg_Haka_Megane_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_MeganeSegmentBssEnd = .;
        _ovl_Bg_Haka_MeganeSegmentEnd = .;
    }
    _ovl_Bg_Haka_MeganeSegmentBssSize = ABSOLUTE( _ovl_Bg_Haka_MeganeSegmentBssEnd - _ovl_Bg_Haka_MeganeSegmentBssStart );

    _ovl_Bg_Haka_MeganeBGSegmentRomStart = _RomSize;
    ..ovl_Bg_Haka_MeganeBG : AT(_RomSize)
    {
        _ovl_Bg_Haka_MeganeBGSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Haka_MeganeBGSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/z_bg_haka_meganebg.o (.text)
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/ovl_Bg_Haka_MeganeBG_reloc.o (.text)
        _ovl_Bg_Haka_MeganeBGSegmentTextEnd = .;
    _ovl_Bg_Haka_MeganeBGSegmentTextSize = ABSOLUTE( _ovl_Bg_Haka_MeganeBGSegmentTextEnd - _ovl_Bg_Haka_MeganeBGSegmentTextStart );
        _ovl_Bg_Haka_MeganeBGSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/z_bg_haka_meganebg.o (.data)
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/ovl_Bg_Haka_MeganeBG_reloc.o (.data)
        _ovl_Bg_Haka_MeganeBGSegmentDataEnd = .;
    _ovl_Bg_Haka_MeganeBGSegmentDataSize = ABSOLUTE( _ovl_Bg_Haka_MeganeBGSegmentDataEnd - _ovl_Bg_Haka_MeganeBGSegmentDataStart );
        _ovl_Bg_Haka_MeganeBGSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/z_bg_haka_meganebg.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/ovl_Bg_Haka_MeganeBG_reloc.o (.rodata)
        _ovl_Bg_Haka_MeganeBGSegmentRoDataEnd = .;
    _ovl_Bg_Haka_MeganeBGSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Haka_MeganeBGSegmentRoDataEnd - _ovl_Bg_Haka_MeganeBGSegmentRoDataStart );
        _ovl_Bg_Haka_MeganeBGSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/z_bg_haka_meganebg.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/ovl_Bg_Haka_MeganeBG_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_MeganeBGSegmentSDataEnd = .;
        _ovl_Bg_Haka_MeganeBGSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/z_bg_haka_meganebg.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/ovl_Bg_Haka_MeganeBG_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_MeganeBGSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Haka_MeganeBGSegmentOvlEnd - _ovl_Bg_Haka_MeganeBGSegmentTextStart );
    _ovl_Bg_Haka_MeganeBGSegmentRomEnd = _RomSize;

    ..ovl_Bg_Haka_MeganeBG.bss ADDR(..ovl_Bg_Haka_MeganeBG) + SIZEOF(..ovl_Bg_Haka_MeganeBG) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Haka_MeganeBGSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/z_bg_haka_meganebg.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/ovl_Bg_Haka_MeganeBG_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/z_bg_haka_meganebg.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/ovl_Bg_Haka_MeganeBG_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/z_bg_haka_meganebg.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/ovl_Bg_Haka_MeganeBG_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/z_bg_haka_meganebg.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Haka_MeganeBG/ovl_Bg_Haka_MeganeBG_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_MeganeBGSegmentBssEnd = .;
        _ovl_Bg_Haka_MeganeBGSegmentEnd = .;
    }
    _ovl_Bg_Haka_MeganeBGSegmentBssSize = ABSOLUTE( _ovl_Bg_Haka_MeganeBGSegmentBssEnd - _ovl_Bg_Haka_MeganeBGSegmentBssStart );

    _ovl_Bg_Haka_SgamiSegmentRomStart = _RomSize;
    ..ovl_Bg_Haka_Sgami : AT(_RomSize)
    {
        _ovl_Bg_Haka_SgamiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Haka_SgamiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Sgami/z_bg_haka_sgami.o (.text)
            build/data/overlays/actors/z_bg_haka_sgami.data.o (.text)
            build/data/overlays/actors/z_bg_haka_sgami.reloc.o (.text)
        _ovl_Bg_Haka_SgamiSegmentTextEnd = .;
    _ovl_Bg_Haka_SgamiSegmentTextSize = ABSOLUTE( _ovl_Bg_Haka_SgamiSegmentTextEnd - _ovl_Bg_Haka_SgamiSegmentTextStart );
        _ovl_Bg_Haka_SgamiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Sgami/z_bg_haka_sgami.o (.data)
            build/data/overlays/actors/z_bg_haka_sgami.data.o (.data)
            build/data/overlays/actors/z_bg_haka_sgami.reloc.o (.data)
        _ovl_Bg_Haka_SgamiSegmentDataEnd = .;
    _ovl_Bg_Haka_SgamiSegmentDataSize = ABSOLUTE( _ovl_Bg_Haka_SgamiSegmentDataEnd - _ovl_Bg_Haka_SgamiSegmentDataStart );
        _ovl_Bg_Haka_SgamiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Sgami/z_bg_haka_sgami.o (.rodata)
            build/data/overlays/actors/z_bg_haka_sgami.data.o (.rodata)
            build/data/overlays/actors/z_bg_haka_sgami.reloc.o (.rodata)
        _ovl_Bg_Haka_SgamiSegmentRoDataEnd = .;
    _ovl_Bg_Haka_SgamiSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Haka_SgamiSegmentRoDataEnd - _ovl_Bg_Haka_SgamiSegmentRoDataStart );
        _ovl_Bg_Haka_SgamiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Sgami/z_bg_haka_sgami.o (.sdata)
            build/data/overlays/actors/z_bg_haka_sgami.data.o (.sdata)
            build/data/overlays/actors/z_bg_haka_sgami.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_SgamiSegmentSDataEnd = .;
        _ovl_Bg_Haka_SgamiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Sgami/z_bg_haka_sgami.o (.ovl)
            build/data/overlays/actors/z_bg_haka_sgami.data.o (.ovl)
            build/data/overlays/actors/z_bg_haka_sgami.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_SgamiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Haka_SgamiSegmentOvlEnd - _ovl_Bg_Haka_SgamiSegmentTextStart );
    _ovl_Bg_Haka_SgamiSegmentRomEnd = _RomSize;

    ..ovl_Bg_Haka_Sgami.bss ADDR(..ovl_Bg_Haka_Sgami) + SIZEOF(..ovl_Bg_Haka_Sgami) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Haka_SgamiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Sgami/z_bg_haka_sgami.o (.sbss)
            build/data/overlays/actors/z_bg_haka_sgami.data.o (.sbss)
            build/data/overlays/actors/z_bg_haka_sgami.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_Sgami/z_bg_haka_sgami.o (.scommon)
            build/data/overlays/actors/z_bg_haka_sgami.data.o (.scommon)
            build/data/overlays/actors/z_bg_haka_sgami.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_Sgami/z_bg_haka_sgami.o (.bss)
            build/data/overlays/actors/z_bg_haka_sgami.data.o (.bss)
            build/data/overlays/actors/z_bg_haka_sgami.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_Sgami/z_bg_haka_sgami.o (COMMON)
            build/data/overlays/actors/z_bg_haka_sgami.data.o (COMMON)
            build/data/overlays/actors/z_bg_haka_sgami.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_SgamiSegmentBssEnd = .;
        _ovl_Bg_Haka_SgamiSegmentEnd = .;
    }
    _ovl_Bg_Haka_SgamiSegmentBssSize = ABSOLUTE( _ovl_Bg_Haka_SgamiSegmentBssEnd - _ovl_Bg_Haka_SgamiSegmentBssStart );

    _ovl_Bg_Haka_ShipSegmentRomStart = _RomSize;
    ..ovl_Bg_Haka_Ship : AT(_RomSize)
    {
        _ovl_Bg_Haka_ShipSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Haka_ShipSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Ship/z_bg_haka_ship.o (.text)
            build/data/overlays/actors/z_bg_haka_ship.data.o (.text)
            build/data/overlays/actors/z_bg_haka_ship.reloc.o (.text)
        _ovl_Bg_Haka_ShipSegmentTextEnd = .;
    _ovl_Bg_Haka_ShipSegmentTextSize = ABSOLUTE( _ovl_Bg_Haka_ShipSegmentTextEnd - _ovl_Bg_Haka_ShipSegmentTextStart );
        _ovl_Bg_Haka_ShipSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Ship/z_bg_haka_ship.o (.data)
            build/data/overlays/actors/z_bg_haka_ship.data.o (.data)
            build/data/overlays/actors/z_bg_haka_ship.reloc.o (.data)
        _ovl_Bg_Haka_ShipSegmentDataEnd = .;
    _ovl_Bg_Haka_ShipSegmentDataSize = ABSOLUTE( _ovl_Bg_Haka_ShipSegmentDataEnd - _ovl_Bg_Haka_ShipSegmentDataStart );
        _ovl_Bg_Haka_ShipSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Ship/z_bg_haka_ship.o (.rodata)
            build/data/overlays/actors/z_bg_haka_ship.data.o (.rodata)
            build/data/overlays/actors/z_bg_haka_ship.reloc.o (.rodata)
        _ovl_Bg_Haka_ShipSegmentRoDataEnd = .;
    _ovl_Bg_Haka_ShipSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Haka_ShipSegmentRoDataEnd - _ovl_Bg_Haka_ShipSegmentRoDataStart );
        _ovl_Bg_Haka_ShipSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Ship/z_bg_haka_ship.o (.sdata)
            build/data/overlays/actors/z_bg_haka_ship.data.o (.sdata)
            build/data/overlays/actors/z_bg_haka_ship.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_ShipSegmentSDataEnd = .;
        _ovl_Bg_Haka_ShipSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Ship/z_bg_haka_ship.o (.ovl)
            build/data/overlays/actors/z_bg_haka_ship.data.o (.ovl)
            build/data/overlays/actors/z_bg_haka_ship.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_ShipSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Haka_ShipSegmentOvlEnd - _ovl_Bg_Haka_ShipSegmentTextStart );
    _ovl_Bg_Haka_ShipSegmentRomEnd = _RomSize;

    ..ovl_Bg_Haka_Ship.bss ADDR(..ovl_Bg_Haka_Ship) + SIZEOF(..ovl_Bg_Haka_Ship) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Haka_ShipSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Ship/z_bg_haka_ship.o (.sbss)
            build/data/overlays/actors/z_bg_haka_ship.data.o (.sbss)
            build/data/overlays/actors/z_bg_haka_ship.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_Ship/z_bg_haka_ship.o (.scommon)
            build/data/overlays/actors/z_bg_haka_ship.data.o (.scommon)
            build/data/overlays/actors/z_bg_haka_ship.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_Ship/z_bg_haka_ship.o (.bss)
            build/data/overlays/actors/z_bg_haka_ship.data.o (.bss)
            build/data/overlays/actors/z_bg_haka_ship.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_Ship/z_bg_haka_ship.o (COMMON)
            build/data/overlays/actors/z_bg_haka_ship.data.o (COMMON)
            build/data/overlays/actors/z_bg_haka_ship.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_ShipSegmentBssEnd = .;
        _ovl_Bg_Haka_ShipSegmentEnd = .;
    }
    _ovl_Bg_Haka_ShipSegmentBssSize = ABSOLUTE( _ovl_Bg_Haka_ShipSegmentBssEnd - _ovl_Bg_Haka_ShipSegmentBssStart );

    _ovl_Bg_Haka_TrapSegmentRomStart = _RomSize;
    ..ovl_Bg_Haka_Trap : AT(_RomSize)
    {
        _ovl_Bg_Haka_TrapSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Haka_TrapSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Trap/z_bg_haka_trap.o (.text)
            build/src/overlays/actors/ovl_Bg_Haka_Trap/ovl_Bg_Haka_Trap_reloc.o (.text)
        _ovl_Bg_Haka_TrapSegmentTextEnd = .;
    _ovl_Bg_Haka_TrapSegmentTextSize = ABSOLUTE( _ovl_Bg_Haka_TrapSegmentTextEnd - _ovl_Bg_Haka_TrapSegmentTextStart );
        _ovl_Bg_Haka_TrapSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Trap/z_bg_haka_trap.o (.data)
            build/src/overlays/actors/ovl_Bg_Haka_Trap/ovl_Bg_Haka_Trap_reloc.o (.data)
        _ovl_Bg_Haka_TrapSegmentDataEnd = .;
    _ovl_Bg_Haka_TrapSegmentDataSize = ABSOLUTE( _ovl_Bg_Haka_TrapSegmentDataEnd - _ovl_Bg_Haka_TrapSegmentDataStart );
        _ovl_Bg_Haka_TrapSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Trap/z_bg_haka_trap.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Haka_Trap/ovl_Bg_Haka_Trap_reloc.o (.rodata)
        _ovl_Bg_Haka_TrapSegmentRoDataEnd = .;
    _ovl_Bg_Haka_TrapSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Haka_TrapSegmentRoDataEnd - _ovl_Bg_Haka_TrapSegmentRoDataStart );
        _ovl_Bg_Haka_TrapSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Trap/z_bg_haka_trap.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Haka_Trap/ovl_Bg_Haka_Trap_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_TrapSegmentSDataEnd = .;
        _ovl_Bg_Haka_TrapSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Trap/z_bg_haka_trap.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Haka_Trap/ovl_Bg_Haka_Trap_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_TrapSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Haka_TrapSegmentOvlEnd - _ovl_Bg_Haka_TrapSegmentTextStart );
    _ovl_Bg_Haka_TrapSegmentRomEnd = _RomSize;

    ..ovl_Bg_Haka_Trap.bss ADDR(..ovl_Bg_Haka_Trap) + SIZEOF(..ovl_Bg_Haka_Trap) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Haka_TrapSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Trap/z_bg_haka_trap.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_Trap/ovl_Bg_Haka_Trap_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_Trap/z_bg_haka_trap.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_Trap/ovl_Bg_Haka_Trap_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_Trap/z_bg_haka_trap.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_Trap/ovl_Bg_Haka_Trap_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_Trap/z_bg_haka_trap.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Haka_Trap/ovl_Bg_Haka_Trap_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_TrapSegmentBssEnd = .;
        _ovl_Bg_Haka_TrapSegmentEnd = .;
    }
    _ovl_Bg_Haka_TrapSegmentBssSize = ABSOLUTE( _ovl_Bg_Haka_TrapSegmentBssEnd - _ovl_Bg_Haka_TrapSegmentBssStart );

    _ovl_Bg_Haka_TuboSegmentRomStart = _RomSize;
    ..ovl_Bg_Haka_Tubo : AT(_RomSize)
    {
        _ovl_Bg_Haka_TuboSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Haka_TuboSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/z_bg_haka_tubo.o (.text)
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/ovl_Bg_Haka_Tubo_reloc.o (.text)
        _ovl_Bg_Haka_TuboSegmentTextEnd = .;
    _ovl_Bg_Haka_TuboSegmentTextSize = ABSOLUTE( _ovl_Bg_Haka_TuboSegmentTextEnd - _ovl_Bg_Haka_TuboSegmentTextStart );
        _ovl_Bg_Haka_TuboSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/z_bg_haka_tubo.o (.data)
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/ovl_Bg_Haka_Tubo_reloc.o (.data)
        _ovl_Bg_Haka_TuboSegmentDataEnd = .;
    _ovl_Bg_Haka_TuboSegmentDataSize = ABSOLUTE( _ovl_Bg_Haka_TuboSegmentDataEnd - _ovl_Bg_Haka_TuboSegmentDataStart );
        _ovl_Bg_Haka_TuboSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/z_bg_haka_tubo.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/ovl_Bg_Haka_Tubo_reloc.o (.rodata)
        _ovl_Bg_Haka_TuboSegmentRoDataEnd = .;
    _ovl_Bg_Haka_TuboSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Haka_TuboSegmentRoDataEnd - _ovl_Bg_Haka_TuboSegmentRoDataStart );
        _ovl_Bg_Haka_TuboSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/z_bg_haka_tubo.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/ovl_Bg_Haka_Tubo_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_TuboSegmentSDataEnd = .;
        _ovl_Bg_Haka_TuboSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/z_bg_haka_tubo.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/ovl_Bg_Haka_Tubo_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_TuboSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Haka_TuboSegmentOvlEnd - _ovl_Bg_Haka_TuboSegmentTextStart );
    _ovl_Bg_Haka_TuboSegmentRomEnd = _RomSize;

    ..ovl_Bg_Haka_Tubo.bss ADDR(..ovl_Bg_Haka_Tubo) + SIZEOF(..ovl_Bg_Haka_Tubo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Haka_TuboSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/z_bg_haka_tubo.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/ovl_Bg_Haka_Tubo_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/z_bg_haka_tubo.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/ovl_Bg_Haka_Tubo_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/z_bg_haka_tubo.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/ovl_Bg_Haka_Tubo_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/z_bg_haka_tubo.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Haka_Tubo/ovl_Bg_Haka_Tubo_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_TuboSegmentBssEnd = .;
        _ovl_Bg_Haka_TuboSegmentEnd = .;
    }
    _ovl_Bg_Haka_TuboSegmentBssSize = ABSOLUTE( _ovl_Bg_Haka_TuboSegmentBssEnd - _ovl_Bg_Haka_TuboSegmentBssStart );

    _ovl_Bg_Haka_WaterSegmentRomStart = _RomSize;
    ..ovl_Bg_Haka_Water : AT(_RomSize)
    {
        _ovl_Bg_Haka_WaterSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Haka_WaterSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Water/z_bg_haka_water.o (.text)
            build/src/overlays/actors/ovl_Bg_Haka_Water/ovl_Bg_Haka_Water_reloc.o (.text)
        _ovl_Bg_Haka_WaterSegmentTextEnd = .;
    _ovl_Bg_Haka_WaterSegmentTextSize = ABSOLUTE( _ovl_Bg_Haka_WaterSegmentTextEnd - _ovl_Bg_Haka_WaterSegmentTextStart );
        _ovl_Bg_Haka_WaterSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Water/z_bg_haka_water.o (.data)
            build/src/overlays/actors/ovl_Bg_Haka_Water/ovl_Bg_Haka_Water_reloc.o (.data)
        _ovl_Bg_Haka_WaterSegmentDataEnd = .;
    _ovl_Bg_Haka_WaterSegmentDataSize = ABSOLUTE( _ovl_Bg_Haka_WaterSegmentDataEnd - _ovl_Bg_Haka_WaterSegmentDataStart );
        _ovl_Bg_Haka_WaterSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Water/z_bg_haka_water.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Haka_Water/ovl_Bg_Haka_Water_reloc.o (.rodata)
        _ovl_Bg_Haka_WaterSegmentRoDataEnd = .;
    _ovl_Bg_Haka_WaterSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Haka_WaterSegmentRoDataEnd - _ovl_Bg_Haka_WaterSegmentRoDataStart );
        _ovl_Bg_Haka_WaterSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Water/z_bg_haka_water.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Haka_Water/ovl_Bg_Haka_Water_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_WaterSegmentSDataEnd = .;
        _ovl_Bg_Haka_WaterSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Water/z_bg_haka_water.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Haka_Water/ovl_Bg_Haka_Water_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_WaterSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Haka_WaterSegmentOvlEnd - _ovl_Bg_Haka_WaterSegmentTextStart );
    _ovl_Bg_Haka_WaterSegmentRomEnd = _RomSize;

    ..ovl_Bg_Haka_Water.bss ADDR(..ovl_Bg_Haka_Water) + SIZEOF(..ovl_Bg_Haka_Water) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Haka_WaterSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Water/z_bg_haka_water.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_Water/ovl_Bg_Haka_Water_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_Water/z_bg_haka_water.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_Water/ovl_Bg_Haka_Water_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_Water/z_bg_haka_water.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_Water/ovl_Bg_Haka_Water_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_Water/z_bg_haka_water.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Haka_Water/ovl_Bg_Haka_Water_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_WaterSegmentBssEnd = .;
        _ovl_Bg_Haka_WaterSegmentEnd = .;
    }
    _ovl_Bg_Haka_WaterSegmentBssSize = ABSOLUTE( _ovl_Bg_Haka_WaterSegmentBssEnd - _ovl_Bg_Haka_WaterSegmentBssStart );

    _ovl_Bg_Haka_ZouSegmentRomStart = _RomSize;
    ..ovl_Bg_Haka_Zou : AT(_RomSize)
    {
        _ovl_Bg_Haka_ZouSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Haka_ZouSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Zou/z_bg_haka_zou.o (.text)
            build/data/overlays/actors/z_bg_haka_zou.data.o (.text)
            build/data/overlays/actors/z_bg_haka_zou.reloc.o (.text)
        _ovl_Bg_Haka_ZouSegmentTextEnd = .;
    _ovl_Bg_Haka_ZouSegmentTextSize = ABSOLUTE( _ovl_Bg_Haka_ZouSegmentTextEnd - _ovl_Bg_Haka_ZouSegmentTextStart );
        _ovl_Bg_Haka_ZouSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Zou/z_bg_haka_zou.o (.data)
            build/data/overlays/actors/z_bg_haka_zou.data.o (.data)
            build/data/overlays/actors/z_bg_haka_zou.reloc.o (.data)
        _ovl_Bg_Haka_ZouSegmentDataEnd = .;
    _ovl_Bg_Haka_ZouSegmentDataSize = ABSOLUTE( _ovl_Bg_Haka_ZouSegmentDataEnd - _ovl_Bg_Haka_ZouSegmentDataStart );
        _ovl_Bg_Haka_ZouSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Zou/z_bg_haka_zou.o (.rodata)
            build/data/overlays/actors/z_bg_haka_zou.data.o (.rodata)
            build/data/overlays/actors/z_bg_haka_zou.reloc.o (.rodata)
        _ovl_Bg_Haka_ZouSegmentRoDataEnd = .;
    _ovl_Bg_Haka_ZouSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Haka_ZouSegmentRoDataEnd - _ovl_Bg_Haka_ZouSegmentRoDataStart );
        _ovl_Bg_Haka_ZouSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Zou/z_bg_haka_zou.o (.sdata)
            build/data/overlays/actors/z_bg_haka_zou.data.o (.sdata)
            build/data/overlays/actors/z_bg_haka_zou.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_ZouSegmentSDataEnd = .;
        _ovl_Bg_Haka_ZouSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Zou/z_bg_haka_zou.o (.ovl)
            build/data/overlays/actors/z_bg_haka_zou.data.o (.ovl)
            build/data/overlays/actors/z_bg_haka_zou.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_ZouSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Haka_ZouSegmentOvlEnd - _ovl_Bg_Haka_ZouSegmentTextStart );
    _ovl_Bg_Haka_ZouSegmentRomEnd = _RomSize;

    ..ovl_Bg_Haka_Zou.bss ADDR(..ovl_Bg_Haka_Zou) + SIZEOF(..ovl_Bg_Haka_Zou) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Haka_ZouSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Haka_Zou/z_bg_haka_zou.o (.sbss)
            build/data/overlays/actors/z_bg_haka_zou.data.o (.sbss)
            build/data/overlays/actors/z_bg_haka_zou.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Haka_Zou/z_bg_haka_zou.o (.scommon)
            build/data/overlays/actors/z_bg_haka_zou.data.o (.scommon)
            build/data/overlays/actors/z_bg_haka_zou.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Haka_Zou/z_bg_haka_zou.o (.bss)
            build/data/overlays/actors/z_bg_haka_zou.data.o (.bss)
            build/data/overlays/actors/z_bg_haka_zou.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Haka_Zou/z_bg_haka_zou.o (COMMON)
            build/data/overlays/actors/z_bg_haka_zou.data.o (COMMON)
            build/data/overlays/actors/z_bg_haka_zou.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Haka_ZouSegmentBssEnd = .;
        _ovl_Bg_Haka_ZouSegmentEnd = .;
    }
    _ovl_Bg_Haka_ZouSegmentBssSize = ABSOLUTE( _ovl_Bg_Haka_ZouSegmentBssEnd - _ovl_Bg_Haka_ZouSegmentBssStart );

    _ovl_Bg_Heavy_BlockSegmentRomStart = _RomSize;
    ..ovl_Bg_Heavy_Block : AT(_RomSize)
    {
        _ovl_Bg_Heavy_BlockSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Heavy_BlockSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Heavy_Block/z_bg_heavy_block.o (.text)
            build/src/overlays/actors/ovl_Bg_Heavy_Block/ovl_Bg_Heavy_Block_reloc.o (.text)
        _ovl_Bg_Heavy_BlockSegmentTextEnd = .;
    _ovl_Bg_Heavy_BlockSegmentTextSize = ABSOLUTE( _ovl_Bg_Heavy_BlockSegmentTextEnd - _ovl_Bg_Heavy_BlockSegmentTextStart );
        _ovl_Bg_Heavy_BlockSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Heavy_Block/z_bg_heavy_block.o (.data)
            build/src/overlays/actors/ovl_Bg_Heavy_Block/ovl_Bg_Heavy_Block_reloc.o (.data)
        _ovl_Bg_Heavy_BlockSegmentDataEnd = .;
    _ovl_Bg_Heavy_BlockSegmentDataSize = ABSOLUTE( _ovl_Bg_Heavy_BlockSegmentDataEnd - _ovl_Bg_Heavy_BlockSegmentDataStart );
        _ovl_Bg_Heavy_BlockSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Heavy_Block/z_bg_heavy_block.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Heavy_Block/ovl_Bg_Heavy_Block_reloc.o (.rodata)
        _ovl_Bg_Heavy_BlockSegmentRoDataEnd = .;
    _ovl_Bg_Heavy_BlockSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Heavy_BlockSegmentRoDataEnd - _ovl_Bg_Heavy_BlockSegmentRoDataStart );
        _ovl_Bg_Heavy_BlockSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Heavy_Block/z_bg_heavy_block.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Heavy_Block/ovl_Bg_Heavy_Block_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Heavy_BlockSegmentSDataEnd = .;
        _ovl_Bg_Heavy_BlockSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Heavy_Block/z_bg_heavy_block.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Heavy_Block/ovl_Bg_Heavy_Block_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Heavy_BlockSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Heavy_BlockSegmentOvlEnd - _ovl_Bg_Heavy_BlockSegmentTextStart );
    _ovl_Bg_Heavy_BlockSegmentRomEnd = _RomSize;

    ..ovl_Bg_Heavy_Block.bss ADDR(..ovl_Bg_Heavy_Block) + SIZEOF(..ovl_Bg_Heavy_Block) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Heavy_BlockSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Heavy_Block/z_bg_heavy_block.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Heavy_Block/ovl_Bg_Heavy_Block_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Heavy_Block/z_bg_heavy_block.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Heavy_Block/ovl_Bg_Heavy_Block_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Heavy_Block/z_bg_heavy_block.o (.bss)
            build/src/overlays/actors/ovl_Bg_Heavy_Block/ovl_Bg_Heavy_Block_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Heavy_Block/z_bg_heavy_block.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Heavy_Block/ovl_Bg_Heavy_Block_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Heavy_BlockSegmentBssEnd = .;
        _ovl_Bg_Heavy_BlockSegmentEnd = .;
    }
    _ovl_Bg_Heavy_BlockSegmentBssSize = ABSOLUTE( _ovl_Bg_Heavy_BlockSegmentBssEnd - _ovl_Bg_Heavy_BlockSegmentBssStart );

    _ovl_Bg_Hidan_CurtainSegmentRomStart = _RomSize;
    ..ovl_Bg_Hidan_Curtain : AT(_RomSize)
    {
        _ovl_Bg_Hidan_CurtainSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_CurtainSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/z_bg_hidan_curtain.o (.text)
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/ovl_Bg_Hidan_Curtain_reloc.o (.text)
        _ovl_Bg_Hidan_CurtainSegmentTextEnd = .;
    _ovl_Bg_Hidan_CurtainSegmentTextSize = ABSOLUTE( _ovl_Bg_Hidan_CurtainSegmentTextEnd - _ovl_Bg_Hidan_CurtainSegmentTextStart );
        _ovl_Bg_Hidan_CurtainSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/z_bg_hidan_curtain.o (.data)
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/ovl_Bg_Hidan_Curtain_reloc.o (.data)
        _ovl_Bg_Hidan_CurtainSegmentDataEnd = .;
    _ovl_Bg_Hidan_CurtainSegmentDataSize = ABSOLUTE( _ovl_Bg_Hidan_CurtainSegmentDataEnd - _ovl_Bg_Hidan_CurtainSegmentDataStart );
        _ovl_Bg_Hidan_CurtainSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/z_bg_hidan_curtain.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/ovl_Bg_Hidan_Curtain_reloc.o (.rodata)
        _ovl_Bg_Hidan_CurtainSegmentRoDataEnd = .;
    _ovl_Bg_Hidan_CurtainSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Hidan_CurtainSegmentRoDataEnd - _ovl_Bg_Hidan_CurtainSegmentRoDataStart );
        _ovl_Bg_Hidan_CurtainSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/z_bg_hidan_curtain.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/ovl_Bg_Hidan_Curtain_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_CurtainSegmentSDataEnd = .;
        _ovl_Bg_Hidan_CurtainSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/z_bg_hidan_curtain.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/ovl_Bg_Hidan_Curtain_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_CurtainSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Hidan_CurtainSegmentOvlEnd - _ovl_Bg_Hidan_CurtainSegmentTextStart );
    _ovl_Bg_Hidan_CurtainSegmentRomEnd = _RomSize;

    ..ovl_Bg_Hidan_Curtain.bss ADDR(..ovl_Bg_Hidan_Curtain) + SIZEOF(..ovl_Bg_Hidan_Curtain) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_CurtainSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/z_bg_hidan_curtain.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/ovl_Bg_Hidan_Curtain_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/z_bg_hidan_curtain.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/ovl_Bg_Hidan_Curtain_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/z_bg_hidan_curtain.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/ovl_Bg_Hidan_Curtain_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/z_bg_hidan_curtain.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Hidan_Curtain/ovl_Bg_Hidan_Curtain_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_CurtainSegmentBssEnd = .;
        _ovl_Bg_Hidan_CurtainSegmentEnd = .;
    }
    _ovl_Bg_Hidan_CurtainSegmentBssSize = ABSOLUTE( _ovl_Bg_Hidan_CurtainSegmentBssEnd - _ovl_Bg_Hidan_CurtainSegmentBssStart );

    _ovl_Bg_Hidan_DalmSegmentRomStart = _RomSize;
    ..ovl_Bg_Hidan_Dalm : AT(_RomSize)
    {
        _ovl_Bg_Hidan_DalmSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_DalmSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/z_bg_hidan_dalm.o (.text)
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/ovl_Bg_Hidan_Dalm_reloc.o (.text)
        _ovl_Bg_Hidan_DalmSegmentTextEnd = .;
    _ovl_Bg_Hidan_DalmSegmentTextSize = ABSOLUTE( _ovl_Bg_Hidan_DalmSegmentTextEnd - _ovl_Bg_Hidan_DalmSegmentTextStart );
        _ovl_Bg_Hidan_DalmSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/z_bg_hidan_dalm.o (.data)
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/ovl_Bg_Hidan_Dalm_reloc.o (.data)
        _ovl_Bg_Hidan_DalmSegmentDataEnd = .;
    _ovl_Bg_Hidan_DalmSegmentDataSize = ABSOLUTE( _ovl_Bg_Hidan_DalmSegmentDataEnd - _ovl_Bg_Hidan_DalmSegmentDataStart );
        _ovl_Bg_Hidan_DalmSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/z_bg_hidan_dalm.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/ovl_Bg_Hidan_Dalm_reloc.o (.rodata)
        _ovl_Bg_Hidan_DalmSegmentRoDataEnd = .;
    _ovl_Bg_Hidan_DalmSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Hidan_DalmSegmentRoDataEnd - _ovl_Bg_Hidan_DalmSegmentRoDataStart );
        _ovl_Bg_Hidan_DalmSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/z_bg_hidan_dalm.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/ovl_Bg_Hidan_Dalm_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_DalmSegmentSDataEnd = .;
        _ovl_Bg_Hidan_DalmSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/z_bg_hidan_dalm.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/ovl_Bg_Hidan_Dalm_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_DalmSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Hidan_DalmSegmentOvlEnd - _ovl_Bg_Hidan_DalmSegmentTextStart );
    _ovl_Bg_Hidan_DalmSegmentRomEnd = _RomSize;

    ..ovl_Bg_Hidan_Dalm.bss ADDR(..ovl_Bg_Hidan_Dalm) + SIZEOF(..ovl_Bg_Hidan_Dalm) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_DalmSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/z_bg_hidan_dalm.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/ovl_Bg_Hidan_Dalm_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/z_bg_hidan_dalm.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/ovl_Bg_Hidan_Dalm_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/z_bg_hidan_dalm.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/ovl_Bg_Hidan_Dalm_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/z_bg_hidan_dalm.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Hidan_Dalm/ovl_Bg_Hidan_Dalm_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_DalmSegmentBssEnd = .;
        _ovl_Bg_Hidan_DalmSegmentEnd = .;
    }
    _ovl_Bg_Hidan_DalmSegmentBssSize = ABSOLUTE( _ovl_Bg_Hidan_DalmSegmentBssEnd - _ovl_Bg_Hidan_DalmSegmentBssStart );

    _ovl_Bg_Hidan_FirewallSegmentRomStart = _RomSize;
    ..ovl_Bg_Hidan_Firewall : AT(_RomSize)
    {
        _ovl_Bg_Hidan_FirewallSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FirewallSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/z_bg_hidan_firewall.o (.text)
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/ovl_Bg_Hidan_Firewall_reloc.o (.text)
        _ovl_Bg_Hidan_FirewallSegmentTextEnd = .;
    _ovl_Bg_Hidan_FirewallSegmentTextSize = ABSOLUTE( _ovl_Bg_Hidan_FirewallSegmentTextEnd - _ovl_Bg_Hidan_FirewallSegmentTextStart );
        _ovl_Bg_Hidan_FirewallSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/z_bg_hidan_firewall.o (.data)
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/ovl_Bg_Hidan_Firewall_reloc.o (.data)
        _ovl_Bg_Hidan_FirewallSegmentDataEnd = .;
    _ovl_Bg_Hidan_FirewallSegmentDataSize = ABSOLUTE( _ovl_Bg_Hidan_FirewallSegmentDataEnd - _ovl_Bg_Hidan_FirewallSegmentDataStart );
        _ovl_Bg_Hidan_FirewallSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/z_bg_hidan_firewall.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/ovl_Bg_Hidan_Firewall_reloc.o (.rodata)
        _ovl_Bg_Hidan_FirewallSegmentRoDataEnd = .;
    _ovl_Bg_Hidan_FirewallSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Hidan_FirewallSegmentRoDataEnd - _ovl_Bg_Hidan_FirewallSegmentRoDataStart );
        _ovl_Bg_Hidan_FirewallSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/z_bg_hidan_firewall.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/ovl_Bg_Hidan_Firewall_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FirewallSegmentSDataEnd = .;
        _ovl_Bg_Hidan_FirewallSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/z_bg_hidan_firewall.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/ovl_Bg_Hidan_Firewall_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FirewallSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Hidan_FirewallSegmentOvlEnd - _ovl_Bg_Hidan_FirewallSegmentTextStart );
    _ovl_Bg_Hidan_FirewallSegmentRomEnd = _RomSize;

    ..ovl_Bg_Hidan_Firewall.bss ADDR(..ovl_Bg_Hidan_Firewall) + SIZEOF(..ovl_Bg_Hidan_Firewall) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FirewallSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/z_bg_hidan_firewall.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/ovl_Bg_Hidan_Firewall_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/z_bg_hidan_firewall.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/ovl_Bg_Hidan_Firewall_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/z_bg_hidan_firewall.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/ovl_Bg_Hidan_Firewall_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/z_bg_hidan_firewall.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Hidan_Firewall/ovl_Bg_Hidan_Firewall_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FirewallSegmentBssEnd = .;
        _ovl_Bg_Hidan_FirewallSegmentEnd = .;
    }
    _ovl_Bg_Hidan_FirewallSegmentBssSize = ABSOLUTE( _ovl_Bg_Hidan_FirewallSegmentBssEnd - _ovl_Bg_Hidan_FirewallSegmentBssStart );

    _ovl_Bg_Hidan_FsliftSegmentRomStart = _RomSize;
    ..ovl_Bg_Hidan_Fslift : AT(_RomSize)
    {
        _ovl_Bg_Hidan_FsliftSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FsliftSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/z_bg_hidan_fslift.o (.text)
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/ovl_Bg_Hidan_Fslift_reloc.o (.text)
        _ovl_Bg_Hidan_FsliftSegmentTextEnd = .;
    _ovl_Bg_Hidan_FsliftSegmentTextSize = ABSOLUTE( _ovl_Bg_Hidan_FsliftSegmentTextEnd - _ovl_Bg_Hidan_FsliftSegmentTextStart );
        _ovl_Bg_Hidan_FsliftSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/z_bg_hidan_fslift.o (.data)
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/ovl_Bg_Hidan_Fslift_reloc.o (.data)
        _ovl_Bg_Hidan_FsliftSegmentDataEnd = .;
    _ovl_Bg_Hidan_FsliftSegmentDataSize = ABSOLUTE( _ovl_Bg_Hidan_FsliftSegmentDataEnd - _ovl_Bg_Hidan_FsliftSegmentDataStart );
        _ovl_Bg_Hidan_FsliftSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/z_bg_hidan_fslift.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/ovl_Bg_Hidan_Fslift_reloc.o (.rodata)
        _ovl_Bg_Hidan_FsliftSegmentRoDataEnd = .;
    _ovl_Bg_Hidan_FsliftSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Hidan_FsliftSegmentRoDataEnd - _ovl_Bg_Hidan_FsliftSegmentRoDataStart );
        _ovl_Bg_Hidan_FsliftSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/z_bg_hidan_fslift.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/ovl_Bg_Hidan_Fslift_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FsliftSegmentSDataEnd = .;
        _ovl_Bg_Hidan_FsliftSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/z_bg_hidan_fslift.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/ovl_Bg_Hidan_Fslift_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FsliftSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Hidan_FsliftSegmentOvlEnd - _ovl_Bg_Hidan_FsliftSegmentTextStart );
    _ovl_Bg_Hidan_FsliftSegmentRomEnd = _RomSize;

    ..ovl_Bg_Hidan_Fslift.bss ADDR(..ovl_Bg_Hidan_Fslift) + SIZEOF(..ovl_Bg_Hidan_Fslift) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FsliftSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/z_bg_hidan_fslift.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/ovl_Bg_Hidan_Fslift_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/z_bg_hidan_fslift.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/ovl_Bg_Hidan_Fslift_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/z_bg_hidan_fslift.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/ovl_Bg_Hidan_Fslift_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/z_bg_hidan_fslift.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Hidan_Fslift/ovl_Bg_Hidan_Fslift_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FsliftSegmentBssEnd = .;
        _ovl_Bg_Hidan_FsliftSegmentEnd = .;
    }
    _ovl_Bg_Hidan_FsliftSegmentBssSize = ABSOLUTE( _ovl_Bg_Hidan_FsliftSegmentBssEnd - _ovl_Bg_Hidan_FsliftSegmentBssStart );

    _ovl_Bg_Hidan_FwbigSegmentRomStart = _RomSize;
    ..ovl_Bg_Hidan_Fwbig : AT(_RomSize)
    {
        _ovl_Bg_Hidan_FwbigSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FwbigSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Fwbig/z_bg_hidan_fwbig.o (.text)
            build/data/overlays/actors/z_bg_hidan_fwbig.data.o (.text)
            build/data/overlays/actors/z_bg_hidan_fwbig.reloc.o (.text)
        _ovl_Bg_Hidan_FwbigSegmentTextEnd = .;
    _ovl_Bg_Hidan_FwbigSegmentTextSize = ABSOLUTE( _ovl_Bg_Hidan_FwbigSegmentTextEnd - _ovl_Bg_Hidan_FwbigSegmentTextStart );
        _ovl_Bg_Hidan_FwbigSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Fwbig/z_bg_hidan_fwbig.o (.data)
            build/data/overlays/actors/z_bg_hidan_fwbig.data.o (.data)
            build/data/overlays/actors/z_bg_hidan_fwbig.reloc.o (.data)
        _ovl_Bg_Hidan_FwbigSegmentDataEnd = .;
    _ovl_Bg_Hidan_FwbigSegmentDataSize = ABSOLUTE( _ovl_Bg_Hidan_FwbigSegmentDataEnd - _ovl_Bg_Hidan_FwbigSegmentDataStart );
        _ovl_Bg_Hidan_FwbigSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Fwbig/z_bg_hidan_fwbig.o (.rodata)
            build/data/overlays/actors/z_bg_hidan_fwbig.data.o (.rodata)
            build/data/overlays/actors/z_bg_hidan_fwbig.reloc.o (.rodata)
        _ovl_Bg_Hidan_FwbigSegmentRoDataEnd = .;
    _ovl_Bg_Hidan_FwbigSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Hidan_FwbigSegmentRoDataEnd - _ovl_Bg_Hidan_FwbigSegmentRoDataStart );
        _ovl_Bg_Hidan_FwbigSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Fwbig/z_bg_hidan_fwbig.o (.sdata)
            build/data/overlays/actors/z_bg_hidan_fwbig.data.o (.sdata)
            build/data/overlays/actors/z_bg_hidan_fwbig.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FwbigSegmentSDataEnd = .;
        _ovl_Bg_Hidan_FwbigSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Fwbig/z_bg_hidan_fwbig.o (.ovl)
            build/data/overlays/actors/z_bg_hidan_fwbig.data.o (.ovl)
            build/data/overlays/actors/z_bg_hidan_fwbig.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FwbigSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Hidan_FwbigSegmentOvlEnd - _ovl_Bg_Hidan_FwbigSegmentTextStart );
    _ovl_Bg_Hidan_FwbigSegmentRomEnd = _RomSize;

    ..ovl_Bg_Hidan_Fwbig.bss ADDR(..ovl_Bg_Hidan_Fwbig) + SIZEOF(..ovl_Bg_Hidan_Fwbig) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FwbigSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Fwbig/z_bg_hidan_fwbig.o (.sbss)
            build/data/overlays/actors/z_bg_hidan_fwbig.data.o (.sbss)
            build/data/overlays/actors/z_bg_hidan_fwbig.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Fwbig/z_bg_hidan_fwbig.o (.scommon)
            build/data/overlays/actors/z_bg_hidan_fwbig.data.o (.scommon)
            build/data/overlays/actors/z_bg_hidan_fwbig.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Fwbig/z_bg_hidan_fwbig.o (.bss)
            build/data/overlays/actors/z_bg_hidan_fwbig.data.o (.bss)
            build/data/overlays/actors/z_bg_hidan_fwbig.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Fwbig/z_bg_hidan_fwbig.o (COMMON)
            build/data/overlays/actors/z_bg_hidan_fwbig.data.o (COMMON)
            build/data/overlays/actors/z_bg_hidan_fwbig.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_FwbigSegmentBssEnd = .;
        _ovl_Bg_Hidan_FwbigSegmentEnd = .;
    }
    _ovl_Bg_Hidan_FwbigSegmentBssSize = ABSOLUTE( _ovl_Bg_Hidan_FwbigSegmentBssEnd - _ovl_Bg_Hidan_FwbigSegmentBssStart );

    _ovl_Bg_Hidan_HamstepSegmentRomStart = _RomSize;
    ..ovl_Bg_Hidan_Hamstep : AT(_RomSize)
    {
        _ovl_Bg_Hidan_HamstepSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_HamstepSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Hamstep/z_bg_hidan_hamstep.o (.text)
            build/data/overlays/actors/z_bg_hidan_hamstep.data.o (.text)
            build/data/overlays/actors/z_bg_hidan_hamstep.reloc.o (.text)
        _ovl_Bg_Hidan_HamstepSegmentTextEnd = .;
    _ovl_Bg_Hidan_HamstepSegmentTextSize = ABSOLUTE( _ovl_Bg_Hidan_HamstepSegmentTextEnd - _ovl_Bg_Hidan_HamstepSegmentTextStart );
        _ovl_Bg_Hidan_HamstepSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Hamstep/z_bg_hidan_hamstep.o (.data)
            build/data/overlays/actors/z_bg_hidan_hamstep.data.o (.data)
            build/data/overlays/actors/z_bg_hidan_hamstep.reloc.o (.data)
        _ovl_Bg_Hidan_HamstepSegmentDataEnd = .;
    _ovl_Bg_Hidan_HamstepSegmentDataSize = ABSOLUTE( _ovl_Bg_Hidan_HamstepSegmentDataEnd - _ovl_Bg_Hidan_HamstepSegmentDataStart );
        _ovl_Bg_Hidan_HamstepSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Hamstep/z_bg_hidan_hamstep.o (.rodata)
            build/data/overlays/actors/z_bg_hidan_hamstep.data.o (.rodata)
            build/data/overlays/actors/z_bg_hidan_hamstep.reloc.o (.rodata)
        _ovl_Bg_Hidan_HamstepSegmentRoDataEnd = .;
    _ovl_Bg_Hidan_HamstepSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Hidan_HamstepSegmentRoDataEnd - _ovl_Bg_Hidan_HamstepSegmentRoDataStart );
        _ovl_Bg_Hidan_HamstepSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Hamstep/z_bg_hidan_hamstep.o (.sdata)
            build/data/overlays/actors/z_bg_hidan_hamstep.data.o (.sdata)
            build/data/overlays/actors/z_bg_hidan_hamstep.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_HamstepSegmentSDataEnd = .;
        _ovl_Bg_Hidan_HamstepSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Hamstep/z_bg_hidan_hamstep.o (.ovl)
            build/data/overlays/actors/z_bg_hidan_hamstep.data.o (.ovl)
            build/data/overlays/actors/z_bg_hidan_hamstep.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_HamstepSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Hidan_HamstepSegmentOvlEnd - _ovl_Bg_Hidan_HamstepSegmentTextStart );
    _ovl_Bg_Hidan_HamstepSegmentRomEnd = _RomSize;

    ..ovl_Bg_Hidan_Hamstep.bss ADDR(..ovl_Bg_Hidan_Hamstep) + SIZEOF(..ovl_Bg_Hidan_Hamstep) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_HamstepSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Hamstep/z_bg_hidan_hamstep.o (.sbss)
            build/data/overlays/actors/z_bg_hidan_hamstep.data.o (.sbss)
            build/data/overlays/actors/z_bg_hidan_hamstep.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Hamstep/z_bg_hidan_hamstep.o (.scommon)
            build/data/overlays/actors/z_bg_hidan_hamstep.data.o (.scommon)
            build/data/overlays/actors/z_bg_hidan_hamstep.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Hamstep/z_bg_hidan_hamstep.o (.bss)
            build/data/overlays/actors/z_bg_hidan_hamstep.data.o (.bss)
            build/data/overlays/actors/z_bg_hidan_hamstep.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Hamstep/z_bg_hidan_hamstep.o (COMMON)
            build/data/overlays/actors/z_bg_hidan_hamstep.data.o (COMMON)
            build/data/overlays/actors/z_bg_hidan_hamstep.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_HamstepSegmentBssEnd = .;
        _ovl_Bg_Hidan_HamstepSegmentEnd = .;
    }
    _ovl_Bg_Hidan_HamstepSegmentBssSize = ABSOLUTE( _ovl_Bg_Hidan_HamstepSegmentBssEnd - _ovl_Bg_Hidan_HamstepSegmentBssStart );

    _ovl_Bg_Hidan_HrockSegmentRomStart = _RomSize;
    ..ovl_Bg_Hidan_Hrock : AT(_RomSize)
    {
        _ovl_Bg_Hidan_HrockSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_HrockSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Hrock/z_bg_hidan_hrock.o (.text)
            build/data/overlays/actors/z_bg_hidan_hrock.data.o (.text)
            build/data/overlays/actors/z_bg_hidan_hrock.reloc.o (.text)
        _ovl_Bg_Hidan_HrockSegmentTextEnd = .;
    _ovl_Bg_Hidan_HrockSegmentTextSize = ABSOLUTE( _ovl_Bg_Hidan_HrockSegmentTextEnd - _ovl_Bg_Hidan_HrockSegmentTextStart );
        _ovl_Bg_Hidan_HrockSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Hrock/z_bg_hidan_hrock.o (.data)
            build/data/overlays/actors/z_bg_hidan_hrock.data.o (.data)
            build/data/overlays/actors/z_bg_hidan_hrock.reloc.o (.data)
        _ovl_Bg_Hidan_HrockSegmentDataEnd = .;
    _ovl_Bg_Hidan_HrockSegmentDataSize = ABSOLUTE( _ovl_Bg_Hidan_HrockSegmentDataEnd - _ovl_Bg_Hidan_HrockSegmentDataStart );
        _ovl_Bg_Hidan_HrockSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Hrock/z_bg_hidan_hrock.o (.rodata)
            build/data/overlays/actors/z_bg_hidan_hrock.data.o (.rodata)
            build/data/overlays/actors/z_bg_hidan_hrock.reloc.o (.rodata)
        _ovl_Bg_Hidan_HrockSegmentRoDataEnd = .;
    _ovl_Bg_Hidan_HrockSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Hidan_HrockSegmentRoDataEnd - _ovl_Bg_Hidan_HrockSegmentRoDataStart );
        _ovl_Bg_Hidan_HrockSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Hrock/z_bg_hidan_hrock.o (.sdata)
            build/data/overlays/actors/z_bg_hidan_hrock.data.o (.sdata)
            build/data/overlays/actors/z_bg_hidan_hrock.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_HrockSegmentSDataEnd = .;
        _ovl_Bg_Hidan_HrockSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Hrock/z_bg_hidan_hrock.o (.ovl)
            build/data/overlays/actors/z_bg_hidan_hrock.data.o (.ovl)
            build/data/overlays/actors/z_bg_hidan_hrock.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_HrockSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Hidan_HrockSegmentOvlEnd - _ovl_Bg_Hidan_HrockSegmentTextStart );
    _ovl_Bg_Hidan_HrockSegmentRomEnd = _RomSize;

    ..ovl_Bg_Hidan_Hrock.bss ADDR(..ovl_Bg_Hidan_Hrock) + SIZEOF(..ovl_Bg_Hidan_Hrock) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_HrockSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Hrock/z_bg_hidan_hrock.o (.sbss)
            build/data/overlays/actors/z_bg_hidan_hrock.data.o (.sbss)
            build/data/overlays/actors/z_bg_hidan_hrock.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Hrock/z_bg_hidan_hrock.o (.scommon)
            build/data/overlays/actors/z_bg_hidan_hrock.data.o (.scommon)
            build/data/overlays/actors/z_bg_hidan_hrock.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Hrock/z_bg_hidan_hrock.o (.bss)
            build/data/overlays/actors/z_bg_hidan_hrock.data.o (.bss)
            build/data/overlays/actors/z_bg_hidan_hrock.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Hrock/z_bg_hidan_hrock.o (COMMON)
            build/data/overlays/actors/z_bg_hidan_hrock.data.o (COMMON)
            build/data/overlays/actors/z_bg_hidan_hrock.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_HrockSegmentBssEnd = .;
        _ovl_Bg_Hidan_HrockSegmentEnd = .;
    }
    _ovl_Bg_Hidan_HrockSegmentBssSize = ABSOLUTE( _ovl_Bg_Hidan_HrockSegmentBssEnd - _ovl_Bg_Hidan_HrockSegmentBssStart );

    _ovl_Bg_Hidan_KousiSegmentRomStart = _RomSize;
    ..ovl_Bg_Hidan_Kousi : AT(_RomSize)
    {
        _ovl_Bg_Hidan_KousiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_KousiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/z_bg_hidan_kousi.o (.text)
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/ovl_Bg_Hidan_Kousi_reloc.o (.text)
        _ovl_Bg_Hidan_KousiSegmentTextEnd = .;
    _ovl_Bg_Hidan_KousiSegmentTextSize = ABSOLUTE( _ovl_Bg_Hidan_KousiSegmentTextEnd - _ovl_Bg_Hidan_KousiSegmentTextStart );
        _ovl_Bg_Hidan_KousiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/z_bg_hidan_kousi.o (.data)
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/ovl_Bg_Hidan_Kousi_reloc.o (.data)
        _ovl_Bg_Hidan_KousiSegmentDataEnd = .;
    _ovl_Bg_Hidan_KousiSegmentDataSize = ABSOLUTE( _ovl_Bg_Hidan_KousiSegmentDataEnd - _ovl_Bg_Hidan_KousiSegmentDataStart );
        _ovl_Bg_Hidan_KousiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/z_bg_hidan_kousi.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/ovl_Bg_Hidan_Kousi_reloc.o (.rodata)
        _ovl_Bg_Hidan_KousiSegmentRoDataEnd = .;
    _ovl_Bg_Hidan_KousiSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Hidan_KousiSegmentRoDataEnd - _ovl_Bg_Hidan_KousiSegmentRoDataStart );
        _ovl_Bg_Hidan_KousiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/z_bg_hidan_kousi.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/ovl_Bg_Hidan_Kousi_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_KousiSegmentSDataEnd = .;
        _ovl_Bg_Hidan_KousiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/z_bg_hidan_kousi.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/ovl_Bg_Hidan_Kousi_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_KousiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Hidan_KousiSegmentOvlEnd - _ovl_Bg_Hidan_KousiSegmentTextStart );
    _ovl_Bg_Hidan_KousiSegmentRomEnd = _RomSize;

    ..ovl_Bg_Hidan_Kousi.bss ADDR(..ovl_Bg_Hidan_Kousi) + SIZEOF(..ovl_Bg_Hidan_Kousi) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_KousiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/z_bg_hidan_kousi.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/ovl_Bg_Hidan_Kousi_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/z_bg_hidan_kousi.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/ovl_Bg_Hidan_Kousi_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/z_bg_hidan_kousi.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/ovl_Bg_Hidan_Kousi_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/z_bg_hidan_kousi.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Hidan_Kousi/ovl_Bg_Hidan_Kousi_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_KousiSegmentBssEnd = .;
        _ovl_Bg_Hidan_KousiSegmentEnd = .;
    }
    _ovl_Bg_Hidan_KousiSegmentBssSize = ABSOLUTE( _ovl_Bg_Hidan_KousiSegmentBssEnd - _ovl_Bg_Hidan_KousiSegmentBssStart );

    _ovl_Bg_Hidan_KowarerukabeSegmentRomStart = _RomSize;
    ..ovl_Bg_Hidan_Kowarerukabe : AT(_RomSize)
    {
        _ovl_Bg_Hidan_KowarerukabeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_KowarerukabeSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Kowarerukabe/z_bg_hidan_kowarerukabe.o (.text)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.data.o (.text)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.reloc.o (.text)
        _ovl_Bg_Hidan_KowarerukabeSegmentTextEnd = .;
    _ovl_Bg_Hidan_KowarerukabeSegmentTextSize = ABSOLUTE( _ovl_Bg_Hidan_KowarerukabeSegmentTextEnd - _ovl_Bg_Hidan_KowarerukabeSegmentTextStart );
        _ovl_Bg_Hidan_KowarerukabeSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Kowarerukabe/z_bg_hidan_kowarerukabe.o (.data)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.data.o (.data)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.reloc.o (.data)
        _ovl_Bg_Hidan_KowarerukabeSegmentDataEnd = .;
    _ovl_Bg_Hidan_KowarerukabeSegmentDataSize = ABSOLUTE( _ovl_Bg_Hidan_KowarerukabeSegmentDataEnd - _ovl_Bg_Hidan_KowarerukabeSegmentDataStart );
        _ovl_Bg_Hidan_KowarerukabeSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Kowarerukabe/z_bg_hidan_kowarerukabe.o (.rodata)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.data.o (.rodata)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.reloc.o (.rodata)
        _ovl_Bg_Hidan_KowarerukabeSegmentRoDataEnd = .;
    _ovl_Bg_Hidan_KowarerukabeSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Hidan_KowarerukabeSegmentRoDataEnd - _ovl_Bg_Hidan_KowarerukabeSegmentRoDataStart );
        _ovl_Bg_Hidan_KowarerukabeSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Kowarerukabe/z_bg_hidan_kowarerukabe.o (.sdata)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.data.o (.sdata)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_KowarerukabeSegmentSDataEnd = .;
        _ovl_Bg_Hidan_KowarerukabeSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Kowarerukabe/z_bg_hidan_kowarerukabe.o (.ovl)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.data.o (.ovl)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_KowarerukabeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Hidan_KowarerukabeSegmentOvlEnd - _ovl_Bg_Hidan_KowarerukabeSegmentTextStart );
    _ovl_Bg_Hidan_KowarerukabeSegmentRomEnd = _RomSize;

    ..ovl_Bg_Hidan_Kowarerukabe.bss ADDR(..ovl_Bg_Hidan_Kowarerukabe) + SIZEOF(..ovl_Bg_Hidan_Kowarerukabe) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_KowarerukabeSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Kowarerukabe/z_bg_hidan_kowarerukabe.o (.sbss)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.data.o (.sbss)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Kowarerukabe/z_bg_hidan_kowarerukabe.o (.scommon)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.data.o (.scommon)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Kowarerukabe/z_bg_hidan_kowarerukabe.o (.bss)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.data.o (.bss)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Kowarerukabe/z_bg_hidan_kowarerukabe.o (COMMON)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.data.o (COMMON)
            build/data/overlays/actors/z_bg_hidan_kowarerukabe.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_KowarerukabeSegmentBssEnd = .;
        _ovl_Bg_Hidan_KowarerukabeSegmentEnd = .;
    }
    _ovl_Bg_Hidan_KowarerukabeSegmentBssSize = ABSOLUTE( _ovl_Bg_Hidan_KowarerukabeSegmentBssEnd - _ovl_Bg_Hidan_KowarerukabeSegmentBssStart );

    _ovl_Bg_Hidan_RockSegmentRomStart = _RomSize;
    ..ovl_Bg_Hidan_Rock : AT(_RomSize)
    {
        _ovl_Bg_Hidan_RockSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_RockSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Rock/z_bg_hidan_rock.o (.text)
            build/data/overlays/actors/z_bg_hidan_rock.data.o (.text)
            build/data/overlays/actors/z_bg_hidan_rock.reloc.o (.text)
        _ovl_Bg_Hidan_RockSegmentTextEnd = .;
    _ovl_Bg_Hidan_RockSegmentTextSize = ABSOLUTE( _ovl_Bg_Hidan_RockSegmentTextEnd - _ovl_Bg_Hidan_RockSegmentTextStart );
        _ovl_Bg_Hidan_RockSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Rock/z_bg_hidan_rock.o (.data)
            build/data/overlays/actors/z_bg_hidan_rock.data.o (.data)
            build/data/overlays/actors/z_bg_hidan_rock.reloc.o (.data)
        _ovl_Bg_Hidan_RockSegmentDataEnd = .;
    _ovl_Bg_Hidan_RockSegmentDataSize = ABSOLUTE( _ovl_Bg_Hidan_RockSegmentDataEnd - _ovl_Bg_Hidan_RockSegmentDataStart );
        _ovl_Bg_Hidan_RockSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Rock/z_bg_hidan_rock.o (.rodata)
            build/data/overlays/actors/z_bg_hidan_rock.data.o (.rodata)
            build/data/overlays/actors/z_bg_hidan_rock.reloc.o (.rodata)
        _ovl_Bg_Hidan_RockSegmentRoDataEnd = .;
    _ovl_Bg_Hidan_RockSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Hidan_RockSegmentRoDataEnd - _ovl_Bg_Hidan_RockSegmentRoDataStart );
        _ovl_Bg_Hidan_RockSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Rock/z_bg_hidan_rock.o (.sdata)
            build/data/overlays/actors/z_bg_hidan_rock.data.o (.sdata)
            build/data/overlays/actors/z_bg_hidan_rock.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_RockSegmentSDataEnd = .;
        _ovl_Bg_Hidan_RockSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Rock/z_bg_hidan_rock.o (.ovl)
            build/data/overlays/actors/z_bg_hidan_rock.data.o (.ovl)
            build/data/overlays/actors/z_bg_hidan_rock.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_RockSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Hidan_RockSegmentOvlEnd - _ovl_Bg_Hidan_RockSegmentTextStart );
    _ovl_Bg_Hidan_RockSegmentRomEnd = _RomSize;

    ..ovl_Bg_Hidan_Rock.bss ADDR(..ovl_Bg_Hidan_Rock) + SIZEOF(..ovl_Bg_Hidan_Rock) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_RockSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Rock/z_bg_hidan_rock.o (.sbss)
            build/data/overlays/actors/z_bg_hidan_rock.data.o (.sbss)
            build/data/overlays/actors/z_bg_hidan_rock.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Rock/z_bg_hidan_rock.o (.scommon)
            build/data/overlays/actors/z_bg_hidan_rock.data.o (.scommon)
            build/data/overlays/actors/z_bg_hidan_rock.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Rock/z_bg_hidan_rock.o (.bss)
            build/data/overlays/actors/z_bg_hidan_rock.data.o (.bss)
            build/data/overlays/actors/z_bg_hidan_rock.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Rock/z_bg_hidan_rock.o (COMMON)
            build/data/overlays/actors/z_bg_hidan_rock.data.o (COMMON)
            build/data/overlays/actors/z_bg_hidan_rock.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_RockSegmentBssEnd = .;
        _ovl_Bg_Hidan_RockSegmentEnd = .;
    }
    _ovl_Bg_Hidan_RockSegmentBssSize = ABSOLUTE( _ovl_Bg_Hidan_RockSegmentBssEnd - _ovl_Bg_Hidan_RockSegmentBssStart );

    _ovl_Bg_Hidan_RsekizouSegmentRomStart = _RomSize;
    ..ovl_Bg_Hidan_Rsekizou : AT(_RomSize)
    {
        _ovl_Bg_Hidan_RsekizouSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_RsekizouSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/z_bg_hidan_rsekizou.o (.text)
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/ovl_Bg_Hidan_Rsekizou_reloc.o (.text)
        _ovl_Bg_Hidan_RsekizouSegmentTextEnd = .;
    _ovl_Bg_Hidan_RsekizouSegmentTextSize = ABSOLUTE( _ovl_Bg_Hidan_RsekizouSegmentTextEnd - _ovl_Bg_Hidan_RsekizouSegmentTextStart );
        _ovl_Bg_Hidan_RsekizouSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/z_bg_hidan_rsekizou.o (.data)
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/ovl_Bg_Hidan_Rsekizou_reloc.o (.data)
        _ovl_Bg_Hidan_RsekizouSegmentDataEnd = .;
    _ovl_Bg_Hidan_RsekizouSegmentDataSize = ABSOLUTE( _ovl_Bg_Hidan_RsekizouSegmentDataEnd - _ovl_Bg_Hidan_RsekizouSegmentDataStart );
        _ovl_Bg_Hidan_RsekizouSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/z_bg_hidan_rsekizou.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/ovl_Bg_Hidan_Rsekizou_reloc.o (.rodata)
        _ovl_Bg_Hidan_RsekizouSegmentRoDataEnd = .;
    _ovl_Bg_Hidan_RsekizouSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Hidan_RsekizouSegmentRoDataEnd - _ovl_Bg_Hidan_RsekizouSegmentRoDataStart );
        _ovl_Bg_Hidan_RsekizouSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/z_bg_hidan_rsekizou.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/ovl_Bg_Hidan_Rsekizou_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_RsekizouSegmentSDataEnd = .;
        _ovl_Bg_Hidan_RsekizouSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/z_bg_hidan_rsekizou.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/ovl_Bg_Hidan_Rsekizou_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_RsekizouSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Hidan_RsekizouSegmentOvlEnd - _ovl_Bg_Hidan_RsekizouSegmentTextStart );
    _ovl_Bg_Hidan_RsekizouSegmentRomEnd = _RomSize;

    ..ovl_Bg_Hidan_Rsekizou.bss ADDR(..ovl_Bg_Hidan_Rsekizou) + SIZEOF(..ovl_Bg_Hidan_Rsekizou) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_RsekizouSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/z_bg_hidan_rsekizou.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/ovl_Bg_Hidan_Rsekizou_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/z_bg_hidan_rsekizou.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/ovl_Bg_Hidan_Rsekizou_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/z_bg_hidan_rsekizou.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/ovl_Bg_Hidan_Rsekizou_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/z_bg_hidan_rsekizou.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Hidan_Rsekizou/ovl_Bg_Hidan_Rsekizou_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_RsekizouSegmentBssEnd = .;
        _ovl_Bg_Hidan_RsekizouSegmentEnd = .;
    }
    _ovl_Bg_Hidan_RsekizouSegmentBssSize = ABSOLUTE( _ovl_Bg_Hidan_RsekizouSegmentBssEnd - _ovl_Bg_Hidan_RsekizouSegmentBssStart );

    _ovl_Bg_Hidan_SekizouSegmentRomStart = _RomSize;
    ..ovl_Bg_Hidan_Sekizou : AT(_RomSize)
    {
        _ovl_Bg_Hidan_SekizouSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SekizouSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Sekizou/z_bg_hidan_sekizou.o (.text)
            build/data/overlays/actors/z_bg_hidan_sekizou.data.o (.text)
            build/data/overlays/actors/z_bg_hidan_sekizou.reloc.o (.text)
        _ovl_Bg_Hidan_SekizouSegmentTextEnd = .;
    _ovl_Bg_Hidan_SekizouSegmentTextSize = ABSOLUTE( _ovl_Bg_Hidan_SekizouSegmentTextEnd - _ovl_Bg_Hidan_SekizouSegmentTextStart );
        _ovl_Bg_Hidan_SekizouSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Sekizou/z_bg_hidan_sekizou.o (.data)
            build/data/overlays/actors/z_bg_hidan_sekizou.data.o (.data)
            build/data/overlays/actors/z_bg_hidan_sekizou.reloc.o (.data)
        _ovl_Bg_Hidan_SekizouSegmentDataEnd = .;
    _ovl_Bg_Hidan_SekizouSegmentDataSize = ABSOLUTE( _ovl_Bg_Hidan_SekizouSegmentDataEnd - _ovl_Bg_Hidan_SekizouSegmentDataStart );
        _ovl_Bg_Hidan_SekizouSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Sekizou/z_bg_hidan_sekizou.o (.rodata)
            build/data/overlays/actors/z_bg_hidan_sekizou.data.o (.rodata)
            build/data/overlays/actors/z_bg_hidan_sekizou.reloc.o (.rodata)
        _ovl_Bg_Hidan_SekizouSegmentRoDataEnd = .;
    _ovl_Bg_Hidan_SekizouSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Hidan_SekizouSegmentRoDataEnd - _ovl_Bg_Hidan_SekizouSegmentRoDataStart );
        _ovl_Bg_Hidan_SekizouSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Sekizou/z_bg_hidan_sekizou.o (.sdata)
            build/data/overlays/actors/z_bg_hidan_sekizou.data.o (.sdata)
            build/data/overlays/actors/z_bg_hidan_sekizou.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SekizouSegmentSDataEnd = .;
        _ovl_Bg_Hidan_SekizouSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Sekizou/z_bg_hidan_sekizou.o (.ovl)
            build/data/overlays/actors/z_bg_hidan_sekizou.data.o (.ovl)
            build/data/overlays/actors/z_bg_hidan_sekizou.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SekizouSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Hidan_SekizouSegmentOvlEnd - _ovl_Bg_Hidan_SekizouSegmentTextStart );
    _ovl_Bg_Hidan_SekizouSegmentRomEnd = _RomSize;

    ..ovl_Bg_Hidan_Sekizou.bss ADDR(..ovl_Bg_Hidan_Sekizou) + SIZEOF(..ovl_Bg_Hidan_Sekizou) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SekizouSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Sekizou/z_bg_hidan_sekizou.o (.sbss)
            build/data/overlays/actors/z_bg_hidan_sekizou.data.o (.sbss)
            build/data/overlays/actors/z_bg_hidan_sekizou.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Sekizou/z_bg_hidan_sekizou.o (.scommon)
            build/data/overlays/actors/z_bg_hidan_sekizou.data.o (.scommon)
            build/data/overlays/actors/z_bg_hidan_sekizou.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Sekizou/z_bg_hidan_sekizou.o (.bss)
            build/data/overlays/actors/z_bg_hidan_sekizou.data.o (.bss)
            build/data/overlays/actors/z_bg_hidan_sekizou.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Sekizou/z_bg_hidan_sekizou.o (COMMON)
            build/data/overlays/actors/z_bg_hidan_sekizou.data.o (COMMON)
            build/data/overlays/actors/z_bg_hidan_sekizou.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SekizouSegmentBssEnd = .;
        _ovl_Bg_Hidan_SekizouSegmentEnd = .;
    }
    _ovl_Bg_Hidan_SekizouSegmentBssSize = ABSOLUTE( _ovl_Bg_Hidan_SekizouSegmentBssEnd - _ovl_Bg_Hidan_SekizouSegmentBssStart );

    _ovl_Bg_Hidan_SimaSegmentRomStart = _RomSize;
    ..ovl_Bg_Hidan_Sima : AT(_RomSize)
    {
        _ovl_Bg_Hidan_SimaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SimaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Sima/z_bg_hidan_sima.o (.text)
            build/data/overlays/actors/z_bg_hidan_sima.data.o (.text)
            build/data/overlays/actors/z_bg_hidan_sima.reloc.o (.text)
        _ovl_Bg_Hidan_SimaSegmentTextEnd = .;
    _ovl_Bg_Hidan_SimaSegmentTextSize = ABSOLUTE( _ovl_Bg_Hidan_SimaSegmentTextEnd - _ovl_Bg_Hidan_SimaSegmentTextStart );
        _ovl_Bg_Hidan_SimaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Sima/z_bg_hidan_sima.o (.data)
            build/data/overlays/actors/z_bg_hidan_sima.data.o (.data)
            build/data/overlays/actors/z_bg_hidan_sima.reloc.o (.data)
        _ovl_Bg_Hidan_SimaSegmentDataEnd = .;
    _ovl_Bg_Hidan_SimaSegmentDataSize = ABSOLUTE( _ovl_Bg_Hidan_SimaSegmentDataEnd - _ovl_Bg_Hidan_SimaSegmentDataStart );
        _ovl_Bg_Hidan_SimaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Sima/z_bg_hidan_sima.o (.rodata)
            build/data/overlays/actors/z_bg_hidan_sima.data.o (.rodata)
            build/data/overlays/actors/z_bg_hidan_sima.reloc.o (.rodata)
        _ovl_Bg_Hidan_SimaSegmentRoDataEnd = .;
    _ovl_Bg_Hidan_SimaSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Hidan_SimaSegmentRoDataEnd - _ovl_Bg_Hidan_SimaSegmentRoDataStart );
        _ovl_Bg_Hidan_SimaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Sima/z_bg_hidan_sima.o (.sdata)
            build/data/overlays/actors/z_bg_hidan_sima.data.o (.sdata)
            build/data/overlays/actors/z_bg_hidan_sima.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SimaSegmentSDataEnd = .;
        _ovl_Bg_Hidan_SimaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Sima/z_bg_hidan_sima.o (.ovl)
            build/data/overlays/actors/z_bg_hidan_sima.data.o (.ovl)
            build/data/overlays/actors/z_bg_hidan_sima.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SimaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Hidan_SimaSegmentOvlEnd - _ovl_Bg_Hidan_SimaSegmentTextStart );
    _ovl_Bg_Hidan_SimaSegmentRomEnd = _RomSize;

    ..ovl_Bg_Hidan_Sima.bss ADDR(..ovl_Bg_Hidan_Sima) + SIZEOF(..ovl_Bg_Hidan_Sima) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SimaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Sima/z_bg_hidan_sima.o (.sbss)
            build/data/overlays/actors/z_bg_hidan_sima.data.o (.sbss)
            build/data/overlays/actors/z_bg_hidan_sima.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Sima/z_bg_hidan_sima.o (.scommon)
            build/data/overlays/actors/z_bg_hidan_sima.data.o (.scommon)
            build/data/overlays/actors/z_bg_hidan_sima.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Sima/z_bg_hidan_sima.o (.bss)
            build/data/overlays/actors/z_bg_hidan_sima.data.o (.bss)
            build/data/overlays/actors/z_bg_hidan_sima.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Sima/z_bg_hidan_sima.o (COMMON)
            build/data/overlays/actors/z_bg_hidan_sima.data.o (COMMON)
            build/data/overlays/actors/z_bg_hidan_sima.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SimaSegmentBssEnd = .;
        _ovl_Bg_Hidan_SimaSegmentEnd = .;
    }
    _ovl_Bg_Hidan_SimaSegmentBssSize = ABSOLUTE( _ovl_Bg_Hidan_SimaSegmentBssEnd - _ovl_Bg_Hidan_SimaSegmentBssStart );

    _ovl_Bg_Hidan_SyokuSegmentRomStart = _RomSize;
    ..ovl_Bg_Hidan_Syoku : AT(_RomSize)
    {
        _ovl_Bg_Hidan_SyokuSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SyokuSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/z_bg_hidan_syoku.o (.text)
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/ovl_Bg_Hidan_Syoku_reloc.o (.text)
        _ovl_Bg_Hidan_SyokuSegmentTextEnd = .;
    _ovl_Bg_Hidan_SyokuSegmentTextSize = ABSOLUTE( _ovl_Bg_Hidan_SyokuSegmentTextEnd - _ovl_Bg_Hidan_SyokuSegmentTextStart );
        _ovl_Bg_Hidan_SyokuSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/z_bg_hidan_syoku.o (.data)
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/ovl_Bg_Hidan_Syoku_reloc.o (.data)
        _ovl_Bg_Hidan_SyokuSegmentDataEnd = .;
    _ovl_Bg_Hidan_SyokuSegmentDataSize = ABSOLUTE( _ovl_Bg_Hidan_SyokuSegmentDataEnd - _ovl_Bg_Hidan_SyokuSegmentDataStart );
        _ovl_Bg_Hidan_SyokuSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/z_bg_hidan_syoku.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/ovl_Bg_Hidan_Syoku_reloc.o (.rodata)
        _ovl_Bg_Hidan_SyokuSegmentRoDataEnd = .;
    _ovl_Bg_Hidan_SyokuSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Hidan_SyokuSegmentRoDataEnd - _ovl_Bg_Hidan_SyokuSegmentRoDataStart );
        _ovl_Bg_Hidan_SyokuSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/z_bg_hidan_syoku.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/ovl_Bg_Hidan_Syoku_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SyokuSegmentSDataEnd = .;
        _ovl_Bg_Hidan_SyokuSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/z_bg_hidan_syoku.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/ovl_Bg_Hidan_Syoku_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SyokuSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Hidan_SyokuSegmentOvlEnd - _ovl_Bg_Hidan_SyokuSegmentTextStart );
    _ovl_Bg_Hidan_SyokuSegmentRomEnd = _RomSize;

    ..ovl_Bg_Hidan_Syoku.bss ADDR(..ovl_Bg_Hidan_Syoku) + SIZEOF(..ovl_Bg_Hidan_Syoku) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SyokuSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/z_bg_hidan_syoku.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/ovl_Bg_Hidan_Syoku_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/z_bg_hidan_syoku.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/ovl_Bg_Hidan_Syoku_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/z_bg_hidan_syoku.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/ovl_Bg_Hidan_Syoku_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/z_bg_hidan_syoku.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Hidan_Syoku/ovl_Bg_Hidan_Syoku_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Hidan_SyokuSegmentBssEnd = .;
        _ovl_Bg_Hidan_SyokuSegmentEnd = .;
    }
    _ovl_Bg_Hidan_SyokuSegmentBssSize = ABSOLUTE( _ovl_Bg_Hidan_SyokuSegmentBssEnd - _ovl_Bg_Hidan_SyokuSegmentBssStart );

    _ovl_Bg_Ice_ObjectsSegmentRomStart = _RomSize;
    ..ovl_Bg_Ice_Objects : AT(_RomSize)
    {
        _ovl_Bg_Ice_ObjectsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ObjectsSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Objects/z_bg_ice_objects.o (.text)
            build/data/overlays/actors/z_bg_ice_objects.data.o (.text)
            build/data/overlays/actors/z_bg_ice_objects.reloc.o (.text)
        _ovl_Bg_Ice_ObjectsSegmentTextEnd = .;
    _ovl_Bg_Ice_ObjectsSegmentTextSize = ABSOLUTE( _ovl_Bg_Ice_ObjectsSegmentTextEnd - _ovl_Bg_Ice_ObjectsSegmentTextStart );
        _ovl_Bg_Ice_ObjectsSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Objects/z_bg_ice_objects.o (.data)
            build/data/overlays/actors/z_bg_ice_objects.data.o (.data)
            build/data/overlays/actors/z_bg_ice_objects.reloc.o (.data)
        _ovl_Bg_Ice_ObjectsSegmentDataEnd = .;
    _ovl_Bg_Ice_ObjectsSegmentDataSize = ABSOLUTE( _ovl_Bg_Ice_ObjectsSegmentDataEnd - _ovl_Bg_Ice_ObjectsSegmentDataStart );
        _ovl_Bg_Ice_ObjectsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Objects/z_bg_ice_objects.o (.rodata)
            build/data/overlays/actors/z_bg_ice_objects.data.o (.rodata)
            build/data/overlays/actors/z_bg_ice_objects.reloc.o (.rodata)
        _ovl_Bg_Ice_ObjectsSegmentRoDataEnd = .;
    _ovl_Bg_Ice_ObjectsSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Ice_ObjectsSegmentRoDataEnd - _ovl_Bg_Ice_ObjectsSegmentRoDataStart );
        _ovl_Bg_Ice_ObjectsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Objects/z_bg_ice_objects.o (.sdata)
            build/data/overlays/actors/z_bg_ice_objects.data.o (.sdata)
            build/data/overlays/actors/z_bg_ice_objects.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ObjectsSegmentSDataEnd = .;
        _ovl_Bg_Ice_ObjectsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Objects/z_bg_ice_objects.o (.ovl)
            build/data/overlays/actors/z_bg_ice_objects.data.o (.ovl)
            build/data/overlays/actors/z_bg_ice_objects.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ObjectsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Ice_ObjectsSegmentOvlEnd - _ovl_Bg_Ice_ObjectsSegmentTextStart );
    _ovl_Bg_Ice_ObjectsSegmentRomEnd = _RomSize;

    ..ovl_Bg_Ice_Objects.bss ADDR(..ovl_Bg_Ice_Objects) + SIZEOF(..ovl_Bg_Ice_Objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ObjectsSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Objects/z_bg_ice_objects.o (.sbss)
            build/data/overlays/actors/z_bg_ice_objects.data.o (.sbss)
            build/data/overlays/actors/z_bg_ice_objects.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ice_Objects/z_bg_ice_objects.o (.scommon)
            build/data/overlays/actors/z_bg_ice_objects.data.o (.scommon)
            build/data/overlays/actors/z_bg_ice_objects.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ice_Objects/z_bg_ice_objects.o (.bss)
            build/data/overlays/actors/z_bg_ice_objects.data.o (.bss)
            build/data/overlays/actors/z_bg_ice_objects.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ice_Objects/z_bg_ice_objects.o (COMMON)
            build/data/overlays/actors/z_bg_ice_objects.data.o (COMMON)
            build/data/overlays/actors/z_bg_ice_objects.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ObjectsSegmentBssEnd = .;
        _ovl_Bg_Ice_ObjectsSegmentEnd = .;
    }
    _ovl_Bg_Ice_ObjectsSegmentBssSize = ABSOLUTE( _ovl_Bg_Ice_ObjectsSegmentBssEnd - _ovl_Bg_Ice_ObjectsSegmentBssStart );

    _ovl_Bg_Ice_ShelterSegmentRomStart = _RomSize;
    ..ovl_Bg_Ice_Shelter : AT(_RomSize)
    {
        _ovl_Bg_Ice_ShelterSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ShelterSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Shelter/z_bg_ice_shelter.o (.text)
            build/data/overlays/actors/z_bg_ice_shelter.data.o (.text)
            build/data/overlays/actors/z_bg_ice_shelter.reloc.o (.text)
        _ovl_Bg_Ice_ShelterSegmentTextEnd = .;
    _ovl_Bg_Ice_ShelterSegmentTextSize = ABSOLUTE( _ovl_Bg_Ice_ShelterSegmentTextEnd - _ovl_Bg_Ice_ShelterSegmentTextStart );
        _ovl_Bg_Ice_ShelterSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Shelter/z_bg_ice_shelter.o (.data)
            build/data/overlays/actors/z_bg_ice_shelter.data.o (.data)
            build/data/overlays/actors/z_bg_ice_shelter.reloc.o (.data)
        _ovl_Bg_Ice_ShelterSegmentDataEnd = .;
    _ovl_Bg_Ice_ShelterSegmentDataSize = ABSOLUTE( _ovl_Bg_Ice_ShelterSegmentDataEnd - _ovl_Bg_Ice_ShelterSegmentDataStart );
        _ovl_Bg_Ice_ShelterSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Shelter/z_bg_ice_shelter.o (.rodata)
            build/data/overlays/actors/z_bg_ice_shelter.data.o (.rodata)
            build/data/overlays/actors/z_bg_ice_shelter.reloc.o (.rodata)
        _ovl_Bg_Ice_ShelterSegmentRoDataEnd = .;
    _ovl_Bg_Ice_ShelterSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Ice_ShelterSegmentRoDataEnd - _ovl_Bg_Ice_ShelterSegmentRoDataStart );
        _ovl_Bg_Ice_ShelterSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Shelter/z_bg_ice_shelter.o (.sdata)
            build/data/overlays/actors/z_bg_ice_shelter.data.o (.sdata)
            build/data/overlays/actors/z_bg_ice_shelter.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ShelterSegmentSDataEnd = .;
        _ovl_Bg_Ice_ShelterSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Shelter/z_bg_ice_shelter.o (.ovl)
            build/data/overlays/actors/z_bg_ice_shelter.data.o (.ovl)
            build/data/overlays/actors/z_bg_ice_shelter.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ShelterSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Ice_ShelterSegmentOvlEnd - _ovl_Bg_Ice_ShelterSegmentTextStart );
    _ovl_Bg_Ice_ShelterSegmentRomEnd = _RomSize;

    ..ovl_Bg_Ice_Shelter.bss ADDR(..ovl_Bg_Ice_Shelter) + SIZEOF(..ovl_Bg_Ice_Shelter) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ShelterSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Shelter/z_bg_ice_shelter.o (.sbss)
            build/data/overlays/actors/z_bg_ice_shelter.data.o (.sbss)
            build/data/overlays/actors/z_bg_ice_shelter.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ice_Shelter/z_bg_ice_shelter.o (.scommon)
            build/data/overlays/actors/z_bg_ice_shelter.data.o (.scommon)
            build/data/overlays/actors/z_bg_ice_shelter.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ice_Shelter/z_bg_ice_shelter.o (.bss)
            build/data/overlays/actors/z_bg_ice_shelter.data.o (.bss)
            build/data/overlays/actors/z_bg_ice_shelter.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ice_Shelter/z_bg_ice_shelter.o (COMMON)
            build/data/overlays/actors/z_bg_ice_shelter.data.o (COMMON)
            build/data/overlays/actors/z_bg_ice_shelter.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ShelterSegmentBssEnd = .;
        _ovl_Bg_Ice_ShelterSegmentEnd = .;
    }
    _ovl_Bg_Ice_ShelterSegmentBssSize = ABSOLUTE( _ovl_Bg_Ice_ShelterSegmentBssEnd - _ovl_Bg_Ice_ShelterSegmentBssStart );

    _ovl_Bg_Ice_ShutterSegmentRomStart = _RomSize;
    ..ovl_Bg_Ice_Shutter : AT(_RomSize)
    {
        _ovl_Bg_Ice_ShutterSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ShutterSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/z_bg_ice_shutter.o (.text)
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/ovl_Bg_Ice_Shutter_reloc.o (.text)
        _ovl_Bg_Ice_ShutterSegmentTextEnd = .;
    _ovl_Bg_Ice_ShutterSegmentTextSize = ABSOLUTE( _ovl_Bg_Ice_ShutterSegmentTextEnd - _ovl_Bg_Ice_ShutterSegmentTextStart );
        _ovl_Bg_Ice_ShutterSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/z_bg_ice_shutter.o (.data)
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/ovl_Bg_Ice_Shutter_reloc.o (.data)
        _ovl_Bg_Ice_ShutterSegmentDataEnd = .;
    _ovl_Bg_Ice_ShutterSegmentDataSize = ABSOLUTE( _ovl_Bg_Ice_ShutterSegmentDataEnd - _ovl_Bg_Ice_ShutterSegmentDataStart );
        _ovl_Bg_Ice_ShutterSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/z_bg_ice_shutter.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/ovl_Bg_Ice_Shutter_reloc.o (.rodata)
        _ovl_Bg_Ice_ShutterSegmentRoDataEnd = .;
    _ovl_Bg_Ice_ShutterSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Ice_ShutterSegmentRoDataEnd - _ovl_Bg_Ice_ShutterSegmentRoDataStart );
        _ovl_Bg_Ice_ShutterSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/z_bg_ice_shutter.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/ovl_Bg_Ice_Shutter_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ShutterSegmentSDataEnd = .;
        _ovl_Bg_Ice_ShutterSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/z_bg_ice_shutter.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/ovl_Bg_Ice_Shutter_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ShutterSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Ice_ShutterSegmentOvlEnd - _ovl_Bg_Ice_ShutterSegmentTextStart );
    _ovl_Bg_Ice_ShutterSegmentRomEnd = _RomSize;

    ..ovl_Bg_Ice_Shutter.bss ADDR(..ovl_Bg_Ice_Shutter) + SIZEOF(..ovl_Bg_Ice_Shutter) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ShutterSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/z_bg_ice_shutter.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/ovl_Bg_Ice_Shutter_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/z_bg_ice_shutter.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/ovl_Bg_Ice_Shutter_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/z_bg_ice_shutter.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/ovl_Bg_Ice_Shutter_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/z_bg_ice_shutter.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Ice_Shutter/ovl_Bg_Ice_Shutter_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Ice_ShutterSegmentBssEnd = .;
        _ovl_Bg_Ice_ShutterSegmentEnd = .;
    }
    _ovl_Bg_Ice_ShutterSegmentBssSize = ABSOLUTE( _ovl_Bg_Ice_ShutterSegmentBssEnd - _ovl_Bg_Ice_ShutterSegmentBssStart );

    _ovl_Bg_Ice_TuraraSegmentRomStart = _RomSize;
    ..ovl_Bg_Ice_Turara : AT(_RomSize)
    {
        _ovl_Bg_Ice_TuraraSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Ice_TuraraSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Turara/z_bg_ice_turara.o (.text)
            build/data/overlays/actors/z_bg_ice_turara.data.o (.text)
            build/data/overlays/actors/z_bg_ice_turara.reloc.o (.text)
        _ovl_Bg_Ice_TuraraSegmentTextEnd = .;
    _ovl_Bg_Ice_TuraraSegmentTextSize = ABSOLUTE( _ovl_Bg_Ice_TuraraSegmentTextEnd - _ovl_Bg_Ice_TuraraSegmentTextStart );
        _ovl_Bg_Ice_TuraraSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Turara/z_bg_ice_turara.o (.data)
            build/data/overlays/actors/z_bg_ice_turara.data.o (.data)
            build/data/overlays/actors/z_bg_ice_turara.reloc.o (.data)
        _ovl_Bg_Ice_TuraraSegmentDataEnd = .;
    _ovl_Bg_Ice_TuraraSegmentDataSize = ABSOLUTE( _ovl_Bg_Ice_TuraraSegmentDataEnd - _ovl_Bg_Ice_TuraraSegmentDataStart );
        _ovl_Bg_Ice_TuraraSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Turara/z_bg_ice_turara.o (.rodata)
            build/data/overlays/actors/z_bg_ice_turara.data.o (.rodata)
            build/data/overlays/actors/z_bg_ice_turara.reloc.o (.rodata)
        _ovl_Bg_Ice_TuraraSegmentRoDataEnd = .;
    _ovl_Bg_Ice_TuraraSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Ice_TuraraSegmentRoDataEnd - _ovl_Bg_Ice_TuraraSegmentRoDataStart );
        _ovl_Bg_Ice_TuraraSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Turara/z_bg_ice_turara.o (.sdata)
            build/data/overlays/actors/z_bg_ice_turara.data.o (.sdata)
            build/data/overlays/actors/z_bg_ice_turara.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Ice_TuraraSegmentSDataEnd = .;
        _ovl_Bg_Ice_TuraraSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Turara/z_bg_ice_turara.o (.ovl)
            build/data/overlays/actors/z_bg_ice_turara.data.o (.ovl)
            build/data/overlays/actors/z_bg_ice_turara.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Ice_TuraraSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Ice_TuraraSegmentOvlEnd - _ovl_Bg_Ice_TuraraSegmentTextStart );
    _ovl_Bg_Ice_TuraraSegmentRomEnd = _RomSize;

    ..ovl_Bg_Ice_Turara.bss ADDR(..ovl_Bg_Ice_Turara) + SIZEOF(..ovl_Bg_Ice_Turara) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Ice_TuraraSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Ice_Turara/z_bg_ice_turara.o (.sbss)
            build/data/overlays/actors/z_bg_ice_turara.data.o (.sbss)
            build/data/overlays/actors/z_bg_ice_turara.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ice_Turara/z_bg_ice_turara.o (.scommon)
            build/data/overlays/actors/z_bg_ice_turara.data.o (.scommon)
            build/data/overlays/actors/z_bg_ice_turara.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ice_Turara/z_bg_ice_turara.o (.bss)
            build/data/overlays/actors/z_bg_ice_turara.data.o (.bss)
            build/data/overlays/actors/z_bg_ice_turara.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ice_Turara/z_bg_ice_turara.o (COMMON)
            build/data/overlays/actors/z_bg_ice_turara.data.o (COMMON)
            build/data/overlays/actors/z_bg_ice_turara.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Ice_TuraraSegmentBssEnd = .;
        _ovl_Bg_Ice_TuraraSegmentEnd = .;
    }
    _ovl_Bg_Ice_TuraraSegmentBssSize = ABSOLUTE( _ovl_Bg_Ice_TuraraSegmentBssEnd - _ovl_Bg_Ice_TuraraSegmentBssStart );

    _ovl_Bg_IngateSegmentRomStart = _RomSize;
    ..ovl_Bg_Ingate : AT(_RomSize)
    {
        _ovl_Bg_IngateSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_IngateSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Ingate/z_bg_ingate.o (.text)
            build/src/overlays/actors/ovl_Bg_Ingate/ovl_Bg_Ingate_reloc.o (.text)
        _ovl_Bg_IngateSegmentTextEnd = .;
    _ovl_Bg_IngateSegmentTextSize = ABSOLUTE( _ovl_Bg_IngateSegmentTextEnd - _ovl_Bg_IngateSegmentTextStart );
        _ovl_Bg_IngateSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ingate/z_bg_ingate.o (.data)
            build/src/overlays/actors/ovl_Bg_Ingate/ovl_Bg_Ingate_reloc.o (.data)
        _ovl_Bg_IngateSegmentDataEnd = .;
    _ovl_Bg_IngateSegmentDataSize = ABSOLUTE( _ovl_Bg_IngateSegmentDataEnd - _ovl_Bg_IngateSegmentDataStart );
        _ovl_Bg_IngateSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ingate/z_bg_ingate.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Ingate/ovl_Bg_Ingate_reloc.o (.rodata)
        _ovl_Bg_IngateSegmentRoDataEnd = .;
    _ovl_Bg_IngateSegmentRoDataSize = ABSOLUTE( _ovl_Bg_IngateSegmentRoDataEnd - _ovl_Bg_IngateSegmentRoDataStart );
        _ovl_Bg_IngateSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ingate/z_bg_ingate.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Ingate/ovl_Bg_Ingate_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_IngateSegmentSDataEnd = .;
        _ovl_Bg_IngateSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Ingate/z_bg_ingate.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Ingate/ovl_Bg_Ingate_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_IngateSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_IngateSegmentOvlEnd - _ovl_Bg_IngateSegmentTextStart );
    _ovl_Bg_IngateSegmentRomEnd = _RomSize;

    ..ovl_Bg_Ingate.bss ADDR(..ovl_Bg_Ingate) + SIZEOF(..ovl_Bg_Ingate) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_IngateSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Ingate/z_bg_ingate.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ingate/ovl_Bg_Ingate_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ingate/z_bg_ingate.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ingate/ovl_Bg_Ingate_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ingate/z_bg_ingate.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ingate/ovl_Bg_Ingate_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ingate/z_bg_ingate.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Ingate/ovl_Bg_Ingate_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_IngateSegmentBssEnd = .;
        _ovl_Bg_IngateSegmentEnd = .;
    }
    _ovl_Bg_IngateSegmentBssSize = ABSOLUTE( _ovl_Bg_IngateSegmentBssEnd - _ovl_Bg_IngateSegmentBssStart );

    _ovl_Bg_Jya_1fliftSegmentRomStart = _RomSize;
    ..ovl_Bg_Jya_1flift : AT(_RomSize)
    {
        _ovl_Bg_Jya_1fliftSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Jya_1fliftSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_1flift/z_bg_jya_1flift.o (.text)
            build/src/overlays/actors/ovl_Bg_Jya_1flift/ovl_Bg_Jya_1flift_reloc.o (.text)
        _ovl_Bg_Jya_1fliftSegmentTextEnd = .;
    _ovl_Bg_Jya_1fliftSegmentTextSize = ABSOLUTE( _ovl_Bg_Jya_1fliftSegmentTextEnd - _ovl_Bg_Jya_1fliftSegmentTextStart );
        _ovl_Bg_Jya_1fliftSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_1flift/z_bg_jya_1flift.o (.data)
            build/src/overlays/actors/ovl_Bg_Jya_1flift/ovl_Bg_Jya_1flift_reloc.o (.data)
        _ovl_Bg_Jya_1fliftSegmentDataEnd = .;
    _ovl_Bg_Jya_1fliftSegmentDataSize = ABSOLUTE( _ovl_Bg_Jya_1fliftSegmentDataEnd - _ovl_Bg_Jya_1fliftSegmentDataStart );
        _ovl_Bg_Jya_1fliftSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_1flift/z_bg_jya_1flift.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Jya_1flift/ovl_Bg_Jya_1flift_reloc.o (.rodata)
        _ovl_Bg_Jya_1fliftSegmentRoDataEnd = .;
    _ovl_Bg_Jya_1fliftSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Jya_1fliftSegmentRoDataEnd - _ovl_Bg_Jya_1fliftSegmentRoDataStart );
        _ovl_Bg_Jya_1fliftSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_1flift/z_bg_jya_1flift.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Jya_1flift/ovl_Bg_Jya_1flift_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_1fliftSegmentSDataEnd = .;
        _ovl_Bg_Jya_1fliftSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_1flift/z_bg_jya_1flift.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Jya_1flift/ovl_Bg_Jya_1flift_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_1fliftSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Jya_1fliftSegmentOvlEnd - _ovl_Bg_Jya_1fliftSegmentTextStart );
    _ovl_Bg_Jya_1fliftSegmentRomEnd = _RomSize;

    ..ovl_Bg_Jya_1flift.bss ADDR(..ovl_Bg_Jya_1flift) + SIZEOF(..ovl_Bg_Jya_1flift) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Jya_1fliftSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_1flift/z_bg_jya_1flift.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_1flift/ovl_Bg_Jya_1flift_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_1flift/z_bg_jya_1flift.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_1flift/ovl_Bg_Jya_1flift_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_1flift/z_bg_jya_1flift.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_1flift/ovl_Bg_Jya_1flift_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_1flift/z_bg_jya_1flift.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Jya_1flift/ovl_Bg_Jya_1flift_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_1fliftSegmentBssEnd = .;
        _ovl_Bg_Jya_1fliftSegmentEnd = .;
    }
    _ovl_Bg_Jya_1fliftSegmentBssSize = ABSOLUTE( _ovl_Bg_Jya_1fliftSegmentBssEnd - _ovl_Bg_Jya_1fliftSegmentBssStart );

    _ovl_Bg_Jya_AmishutterSegmentRomStart = _RomSize;
    ..ovl_Bg_Jya_Amishutter : AT(_RomSize)
    {
        _ovl_Bg_Jya_AmishutterSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Jya_AmishutterSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/z_bg_jya_amishutter.o (.text)
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/ovl_Bg_Jya_Amishutter_reloc.o (.text)
        _ovl_Bg_Jya_AmishutterSegmentTextEnd = .;
    _ovl_Bg_Jya_AmishutterSegmentTextSize = ABSOLUTE( _ovl_Bg_Jya_AmishutterSegmentTextEnd - _ovl_Bg_Jya_AmishutterSegmentTextStart );
        _ovl_Bg_Jya_AmishutterSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/z_bg_jya_amishutter.o (.data)
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/ovl_Bg_Jya_Amishutter_reloc.o (.data)
        _ovl_Bg_Jya_AmishutterSegmentDataEnd = .;
    _ovl_Bg_Jya_AmishutterSegmentDataSize = ABSOLUTE( _ovl_Bg_Jya_AmishutterSegmentDataEnd - _ovl_Bg_Jya_AmishutterSegmentDataStart );
        _ovl_Bg_Jya_AmishutterSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/z_bg_jya_amishutter.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/ovl_Bg_Jya_Amishutter_reloc.o (.rodata)
        _ovl_Bg_Jya_AmishutterSegmentRoDataEnd = .;
    _ovl_Bg_Jya_AmishutterSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Jya_AmishutterSegmentRoDataEnd - _ovl_Bg_Jya_AmishutterSegmentRoDataStart );
        _ovl_Bg_Jya_AmishutterSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/z_bg_jya_amishutter.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/ovl_Bg_Jya_Amishutter_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_AmishutterSegmentSDataEnd = .;
        _ovl_Bg_Jya_AmishutterSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/z_bg_jya_amishutter.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/ovl_Bg_Jya_Amishutter_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_AmishutterSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Jya_AmishutterSegmentOvlEnd - _ovl_Bg_Jya_AmishutterSegmentTextStart );
    _ovl_Bg_Jya_AmishutterSegmentRomEnd = _RomSize;

    ..ovl_Bg_Jya_Amishutter.bss ADDR(..ovl_Bg_Jya_Amishutter) + SIZEOF(..ovl_Bg_Jya_Amishutter) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Jya_AmishutterSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/z_bg_jya_amishutter.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/ovl_Bg_Jya_Amishutter_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/z_bg_jya_amishutter.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/ovl_Bg_Jya_Amishutter_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/z_bg_jya_amishutter.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/ovl_Bg_Jya_Amishutter_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/z_bg_jya_amishutter.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Jya_Amishutter/ovl_Bg_Jya_Amishutter_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_AmishutterSegmentBssEnd = .;
        _ovl_Bg_Jya_AmishutterSegmentEnd = .;
    }
    _ovl_Bg_Jya_AmishutterSegmentBssSize = ABSOLUTE( _ovl_Bg_Jya_AmishutterSegmentBssEnd - _ovl_Bg_Jya_AmishutterSegmentBssStart );

    _ovl_Bg_Jya_BigmirrorSegmentRomStart = _RomSize;
    ..ovl_Bg_Jya_Bigmirror : AT(_RomSize)
    {
        _ovl_Bg_Jya_BigmirrorSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BigmirrorSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bigmirror/z_bg_jya_bigmirror.o (.text)
            build/data/overlays/actors/z_bg_jya_bigmirror.data.o (.text)
            build/data/overlays/actors/z_bg_jya_bigmirror.reloc.o (.text)
        _ovl_Bg_Jya_BigmirrorSegmentTextEnd = .;
    _ovl_Bg_Jya_BigmirrorSegmentTextSize = ABSOLUTE( _ovl_Bg_Jya_BigmirrorSegmentTextEnd - _ovl_Bg_Jya_BigmirrorSegmentTextStart );
        _ovl_Bg_Jya_BigmirrorSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bigmirror/z_bg_jya_bigmirror.o (.data)
            build/data/overlays/actors/z_bg_jya_bigmirror.data.o (.data)
            build/data/overlays/actors/z_bg_jya_bigmirror.reloc.o (.data)
        _ovl_Bg_Jya_BigmirrorSegmentDataEnd = .;
    _ovl_Bg_Jya_BigmirrorSegmentDataSize = ABSOLUTE( _ovl_Bg_Jya_BigmirrorSegmentDataEnd - _ovl_Bg_Jya_BigmirrorSegmentDataStart );
        _ovl_Bg_Jya_BigmirrorSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bigmirror/z_bg_jya_bigmirror.o (.rodata)
            build/data/overlays/actors/z_bg_jya_bigmirror.data.o (.rodata)
            build/data/overlays/actors/z_bg_jya_bigmirror.reloc.o (.rodata)
        _ovl_Bg_Jya_BigmirrorSegmentRoDataEnd = .;
    _ovl_Bg_Jya_BigmirrorSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Jya_BigmirrorSegmentRoDataEnd - _ovl_Bg_Jya_BigmirrorSegmentRoDataStart );
        _ovl_Bg_Jya_BigmirrorSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bigmirror/z_bg_jya_bigmirror.o (.sdata)
            build/data/overlays/actors/z_bg_jya_bigmirror.data.o (.sdata)
            build/data/overlays/actors/z_bg_jya_bigmirror.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BigmirrorSegmentSDataEnd = .;
        _ovl_Bg_Jya_BigmirrorSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bigmirror/z_bg_jya_bigmirror.o (.ovl)
            build/data/overlays/actors/z_bg_jya_bigmirror.data.o (.ovl)
            build/data/overlays/actors/z_bg_jya_bigmirror.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BigmirrorSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Jya_BigmirrorSegmentOvlEnd - _ovl_Bg_Jya_BigmirrorSegmentTextStart );
    _ovl_Bg_Jya_BigmirrorSegmentRomEnd = _RomSize;

    ..ovl_Bg_Jya_Bigmirror.bss ADDR(..ovl_Bg_Jya_Bigmirror) + SIZEOF(..ovl_Bg_Jya_Bigmirror) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BigmirrorSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bigmirror/z_bg_jya_bigmirror.o (.sbss)
            build/data/overlays/actors/z_bg_jya_bigmirror.data.o (.sbss)
            build/data/overlays/actors/z_bg_jya_bigmirror.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Bigmirror/z_bg_jya_bigmirror.o (.scommon)
            build/data/overlays/actors/z_bg_jya_bigmirror.data.o (.scommon)
            build/data/overlays/actors/z_bg_jya_bigmirror.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Bigmirror/z_bg_jya_bigmirror.o (.bss)
            build/data/overlays/actors/z_bg_jya_bigmirror.data.o (.bss)
            build/data/overlays/actors/z_bg_jya_bigmirror.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Bigmirror/z_bg_jya_bigmirror.o (COMMON)
            build/data/overlays/actors/z_bg_jya_bigmirror.data.o (COMMON)
            build/data/overlays/actors/z_bg_jya_bigmirror.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BigmirrorSegmentBssEnd = .;
        _ovl_Bg_Jya_BigmirrorSegmentEnd = .;
    }
    _ovl_Bg_Jya_BigmirrorSegmentBssSize = ABSOLUTE( _ovl_Bg_Jya_BigmirrorSegmentBssEnd - _ovl_Bg_Jya_BigmirrorSegmentBssStart );

    _ovl_Bg_Jya_BlockSegmentRomStart = _RomSize;
    ..ovl_Bg_Jya_Block : AT(_RomSize)
    {
        _ovl_Bg_Jya_BlockSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BlockSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Block/z_bg_jya_block.o (.text)
            build/src/overlays/actors/ovl_Bg_Jya_Block/ovl_Bg_Jya_Block_reloc.o (.text)
        _ovl_Bg_Jya_BlockSegmentTextEnd = .;
    _ovl_Bg_Jya_BlockSegmentTextSize = ABSOLUTE( _ovl_Bg_Jya_BlockSegmentTextEnd - _ovl_Bg_Jya_BlockSegmentTextStart );
        _ovl_Bg_Jya_BlockSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Block/z_bg_jya_block.o (.data)
            build/src/overlays/actors/ovl_Bg_Jya_Block/ovl_Bg_Jya_Block_reloc.o (.data)
        _ovl_Bg_Jya_BlockSegmentDataEnd = .;
    _ovl_Bg_Jya_BlockSegmentDataSize = ABSOLUTE( _ovl_Bg_Jya_BlockSegmentDataEnd - _ovl_Bg_Jya_BlockSegmentDataStart );
        _ovl_Bg_Jya_BlockSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Block/z_bg_jya_block.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Jya_Block/ovl_Bg_Jya_Block_reloc.o (.rodata)
        _ovl_Bg_Jya_BlockSegmentRoDataEnd = .;
    _ovl_Bg_Jya_BlockSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Jya_BlockSegmentRoDataEnd - _ovl_Bg_Jya_BlockSegmentRoDataStart );
        _ovl_Bg_Jya_BlockSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Block/z_bg_jya_block.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Jya_Block/ovl_Bg_Jya_Block_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BlockSegmentSDataEnd = .;
        _ovl_Bg_Jya_BlockSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Block/z_bg_jya_block.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Jya_Block/ovl_Bg_Jya_Block_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BlockSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Jya_BlockSegmentOvlEnd - _ovl_Bg_Jya_BlockSegmentTextStart );
    _ovl_Bg_Jya_BlockSegmentRomEnd = _RomSize;

    ..ovl_Bg_Jya_Block.bss ADDR(..ovl_Bg_Jya_Block) + SIZEOF(..ovl_Bg_Jya_Block) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BlockSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Block/z_bg_jya_block.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Block/ovl_Bg_Jya_Block_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Block/z_bg_jya_block.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Block/ovl_Bg_Jya_Block_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Block/z_bg_jya_block.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Block/ovl_Bg_Jya_Block_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Block/z_bg_jya_block.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Jya_Block/ovl_Bg_Jya_Block_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BlockSegmentBssEnd = .;
        _ovl_Bg_Jya_BlockSegmentEnd = .;
    }
    _ovl_Bg_Jya_BlockSegmentBssSize = ABSOLUTE( _ovl_Bg_Jya_BlockSegmentBssEnd - _ovl_Bg_Jya_BlockSegmentBssStart );

    _ovl_Bg_Jya_BombchuiwaSegmentRomStart = _RomSize;
    ..ovl_Bg_Jya_Bombchuiwa : AT(_RomSize)
    {
        _ovl_Bg_Jya_BombchuiwaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BombchuiwaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bombchuiwa/z_bg_jya_bombchuiwa.o (.text)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.data.o (.text)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.reloc.o (.text)
        _ovl_Bg_Jya_BombchuiwaSegmentTextEnd = .;
    _ovl_Bg_Jya_BombchuiwaSegmentTextSize = ABSOLUTE( _ovl_Bg_Jya_BombchuiwaSegmentTextEnd - _ovl_Bg_Jya_BombchuiwaSegmentTextStart );
        _ovl_Bg_Jya_BombchuiwaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bombchuiwa/z_bg_jya_bombchuiwa.o (.data)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.data.o (.data)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.reloc.o (.data)
        _ovl_Bg_Jya_BombchuiwaSegmentDataEnd = .;
    _ovl_Bg_Jya_BombchuiwaSegmentDataSize = ABSOLUTE( _ovl_Bg_Jya_BombchuiwaSegmentDataEnd - _ovl_Bg_Jya_BombchuiwaSegmentDataStart );
        _ovl_Bg_Jya_BombchuiwaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bombchuiwa/z_bg_jya_bombchuiwa.o (.rodata)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.data.o (.rodata)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.reloc.o (.rodata)
        _ovl_Bg_Jya_BombchuiwaSegmentRoDataEnd = .;
    _ovl_Bg_Jya_BombchuiwaSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Jya_BombchuiwaSegmentRoDataEnd - _ovl_Bg_Jya_BombchuiwaSegmentRoDataStart );
        _ovl_Bg_Jya_BombchuiwaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bombchuiwa/z_bg_jya_bombchuiwa.o (.sdata)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.data.o (.sdata)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BombchuiwaSegmentSDataEnd = .;
        _ovl_Bg_Jya_BombchuiwaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bombchuiwa/z_bg_jya_bombchuiwa.o (.ovl)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.data.o (.ovl)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BombchuiwaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Jya_BombchuiwaSegmentOvlEnd - _ovl_Bg_Jya_BombchuiwaSegmentTextStart );
    _ovl_Bg_Jya_BombchuiwaSegmentRomEnd = _RomSize;

    ..ovl_Bg_Jya_Bombchuiwa.bss ADDR(..ovl_Bg_Jya_Bombchuiwa) + SIZEOF(..ovl_Bg_Jya_Bombchuiwa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BombchuiwaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bombchuiwa/z_bg_jya_bombchuiwa.o (.sbss)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.data.o (.sbss)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Bombchuiwa/z_bg_jya_bombchuiwa.o (.scommon)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.data.o (.scommon)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Bombchuiwa/z_bg_jya_bombchuiwa.o (.bss)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.data.o (.bss)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Bombchuiwa/z_bg_jya_bombchuiwa.o (COMMON)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.data.o (COMMON)
            build/data/overlays/actors/z_bg_jya_bombchuiwa.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BombchuiwaSegmentBssEnd = .;
        _ovl_Bg_Jya_BombchuiwaSegmentEnd = .;
    }
    _ovl_Bg_Jya_BombchuiwaSegmentBssSize = ABSOLUTE( _ovl_Bg_Jya_BombchuiwaSegmentBssEnd - _ovl_Bg_Jya_BombchuiwaSegmentBssStart );

    _ovl_Bg_Jya_BombiwaSegmentRomStart = _RomSize;
    ..ovl_Bg_Jya_Bombiwa : AT(_RomSize)
    {
        _ovl_Bg_Jya_BombiwaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BombiwaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/z_bg_jya_bombiwa.o (.text)
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/ovl_Bg_Jya_Bombiwa_reloc.o (.text)
        _ovl_Bg_Jya_BombiwaSegmentTextEnd = .;
    _ovl_Bg_Jya_BombiwaSegmentTextSize = ABSOLUTE( _ovl_Bg_Jya_BombiwaSegmentTextEnd - _ovl_Bg_Jya_BombiwaSegmentTextStart );
        _ovl_Bg_Jya_BombiwaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/z_bg_jya_bombiwa.o (.data)
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/ovl_Bg_Jya_Bombiwa_reloc.o (.data)
        _ovl_Bg_Jya_BombiwaSegmentDataEnd = .;
    _ovl_Bg_Jya_BombiwaSegmentDataSize = ABSOLUTE( _ovl_Bg_Jya_BombiwaSegmentDataEnd - _ovl_Bg_Jya_BombiwaSegmentDataStart );
        _ovl_Bg_Jya_BombiwaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/z_bg_jya_bombiwa.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/ovl_Bg_Jya_Bombiwa_reloc.o (.rodata)
        _ovl_Bg_Jya_BombiwaSegmentRoDataEnd = .;
    _ovl_Bg_Jya_BombiwaSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Jya_BombiwaSegmentRoDataEnd - _ovl_Bg_Jya_BombiwaSegmentRoDataStart );
        _ovl_Bg_Jya_BombiwaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/z_bg_jya_bombiwa.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/ovl_Bg_Jya_Bombiwa_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BombiwaSegmentSDataEnd = .;
        _ovl_Bg_Jya_BombiwaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/z_bg_jya_bombiwa.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/ovl_Bg_Jya_Bombiwa_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BombiwaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Jya_BombiwaSegmentOvlEnd - _ovl_Bg_Jya_BombiwaSegmentTextStart );
    _ovl_Bg_Jya_BombiwaSegmentRomEnd = _RomSize;

    ..ovl_Bg_Jya_Bombiwa.bss ADDR(..ovl_Bg_Jya_Bombiwa) + SIZEOF(..ovl_Bg_Jya_Bombiwa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BombiwaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/z_bg_jya_bombiwa.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/ovl_Bg_Jya_Bombiwa_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/z_bg_jya_bombiwa.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/ovl_Bg_Jya_Bombiwa_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/z_bg_jya_bombiwa.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/ovl_Bg_Jya_Bombiwa_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/z_bg_jya_bombiwa.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Jya_Bombiwa/ovl_Bg_Jya_Bombiwa_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_BombiwaSegmentBssEnd = .;
        _ovl_Bg_Jya_BombiwaSegmentEnd = .;
    }
    _ovl_Bg_Jya_BombiwaSegmentBssSize = ABSOLUTE( _ovl_Bg_Jya_BombiwaSegmentBssEnd - _ovl_Bg_Jya_BombiwaSegmentBssStart );

    _ovl_Bg_Jya_CobraSegmentRomStart = _RomSize;
    ..ovl_Bg_Jya_Cobra : AT(_RomSize)
    {
        _ovl_Bg_Jya_CobraSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Jya_CobraSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Cobra/z_bg_jya_cobra.o (.text)
            build/data/overlays/actors/z_bg_jya_cobra.data.o (.text)
            build/data/overlays/actors/z_bg_jya_cobra.reloc.o (.text)
        _ovl_Bg_Jya_CobraSegmentTextEnd = .;
    _ovl_Bg_Jya_CobraSegmentTextSize = ABSOLUTE( _ovl_Bg_Jya_CobraSegmentTextEnd - _ovl_Bg_Jya_CobraSegmentTextStart );
        _ovl_Bg_Jya_CobraSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Cobra/z_bg_jya_cobra.o (.data)
            build/data/overlays/actors/z_bg_jya_cobra.data.o (.data)
            build/data/overlays/actors/z_bg_jya_cobra.reloc.o (.data)
        _ovl_Bg_Jya_CobraSegmentDataEnd = .;
    _ovl_Bg_Jya_CobraSegmentDataSize = ABSOLUTE( _ovl_Bg_Jya_CobraSegmentDataEnd - _ovl_Bg_Jya_CobraSegmentDataStart );
        _ovl_Bg_Jya_CobraSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Cobra/z_bg_jya_cobra.o (.rodata)
            build/data/overlays/actors/z_bg_jya_cobra.data.o (.rodata)
            build/data/overlays/actors/z_bg_jya_cobra.reloc.o (.rodata)
        _ovl_Bg_Jya_CobraSegmentRoDataEnd = .;
    _ovl_Bg_Jya_CobraSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Jya_CobraSegmentRoDataEnd - _ovl_Bg_Jya_CobraSegmentRoDataStart );
        _ovl_Bg_Jya_CobraSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Cobra/z_bg_jya_cobra.o (.sdata)
            build/data/overlays/actors/z_bg_jya_cobra.data.o (.sdata)
            build/data/overlays/actors/z_bg_jya_cobra.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_CobraSegmentSDataEnd = .;
        _ovl_Bg_Jya_CobraSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Cobra/z_bg_jya_cobra.o (.ovl)
            build/data/overlays/actors/z_bg_jya_cobra.data.o (.ovl)
            build/data/overlays/actors/z_bg_jya_cobra.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_CobraSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Jya_CobraSegmentOvlEnd - _ovl_Bg_Jya_CobraSegmentTextStart );
    _ovl_Bg_Jya_CobraSegmentRomEnd = _RomSize;

    ..ovl_Bg_Jya_Cobra.bss ADDR(..ovl_Bg_Jya_Cobra) + SIZEOF(..ovl_Bg_Jya_Cobra) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Jya_CobraSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Cobra/z_bg_jya_cobra.o (.sbss)
            build/data/overlays/actors/z_bg_jya_cobra.data.o (.sbss)
            build/data/overlays/actors/z_bg_jya_cobra.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Cobra/z_bg_jya_cobra.o (.scommon)
            build/data/overlays/actors/z_bg_jya_cobra.data.o (.scommon)
            build/data/overlays/actors/z_bg_jya_cobra.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Cobra/z_bg_jya_cobra.o (.bss)
            build/data/overlays/actors/z_bg_jya_cobra.data.o (.bss)
            build/data/overlays/actors/z_bg_jya_cobra.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Cobra/z_bg_jya_cobra.o (COMMON)
            build/data/overlays/actors/z_bg_jya_cobra.data.o (COMMON)
            build/data/overlays/actors/z_bg_jya_cobra.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_CobraSegmentBssEnd = .;
        _ovl_Bg_Jya_CobraSegmentEnd = .;
    }
    _ovl_Bg_Jya_CobraSegmentBssSize = ABSOLUTE( _ovl_Bg_Jya_CobraSegmentBssEnd - _ovl_Bg_Jya_CobraSegmentBssStart );

    _ovl_Bg_Jya_GoroiwaSegmentRomStart = _RomSize;
    ..ovl_Bg_Jya_Goroiwa : AT(_RomSize)
    {
        _ovl_Bg_Jya_GoroiwaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Jya_GoroiwaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/z_bg_jya_goroiwa.o (.text)
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/ovl_Bg_Jya_Goroiwa_reloc.o (.text)
        _ovl_Bg_Jya_GoroiwaSegmentTextEnd = .;
    _ovl_Bg_Jya_GoroiwaSegmentTextSize = ABSOLUTE( _ovl_Bg_Jya_GoroiwaSegmentTextEnd - _ovl_Bg_Jya_GoroiwaSegmentTextStart );
        _ovl_Bg_Jya_GoroiwaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/z_bg_jya_goroiwa.o (.data)
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/ovl_Bg_Jya_Goroiwa_reloc.o (.data)
        _ovl_Bg_Jya_GoroiwaSegmentDataEnd = .;
    _ovl_Bg_Jya_GoroiwaSegmentDataSize = ABSOLUTE( _ovl_Bg_Jya_GoroiwaSegmentDataEnd - _ovl_Bg_Jya_GoroiwaSegmentDataStart );
        _ovl_Bg_Jya_GoroiwaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/z_bg_jya_goroiwa.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/ovl_Bg_Jya_Goroiwa_reloc.o (.rodata)
        _ovl_Bg_Jya_GoroiwaSegmentRoDataEnd = .;
    _ovl_Bg_Jya_GoroiwaSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Jya_GoroiwaSegmentRoDataEnd - _ovl_Bg_Jya_GoroiwaSegmentRoDataStart );
        _ovl_Bg_Jya_GoroiwaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/z_bg_jya_goroiwa.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/ovl_Bg_Jya_Goroiwa_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_GoroiwaSegmentSDataEnd = .;
        _ovl_Bg_Jya_GoroiwaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/z_bg_jya_goroiwa.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/ovl_Bg_Jya_Goroiwa_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_GoroiwaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Jya_GoroiwaSegmentOvlEnd - _ovl_Bg_Jya_GoroiwaSegmentTextStart );
    _ovl_Bg_Jya_GoroiwaSegmentRomEnd = _RomSize;

    ..ovl_Bg_Jya_Goroiwa.bss ADDR(..ovl_Bg_Jya_Goroiwa) + SIZEOF(..ovl_Bg_Jya_Goroiwa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Jya_GoroiwaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/z_bg_jya_goroiwa.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/ovl_Bg_Jya_Goroiwa_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/z_bg_jya_goroiwa.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/ovl_Bg_Jya_Goroiwa_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/z_bg_jya_goroiwa.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/ovl_Bg_Jya_Goroiwa_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/z_bg_jya_goroiwa.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Jya_Goroiwa/ovl_Bg_Jya_Goroiwa_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_GoroiwaSegmentBssEnd = .;
        _ovl_Bg_Jya_GoroiwaSegmentEnd = .;
    }
    _ovl_Bg_Jya_GoroiwaSegmentBssSize = ABSOLUTE( _ovl_Bg_Jya_GoroiwaSegmentBssEnd - _ovl_Bg_Jya_GoroiwaSegmentBssStart );

    _ovl_Bg_Jya_HahenironSegmentRomStart = _RomSize;
    ..ovl_Bg_Jya_Haheniron : AT(_RomSize)
    {
        _ovl_Bg_Jya_HahenironSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Jya_HahenironSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Haheniron/z_bg_jya_haheniron.o (.text)
            build/data/overlays/actors/z_bg_jya_haheniron.data.o (.text)
            build/data/overlays/actors/z_bg_jya_haheniron.reloc.o (.text)
        _ovl_Bg_Jya_HahenironSegmentTextEnd = .;
    _ovl_Bg_Jya_HahenironSegmentTextSize = ABSOLUTE( _ovl_Bg_Jya_HahenironSegmentTextEnd - _ovl_Bg_Jya_HahenironSegmentTextStart );
        _ovl_Bg_Jya_HahenironSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Haheniron/z_bg_jya_haheniron.o (.data)
            build/data/overlays/actors/z_bg_jya_haheniron.data.o (.data)
            build/data/overlays/actors/z_bg_jya_haheniron.reloc.o (.data)
        _ovl_Bg_Jya_HahenironSegmentDataEnd = .;
    _ovl_Bg_Jya_HahenironSegmentDataSize = ABSOLUTE( _ovl_Bg_Jya_HahenironSegmentDataEnd - _ovl_Bg_Jya_HahenironSegmentDataStart );
        _ovl_Bg_Jya_HahenironSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Haheniron/z_bg_jya_haheniron.o (.rodata)
            build/data/overlays/actors/z_bg_jya_haheniron.data.o (.rodata)
            build/data/overlays/actors/z_bg_jya_haheniron.reloc.o (.rodata)
        _ovl_Bg_Jya_HahenironSegmentRoDataEnd = .;
    _ovl_Bg_Jya_HahenironSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Jya_HahenironSegmentRoDataEnd - _ovl_Bg_Jya_HahenironSegmentRoDataStart );
        _ovl_Bg_Jya_HahenironSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Haheniron/z_bg_jya_haheniron.o (.sdata)
            build/data/overlays/actors/z_bg_jya_haheniron.data.o (.sdata)
            build/data/overlays/actors/z_bg_jya_haheniron.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_HahenironSegmentSDataEnd = .;
        _ovl_Bg_Jya_HahenironSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Haheniron/z_bg_jya_haheniron.o (.ovl)
            build/data/overlays/actors/z_bg_jya_haheniron.data.o (.ovl)
            build/data/overlays/actors/z_bg_jya_haheniron.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_HahenironSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Jya_HahenironSegmentOvlEnd - _ovl_Bg_Jya_HahenironSegmentTextStart );
    _ovl_Bg_Jya_HahenironSegmentRomEnd = _RomSize;

    ..ovl_Bg_Jya_Haheniron.bss ADDR(..ovl_Bg_Jya_Haheniron) + SIZEOF(..ovl_Bg_Jya_Haheniron) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Jya_HahenironSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Haheniron/z_bg_jya_haheniron.o (.sbss)
            build/data/overlays/actors/z_bg_jya_haheniron.data.o (.sbss)
            build/data/overlays/actors/z_bg_jya_haheniron.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Haheniron/z_bg_jya_haheniron.o (.scommon)
            build/data/overlays/actors/z_bg_jya_haheniron.data.o (.scommon)
            build/data/overlays/actors/z_bg_jya_haheniron.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Haheniron/z_bg_jya_haheniron.o (.bss)
            build/data/overlays/actors/z_bg_jya_haheniron.data.o (.bss)
            build/data/overlays/actors/z_bg_jya_haheniron.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Haheniron/z_bg_jya_haheniron.o (COMMON)
            build/data/overlays/actors/z_bg_jya_haheniron.data.o (COMMON)
            build/data/overlays/actors/z_bg_jya_haheniron.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_HahenironSegmentBssEnd = .;
        _ovl_Bg_Jya_HahenironSegmentEnd = .;
    }
    _ovl_Bg_Jya_HahenironSegmentBssSize = ABSOLUTE( _ovl_Bg_Jya_HahenironSegmentBssEnd - _ovl_Bg_Jya_HahenironSegmentBssStart );

    _ovl_Bg_Jya_IronobjSegmentRomStart = _RomSize;
    ..ovl_Bg_Jya_Ironobj : AT(_RomSize)
    {
        _ovl_Bg_Jya_IronobjSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Jya_IronobjSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Ironobj/z_bg_jya_ironobj.o (.text)
            build/data/overlays/actors/z_bg_jya_ironobj.data.o (.text)
            build/data/overlays/actors/z_bg_jya_ironobj.reloc.o (.text)
        _ovl_Bg_Jya_IronobjSegmentTextEnd = .;
    _ovl_Bg_Jya_IronobjSegmentTextSize = ABSOLUTE( _ovl_Bg_Jya_IronobjSegmentTextEnd - _ovl_Bg_Jya_IronobjSegmentTextStart );
        _ovl_Bg_Jya_IronobjSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Ironobj/z_bg_jya_ironobj.o (.data)
            build/data/overlays/actors/z_bg_jya_ironobj.data.o (.data)
            build/data/overlays/actors/z_bg_jya_ironobj.reloc.o (.data)
        _ovl_Bg_Jya_IronobjSegmentDataEnd = .;
    _ovl_Bg_Jya_IronobjSegmentDataSize = ABSOLUTE( _ovl_Bg_Jya_IronobjSegmentDataEnd - _ovl_Bg_Jya_IronobjSegmentDataStart );
        _ovl_Bg_Jya_IronobjSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Ironobj/z_bg_jya_ironobj.o (.rodata)
            build/data/overlays/actors/z_bg_jya_ironobj.data.o (.rodata)
            build/data/overlays/actors/z_bg_jya_ironobj.reloc.o (.rodata)
        _ovl_Bg_Jya_IronobjSegmentRoDataEnd = .;
    _ovl_Bg_Jya_IronobjSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Jya_IronobjSegmentRoDataEnd - _ovl_Bg_Jya_IronobjSegmentRoDataStart );
        _ovl_Bg_Jya_IronobjSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Ironobj/z_bg_jya_ironobj.o (.sdata)
            build/data/overlays/actors/z_bg_jya_ironobj.data.o (.sdata)
            build/data/overlays/actors/z_bg_jya_ironobj.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_IronobjSegmentSDataEnd = .;
        _ovl_Bg_Jya_IronobjSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Ironobj/z_bg_jya_ironobj.o (.ovl)
            build/data/overlays/actors/z_bg_jya_ironobj.data.o (.ovl)
            build/data/overlays/actors/z_bg_jya_ironobj.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_IronobjSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Jya_IronobjSegmentOvlEnd - _ovl_Bg_Jya_IronobjSegmentTextStart );
    _ovl_Bg_Jya_IronobjSegmentRomEnd = _RomSize;

    ..ovl_Bg_Jya_Ironobj.bss ADDR(..ovl_Bg_Jya_Ironobj) + SIZEOF(..ovl_Bg_Jya_Ironobj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Jya_IronobjSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Ironobj/z_bg_jya_ironobj.o (.sbss)
            build/data/overlays/actors/z_bg_jya_ironobj.data.o (.sbss)
            build/data/overlays/actors/z_bg_jya_ironobj.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Ironobj/z_bg_jya_ironobj.o (.scommon)
            build/data/overlays/actors/z_bg_jya_ironobj.data.o (.scommon)
            build/data/overlays/actors/z_bg_jya_ironobj.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Ironobj/z_bg_jya_ironobj.o (.bss)
            build/data/overlays/actors/z_bg_jya_ironobj.data.o (.bss)
            build/data/overlays/actors/z_bg_jya_ironobj.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Ironobj/z_bg_jya_ironobj.o (COMMON)
            build/data/overlays/actors/z_bg_jya_ironobj.data.o (COMMON)
            build/data/overlays/actors/z_bg_jya_ironobj.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_IronobjSegmentBssEnd = .;
        _ovl_Bg_Jya_IronobjSegmentEnd = .;
    }
    _ovl_Bg_Jya_IronobjSegmentBssSize = ABSOLUTE( _ovl_Bg_Jya_IronobjSegmentBssEnd - _ovl_Bg_Jya_IronobjSegmentBssStart );

    _ovl_Bg_Jya_KanaamiSegmentRomStart = _RomSize;
    ..ovl_Bg_Jya_Kanaami : AT(_RomSize)
    {
        _ovl_Bg_Jya_KanaamiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Jya_KanaamiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/z_bg_jya_kanaami.o (.text)
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/ovl_Bg_Jya_Kanaami_reloc.o (.text)
        _ovl_Bg_Jya_KanaamiSegmentTextEnd = .;
    _ovl_Bg_Jya_KanaamiSegmentTextSize = ABSOLUTE( _ovl_Bg_Jya_KanaamiSegmentTextEnd - _ovl_Bg_Jya_KanaamiSegmentTextStart );
        _ovl_Bg_Jya_KanaamiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/z_bg_jya_kanaami.o (.data)
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/ovl_Bg_Jya_Kanaami_reloc.o (.data)
        _ovl_Bg_Jya_KanaamiSegmentDataEnd = .;
    _ovl_Bg_Jya_KanaamiSegmentDataSize = ABSOLUTE( _ovl_Bg_Jya_KanaamiSegmentDataEnd - _ovl_Bg_Jya_KanaamiSegmentDataStart );
        _ovl_Bg_Jya_KanaamiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/z_bg_jya_kanaami.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/ovl_Bg_Jya_Kanaami_reloc.o (.rodata)
        _ovl_Bg_Jya_KanaamiSegmentRoDataEnd = .;
    _ovl_Bg_Jya_KanaamiSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Jya_KanaamiSegmentRoDataEnd - _ovl_Bg_Jya_KanaamiSegmentRoDataStart );
        _ovl_Bg_Jya_KanaamiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/z_bg_jya_kanaami.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/ovl_Bg_Jya_Kanaami_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_KanaamiSegmentSDataEnd = .;
        _ovl_Bg_Jya_KanaamiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/z_bg_jya_kanaami.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/ovl_Bg_Jya_Kanaami_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_KanaamiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Jya_KanaamiSegmentOvlEnd - _ovl_Bg_Jya_KanaamiSegmentTextStart );
    _ovl_Bg_Jya_KanaamiSegmentRomEnd = _RomSize;

    ..ovl_Bg_Jya_Kanaami.bss ADDR(..ovl_Bg_Jya_Kanaami) + SIZEOF(..ovl_Bg_Jya_Kanaami) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Jya_KanaamiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/z_bg_jya_kanaami.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/ovl_Bg_Jya_Kanaami_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/z_bg_jya_kanaami.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/ovl_Bg_Jya_Kanaami_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/z_bg_jya_kanaami.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/ovl_Bg_Jya_Kanaami_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/z_bg_jya_kanaami.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Jya_Kanaami/ovl_Bg_Jya_Kanaami_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_KanaamiSegmentBssEnd = .;
        _ovl_Bg_Jya_KanaamiSegmentEnd = .;
    }
    _ovl_Bg_Jya_KanaamiSegmentBssSize = ABSOLUTE( _ovl_Bg_Jya_KanaamiSegmentBssEnd - _ovl_Bg_Jya_KanaamiSegmentBssStart );

    _ovl_Bg_Jya_LiftSegmentRomStart = _RomSize;
    ..ovl_Bg_Jya_Lift : AT(_RomSize)
    {
        _ovl_Bg_Jya_LiftSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Jya_LiftSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Lift/z_bg_jya_lift.o (.text)
            build/src/overlays/actors/ovl_Bg_Jya_Lift/ovl_Bg_Jya_Lift_reloc.o (.text)
        _ovl_Bg_Jya_LiftSegmentTextEnd = .;
    _ovl_Bg_Jya_LiftSegmentTextSize = ABSOLUTE( _ovl_Bg_Jya_LiftSegmentTextEnd - _ovl_Bg_Jya_LiftSegmentTextStart );
        _ovl_Bg_Jya_LiftSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Lift/z_bg_jya_lift.o (.data)
            build/src/overlays/actors/ovl_Bg_Jya_Lift/ovl_Bg_Jya_Lift_reloc.o (.data)
        _ovl_Bg_Jya_LiftSegmentDataEnd = .;
    _ovl_Bg_Jya_LiftSegmentDataSize = ABSOLUTE( _ovl_Bg_Jya_LiftSegmentDataEnd - _ovl_Bg_Jya_LiftSegmentDataStart );
        _ovl_Bg_Jya_LiftSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Lift/z_bg_jya_lift.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Jya_Lift/ovl_Bg_Jya_Lift_reloc.o (.rodata)
        _ovl_Bg_Jya_LiftSegmentRoDataEnd = .;
    _ovl_Bg_Jya_LiftSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Jya_LiftSegmentRoDataEnd - _ovl_Bg_Jya_LiftSegmentRoDataStart );
        _ovl_Bg_Jya_LiftSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Lift/z_bg_jya_lift.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Jya_Lift/ovl_Bg_Jya_Lift_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_LiftSegmentSDataEnd = .;
        _ovl_Bg_Jya_LiftSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Lift/z_bg_jya_lift.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Jya_Lift/ovl_Bg_Jya_Lift_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_LiftSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Jya_LiftSegmentOvlEnd - _ovl_Bg_Jya_LiftSegmentTextStart );
    _ovl_Bg_Jya_LiftSegmentRomEnd = _RomSize;

    ..ovl_Bg_Jya_Lift.bss ADDR(..ovl_Bg_Jya_Lift) + SIZEOF(..ovl_Bg_Jya_Lift) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Jya_LiftSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Lift/z_bg_jya_lift.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Lift/ovl_Bg_Jya_Lift_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Lift/z_bg_jya_lift.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Lift/ovl_Bg_Jya_Lift_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Lift/z_bg_jya_lift.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Lift/ovl_Bg_Jya_Lift_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Lift/z_bg_jya_lift.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Jya_Lift/ovl_Bg_Jya_Lift_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_LiftSegmentBssEnd = .;
        _ovl_Bg_Jya_LiftSegmentEnd = .;
    }
    _ovl_Bg_Jya_LiftSegmentBssSize = ABSOLUTE( _ovl_Bg_Jya_LiftSegmentBssEnd - _ovl_Bg_Jya_LiftSegmentBssStart );

    _ovl_Bg_Jya_MegamiSegmentRomStart = _RomSize;
    ..ovl_Bg_Jya_Megami : AT(_RomSize)
    {
        _ovl_Bg_Jya_MegamiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Jya_MegamiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Megami/z_bg_jya_megami.o (.text)
            build/src/overlays/actors/ovl_Bg_Jya_Megami/ovl_Bg_Jya_Megami_reloc.o (.text)
        _ovl_Bg_Jya_MegamiSegmentTextEnd = .;
    _ovl_Bg_Jya_MegamiSegmentTextSize = ABSOLUTE( _ovl_Bg_Jya_MegamiSegmentTextEnd - _ovl_Bg_Jya_MegamiSegmentTextStart );
        _ovl_Bg_Jya_MegamiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Megami/z_bg_jya_megami.o (.data)
            build/src/overlays/actors/ovl_Bg_Jya_Megami/ovl_Bg_Jya_Megami_reloc.o (.data)
        _ovl_Bg_Jya_MegamiSegmentDataEnd = .;
    _ovl_Bg_Jya_MegamiSegmentDataSize = ABSOLUTE( _ovl_Bg_Jya_MegamiSegmentDataEnd - _ovl_Bg_Jya_MegamiSegmentDataStart );
        _ovl_Bg_Jya_MegamiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Megami/z_bg_jya_megami.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Jya_Megami/ovl_Bg_Jya_Megami_reloc.o (.rodata)
        _ovl_Bg_Jya_MegamiSegmentRoDataEnd = .;
    _ovl_Bg_Jya_MegamiSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Jya_MegamiSegmentRoDataEnd - _ovl_Bg_Jya_MegamiSegmentRoDataStart );
        _ovl_Bg_Jya_MegamiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Megami/z_bg_jya_megami.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Jya_Megami/ovl_Bg_Jya_Megami_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_MegamiSegmentSDataEnd = .;
        _ovl_Bg_Jya_MegamiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Megami/z_bg_jya_megami.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Jya_Megami/ovl_Bg_Jya_Megami_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_MegamiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Jya_MegamiSegmentOvlEnd - _ovl_Bg_Jya_MegamiSegmentTextStart );
    _ovl_Bg_Jya_MegamiSegmentRomEnd = _RomSize;

    ..ovl_Bg_Jya_Megami.bss ADDR(..ovl_Bg_Jya_Megami) + SIZEOF(..ovl_Bg_Jya_Megami) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Jya_MegamiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Megami/z_bg_jya_megami.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Megami/ovl_Bg_Jya_Megami_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Megami/z_bg_jya_megami.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Megami/ovl_Bg_Jya_Megami_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Megami/z_bg_jya_megami.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Megami/ovl_Bg_Jya_Megami_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Megami/z_bg_jya_megami.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Jya_Megami/ovl_Bg_Jya_Megami_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_MegamiSegmentBssEnd = .;
        _ovl_Bg_Jya_MegamiSegmentEnd = .;
    }
    _ovl_Bg_Jya_MegamiSegmentBssSize = ABSOLUTE( _ovl_Bg_Jya_MegamiSegmentBssEnd - _ovl_Bg_Jya_MegamiSegmentBssStart );

    _ovl_Bg_Jya_ZurerukabeSegmentRomStart = _RomSize;
    ..ovl_Bg_Jya_Zurerukabe : AT(_RomSize)
    {
        _ovl_Bg_Jya_ZurerukabeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Jya_ZurerukabeSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/z_bg_jya_zurerukabe.o (.text)
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/ovl_Bg_Jya_Zurerukabe_reloc.o (.text)
        _ovl_Bg_Jya_ZurerukabeSegmentTextEnd = .;
    _ovl_Bg_Jya_ZurerukabeSegmentTextSize = ABSOLUTE( _ovl_Bg_Jya_ZurerukabeSegmentTextEnd - _ovl_Bg_Jya_ZurerukabeSegmentTextStart );
        _ovl_Bg_Jya_ZurerukabeSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/z_bg_jya_zurerukabe.o (.data)
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/ovl_Bg_Jya_Zurerukabe_reloc.o (.data)
        _ovl_Bg_Jya_ZurerukabeSegmentDataEnd = .;
    _ovl_Bg_Jya_ZurerukabeSegmentDataSize = ABSOLUTE( _ovl_Bg_Jya_ZurerukabeSegmentDataEnd - _ovl_Bg_Jya_ZurerukabeSegmentDataStart );
        _ovl_Bg_Jya_ZurerukabeSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/z_bg_jya_zurerukabe.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/ovl_Bg_Jya_Zurerukabe_reloc.o (.rodata)
        _ovl_Bg_Jya_ZurerukabeSegmentRoDataEnd = .;
    _ovl_Bg_Jya_ZurerukabeSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Jya_ZurerukabeSegmentRoDataEnd - _ovl_Bg_Jya_ZurerukabeSegmentRoDataStart );
        _ovl_Bg_Jya_ZurerukabeSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/z_bg_jya_zurerukabe.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/ovl_Bg_Jya_Zurerukabe_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_ZurerukabeSegmentSDataEnd = .;
        _ovl_Bg_Jya_ZurerukabeSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/z_bg_jya_zurerukabe.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/ovl_Bg_Jya_Zurerukabe_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_ZurerukabeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Jya_ZurerukabeSegmentOvlEnd - _ovl_Bg_Jya_ZurerukabeSegmentTextStart );
    _ovl_Bg_Jya_ZurerukabeSegmentRomEnd = _RomSize;

    ..ovl_Bg_Jya_Zurerukabe.bss ADDR(..ovl_Bg_Jya_Zurerukabe) + SIZEOF(..ovl_Bg_Jya_Zurerukabe) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Jya_ZurerukabeSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/z_bg_jya_zurerukabe.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/ovl_Bg_Jya_Zurerukabe_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/z_bg_jya_zurerukabe.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/ovl_Bg_Jya_Zurerukabe_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/z_bg_jya_zurerukabe.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/ovl_Bg_Jya_Zurerukabe_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/z_bg_jya_zurerukabe.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Jya_Zurerukabe/ovl_Bg_Jya_Zurerukabe_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Jya_ZurerukabeSegmentBssEnd = .;
        _ovl_Bg_Jya_ZurerukabeSegmentEnd = .;
    }
    _ovl_Bg_Jya_ZurerukabeSegmentBssSize = ABSOLUTE( _ovl_Bg_Jya_ZurerukabeSegmentBssEnd - _ovl_Bg_Jya_ZurerukabeSegmentBssStart );

    _ovl_Bg_Menkuri_EyeSegmentRomStart = _RomSize;
    ..ovl_Bg_Menkuri_Eye : AT(_RomSize)
    {
        _ovl_Bg_Menkuri_EyeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_EyeSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/z_bg_menkuri_eye.o (.text)
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/ovl_Bg_Menkuri_Eye_reloc.o (.text)
        _ovl_Bg_Menkuri_EyeSegmentTextEnd = .;
    _ovl_Bg_Menkuri_EyeSegmentTextSize = ABSOLUTE( _ovl_Bg_Menkuri_EyeSegmentTextEnd - _ovl_Bg_Menkuri_EyeSegmentTextStart );
        _ovl_Bg_Menkuri_EyeSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/z_bg_menkuri_eye.o (.data)
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/ovl_Bg_Menkuri_Eye_reloc.o (.data)
        _ovl_Bg_Menkuri_EyeSegmentDataEnd = .;
    _ovl_Bg_Menkuri_EyeSegmentDataSize = ABSOLUTE( _ovl_Bg_Menkuri_EyeSegmentDataEnd - _ovl_Bg_Menkuri_EyeSegmentDataStart );
        _ovl_Bg_Menkuri_EyeSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/z_bg_menkuri_eye.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/ovl_Bg_Menkuri_Eye_reloc.o (.rodata)
        _ovl_Bg_Menkuri_EyeSegmentRoDataEnd = .;
    _ovl_Bg_Menkuri_EyeSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Menkuri_EyeSegmentRoDataEnd - _ovl_Bg_Menkuri_EyeSegmentRoDataStart );
        _ovl_Bg_Menkuri_EyeSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/z_bg_menkuri_eye.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/ovl_Bg_Menkuri_Eye_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_EyeSegmentSDataEnd = .;
        _ovl_Bg_Menkuri_EyeSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/z_bg_menkuri_eye.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/ovl_Bg_Menkuri_Eye_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_EyeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Menkuri_EyeSegmentOvlEnd - _ovl_Bg_Menkuri_EyeSegmentTextStart );
    _ovl_Bg_Menkuri_EyeSegmentRomEnd = _RomSize;

    ..ovl_Bg_Menkuri_Eye.bss ADDR(..ovl_Bg_Menkuri_Eye) + SIZEOF(..ovl_Bg_Menkuri_Eye) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_EyeSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/z_bg_menkuri_eye.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/ovl_Bg_Menkuri_Eye_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/z_bg_menkuri_eye.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/ovl_Bg_Menkuri_Eye_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/z_bg_menkuri_eye.o (.bss)
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/ovl_Bg_Menkuri_Eye_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/z_bg_menkuri_eye.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Menkuri_Eye/ovl_Bg_Menkuri_Eye_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_EyeSegmentBssEnd = .;
        _ovl_Bg_Menkuri_EyeSegmentEnd = .;
    }
    _ovl_Bg_Menkuri_EyeSegmentBssSize = ABSOLUTE( _ovl_Bg_Menkuri_EyeSegmentBssEnd - _ovl_Bg_Menkuri_EyeSegmentBssStart );

    _ovl_Bg_Menkuri_KaitenSegmentRomStart = _RomSize;
    ..ovl_Bg_Menkuri_Kaiten : AT(_RomSize)
    {
        _ovl_Bg_Menkuri_KaitenSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_KaitenSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/z_bg_menkuri_kaiten.o (.text)
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/ovl_Bg_Menkuri_Kaiten_reloc.o (.text)
        _ovl_Bg_Menkuri_KaitenSegmentTextEnd = .;
    _ovl_Bg_Menkuri_KaitenSegmentTextSize = ABSOLUTE( _ovl_Bg_Menkuri_KaitenSegmentTextEnd - _ovl_Bg_Menkuri_KaitenSegmentTextStart );
        _ovl_Bg_Menkuri_KaitenSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/z_bg_menkuri_kaiten.o (.data)
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/ovl_Bg_Menkuri_Kaiten_reloc.o (.data)
        _ovl_Bg_Menkuri_KaitenSegmentDataEnd = .;
    _ovl_Bg_Menkuri_KaitenSegmentDataSize = ABSOLUTE( _ovl_Bg_Menkuri_KaitenSegmentDataEnd - _ovl_Bg_Menkuri_KaitenSegmentDataStart );
        _ovl_Bg_Menkuri_KaitenSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/z_bg_menkuri_kaiten.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/ovl_Bg_Menkuri_Kaiten_reloc.o (.rodata)
        _ovl_Bg_Menkuri_KaitenSegmentRoDataEnd = .;
    _ovl_Bg_Menkuri_KaitenSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Menkuri_KaitenSegmentRoDataEnd - _ovl_Bg_Menkuri_KaitenSegmentRoDataStart );
        _ovl_Bg_Menkuri_KaitenSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/z_bg_menkuri_kaiten.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/ovl_Bg_Menkuri_Kaiten_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_KaitenSegmentSDataEnd = .;
        _ovl_Bg_Menkuri_KaitenSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/z_bg_menkuri_kaiten.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/ovl_Bg_Menkuri_Kaiten_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_KaitenSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Menkuri_KaitenSegmentOvlEnd - _ovl_Bg_Menkuri_KaitenSegmentTextStart );
    _ovl_Bg_Menkuri_KaitenSegmentRomEnd = _RomSize;

    ..ovl_Bg_Menkuri_Kaiten.bss ADDR(..ovl_Bg_Menkuri_Kaiten) + SIZEOF(..ovl_Bg_Menkuri_Kaiten) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_KaitenSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/z_bg_menkuri_kaiten.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/ovl_Bg_Menkuri_Kaiten_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/z_bg_menkuri_kaiten.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/ovl_Bg_Menkuri_Kaiten_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/z_bg_menkuri_kaiten.o (.bss)
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/ovl_Bg_Menkuri_Kaiten_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/z_bg_menkuri_kaiten.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Menkuri_Kaiten/ovl_Bg_Menkuri_Kaiten_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_KaitenSegmentBssEnd = .;
        _ovl_Bg_Menkuri_KaitenSegmentEnd = .;
    }
    _ovl_Bg_Menkuri_KaitenSegmentBssSize = ABSOLUTE( _ovl_Bg_Menkuri_KaitenSegmentBssEnd - _ovl_Bg_Menkuri_KaitenSegmentBssStart );

    _ovl_Bg_Menkuri_NisekabeSegmentRomStart = _RomSize;
    ..ovl_Bg_Menkuri_Nisekabe : AT(_RomSize)
    {
        _ovl_Bg_Menkuri_NisekabeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_NisekabeSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/z_bg_menkuri_nisekabe.o (.text)
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/ovl_Bg_Menkuri_Nisekabe_reloc.o (.text)
        _ovl_Bg_Menkuri_NisekabeSegmentTextEnd = .;
    _ovl_Bg_Menkuri_NisekabeSegmentTextSize = ABSOLUTE( _ovl_Bg_Menkuri_NisekabeSegmentTextEnd - _ovl_Bg_Menkuri_NisekabeSegmentTextStart );
        _ovl_Bg_Menkuri_NisekabeSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/z_bg_menkuri_nisekabe.o (.data)
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/ovl_Bg_Menkuri_Nisekabe_reloc.o (.data)
        _ovl_Bg_Menkuri_NisekabeSegmentDataEnd = .;
    _ovl_Bg_Menkuri_NisekabeSegmentDataSize = ABSOLUTE( _ovl_Bg_Menkuri_NisekabeSegmentDataEnd - _ovl_Bg_Menkuri_NisekabeSegmentDataStart );
        _ovl_Bg_Menkuri_NisekabeSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/z_bg_menkuri_nisekabe.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/ovl_Bg_Menkuri_Nisekabe_reloc.o (.rodata)
        _ovl_Bg_Menkuri_NisekabeSegmentRoDataEnd = .;
    _ovl_Bg_Menkuri_NisekabeSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Menkuri_NisekabeSegmentRoDataEnd - _ovl_Bg_Menkuri_NisekabeSegmentRoDataStart );
        _ovl_Bg_Menkuri_NisekabeSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/z_bg_menkuri_nisekabe.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/ovl_Bg_Menkuri_Nisekabe_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_NisekabeSegmentSDataEnd = .;
        _ovl_Bg_Menkuri_NisekabeSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/z_bg_menkuri_nisekabe.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/ovl_Bg_Menkuri_Nisekabe_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_NisekabeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Menkuri_NisekabeSegmentOvlEnd - _ovl_Bg_Menkuri_NisekabeSegmentTextStart );
    _ovl_Bg_Menkuri_NisekabeSegmentRomEnd = _RomSize;

    ..ovl_Bg_Menkuri_Nisekabe.bss ADDR(..ovl_Bg_Menkuri_Nisekabe) + SIZEOF(..ovl_Bg_Menkuri_Nisekabe) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_NisekabeSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/z_bg_menkuri_nisekabe.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/ovl_Bg_Menkuri_Nisekabe_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/z_bg_menkuri_nisekabe.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/ovl_Bg_Menkuri_Nisekabe_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/z_bg_menkuri_nisekabe.o (.bss)
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/ovl_Bg_Menkuri_Nisekabe_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/z_bg_menkuri_nisekabe.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Menkuri_Nisekabe/ovl_Bg_Menkuri_Nisekabe_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Menkuri_NisekabeSegmentBssEnd = .;
        _ovl_Bg_Menkuri_NisekabeSegmentEnd = .;
    }
    _ovl_Bg_Menkuri_NisekabeSegmentBssSize = ABSOLUTE( _ovl_Bg_Menkuri_NisekabeSegmentBssEnd - _ovl_Bg_Menkuri_NisekabeSegmentBssStart );

    _ovl_Bg_Mizu_BwallSegmentRomStart = _RomSize;
    ..ovl_Bg_Mizu_Bwall : AT(_RomSize)
    {
        _ovl_Bg_Mizu_BwallSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_BwallSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Bwall/z_bg_mizu_bwall.o (.text)
            build/data/overlays/actors/z_bg_mizu_bwall.data.o (.text)
            build/data/overlays/actors/z_bg_mizu_bwall.reloc.o (.text)
        _ovl_Bg_Mizu_BwallSegmentTextEnd = .;
    _ovl_Bg_Mizu_BwallSegmentTextSize = ABSOLUTE( _ovl_Bg_Mizu_BwallSegmentTextEnd - _ovl_Bg_Mizu_BwallSegmentTextStart );
        _ovl_Bg_Mizu_BwallSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Bwall/z_bg_mizu_bwall.o (.data)
            build/data/overlays/actors/z_bg_mizu_bwall.data.o (.data)
            build/data/overlays/actors/z_bg_mizu_bwall.reloc.o (.data)
        _ovl_Bg_Mizu_BwallSegmentDataEnd = .;
    _ovl_Bg_Mizu_BwallSegmentDataSize = ABSOLUTE( _ovl_Bg_Mizu_BwallSegmentDataEnd - _ovl_Bg_Mizu_BwallSegmentDataStart );
        _ovl_Bg_Mizu_BwallSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Bwall/z_bg_mizu_bwall.o (.rodata)
            build/data/overlays/actors/z_bg_mizu_bwall.data.o (.rodata)
            build/data/overlays/actors/z_bg_mizu_bwall.reloc.o (.rodata)
        _ovl_Bg_Mizu_BwallSegmentRoDataEnd = .;
    _ovl_Bg_Mizu_BwallSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Mizu_BwallSegmentRoDataEnd - _ovl_Bg_Mizu_BwallSegmentRoDataStart );
        _ovl_Bg_Mizu_BwallSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Bwall/z_bg_mizu_bwall.o (.sdata)
            build/data/overlays/actors/z_bg_mizu_bwall.data.o (.sdata)
            build/data/overlays/actors/z_bg_mizu_bwall.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_BwallSegmentSDataEnd = .;
        _ovl_Bg_Mizu_BwallSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Bwall/z_bg_mizu_bwall.o (.ovl)
            build/data/overlays/actors/z_bg_mizu_bwall.data.o (.ovl)
            build/data/overlays/actors/z_bg_mizu_bwall.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_BwallSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Mizu_BwallSegmentOvlEnd - _ovl_Bg_Mizu_BwallSegmentTextStart );
    _ovl_Bg_Mizu_BwallSegmentRomEnd = _RomSize;

    ..ovl_Bg_Mizu_Bwall.bss ADDR(..ovl_Bg_Mizu_Bwall) + SIZEOF(..ovl_Bg_Mizu_Bwall) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_BwallSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Bwall/z_bg_mizu_bwall.o (.sbss)
            build/data/overlays/actors/z_bg_mizu_bwall.data.o (.sbss)
            build/data/overlays/actors/z_bg_mizu_bwall.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mizu_Bwall/z_bg_mizu_bwall.o (.scommon)
            build/data/overlays/actors/z_bg_mizu_bwall.data.o (.scommon)
            build/data/overlays/actors/z_bg_mizu_bwall.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mizu_Bwall/z_bg_mizu_bwall.o (.bss)
            build/data/overlays/actors/z_bg_mizu_bwall.data.o (.bss)
            build/data/overlays/actors/z_bg_mizu_bwall.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mizu_Bwall/z_bg_mizu_bwall.o (COMMON)
            build/data/overlays/actors/z_bg_mizu_bwall.data.o (COMMON)
            build/data/overlays/actors/z_bg_mizu_bwall.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_BwallSegmentBssEnd = .;
        _ovl_Bg_Mizu_BwallSegmentEnd = .;
    }
    _ovl_Bg_Mizu_BwallSegmentBssSize = ABSOLUTE( _ovl_Bg_Mizu_BwallSegmentBssEnd - _ovl_Bg_Mizu_BwallSegmentBssStart );

    _ovl_Bg_Mizu_MovebgSegmentRomStart = _RomSize;
    ..ovl_Bg_Mizu_Movebg : AT(_RomSize)
    {
        _ovl_Bg_Mizu_MovebgSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_MovebgSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Movebg/z_bg_mizu_movebg.o (.text)
            build/data/overlays/actors/z_bg_mizu_movebg.data.o (.text)
            build/data/overlays/actors/z_bg_mizu_movebg.bss.o (.text)
            build/data/overlays/actors/z_bg_mizu_movebg.reloc.o (.text)
        _ovl_Bg_Mizu_MovebgSegmentTextEnd = .;
    _ovl_Bg_Mizu_MovebgSegmentTextSize = ABSOLUTE( _ovl_Bg_Mizu_MovebgSegmentTextEnd - _ovl_Bg_Mizu_MovebgSegmentTextStart );
        _ovl_Bg_Mizu_MovebgSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Movebg/z_bg_mizu_movebg.o (.data)
            build/data/overlays/actors/z_bg_mizu_movebg.data.o (.data)
            build/data/overlays/actors/z_bg_mizu_movebg.bss.o (.data)
            build/data/overlays/actors/z_bg_mizu_movebg.reloc.o (.data)
        _ovl_Bg_Mizu_MovebgSegmentDataEnd = .;
    _ovl_Bg_Mizu_MovebgSegmentDataSize = ABSOLUTE( _ovl_Bg_Mizu_MovebgSegmentDataEnd - _ovl_Bg_Mizu_MovebgSegmentDataStart );
        _ovl_Bg_Mizu_MovebgSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Movebg/z_bg_mizu_movebg.o (.rodata)
            build/data/overlays/actors/z_bg_mizu_movebg.data.o (.rodata)
            build/data/overlays/actors/z_bg_mizu_movebg.bss.o (.rodata)
            build/data/overlays/actors/z_bg_mizu_movebg.reloc.o (.rodata)
        _ovl_Bg_Mizu_MovebgSegmentRoDataEnd = .;
    _ovl_Bg_Mizu_MovebgSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Mizu_MovebgSegmentRoDataEnd - _ovl_Bg_Mizu_MovebgSegmentRoDataStart );
        _ovl_Bg_Mizu_MovebgSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Movebg/z_bg_mizu_movebg.o (.sdata)
            build/data/overlays/actors/z_bg_mizu_movebg.data.o (.sdata)
            build/data/overlays/actors/z_bg_mizu_movebg.bss.o (.sdata)
            build/data/overlays/actors/z_bg_mizu_movebg.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_MovebgSegmentSDataEnd = .;
        _ovl_Bg_Mizu_MovebgSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Movebg/z_bg_mizu_movebg.o (.ovl)
            build/data/overlays/actors/z_bg_mizu_movebg.data.o (.ovl)
            build/data/overlays/actors/z_bg_mizu_movebg.bss.o (.ovl)
            build/data/overlays/actors/z_bg_mizu_movebg.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_MovebgSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Mizu_MovebgSegmentOvlEnd - _ovl_Bg_Mizu_MovebgSegmentTextStart );
    _ovl_Bg_Mizu_MovebgSegmentRomEnd = _RomSize;

    ..ovl_Bg_Mizu_Movebg.bss ADDR(..ovl_Bg_Mizu_Movebg) + SIZEOF(..ovl_Bg_Mizu_Movebg) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_MovebgSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Movebg/z_bg_mizu_movebg.o (.sbss)
            build/data/overlays/actors/z_bg_mizu_movebg.data.o (.sbss)
            build/data/overlays/actors/z_bg_mizu_movebg.bss.o (.sbss)
            build/data/overlays/actors/z_bg_mizu_movebg.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mizu_Movebg/z_bg_mizu_movebg.o (.scommon)
            build/data/overlays/actors/z_bg_mizu_movebg.data.o (.scommon)
            build/data/overlays/actors/z_bg_mizu_movebg.bss.o (.scommon)
            build/data/overlays/actors/z_bg_mizu_movebg.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mizu_Movebg/z_bg_mizu_movebg.o (.bss)
            build/data/overlays/actors/z_bg_mizu_movebg.data.o (.bss)
            build/data/overlays/actors/z_bg_mizu_movebg.bss.o (.bss)
            build/data/overlays/actors/z_bg_mizu_movebg.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mizu_Movebg/z_bg_mizu_movebg.o (COMMON)
            build/data/overlays/actors/z_bg_mizu_movebg.data.o (COMMON)
            build/data/overlays/actors/z_bg_mizu_movebg.bss.o (COMMON)
            build/data/overlays/actors/z_bg_mizu_movebg.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_MovebgSegmentBssEnd = .;
        _ovl_Bg_Mizu_MovebgSegmentEnd = .;
    }
    _ovl_Bg_Mizu_MovebgSegmentBssSize = ABSOLUTE( _ovl_Bg_Mizu_MovebgSegmentBssEnd - _ovl_Bg_Mizu_MovebgSegmentBssStart );

    _ovl_Bg_Mizu_ShutterSegmentRomStart = _RomSize;
    ..ovl_Bg_Mizu_Shutter : AT(_RomSize)
    {
        _ovl_Bg_Mizu_ShutterSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_ShutterSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Shutter/z_bg_mizu_shutter.o (.text)
            build/data/overlays/actors/z_bg_mizu_shutter.data.o (.text)
            build/data/overlays/actors/z_bg_mizu_shutter.reloc.o (.text)
        _ovl_Bg_Mizu_ShutterSegmentTextEnd = .;
    _ovl_Bg_Mizu_ShutterSegmentTextSize = ABSOLUTE( _ovl_Bg_Mizu_ShutterSegmentTextEnd - _ovl_Bg_Mizu_ShutterSegmentTextStart );
        _ovl_Bg_Mizu_ShutterSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Shutter/z_bg_mizu_shutter.o (.data)
            build/data/overlays/actors/z_bg_mizu_shutter.data.o (.data)
            build/data/overlays/actors/z_bg_mizu_shutter.reloc.o (.data)
        _ovl_Bg_Mizu_ShutterSegmentDataEnd = .;
    _ovl_Bg_Mizu_ShutterSegmentDataSize = ABSOLUTE( _ovl_Bg_Mizu_ShutterSegmentDataEnd - _ovl_Bg_Mizu_ShutterSegmentDataStart );
        _ovl_Bg_Mizu_ShutterSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Shutter/z_bg_mizu_shutter.o (.rodata)
            build/data/overlays/actors/z_bg_mizu_shutter.data.o (.rodata)
            build/data/overlays/actors/z_bg_mizu_shutter.reloc.o (.rodata)
        _ovl_Bg_Mizu_ShutterSegmentRoDataEnd = .;
    _ovl_Bg_Mizu_ShutterSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Mizu_ShutterSegmentRoDataEnd - _ovl_Bg_Mizu_ShutterSegmentRoDataStart );
        _ovl_Bg_Mizu_ShutterSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Shutter/z_bg_mizu_shutter.o (.sdata)
            build/data/overlays/actors/z_bg_mizu_shutter.data.o (.sdata)
            build/data/overlays/actors/z_bg_mizu_shutter.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_ShutterSegmentSDataEnd = .;
        _ovl_Bg_Mizu_ShutterSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Shutter/z_bg_mizu_shutter.o (.ovl)
            build/data/overlays/actors/z_bg_mizu_shutter.data.o (.ovl)
            build/data/overlays/actors/z_bg_mizu_shutter.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_ShutterSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Mizu_ShutterSegmentOvlEnd - _ovl_Bg_Mizu_ShutterSegmentTextStart );
    _ovl_Bg_Mizu_ShutterSegmentRomEnd = _RomSize;

    ..ovl_Bg_Mizu_Shutter.bss ADDR(..ovl_Bg_Mizu_Shutter) + SIZEOF(..ovl_Bg_Mizu_Shutter) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_ShutterSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Shutter/z_bg_mizu_shutter.o (.sbss)
            build/data/overlays/actors/z_bg_mizu_shutter.data.o (.sbss)
            build/data/overlays/actors/z_bg_mizu_shutter.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mizu_Shutter/z_bg_mizu_shutter.o (.scommon)
            build/data/overlays/actors/z_bg_mizu_shutter.data.o (.scommon)
            build/data/overlays/actors/z_bg_mizu_shutter.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mizu_Shutter/z_bg_mizu_shutter.o (.bss)
            build/data/overlays/actors/z_bg_mizu_shutter.data.o (.bss)
            build/data/overlays/actors/z_bg_mizu_shutter.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mizu_Shutter/z_bg_mizu_shutter.o (COMMON)
            build/data/overlays/actors/z_bg_mizu_shutter.data.o (COMMON)
            build/data/overlays/actors/z_bg_mizu_shutter.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_ShutterSegmentBssEnd = .;
        _ovl_Bg_Mizu_ShutterSegmentEnd = .;
    }
    _ovl_Bg_Mizu_ShutterSegmentBssSize = ABSOLUTE( _ovl_Bg_Mizu_ShutterSegmentBssEnd - _ovl_Bg_Mizu_ShutterSegmentBssStart );

    _ovl_Bg_Mizu_UzuSegmentRomStart = _RomSize;
    ..ovl_Bg_Mizu_Uzu : AT(_RomSize)
    {
        _ovl_Bg_Mizu_UzuSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_UzuSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/z_bg_mizu_uzu.o (.text)
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/ovl_Bg_Mizu_Uzu_reloc.o (.text)
        _ovl_Bg_Mizu_UzuSegmentTextEnd = .;
    _ovl_Bg_Mizu_UzuSegmentTextSize = ABSOLUTE( _ovl_Bg_Mizu_UzuSegmentTextEnd - _ovl_Bg_Mizu_UzuSegmentTextStart );
        _ovl_Bg_Mizu_UzuSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/z_bg_mizu_uzu.o (.data)
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/ovl_Bg_Mizu_Uzu_reloc.o (.data)
        _ovl_Bg_Mizu_UzuSegmentDataEnd = .;
    _ovl_Bg_Mizu_UzuSegmentDataSize = ABSOLUTE( _ovl_Bg_Mizu_UzuSegmentDataEnd - _ovl_Bg_Mizu_UzuSegmentDataStart );
        _ovl_Bg_Mizu_UzuSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/z_bg_mizu_uzu.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/ovl_Bg_Mizu_Uzu_reloc.o (.rodata)
        _ovl_Bg_Mizu_UzuSegmentRoDataEnd = .;
    _ovl_Bg_Mizu_UzuSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Mizu_UzuSegmentRoDataEnd - _ovl_Bg_Mizu_UzuSegmentRoDataStart );
        _ovl_Bg_Mizu_UzuSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/z_bg_mizu_uzu.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/ovl_Bg_Mizu_Uzu_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_UzuSegmentSDataEnd = .;
        _ovl_Bg_Mizu_UzuSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/z_bg_mizu_uzu.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/ovl_Bg_Mizu_Uzu_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_UzuSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Mizu_UzuSegmentOvlEnd - _ovl_Bg_Mizu_UzuSegmentTextStart );
    _ovl_Bg_Mizu_UzuSegmentRomEnd = _RomSize;

    ..ovl_Bg_Mizu_Uzu.bss ADDR(..ovl_Bg_Mizu_Uzu) + SIZEOF(..ovl_Bg_Mizu_Uzu) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_UzuSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/z_bg_mizu_uzu.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/ovl_Bg_Mizu_Uzu_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/z_bg_mizu_uzu.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/ovl_Bg_Mizu_Uzu_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/z_bg_mizu_uzu.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/ovl_Bg_Mizu_Uzu_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/z_bg_mizu_uzu.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Mizu_Uzu/ovl_Bg_Mizu_Uzu_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_UzuSegmentBssEnd = .;
        _ovl_Bg_Mizu_UzuSegmentEnd = .;
    }
    _ovl_Bg_Mizu_UzuSegmentBssSize = ABSOLUTE( _ovl_Bg_Mizu_UzuSegmentBssEnd - _ovl_Bg_Mizu_UzuSegmentBssStart );

    _ovl_Bg_Mizu_WaterSegmentRomStart = _RomSize;
    ..ovl_Bg_Mizu_Water : AT(_RomSize)
    {
        _ovl_Bg_Mizu_WaterSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_WaterSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Water/z_bg_mizu_water.o (.text)
            build/src/overlays/actors/ovl_Bg_Mizu_Water/ovl_Bg_Mizu_Water_reloc.o (.text)
        _ovl_Bg_Mizu_WaterSegmentTextEnd = .;
    _ovl_Bg_Mizu_WaterSegmentTextSize = ABSOLUTE( _ovl_Bg_Mizu_WaterSegmentTextEnd - _ovl_Bg_Mizu_WaterSegmentTextStart );
        _ovl_Bg_Mizu_WaterSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Water/z_bg_mizu_water.o (.data)
            build/src/overlays/actors/ovl_Bg_Mizu_Water/ovl_Bg_Mizu_Water_reloc.o (.data)
        _ovl_Bg_Mizu_WaterSegmentDataEnd = .;
    _ovl_Bg_Mizu_WaterSegmentDataSize = ABSOLUTE( _ovl_Bg_Mizu_WaterSegmentDataEnd - _ovl_Bg_Mizu_WaterSegmentDataStart );
        _ovl_Bg_Mizu_WaterSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Water/z_bg_mizu_water.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Mizu_Water/ovl_Bg_Mizu_Water_reloc.o (.rodata)
        _ovl_Bg_Mizu_WaterSegmentRoDataEnd = .;
    _ovl_Bg_Mizu_WaterSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Mizu_WaterSegmentRoDataEnd - _ovl_Bg_Mizu_WaterSegmentRoDataStart );
        _ovl_Bg_Mizu_WaterSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Water/z_bg_mizu_water.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Mizu_Water/ovl_Bg_Mizu_Water_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_WaterSegmentSDataEnd = .;
        _ovl_Bg_Mizu_WaterSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Water/z_bg_mizu_water.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Mizu_Water/ovl_Bg_Mizu_Water_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_WaterSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Mizu_WaterSegmentOvlEnd - _ovl_Bg_Mizu_WaterSegmentTextStart );
    _ovl_Bg_Mizu_WaterSegmentRomEnd = _RomSize;

    ..ovl_Bg_Mizu_Water.bss ADDR(..ovl_Bg_Mizu_Water) + SIZEOF(..ovl_Bg_Mizu_Water) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_WaterSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Mizu_Water/z_bg_mizu_water.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mizu_Water/ovl_Bg_Mizu_Water_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mizu_Water/z_bg_mizu_water.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mizu_Water/ovl_Bg_Mizu_Water_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mizu_Water/z_bg_mizu_water.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mizu_Water/ovl_Bg_Mizu_Water_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mizu_Water/z_bg_mizu_water.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Mizu_Water/ovl_Bg_Mizu_Water_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Mizu_WaterSegmentBssEnd = .;
        _ovl_Bg_Mizu_WaterSegmentEnd = .;
    }
    _ovl_Bg_Mizu_WaterSegmentBssSize = ABSOLUTE( _ovl_Bg_Mizu_WaterSegmentBssEnd - _ovl_Bg_Mizu_WaterSegmentBssStart );

    _ovl_Bg_MjinSegmentRomStart = _RomSize;
    ..ovl_Bg_Mjin : AT(_RomSize)
    {
        _ovl_Bg_MjinSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_MjinSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Mjin/z_bg_mjin.o (.text)
            build/src/overlays/actors/ovl_Bg_Mjin/ovl_Bg_Mjin_reloc.o (.text)
        _ovl_Bg_MjinSegmentTextEnd = .;
    _ovl_Bg_MjinSegmentTextSize = ABSOLUTE( _ovl_Bg_MjinSegmentTextEnd - _ovl_Bg_MjinSegmentTextStart );
        _ovl_Bg_MjinSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mjin/z_bg_mjin.o (.data)
            build/src/overlays/actors/ovl_Bg_Mjin/ovl_Bg_Mjin_reloc.o (.data)
        _ovl_Bg_MjinSegmentDataEnd = .;
    _ovl_Bg_MjinSegmentDataSize = ABSOLUTE( _ovl_Bg_MjinSegmentDataEnd - _ovl_Bg_MjinSegmentDataStart );
        _ovl_Bg_MjinSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mjin/z_bg_mjin.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Mjin/ovl_Bg_Mjin_reloc.o (.rodata)
        _ovl_Bg_MjinSegmentRoDataEnd = .;
    _ovl_Bg_MjinSegmentRoDataSize = ABSOLUTE( _ovl_Bg_MjinSegmentRoDataEnd - _ovl_Bg_MjinSegmentRoDataStart );
        _ovl_Bg_MjinSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mjin/z_bg_mjin.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Mjin/ovl_Bg_Mjin_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_MjinSegmentSDataEnd = .;
        _ovl_Bg_MjinSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Mjin/z_bg_mjin.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Mjin/ovl_Bg_Mjin_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_MjinSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_MjinSegmentOvlEnd - _ovl_Bg_MjinSegmentTextStart );
    _ovl_Bg_MjinSegmentRomEnd = _RomSize;

    ..ovl_Bg_Mjin.bss ADDR(..ovl_Bg_Mjin) + SIZEOF(..ovl_Bg_Mjin) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_MjinSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Mjin/z_bg_mjin.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mjin/ovl_Bg_Mjin_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mjin/z_bg_mjin.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mjin/ovl_Bg_Mjin_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mjin/z_bg_mjin.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mjin/ovl_Bg_Mjin_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mjin/z_bg_mjin.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Mjin/ovl_Bg_Mjin_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_MjinSegmentBssEnd = .;
        _ovl_Bg_MjinSegmentEnd = .;
    }
    _ovl_Bg_MjinSegmentBssSize = ABSOLUTE( _ovl_Bg_MjinSegmentBssEnd - _ovl_Bg_MjinSegmentBssStart );

    _ovl_Bg_Mori_BigstSegmentRomStart = _RomSize;
    ..ovl_Bg_Mori_Bigst : AT(_RomSize)
    {
        _ovl_Bg_Mori_BigstSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Mori_BigstSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/z_bg_mori_bigst.o (.text)
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/ovl_Bg_Mori_Bigst_reloc.o (.text)
        _ovl_Bg_Mori_BigstSegmentTextEnd = .;
    _ovl_Bg_Mori_BigstSegmentTextSize = ABSOLUTE( _ovl_Bg_Mori_BigstSegmentTextEnd - _ovl_Bg_Mori_BigstSegmentTextStart );
        _ovl_Bg_Mori_BigstSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/z_bg_mori_bigst.o (.data)
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/ovl_Bg_Mori_Bigst_reloc.o (.data)
        _ovl_Bg_Mori_BigstSegmentDataEnd = .;
    _ovl_Bg_Mori_BigstSegmentDataSize = ABSOLUTE( _ovl_Bg_Mori_BigstSegmentDataEnd - _ovl_Bg_Mori_BigstSegmentDataStart );
        _ovl_Bg_Mori_BigstSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/z_bg_mori_bigst.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/ovl_Bg_Mori_Bigst_reloc.o (.rodata)
        _ovl_Bg_Mori_BigstSegmentRoDataEnd = .;
    _ovl_Bg_Mori_BigstSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Mori_BigstSegmentRoDataEnd - _ovl_Bg_Mori_BigstSegmentRoDataStart );
        _ovl_Bg_Mori_BigstSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/z_bg_mori_bigst.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/ovl_Bg_Mori_Bigst_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_BigstSegmentSDataEnd = .;
        _ovl_Bg_Mori_BigstSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/z_bg_mori_bigst.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/ovl_Bg_Mori_Bigst_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_BigstSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Mori_BigstSegmentOvlEnd - _ovl_Bg_Mori_BigstSegmentTextStart );
    _ovl_Bg_Mori_BigstSegmentRomEnd = _RomSize;

    ..ovl_Bg_Mori_Bigst.bss ADDR(..ovl_Bg_Mori_Bigst) + SIZEOF(..ovl_Bg_Mori_Bigst) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Mori_BigstSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/z_bg_mori_bigst.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/ovl_Bg_Mori_Bigst_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/z_bg_mori_bigst.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/ovl_Bg_Mori_Bigst_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/z_bg_mori_bigst.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/ovl_Bg_Mori_Bigst_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/z_bg_mori_bigst.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Mori_Bigst/ovl_Bg_Mori_Bigst_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_BigstSegmentBssEnd = .;
        _ovl_Bg_Mori_BigstSegmentEnd = .;
    }
    _ovl_Bg_Mori_BigstSegmentBssSize = ABSOLUTE( _ovl_Bg_Mori_BigstSegmentBssEnd - _ovl_Bg_Mori_BigstSegmentBssStart );

    _ovl_Bg_Mori_ElevatorSegmentRomStart = _RomSize;
    ..ovl_Bg_Mori_Elevator : AT(_RomSize)
    {
        _ovl_Bg_Mori_ElevatorSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Mori_ElevatorSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/z_bg_mori_elevator.o (.text)
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/ovl_Bg_Mori_Elevator_reloc.o (.text)
        _ovl_Bg_Mori_ElevatorSegmentTextEnd = .;
    _ovl_Bg_Mori_ElevatorSegmentTextSize = ABSOLUTE( _ovl_Bg_Mori_ElevatorSegmentTextEnd - _ovl_Bg_Mori_ElevatorSegmentTextStart );
        _ovl_Bg_Mori_ElevatorSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/z_bg_mori_elevator.o (.data)
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/ovl_Bg_Mori_Elevator_reloc.o (.data)
        _ovl_Bg_Mori_ElevatorSegmentDataEnd = .;
    _ovl_Bg_Mori_ElevatorSegmentDataSize = ABSOLUTE( _ovl_Bg_Mori_ElevatorSegmentDataEnd - _ovl_Bg_Mori_ElevatorSegmentDataStart );
        _ovl_Bg_Mori_ElevatorSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/z_bg_mori_elevator.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/ovl_Bg_Mori_Elevator_reloc.o (.rodata)
        _ovl_Bg_Mori_ElevatorSegmentRoDataEnd = .;
    _ovl_Bg_Mori_ElevatorSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Mori_ElevatorSegmentRoDataEnd - _ovl_Bg_Mori_ElevatorSegmentRoDataStart );
        _ovl_Bg_Mori_ElevatorSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/z_bg_mori_elevator.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/ovl_Bg_Mori_Elevator_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_ElevatorSegmentSDataEnd = .;
        _ovl_Bg_Mori_ElevatorSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/z_bg_mori_elevator.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/ovl_Bg_Mori_Elevator_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_ElevatorSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Mori_ElevatorSegmentOvlEnd - _ovl_Bg_Mori_ElevatorSegmentTextStart );
    _ovl_Bg_Mori_ElevatorSegmentRomEnd = _RomSize;

    ..ovl_Bg_Mori_Elevator.bss ADDR(..ovl_Bg_Mori_Elevator) + SIZEOF(..ovl_Bg_Mori_Elevator) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Mori_ElevatorSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/z_bg_mori_elevator.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/ovl_Bg_Mori_Elevator_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/z_bg_mori_elevator.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/ovl_Bg_Mori_Elevator_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/z_bg_mori_elevator.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/ovl_Bg_Mori_Elevator_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/z_bg_mori_elevator.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Mori_Elevator/ovl_Bg_Mori_Elevator_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_ElevatorSegmentBssEnd = .;
        _ovl_Bg_Mori_ElevatorSegmentEnd = .;
    }
    _ovl_Bg_Mori_ElevatorSegmentBssSize = ABSOLUTE( _ovl_Bg_Mori_ElevatorSegmentBssEnd - _ovl_Bg_Mori_ElevatorSegmentBssStart );

    _ovl_Bg_Mori_HashigoSegmentRomStart = _RomSize;
    ..ovl_Bg_Mori_Hashigo : AT(_RomSize)
    {
        _ovl_Bg_Mori_HashigoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Mori_HashigoSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/z_bg_mori_hashigo.o (.text)
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/ovl_Bg_Mori_Hashigo_reloc.o (.text)
        _ovl_Bg_Mori_HashigoSegmentTextEnd = .;
    _ovl_Bg_Mori_HashigoSegmentTextSize = ABSOLUTE( _ovl_Bg_Mori_HashigoSegmentTextEnd - _ovl_Bg_Mori_HashigoSegmentTextStart );
        _ovl_Bg_Mori_HashigoSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/z_bg_mori_hashigo.o (.data)
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/ovl_Bg_Mori_Hashigo_reloc.o (.data)
        _ovl_Bg_Mori_HashigoSegmentDataEnd = .;
    _ovl_Bg_Mori_HashigoSegmentDataSize = ABSOLUTE( _ovl_Bg_Mori_HashigoSegmentDataEnd - _ovl_Bg_Mori_HashigoSegmentDataStart );
        _ovl_Bg_Mori_HashigoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/z_bg_mori_hashigo.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/ovl_Bg_Mori_Hashigo_reloc.o (.rodata)
        _ovl_Bg_Mori_HashigoSegmentRoDataEnd = .;
    _ovl_Bg_Mori_HashigoSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Mori_HashigoSegmentRoDataEnd - _ovl_Bg_Mori_HashigoSegmentRoDataStart );
        _ovl_Bg_Mori_HashigoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/z_bg_mori_hashigo.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/ovl_Bg_Mori_Hashigo_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_HashigoSegmentSDataEnd = .;
        _ovl_Bg_Mori_HashigoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/z_bg_mori_hashigo.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/ovl_Bg_Mori_Hashigo_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_HashigoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Mori_HashigoSegmentOvlEnd - _ovl_Bg_Mori_HashigoSegmentTextStart );
    _ovl_Bg_Mori_HashigoSegmentRomEnd = _RomSize;

    ..ovl_Bg_Mori_Hashigo.bss ADDR(..ovl_Bg_Mori_Hashigo) + SIZEOF(..ovl_Bg_Mori_Hashigo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Mori_HashigoSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/z_bg_mori_hashigo.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/ovl_Bg_Mori_Hashigo_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/z_bg_mori_hashigo.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/ovl_Bg_Mori_Hashigo_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/z_bg_mori_hashigo.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/ovl_Bg_Mori_Hashigo_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/z_bg_mori_hashigo.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Mori_Hashigo/ovl_Bg_Mori_Hashigo_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_HashigoSegmentBssEnd = .;
        _ovl_Bg_Mori_HashigoSegmentEnd = .;
    }
    _ovl_Bg_Mori_HashigoSegmentBssSize = ABSOLUTE( _ovl_Bg_Mori_HashigoSegmentBssEnd - _ovl_Bg_Mori_HashigoSegmentBssStart );

    _ovl_Bg_Mori_Hashira4SegmentRomStart = _RomSize;
    ..ovl_Bg_Mori_Hashira4 : AT(_RomSize)
    {
        _ovl_Bg_Mori_Hashira4SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Mori_Hashira4SegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/z_bg_mori_hashira4.o (.text)
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/ovl_Bg_Mori_Hashira4_reloc.o (.text)
        _ovl_Bg_Mori_Hashira4SegmentTextEnd = .;
    _ovl_Bg_Mori_Hashira4SegmentTextSize = ABSOLUTE( _ovl_Bg_Mori_Hashira4SegmentTextEnd - _ovl_Bg_Mori_Hashira4SegmentTextStart );
        _ovl_Bg_Mori_Hashira4SegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/z_bg_mori_hashira4.o (.data)
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/ovl_Bg_Mori_Hashira4_reloc.o (.data)
        _ovl_Bg_Mori_Hashira4SegmentDataEnd = .;
    _ovl_Bg_Mori_Hashira4SegmentDataSize = ABSOLUTE( _ovl_Bg_Mori_Hashira4SegmentDataEnd - _ovl_Bg_Mori_Hashira4SegmentDataStart );
        _ovl_Bg_Mori_Hashira4SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/z_bg_mori_hashira4.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/ovl_Bg_Mori_Hashira4_reloc.o (.rodata)
        _ovl_Bg_Mori_Hashira4SegmentRoDataEnd = .;
    _ovl_Bg_Mori_Hashira4SegmentRoDataSize = ABSOLUTE( _ovl_Bg_Mori_Hashira4SegmentRoDataEnd - _ovl_Bg_Mori_Hashira4SegmentRoDataStart );
        _ovl_Bg_Mori_Hashira4SegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/z_bg_mori_hashira4.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/ovl_Bg_Mori_Hashira4_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_Hashira4SegmentSDataEnd = .;
        _ovl_Bg_Mori_Hashira4SegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/z_bg_mori_hashira4.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/ovl_Bg_Mori_Hashira4_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_Hashira4SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Mori_Hashira4SegmentOvlEnd - _ovl_Bg_Mori_Hashira4SegmentTextStart );
    _ovl_Bg_Mori_Hashira4SegmentRomEnd = _RomSize;

    ..ovl_Bg_Mori_Hashira4.bss ADDR(..ovl_Bg_Mori_Hashira4) + SIZEOF(..ovl_Bg_Mori_Hashira4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Mori_Hashira4SegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/z_bg_mori_hashira4.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/ovl_Bg_Mori_Hashira4_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/z_bg_mori_hashira4.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/ovl_Bg_Mori_Hashira4_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/z_bg_mori_hashira4.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/ovl_Bg_Mori_Hashira4_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/z_bg_mori_hashira4.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Mori_Hashira4/ovl_Bg_Mori_Hashira4_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_Hashira4SegmentBssEnd = .;
        _ovl_Bg_Mori_Hashira4SegmentEnd = .;
    }
    _ovl_Bg_Mori_Hashira4SegmentBssSize = ABSOLUTE( _ovl_Bg_Mori_Hashira4SegmentBssEnd - _ovl_Bg_Mori_Hashira4SegmentBssStart );

    _ovl_Bg_Mori_HineriSegmentRomStart = _RomSize;
    ..ovl_Bg_Mori_Hineri : AT(_RomSize)
    {
        _ovl_Bg_Mori_HineriSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Mori_HineriSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/z_bg_mori_hineri.o (.text)
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/ovl_Bg_Mori_Hineri_reloc.o (.text)
        _ovl_Bg_Mori_HineriSegmentTextEnd = .;
    _ovl_Bg_Mori_HineriSegmentTextSize = ABSOLUTE( _ovl_Bg_Mori_HineriSegmentTextEnd - _ovl_Bg_Mori_HineriSegmentTextStart );
        _ovl_Bg_Mori_HineriSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/z_bg_mori_hineri.o (.data)
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/ovl_Bg_Mori_Hineri_reloc.o (.data)
        _ovl_Bg_Mori_HineriSegmentDataEnd = .;
    _ovl_Bg_Mori_HineriSegmentDataSize = ABSOLUTE( _ovl_Bg_Mori_HineriSegmentDataEnd - _ovl_Bg_Mori_HineriSegmentDataStart );
        _ovl_Bg_Mori_HineriSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/z_bg_mori_hineri.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/ovl_Bg_Mori_Hineri_reloc.o (.rodata)
        _ovl_Bg_Mori_HineriSegmentRoDataEnd = .;
    _ovl_Bg_Mori_HineriSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Mori_HineriSegmentRoDataEnd - _ovl_Bg_Mori_HineriSegmentRoDataStart );
        _ovl_Bg_Mori_HineriSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/z_bg_mori_hineri.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/ovl_Bg_Mori_Hineri_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_HineriSegmentSDataEnd = .;
        _ovl_Bg_Mori_HineriSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/z_bg_mori_hineri.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/ovl_Bg_Mori_Hineri_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_HineriSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Mori_HineriSegmentOvlEnd - _ovl_Bg_Mori_HineriSegmentTextStart );
    _ovl_Bg_Mori_HineriSegmentRomEnd = _RomSize;

    ..ovl_Bg_Mori_Hineri.bss ADDR(..ovl_Bg_Mori_Hineri) + SIZEOF(..ovl_Bg_Mori_Hineri) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Mori_HineriSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/z_bg_mori_hineri.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/ovl_Bg_Mori_Hineri_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/z_bg_mori_hineri.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/ovl_Bg_Mori_Hineri_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/z_bg_mori_hineri.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/ovl_Bg_Mori_Hineri_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/z_bg_mori_hineri.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Mori_Hineri/ovl_Bg_Mori_Hineri_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_HineriSegmentBssEnd = .;
        _ovl_Bg_Mori_HineriSegmentEnd = .;
    }
    _ovl_Bg_Mori_HineriSegmentBssSize = ABSOLUTE( _ovl_Bg_Mori_HineriSegmentBssEnd - _ovl_Bg_Mori_HineriSegmentBssStart );

    _ovl_Bg_Mori_IdomizuSegmentRomStart = _RomSize;
    ..ovl_Bg_Mori_Idomizu : AT(_RomSize)
    {
        _ovl_Bg_Mori_IdomizuSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Mori_IdomizuSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/z_bg_mori_idomizu.o (.text)
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/ovl_Bg_Mori_Idomizu_reloc.o (.text)
        _ovl_Bg_Mori_IdomizuSegmentTextEnd = .;
    _ovl_Bg_Mori_IdomizuSegmentTextSize = ABSOLUTE( _ovl_Bg_Mori_IdomizuSegmentTextEnd - _ovl_Bg_Mori_IdomizuSegmentTextStart );
        _ovl_Bg_Mori_IdomizuSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/z_bg_mori_idomizu.o (.data)
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/ovl_Bg_Mori_Idomizu_reloc.o (.data)
        _ovl_Bg_Mori_IdomizuSegmentDataEnd = .;
    _ovl_Bg_Mori_IdomizuSegmentDataSize = ABSOLUTE( _ovl_Bg_Mori_IdomizuSegmentDataEnd - _ovl_Bg_Mori_IdomizuSegmentDataStart );
        _ovl_Bg_Mori_IdomizuSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/z_bg_mori_idomizu.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/ovl_Bg_Mori_Idomizu_reloc.o (.rodata)
        _ovl_Bg_Mori_IdomizuSegmentRoDataEnd = .;
    _ovl_Bg_Mori_IdomizuSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Mori_IdomizuSegmentRoDataEnd - _ovl_Bg_Mori_IdomizuSegmentRoDataStart );
        _ovl_Bg_Mori_IdomizuSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/z_bg_mori_idomizu.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/ovl_Bg_Mori_Idomizu_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_IdomizuSegmentSDataEnd = .;
        _ovl_Bg_Mori_IdomizuSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/z_bg_mori_idomizu.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/ovl_Bg_Mori_Idomizu_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_IdomizuSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Mori_IdomizuSegmentOvlEnd - _ovl_Bg_Mori_IdomizuSegmentTextStart );
    _ovl_Bg_Mori_IdomizuSegmentRomEnd = _RomSize;

    ..ovl_Bg_Mori_Idomizu.bss ADDR(..ovl_Bg_Mori_Idomizu) + SIZEOF(..ovl_Bg_Mori_Idomizu) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Mori_IdomizuSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/z_bg_mori_idomizu.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/ovl_Bg_Mori_Idomizu_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/z_bg_mori_idomizu.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/ovl_Bg_Mori_Idomizu_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/z_bg_mori_idomizu.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/ovl_Bg_Mori_Idomizu_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/z_bg_mori_idomizu.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Mori_Idomizu/ovl_Bg_Mori_Idomizu_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_IdomizuSegmentBssEnd = .;
        _ovl_Bg_Mori_IdomizuSegmentEnd = .;
    }
    _ovl_Bg_Mori_IdomizuSegmentBssSize = ABSOLUTE( _ovl_Bg_Mori_IdomizuSegmentBssEnd - _ovl_Bg_Mori_IdomizuSegmentBssStart );

    _ovl_Bg_Mori_KaitenkabeSegmentRomStart = _RomSize;
    ..ovl_Bg_Mori_Kaitenkabe : AT(_RomSize)
    {
        _ovl_Bg_Mori_KaitenkabeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Mori_KaitenkabeSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/z_bg_mori_kaitenkabe.o (.text)
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/ovl_Bg_Mori_Kaitenkabe_reloc.o (.text)
        _ovl_Bg_Mori_KaitenkabeSegmentTextEnd = .;
    _ovl_Bg_Mori_KaitenkabeSegmentTextSize = ABSOLUTE( _ovl_Bg_Mori_KaitenkabeSegmentTextEnd - _ovl_Bg_Mori_KaitenkabeSegmentTextStart );
        _ovl_Bg_Mori_KaitenkabeSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/z_bg_mori_kaitenkabe.o (.data)
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/ovl_Bg_Mori_Kaitenkabe_reloc.o (.data)
        _ovl_Bg_Mori_KaitenkabeSegmentDataEnd = .;
    _ovl_Bg_Mori_KaitenkabeSegmentDataSize = ABSOLUTE( _ovl_Bg_Mori_KaitenkabeSegmentDataEnd - _ovl_Bg_Mori_KaitenkabeSegmentDataStart );
        _ovl_Bg_Mori_KaitenkabeSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/z_bg_mori_kaitenkabe.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/ovl_Bg_Mori_Kaitenkabe_reloc.o (.rodata)
        _ovl_Bg_Mori_KaitenkabeSegmentRoDataEnd = .;
    _ovl_Bg_Mori_KaitenkabeSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Mori_KaitenkabeSegmentRoDataEnd - _ovl_Bg_Mori_KaitenkabeSegmentRoDataStart );
        _ovl_Bg_Mori_KaitenkabeSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/z_bg_mori_kaitenkabe.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/ovl_Bg_Mori_Kaitenkabe_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_KaitenkabeSegmentSDataEnd = .;
        _ovl_Bg_Mori_KaitenkabeSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/z_bg_mori_kaitenkabe.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/ovl_Bg_Mori_Kaitenkabe_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_KaitenkabeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Mori_KaitenkabeSegmentOvlEnd - _ovl_Bg_Mori_KaitenkabeSegmentTextStart );
    _ovl_Bg_Mori_KaitenkabeSegmentRomEnd = _RomSize;

    ..ovl_Bg_Mori_Kaitenkabe.bss ADDR(..ovl_Bg_Mori_Kaitenkabe) + SIZEOF(..ovl_Bg_Mori_Kaitenkabe) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Mori_KaitenkabeSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/z_bg_mori_kaitenkabe.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/ovl_Bg_Mori_Kaitenkabe_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/z_bg_mori_kaitenkabe.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/ovl_Bg_Mori_Kaitenkabe_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/z_bg_mori_kaitenkabe.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/ovl_Bg_Mori_Kaitenkabe_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/z_bg_mori_kaitenkabe.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Mori_Kaitenkabe/ovl_Bg_Mori_Kaitenkabe_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_KaitenkabeSegmentBssEnd = .;
        _ovl_Bg_Mori_KaitenkabeSegmentEnd = .;
    }
    _ovl_Bg_Mori_KaitenkabeSegmentBssSize = ABSOLUTE( _ovl_Bg_Mori_KaitenkabeSegmentBssEnd - _ovl_Bg_Mori_KaitenkabeSegmentBssStart );

    _ovl_Bg_Mori_RakkatenjoSegmentRomStart = _RomSize;
    ..ovl_Bg_Mori_Rakkatenjo : AT(_RomSize)
    {
        _ovl_Bg_Mori_RakkatenjoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Mori_RakkatenjoSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/z_bg_mori_rakkatenjo.o (.text)
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/ovl_Bg_Mori_Rakkatenjo_reloc.o (.text)
        _ovl_Bg_Mori_RakkatenjoSegmentTextEnd = .;
    _ovl_Bg_Mori_RakkatenjoSegmentTextSize = ABSOLUTE( _ovl_Bg_Mori_RakkatenjoSegmentTextEnd - _ovl_Bg_Mori_RakkatenjoSegmentTextStart );
        _ovl_Bg_Mori_RakkatenjoSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/z_bg_mori_rakkatenjo.o (.data)
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/ovl_Bg_Mori_Rakkatenjo_reloc.o (.data)
        _ovl_Bg_Mori_RakkatenjoSegmentDataEnd = .;
    _ovl_Bg_Mori_RakkatenjoSegmentDataSize = ABSOLUTE( _ovl_Bg_Mori_RakkatenjoSegmentDataEnd - _ovl_Bg_Mori_RakkatenjoSegmentDataStart );
        _ovl_Bg_Mori_RakkatenjoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/z_bg_mori_rakkatenjo.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/ovl_Bg_Mori_Rakkatenjo_reloc.o (.rodata)
        _ovl_Bg_Mori_RakkatenjoSegmentRoDataEnd = .;
    _ovl_Bg_Mori_RakkatenjoSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Mori_RakkatenjoSegmentRoDataEnd - _ovl_Bg_Mori_RakkatenjoSegmentRoDataStart );
        _ovl_Bg_Mori_RakkatenjoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/z_bg_mori_rakkatenjo.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/ovl_Bg_Mori_Rakkatenjo_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_RakkatenjoSegmentSDataEnd = .;
        _ovl_Bg_Mori_RakkatenjoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/z_bg_mori_rakkatenjo.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/ovl_Bg_Mori_Rakkatenjo_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_RakkatenjoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Mori_RakkatenjoSegmentOvlEnd - _ovl_Bg_Mori_RakkatenjoSegmentTextStart );
    _ovl_Bg_Mori_RakkatenjoSegmentRomEnd = _RomSize;

    ..ovl_Bg_Mori_Rakkatenjo.bss ADDR(..ovl_Bg_Mori_Rakkatenjo) + SIZEOF(..ovl_Bg_Mori_Rakkatenjo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Mori_RakkatenjoSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/z_bg_mori_rakkatenjo.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/ovl_Bg_Mori_Rakkatenjo_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/z_bg_mori_rakkatenjo.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/ovl_Bg_Mori_Rakkatenjo_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/z_bg_mori_rakkatenjo.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/ovl_Bg_Mori_Rakkatenjo_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/z_bg_mori_rakkatenjo.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Mori_Rakkatenjo/ovl_Bg_Mori_Rakkatenjo_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Mori_RakkatenjoSegmentBssEnd = .;
        _ovl_Bg_Mori_RakkatenjoSegmentEnd = .;
    }
    _ovl_Bg_Mori_RakkatenjoSegmentBssSize = ABSOLUTE( _ovl_Bg_Mori_RakkatenjoSegmentBssEnd - _ovl_Bg_Mori_RakkatenjoSegmentBssStart );

    _ovl_Bg_Po_EventSegmentRomStart = _RomSize;
    ..ovl_Bg_Po_Event : AT(_RomSize)
    {
        _ovl_Bg_Po_EventSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Po_EventSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Po_Event/z_bg_po_event.o (.text)
            build/src/overlays/actors/ovl_Bg_Po_Event/ovl_Bg_Po_Event_reloc.o (.text)
        _ovl_Bg_Po_EventSegmentTextEnd = .;
    _ovl_Bg_Po_EventSegmentTextSize = ABSOLUTE( _ovl_Bg_Po_EventSegmentTextEnd - _ovl_Bg_Po_EventSegmentTextStart );
        _ovl_Bg_Po_EventSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Po_Event/z_bg_po_event.o (.data)
            build/src/overlays/actors/ovl_Bg_Po_Event/ovl_Bg_Po_Event_reloc.o (.data)
        _ovl_Bg_Po_EventSegmentDataEnd = .;
    _ovl_Bg_Po_EventSegmentDataSize = ABSOLUTE( _ovl_Bg_Po_EventSegmentDataEnd - _ovl_Bg_Po_EventSegmentDataStart );
        _ovl_Bg_Po_EventSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Po_Event/z_bg_po_event.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Po_Event/ovl_Bg_Po_Event_reloc.o (.rodata)
        _ovl_Bg_Po_EventSegmentRoDataEnd = .;
    _ovl_Bg_Po_EventSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Po_EventSegmentRoDataEnd - _ovl_Bg_Po_EventSegmentRoDataStart );
        _ovl_Bg_Po_EventSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Po_Event/z_bg_po_event.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Po_Event/ovl_Bg_Po_Event_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Po_EventSegmentSDataEnd = .;
        _ovl_Bg_Po_EventSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Po_Event/z_bg_po_event.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Po_Event/ovl_Bg_Po_Event_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Po_EventSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Po_EventSegmentOvlEnd - _ovl_Bg_Po_EventSegmentTextStart );
    _ovl_Bg_Po_EventSegmentRomEnd = _RomSize;

    ..ovl_Bg_Po_Event.bss ADDR(..ovl_Bg_Po_Event) + SIZEOF(..ovl_Bg_Po_Event) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Po_EventSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Po_Event/z_bg_po_event.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Po_Event/ovl_Bg_Po_Event_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Po_Event/z_bg_po_event.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Po_Event/ovl_Bg_Po_Event_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Po_Event/z_bg_po_event.o (.bss)
            build/src/overlays/actors/ovl_Bg_Po_Event/ovl_Bg_Po_Event_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Po_Event/z_bg_po_event.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Po_Event/ovl_Bg_Po_Event_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Po_EventSegmentBssEnd = .;
        _ovl_Bg_Po_EventSegmentEnd = .;
    }
    _ovl_Bg_Po_EventSegmentBssSize = ABSOLUTE( _ovl_Bg_Po_EventSegmentBssEnd - _ovl_Bg_Po_EventSegmentBssStart );

    _ovl_Bg_Po_SyokudaiSegmentRomStart = _RomSize;
    ..ovl_Bg_Po_Syokudai : AT(_RomSize)
    {
        _ovl_Bg_Po_SyokudaiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Po_SyokudaiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/z_bg_po_syokudai.o (.text)
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/ovl_Bg_Po_Syokudai_reloc.o (.text)
        _ovl_Bg_Po_SyokudaiSegmentTextEnd = .;
    _ovl_Bg_Po_SyokudaiSegmentTextSize = ABSOLUTE( _ovl_Bg_Po_SyokudaiSegmentTextEnd - _ovl_Bg_Po_SyokudaiSegmentTextStart );
        _ovl_Bg_Po_SyokudaiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/z_bg_po_syokudai.o (.data)
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/ovl_Bg_Po_Syokudai_reloc.o (.data)
        _ovl_Bg_Po_SyokudaiSegmentDataEnd = .;
    _ovl_Bg_Po_SyokudaiSegmentDataSize = ABSOLUTE( _ovl_Bg_Po_SyokudaiSegmentDataEnd - _ovl_Bg_Po_SyokudaiSegmentDataStart );
        _ovl_Bg_Po_SyokudaiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/z_bg_po_syokudai.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/ovl_Bg_Po_Syokudai_reloc.o (.rodata)
        _ovl_Bg_Po_SyokudaiSegmentRoDataEnd = .;
    _ovl_Bg_Po_SyokudaiSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Po_SyokudaiSegmentRoDataEnd - _ovl_Bg_Po_SyokudaiSegmentRoDataStart );
        _ovl_Bg_Po_SyokudaiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/z_bg_po_syokudai.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/ovl_Bg_Po_Syokudai_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Po_SyokudaiSegmentSDataEnd = .;
        _ovl_Bg_Po_SyokudaiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/z_bg_po_syokudai.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/ovl_Bg_Po_Syokudai_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Po_SyokudaiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Po_SyokudaiSegmentOvlEnd - _ovl_Bg_Po_SyokudaiSegmentTextStart );
    _ovl_Bg_Po_SyokudaiSegmentRomEnd = _RomSize;

    ..ovl_Bg_Po_Syokudai.bss ADDR(..ovl_Bg_Po_Syokudai) + SIZEOF(..ovl_Bg_Po_Syokudai) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Po_SyokudaiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/z_bg_po_syokudai.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/ovl_Bg_Po_Syokudai_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/z_bg_po_syokudai.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/ovl_Bg_Po_Syokudai_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/z_bg_po_syokudai.o (.bss)
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/ovl_Bg_Po_Syokudai_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/z_bg_po_syokudai.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Po_Syokudai/ovl_Bg_Po_Syokudai_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Po_SyokudaiSegmentBssEnd = .;
        _ovl_Bg_Po_SyokudaiSegmentEnd = .;
    }
    _ovl_Bg_Po_SyokudaiSegmentBssSize = ABSOLUTE( _ovl_Bg_Po_SyokudaiSegmentBssEnd - _ovl_Bg_Po_SyokudaiSegmentBssStart );

    _ovl_Bg_PushboxSegmentRomStart = _RomSize;
    ..ovl_Bg_Pushbox : AT(_RomSize)
    {
        _ovl_Bg_PushboxSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_PushboxSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Pushbox/z_bg_pushbox.o (.text)
            build/src/overlays/actors/ovl_Bg_Pushbox/ovl_Bg_Pushbox_reloc.o (.text)
        _ovl_Bg_PushboxSegmentTextEnd = .;
    _ovl_Bg_PushboxSegmentTextSize = ABSOLUTE( _ovl_Bg_PushboxSegmentTextEnd - _ovl_Bg_PushboxSegmentTextStart );
        _ovl_Bg_PushboxSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Pushbox/z_bg_pushbox.o (.data)
            build/src/overlays/actors/ovl_Bg_Pushbox/ovl_Bg_Pushbox_reloc.o (.data)
        _ovl_Bg_PushboxSegmentDataEnd = .;
    _ovl_Bg_PushboxSegmentDataSize = ABSOLUTE( _ovl_Bg_PushboxSegmentDataEnd - _ovl_Bg_PushboxSegmentDataStart );
        _ovl_Bg_PushboxSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Pushbox/z_bg_pushbox.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Pushbox/ovl_Bg_Pushbox_reloc.o (.rodata)
        _ovl_Bg_PushboxSegmentRoDataEnd = .;
    _ovl_Bg_PushboxSegmentRoDataSize = ABSOLUTE( _ovl_Bg_PushboxSegmentRoDataEnd - _ovl_Bg_PushboxSegmentRoDataStart );
        _ovl_Bg_PushboxSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Pushbox/z_bg_pushbox.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Pushbox/ovl_Bg_Pushbox_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_PushboxSegmentSDataEnd = .;
        _ovl_Bg_PushboxSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Pushbox/z_bg_pushbox.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Pushbox/ovl_Bg_Pushbox_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_PushboxSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_PushboxSegmentOvlEnd - _ovl_Bg_PushboxSegmentTextStart );
    _ovl_Bg_PushboxSegmentRomEnd = _RomSize;

    ..ovl_Bg_Pushbox.bss ADDR(..ovl_Bg_Pushbox) + SIZEOF(..ovl_Bg_Pushbox) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_PushboxSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Pushbox/z_bg_pushbox.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Pushbox/ovl_Bg_Pushbox_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Pushbox/z_bg_pushbox.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Pushbox/ovl_Bg_Pushbox_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Pushbox/z_bg_pushbox.o (.bss)
            build/src/overlays/actors/ovl_Bg_Pushbox/ovl_Bg_Pushbox_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Pushbox/z_bg_pushbox.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Pushbox/ovl_Bg_Pushbox_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_PushboxSegmentBssEnd = .;
        _ovl_Bg_PushboxSegmentEnd = .;
    }
    _ovl_Bg_PushboxSegmentBssSize = ABSOLUTE( _ovl_Bg_PushboxSegmentBssEnd - _ovl_Bg_PushboxSegmentBssStart );

    _ovl_Bg_Relay_ObjectsSegmentRomStart = _RomSize;
    ..ovl_Bg_Relay_Objects : AT(_RomSize)
    {
        _ovl_Bg_Relay_ObjectsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Relay_ObjectsSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Relay_Objects/z_bg_relay_objects.o (.text)
            build/data/overlays/actors/z_bg_relay_objects.data.o (.text)
            build/data/overlays/actors/z_bg_relay_objects.reloc.o (.text)
        _ovl_Bg_Relay_ObjectsSegmentTextEnd = .;
    _ovl_Bg_Relay_ObjectsSegmentTextSize = ABSOLUTE( _ovl_Bg_Relay_ObjectsSegmentTextEnd - _ovl_Bg_Relay_ObjectsSegmentTextStart );
        _ovl_Bg_Relay_ObjectsSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Relay_Objects/z_bg_relay_objects.o (.data)
            build/data/overlays/actors/z_bg_relay_objects.data.o (.data)
            build/data/overlays/actors/z_bg_relay_objects.reloc.o (.data)
        _ovl_Bg_Relay_ObjectsSegmentDataEnd = .;
    _ovl_Bg_Relay_ObjectsSegmentDataSize = ABSOLUTE( _ovl_Bg_Relay_ObjectsSegmentDataEnd - _ovl_Bg_Relay_ObjectsSegmentDataStart );
        _ovl_Bg_Relay_ObjectsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Relay_Objects/z_bg_relay_objects.o (.rodata)
            build/data/overlays/actors/z_bg_relay_objects.data.o (.rodata)
            build/data/overlays/actors/z_bg_relay_objects.reloc.o (.rodata)
        _ovl_Bg_Relay_ObjectsSegmentRoDataEnd = .;
    _ovl_Bg_Relay_ObjectsSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Relay_ObjectsSegmentRoDataEnd - _ovl_Bg_Relay_ObjectsSegmentRoDataStart );
        _ovl_Bg_Relay_ObjectsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Relay_Objects/z_bg_relay_objects.o (.sdata)
            build/data/overlays/actors/z_bg_relay_objects.data.o (.sdata)
            build/data/overlays/actors/z_bg_relay_objects.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Relay_ObjectsSegmentSDataEnd = .;
        _ovl_Bg_Relay_ObjectsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Relay_Objects/z_bg_relay_objects.o (.ovl)
            build/data/overlays/actors/z_bg_relay_objects.data.o (.ovl)
            build/data/overlays/actors/z_bg_relay_objects.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Relay_ObjectsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Relay_ObjectsSegmentOvlEnd - _ovl_Bg_Relay_ObjectsSegmentTextStart );
    _ovl_Bg_Relay_ObjectsSegmentRomEnd = _RomSize;

    ..ovl_Bg_Relay_Objects.bss ADDR(..ovl_Bg_Relay_Objects) + SIZEOF(..ovl_Bg_Relay_Objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Relay_ObjectsSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Relay_Objects/z_bg_relay_objects.o (.sbss)
            build/data/overlays/actors/z_bg_relay_objects.data.o (.sbss)
            build/data/overlays/actors/z_bg_relay_objects.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Relay_Objects/z_bg_relay_objects.o (.scommon)
            build/data/overlays/actors/z_bg_relay_objects.data.o (.scommon)
            build/data/overlays/actors/z_bg_relay_objects.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Relay_Objects/z_bg_relay_objects.o (.bss)
            build/data/overlays/actors/z_bg_relay_objects.data.o (.bss)
            build/data/overlays/actors/z_bg_relay_objects.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Relay_Objects/z_bg_relay_objects.o (COMMON)
            build/data/overlays/actors/z_bg_relay_objects.data.o (COMMON)
            build/data/overlays/actors/z_bg_relay_objects.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Relay_ObjectsSegmentBssEnd = .;
        _ovl_Bg_Relay_ObjectsSegmentEnd = .;
    }
    _ovl_Bg_Relay_ObjectsSegmentBssSize = ABSOLUTE( _ovl_Bg_Relay_ObjectsSegmentBssEnd - _ovl_Bg_Relay_ObjectsSegmentBssStart );

    _ovl_Bg_Spot00_BreakSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot00_Break : AT(_RomSize)
    {
        _ovl_Bg_Spot00_BreakSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot00_BreakSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot00_Break/z_bg_spot00_break.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot00_Break/ovl_Bg_Spot00_Break_reloc.o (.text)
        _ovl_Bg_Spot00_BreakSegmentTextEnd = .;
    _ovl_Bg_Spot00_BreakSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot00_BreakSegmentTextEnd - _ovl_Bg_Spot00_BreakSegmentTextStart );
        _ovl_Bg_Spot00_BreakSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot00_Break/z_bg_spot00_break.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot00_Break/ovl_Bg_Spot00_Break_reloc.o (.data)
        _ovl_Bg_Spot00_BreakSegmentDataEnd = .;
    _ovl_Bg_Spot00_BreakSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot00_BreakSegmentDataEnd - _ovl_Bg_Spot00_BreakSegmentDataStart );
        _ovl_Bg_Spot00_BreakSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot00_Break/z_bg_spot00_break.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot00_Break/ovl_Bg_Spot00_Break_reloc.o (.rodata)
        _ovl_Bg_Spot00_BreakSegmentRoDataEnd = .;
    _ovl_Bg_Spot00_BreakSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot00_BreakSegmentRoDataEnd - _ovl_Bg_Spot00_BreakSegmentRoDataStart );
        _ovl_Bg_Spot00_BreakSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot00_Break/z_bg_spot00_break.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot00_Break/ovl_Bg_Spot00_Break_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot00_BreakSegmentSDataEnd = .;
        _ovl_Bg_Spot00_BreakSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot00_Break/z_bg_spot00_break.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot00_Break/ovl_Bg_Spot00_Break_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot00_BreakSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot00_BreakSegmentOvlEnd - _ovl_Bg_Spot00_BreakSegmentTextStart );
    _ovl_Bg_Spot00_BreakSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot00_Break.bss ADDR(..ovl_Bg_Spot00_Break) + SIZEOF(..ovl_Bg_Spot00_Break) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot00_BreakSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot00_Break/z_bg_spot00_break.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot00_Break/ovl_Bg_Spot00_Break_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot00_Break/z_bg_spot00_break.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot00_Break/ovl_Bg_Spot00_Break_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot00_Break/z_bg_spot00_break.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot00_Break/ovl_Bg_Spot00_Break_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot00_Break/z_bg_spot00_break.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot00_Break/ovl_Bg_Spot00_Break_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot00_BreakSegmentBssEnd = .;
        _ovl_Bg_Spot00_BreakSegmentEnd = .;
    }
    _ovl_Bg_Spot00_BreakSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot00_BreakSegmentBssEnd - _ovl_Bg_Spot00_BreakSegmentBssStart );

    _ovl_Bg_Spot00_HanebasiSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot00_Hanebasi : AT(_RomSize)
    {
        _ovl_Bg_Spot00_HanebasiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot00_HanebasiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot00_Hanebasi/z_bg_spot00_hanebasi.o (.text)
            build/data/overlays/actors/z_bg_spot00_hanebasi.data.o (.text)
            build/data/overlays/actors/z_bg_spot00_hanebasi.reloc.o (.text)
        _ovl_Bg_Spot00_HanebasiSegmentTextEnd = .;
    _ovl_Bg_Spot00_HanebasiSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot00_HanebasiSegmentTextEnd - _ovl_Bg_Spot00_HanebasiSegmentTextStart );
        _ovl_Bg_Spot00_HanebasiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot00_Hanebasi/z_bg_spot00_hanebasi.o (.data)
            build/data/overlays/actors/z_bg_spot00_hanebasi.data.o (.data)
            build/data/overlays/actors/z_bg_spot00_hanebasi.reloc.o (.data)
        _ovl_Bg_Spot00_HanebasiSegmentDataEnd = .;
    _ovl_Bg_Spot00_HanebasiSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot00_HanebasiSegmentDataEnd - _ovl_Bg_Spot00_HanebasiSegmentDataStart );
        _ovl_Bg_Spot00_HanebasiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot00_Hanebasi/z_bg_spot00_hanebasi.o (.rodata)
            build/data/overlays/actors/z_bg_spot00_hanebasi.data.o (.rodata)
            build/data/overlays/actors/z_bg_spot00_hanebasi.reloc.o (.rodata)
        _ovl_Bg_Spot00_HanebasiSegmentRoDataEnd = .;
    _ovl_Bg_Spot00_HanebasiSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot00_HanebasiSegmentRoDataEnd - _ovl_Bg_Spot00_HanebasiSegmentRoDataStart );
        _ovl_Bg_Spot00_HanebasiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot00_Hanebasi/z_bg_spot00_hanebasi.o (.sdata)
            build/data/overlays/actors/z_bg_spot00_hanebasi.data.o (.sdata)
            build/data/overlays/actors/z_bg_spot00_hanebasi.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot00_HanebasiSegmentSDataEnd = .;
        _ovl_Bg_Spot00_HanebasiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot00_Hanebasi/z_bg_spot00_hanebasi.o (.ovl)
            build/data/overlays/actors/z_bg_spot00_hanebasi.data.o (.ovl)
            build/data/overlays/actors/z_bg_spot00_hanebasi.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot00_HanebasiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot00_HanebasiSegmentOvlEnd - _ovl_Bg_Spot00_HanebasiSegmentTextStart );
    _ovl_Bg_Spot00_HanebasiSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot00_Hanebasi.bss ADDR(..ovl_Bg_Spot00_Hanebasi) + SIZEOF(..ovl_Bg_Spot00_Hanebasi) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot00_HanebasiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot00_Hanebasi/z_bg_spot00_hanebasi.o (.sbss)
            build/data/overlays/actors/z_bg_spot00_hanebasi.data.o (.sbss)
            build/data/overlays/actors/z_bg_spot00_hanebasi.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot00_Hanebasi/z_bg_spot00_hanebasi.o (.scommon)
            build/data/overlays/actors/z_bg_spot00_hanebasi.data.o (.scommon)
            build/data/overlays/actors/z_bg_spot00_hanebasi.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot00_Hanebasi/z_bg_spot00_hanebasi.o (.bss)
            build/data/overlays/actors/z_bg_spot00_hanebasi.data.o (.bss)
            build/data/overlays/actors/z_bg_spot00_hanebasi.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot00_Hanebasi/z_bg_spot00_hanebasi.o (COMMON)
            build/data/overlays/actors/z_bg_spot00_hanebasi.data.o (COMMON)
            build/data/overlays/actors/z_bg_spot00_hanebasi.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot00_HanebasiSegmentBssEnd = .;
        _ovl_Bg_Spot00_HanebasiSegmentEnd = .;
    }
    _ovl_Bg_Spot00_HanebasiSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot00_HanebasiSegmentBssEnd - _ovl_Bg_Spot00_HanebasiSegmentBssStart );

    _ovl_Bg_Spot01_FusyaSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot01_Fusya : AT(_RomSize)
    {
        _ovl_Bg_Spot01_FusyaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_FusyaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/z_bg_spot01_fusya.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/ovl_Bg_Spot01_Fusya_reloc.o (.text)
        _ovl_Bg_Spot01_FusyaSegmentTextEnd = .;
    _ovl_Bg_Spot01_FusyaSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot01_FusyaSegmentTextEnd - _ovl_Bg_Spot01_FusyaSegmentTextStart );
        _ovl_Bg_Spot01_FusyaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/z_bg_spot01_fusya.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/ovl_Bg_Spot01_Fusya_reloc.o (.data)
        _ovl_Bg_Spot01_FusyaSegmentDataEnd = .;
    _ovl_Bg_Spot01_FusyaSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot01_FusyaSegmentDataEnd - _ovl_Bg_Spot01_FusyaSegmentDataStart );
        _ovl_Bg_Spot01_FusyaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/z_bg_spot01_fusya.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/ovl_Bg_Spot01_Fusya_reloc.o (.rodata)
        _ovl_Bg_Spot01_FusyaSegmentRoDataEnd = .;
    _ovl_Bg_Spot01_FusyaSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot01_FusyaSegmentRoDataEnd - _ovl_Bg_Spot01_FusyaSegmentRoDataStart );
        _ovl_Bg_Spot01_FusyaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/z_bg_spot01_fusya.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/ovl_Bg_Spot01_Fusya_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_FusyaSegmentSDataEnd = .;
        _ovl_Bg_Spot01_FusyaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/z_bg_spot01_fusya.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/ovl_Bg_Spot01_Fusya_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_FusyaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot01_FusyaSegmentOvlEnd - _ovl_Bg_Spot01_FusyaSegmentTextStart );
    _ovl_Bg_Spot01_FusyaSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot01_Fusya.bss ADDR(..ovl_Bg_Spot01_Fusya) + SIZEOF(..ovl_Bg_Spot01_Fusya) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_FusyaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/z_bg_spot01_fusya.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/ovl_Bg_Spot01_Fusya_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/z_bg_spot01_fusya.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/ovl_Bg_Spot01_Fusya_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/z_bg_spot01_fusya.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/ovl_Bg_Spot01_Fusya_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/z_bg_spot01_fusya.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot01_Fusya/ovl_Bg_Spot01_Fusya_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_FusyaSegmentBssEnd = .;
        _ovl_Bg_Spot01_FusyaSegmentEnd = .;
    }
    _ovl_Bg_Spot01_FusyaSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot01_FusyaSegmentBssEnd - _ovl_Bg_Spot01_FusyaSegmentBssStart );

    _ovl_Bg_Spot01_IdohashiraSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot01_Idohashira : AT(_RomSize)
    {
        _ovl_Bg_Spot01_IdohashiraSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdohashiraSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/z_bg_spot01_idohashira.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/ovl_Bg_Spot01_Idohashira_reloc.o (.text)
        _ovl_Bg_Spot01_IdohashiraSegmentTextEnd = .;
    _ovl_Bg_Spot01_IdohashiraSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot01_IdohashiraSegmentTextEnd - _ovl_Bg_Spot01_IdohashiraSegmentTextStart );
        _ovl_Bg_Spot01_IdohashiraSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/z_bg_spot01_idohashira.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/ovl_Bg_Spot01_Idohashira_reloc.o (.data)
        _ovl_Bg_Spot01_IdohashiraSegmentDataEnd = .;
    _ovl_Bg_Spot01_IdohashiraSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot01_IdohashiraSegmentDataEnd - _ovl_Bg_Spot01_IdohashiraSegmentDataStart );
        _ovl_Bg_Spot01_IdohashiraSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/z_bg_spot01_idohashira.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/ovl_Bg_Spot01_Idohashira_reloc.o (.rodata)
        _ovl_Bg_Spot01_IdohashiraSegmentRoDataEnd = .;
    _ovl_Bg_Spot01_IdohashiraSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot01_IdohashiraSegmentRoDataEnd - _ovl_Bg_Spot01_IdohashiraSegmentRoDataStart );
        _ovl_Bg_Spot01_IdohashiraSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/z_bg_spot01_idohashira.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/ovl_Bg_Spot01_Idohashira_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdohashiraSegmentSDataEnd = .;
        _ovl_Bg_Spot01_IdohashiraSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/z_bg_spot01_idohashira.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/ovl_Bg_Spot01_Idohashira_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdohashiraSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot01_IdohashiraSegmentOvlEnd - _ovl_Bg_Spot01_IdohashiraSegmentTextStart );
    _ovl_Bg_Spot01_IdohashiraSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot01_Idohashira.bss ADDR(..ovl_Bg_Spot01_Idohashira) + SIZEOF(..ovl_Bg_Spot01_Idohashira) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdohashiraSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/z_bg_spot01_idohashira.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/ovl_Bg_Spot01_Idohashira_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/z_bg_spot01_idohashira.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/ovl_Bg_Spot01_Idohashira_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/z_bg_spot01_idohashira.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/ovl_Bg_Spot01_Idohashira_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/z_bg_spot01_idohashira.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot01_Idohashira/ovl_Bg_Spot01_Idohashira_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdohashiraSegmentBssEnd = .;
        _ovl_Bg_Spot01_IdohashiraSegmentEnd = .;
    }
    _ovl_Bg_Spot01_IdohashiraSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot01_IdohashiraSegmentBssEnd - _ovl_Bg_Spot01_IdohashiraSegmentBssStart );

    _ovl_Bg_Spot01_IdomizuSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot01_Idomizu : AT(_RomSize)
    {
        _ovl_Bg_Spot01_IdomizuSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdomizuSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/z_bg_spot01_idomizu.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/ovl_Bg_Spot01_Idomizu_reloc.o (.text)
        _ovl_Bg_Spot01_IdomizuSegmentTextEnd = .;
    _ovl_Bg_Spot01_IdomizuSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot01_IdomizuSegmentTextEnd - _ovl_Bg_Spot01_IdomizuSegmentTextStart );
        _ovl_Bg_Spot01_IdomizuSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/z_bg_spot01_idomizu.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/ovl_Bg_Spot01_Idomizu_reloc.o (.data)
        _ovl_Bg_Spot01_IdomizuSegmentDataEnd = .;
    _ovl_Bg_Spot01_IdomizuSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot01_IdomizuSegmentDataEnd - _ovl_Bg_Spot01_IdomizuSegmentDataStart );
        _ovl_Bg_Spot01_IdomizuSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/z_bg_spot01_idomizu.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/ovl_Bg_Spot01_Idomizu_reloc.o (.rodata)
        _ovl_Bg_Spot01_IdomizuSegmentRoDataEnd = .;
    _ovl_Bg_Spot01_IdomizuSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot01_IdomizuSegmentRoDataEnd - _ovl_Bg_Spot01_IdomizuSegmentRoDataStart );
        _ovl_Bg_Spot01_IdomizuSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/z_bg_spot01_idomizu.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/ovl_Bg_Spot01_Idomizu_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdomizuSegmentSDataEnd = .;
        _ovl_Bg_Spot01_IdomizuSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/z_bg_spot01_idomizu.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/ovl_Bg_Spot01_Idomizu_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdomizuSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot01_IdomizuSegmentOvlEnd - _ovl_Bg_Spot01_IdomizuSegmentTextStart );
    _ovl_Bg_Spot01_IdomizuSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot01_Idomizu.bss ADDR(..ovl_Bg_Spot01_Idomizu) + SIZEOF(..ovl_Bg_Spot01_Idomizu) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdomizuSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/z_bg_spot01_idomizu.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/ovl_Bg_Spot01_Idomizu_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/z_bg_spot01_idomizu.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/ovl_Bg_Spot01_Idomizu_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/z_bg_spot01_idomizu.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/ovl_Bg_Spot01_Idomizu_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/z_bg_spot01_idomizu.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot01_Idomizu/ovl_Bg_Spot01_Idomizu_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdomizuSegmentBssEnd = .;
        _ovl_Bg_Spot01_IdomizuSegmentEnd = .;
    }
    _ovl_Bg_Spot01_IdomizuSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot01_IdomizuSegmentBssEnd - _ovl_Bg_Spot01_IdomizuSegmentBssStart );

    _ovl_Bg_Spot01_IdosokoSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot01_Idosoko : AT(_RomSize)
    {
        _ovl_Bg_Spot01_IdosokoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdosokoSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/z_bg_spot01_idosoko.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/ovl_Bg_Spot01_Idosoko_reloc.o (.text)
        _ovl_Bg_Spot01_IdosokoSegmentTextEnd = .;
    _ovl_Bg_Spot01_IdosokoSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot01_IdosokoSegmentTextEnd - _ovl_Bg_Spot01_IdosokoSegmentTextStart );
        _ovl_Bg_Spot01_IdosokoSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/z_bg_spot01_idosoko.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/ovl_Bg_Spot01_Idosoko_reloc.o (.data)
        _ovl_Bg_Spot01_IdosokoSegmentDataEnd = .;
    _ovl_Bg_Spot01_IdosokoSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot01_IdosokoSegmentDataEnd - _ovl_Bg_Spot01_IdosokoSegmentDataStart );
        _ovl_Bg_Spot01_IdosokoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/z_bg_spot01_idosoko.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/ovl_Bg_Spot01_Idosoko_reloc.o (.rodata)
        _ovl_Bg_Spot01_IdosokoSegmentRoDataEnd = .;
    _ovl_Bg_Spot01_IdosokoSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot01_IdosokoSegmentRoDataEnd - _ovl_Bg_Spot01_IdosokoSegmentRoDataStart );
        _ovl_Bg_Spot01_IdosokoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/z_bg_spot01_idosoko.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/ovl_Bg_Spot01_Idosoko_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdosokoSegmentSDataEnd = .;
        _ovl_Bg_Spot01_IdosokoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/z_bg_spot01_idosoko.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/ovl_Bg_Spot01_Idosoko_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdosokoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot01_IdosokoSegmentOvlEnd - _ovl_Bg_Spot01_IdosokoSegmentTextStart );
    _ovl_Bg_Spot01_IdosokoSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot01_Idosoko.bss ADDR(..ovl_Bg_Spot01_Idosoko) + SIZEOF(..ovl_Bg_Spot01_Idosoko) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdosokoSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/z_bg_spot01_idosoko.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/ovl_Bg_Spot01_Idosoko_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/z_bg_spot01_idosoko.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/ovl_Bg_Spot01_Idosoko_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/z_bg_spot01_idosoko.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/ovl_Bg_Spot01_Idosoko_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/z_bg_spot01_idosoko.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot01_Idosoko/ovl_Bg_Spot01_Idosoko_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_IdosokoSegmentBssEnd = .;
        _ovl_Bg_Spot01_IdosokoSegmentEnd = .;
    }
    _ovl_Bg_Spot01_IdosokoSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot01_IdosokoSegmentBssEnd - _ovl_Bg_Spot01_IdosokoSegmentBssStart );

    _ovl_Bg_Spot01_Objects2SegmentRomStart = _RomSize;
    ..ovl_Bg_Spot01_Objects2 : AT(_RomSize)
    {
        _ovl_Bg_Spot01_Objects2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_Objects2SegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/z_bg_spot01_objects2.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/ovl_Bg_Spot01_Objects2_reloc.o (.text)
        _ovl_Bg_Spot01_Objects2SegmentTextEnd = .;
    _ovl_Bg_Spot01_Objects2SegmentTextSize = ABSOLUTE( _ovl_Bg_Spot01_Objects2SegmentTextEnd - _ovl_Bg_Spot01_Objects2SegmentTextStart );
        _ovl_Bg_Spot01_Objects2SegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/z_bg_spot01_objects2.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/ovl_Bg_Spot01_Objects2_reloc.o (.data)
        _ovl_Bg_Spot01_Objects2SegmentDataEnd = .;
    _ovl_Bg_Spot01_Objects2SegmentDataSize = ABSOLUTE( _ovl_Bg_Spot01_Objects2SegmentDataEnd - _ovl_Bg_Spot01_Objects2SegmentDataStart );
        _ovl_Bg_Spot01_Objects2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/z_bg_spot01_objects2.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/ovl_Bg_Spot01_Objects2_reloc.o (.rodata)
        _ovl_Bg_Spot01_Objects2SegmentRoDataEnd = .;
    _ovl_Bg_Spot01_Objects2SegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot01_Objects2SegmentRoDataEnd - _ovl_Bg_Spot01_Objects2SegmentRoDataStart );
        _ovl_Bg_Spot01_Objects2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/z_bg_spot01_objects2.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/ovl_Bg_Spot01_Objects2_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_Objects2SegmentSDataEnd = .;
        _ovl_Bg_Spot01_Objects2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/z_bg_spot01_objects2.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/ovl_Bg_Spot01_Objects2_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_Objects2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot01_Objects2SegmentOvlEnd - _ovl_Bg_Spot01_Objects2SegmentTextStart );
    _ovl_Bg_Spot01_Objects2SegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot01_Objects2.bss ADDR(..ovl_Bg_Spot01_Objects2) + SIZEOF(..ovl_Bg_Spot01_Objects2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_Objects2SegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/z_bg_spot01_objects2.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/ovl_Bg_Spot01_Objects2_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/z_bg_spot01_objects2.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/ovl_Bg_Spot01_Objects2_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/z_bg_spot01_objects2.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/ovl_Bg_Spot01_Objects2_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/z_bg_spot01_objects2.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot01_Objects2/ovl_Bg_Spot01_Objects2_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot01_Objects2SegmentBssEnd = .;
        _ovl_Bg_Spot01_Objects2SegmentEnd = .;
    }
    _ovl_Bg_Spot01_Objects2SegmentBssSize = ABSOLUTE( _ovl_Bg_Spot01_Objects2SegmentBssEnd - _ovl_Bg_Spot01_Objects2SegmentBssStart );

    _ovl_Bg_Spot02_ObjectsSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot02_Objects : AT(_RomSize)
    {
        _ovl_Bg_Spot02_ObjectsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot02_ObjectsSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot02_Objects/z_bg_spot02_objects.o (.text)
            build/data/overlays/actors/z_bg_spot02_objects.data.o (.text)
            build/data/overlays/actors/z_bg_spot02_objects.reloc.o (.text)
        _ovl_Bg_Spot02_ObjectsSegmentTextEnd = .;
    _ovl_Bg_Spot02_ObjectsSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot02_ObjectsSegmentTextEnd - _ovl_Bg_Spot02_ObjectsSegmentTextStart );
        _ovl_Bg_Spot02_ObjectsSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot02_Objects/z_bg_spot02_objects.o (.data)
            build/data/overlays/actors/z_bg_spot02_objects.data.o (.data)
            build/data/overlays/actors/z_bg_spot02_objects.reloc.o (.data)
        _ovl_Bg_Spot02_ObjectsSegmentDataEnd = .;
    _ovl_Bg_Spot02_ObjectsSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot02_ObjectsSegmentDataEnd - _ovl_Bg_Spot02_ObjectsSegmentDataStart );
        _ovl_Bg_Spot02_ObjectsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot02_Objects/z_bg_spot02_objects.o (.rodata)
            build/data/overlays/actors/z_bg_spot02_objects.data.o (.rodata)
            build/data/overlays/actors/z_bg_spot02_objects.reloc.o (.rodata)
        _ovl_Bg_Spot02_ObjectsSegmentRoDataEnd = .;
    _ovl_Bg_Spot02_ObjectsSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot02_ObjectsSegmentRoDataEnd - _ovl_Bg_Spot02_ObjectsSegmentRoDataStart );
        _ovl_Bg_Spot02_ObjectsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot02_Objects/z_bg_spot02_objects.o (.sdata)
            build/data/overlays/actors/z_bg_spot02_objects.data.o (.sdata)
            build/data/overlays/actors/z_bg_spot02_objects.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot02_ObjectsSegmentSDataEnd = .;
        _ovl_Bg_Spot02_ObjectsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot02_Objects/z_bg_spot02_objects.o (.ovl)
            build/data/overlays/actors/z_bg_spot02_objects.data.o (.ovl)
            build/data/overlays/actors/z_bg_spot02_objects.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot02_ObjectsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot02_ObjectsSegmentOvlEnd - _ovl_Bg_Spot02_ObjectsSegmentTextStart );
    _ovl_Bg_Spot02_ObjectsSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot02_Objects.bss ADDR(..ovl_Bg_Spot02_Objects) + SIZEOF(..ovl_Bg_Spot02_Objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot02_ObjectsSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot02_Objects/z_bg_spot02_objects.o (.sbss)
            build/data/overlays/actors/z_bg_spot02_objects.data.o (.sbss)
            build/data/overlays/actors/z_bg_spot02_objects.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot02_Objects/z_bg_spot02_objects.o (.scommon)
            build/data/overlays/actors/z_bg_spot02_objects.data.o (.scommon)
            build/data/overlays/actors/z_bg_spot02_objects.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot02_Objects/z_bg_spot02_objects.o (.bss)
            build/data/overlays/actors/z_bg_spot02_objects.data.o (.bss)
            build/data/overlays/actors/z_bg_spot02_objects.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot02_Objects/z_bg_spot02_objects.o (COMMON)
            build/data/overlays/actors/z_bg_spot02_objects.data.o (COMMON)
            build/data/overlays/actors/z_bg_spot02_objects.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot02_ObjectsSegmentBssEnd = .;
        _ovl_Bg_Spot02_ObjectsSegmentEnd = .;
    }
    _ovl_Bg_Spot02_ObjectsSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot02_ObjectsSegmentBssEnd - _ovl_Bg_Spot02_ObjectsSegmentBssStart );

    _ovl_Bg_Spot03_TakiSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot03_Taki : AT(_RomSize)
    {
        _ovl_Bg_Spot03_TakiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot03_TakiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/z_bg_spot03_taki.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/ovl_Bg_Spot03_Taki_reloc.o (.text)
        _ovl_Bg_Spot03_TakiSegmentTextEnd = .;
    _ovl_Bg_Spot03_TakiSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot03_TakiSegmentTextEnd - _ovl_Bg_Spot03_TakiSegmentTextStart );
        _ovl_Bg_Spot03_TakiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/z_bg_spot03_taki.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/ovl_Bg_Spot03_Taki_reloc.o (.data)
        _ovl_Bg_Spot03_TakiSegmentDataEnd = .;
    _ovl_Bg_Spot03_TakiSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot03_TakiSegmentDataEnd - _ovl_Bg_Spot03_TakiSegmentDataStart );
        _ovl_Bg_Spot03_TakiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/z_bg_spot03_taki.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/ovl_Bg_Spot03_Taki_reloc.o (.rodata)
        _ovl_Bg_Spot03_TakiSegmentRoDataEnd = .;
    _ovl_Bg_Spot03_TakiSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot03_TakiSegmentRoDataEnd - _ovl_Bg_Spot03_TakiSegmentRoDataStart );
        _ovl_Bg_Spot03_TakiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/z_bg_spot03_taki.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/ovl_Bg_Spot03_Taki_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot03_TakiSegmentSDataEnd = .;
        _ovl_Bg_Spot03_TakiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/z_bg_spot03_taki.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/ovl_Bg_Spot03_Taki_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot03_TakiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot03_TakiSegmentOvlEnd - _ovl_Bg_Spot03_TakiSegmentTextStart );
    _ovl_Bg_Spot03_TakiSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot03_Taki.bss ADDR(..ovl_Bg_Spot03_Taki) + SIZEOF(..ovl_Bg_Spot03_Taki) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot03_TakiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/z_bg_spot03_taki.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/ovl_Bg_Spot03_Taki_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/z_bg_spot03_taki.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/ovl_Bg_Spot03_Taki_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/z_bg_spot03_taki.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/ovl_Bg_Spot03_Taki_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/z_bg_spot03_taki.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot03_Taki/ovl_Bg_Spot03_Taki_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot03_TakiSegmentBssEnd = .;
        _ovl_Bg_Spot03_TakiSegmentEnd = .;
    }
    _ovl_Bg_Spot03_TakiSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot03_TakiSegmentBssEnd - _ovl_Bg_Spot03_TakiSegmentBssStart );

    _ovl_Bg_Spot05_SokoSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot05_Soko : AT(_RomSize)
    {
        _ovl_Bg_Spot05_SokoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot05_SokoSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/z_bg_spot05_soko.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/ovl_Bg_Spot05_Soko_reloc.o (.text)
        _ovl_Bg_Spot05_SokoSegmentTextEnd = .;
    _ovl_Bg_Spot05_SokoSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot05_SokoSegmentTextEnd - _ovl_Bg_Spot05_SokoSegmentTextStart );
        _ovl_Bg_Spot05_SokoSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/z_bg_spot05_soko.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/ovl_Bg_Spot05_Soko_reloc.o (.data)
        _ovl_Bg_Spot05_SokoSegmentDataEnd = .;
    _ovl_Bg_Spot05_SokoSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot05_SokoSegmentDataEnd - _ovl_Bg_Spot05_SokoSegmentDataStart );
        _ovl_Bg_Spot05_SokoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/z_bg_spot05_soko.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/ovl_Bg_Spot05_Soko_reloc.o (.rodata)
        _ovl_Bg_Spot05_SokoSegmentRoDataEnd = .;
    _ovl_Bg_Spot05_SokoSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot05_SokoSegmentRoDataEnd - _ovl_Bg_Spot05_SokoSegmentRoDataStart );
        _ovl_Bg_Spot05_SokoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/z_bg_spot05_soko.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/ovl_Bg_Spot05_Soko_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot05_SokoSegmentSDataEnd = .;
        _ovl_Bg_Spot05_SokoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/z_bg_spot05_soko.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/ovl_Bg_Spot05_Soko_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot05_SokoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot05_SokoSegmentOvlEnd - _ovl_Bg_Spot05_SokoSegmentTextStart );
    _ovl_Bg_Spot05_SokoSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot05_Soko.bss ADDR(..ovl_Bg_Spot05_Soko) + SIZEOF(..ovl_Bg_Spot05_Soko) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot05_SokoSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/z_bg_spot05_soko.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/ovl_Bg_Spot05_Soko_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/z_bg_spot05_soko.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/ovl_Bg_Spot05_Soko_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/z_bg_spot05_soko.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/ovl_Bg_Spot05_Soko_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/z_bg_spot05_soko.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot05_Soko/ovl_Bg_Spot05_Soko_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot05_SokoSegmentBssEnd = .;
        _ovl_Bg_Spot05_SokoSegmentEnd = .;
    }
    _ovl_Bg_Spot05_SokoSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot05_SokoSegmentBssEnd - _ovl_Bg_Spot05_SokoSegmentBssStart );

    _ovl_Bg_Spot06_ObjectsSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot06_Objects : AT(_RomSize)
    {
        _ovl_Bg_Spot06_ObjectsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot06_ObjectsSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot06_Objects/z_bg_spot06_objects.o (.text)
            build/data/overlays/actors/z_bg_spot06_objects.data.o (.text)
            build/data/overlays/actors/z_bg_spot06_objects.reloc.o (.text)
        _ovl_Bg_Spot06_ObjectsSegmentTextEnd = .;
    _ovl_Bg_Spot06_ObjectsSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot06_ObjectsSegmentTextEnd - _ovl_Bg_Spot06_ObjectsSegmentTextStart );
        _ovl_Bg_Spot06_ObjectsSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot06_Objects/z_bg_spot06_objects.o (.data)
            build/data/overlays/actors/z_bg_spot06_objects.data.o (.data)
            build/data/overlays/actors/z_bg_spot06_objects.reloc.o (.data)
        _ovl_Bg_Spot06_ObjectsSegmentDataEnd = .;
    _ovl_Bg_Spot06_ObjectsSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot06_ObjectsSegmentDataEnd - _ovl_Bg_Spot06_ObjectsSegmentDataStart );
        _ovl_Bg_Spot06_ObjectsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot06_Objects/z_bg_spot06_objects.o (.rodata)
            build/data/overlays/actors/z_bg_spot06_objects.data.o (.rodata)
            build/data/overlays/actors/z_bg_spot06_objects.reloc.o (.rodata)
        _ovl_Bg_Spot06_ObjectsSegmentRoDataEnd = .;
    _ovl_Bg_Spot06_ObjectsSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot06_ObjectsSegmentRoDataEnd - _ovl_Bg_Spot06_ObjectsSegmentRoDataStart );
        _ovl_Bg_Spot06_ObjectsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot06_Objects/z_bg_spot06_objects.o (.sdata)
            build/data/overlays/actors/z_bg_spot06_objects.data.o (.sdata)
            build/data/overlays/actors/z_bg_spot06_objects.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot06_ObjectsSegmentSDataEnd = .;
        _ovl_Bg_Spot06_ObjectsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot06_Objects/z_bg_spot06_objects.o (.ovl)
            build/data/overlays/actors/z_bg_spot06_objects.data.o (.ovl)
            build/data/overlays/actors/z_bg_spot06_objects.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot06_ObjectsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot06_ObjectsSegmentOvlEnd - _ovl_Bg_Spot06_ObjectsSegmentTextStart );
    _ovl_Bg_Spot06_ObjectsSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot06_Objects.bss ADDR(..ovl_Bg_Spot06_Objects) + SIZEOF(..ovl_Bg_Spot06_Objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot06_ObjectsSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot06_Objects/z_bg_spot06_objects.o (.sbss)
            build/data/overlays/actors/z_bg_spot06_objects.data.o (.sbss)
            build/data/overlays/actors/z_bg_spot06_objects.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot06_Objects/z_bg_spot06_objects.o (.scommon)
            build/data/overlays/actors/z_bg_spot06_objects.data.o (.scommon)
            build/data/overlays/actors/z_bg_spot06_objects.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot06_Objects/z_bg_spot06_objects.o (.bss)
            build/data/overlays/actors/z_bg_spot06_objects.data.o (.bss)
            build/data/overlays/actors/z_bg_spot06_objects.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot06_Objects/z_bg_spot06_objects.o (COMMON)
            build/data/overlays/actors/z_bg_spot06_objects.data.o (COMMON)
            build/data/overlays/actors/z_bg_spot06_objects.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot06_ObjectsSegmentBssEnd = .;
        _ovl_Bg_Spot06_ObjectsSegmentEnd = .;
    }
    _ovl_Bg_Spot06_ObjectsSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot06_ObjectsSegmentBssEnd - _ovl_Bg_Spot06_ObjectsSegmentBssStart );

    _ovl_Bg_Spot07_TakiSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot07_Taki : AT(_RomSize)
    {
        _ovl_Bg_Spot07_TakiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot07_TakiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot07_Taki/z_bg_spot07_taki.o (.text)
            build/data/overlays/actors/z_bg_spot07_taki.data.o (.text)
            build/data/overlays/actors/z_bg_spot07_taki.reloc.o (.text)
        _ovl_Bg_Spot07_TakiSegmentTextEnd = .;
    _ovl_Bg_Spot07_TakiSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot07_TakiSegmentTextEnd - _ovl_Bg_Spot07_TakiSegmentTextStart );
        _ovl_Bg_Spot07_TakiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot07_Taki/z_bg_spot07_taki.o (.data)
            build/data/overlays/actors/z_bg_spot07_taki.data.o (.data)
            build/data/overlays/actors/z_bg_spot07_taki.reloc.o (.data)
        _ovl_Bg_Spot07_TakiSegmentDataEnd = .;
    _ovl_Bg_Spot07_TakiSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot07_TakiSegmentDataEnd - _ovl_Bg_Spot07_TakiSegmentDataStart );
        _ovl_Bg_Spot07_TakiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot07_Taki/z_bg_spot07_taki.o (.rodata)
            build/data/overlays/actors/z_bg_spot07_taki.data.o (.rodata)
            build/data/overlays/actors/z_bg_spot07_taki.reloc.o (.rodata)
        _ovl_Bg_Spot07_TakiSegmentRoDataEnd = .;
    _ovl_Bg_Spot07_TakiSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot07_TakiSegmentRoDataEnd - _ovl_Bg_Spot07_TakiSegmentRoDataStart );
        _ovl_Bg_Spot07_TakiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot07_Taki/z_bg_spot07_taki.o (.sdata)
            build/data/overlays/actors/z_bg_spot07_taki.data.o (.sdata)
            build/data/overlays/actors/z_bg_spot07_taki.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot07_TakiSegmentSDataEnd = .;
        _ovl_Bg_Spot07_TakiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot07_Taki/z_bg_spot07_taki.o (.ovl)
            build/data/overlays/actors/z_bg_spot07_taki.data.o (.ovl)
            build/data/overlays/actors/z_bg_spot07_taki.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot07_TakiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot07_TakiSegmentOvlEnd - _ovl_Bg_Spot07_TakiSegmentTextStart );
    _ovl_Bg_Spot07_TakiSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot07_Taki.bss ADDR(..ovl_Bg_Spot07_Taki) + SIZEOF(..ovl_Bg_Spot07_Taki) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot07_TakiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot07_Taki/z_bg_spot07_taki.o (.sbss)
            build/data/overlays/actors/z_bg_spot07_taki.data.o (.sbss)
            build/data/overlays/actors/z_bg_spot07_taki.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot07_Taki/z_bg_spot07_taki.o (.scommon)
            build/data/overlays/actors/z_bg_spot07_taki.data.o (.scommon)
            build/data/overlays/actors/z_bg_spot07_taki.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot07_Taki/z_bg_spot07_taki.o (.bss)
            build/data/overlays/actors/z_bg_spot07_taki.data.o (.bss)
            build/data/overlays/actors/z_bg_spot07_taki.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot07_Taki/z_bg_spot07_taki.o (COMMON)
            build/data/overlays/actors/z_bg_spot07_taki.data.o (COMMON)
            build/data/overlays/actors/z_bg_spot07_taki.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot07_TakiSegmentBssEnd = .;
        _ovl_Bg_Spot07_TakiSegmentEnd = .;
    }
    _ovl_Bg_Spot07_TakiSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot07_TakiSegmentBssEnd - _ovl_Bg_Spot07_TakiSegmentBssStart );

    _ovl_Bg_Spot08_BakudankabeSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot08_Bakudankabe : AT(_RomSize)
    {
        _ovl_Bg_Spot08_BakudankabeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot08_BakudankabeSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/z_bg_spot08_bakudankabe.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/ovl_Bg_Spot08_Bakudankabe_reloc.o (.text)
        _ovl_Bg_Spot08_BakudankabeSegmentTextEnd = .;
    _ovl_Bg_Spot08_BakudankabeSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot08_BakudankabeSegmentTextEnd - _ovl_Bg_Spot08_BakudankabeSegmentTextStart );
        _ovl_Bg_Spot08_BakudankabeSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/z_bg_spot08_bakudankabe.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/ovl_Bg_Spot08_Bakudankabe_reloc.o (.data)
        _ovl_Bg_Spot08_BakudankabeSegmentDataEnd = .;
    _ovl_Bg_Spot08_BakudankabeSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot08_BakudankabeSegmentDataEnd - _ovl_Bg_Spot08_BakudankabeSegmentDataStart );
        _ovl_Bg_Spot08_BakudankabeSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/z_bg_spot08_bakudankabe.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/ovl_Bg_Spot08_Bakudankabe_reloc.o (.rodata)
        _ovl_Bg_Spot08_BakudankabeSegmentRoDataEnd = .;
    _ovl_Bg_Spot08_BakudankabeSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot08_BakudankabeSegmentRoDataEnd - _ovl_Bg_Spot08_BakudankabeSegmentRoDataStart );
        _ovl_Bg_Spot08_BakudankabeSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/z_bg_spot08_bakudankabe.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/ovl_Bg_Spot08_Bakudankabe_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot08_BakudankabeSegmentSDataEnd = .;
        _ovl_Bg_Spot08_BakudankabeSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/z_bg_spot08_bakudankabe.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/ovl_Bg_Spot08_Bakudankabe_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot08_BakudankabeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot08_BakudankabeSegmentOvlEnd - _ovl_Bg_Spot08_BakudankabeSegmentTextStart );
    _ovl_Bg_Spot08_BakudankabeSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot08_Bakudankabe.bss ADDR(..ovl_Bg_Spot08_Bakudankabe) + SIZEOF(..ovl_Bg_Spot08_Bakudankabe) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot08_BakudankabeSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/z_bg_spot08_bakudankabe.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/ovl_Bg_Spot08_Bakudankabe_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/z_bg_spot08_bakudankabe.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/ovl_Bg_Spot08_Bakudankabe_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/z_bg_spot08_bakudankabe.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/ovl_Bg_Spot08_Bakudankabe_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/z_bg_spot08_bakudankabe.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot08_Bakudankabe/ovl_Bg_Spot08_Bakudankabe_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot08_BakudankabeSegmentBssEnd = .;
        _ovl_Bg_Spot08_BakudankabeSegmentEnd = .;
    }
    _ovl_Bg_Spot08_BakudankabeSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot08_BakudankabeSegmentBssEnd - _ovl_Bg_Spot08_BakudankabeSegmentBssStart );

    _ovl_Bg_Spot08_IceblockSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot08_Iceblock : AT(_RomSize)
    {
        _ovl_Bg_Spot08_IceblockSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot08_IceblockSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot08_Iceblock/z_bg_spot08_iceblock.o (.text)
            build/data/overlays/actors/z_bg_spot08_iceblock.data.o (.text)
            build/data/overlays/actors/z_bg_spot08_iceblock.rodata.o (.text)
            build/data/overlays/actors/z_bg_spot08_iceblock.reloc.o (.text)
        _ovl_Bg_Spot08_IceblockSegmentTextEnd = .;
    _ovl_Bg_Spot08_IceblockSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot08_IceblockSegmentTextEnd - _ovl_Bg_Spot08_IceblockSegmentTextStart );
        _ovl_Bg_Spot08_IceblockSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot08_Iceblock/z_bg_spot08_iceblock.o (.data)
            build/data/overlays/actors/z_bg_spot08_iceblock.data.o (.data)
            build/data/overlays/actors/z_bg_spot08_iceblock.rodata.o (.data)
            build/data/overlays/actors/z_bg_spot08_iceblock.reloc.o (.data)
        _ovl_Bg_Spot08_IceblockSegmentDataEnd = .;
    _ovl_Bg_Spot08_IceblockSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot08_IceblockSegmentDataEnd - _ovl_Bg_Spot08_IceblockSegmentDataStart );
        _ovl_Bg_Spot08_IceblockSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot08_Iceblock/z_bg_spot08_iceblock.o (.rodata)
            build/data/overlays/actors/z_bg_spot08_iceblock.data.o (.rodata)
            build/data/overlays/actors/z_bg_spot08_iceblock.rodata.o (.rodata)
            build/data/overlays/actors/z_bg_spot08_iceblock.reloc.o (.rodata)
        _ovl_Bg_Spot08_IceblockSegmentRoDataEnd = .;
    _ovl_Bg_Spot08_IceblockSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot08_IceblockSegmentRoDataEnd - _ovl_Bg_Spot08_IceblockSegmentRoDataStart );
        _ovl_Bg_Spot08_IceblockSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot08_Iceblock/z_bg_spot08_iceblock.o (.sdata)
            build/data/overlays/actors/z_bg_spot08_iceblock.data.o (.sdata)
            build/data/overlays/actors/z_bg_spot08_iceblock.rodata.o (.sdata)
            build/data/overlays/actors/z_bg_spot08_iceblock.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot08_IceblockSegmentSDataEnd = .;
        _ovl_Bg_Spot08_IceblockSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot08_Iceblock/z_bg_spot08_iceblock.o (.ovl)
            build/data/overlays/actors/z_bg_spot08_iceblock.data.o (.ovl)
            build/data/overlays/actors/z_bg_spot08_iceblock.rodata.o (.ovl)
            build/data/overlays/actors/z_bg_spot08_iceblock.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot08_IceblockSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot08_IceblockSegmentOvlEnd - _ovl_Bg_Spot08_IceblockSegmentTextStart );
    _ovl_Bg_Spot08_IceblockSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot08_Iceblock.bss ADDR(..ovl_Bg_Spot08_Iceblock) + SIZEOF(..ovl_Bg_Spot08_Iceblock) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot08_IceblockSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot08_Iceblock/z_bg_spot08_iceblock.o (.sbss)
            build/data/overlays/actors/z_bg_spot08_iceblock.data.o (.sbss)
            build/data/overlays/actors/z_bg_spot08_iceblock.rodata.o (.sbss)
            build/data/overlays/actors/z_bg_spot08_iceblock.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot08_Iceblock/z_bg_spot08_iceblock.o (.scommon)
            build/data/overlays/actors/z_bg_spot08_iceblock.data.o (.scommon)
            build/data/overlays/actors/z_bg_spot08_iceblock.rodata.o (.scommon)
            build/data/overlays/actors/z_bg_spot08_iceblock.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot08_Iceblock/z_bg_spot08_iceblock.o (.bss)
            build/data/overlays/actors/z_bg_spot08_iceblock.data.o (.bss)
            build/data/overlays/actors/z_bg_spot08_iceblock.rodata.o (.bss)
            build/data/overlays/actors/z_bg_spot08_iceblock.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot08_Iceblock/z_bg_spot08_iceblock.o (COMMON)
            build/data/overlays/actors/z_bg_spot08_iceblock.data.o (COMMON)
            build/data/overlays/actors/z_bg_spot08_iceblock.rodata.o (COMMON)
            build/data/overlays/actors/z_bg_spot08_iceblock.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot08_IceblockSegmentBssEnd = .;
        _ovl_Bg_Spot08_IceblockSegmentEnd = .;
    }
    _ovl_Bg_Spot08_IceblockSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot08_IceblockSegmentBssEnd - _ovl_Bg_Spot08_IceblockSegmentBssStart );

    _ovl_Bg_Spot09_ObjSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot09_Obj : AT(_RomSize)
    {
        _ovl_Bg_Spot09_ObjSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot09_ObjSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/z_bg_spot09_obj.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/ovl_Bg_Spot09_Obj_reloc.o (.text)
        _ovl_Bg_Spot09_ObjSegmentTextEnd = .;
    _ovl_Bg_Spot09_ObjSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot09_ObjSegmentTextEnd - _ovl_Bg_Spot09_ObjSegmentTextStart );
        _ovl_Bg_Spot09_ObjSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/z_bg_spot09_obj.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/ovl_Bg_Spot09_Obj_reloc.o (.data)
        _ovl_Bg_Spot09_ObjSegmentDataEnd = .;
    _ovl_Bg_Spot09_ObjSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot09_ObjSegmentDataEnd - _ovl_Bg_Spot09_ObjSegmentDataStart );
        _ovl_Bg_Spot09_ObjSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/z_bg_spot09_obj.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/ovl_Bg_Spot09_Obj_reloc.o (.rodata)
        _ovl_Bg_Spot09_ObjSegmentRoDataEnd = .;
    _ovl_Bg_Spot09_ObjSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot09_ObjSegmentRoDataEnd - _ovl_Bg_Spot09_ObjSegmentRoDataStart );
        _ovl_Bg_Spot09_ObjSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/z_bg_spot09_obj.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/ovl_Bg_Spot09_Obj_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot09_ObjSegmentSDataEnd = .;
        _ovl_Bg_Spot09_ObjSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/z_bg_spot09_obj.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/ovl_Bg_Spot09_Obj_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot09_ObjSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot09_ObjSegmentOvlEnd - _ovl_Bg_Spot09_ObjSegmentTextStart );
    _ovl_Bg_Spot09_ObjSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot09_Obj.bss ADDR(..ovl_Bg_Spot09_Obj) + SIZEOF(..ovl_Bg_Spot09_Obj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot09_ObjSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/z_bg_spot09_obj.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/ovl_Bg_Spot09_Obj_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/z_bg_spot09_obj.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/ovl_Bg_Spot09_Obj_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/z_bg_spot09_obj.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/ovl_Bg_Spot09_Obj_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/z_bg_spot09_obj.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot09_Obj/ovl_Bg_Spot09_Obj_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot09_ObjSegmentBssEnd = .;
        _ovl_Bg_Spot09_ObjSegmentEnd = .;
    }
    _ovl_Bg_Spot09_ObjSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot09_ObjSegmentBssEnd - _ovl_Bg_Spot09_ObjSegmentBssStart );

    _ovl_Bg_Spot11_BakudankabeSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot11_Bakudankabe : AT(_RomSize)
    {
        _ovl_Bg_Spot11_BakudankabeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot11_BakudankabeSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/z_bg_spot11_bakudankabe.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/ovl_Bg_Spot11_Bakudankabe_reloc.o (.text)
        _ovl_Bg_Spot11_BakudankabeSegmentTextEnd = .;
    _ovl_Bg_Spot11_BakudankabeSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot11_BakudankabeSegmentTextEnd - _ovl_Bg_Spot11_BakudankabeSegmentTextStart );
        _ovl_Bg_Spot11_BakudankabeSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/z_bg_spot11_bakudankabe.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/ovl_Bg_Spot11_Bakudankabe_reloc.o (.data)
        _ovl_Bg_Spot11_BakudankabeSegmentDataEnd = .;
    _ovl_Bg_Spot11_BakudankabeSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot11_BakudankabeSegmentDataEnd - _ovl_Bg_Spot11_BakudankabeSegmentDataStart );
        _ovl_Bg_Spot11_BakudankabeSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/z_bg_spot11_bakudankabe.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/ovl_Bg_Spot11_Bakudankabe_reloc.o (.rodata)
        _ovl_Bg_Spot11_BakudankabeSegmentRoDataEnd = .;
    _ovl_Bg_Spot11_BakudankabeSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot11_BakudankabeSegmentRoDataEnd - _ovl_Bg_Spot11_BakudankabeSegmentRoDataStart );
        _ovl_Bg_Spot11_BakudankabeSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/z_bg_spot11_bakudankabe.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/ovl_Bg_Spot11_Bakudankabe_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot11_BakudankabeSegmentSDataEnd = .;
        _ovl_Bg_Spot11_BakudankabeSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/z_bg_spot11_bakudankabe.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/ovl_Bg_Spot11_Bakudankabe_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot11_BakudankabeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot11_BakudankabeSegmentOvlEnd - _ovl_Bg_Spot11_BakudankabeSegmentTextStart );
    _ovl_Bg_Spot11_BakudankabeSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot11_Bakudankabe.bss ADDR(..ovl_Bg_Spot11_Bakudankabe) + SIZEOF(..ovl_Bg_Spot11_Bakudankabe) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot11_BakudankabeSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/z_bg_spot11_bakudankabe.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/ovl_Bg_Spot11_Bakudankabe_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/z_bg_spot11_bakudankabe.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/ovl_Bg_Spot11_Bakudankabe_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/z_bg_spot11_bakudankabe.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/ovl_Bg_Spot11_Bakudankabe_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/z_bg_spot11_bakudankabe.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot11_Bakudankabe/ovl_Bg_Spot11_Bakudankabe_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot11_BakudankabeSegmentBssEnd = .;
        _ovl_Bg_Spot11_BakudankabeSegmentEnd = .;
    }
    _ovl_Bg_Spot11_BakudankabeSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot11_BakudankabeSegmentBssEnd - _ovl_Bg_Spot11_BakudankabeSegmentBssStart );

    _ovl_Bg_Spot11_OasisSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot11_Oasis : AT(_RomSize)
    {
        _ovl_Bg_Spot11_OasisSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot11_OasisSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot11_Oasis/z_bg_spot11_oasis.o (.text)
            build/data/overlays/actors/z_bg_spot11_oasis.data.o (.text)
            build/data/overlays/actors/z_bg_spot11_oasis.reloc.o (.text)
        _ovl_Bg_Spot11_OasisSegmentTextEnd = .;
    _ovl_Bg_Spot11_OasisSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot11_OasisSegmentTextEnd - _ovl_Bg_Spot11_OasisSegmentTextStart );
        _ovl_Bg_Spot11_OasisSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot11_Oasis/z_bg_spot11_oasis.o (.data)
            build/data/overlays/actors/z_bg_spot11_oasis.data.o (.data)
            build/data/overlays/actors/z_bg_spot11_oasis.reloc.o (.data)
        _ovl_Bg_Spot11_OasisSegmentDataEnd = .;
    _ovl_Bg_Spot11_OasisSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot11_OasisSegmentDataEnd - _ovl_Bg_Spot11_OasisSegmentDataStart );
        _ovl_Bg_Spot11_OasisSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot11_Oasis/z_bg_spot11_oasis.o (.rodata)
            build/data/overlays/actors/z_bg_spot11_oasis.data.o (.rodata)
            build/data/overlays/actors/z_bg_spot11_oasis.reloc.o (.rodata)
        _ovl_Bg_Spot11_OasisSegmentRoDataEnd = .;
    _ovl_Bg_Spot11_OasisSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot11_OasisSegmentRoDataEnd - _ovl_Bg_Spot11_OasisSegmentRoDataStart );
        _ovl_Bg_Spot11_OasisSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot11_Oasis/z_bg_spot11_oasis.o (.sdata)
            build/data/overlays/actors/z_bg_spot11_oasis.data.o (.sdata)
            build/data/overlays/actors/z_bg_spot11_oasis.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot11_OasisSegmentSDataEnd = .;
        _ovl_Bg_Spot11_OasisSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot11_Oasis/z_bg_spot11_oasis.o (.ovl)
            build/data/overlays/actors/z_bg_spot11_oasis.data.o (.ovl)
            build/data/overlays/actors/z_bg_spot11_oasis.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot11_OasisSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot11_OasisSegmentOvlEnd - _ovl_Bg_Spot11_OasisSegmentTextStart );
    _ovl_Bg_Spot11_OasisSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot11_Oasis.bss ADDR(..ovl_Bg_Spot11_Oasis) + SIZEOF(..ovl_Bg_Spot11_Oasis) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot11_OasisSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot11_Oasis/z_bg_spot11_oasis.o (.sbss)
            build/data/overlays/actors/z_bg_spot11_oasis.data.o (.sbss)
            build/data/overlays/actors/z_bg_spot11_oasis.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot11_Oasis/z_bg_spot11_oasis.o (.scommon)
            build/data/overlays/actors/z_bg_spot11_oasis.data.o (.scommon)
            build/data/overlays/actors/z_bg_spot11_oasis.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot11_Oasis/z_bg_spot11_oasis.o (.bss)
            build/data/overlays/actors/z_bg_spot11_oasis.data.o (.bss)
            build/data/overlays/actors/z_bg_spot11_oasis.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot11_Oasis/z_bg_spot11_oasis.o (COMMON)
            build/data/overlays/actors/z_bg_spot11_oasis.data.o (COMMON)
            build/data/overlays/actors/z_bg_spot11_oasis.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot11_OasisSegmentBssEnd = .;
        _ovl_Bg_Spot11_OasisSegmentEnd = .;
    }
    _ovl_Bg_Spot11_OasisSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot11_OasisSegmentBssEnd - _ovl_Bg_Spot11_OasisSegmentBssStart );

    _ovl_Bg_Spot12_GateSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot12_Gate : AT(_RomSize)
    {
        _ovl_Bg_Spot12_GateSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot12_GateSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/z_bg_spot12_gate.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/ovl_Bg_Spot12_Gate_reloc.o (.text)
        _ovl_Bg_Spot12_GateSegmentTextEnd = .;
    _ovl_Bg_Spot12_GateSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot12_GateSegmentTextEnd - _ovl_Bg_Spot12_GateSegmentTextStart );
        _ovl_Bg_Spot12_GateSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/z_bg_spot12_gate.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/ovl_Bg_Spot12_Gate_reloc.o (.data)
        _ovl_Bg_Spot12_GateSegmentDataEnd = .;
    _ovl_Bg_Spot12_GateSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot12_GateSegmentDataEnd - _ovl_Bg_Spot12_GateSegmentDataStart );
        _ovl_Bg_Spot12_GateSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/z_bg_spot12_gate.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/ovl_Bg_Spot12_Gate_reloc.o (.rodata)
        _ovl_Bg_Spot12_GateSegmentRoDataEnd = .;
    _ovl_Bg_Spot12_GateSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot12_GateSegmentRoDataEnd - _ovl_Bg_Spot12_GateSegmentRoDataStart );
        _ovl_Bg_Spot12_GateSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/z_bg_spot12_gate.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/ovl_Bg_Spot12_Gate_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot12_GateSegmentSDataEnd = .;
        _ovl_Bg_Spot12_GateSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/z_bg_spot12_gate.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/ovl_Bg_Spot12_Gate_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot12_GateSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot12_GateSegmentOvlEnd - _ovl_Bg_Spot12_GateSegmentTextStart );
    _ovl_Bg_Spot12_GateSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot12_Gate.bss ADDR(..ovl_Bg_Spot12_Gate) + SIZEOF(..ovl_Bg_Spot12_Gate) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot12_GateSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/z_bg_spot12_gate.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/ovl_Bg_Spot12_Gate_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/z_bg_spot12_gate.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/ovl_Bg_Spot12_Gate_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/z_bg_spot12_gate.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/ovl_Bg_Spot12_Gate_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/z_bg_spot12_gate.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot12_Gate/ovl_Bg_Spot12_Gate_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot12_GateSegmentBssEnd = .;
        _ovl_Bg_Spot12_GateSegmentEnd = .;
    }
    _ovl_Bg_Spot12_GateSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot12_GateSegmentBssEnd - _ovl_Bg_Spot12_GateSegmentBssStart );

    _ovl_Bg_Spot12_SakuSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot12_Saku : AT(_RomSize)
    {
        _ovl_Bg_Spot12_SakuSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot12_SakuSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/z_bg_spot12_saku.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/ovl_Bg_Spot12_Saku_reloc.o (.text)
        _ovl_Bg_Spot12_SakuSegmentTextEnd = .;
    _ovl_Bg_Spot12_SakuSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot12_SakuSegmentTextEnd - _ovl_Bg_Spot12_SakuSegmentTextStart );
        _ovl_Bg_Spot12_SakuSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/z_bg_spot12_saku.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/ovl_Bg_Spot12_Saku_reloc.o (.data)
        _ovl_Bg_Spot12_SakuSegmentDataEnd = .;
    _ovl_Bg_Spot12_SakuSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot12_SakuSegmentDataEnd - _ovl_Bg_Spot12_SakuSegmentDataStart );
        _ovl_Bg_Spot12_SakuSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/z_bg_spot12_saku.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/ovl_Bg_Spot12_Saku_reloc.o (.rodata)
        _ovl_Bg_Spot12_SakuSegmentRoDataEnd = .;
    _ovl_Bg_Spot12_SakuSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot12_SakuSegmentRoDataEnd - _ovl_Bg_Spot12_SakuSegmentRoDataStart );
        _ovl_Bg_Spot12_SakuSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/z_bg_spot12_saku.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/ovl_Bg_Spot12_Saku_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot12_SakuSegmentSDataEnd = .;
        _ovl_Bg_Spot12_SakuSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/z_bg_spot12_saku.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/ovl_Bg_Spot12_Saku_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot12_SakuSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot12_SakuSegmentOvlEnd - _ovl_Bg_Spot12_SakuSegmentTextStart );
    _ovl_Bg_Spot12_SakuSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot12_Saku.bss ADDR(..ovl_Bg_Spot12_Saku) + SIZEOF(..ovl_Bg_Spot12_Saku) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot12_SakuSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/z_bg_spot12_saku.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/ovl_Bg_Spot12_Saku_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/z_bg_spot12_saku.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/ovl_Bg_Spot12_Saku_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/z_bg_spot12_saku.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/ovl_Bg_Spot12_Saku_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/z_bg_spot12_saku.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot12_Saku/ovl_Bg_Spot12_Saku_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot12_SakuSegmentBssEnd = .;
        _ovl_Bg_Spot12_SakuSegmentEnd = .;
    }
    _ovl_Bg_Spot12_SakuSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot12_SakuSegmentBssEnd - _ovl_Bg_Spot12_SakuSegmentBssStart );

    _ovl_Bg_Spot15_RrboxSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot15_Rrbox : AT(_RomSize)
    {
        _ovl_Bg_Spot15_RrboxSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot15_RrboxSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/z_bg_spot15_rrbox.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/ovl_Bg_Spot15_Rrbox_reloc.o (.text)
        _ovl_Bg_Spot15_RrboxSegmentTextEnd = .;
    _ovl_Bg_Spot15_RrboxSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot15_RrboxSegmentTextEnd - _ovl_Bg_Spot15_RrboxSegmentTextStart );
        _ovl_Bg_Spot15_RrboxSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/z_bg_spot15_rrbox.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/ovl_Bg_Spot15_Rrbox_reloc.o (.data)
        _ovl_Bg_Spot15_RrboxSegmentDataEnd = .;
    _ovl_Bg_Spot15_RrboxSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot15_RrboxSegmentDataEnd - _ovl_Bg_Spot15_RrboxSegmentDataStart );
        _ovl_Bg_Spot15_RrboxSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/z_bg_spot15_rrbox.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/ovl_Bg_Spot15_Rrbox_reloc.o (.rodata)
        _ovl_Bg_Spot15_RrboxSegmentRoDataEnd = .;
    _ovl_Bg_Spot15_RrboxSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot15_RrboxSegmentRoDataEnd - _ovl_Bg_Spot15_RrboxSegmentRoDataStart );
        _ovl_Bg_Spot15_RrboxSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/z_bg_spot15_rrbox.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/ovl_Bg_Spot15_Rrbox_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot15_RrboxSegmentSDataEnd = .;
        _ovl_Bg_Spot15_RrboxSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/z_bg_spot15_rrbox.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/ovl_Bg_Spot15_Rrbox_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot15_RrboxSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot15_RrboxSegmentOvlEnd - _ovl_Bg_Spot15_RrboxSegmentTextStart );
    _ovl_Bg_Spot15_RrboxSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot15_Rrbox.bss ADDR(..ovl_Bg_Spot15_Rrbox) + SIZEOF(..ovl_Bg_Spot15_Rrbox) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot15_RrboxSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/z_bg_spot15_rrbox.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/ovl_Bg_Spot15_Rrbox_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/z_bg_spot15_rrbox.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/ovl_Bg_Spot15_Rrbox_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/z_bg_spot15_rrbox.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/ovl_Bg_Spot15_Rrbox_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/z_bg_spot15_rrbox.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot15_Rrbox/ovl_Bg_Spot15_Rrbox_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot15_RrboxSegmentBssEnd = .;
        _ovl_Bg_Spot15_RrboxSegmentEnd = .;
    }
    _ovl_Bg_Spot15_RrboxSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot15_RrboxSegmentBssEnd - _ovl_Bg_Spot15_RrboxSegmentBssStart );

    _ovl_Bg_Spot15_SakuSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot15_Saku : AT(_RomSize)
    {
        _ovl_Bg_Spot15_SakuSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot15_SakuSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot15_Saku/z_bg_spot15_saku.o (.text)
            build/data/overlays/actors/z_bg_spot15_saku.reloc.o (.text)
        _ovl_Bg_Spot15_SakuSegmentTextEnd = .;
    _ovl_Bg_Spot15_SakuSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot15_SakuSegmentTextEnd - _ovl_Bg_Spot15_SakuSegmentTextStart );
        _ovl_Bg_Spot15_SakuSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot15_Saku/z_bg_spot15_saku.o (.data)
            build/data/overlays/actors/z_bg_spot15_saku.reloc.o (.data)
        _ovl_Bg_Spot15_SakuSegmentDataEnd = .;
    _ovl_Bg_Spot15_SakuSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot15_SakuSegmentDataEnd - _ovl_Bg_Spot15_SakuSegmentDataStart );
        _ovl_Bg_Spot15_SakuSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot15_Saku/z_bg_spot15_saku.o (.rodata)
            build/data/overlays/actors/z_bg_spot15_saku.reloc.o (.rodata)
        _ovl_Bg_Spot15_SakuSegmentRoDataEnd = .;
    _ovl_Bg_Spot15_SakuSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot15_SakuSegmentRoDataEnd - _ovl_Bg_Spot15_SakuSegmentRoDataStart );
        _ovl_Bg_Spot15_SakuSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot15_Saku/z_bg_spot15_saku.o (.sdata)
            build/data/overlays/actors/z_bg_spot15_saku.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot15_SakuSegmentSDataEnd = .;
        _ovl_Bg_Spot15_SakuSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot15_Saku/z_bg_spot15_saku.o (.ovl)
            build/data/overlays/actors/z_bg_spot15_saku.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot15_SakuSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot15_SakuSegmentOvlEnd - _ovl_Bg_Spot15_SakuSegmentTextStart );
    _ovl_Bg_Spot15_SakuSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot15_Saku.bss ADDR(..ovl_Bg_Spot15_Saku) + SIZEOF(..ovl_Bg_Spot15_Saku) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot15_SakuSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot15_Saku/z_bg_spot15_saku.o (.sbss)
            build/data/overlays/actors/z_bg_spot15_saku.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot15_Saku/z_bg_spot15_saku.o (.scommon)
            build/data/overlays/actors/z_bg_spot15_saku.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot15_Saku/z_bg_spot15_saku.o (.bss)
            build/data/overlays/actors/z_bg_spot15_saku.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot15_Saku/z_bg_spot15_saku.o (COMMON)
            build/data/overlays/actors/z_bg_spot15_saku.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot15_SakuSegmentBssEnd = .;
        _ovl_Bg_Spot15_SakuSegmentEnd = .;
    }
    _ovl_Bg_Spot15_SakuSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot15_SakuSegmentBssEnd - _ovl_Bg_Spot15_SakuSegmentBssStart );

    _ovl_Bg_Spot16_BombstoneSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot16_Bombstone : AT(_RomSize)
    {
        _ovl_Bg_Spot16_BombstoneSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot16_BombstoneSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/z_bg_spot16_bombstone.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/ovl_Bg_Spot16_Bombstone_reloc.o (.text)
        _ovl_Bg_Spot16_BombstoneSegmentTextEnd = .;
    _ovl_Bg_Spot16_BombstoneSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot16_BombstoneSegmentTextEnd - _ovl_Bg_Spot16_BombstoneSegmentTextStart );
        _ovl_Bg_Spot16_BombstoneSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/z_bg_spot16_bombstone.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/ovl_Bg_Spot16_Bombstone_reloc.o (.data)
        _ovl_Bg_Spot16_BombstoneSegmentDataEnd = .;
    _ovl_Bg_Spot16_BombstoneSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot16_BombstoneSegmentDataEnd - _ovl_Bg_Spot16_BombstoneSegmentDataStart );
        _ovl_Bg_Spot16_BombstoneSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/z_bg_spot16_bombstone.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/ovl_Bg_Spot16_Bombstone_reloc.o (.rodata)
        _ovl_Bg_Spot16_BombstoneSegmentRoDataEnd = .;
    _ovl_Bg_Spot16_BombstoneSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot16_BombstoneSegmentRoDataEnd - _ovl_Bg_Spot16_BombstoneSegmentRoDataStart );
        _ovl_Bg_Spot16_BombstoneSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/z_bg_spot16_bombstone.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/ovl_Bg_Spot16_Bombstone_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot16_BombstoneSegmentSDataEnd = .;
        _ovl_Bg_Spot16_BombstoneSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/z_bg_spot16_bombstone.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/ovl_Bg_Spot16_Bombstone_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot16_BombstoneSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot16_BombstoneSegmentOvlEnd - _ovl_Bg_Spot16_BombstoneSegmentTextStart );
    _ovl_Bg_Spot16_BombstoneSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot16_Bombstone.bss ADDR(..ovl_Bg_Spot16_Bombstone) + SIZEOF(..ovl_Bg_Spot16_Bombstone) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot16_BombstoneSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/z_bg_spot16_bombstone.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/ovl_Bg_Spot16_Bombstone_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/z_bg_spot16_bombstone.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/ovl_Bg_Spot16_Bombstone_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/z_bg_spot16_bombstone.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/ovl_Bg_Spot16_Bombstone_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/z_bg_spot16_bombstone.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot16_Bombstone/ovl_Bg_Spot16_Bombstone_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot16_BombstoneSegmentBssEnd = .;
        _ovl_Bg_Spot16_BombstoneSegmentEnd = .;
    }
    _ovl_Bg_Spot16_BombstoneSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot16_BombstoneSegmentBssEnd - _ovl_Bg_Spot16_BombstoneSegmentBssStart );

    _ovl_Bg_Spot16_DoughnutSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot16_Doughnut : AT(_RomSize)
    {
        _ovl_Bg_Spot16_DoughnutSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot16_DoughnutSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/z_bg_spot16_doughnut.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/ovl_Bg_Spot16_Doughnut_reloc.o (.text)
        _ovl_Bg_Spot16_DoughnutSegmentTextEnd = .;
    _ovl_Bg_Spot16_DoughnutSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot16_DoughnutSegmentTextEnd - _ovl_Bg_Spot16_DoughnutSegmentTextStart );
        _ovl_Bg_Spot16_DoughnutSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/z_bg_spot16_doughnut.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/ovl_Bg_Spot16_Doughnut_reloc.o (.data)
        _ovl_Bg_Spot16_DoughnutSegmentDataEnd = .;
    _ovl_Bg_Spot16_DoughnutSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot16_DoughnutSegmentDataEnd - _ovl_Bg_Spot16_DoughnutSegmentDataStart );
        _ovl_Bg_Spot16_DoughnutSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/z_bg_spot16_doughnut.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/ovl_Bg_Spot16_Doughnut_reloc.o (.rodata)
        _ovl_Bg_Spot16_DoughnutSegmentRoDataEnd = .;
    _ovl_Bg_Spot16_DoughnutSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot16_DoughnutSegmentRoDataEnd - _ovl_Bg_Spot16_DoughnutSegmentRoDataStart );
        _ovl_Bg_Spot16_DoughnutSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/z_bg_spot16_doughnut.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/ovl_Bg_Spot16_Doughnut_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot16_DoughnutSegmentSDataEnd = .;
        _ovl_Bg_Spot16_DoughnutSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/z_bg_spot16_doughnut.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/ovl_Bg_Spot16_Doughnut_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot16_DoughnutSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot16_DoughnutSegmentOvlEnd - _ovl_Bg_Spot16_DoughnutSegmentTextStart );
    _ovl_Bg_Spot16_DoughnutSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot16_Doughnut.bss ADDR(..ovl_Bg_Spot16_Doughnut) + SIZEOF(..ovl_Bg_Spot16_Doughnut) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot16_DoughnutSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/z_bg_spot16_doughnut.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/ovl_Bg_Spot16_Doughnut_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/z_bg_spot16_doughnut.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/ovl_Bg_Spot16_Doughnut_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/z_bg_spot16_doughnut.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/ovl_Bg_Spot16_Doughnut_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/z_bg_spot16_doughnut.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot16_Doughnut/ovl_Bg_Spot16_Doughnut_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot16_DoughnutSegmentBssEnd = .;
        _ovl_Bg_Spot16_DoughnutSegmentEnd = .;
    }
    _ovl_Bg_Spot16_DoughnutSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot16_DoughnutSegmentBssEnd - _ovl_Bg_Spot16_DoughnutSegmentBssStart );

    _ovl_Bg_Spot17_BakudankabeSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot17_Bakudankabe : AT(_RomSize)
    {
        _ovl_Bg_Spot17_BakudankabeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot17_BakudankabeSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/z_bg_spot17_bakudankabe.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/ovl_Bg_Spot17_Bakudankabe_reloc.o (.text)
        _ovl_Bg_Spot17_BakudankabeSegmentTextEnd = .;
    _ovl_Bg_Spot17_BakudankabeSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot17_BakudankabeSegmentTextEnd - _ovl_Bg_Spot17_BakudankabeSegmentTextStart );
        _ovl_Bg_Spot17_BakudankabeSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/z_bg_spot17_bakudankabe.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/ovl_Bg_Spot17_Bakudankabe_reloc.o (.data)
        _ovl_Bg_Spot17_BakudankabeSegmentDataEnd = .;
    _ovl_Bg_Spot17_BakudankabeSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot17_BakudankabeSegmentDataEnd - _ovl_Bg_Spot17_BakudankabeSegmentDataStart );
        _ovl_Bg_Spot17_BakudankabeSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/z_bg_spot17_bakudankabe.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/ovl_Bg_Spot17_Bakudankabe_reloc.o (.rodata)
        _ovl_Bg_Spot17_BakudankabeSegmentRoDataEnd = .;
    _ovl_Bg_Spot17_BakudankabeSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot17_BakudankabeSegmentRoDataEnd - _ovl_Bg_Spot17_BakudankabeSegmentRoDataStart );
        _ovl_Bg_Spot17_BakudankabeSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/z_bg_spot17_bakudankabe.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/ovl_Bg_Spot17_Bakudankabe_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot17_BakudankabeSegmentSDataEnd = .;
        _ovl_Bg_Spot17_BakudankabeSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/z_bg_spot17_bakudankabe.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/ovl_Bg_Spot17_Bakudankabe_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot17_BakudankabeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot17_BakudankabeSegmentOvlEnd - _ovl_Bg_Spot17_BakudankabeSegmentTextStart );
    _ovl_Bg_Spot17_BakudankabeSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot17_Bakudankabe.bss ADDR(..ovl_Bg_Spot17_Bakudankabe) + SIZEOF(..ovl_Bg_Spot17_Bakudankabe) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot17_BakudankabeSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/z_bg_spot17_bakudankabe.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/ovl_Bg_Spot17_Bakudankabe_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/z_bg_spot17_bakudankabe.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/ovl_Bg_Spot17_Bakudankabe_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/z_bg_spot17_bakudankabe.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/ovl_Bg_Spot17_Bakudankabe_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/z_bg_spot17_bakudankabe.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot17_Bakudankabe/ovl_Bg_Spot17_Bakudankabe_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot17_BakudankabeSegmentBssEnd = .;
        _ovl_Bg_Spot17_BakudankabeSegmentEnd = .;
    }
    _ovl_Bg_Spot17_BakudankabeSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot17_BakudankabeSegmentBssEnd - _ovl_Bg_Spot17_BakudankabeSegmentBssStart );

    _ovl_Bg_Spot17_FunenSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot17_Funen : AT(_RomSize)
    {
        _ovl_Bg_Spot17_FunenSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot17_FunenSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/z_bg_spot17_funen.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/ovl_Bg_Spot17_Funen_reloc.o (.text)
        _ovl_Bg_Spot17_FunenSegmentTextEnd = .;
    _ovl_Bg_Spot17_FunenSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot17_FunenSegmentTextEnd - _ovl_Bg_Spot17_FunenSegmentTextStart );
        _ovl_Bg_Spot17_FunenSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/z_bg_spot17_funen.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/ovl_Bg_Spot17_Funen_reloc.o (.data)
        _ovl_Bg_Spot17_FunenSegmentDataEnd = .;
    _ovl_Bg_Spot17_FunenSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot17_FunenSegmentDataEnd - _ovl_Bg_Spot17_FunenSegmentDataStart );
        _ovl_Bg_Spot17_FunenSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/z_bg_spot17_funen.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/ovl_Bg_Spot17_Funen_reloc.o (.rodata)
        _ovl_Bg_Spot17_FunenSegmentRoDataEnd = .;
    _ovl_Bg_Spot17_FunenSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot17_FunenSegmentRoDataEnd - _ovl_Bg_Spot17_FunenSegmentRoDataStart );
        _ovl_Bg_Spot17_FunenSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/z_bg_spot17_funen.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/ovl_Bg_Spot17_Funen_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot17_FunenSegmentSDataEnd = .;
        _ovl_Bg_Spot17_FunenSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/z_bg_spot17_funen.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/ovl_Bg_Spot17_Funen_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot17_FunenSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot17_FunenSegmentOvlEnd - _ovl_Bg_Spot17_FunenSegmentTextStart );
    _ovl_Bg_Spot17_FunenSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot17_Funen.bss ADDR(..ovl_Bg_Spot17_Funen) + SIZEOF(..ovl_Bg_Spot17_Funen) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot17_FunenSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/z_bg_spot17_funen.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/ovl_Bg_Spot17_Funen_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/z_bg_spot17_funen.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/ovl_Bg_Spot17_Funen_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/z_bg_spot17_funen.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/ovl_Bg_Spot17_Funen_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/z_bg_spot17_funen.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot17_Funen/ovl_Bg_Spot17_Funen_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot17_FunenSegmentBssEnd = .;
        _ovl_Bg_Spot17_FunenSegmentEnd = .;
    }
    _ovl_Bg_Spot17_FunenSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot17_FunenSegmentBssEnd - _ovl_Bg_Spot17_FunenSegmentBssStart );

    _ovl_Bg_Spot18_BasketSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot18_Basket : AT(_RomSize)
    {
        _ovl_Bg_Spot18_BasketSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_BasketSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Basket/z_bg_spot18_basket.o (.text)
            build/data/overlays/actors/z_bg_spot18_basket.data.o (.text)
            build/data/overlays/actors/z_bg_spot18_basket.reloc.o (.text)
        _ovl_Bg_Spot18_BasketSegmentTextEnd = .;
    _ovl_Bg_Spot18_BasketSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot18_BasketSegmentTextEnd - _ovl_Bg_Spot18_BasketSegmentTextStart );
        _ovl_Bg_Spot18_BasketSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Basket/z_bg_spot18_basket.o (.data)
            build/data/overlays/actors/z_bg_spot18_basket.data.o (.data)
            build/data/overlays/actors/z_bg_spot18_basket.reloc.o (.data)
        _ovl_Bg_Spot18_BasketSegmentDataEnd = .;
    _ovl_Bg_Spot18_BasketSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot18_BasketSegmentDataEnd - _ovl_Bg_Spot18_BasketSegmentDataStart );
        _ovl_Bg_Spot18_BasketSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Basket/z_bg_spot18_basket.o (.rodata)
            build/data/overlays/actors/z_bg_spot18_basket.data.o (.rodata)
            build/data/overlays/actors/z_bg_spot18_basket.reloc.o (.rodata)
        _ovl_Bg_Spot18_BasketSegmentRoDataEnd = .;
    _ovl_Bg_Spot18_BasketSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot18_BasketSegmentRoDataEnd - _ovl_Bg_Spot18_BasketSegmentRoDataStart );
        _ovl_Bg_Spot18_BasketSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Basket/z_bg_spot18_basket.o (.sdata)
            build/data/overlays/actors/z_bg_spot18_basket.data.o (.sdata)
            build/data/overlays/actors/z_bg_spot18_basket.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_BasketSegmentSDataEnd = .;
        _ovl_Bg_Spot18_BasketSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Basket/z_bg_spot18_basket.o (.ovl)
            build/data/overlays/actors/z_bg_spot18_basket.data.o (.ovl)
            build/data/overlays/actors/z_bg_spot18_basket.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_BasketSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot18_BasketSegmentOvlEnd - _ovl_Bg_Spot18_BasketSegmentTextStart );
    _ovl_Bg_Spot18_BasketSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot18_Basket.bss ADDR(..ovl_Bg_Spot18_Basket) + SIZEOF(..ovl_Bg_Spot18_Basket) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_BasketSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Basket/z_bg_spot18_basket.o (.sbss)
            build/data/overlays/actors/z_bg_spot18_basket.data.o (.sbss)
            build/data/overlays/actors/z_bg_spot18_basket.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot18_Basket/z_bg_spot18_basket.o (.scommon)
            build/data/overlays/actors/z_bg_spot18_basket.data.o (.scommon)
            build/data/overlays/actors/z_bg_spot18_basket.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot18_Basket/z_bg_spot18_basket.o (.bss)
            build/data/overlays/actors/z_bg_spot18_basket.data.o (.bss)
            build/data/overlays/actors/z_bg_spot18_basket.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot18_Basket/z_bg_spot18_basket.o (COMMON)
            build/data/overlays/actors/z_bg_spot18_basket.data.o (COMMON)
            build/data/overlays/actors/z_bg_spot18_basket.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_BasketSegmentBssEnd = .;
        _ovl_Bg_Spot18_BasketSegmentEnd = .;
    }
    _ovl_Bg_Spot18_BasketSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot18_BasketSegmentBssEnd - _ovl_Bg_Spot18_BasketSegmentBssStart );

    _ovl_Bg_Spot18_FutaSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot18_Futa : AT(_RomSize)
    {
        _ovl_Bg_Spot18_FutaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_FutaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/z_bg_spot18_futa.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/ovl_Bg_Spot18_Futa_reloc.o (.text)
        _ovl_Bg_Spot18_FutaSegmentTextEnd = .;
    _ovl_Bg_Spot18_FutaSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot18_FutaSegmentTextEnd - _ovl_Bg_Spot18_FutaSegmentTextStart );
        _ovl_Bg_Spot18_FutaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/z_bg_spot18_futa.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/ovl_Bg_Spot18_Futa_reloc.o (.data)
        _ovl_Bg_Spot18_FutaSegmentDataEnd = .;
    _ovl_Bg_Spot18_FutaSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot18_FutaSegmentDataEnd - _ovl_Bg_Spot18_FutaSegmentDataStart );
        _ovl_Bg_Spot18_FutaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/z_bg_spot18_futa.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/ovl_Bg_Spot18_Futa_reloc.o (.rodata)
        _ovl_Bg_Spot18_FutaSegmentRoDataEnd = .;
    _ovl_Bg_Spot18_FutaSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot18_FutaSegmentRoDataEnd - _ovl_Bg_Spot18_FutaSegmentRoDataStart );
        _ovl_Bg_Spot18_FutaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/z_bg_spot18_futa.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/ovl_Bg_Spot18_Futa_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_FutaSegmentSDataEnd = .;
        _ovl_Bg_Spot18_FutaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/z_bg_spot18_futa.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/ovl_Bg_Spot18_Futa_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_FutaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot18_FutaSegmentOvlEnd - _ovl_Bg_Spot18_FutaSegmentTextStart );
    _ovl_Bg_Spot18_FutaSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot18_Futa.bss ADDR(..ovl_Bg_Spot18_Futa) + SIZEOF(..ovl_Bg_Spot18_Futa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_FutaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/z_bg_spot18_futa.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/ovl_Bg_Spot18_Futa_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/z_bg_spot18_futa.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/ovl_Bg_Spot18_Futa_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/z_bg_spot18_futa.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/ovl_Bg_Spot18_Futa_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/z_bg_spot18_futa.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot18_Futa/ovl_Bg_Spot18_Futa_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_FutaSegmentBssEnd = .;
        _ovl_Bg_Spot18_FutaSegmentEnd = .;
    }
    _ovl_Bg_Spot18_FutaSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot18_FutaSegmentBssEnd - _ovl_Bg_Spot18_FutaSegmentBssStart );

    _ovl_Bg_Spot18_ObjSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot18_Obj : AT(_RomSize)
    {
        _ovl_Bg_Spot18_ObjSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_ObjSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/z_bg_spot18_obj.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/ovl_Bg_Spot18_Obj_reloc.o (.text)
        _ovl_Bg_Spot18_ObjSegmentTextEnd = .;
    _ovl_Bg_Spot18_ObjSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot18_ObjSegmentTextEnd - _ovl_Bg_Spot18_ObjSegmentTextStart );
        _ovl_Bg_Spot18_ObjSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/z_bg_spot18_obj.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/ovl_Bg_Spot18_Obj_reloc.o (.data)
        _ovl_Bg_Spot18_ObjSegmentDataEnd = .;
    _ovl_Bg_Spot18_ObjSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot18_ObjSegmentDataEnd - _ovl_Bg_Spot18_ObjSegmentDataStart );
        _ovl_Bg_Spot18_ObjSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/z_bg_spot18_obj.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/ovl_Bg_Spot18_Obj_reloc.o (.rodata)
        _ovl_Bg_Spot18_ObjSegmentRoDataEnd = .;
    _ovl_Bg_Spot18_ObjSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot18_ObjSegmentRoDataEnd - _ovl_Bg_Spot18_ObjSegmentRoDataStart );
        _ovl_Bg_Spot18_ObjSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/z_bg_spot18_obj.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/ovl_Bg_Spot18_Obj_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_ObjSegmentSDataEnd = .;
        _ovl_Bg_Spot18_ObjSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/z_bg_spot18_obj.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/ovl_Bg_Spot18_Obj_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_ObjSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot18_ObjSegmentOvlEnd - _ovl_Bg_Spot18_ObjSegmentTextStart );
    _ovl_Bg_Spot18_ObjSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot18_Obj.bss ADDR(..ovl_Bg_Spot18_Obj) + SIZEOF(..ovl_Bg_Spot18_Obj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_ObjSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/z_bg_spot18_obj.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/ovl_Bg_Spot18_Obj_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/z_bg_spot18_obj.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/ovl_Bg_Spot18_Obj_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/z_bg_spot18_obj.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/ovl_Bg_Spot18_Obj_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/z_bg_spot18_obj.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot18_Obj/ovl_Bg_Spot18_Obj_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_ObjSegmentBssEnd = .;
        _ovl_Bg_Spot18_ObjSegmentEnd = .;
    }
    _ovl_Bg_Spot18_ObjSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot18_ObjSegmentBssEnd - _ovl_Bg_Spot18_ObjSegmentBssStart );

    _ovl_Bg_Spot18_ShutterSegmentRomStart = _RomSize;
    ..ovl_Bg_Spot18_Shutter : AT(_RomSize)
    {
        _ovl_Bg_Spot18_ShutterSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_ShutterSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/z_bg_spot18_shutter.o (.text)
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/ovl_Bg_Spot18_Shutter_reloc.o (.text)
        _ovl_Bg_Spot18_ShutterSegmentTextEnd = .;
    _ovl_Bg_Spot18_ShutterSegmentTextSize = ABSOLUTE( _ovl_Bg_Spot18_ShutterSegmentTextEnd - _ovl_Bg_Spot18_ShutterSegmentTextStart );
        _ovl_Bg_Spot18_ShutterSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/z_bg_spot18_shutter.o (.data)
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/ovl_Bg_Spot18_Shutter_reloc.o (.data)
        _ovl_Bg_Spot18_ShutterSegmentDataEnd = .;
    _ovl_Bg_Spot18_ShutterSegmentDataSize = ABSOLUTE( _ovl_Bg_Spot18_ShutterSegmentDataEnd - _ovl_Bg_Spot18_ShutterSegmentDataStart );
        _ovl_Bg_Spot18_ShutterSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/z_bg_spot18_shutter.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/ovl_Bg_Spot18_Shutter_reloc.o (.rodata)
        _ovl_Bg_Spot18_ShutterSegmentRoDataEnd = .;
    _ovl_Bg_Spot18_ShutterSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Spot18_ShutterSegmentRoDataEnd - _ovl_Bg_Spot18_ShutterSegmentRoDataStart );
        _ovl_Bg_Spot18_ShutterSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/z_bg_spot18_shutter.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/ovl_Bg_Spot18_Shutter_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_ShutterSegmentSDataEnd = .;
        _ovl_Bg_Spot18_ShutterSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/z_bg_spot18_shutter.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/ovl_Bg_Spot18_Shutter_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_ShutterSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Spot18_ShutterSegmentOvlEnd - _ovl_Bg_Spot18_ShutterSegmentTextStart );
    _ovl_Bg_Spot18_ShutterSegmentRomEnd = _RomSize;

    ..ovl_Bg_Spot18_Shutter.bss ADDR(..ovl_Bg_Spot18_Shutter) + SIZEOF(..ovl_Bg_Spot18_Shutter) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_ShutterSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/z_bg_spot18_shutter.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/ovl_Bg_Spot18_Shutter_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/z_bg_spot18_shutter.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/ovl_Bg_Spot18_Shutter_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/z_bg_spot18_shutter.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/ovl_Bg_Spot18_Shutter_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/z_bg_spot18_shutter.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Spot18_Shutter/ovl_Bg_Spot18_Shutter_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Spot18_ShutterSegmentBssEnd = .;
        _ovl_Bg_Spot18_ShutterSegmentEnd = .;
    }
    _ovl_Bg_Spot18_ShutterSegmentBssSize = ABSOLUTE( _ovl_Bg_Spot18_ShutterSegmentBssEnd - _ovl_Bg_Spot18_ShutterSegmentBssStart );

    _ovl_Bg_Sst_FloorSegmentRomStart = _RomSize;
    ..ovl_Bg_Sst_Floor : AT(_RomSize)
    {
        _ovl_Bg_Sst_FloorSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Sst_FloorSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Sst_Floor/z_bg_sst_floor.o (.text)
            build/data/overlays/actors/z_bg_sst_floor.data.o (.text)
            build/data/overlays/actors/z_bg_sst_floor.reloc.o (.text)
        _ovl_Bg_Sst_FloorSegmentTextEnd = .;
    _ovl_Bg_Sst_FloorSegmentTextSize = ABSOLUTE( _ovl_Bg_Sst_FloorSegmentTextEnd - _ovl_Bg_Sst_FloorSegmentTextStart );
        _ovl_Bg_Sst_FloorSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Sst_Floor/z_bg_sst_floor.o (.data)
            build/data/overlays/actors/z_bg_sst_floor.data.o (.data)
            build/data/overlays/actors/z_bg_sst_floor.reloc.o (.data)
        _ovl_Bg_Sst_FloorSegmentDataEnd = .;
    _ovl_Bg_Sst_FloorSegmentDataSize = ABSOLUTE( _ovl_Bg_Sst_FloorSegmentDataEnd - _ovl_Bg_Sst_FloorSegmentDataStart );
        _ovl_Bg_Sst_FloorSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Sst_Floor/z_bg_sst_floor.o (.rodata)
            build/data/overlays/actors/z_bg_sst_floor.data.o (.rodata)
            build/data/overlays/actors/z_bg_sst_floor.reloc.o (.rodata)
        _ovl_Bg_Sst_FloorSegmentRoDataEnd = .;
    _ovl_Bg_Sst_FloorSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Sst_FloorSegmentRoDataEnd - _ovl_Bg_Sst_FloorSegmentRoDataStart );
        _ovl_Bg_Sst_FloorSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Sst_Floor/z_bg_sst_floor.o (.sdata)
            build/data/overlays/actors/z_bg_sst_floor.data.o (.sdata)
            build/data/overlays/actors/z_bg_sst_floor.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Sst_FloorSegmentSDataEnd = .;
        _ovl_Bg_Sst_FloorSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Sst_Floor/z_bg_sst_floor.o (.ovl)
            build/data/overlays/actors/z_bg_sst_floor.data.o (.ovl)
            build/data/overlays/actors/z_bg_sst_floor.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Sst_FloorSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Sst_FloorSegmentOvlEnd - _ovl_Bg_Sst_FloorSegmentTextStart );
    _ovl_Bg_Sst_FloorSegmentRomEnd = _RomSize;

    ..ovl_Bg_Sst_Floor.bss ADDR(..ovl_Bg_Sst_Floor) + SIZEOF(..ovl_Bg_Sst_Floor) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Sst_FloorSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Sst_Floor/z_bg_sst_floor.o (.sbss)
            build/data/overlays/actors/z_bg_sst_floor.data.o (.sbss)
            build/data/overlays/actors/z_bg_sst_floor.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Sst_Floor/z_bg_sst_floor.o (.scommon)
            build/data/overlays/actors/z_bg_sst_floor.data.o (.scommon)
            build/data/overlays/actors/z_bg_sst_floor.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Sst_Floor/z_bg_sst_floor.o (.bss)
            build/data/overlays/actors/z_bg_sst_floor.data.o (.bss)
            build/data/overlays/actors/z_bg_sst_floor.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Sst_Floor/z_bg_sst_floor.o (COMMON)
            build/data/overlays/actors/z_bg_sst_floor.data.o (COMMON)
            build/data/overlays/actors/z_bg_sst_floor.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Sst_FloorSegmentBssEnd = .;
        _ovl_Bg_Sst_FloorSegmentEnd = .;
    }
    _ovl_Bg_Sst_FloorSegmentBssSize = ABSOLUTE( _ovl_Bg_Sst_FloorSegmentBssEnd - _ovl_Bg_Sst_FloorSegmentBssStart );

    _ovl_Bg_Toki_HikariSegmentRomStart = _RomSize;
    ..ovl_Bg_Toki_Hikari : AT(_RomSize)
    {
        _ovl_Bg_Toki_HikariSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Toki_HikariSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Toki_Hikari/z_bg_toki_hikari.o (.text)
            build/data/overlays/actors/z_bg_toki_hikari.data.o (.text)
            build/data/overlays/actors/z_bg_toki_hikari.reloc.o (.text)
        _ovl_Bg_Toki_HikariSegmentTextEnd = .;
    _ovl_Bg_Toki_HikariSegmentTextSize = ABSOLUTE( _ovl_Bg_Toki_HikariSegmentTextEnd - _ovl_Bg_Toki_HikariSegmentTextStart );
        _ovl_Bg_Toki_HikariSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Toki_Hikari/z_bg_toki_hikari.o (.data)
            build/data/overlays/actors/z_bg_toki_hikari.data.o (.data)
            build/data/overlays/actors/z_bg_toki_hikari.reloc.o (.data)
        _ovl_Bg_Toki_HikariSegmentDataEnd = .;
    _ovl_Bg_Toki_HikariSegmentDataSize = ABSOLUTE( _ovl_Bg_Toki_HikariSegmentDataEnd - _ovl_Bg_Toki_HikariSegmentDataStart );
        _ovl_Bg_Toki_HikariSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Toki_Hikari/z_bg_toki_hikari.o (.rodata)
            build/data/overlays/actors/z_bg_toki_hikari.data.o (.rodata)
            build/data/overlays/actors/z_bg_toki_hikari.reloc.o (.rodata)
        _ovl_Bg_Toki_HikariSegmentRoDataEnd = .;
    _ovl_Bg_Toki_HikariSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Toki_HikariSegmentRoDataEnd - _ovl_Bg_Toki_HikariSegmentRoDataStart );
        _ovl_Bg_Toki_HikariSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Toki_Hikari/z_bg_toki_hikari.o (.sdata)
            build/data/overlays/actors/z_bg_toki_hikari.data.o (.sdata)
            build/data/overlays/actors/z_bg_toki_hikari.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Toki_HikariSegmentSDataEnd = .;
        _ovl_Bg_Toki_HikariSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Toki_Hikari/z_bg_toki_hikari.o (.ovl)
            build/data/overlays/actors/z_bg_toki_hikari.data.o (.ovl)
            build/data/overlays/actors/z_bg_toki_hikari.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Toki_HikariSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Toki_HikariSegmentOvlEnd - _ovl_Bg_Toki_HikariSegmentTextStart );
    _ovl_Bg_Toki_HikariSegmentRomEnd = _RomSize;

    ..ovl_Bg_Toki_Hikari.bss ADDR(..ovl_Bg_Toki_Hikari) + SIZEOF(..ovl_Bg_Toki_Hikari) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Toki_HikariSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Toki_Hikari/z_bg_toki_hikari.o (.sbss)
            build/data/overlays/actors/z_bg_toki_hikari.data.o (.sbss)
            build/data/overlays/actors/z_bg_toki_hikari.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Toki_Hikari/z_bg_toki_hikari.o (.scommon)
            build/data/overlays/actors/z_bg_toki_hikari.data.o (.scommon)
            build/data/overlays/actors/z_bg_toki_hikari.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Toki_Hikari/z_bg_toki_hikari.o (.bss)
            build/data/overlays/actors/z_bg_toki_hikari.data.o (.bss)
            build/data/overlays/actors/z_bg_toki_hikari.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Toki_Hikari/z_bg_toki_hikari.o (COMMON)
            build/data/overlays/actors/z_bg_toki_hikari.data.o (COMMON)
            build/data/overlays/actors/z_bg_toki_hikari.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Toki_HikariSegmentBssEnd = .;
        _ovl_Bg_Toki_HikariSegmentEnd = .;
    }
    _ovl_Bg_Toki_HikariSegmentBssSize = ABSOLUTE( _ovl_Bg_Toki_HikariSegmentBssEnd - _ovl_Bg_Toki_HikariSegmentBssStart );

    _ovl_Bg_Toki_SwdSegmentRomStart = _RomSize;
    ..ovl_Bg_Toki_Swd : AT(_RomSize)
    {
        _ovl_Bg_Toki_SwdSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Toki_SwdSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_1.o (.text)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_2.o (.text)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_3.o (.text)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd.o (.text)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/ovl_Bg_Toki_Swd_reloc.o (.text)
        _ovl_Bg_Toki_SwdSegmentTextEnd = .;
    _ovl_Bg_Toki_SwdSegmentTextSize = ABSOLUTE( _ovl_Bg_Toki_SwdSegmentTextEnd - _ovl_Bg_Toki_SwdSegmentTextStart );
        _ovl_Bg_Toki_SwdSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_1.o (.data)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_2.o (.data)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_3.o (.data)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd.o (.data)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/ovl_Bg_Toki_Swd_reloc.o (.data)
        _ovl_Bg_Toki_SwdSegmentDataEnd = .;
    _ovl_Bg_Toki_SwdSegmentDataSize = ABSOLUTE( _ovl_Bg_Toki_SwdSegmentDataEnd - _ovl_Bg_Toki_SwdSegmentDataStart );
        _ovl_Bg_Toki_SwdSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_1.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_2.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_3.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/ovl_Bg_Toki_Swd_reloc.o (.rodata)
        _ovl_Bg_Toki_SwdSegmentRoDataEnd = .;
    _ovl_Bg_Toki_SwdSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Toki_SwdSegmentRoDataEnd - _ovl_Bg_Toki_SwdSegmentRoDataStart );
        _ovl_Bg_Toki_SwdSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_1.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_2.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_3.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/ovl_Bg_Toki_Swd_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Toki_SwdSegmentSDataEnd = .;
        _ovl_Bg_Toki_SwdSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_1.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_2.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_3.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/ovl_Bg_Toki_Swd_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Toki_SwdSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Toki_SwdSegmentOvlEnd - _ovl_Bg_Toki_SwdSegmentTextStart );
    _ovl_Bg_Toki_SwdSegmentRomEnd = _RomSize;

    ..ovl_Bg_Toki_Swd.bss ADDR(..ovl_Bg_Toki_Swd) + SIZEOF(..ovl_Bg_Toki_Swd) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Toki_SwdSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_1.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_2.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_3.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/ovl_Bg_Toki_Swd_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_1.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_2.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_3.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/ovl_Bg_Toki_Swd_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_1.o (.bss)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_2.o (.bss)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_3.o (.bss)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd.o (.bss)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/ovl_Bg_Toki_Swd_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_1.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_2.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd_cutscene_data_3.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/z_bg_toki_swd.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Toki_Swd/ovl_Bg_Toki_Swd_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Toki_SwdSegmentBssEnd = .;
        _ovl_Bg_Toki_SwdSegmentEnd = .;
    }
    _ovl_Bg_Toki_SwdSegmentBssSize = ABSOLUTE( _ovl_Bg_Toki_SwdSegmentBssEnd - _ovl_Bg_Toki_SwdSegmentBssStart );

    _ovl_Bg_TreemouthSegmentRomStart = _RomSize;
    ..ovl_Bg_Treemouth : AT(_RomSize)
    {
        _ovl_Bg_TreemouthSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_TreemouthSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Treemouth/z_bg_treemouth.o (.text)
            build/src/overlays/actors/ovl_Bg_Treemouth/ovl_Bg_Treemouth_reloc.o (.text)
        _ovl_Bg_TreemouthSegmentTextEnd = .;
    _ovl_Bg_TreemouthSegmentTextSize = ABSOLUTE( _ovl_Bg_TreemouthSegmentTextEnd - _ovl_Bg_TreemouthSegmentTextStart );
        _ovl_Bg_TreemouthSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Treemouth/z_bg_treemouth.o (.data)
            build/src/overlays/actors/ovl_Bg_Treemouth/ovl_Bg_Treemouth_reloc.o (.data)
        _ovl_Bg_TreemouthSegmentDataEnd = .;
    _ovl_Bg_TreemouthSegmentDataSize = ABSOLUTE( _ovl_Bg_TreemouthSegmentDataEnd - _ovl_Bg_TreemouthSegmentDataStart );
        _ovl_Bg_TreemouthSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Treemouth/z_bg_treemouth.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Treemouth/ovl_Bg_Treemouth_reloc.o (.rodata)
        _ovl_Bg_TreemouthSegmentRoDataEnd = .;
    _ovl_Bg_TreemouthSegmentRoDataSize = ABSOLUTE( _ovl_Bg_TreemouthSegmentRoDataEnd - _ovl_Bg_TreemouthSegmentRoDataStart );
        _ovl_Bg_TreemouthSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Treemouth/z_bg_treemouth.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Treemouth/ovl_Bg_Treemouth_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_TreemouthSegmentSDataEnd = .;
        _ovl_Bg_TreemouthSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Treemouth/z_bg_treemouth.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Treemouth/ovl_Bg_Treemouth_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_TreemouthSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_TreemouthSegmentOvlEnd - _ovl_Bg_TreemouthSegmentTextStart );
    _ovl_Bg_TreemouthSegmentRomEnd = _RomSize;

    ..ovl_Bg_Treemouth.bss ADDR(..ovl_Bg_Treemouth) + SIZEOF(..ovl_Bg_Treemouth) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_TreemouthSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Treemouth/z_bg_treemouth.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Treemouth/ovl_Bg_Treemouth_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Treemouth/z_bg_treemouth.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Treemouth/ovl_Bg_Treemouth_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Treemouth/z_bg_treemouth.o (.bss)
            build/src/overlays/actors/ovl_Bg_Treemouth/ovl_Bg_Treemouth_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Treemouth/z_bg_treemouth.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Treemouth/ovl_Bg_Treemouth_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_TreemouthSegmentBssEnd = .;
        _ovl_Bg_TreemouthSegmentEnd = .;
    }
    _ovl_Bg_TreemouthSegmentBssSize = ABSOLUTE( _ovl_Bg_TreemouthSegmentBssEnd - _ovl_Bg_TreemouthSegmentBssStart );

    _ovl_Bg_UmajumpSegmentRomStart = _RomSize;
    ..ovl_Bg_Umajump : AT(_RomSize)
    {
        _ovl_Bg_UmajumpSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_UmajumpSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Umajump/z_bg_umajump.o (.text)
            build/src/overlays/actors/ovl_Bg_Umajump/ovl_Bg_Umajump_reloc.o (.text)
        _ovl_Bg_UmajumpSegmentTextEnd = .;
    _ovl_Bg_UmajumpSegmentTextSize = ABSOLUTE( _ovl_Bg_UmajumpSegmentTextEnd - _ovl_Bg_UmajumpSegmentTextStart );
        _ovl_Bg_UmajumpSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Umajump/z_bg_umajump.o (.data)
            build/src/overlays/actors/ovl_Bg_Umajump/ovl_Bg_Umajump_reloc.o (.data)
        _ovl_Bg_UmajumpSegmentDataEnd = .;
    _ovl_Bg_UmajumpSegmentDataSize = ABSOLUTE( _ovl_Bg_UmajumpSegmentDataEnd - _ovl_Bg_UmajumpSegmentDataStart );
        _ovl_Bg_UmajumpSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Umajump/z_bg_umajump.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Umajump/ovl_Bg_Umajump_reloc.o (.rodata)
        _ovl_Bg_UmajumpSegmentRoDataEnd = .;
    _ovl_Bg_UmajumpSegmentRoDataSize = ABSOLUTE( _ovl_Bg_UmajumpSegmentRoDataEnd - _ovl_Bg_UmajumpSegmentRoDataStart );
        _ovl_Bg_UmajumpSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Umajump/z_bg_umajump.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Umajump/ovl_Bg_Umajump_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_UmajumpSegmentSDataEnd = .;
        _ovl_Bg_UmajumpSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Umajump/z_bg_umajump.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Umajump/ovl_Bg_Umajump_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_UmajumpSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_UmajumpSegmentOvlEnd - _ovl_Bg_UmajumpSegmentTextStart );
    _ovl_Bg_UmajumpSegmentRomEnd = _RomSize;

    ..ovl_Bg_Umajump.bss ADDR(..ovl_Bg_Umajump) + SIZEOF(..ovl_Bg_Umajump) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_UmajumpSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Umajump/z_bg_umajump.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Umajump/ovl_Bg_Umajump_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Umajump/z_bg_umajump.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Umajump/ovl_Bg_Umajump_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Umajump/z_bg_umajump.o (.bss)
            build/src/overlays/actors/ovl_Bg_Umajump/ovl_Bg_Umajump_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Umajump/z_bg_umajump.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Umajump/ovl_Bg_Umajump_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_UmajumpSegmentBssEnd = .;
        _ovl_Bg_UmajumpSegmentEnd = .;
    }
    _ovl_Bg_UmajumpSegmentBssSize = ABSOLUTE( _ovl_Bg_UmajumpSegmentBssEnd - _ovl_Bg_UmajumpSegmentBssStart );

    _ovl_Bg_Vb_SimaSegmentRomStart = _RomSize;
    ..ovl_Bg_Vb_Sima : AT(_RomSize)
    {
        _ovl_Bg_Vb_SimaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Vb_SimaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Vb_Sima/z_bg_vb_sima.o (.text)
            build/data/overlays/actors/z_bg_vb_sima.data.o (.text)
            build/data/overlays/actors/z_bg_vb_sima.reloc.o (.text)
        _ovl_Bg_Vb_SimaSegmentTextEnd = .;
    _ovl_Bg_Vb_SimaSegmentTextSize = ABSOLUTE( _ovl_Bg_Vb_SimaSegmentTextEnd - _ovl_Bg_Vb_SimaSegmentTextStart );
        _ovl_Bg_Vb_SimaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Vb_Sima/z_bg_vb_sima.o (.data)
            build/data/overlays/actors/z_bg_vb_sima.data.o (.data)
            build/data/overlays/actors/z_bg_vb_sima.reloc.o (.data)
        _ovl_Bg_Vb_SimaSegmentDataEnd = .;
    _ovl_Bg_Vb_SimaSegmentDataSize = ABSOLUTE( _ovl_Bg_Vb_SimaSegmentDataEnd - _ovl_Bg_Vb_SimaSegmentDataStart );
        _ovl_Bg_Vb_SimaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Vb_Sima/z_bg_vb_sima.o (.rodata)
            build/data/overlays/actors/z_bg_vb_sima.data.o (.rodata)
            build/data/overlays/actors/z_bg_vb_sima.reloc.o (.rodata)
        _ovl_Bg_Vb_SimaSegmentRoDataEnd = .;
    _ovl_Bg_Vb_SimaSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Vb_SimaSegmentRoDataEnd - _ovl_Bg_Vb_SimaSegmentRoDataStart );
        _ovl_Bg_Vb_SimaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Vb_Sima/z_bg_vb_sima.o (.sdata)
            build/data/overlays/actors/z_bg_vb_sima.data.o (.sdata)
            build/data/overlays/actors/z_bg_vb_sima.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Vb_SimaSegmentSDataEnd = .;
        _ovl_Bg_Vb_SimaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Vb_Sima/z_bg_vb_sima.o (.ovl)
            build/data/overlays/actors/z_bg_vb_sima.data.o (.ovl)
            build/data/overlays/actors/z_bg_vb_sima.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Vb_SimaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Vb_SimaSegmentOvlEnd - _ovl_Bg_Vb_SimaSegmentTextStart );
    _ovl_Bg_Vb_SimaSegmentRomEnd = _RomSize;

    ..ovl_Bg_Vb_Sima.bss ADDR(..ovl_Bg_Vb_Sima) + SIZEOF(..ovl_Bg_Vb_Sima) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Vb_SimaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Vb_Sima/z_bg_vb_sima.o (.sbss)
            build/data/overlays/actors/z_bg_vb_sima.data.o (.sbss)
            build/data/overlays/actors/z_bg_vb_sima.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Vb_Sima/z_bg_vb_sima.o (.scommon)
            build/data/overlays/actors/z_bg_vb_sima.data.o (.scommon)
            build/data/overlays/actors/z_bg_vb_sima.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Vb_Sima/z_bg_vb_sima.o (.bss)
            build/data/overlays/actors/z_bg_vb_sima.data.o (.bss)
            build/data/overlays/actors/z_bg_vb_sima.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Vb_Sima/z_bg_vb_sima.o (COMMON)
            build/data/overlays/actors/z_bg_vb_sima.data.o (COMMON)
            build/data/overlays/actors/z_bg_vb_sima.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Vb_SimaSegmentBssEnd = .;
        _ovl_Bg_Vb_SimaSegmentEnd = .;
    }
    _ovl_Bg_Vb_SimaSegmentBssSize = ABSOLUTE( _ovl_Bg_Vb_SimaSegmentBssEnd - _ovl_Bg_Vb_SimaSegmentBssStart );

    _ovl_Bg_Ydan_HasiSegmentRomStart = _RomSize;
    ..ovl_Bg_Ydan_Hasi : AT(_RomSize)
    {
        _ovl_Bg_Ydan_HasiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_HasiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/z_bg_ydan_hasi.o (.text)
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/ovl_Bg_Ydan_Hasi_reloc.o (.text)
        _ovl_Bg_Ydan_HasiSegmentTextEnd = .;
    _ovl_Bg_Ydan_HasiSegmentTextSize = ABSOLUTE( _ovl_Bg_Ydan_HasiSegmentTextEnd - _ovl_Bg_Ydan_HasiSegmentTextStart );
        _ovl_Bg_Ydan_HasiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/z_bg_ydan_hasi.o (.data)
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/ovl_Bg_Ydan_Hasi_reloc.o (.data)
        _ovl_Bg_Ydan_HasiSegmentDataEnd = .;
    _ovl_Bg_Ydan_HasiSegmentDataSize = ABSOLUTE( _ovl_Bg_Ydan_HasiSegmentDataEnd - _ovl_Bg_Ydan_HasiSegmentDataStart );
        _ovl_Bg_Ydan_HasiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/z_bg_ydan_hasi.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/ovl_Bg_Ydan_Hasi_reloc.o (.rodata)
        _ovl_Bg_Ydan_HasiSegmentRoDataEnd = .;
    _ovl_Bg_Ydan_HasiSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Ydan_HasiSegmentRoDataEnd - _ovl_Bg_Ydan_HasiSegmentRoDataStart );
        _ovl_Bg_Ydan_HasiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/z_bg_ydan_hasi.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/ovl_Bg_Ydan_Hasi_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_HasiSegmentSDataEnd = .;
        _ovl_Bg_Ydan_HasiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/z_bg_ydan_hasi.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/ovl_Bg_Ydan_Hasi_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_HasiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Ydan_HasiSegmentOvlEnd - _ovl_Bg_Ydan_HasiSegmentTextStart );
    _ovl_Bg_Ydan_HasiSegmentRomEnd = _RomSize;

    ..ovl_Bg_Ydan_Hasi.bss ADDR(..ovl_Bg_Ydan_Hasi) + SIZEOF(..ovl_Bg_Ydan_Hasi) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_HasiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/z_bg_ydan_hasi.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/ovl_Bg_Ydan_Hasi_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/z_bg_ydan_hasi.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/ovl_Bg_Ydan_Hasi_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/z_bg_ydan_hasi.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/ovl_Bg_Ydan_Hasi_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/z_bg_ydan_hasi.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Ydan_Hasi/ovl_Bg_Ydan_Hasi_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_HasiSegmentBssEnd = .;
        _ovl_Bg_Ydan_HasiSegmentEnd = .;
    }
    _ovl_Bg_Ydan_HasiSegmentBssSize = ABSOLUTE( _ovl_Bg_Ydan_HasiSegmentBssEnd - _ovl_Bg_Ydan_HasiSegmentBssStart );

    _ovl_Bg_Ydan_MarutaSegmentRomStart = _RomSize;
    ..ovl_Bg_Ydan_Maruta : AT(_RomSize)
    {
        _ovl_Bg_Ydan_MarutaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_MarutaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/z_bg_ydan_maruta.o (.text)
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/ovl_Bg_Ydan_Maruta_reloc.o (.text)
        _ovl_Bg_Ydan_MarutaSegmentTextEnd = .;
    _ovl_Bg_Ydan_MarutaSegmentTextSize = ABSOLUTE( _ovl_Bg_Ydan_MarutaSegmentTextEnd - _ovl_Bg_Ydan_MarutaSegmentTextStart );
        _ovl_Bg_Ydan_MarutaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/z_bg_ydan_maruta.o (.data)
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/ovl_Bg_Ydan_Maruta_reloc.o (.data)
        _ovl_Bg_Ydan_MarutaSegmentDataEnd = .;
    _ovl_Bg_Ydan_MarutaSegmentDataSize = ABSOLUTE( _ovl_Bg_Ydan_MarutaSegmentDataEnd - _ovl_Bg_Ydan_MarutaSegmentDataStart );
        _ovl_Bg_Ydan_MarutaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/z_bg_ydan_maruta.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/ovl_Bg_Ydan_Maruta_reloc.o (.rodata)
        _ovl_Bg_Ydan_MarutaSegmentRoDataEnd = .;
    _ovl_Bg_Ydan_MarutaSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Ydan_MarutaSegmentRoDataEnd - _ovl_Bg_Ydan_MarutaSegmentRoDataStart );
        _ovl_Bg_Ydan_MarutaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/z_bg_ydan_maruta.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/ovl_Bg_Ydan_Maruta_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_MarutaSegmentSDataEnd = .;
        _ovl_Bg_Ydan_MarutaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/z_bg_ydan_maruta.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/ovl_Bg_Ydan_Maruta_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_MarutaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Ydan_MarutaSegmentOvlEnd - _ovl_Bg_Ydan_MarutaSegmentTextStart );
    _ovl_Bg_Ydan_MarutaSegmentRomEnd = _RomSize;

    ..ovl_Bg_Ydan_Maruta.bss ADDR(..ovl_Bg_Ydan_Maruta) + SIZEOF(..ovl_Bg_Ydan_Maruta) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_MarutaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/z_bg_ydan_maruta.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/ovl_Bg_Ydan_Maruta_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/z_bg_ydan_maruta.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/ovl_Bg_Ydan_Maruta_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/z_bg_ydan_maruta.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/ovl_Bg_Ydan_Maruta_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/z_bg_ydan_maruta.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Ydan_Maruta/ovl_Bg_Ydan_Maruta_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_MarutaSegmentBssEnd = .;
        _ovl_Bg_Ydan_MarutaSegmentEnd = .;
    }
    _ovl_Bg_Ydan_MarutaSegmentBssSize = ABSOLUTE( _ovl_Bg_Ydan_MarutaSegmentBssEnd - _ovl_Bg_Ydan_MarutaSegmentBssStart );

    _ovl_Bg_Ydan_SpSegmentRomStart = _RomSize;
    ..ovl_Bg_Ydan_Sp : AT(_RomSize)
    {
        _ovl_Bg_Ydan_SpSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_SpSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Sp/z_bg_ydan_sp.o (.text)
            build/data/overlays/actors/z_bg_ydan_sp.data.o (.text)
            build/data/overlays/actors/z_bg_ydan_sp.reloc.o (.text)
        _ovl_Bg_Ydan_SpSegmentTextEnd = .;
    _ovl_Bg_Ydan_SpSegmentTextSize = ABSOLUTE( _ovl_Bg_Ydan_SpSegmentTextEnd - _ovl_Bg_Ydan_SpSegmentTextStart );
        _ovl_Bg_Ydan_SpSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Sp/z_bg_ydan_sp.o (.data)
            build/data/overlays/actors/z_bg_ydan_sp.data.o (.data)
            build/data/overlays/actors/z_bg_ydan_sp.reloc.o (.data)
        _ovl_Bg_Ydan_SpSegmentDataEnd = .;
    _ovl_Bg_Ydan_SpSegmentDataSize = ABSOLUTE( _ovl_Bg_Ydan_SpSegmentDataEnd - _ovl_Bg_Ydan_SpSegmentDataStart );
        _ovl_Bg_Ydan_SpSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Sp/z_bg_ydan_sp.o (.rodata)
            build/data/overlays/actors/z_bg_ydan_sp.data.o (.rodata)
            build/data/overlays/actors/z_bg_ydan_sp.reloc.o (.rodata)
        _ovl_Bg_Ydan_SpSegmentRoDataEnd = .;
    _ovl_Bg_Ydan_SpSegmentRoDataSize = ABSOLUTE( _ovl_Bg_Ydan_SpSegmentRoDataEnd - _ovl_Bg_Ydan_SpSegmentRoDataStart );
        _ovl_Bg_Ydan_SpSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Sp/z_bg_ydan_sp.o (.sdata)
            build/data/overlays/actors/z_bg_ydan_sp.data.o (.sdata)
            build/data/overlays/actors/z_bg_ydan_sp.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_SpSegmentSDataEnd = .;
        _ovl_Bg_Ydan_SpSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Sp/z_bg_ydan_sp.o (.ovl)
            build/data/overlays/actors/z_bg_ydan_sp.data.o (.ovl)
            build/data/overlays/actors/z_bg_ydan_sp.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_SpSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_Ydan_SpSegmentOvlEnd - _ovl_Bg_Ydan_SpSegmentTextStart );
    _ovl_Bg_Ydan_SpSegmentRomEnd = _RomSize;

    ..ovl_Bg_Ydan_Sp.bss ADDR(..ovl_Bg_Ydan_Sp) + SIZEOF(..ovl_Bg_Ydan_Sp) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_SpSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Ydan_Sp/z_bg_ydan_sp.o (.sbss)
            build/data/overlays/actors/z_bg_ydan_sp.data.o (.sbss)
            build/data/overlays/actors/z_bg_ydan_sp.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Ydan_Sp/z_bg_ydan_sp.o (.scommon)
            build/data/overlays/actors/z_bg_ydan_sp.data.o (.scommon)
            build/data/overlays/actors/z_bg_ydan_sp.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Ydan_Sp/z_bg_ydan_sp.o (.bss)
            build/data/overlays/actors/z_bg_ydan_sp.data.o (.bss)
            build/data/overlays/actors/z_bg_ydan_sp.reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Ydan_Sp/z_bg_ydan_sp.o (COMMON)
            build/data/overlays/actors/z_bg_ydan_sp.data.o (COMMON)
            build/data/overlays/actors/z_bg_ydan_sp.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_Ydan_SpSegmentBssEnd = .;
        _ovl_Bg_Ydan_SpSegmentEnd = .;
    }
    _ovl_Bg_Ydan_SpSegmentBssSize = ABSOLUTE( _ovl_Bg_Ydan_SpSegmentBssEnd - _ovl_Bg_Ydan_SpSegmentBssStart );

    _ovl_Bg_ZgSegmentRomStart = _RomSize;
    ..ovl_Bg_Zg : AT(_RomSize)
    {
        _ovl_Bg_ZgSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Bg_ZgSegmentTextStart = .;
            build/src/overlays/actors/ovl_Bg_Zg/z_bg_zg.o (.text)
            build/src/overlays/actors/ovl_Bg_Zg/ovl_Bg_Zg_reloc.o (.text)
        _ovl_Bg_ZgSegmentTextEnd = .;
    _ovl_Bg_ZgSegmentTextSize = ABSOLUTE( _ovl_Bg_ZgSegmentTextEnd - _ovl_Bg_ZgSegmentTextStart );
        _ovl_Bg_ZgSegmentDataStart = .;
            build/src/overlays/actors/ovl_Bg_Zg/z_bg_zg.o (.data)
            build/src/overlays/actors/ovl_Bg_Zg/ovl_Bg_Zg_reloc.o (.data)
        _ovl_Bg_ZgSegmentDataEnd = .;
    _ovl_Bg_ZgSegmentDataSize = ABSOLUTE( _ovl_Bg_ZgSegmentDataEnd - _ovl_Bg_ZgSegmentDataStart );
        _ovl_Bg_ZgSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Bg_Zg/z_bg_zg.o (.rodata)
            build/src/overlays/actors/ovl_Bg_Zg/ovl_Bg_Zg_reloc.o (.rodata)
        _ovl_Bg_ZgSegmentRoDataEnd = .;
    _ovl_Bg_ZgSegmentRoDataSize = ABSOLUTE( _ovl_Bg_ZgSegmentRoDataEnd - _ovl_Bg_ZgSegmentRoDataStart );
        _ovl_Bg_ZgSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Bg_Zg/z_bg_zg.o (.sdata)
            build/src/overlays/actors/ovl_Bg_Zg/ovl_Bg_Zg_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Bg_ZgSegmentSDataEnd = .;
        _ovl_Bg_ZgSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Bg_Zg/z_bg_zg.o (.ovl)
            build/src/overlays/actors/ovl_Bg_Zg/ovl_Bg_Zg_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Bg_ZgSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Bg_ZgSegmentOvlEnd - _ovl_Bg_ZgSegmentTextStart );
    _ovl_Bg_ZgSegmentRomEnd = _RomSize;

    ..ovl_Bg_Zg.bss ADDR(..ovl_Bg_Zg) + SIZEOF(..ovl_Bg_Zg) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Bg_ZgSegmentBssStart = .;
            build/src/overlays/actors/ovl_Bg_Zg/z_bg_zg.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Zg/ovl_Bg_Zg_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Bg_Zg/z_bg_zg.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Zg/ovl_Bg_Zg_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Bg_Zg/z_bg_zg.o (.bss)
            build/src/overlays/actors/ovl_Bg_Zg/ovl_Bg_Zg_reloc.o (.bss)
            build/src/overlays/actors/ovl_Bg_Zg/z_bg_zg.o (COMMON)
            build/src/overlays/actors/ovl_Bg_Zg/ovl_Bg_Zg_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Bg_ZgSegmentBssEnd = .;
        _ovl_Bg_ZgSegmentEnd = .;
    }
    _ovl_Bg_ZgSegmentBssSize = ABSOLUTE( _ovl_Bg_ZgSegmentBssEnd - _ovl_Bg_ZgSegmentBssStart );

    _ovl_Boss_DodongoSegmentRomStart = _RomSize;
    ..ovl_Boss_Dodongo : AT(_RomSize)
    {
        _ovl_Boss_DodongoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Boss_DodongoSegmentTextStart = .;
            build/src/overlays/actors/ovl_Boss_Dodongo/z_boss_dodongo.o (.text)
            build/data/overlays/actors/z_boss_dodongo.data.o (.text)
            build/data/overlays/actors/z_boss_dodongo.reloc.o (.text)
        _ovl_Boss_DodongoSegmentTextEnd = .;
    _ovl_Boss_DodongoSegmentTextSize = ABSOLUTE( _ovl_Boss_DodongoSegmentTextEnd - _ovl_Boss_DodongoSegmentTextStart );
        _ovl_Boss_DodongoSegmentDataStart = .;
            build/src/overlays/actors/ovl_Boss_Dodongo/z_boss_dodongo.o (.data)
            build/data/overlays/actors/z_boss_dodongo.data.o (.data)
            build/data/overlays/actors/z_boss_dodongo.reloc.o (.data)
        _ovl_Boss_DodongoSegmentDataEnd = .;
    _ovl_Boss_DodongoSegmentDataSize = ABSOLUTE( _ovl_Boss_DodongoSegmentDataEnd - _ovl_Boss_DodongoSegmentDataStart );
        _ovl_Boss_DodongoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Boss_Dodongo/z_boss_dodongo.o (.rodata)
            build/data/overlays/actors/z_boss_dodongo.data.o (.rodata)
            build/data/overlays/actors/z_boss_dodongo.reloc.o (.rodata)
        _ovl_Boss_DodongoSegmentRoDataEnd = .;
    _ovl_Boss_DodongoSegmentRoDataSize = ABSOLUTE( _ovl_Boss_DodongoSegmentRoDataEnd - _ovl_Boss_DodongoSegmentRoDataStart );
        _ovl_Boss_DodongoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Boss_Dodongo/z_boss_dodongo.o (.sdata)
            build/data/overlays/actors/z_boss_dodongo.data.o (.sdata)
            build/data/overlays/actors/z_boss_dodongo.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Boss_DodongoSegmentSDataEnd = .;
        _ovl_Boss_DodongoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Boss_Dodongo/z_boss_dodongo.o (.ovl)
            build/data/overlays/actors/z_boss_dodongo.data.o (.ovl)
            build/data/overlays/actors/z_boss_dodongo.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Boss_DodongoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Boss_DodongoSegmentOvlEnd - _ovl_Boss_DodongoSegmentTextStart );
    _ovl_Boss_DodongoSegmentRomEnd = _RomSize;

    ..ovl_Boss_Dodongo.bss ADDR(..ovl_Boss_Dodongo) + SIZEOF(..ovl_Boss_Dodongo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Boss_DodongoSegmentBssStart = .;
            build/src/overlays/actors/ovl_Boss_Dodongo/z_boss_dodongo.o (.sbss)
            build/data/overlays/actors/z_boss_dodongo.data.o (.sbss)
            build/data/overlays/actors/z_boss_dodongo.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Boss_Dodongo/z_boss_dodongo.o (.scommon)
            build/data/overlays/actors/z_boss_dodongo.data.o (.scommon)
            build/data/overlays/actors/z_boss_dodongo.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Boss_Dodongo/z_boss_dodongo.o (.bss)
            build/data/overlays/actors/z_boss_dodongo.data.o (.bss)
            build/data/overlays/actors/z_boss_dodongo.reloc.o (.bss)
            build/src/overlays/actors/ovl_Boss_Dodongo/z_boss_dodongo.o (COMMON)
            build/data/overlays/actors/z_boss_dodongo.data.o (COMMON)
            build/data/overlays/actors/z_boss_dodongo.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Boss_DodongoSegmentBssEnd = .;
        _ovl_Boss_DodongoSegmentEnd = .;
    }
    _ovl_Boss_DodongoSegmentBssSize = ABSOLUTE( _ovl_Boss_DodongoSegmentBssEnd - _ovl_Boss_DodongoSegmentBssStart );

    _ovl_Boss_FdSegmentRomStart = _RomSize;
    ..ovl_Boss_Fd : AT(_RomSize)
    {
        _ovl_Boss_FdSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Boss_FdSegmentTextStart = .;
            build/src/overlays/actors/ovl_Boss_Fd/z_boss_fd.o (.text)
            build/data/overlays/actors/z_boss_fd.data.o (.text)
            build/data/overlays/actors/z_boss_fd.reloc.o (.text)
        _ovl_Boss_FdSegmentTextEnd = .;
    _ovl_Boss_FdSegmentTextSize = ABSOLUTE( _ovl_Boss_FdSegmentTextEnd - _ovl_Boss_FdSegmentTextStart );
        _ovl_Boss_FdSegmentDataStart = .;
            build/src/overlays/actors/ovl_Boss_Fd/z_boss_fd.o (.data)
            build/data/overlays/actors/z_boss_fd.data.o (.data)
            build/data/overlays/actors/z_boss_fd.reloc.o (.data)
        _ovl_Boss_FdSegmentDataEnd = .;
    _ovl_Boss_FdSegmentDataSize = ABSOLUTE( _ovl_Boss_FdSegmentDataEnd - _ovl_Boss_FdSegmentDataStart );
        _ovl_Boss_FdSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Boss_Fd/z_boss_fd.o (.rodata)
            build/data/overlays/actors/z_boss_fd.data.o (.rodata)
            build/data/overlays/actors/z_boss_fd.reloc.o (.rodata)
        _ovl_Boss_FdSegmentRoDataEnd = .;
    _ovl_Boss_FdSegmentRoDataSize = ABSOLUTE( _ovl_Boss_FdSegmentRoDataEnd - _ovl_Boss_FdSegmentRoDataStart );
        _ovl_Boss_FdSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Boss_Fd/z_boss_fd.o (.sdata)
            build/data/overlays/actors/z_boss_fd.data.o (.sdata)
            build/data/overlays/actors/z_boss_fd.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Boss_FdSegmentSDataEnd = .;
        _ovl_Boss_FdSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Boss_Fd/z_boss_fd.o (.ovl)
            build/data/overlays/actors/z_boss_fd.data.o (.ovl)
            build/data/overlays/actors/z_boss_fd.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Boss_FdSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Boss_FdSegmentOvlEnd - _ovl_Boss_FdSegmentTextStart );
    _ovl_Boss_FdSegmentRomEnd = _RomSize;

    ..ovl_Boss_Fd.bss ADDR(..ovl_Boss_Fd) + SIZEOF(..ovl_Boss_Fd) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Boss_FdSegmentBssStart = .;
            build/src/overlays/actors/ovl_Boss_Fd/z_boss_fd.o (.sbss)
            build/data/overlays/actors/z_boss_fd.data.o (.sbss)
            build/data/overlays/actors/z_boss_fd.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Boss_Fd/z_boss_fd.o (.scommon)
            build/data/overlays/actors/z_boss_fd.data.o (.scommon)
            build/data/overlays/actors/z_boss_fd.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Boss_Fd/z_boss_fd.o (.bss)
            build/data/overlays/actors/z_boss_fd.data.o (.bss)
            build/data/overlays/actors/z_boss_fd.reloc.o (.bss)
            build/src/overlays/actors/ovl_Boss_Fd/z_boss_fd.o (COMMON)
            build/data/overlays/actors/z_boss_fd.data.o (COMMON)
            build/data/overlays/actors/z_boss_fd.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Boss_FdSegmentBssEnd = .;
        _ovl_Boss_FdSegmentEnd = .;
    }
    _ovl_Boss_FdSegmentBssSize = ABSOLUTE( _ovl_Boss_FdSegmentBssEnd - _ovl_Boss_FdSegmentBssStart );

    _ovl_Boss_Fd2SegmentRomStart = _RomSize;
    ..ovl_Boss_Fd2 : AT(_RomSize)
    {
        _ovl_Boss_Fd2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Boss_Fd2SegmentTextStart = .;
            build/src/overlays/actors/ovl_Boss_Fd2/z_boss_fd2.o (.text)
            build/data/overlays/actors/z_boss_fd2.data.o (.text)
            build/data/overlays/actors/z_boss_fd2.reloc.o (.text)
        _ovl_Boss_Fd2SegmentTextEnd = .;
    _ovl_Boss_Fd2SegmentTextSize = ABSOLUTE( _ovl_Boss_Fd2SegmentTextEnd - _ovl_Boss_Fd2SegmentTextStart );
        _ovl_Boss_Fd2SegmentDataStart = .;
            build/src/overlays/actors/ovl_Boss_Fd2/z_boss_fd2.o (.data)
            build/data/overlays/actors/z_boss_fd2.data.o (.data)
            build/data/overlays/actors/z_boss_fd2.reloc.o (.data)
        _ovl_Boss_Fd2SegmentDataEnd = .;
    _ovl_Boss_Fd2SegmentDataSize = ABSOLUTE( _ovl_Boss_Fd2SegmentDataEnd - _ovl_Boss_Fd2SegmentDataStart );
        _ovl_Boss_Fd2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Boss_Fd2/z_boss_fd2.o (.rodata)
            build/data/overlays/actors/z_boss_fd2.data.o (.rodata)
            build/data/overlays/actors/z_boss_fd2.reloc.o (.rodata)
        _ovl_Boss_Fd2SegmentRoDataEnd = .;
    _ovl_Boss_Fd2SegmentRoDataSize = ABSOLUTE( _ovl_Boss_Fd2SegmentRoDataEnd - _ovl_Boss_Fd2SegmentRoDataStart );
        _ovl_Boss_Fd2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_Boss_Fd2/z_boss_fd2.o (.sdata)
            build/data/overlays/actors/z_boss_fd2.data.o (.sdata)
            build/data/overlays/actors/z_boss_fd2.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Boss_Fd2SegmentSDataEnd = .;
        _ovl_Boss_Fd2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_Boss_Fd2/z_boss_fd2.o (.ovl)
            build/data/overlays/actors/z_boss_fd2.data.o (.ovl)
            build/data/overlays/actors/z_boss_fd2.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Boss_Fd2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Boss_Fd2SegmentOvlEnd - _ovl_Boss_Fd2SegmentTextStart );
    _ovl_Boss_Fd2SegmentRomEnd = _RomSize;

    ..ovl_Boss_Fd2.bss ADDR(..ovl_Boss_Fd2) + SIZEOF(..ovl_Boss_Fd2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Boss_Fd2SegmentBssStart = .;
            build/src/overlays/actors/ovl_Boss_Fd2/z_boss_fd2.o (.sbss)
            build/data/overlays/actors/z_boss_fd2.data.o (.sbss)
            build/data/overlays/actors/z_boss_fd2.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Boss_Fd2/z_boss_fd2.o (.scommon)
            build/data/overlays/actors/z_boss_fd2.data.o (.scommon)
            build/data/overlays/actors/z_boss_fd2.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Boss_Fd2/z_boss_fd2.o (.bss)
            build/data/overlays/actors/z_boss_fd2.data.o (.bss)
            build/data/overlays/actors/z_boss_fd2.reloc.o (.bss)
            build/src/overlays/actors/ovl_Boss_Fd2/z_boss_fd2.o (COMMON)
            build/data/overlays/actors/z_boss_fd2.data.o (COMMON)
            build/data/overlays/actors/z_boss_fd2.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Boss_Fd2SegmentBssEnd = .;
        _ovl_Boss_Fd2SegmentEnd = .;
    }
    _ovl_Boss_Fd2SegmentBssSize = ABSOLUTE( _ovl_Boss_Fd2SegmentBssEnd - _ovl_Boss_Fd2SegmentBssStart );

    _ovl_Boss_GanonSegmentRomStart = _RomSize;
    ..ovl_Boss_Ganon : AT(_RomSize)
    {
        _ovl_Boss_GanonSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Boss_GanonSegmentTextStart = .;
            build/src/overlays/actors/ovl_Boss_Ganon/z_boss_ganon.o (.text)
            build/data/overlays/actors/z_boss_ganon.data.o (.text)
            build/data/overlays/actors/z_boss_ganon.bss.o (.text)
            build/data/overlays/actors/z_boss_ganon.reloc.o (.text)
        _ovl_Boss_GanonSegmentTextEnd = .;
    _ovl_Boss_GanonSegmentTextSize = ABSOLUTE( _ovl_Boss_GanonSegmentTextEnd - _ovl_Boss_GanonSegmentTextStart );
        _ovl_Boss_GanonSegmentDataStart = .;
            build/src/overlays/actors/ovl_Boss_Ganon/z_boss_ganon.o (.data)
            build/data/overlays/actors/z_boss_ganon.data.o (.data)
            build/data/overlays/actors/z_boss_ganon.bss.o (.data)
            build/data/overlays/actors/z_boss_ganon.reloc.o (.data)
        _ovl_Boss_GanonSegmentDataEnd = .;
    _ovl_Boss_GanonSegmentDataSize = ABSOLUTE( _ovl_Boss_GanonSegmentDataEnd - _ovl_Boss_GanonSegmentDataStart );
        _ovl_Boss_GanonSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Boss_Ganon/z_boss_ganon.o (.rodata)
            build/data/overlays/actors/z_boss_ganon.data.o (.rodata)
            build/data/overlays/actors/z_boss_ganon.bss.o (.rodata)
            build/data/overlays/actors/z_boss_ganon.reloc.o (.rodata)
        _ovl_Boss_GanonSegmentRoDataEnd = .;
    _ovl_Boss_GanonSegmentRoDataSize = ABSOLUTE( _ovl_Boss_GanonSegmentRoDataEnd - _ovl_Boss_GanonSegmentRoDataStart );
        _ovl_Boss_GanonSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Boss_Ganon/z_boss_ganon.o (.sdata)
            build/data/overlays/actors/z_boss_ganon.data.o (.sdata)
            build/data/overlays/actors/z_boss_ganon.bss.o (.sdata)
            build/data/overlays/actors/z_boss_ganon.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Boss_GanonSegmentSDataEnd = .;
        _ovl_Boss_GanonSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Boss_Ganon/z_boss_ganon.o (.ovl)
            build/data/overlays/actors/z_boss_ganon.data.o (.ovl)
            build/data/overlays/actors/z_boss_ganon.bss.o (.ovl)
            build/data/overlays/actors/z_boss_ganon.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Boss_GanonSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Boss_GanonSegmentOvlEnd - _ovl_Boss_GanonSegmentTextStart );
    _ovl_Boss_GanonSegmentRomEnd = _RomSize;

    ..ovl_Boss_Ganon.bss ADDR(..ovl_Boss_Ganon) + SIZEOF(..ovl_Boss_Ganon) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Boss_GanonSegmentBssStart = .;
            build/src/overlays/actors/ovl_Boss_Ganon/z_boss_ganon.o (.sbss)
            build/data/overlays/actors/z_boss_ganon.data.o (.sbss)
            build/data/overlays/actors/z_boss_ganon.bss.o (.sbss)
            build/data/overlays/actors/z_boss_ganon.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Boss_Ganon/z_boss_ganon.o (.scommon)
            build/data/overlays/actors/z_boss_ganon.data.o (.scommon)
            build/data/overlays/actors/z_boss_ganon.bss.o (.scommon)
            build/data/overlays/actors/z_boss_ganon.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Boss_Ganon/z_boss_ganon.o (.bss)
            build/data/overlays/actors/z_boss_ganon.data.o (.bss)
            build/data/overlays/actors/z_boss_ganon.bss.o (.bss)
            build/data/overlays/actors/z_boss_ganon.reloc.o (.bss)
            build/src/overlays/actors/ovl_Boss_Ganon/z_boss_ganon.o (COMMON)
            build/data/overlays/actors/z_boss_ganon.data.o (COMMON)
            build/data/overlays/actors/z_boss_ganon.bss.o (COMMON)
            build/data/overlays/actors/z_boss_ganon.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Boss_GanonSegmentBssEnd = .;
        _ovl_Boss_GanonSegmentEnd = .;
    }
    _ovl_Boss_GanonSegmentBssSize = ABSOLUTE( _ovl_Boss_GanonSegmentBssEnd - _ovl_Boss_GanonSegmentBssStart );

    _ovl_Boss_Ganon2SegmentRomStart = _RomSize;
    ..ovl_Boss_Ganon2 : AT(_RomSize)
    {
        _ovl_Boss_Ganon2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Boss_Ganon2SegmentTextStart = .;
            build/src/overlays/actors/ovl_Boss_Ganon2/z_boss_ganon2.o (.text)
            build/data/overlays/actors/z_boss_ganon2.data.o (.text)
            build/data/overlays/actors/z_boss_ganon2.bss.o (.text)
            build/data/overlays/actors/z_boss_ganon2.reloc.o (.text)
        _ovl_Boss_Ganon2SegmentTextEnd = .;
    _ovl_Boss_Ganon2SegmentTextSize = ABSOLUTE( _ovl_Boss_Ganon2SegmentTextEnd - _ovl_Boss_Ganon2SegmentTextStart );
        _ovl_Boss_Ganon2SegmentDataStart = .;
            build/src/overlays/actors/ovl_Boss_Ganon2/z_boss_ganon2.o (.data)
            build/data/overlays/actors/z_boss_ganon2.data.o (.data)
            build/data/overlays/actors/z_boss_ganon2.bss.o (.data)
            build/data/overlays/actors/z_boss_ganon2.reloc.o (.data)
        _ovl_Boss_Ganon2SegmentDataEnd = .;
    _ovl_Boss_Ganon2SegmentDataSize = ABSOLUTE( _ovl_Boss_Ganon2SegmentDataEnd - _ovl_Boss_Ganon2SegmentDataStart );
        _ovl_Boss_Ganon2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Boss_Ganon2/z_boss_ganon2.o (.rodata)
            build/data/overlays/actors/z_boss_ganon2.data.o (.rodata)
            build/data/overlays/actors/z_boss_ganon2.bss.o (.rodata)
            build/data/overlays/actors/z_boss_ganon2.reloc.o (.rodata)
        _ovl_Boss_Ganon2SegmentRoDataEnd = .;
    _ovl_Boss_Ganon2SegmentRoDataSize = ABSOLUTE( _ovl_Boss_Ganon2SegmentRoDataEnd - _ovl_Boss_Ganon2SegmentRoDataStart );
        _ovl_Boss_Ganon2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_Boss_Ganon2/z_boss_ganon2.o (.sdata)
            build/data/overlays/actors/z_boss_ganon2.data.o (.sdata)
            build/data/overlays/actors/z_boss_ganon2.bss.o (.sdata)
            build/data/overlays/actors/z_boss_ganon2.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Boss_Ganon2SegmentSDataEnd = .;
        _ovl_Boss_Ganon2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_Boss_Ganon2/z_boss_ganon2.o (.ovl)
            build/data/overlays/actors/z_boss_ganon2.data.o (.ovl)
            build/data/overlays/actors/z_boss_ganon2.bss.o (.ovl)
            build/data/overlays/actors/z_boss_ganon2.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Boss_Ganon2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Boss_Ganon2SegmentOvlEnd - _ovl_Boss_Ganon2SegmentTextStart );
    _ovl_Boss_Ganon2SegmentRomEnd = _RomSize;

    ..ovl_Boss_Ganon2.bss ADDR(..ovl_Boss_Ganon2) + SIZEOF(..ovl_Boss_Ganon2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Boss_Ganon2SegmentBssStart = .;
            build/src/overlays/actors/ovl_Boss_Ganon2/z_boss_ganon2.o (.sbss)
            build/data/overlays/actors/z_boss_ganon2.data.o (.sbss)
            build/data/overlays/actors/z_boss_ganon2.bss.o (.sbss)
            build/data/overlays/actors/z_boss_ganon2.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Boss_Ganon2/z_boss_ganon2.o (.scommon)
            build/data/overlays/actors/z_boss_ganon2.data.o (.scommon)
            build/data/overlays/actors/z_boss_ganon2.bss.o (.scommon)
            build/data/overlays/actors/z_boss_ganon2.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Boss_Ganon2/z_boss_ganon2.o (.bss)
            build/data/overlays/actors/z_boss_ganon2.data.o (.bss)
            build/data/overlays/actors/z_boss_ganon2.bss.o (.bss)
            build/data/overlays/actors/z_boss_ganon2.reloc.o (.bss)
            build/src/overlays/actors/ovl_Boss_Ganon2/z_boss_ganon2.o (COMMON)
            build/data/overlays/actors/z_boss_ganon2.data.o (COMMON)
            build/data/overlays/actors/z_boss_ganon2.bss.o (COMMON)
            build/data/overlays/actors/z_boss_ganon2.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Boss_Ganon2SegmentBssEnd = .;
        _ovl_Boss_Ganon2SegmentEnd = .;
    }
    _ovl_Boss_Ganon2SegmentBssSize = ABSOLUTE( _ovl_Boss_Ganon2SegmentBssEnd - _ovl_Boss_Ganon2SegmentBssStart );

    _ovl_Boss_GanondrofSegmentRomStart = _RomSize;
    ..ovl_Boss_Ganondrof : AT(_RomSize)
    {
        _ovl_Boss_GanondrofSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Boss_GanondrofSegmentTextStart = .;
            build/src/overlays/actors/ovl_Boss_Ganondrof/z_boss_ganondrof.o (.text)
            build/data/overlays/actors/z_boss_ganondrof.data.o (.text)
            build/data/overlays/actors/z_boss_ganondrof.reloc.o (.text)
        _ovl_Boss_GanondrofSegmentTextEnd = .;
    _ovl_Boss_GanondrofSegmentTextSize = ABSOLUTE( _ovl_Boss_GanondrofSegmentTextEnd - _ovl_Boss_GanondrofSegmentTextStart );
        _ovl_Boss_GanondrofSegmentDataStart = .;
            build/src/overlays/actors/ovl_Boss_Ganondrof/z_boss_ganondrof.o (.data)
            build/data/overlays/actors/z_boss_ganondrof.data.o (.data)
            build/data/overlays/actors/z_boss_ganondrof.reloc.o (.data)
        _ovl_Boss_GanondrofSegmentDataEnd = .;
    _ovl_Boss_GanondrofSegmentDataSize = ABSOLUTE( _ovl_Boss_GanondrofSegmentDataEnd - _ovl_Boss_GanondrofSegmentDataStart );
        _ovl_Boss_GanondrofSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Boss_Ganondrof/z_boss_ganondrof.o (.rodata)
            build/data/overlays/actors/z_boss_ganondrof.data.o (.rodata)
            build/data/overlays/actors/z_boss_ganondrof.reloc.o (.rodata)
        _ovl_Boss_GanondrofSegmentRoDataEnd = .;
    _ovl_Boss_GanondrofSegmentRoDataSize = ABSOLUTE( _ovl_Boss_GanondrofSegmentRoDataEnd - _ovl_Boss_GanondrofSegmentRoDataStart );
        _ovl_Boss_GanondrofSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Boss_Ganondrof/z_boss_ganondrof.o (.sdata)
            build/data/overlays/actors/z_boss_ganondrof.data.o (.sdata)
            build/data/overlays/actors/z_boss_ganondrof.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Boss_GanondrofSegmentSDataEnd = .;
        _ovl_Boss_GanondrofSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Boss_Ganondrof/z_boss_ganondrof.o (.ovl)
            build/data/overlays/actors/z_boss_ganondrof.data.o (.ovl)
            build/data/overlays/actors/z_boss_ganondrof.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Boss_GanondrofSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Boss_GanondrofSegmentOvlEnd - _ovl_Boss_GanondrofSegmentTextStart );
    _ovl_Boss_GanondrofSegmentRomEnd = _RomSize;

    ..ovl_Boss_Ganondrof.bss ADDR(..ovl_Boss_Ganondrof) + SIZEOF(..ovl_Boss_Ganondrof) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Boss_GanondrofSegmentBssStart = .;
            build/src/overlays/actors/ovl_Boss_Ganondrof/z_boss_ganondrof.o (.sbss)
            build/data/overlays/actors/z_boss_ganondrof.data.o (.sbss)
            build/data/overlays/actors/z_boss_ganondrof.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Boss_Ganondrof/z_boss_ganondrof.o (.scommon)
            build/data/overlays/actors/z_boss_ganondrof.data.o (.scommon)
            build/data/overlays/actors/z_boss_ganondrof.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Boss_Ganondrof/z_boss_ganondrof.o (.bss)
            build/data/overlays/actors/z_boss_ganondrof.data.o (.bss)
            build/data/overlays/actors/z_boss_ganondrof.reloc.o (.bss)
            build/src/overlays/actors/ovl_Boss_Ganondrof/z_boss_ganondrof.o (COMMON)
            build/data/overlays/actors/z_boss_ganondrof.data.o (COMMON)
            build/data/overlays/actors/z_boss_ganondrof.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Boss_GanondrofSegmentBssEnd = .;
        _ovl_Boss_GanondrofSegmentEnd = .;
    }
    _ovl_Boss_GanondrofSegmentBssSize = ABSOLUTE( _ovl_Boss_GanondrofSegmentBssEnd - _ovl_Boss_GanondrofSegmentBssStart );

    _ovl_Boss_GomaSegmentRomStart = _RomSize;
    ..ovl_Boss_Goma : AT(_RomSize)
    {
        _ovl_Boss_GomaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Boss_GomaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Boss_Goma/z_boss_goma.o (.text)
            build/data/overlays/actors/z_boss_goma.data.o (.text)
            build/data/overlays/actors/z_boss_goma.reloc.o (.text)
        _ovl_Boss_GomaSegmentTextEnd = .;
    _ovl_Boss_GomaSegmentTextSize = ABSOLUTE( _ovl_Boss_GomaSegmentTextEnd - _ovl_Boss_GomaSegmentTextStart );
        _ovl_Boss_GomaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Boss_Goma/z_boss_goma.o (.data)
            build/data/overlays/actors/z_boss_goma.data.o (.data)
            build/data/overlays/actors/z_boss_goma.reloc.o (.data)
        _ovl_Boss_GomaSegmentDataEnd = .;
    _ovl_Boss_GomaSegmentDataSize = ABSOLUTE( _ovl_Boss_GomaSegmentDataEnd - _ovl_Boss_GomaSegmentDataStart );
        _ovl_Boss_GomaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Boss_Goma/z_boss_goma.o (.rodata)
            build/data/overlays/actors/z_boss_goma.data.o (.rodata)
            build/data/overlays/actors/z_boss_goma.reloc.o (.rodata)
        _ovl_Boss_GomaSegmentRoDataEnd = .;
    _ovl_Boss_GomaSegmentRoDataSize = ABSOLUTE( _ovl_Boss_GomaSegmentRoDataEnd - _ovl_Boss_GomaSegmentRoDataStart );
        _ovl_Boss_GomaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Boss_Goma/z_boss_goma.o (.sdata)
            build/data/overlays/actors/z_boss_goma.data.o (.sdata)
            build/data/overlays/actors/z_boss_goma.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Boss_GomaSegmentSDataEnd = .;
        _ovl_Boss_GomaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Boss_Goma/z_boss_goma.o (.ovl)
            build/data/overlays/actors/z_boss_goma.data.o (.ovl)
            build/data/overlays/actors/z_boss_goma.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Boss_GomaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Boss_GomaSegmentOvlEnd - _ovl_Boss_GomaSegmentTextStart );
    _ovl_Boss_GomaSegmentRomEnd = _RomSize;

    ..ovl_Boss_Goma.bss ADDR(..ovl_Boss_Goma) + SIZEOF(..ovl_Boss_Goma) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Boss_GomaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Boss_Goma/z_boss_goma.o (.sbss)
            build/data/overlays/actors/z_boss_goma.data.o (.sbss)
            build/data/overlays/actors/z_boss_goma.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Boss_Goma/z_boss_goma.o (.scommon)
            build/data/overlays/actors/z_boss_goma.data.o (.scommon)
            build/data/overlays/actors/z_boss_goma.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Boss_Goma/z_boss_goma.o (.bss)
            build/data/overlays/actors/z_boss_goma.data.o (.bss)
            build/data/overlays/actors/z_boss_goma.reloc.o (.bss)
            build/src/overlays/actors/ovl_Boss_Goma/z_boss_goma.o (COMMON)
            build/data/overlays/actors/z_boss_goma.data.o (COMMON)
            build/data/overlays/actors/z_boss_goma.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Boss_GomaSegmentBssEnd = .;
        _ovl_Boss_GomaSegmentEnd = .;
    }
    _ovl_Boss_GomaSegmentBssSize = ABSOLUTE( _ovl_Boss_GomaSegmentBssEnd - _ovl_Boss_GomaSegmentBssStart );

    _ovl_Boss_MoSegmentRomStart = _RomSize;
    ..ovl_Boss_Mo : AT(_RomSize)
    {
        _ovl_Boss_MoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Boss_MoSegmentTextStart = .;
            build/src/overlays/actors/ovl_Boss_Mo/z_boss_mo.o (.text)
            build/data/overlays/actors/z_boss_mo.data.o (.text)
            build/data/overlays/actors/z_boss_mo.bss.o (.text)
            build/data/overlays/actors/z_boss_mo.reloc.o (.text)
        _ovl_Boss_MoSegmentTextEnd = .;
    _ovl_Boss_MoSegmentTextSize = ABSOLUTE( _ovl_Boss_MoSegmentTextEnd - _ovl_Boss_MoSegmentTextStart );
        _ovl_Boss_MoSegmentDataStart = .;
            build/src/overlays/actors/ovl_Boss_Mo/z_boss_mo.o (.data)
            build/data/overlays/actors/z_boss_mo.data.o (.data)
            build/data/overlays/actors/z_boss_mo.bss.o (.data)
            build/data/overlays/actors/z_boss_mo.reloc.o (.data)
        _ovl_Boss_MoSegmentDataEnd = .;
    _ovl_Boss_MoSegmentDataSize = ABSOLUTE( _ovl_Boss_MoSegmentDataEnd - _ovl_Boss_MoSegmentDataStart );
        _ovl_Boss_MoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Boss_Mo/z_boss_mo.o (.rodata)
            build/data/overlays/actors/z_boss_mo.data.o (.rodata)
            build/data/overlays/actors/z_boss_mo.bss.o (.rodata)
            build/data/overlays/actors/z_boss_mo.reloc.o (.rodata)
        _ovl_Boss_MoSegmentRoDataEnd = .;
    _ovl_Boss_MoSegmentRoDataSize = ABSOLUTE( _ovl_Boss_MoSegmentRoDataEnd - _ovl_Boss_MoSegmentRoDataStart );
        _ovl_Boss_MoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Boss_Mo/z_boss_mo.o (.sdata)
            build/data/overlays/actors/z_boss_mo.data.o (.sdata)
            build/data/overlays/actors/z_boss_mo.bss.o (.sdata)
            build/data/overlays/actors/z_boss_mo.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Boss_MoSegmentSDataEnd = .;
        _ovl_Boss_MoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Boss_Mo/z_boss_mo.o (.ovl)
            build/data/overlays/actors/z_boss_mo.data.o (.ovl)
            build/data/overlays/actors/z_boss_mo.bss.o (.ovl)
            build/data/overlays/actors/z_boss_mo.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Boss_MoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Boss_MoSegmentOvlEnd - _ovl_Boss_MoSegmentTextStart );
    _ovl_Boss_MoSegmentRomEnd = _RomSize;

    ..ovl_Boss_Mo.bss ADDR(..ovl_Boss_Mo) + SIZEOF(..ovl_Boss_Mo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Boss_MoSegmentBssStart = .;
            build/src/overlays/actors/ovl_Boss_Mo/z_boss_mo.o (.sbss)
            build/data/overlays/actors/z_boss_mo.data.o (.sbss)
            build/data/overlays/actors/z_boss_mo.bss.o (.sbss)
            build/data/overlays/actors/z_boss_mo.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Boss_Mo/z_boss_mo.o (.scommon)
            build/data/overlays/actors/z_boss_mo.data.o (.scommon)
            build/data/overlays/actors/z_boss_mo.bss.o (.scommon)
            build/data/overlays/actors/z_boss_mo.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Boss_Mo/z_boss_mo.o (.bss)
            build/data/overlays/actors/z_boss_mo.data.o (.bss)
            build/data/overlays/actors/z_boss_mo.bss.o (.bss)
            build/data/overlays/actors/z_boss_mo.reloc.o (.bss)
            build/src/overlays/actors/ovl_Boss_Mo/z_boss_mo.o (COMMON)
            build/data/overlays/actors/z_boss_mo.data.o (COMMON)
            build/data/overlays/actors/z_boss_mo.bss.o (COMMON)
            build/data/overlays/actors/z_boss_mo.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Boss_MoSegmentBssEnd = .;
        _ovl_Boss_MoSegmentEnd = .;
    }
    _ovl_Boss_MoSegmentBssSize = ABSOLUTE( _ovl_Boss_MoSegmentBssEnd - _ovl_Boss_MoSegmentBssStart );

    _ovl_Boss_SstSegmentRomStart = _RomSize;
    ..ovl_Boss_Sst : AT(_RomSize)
    {
        _ovl_Boss_SstSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Boss_SstSegmentTextStart = .;
            build/src/overlays/actors/ovl_Boss_Sst/z_boss_sst.o (.text)
            build/data/overlays/actors/z_boss_sst.data.o (.text)
            build/data/overlays/actors/z_boss_sst.bss.o (.text)
            build/data/overlays/actors/z_boss_sst.reloc.o (.text)
        _ovl_Boss_SstSegmentTextEnd = .;
    _ovl_Boss_SstSegmentTextSize = ABSOLUTE( _ovl_Boss_SstSegmentTextEnd - _ovl_Boss_SstSegmentTextStart );
        _ovl_Boss_SstSegmentDataStart = .;
            build/src/overlays/actors/ovl_Boss_Sst/z_boss_sst.o (.data)
            build/data/overlays/actors/z_boss_sst.data.o (.data)
            build/data/overlays/actors/z_boss_sst.bss.o (.data)
            build/data/overlays/actors/z_boss_sst.reloc.o (.data)
        _ovl_Boss_SstSegmentDataEnd = .;
    _ovl_Boss_SstSegmentDataSize = ABSOLUTE( _ovl_Boss_SstSegmentDataEnd - _ovl_Boss_SstSegmentDataStart );
        _ovl_Boss_SstSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Boss_Sst/z_boss_sst.o (.rodata)
            build/data/overlays/actors/z_boss_sst.data.o (.rodata)
            build/data/overlays/actors/z_boss_sst.bss.o (.rodata)
            build/data/overlays/actors/z_boss_sst.reloc.o (.rodata)
        _ovl_Boss_SstSegmentRoDataEnd = .;
    _ovl_Boss_SstSegmentRoDataSize = ABSOLUTE( _ovl_Boss_SstSegmentRoDataEnd - _ovl_Boss_SstSegmentRoDataStart );
        _ovl_Boss_SstSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Boss_Sst/z_boss_sst.o (.sdata)
            build/data/overlays/actors/z_boss_sst.data.o (.sdata)
            build/data/overlays/actors/z_boss_sst.bss.o (.sdata)
            build/data/overlays/actors/z_boss_sst.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Boss_SstSegmentSDataEnd = .;
        _ovl_Boss_SstSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Boss_Sst/z_boss_sst.o (.ovl)
            build/data/overlays/actors/z_boss_sst.data.o (.ovl)
            build/data/overlays/actors/z_boss_sst.bss.o (.ovl)
            build/data/overlays/actors/z_boss_sst.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Boss_SstSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Boss_SstSegmentOvlEnd - _ovl_Boss_SstSegmentTextStart );
    _ovl_Boss_SstSegmentRomEnd = _RomSize;

    ..ovl_Boss_Sst.bss ADDR(..ovl_Boss_Sst) + SIZEOF(..ovl_Boss_Sst) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Boss_SstSegmentBssStart = .;
            build/src/overlays/actors/ovl_Boss_Sst/z_boss_sst.o (.sbss)
            build/data/overlays/actors/z_boss_sst.data.o (.sbss)
            build/data/overlays/actors/z_boss_sst.bss.o (.sbss)
            build/data/overlays/actors/z_boss_sst.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Boss_Sst/z_boss_sst.o (.scommon)
            build/data/overlays/actors/z_boss_sst.data.o (.scommon)
            build/data/overlays/actors/z_boss_sst.bss.o (.scommon)
            build/data/overlays/actors/z_boss_sst.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Boss_Sst/z_boss_sst.o (.bss)
            build/data/overlays/actors/z_boss_sst.data.o (.bss)
            build/data/overlays/actors/z_boss_sst.bss.o (.bss)
            build/data/overlays/actors/z_boss_sst.reloc.o (.bss)
            build/src/overlays/actors/ovl_Boss_Sst/z_boss_sst.o (COMMON)
            build/data/overlays/actors/z_boss_sst.data.o (COMMON)
            build/data/overlays/actors/z_boss_sst.bss.o (COMMON)
            build/data/overlays/actors/z_boss_sst.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Boss_SstSegmentBssEnd = .;
        _ovl_Boss_SstSegmentEnd = .;
    }
    _ovl_Boss_SstSegmentBssSize = ABSOLUTE( _ovl_Boss_SstSegmentBssEnd - _ovl_Boss_SstSegmentBssStart );

    _ovl_Boss_TwSegmentRomStart = _RomSize;
    ..ovl_Boss_Tw : AT(_RomSize)
    {
        _ovl_Boss_TwSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Boss_TwSegmentTextStart = .;
            build/src/overlays/actors/ovl_Boss_Tw/z_boss_tw.o (.text)
            build/data/overlays/actors/z_boss_tw.data.o (.text)
            build/data/overlays/actors/z_boss_tw.bss.o (.text)
            build/data/overlays/actors/z_boss_tw.reloc.o (.text)
        _ovl_Boss_TwSegmentTextEnd = .;
    _ovl_Boss_TwSegmentTextSize = ABSOLUTE( _ovl_Boss_TwSegmentTextEnd - _ovl_Boss_TwSegmentTextStart );
        _ovl_Boss_TwSegmentDataStart = .;
            build/src/overlays/actors/ovl_Boss_Tw/z_boss_tw.o (.data)
            build/data/overlays/actors/z_boss_tw.data.o (.data)
            build/data/overlays/actors/z_boss_tw.bss.o (.data)
            build/data/overlays/actors/z_boss_tw.reloc.o (.data)
        _ovl_Boss_TwSegmentDataEnd = .;
    _ovl_Boss_TwSegmentDataSize = ABSOLUTE( _ovl_Boss_TwSegmentDataEnd - _ovl_Boss_TwSegmentDataStart );
        _ovl_Boss_TwSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Boss_Tw/z_boss_tw.o (.rodata)
            build/data/overlays/actors/z_boss_tw.data.o (.rodata)
            build/data/overlays/actors/z_boss_tw.bss.o (.rodata)
            build/data/overlays/actors/z_boss_tw.reloc.o (.rodata)
        _ovl_Boss_TwSegmentRoDataEnd = .;
    _ovl_Boss_TwSegmentRoDataSize = ABSOLUTE( _ovl_Boss_TwSegmentRoDataEnd - _ovl_Boss_TwSegmentRoDataStart );
        _ovl_Boss_TwSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Boss_Tw/z_boss_tw.o (.sdata)
            build/data/overlays/actors/z_boss_tw.data.o (.sdata)
            build/data/overlays/actors/z_boss_tw.bss.o (.sdata)
            build/data/overlays/actors/z_boss_tw.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Boss_TwSegmentSDataEnd = .;
        _ovl_Boss_TwSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Boss_Tw/z_boss_tw.o (.ovl)
            build/data/overlays/actors/z_boss_tw.data.o (.ovl)
            build/data/overlays/actors/z_boss_tw.bss.o (.ovl)
            build/data/overlays/actors/z_boss_tw.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Boss_TwSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Boss_TwSegmentOvlEnd - _ovl_Boss_TwSegmentTextStart );
    _ovl_Boss_TwSegmentRomEnd = _RomSize;

    ..ovl_Boss_Tw.bss ADDR(..ovl_Boss_Tw) + SIZEOF(..ovl_Boss_Tw) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Boss_TwSegmentBssStart = .;
            build/src/overlays/actors/ovl_Boss_Tw/z_boss_tw.o (.sbss)
            build/data/overlays/actors/z_boss_tw.data.o (.sbss)
            build/data/overlays/actors/z_boss_tw.bss.o (.sbss)
            build/data/overlays/actors/z_boss_tw.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Boss_Tw/z_boss_tw.o (.scommon)
            build/data/overlays/actors/z_boss_tw.data.o (.scommon)
            build/data/overlays/actors/z_boss_tw.bss.o (.scommon)
            build/data/overlays/actors/z_boss_tw.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Boss_Tw/z_boss_tw.o (.bss)
            build/data/overlays/actors/z_boss_tw.data.o (.bss)
            build/data/overlays/actors/z_boss_tw.bss.o (.bss)
            build/data/overlays/actors/z_boss_tw.reloc.o (.bss)
            build/src/overlays/actors/ovl_Boss_Tw/z_boss_tw.o (COMMON)
            build/data/overlays/actors/z_boss_tw.data.o (COMMON)
            build/data/overlays/actors/z_boss_tw.bss.o (COMMON)
            build/data/overlays/actors/z_boss_tw.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Boss_TwSegmentBssEnd = .;
        _ovl_Boss_TwSegmentEnd = .;
    }
    _ovl_Boss_TwSegmentBssSize = ABSOLUTE( _ovl_Boss_TwSegmentBssEnd - _ovl_Boss_TwSegmentBssStart );

    _ovl_Boss_VaSegmentRomStart = _RomSize;
    ..ovl_Boss_Va : AT(_RomSize)
    {
        _ovl_Boss_VaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Boss_VaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Boss_Va/z_boss_va.o (.text)
            build/data/overlays/actors/z_boss_va.data.o (.text)
            build/data/overlays/actors/z_boss_va.bss.o (.text)
            build/data/overlays/actors/z_boss_va.reloc.o (.text)
        _ovl_Boss_VaSegmentTextEnd = .;
    _ovl_Boss_VaSegmentTextSize = ABSOLUTE( _ovl_Boss_VaSegmentTextEnd - _ovl_Boss_VaSegmentTextStart );
        _ovl_Boss_VaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Boss_Va/z_boss_va.o (.data)
            build/data/overlays/actors/z_boss_va.data.o (.data)
            build/data/overlays/actors/z_boss_va.bss.o (.data)
            build/data/overlays/actors/z_boss_va.reloc.o (.data)
        _ovl_Boss_VaSegmentDataEnd = .;
    _ovl_Boss_VaSegmentDataSize = ABSOLUTE( _ovl_Boss_VaSegmentDataEnd - _ovl_Boss_VaSegmentDataStart );
        _ovl_Boss_VaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Boss_Va/z_boss_va.o (.rodata)
            build/data/overlays/actors/z_boss_va.data.o (.rodata)
            build/data/overlays/actors/z_boss_va.bss.o (.rodata)
            build/data/overlays/actors/z_boss_va.reloc.o (.rodata)
        _ovl_Boss_VaSegmentRoDataEnd = .;
    _ovl_Boss_VaSegmentRoDataSize = ABSOLUTE( _ovl_Boss_VaSegmentRoDataEnd - _ovl_Boss_VaSegmentRoDataStart );
        _ovl_Boss_VaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Boss_Va/z_boss_va.o (.sdata)
            build/data/overlays/actors/z_boss_va.data.o (.sdata)
            build/data/overlays/actors/z_boss_va.bss.o (.sdata)
            build/data/overlays/actors/z_boss_va.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Boss_VaSegmentSDataEnd = .;
        _ovl_Boss_VaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Boss_Va/z_boss_va.o (.ovl)
            build/data/overlays/actors/z_boss_va.data.o (.ovl)
            build/data/overlays/actors/z_boss_va.bss.o (.ovl)
            build/data/overlays/actors/z_boss_va.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Boss_VaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Boss_VaSegmentOvlEnd - _ovl_Boss_VaSegmentTextStart );
    _ovl_Boss_VaSegmentRomEnd = _RomSize;

    ..ovl_Boss_Va.bss ADDR(..ovl_Boss_Va) + SIZEOF(..ovl_Boss_Va) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Boss_VaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Boss_Va/z_boss_va.o (.sbss)
            build/data/overlays/actors/z_boss_va.data.o (.sbss)
            build/data/overlays/actors/z_boss_va.bss.o (.sbss)
            build/data/overlays/actors/z_boss_va.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Boss_Va/z_boss_va.o (.scommon)
            build/data/overlays/actors/z_boss_va.data.o (.scommon)
            build/data/overlays/actors/z_boss_va.bss.o (.scommon)
            build/data/overlays/actors/z_boss_va.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Boss_Va/z_boss_va.o (.bss)
            build/data/overlays/actors/z_boss_va.data.o (.bss)
            build/data/overlays/actors/z_boss_va.bss.o (.bss)
            build/data/overlays/actors/z_boss_va.reloc.o (.bss)
            build/src/overlays/actors/ovl_Boss_Va/z_boss_va.o (COMMON)
            build/data/overlays/actors/z_boss_va.data.o (COMMON)
            build/data/overlays/actors/z_boss_va.bss.o (COMMON)
            build/data/overlays/actors/z_boss_va.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Boss_VaSegmentBssEnd = .;
        _ovl_Boss_VaSegmentEnd = .;
    }
    _ovl_Boss_VaSegmentBssSize = ABSOLUTE( _ovl_Boss_VaSegmentBssEnd - _ovl_Boss_VaSegmentBssStart );

    _ovl_Demo_6KSegmentRomStart = _RomSize;
    ..ovl_Demo_6K : AT(_RomSize)
    {
        _ovl_Demo_6KSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_6KSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_6K/z_demo_6k.o (.text)
            build/data/overlays/actors/z_demo_6k.data.o (.text)
            build/data/overlays/actors/z_demo_6k.reloc.o (.text)
        _ovl_Demo_6KSegmentTextEnd = .;
    _ovl_Demo_6KSegmentTextSize = ABSOLUTE( _ovl_Demo_6KSegmentTextEnd - _ovl_Demo_6KSegmentTextStart );
        _ovl_Demo_6KSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_6K/z_demo_6k.o (.data)
            build/data/overlays/actors/z_demo_6k.data.o (.data)
            build/data/overlays/actors/z_demo_6k.reloc.o (.data)
        _ovl_Demo_6KSegmentDataEnd = .;
    _ovl_Demo_6KSegmentDataSize = ABSOLUTE( _ovl_Demo_6KSegmentDataEnd - _ovl_Demo_6KSegmentDataStart );
        _ovl_Demo_6KSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_6K/z_demo_6k.o (.rodata)
            build/data/overlays/actors/z_demo_6k.data.o (.rodata)
            build/data/overlays/actors/z_demo_6k.reloc.o (.rodata)
        _ovl_Demo_6KSegmentRoDataEnd = .;
    _ovl_Demo_6KSegmentRoDataSize = ABSOLUTE( _ovl_Demo_6KSegmentRoDataEnd - _ovl_Demo_6KSegmentRoDataStart );
        _ovl_Demo_6KSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_6K/z_demo_6k.o (.sdata)
            build/data/overlays/actors/z_demo_6k.data.o (.sdata)
            build/data/overlays/actors/z_demo_6k.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_6KSegmentSDataEnd = .;
        _ovl_Demo_6KSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_6K/z_demo_6k.o (.ovl)
            build/data/overlays/actors/z_demo_6k.data.o (.ovl)
            build/data/overlays/actors/z_demo_6k.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_6KSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_6KSegmentOvlEnd - _ovl_Demo_6KSegmentTextStart );
    _ovl_Demo_6KSegmentRomEnd = _RomSize;

    ..ovl_Demo_6K.bss ADDR(..ovl_Demo_6K) + SIZEOF(..ovl_Demo_6K) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_6KSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_6K/z_demo_6k.o (.sbss)
            build/data/overlays/actors/z_demo_6k.data.o (.sbss)
            build/data/overlays/actors/z_demo_6k.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_6K/z_demo_6k.o (.scommon)
            build/data/overlays/actors/z_demo_6k.data.o (.scommon)
            build/data/overlays/actors/z_demo_6k.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_6K/z_demo_6k.o (.bss)
            build/data/overlays/actors/z_demo_6k.data.o (.bss)
            build/data/overlays/actors/z_demo_6k.reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_6K/z_demo_6k.o (COMMON)
            build/data/overlays/actors/z_demo_6k.data.o (COMMON)
            build/data/overlays/actors/z_demo_6k.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_6KSegmentBssEnd = .;
        _ovl_Demo_6KSegmentEnd = .;
    }
    _ovl_Demo_6KSegmentBssSize = ABSOLUTE( _ovl_Demo_6KSegmentBssEnd - _ovl_Demo_6KSegmentBssStart );

    _ovl_Demo_DuSegmentRomStart = _RomSize;
    ..ovl_Demo_Du : AT(_RomSize)
    {
        _ovl_Demo_DuSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_DuSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Du/z_demo_du.o (.text)
            build/data/overlays/actors/z_demo_du.data.o (.text)
            build/data/overlays/actors/z_demo_du.reloc.o (.text)
        _ovl_Demo_DuSegmentTextEnd = .;
    _ovl_Demo_DuSegmentTextSize = ABSOLUTE( _ovl_Demo_DuSegmentTextEnd - _ovl_Demo_DuSegmentTextStart );
        _ovl_Demo_DuSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Du/z_demo_du.o (.data)
            build/data/overlays/actors/z_demo_du.data.o (.data)
            build/data/overlays/actors/z_demo_du.reloc.o (.data)
        _ovl_Demo_DuSegmentDataEnd = .;
    _ovl_Demo_DuSegmentDataSize = ABSOLUTE( _ovl_Demo_DuSegmentDataEnd - _ovl_Demo_DuSegmentDataStart );
        _ovl_Demo_DuSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Du/z_demo_du.o (.rodata)
            build/data/overlays/actors/z_demo_du.data.o (.rodata)
            build/data/overlays/actors/z_demo_du.reloc.o (.rodata)
        _ovl_Demo_DuSegmentRoDataEnd = .;
    _ovl_Demo_DuSegmentRoDataSize = ABSOLUTE( _ovl_Demo_DuSegmentRoDataEnd - _ovl_Demo_DuSegmentRoDataStart );
        _ovl_Demo_DuSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Du/z_demo_du.o (.sdata)
            build/data/overlays/actors/z_demo_du.data.o (.sdata)
            build/data/overlays/actors/z_demo_du.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_DuSegmentSDataEnd = .;
        _ovl_Demo_DuSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Du/z_demo_du.o (.ovl)
            build/data/overlays/actors/z_demo_du.data.o (.ovl)
            build/data/overlays/actors/z_demo_du.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_DuSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_DuSegmentOvlEnd - _ovl_Demo_DuSegmentTextStart );
    _ovl_Demo_DuSegmentRomEnd = _RomSize;

    ..ovl_Demo_Du.bss ADDR(..ovl_Demo_Du) + SIZEOF(..ovl_Demo_Du) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_DuSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Du/z_demo_du.o (.sbss)
            build/data/overlays/actors/z_demo_du.data.o (.sbss)
            build/data/overlays/actors/z_demo_du.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Du/z_demo_du.o (.scommon)
            build/data/overlays/actors/z_demo_du.data.o (.scommon)
            build/data/overlays/actors/z_demo_du.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Du/z_demo_du.o (.bss)
            build/data/overlays/actors/z_demo_du.data.o (.bss)
            build/data/overlays/actors/z_demo_du.reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Du/z_demo_du.o (COMMON)
            build/data/overlays/actors/z_demo_du.data.o (COMMON)
            build/data/overlays/actors/z_demo_du.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_DuSegmentBssEnd = .;
        _ovl_Demo_DuSegmentEnd = .;
    }
    _ovl_Demo_DuSegmentBssSize = ABSOLUTE( _ovl_Demo_DuSegmentBssEnd - _ovl_Demo_DuSegmentBssStart );

    _ovl_Demo_EcSegmentRomStart = _RomSize;
    ..ovl_Demo_Ec : AT(_RomSize)
    {
        _ovl_Demo_EcSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_EcSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Ec/z_demo_ec.o (.text)
            build/data/overlays/actors/z_demo_ec.reloc.o (.text)
        _ovl_Demo_EcSegmentTextEnd = .;
    _ovl_Demo_EcSegmentTextSize = ABSOLUTE( _ovl_Demo_EcSegmentTextEnd - _ovl_Demo_EcSegmentTextStart );
        _ovl_Demo_EcSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Ec/z_demo_ec.o (.data)
            build/data/overlays/actors/z_demo_ec.reloc.o (.data)
        _ovl_Demo_EcSegmentDataEnd = .;
    _ovl_Demo_EcSegmentDataSize = ABSOLUTE( _ovl_Demo_EcSegmentDataEnd - _ovl_Demo_EcSegmentDataStart );
        _ovl_Demo_EcSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Ec/z_demo_ec.o (.rodata)
            build/data/overlays/actors/z_demo_ec.reloc.o (.rodata)
        _ovl_Demo_EcSegmentRoDataEnd = .;
    _ovl_Demo_EcSegmentRoDataSize = ABSOLUTE( _ovl_Demo_EcSegmentRoDataEnd - _ovl_Demo_EcSegmentRoDataStart );
        _ovl_Demo_EcSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Ec/z_demo_ec.o (.sdata)
            build/data/overlays/actors/z_demo_ec.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_EcSegmentSDataEnd = .;
        _ovl_Demo_EcSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Ec/z_demo_ec.o (.ovl)
            build/data/overlays/actors/z_demo_ec.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_EcSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_EcSegmentOvlEnd - _ovl_Demo_EcSegmentTextStart );
    _ovl_Demo_EcSegmentRomEnd = _RomSize;

    ..ovl_Demo_Ec.bss ADDR(..ovl_Demo_Ec) + SIZEOF(..ovl_Demo_Ec) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_EcSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Ec/z_demo_ec.o (.sbss)
            build/data/overlays/actors/z_demo_ec.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Ec/z_demo_ec.o (.scommon)
            build/data/overlays/actors/z_demo_ec.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Ec/z_demo_ec.o (.bss)
            build/data/overlays/actors/z_demo_ec.reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Ec/z_demo_ec.o (COMMON)
            build/data/overlays/actors/z_demo_ec.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_EcSegmentBssEnd = .;
        _ovl_Demo_EcSegmentEnd = .;
    }
    _ovl_Demo_EcSegmentBssSize = ABSOLUTE( _ovl_Demo_EcSegmentBssEnd - _ovl_Demo_EcSegmentBssStart );

    _ovl_Demo_EffectSegmentRomStart = _RomSize;
    ..ovl_Demo_Effect : AT(_RomSize)
    {
        _ovl_Demo_EffectSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_EffectSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Effect/z_demo_effect.o (.text)
            build/data/overlays/actors/z_demo_effect.data.o (.text)
            build/data/overlays/actors/z_demo_effect.reloc.o (.text)
        _ovl_Demo_EffectSegmentTextEnd = .;
    _ovl_Demo_EffectSegmentTextSize = ABSOLUTE( _ovl_Demo_EffectSegmentTextEnd - _ovl_Demo_EffectSegmentTextStart );
        _ovl_Demo_EffectSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Effect/z_demo_effect.o (.data)
            build/data/overlays/actors/z_demo_effect.data.o (.data)
            build/data/overlays/actors/z_demo_effect.reloc.o (.data)
        _ovl_Demo_EffectSegmentDataEnd = .;
    _ovl_Demo_EffectSegmentDataSize = ABSOLUTE( _ovl_Demo_EffectSegmentDataEnd - _ovl_Demo_EffectSegmentDataStart );
        _ovl_Demo_EffectSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Effect/z_demo_effect.o (.rodata)
            build/data/overlays/actors/z_demo_effect.data.o (.rodata)
            build/data/overlays/actors/z_demo_effect.reloc.o (.rodata)
        _ovl_Demo_EffectSegmentRoDataEnd = .;
    _ovl_Demo_EffectSegmentRoDataSize = ABSOLUTE( _ovl_Demo_EffectSegmentRoDataEnd - _ovl_Demo_EffectSegmentRoDataStart );
        _ovl_Demo_EffectSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Effect/z_demo_effect.o (.sdata)
            build/data/overlays/actors/z_demo_effect.data.o (.sdata)
            build/data/overlays/actors/z_demo_effect.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_EffectSegmentSDataEnd = .;
        _ovl_Demo_EffectSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Effect/z_demo_effect.o (.ovl)
            build/data/overlays/actors/z_demo_effect.data.o (.ovl)
            build/data/overlays/actors/z_demo_effect.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_EffectSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_EffectSegmentOvlEnd - _ovl_Demo_EffectSegmentTextStart );
    _ovl_Demo_EffectSegmentRomEnd = _RomSize;

    ..ovl_Demo_Effect.bss ADDR(..ovl_Demo_Effect) + SIZEOF(..ovl_Demo_Effect) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_EffectSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Effect/z_demo_effect.o (.sbss)
            build/data/overlays/actors/z_demo_effect.data.o (.sbss)
            build/data/overlays/actors/z_demo_effect.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Effect/z_demo_effect.o (.scommon)
            build/data/overlays/actors/z_demo_effect.data.o (.scommon)
            build/data/overlays/actors/z_demo_effect.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Effect/z_demo_effect.o (.bss)
            build/data/overlays/actors/z_demo_effect.data.o (.bss)
            build/data/overlays/actors/z_demo_effect.reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Effect/z_demo_effect.o (COMMON)
            build/data/overlays/actors/z_demo_effect.data.o (COMMON)
            build/data/overlays/actors/z_demo_effect.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_EffectSegmentBssEnd = .;
        _ovl_Demo_EffectSegmentEnd = .;
    }
    _ovl_Demo_EffectSegmentBssSize = ABSOLUTE( _ovl_Demo_EffectSegmentBssEnd - _ovl_Demo_EffectSegmentBssStart );

    _ovl_Demo_ExtSegmentRomStart = _RomSize;
    ..ovl_Demo_Ext : AT(_RomSize)
    {
        _ovl_Demo_ExtSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_ExtSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Ext/z_demo_ext.o (.text)
            build/data/overlays/actors/z_demo_ext.data.o (.text)
            build/data/overlays/actors/z_demo_ext.reloc.o (.text)
        _ovl_Demo_ExtSegmentTextEnd = .;
    _ovl_Demo_ExtSegmentTextSize = ABSOLUTE( _ovl_Demo_ExtSegmentTextEnd - _ovl_Demo_ExtSegmentTextStart );
        _ovl_Demo_ExtSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Ext/z_demo_ext.o (.data)
            build/data/overlays/actors/z_demo_ext.data.o (.data)
            build/data/overlays/actors/z_demo_ext.reloc.o (.data)
        _ovl_Demo_ExtSegmentDataEnd = .;
    _ovl_Demo_ExtSegmentDataSize = ABSOLUTE( _ovl_Demo_ExtSegmentDataEnd - _ovl_Demo_ExtSegmentDataStart );
        _ovl_Demo_ExtSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Ext/z_demo_ext.o (.rodata)
            build/data/overlays/actors/z_demo_ext.data.o (.rodata)
            build/data/overlays/actors/z_demo_ext.reloc.o (.rodata)
        _ovl_Demo_ExtSegmentRoDataEnd = .;
    _ovl_Demo_ExtSegmentRoDataSize = ABSOLUTE( _ovl_Demo_ExtSegmentRoDataEnd - _ovl_Demo_ExtSegmentRoDataStart );
        _ovl_Demo_ExtSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Ext/z_demo_ext.o (.sdata)
            build/data/overlays/actors/z_demo_ext.data.o (.sdata)
            build/data/overlays/actors/z_demo_ext.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_ExtSegmentSDataEnd = .;
        _ovl_Demo_ExtSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Ext/z_demo_ext.o (.ovl)
            build/data/overlays/actors/z_demo_ext.data.o (.ovl)
            build/data/overlays/actors/z_demo_ext.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_ExtSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_ExtSegmentOvlEnd - _ovl_Demo_ExtSegmentTextStart );
    _ovl_Demo_ExtSegmentRomEnd = _RomSize;

    ..ovl_Demo_Ext.bss ADDR(..ovl_Demo_Ext) + SIZEOF(..ovl_Demo_Ext) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_ExtSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Ext/z_demo_ext.o (.sbss)
            build/data/overlays/actors/z_demo_ext.data.o (.sbss)
            build/data/overlays/actors/z_demo_ext.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Ext/z_demo_ext.o (.scommon)
            build/data/overlays/actors/z_demo_ext.data.o (.scommon)
            build/data/overlays/actors/z_demo_ext.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Ext/z_demo_ext.o (.bss)
            build/data/overlays/actors/z_demo_ext.data.o (.bss)
            build/data/overlays/actors/z_demo_ext.reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Ext/z_demo_ext.o (COMMON)
            build/data/overlays/actors/z_demo_ext.data.o (COMMON)
            build/data/overlays/actors/z_demo_ext.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_ExtSegmentBssEnd = .;
        _ovl_Demo_ExtSegmentEnd = .;
    }
    _ovl_Demo_ExtSegmentBssSize = ABSOLUTE( _ovl_Demo_ExtSegmentBssEnd - _ovl_Demo_ExtSegmentBssStart );

    _ovl_Demo_GeffSegmentRomStart = _RomSize;
    ..ovl_Demo_Geff : AT(_RomSize)
    {
        _ovl_Demo_GeffSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_GeffSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Geff/z_demo_geff.o (.text)
            build/src/overlays/actors/ovl_Demo_Geff/ovl_Demo_Geff_reloc.o (.text)
        _ovl_Demo_GeffSegmentTextEnd = .;
    _ovl_Demo_GeffSegmentTextSize = ABSOLUTE( _ovl_Demo_GeffSegmentTextEnd - _ovl_Demo_GeffSegmentTextStart );
        _ovl_Demo_GeffSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Geff/z_demo_geff.o (.data)
            build/src/overlays/actors/ovl_Demo_Geff/ovl_Demo_Geff_reloc.o (.data)
        _ovl_Demo_GeffSegmentDataEnd = .;
    _ovl_Demo_GeffSegmentDataSize = ABSOLUTE( _ovl_Demo_GeffSegmentDataEnd - _ovl_Demo_GeffSegmentDataStart );
        _ovl_Demo_GeffSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Geff/z_demo_geff.o (.rodata)
            build/src/overlays/actors/ovl_Demo_Geff/ovl_Demo_Geff_reloc.o (.rodata)
        _ovl_Demo_GeffSegmentRoDataEnd = .;
    _ovl_Demo_GeffSegmentRoDataSize = ABSOLUTE( _ovl_Demo_GeffSegmentRoDataEnd - _ovl_Demo_GeffSegmentRoDataStart );
        _ovl_Demo_GeffSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Geff/z_demo_geff.o (.sdata)
            build/src/overlays/actors/ovl_Demo_Geff/ovl_Demo_Geff_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_GeffSegmentSDataEnd = .;
        _ovl_Demo_GeffSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Geff/z_demo_geff.o (.ovl)
            build/src/overlays/actors/ovl_Demo_Geff/ovl_Demo_Geff_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_GeffSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_GeffSegmentOvlEnd - _ovl_Demo_GeffSegmentTextStart );
    _ovl_Demo_GeffSegmentRomEnd = _RomSize;

    ..ovl_Demo_Geff.bss ADDR(..ovl_Demo_Geff) + SIZEOF(..ovl_Demo_Geff) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_GeffSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Geff/z_demo_geff.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Geff/ovl_Demo_Geff_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Geff/z_demo_geff.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Geff/ovl_Demo_Geff_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Geff/z_demo_geff.o (.bss)
            build/src/overlays/actors/ovl_Demo_Geff/ovl_Demo_Geff_reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Geff/z_demo_geff.o (COMMON)
            build/src/overlays/actors/ovl_Demo_Geff/ovl_Demo_Geff_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_GeffSegmentBssEnd = .;
        _ovl_Demo_GeffSegmentEnd = .;
    }
    _ovl_Demo_GeffSegmentBssSize = ABSOLUTE( _ovl_Demo_GeffSegmentBssEnd - _ovl_Demo_GeffSegmentBssStart );

    _ovl_Demo_GjSegmentRomStart = _RomSize;
    ..ovl_Demo_Gj : AT(_RomSize)
    {
        _ovl_Demo_GjSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_GjSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Gj/z_demo_gj.o (.text)
            build/data/overlays/actors/z_demo_gj.data.o (.text)
            build/data/overlays/actors/z_demo_gj.reloc.o (.text)
        _ovl_Demo_GjSegmentTextEnd = .;
    _ovl_Demo_GjSegmentTextSize = ABSOLUTE( _ovl_Demo_GjSegmentTextEnd - _ovl_Demo_GjSegmentTextStart );
        _ovl_Demo_GjSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Gj/z_demo_gj.o (.data)
            build/data/overlays/actors/z_demo_gj.data.o (.data)
            build/data/overlays/actors/z_demo_gj.reloc.o (.data)
        _ovl_Demo_GjSegmentDataEnd = .;
    _ovl_Demo_GjSegmentDataSize = ABSOLUTE( _ovl_Demo_GjSegmentDataEnd - _ovl_Demo_GjSegmentDataStart );
        _ovl_Demo_GjSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Gj/z_demo_gj.o (.rodata)
            build/data/overlays/actors/z_demo_gj.data.o (.rodata)
            build/data/overlays/actors/z_demo_gj.reloc.o (.rodata)
        _ovl_Demo_GjSegmentRoDataEnd = .;
    _ovl_Demo_GjSegmentRoDataSize = ABSOLUTE( _ovl_Demo_GjSegmentRoDataEnd - _ovl_Demo_GjSegmentRoDataStart );
        _ovl_Demo_GjSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Gj/z_demo_gj.o (.sdata)
            build/data/overlays/actors/z_demo_gj.data.o (.sdata)
            build/data/overlays/actors/z_demo_gj.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_GjSegmentSDataEnd = .;
        _ovl_Demo_GjSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Gj/z_demo_gj.o (.ovl)
            build/data/overlays/actors/z_demo_gj.data.o (.ovl)
            build/data/overlays/actors/z_demo_gj.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_GjSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_GjSegmentOvlEnd - _ovl_Demo_GjSegmentTextStart );
    _ovl_Demo_GjSegmentRomEnd = _RomSize;

    ..ovl_Demo_Gj.bss ADDR(..ovl_Demo_Gj) + SIZEOF(..ovl_Demo_Gj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_GjSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Gj/z_demo_gj.o (.sbss)
            build/data/overlays/actors/z_demo_gj.data.o (.sbss)
            build/data/overlays/actors/z_demo_gj.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Gj/z_demo_gj.o (.scommon)
            build/data/overlays/actors/z_demo_gj.data.o (.scommon)
            build/data/overlays/actors/z_demo_gj.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Gj/z_demo_gj.o (.bss)
            build/data/overlays/actors/z_demo_gj.data.o (.bss)
            build/data/overlays/actors/z_demo_gj.reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Gj/z_demo_gj.o (COMMON)
            build/data/overlays/actors/z_demo_gj.data.o (COMMON)
            build/data/overlays/actors/z_demo_gj.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_GjSegmentBssEnd = .;
        _ovl_Demo_GjSegmentEnd = .;
    }
    _ovl_Demo_GjSegmentBssSize = ABSOLUTE( _ovl_Demo_GjSegmentBssEnd - _ovl_Demo_GjSegmentBssStart );

    _ovl_Demo_GoSegmentRomStart = _RomSize;
    ..ovl_Demo_Go : AT(_RomSize)
    {
        _ovl_Demo_GoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_GoSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Go/z_demo_go.o (.text)
            build/src/overlays/actors/ovl_Demo_Go/ovl_Demo_Go_reloc.o (.text)
        _ovl_Demo_GoSegmentTextEnd = .;
    _ovl_Demo_GoSegmentTextSize = ABSOLUTE( _ovl_Demo_GoSegmentTextEnd - _ovl_Demo_GoSegmentTextStart );
        _ovl_Demo_GoSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Go/z_demo_go.o (.data)
            build/src/overlays/actors/ovl_Demo_Go/ovl_Demo_Go_reloc.o (.data)
        _ovl_Demo_GoSegmentDataEnd = .;
    _ovl_Demo_GoSegmentDataSize = ABSOLUTE( _ovl_Demo_GoSegmentDataEnd - _ovl_Demo_GoSegmentDataStart );
        _ovl_Demo_GoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Go/z_demo_go.o (.rodata)
            build/src/overlays/actors/ovl_Demo_Go/ovl_Demo_Go_reloc.o (.rodata)
        _ovl_Demo_GoSegmentRoDataEnd = .;
    _ovl_Demo_GoSegmentRoDataSize = ABSOLUTE( _ovl_Demo_GoSegmentRoDataEnd - _ovl_Demo_GoSegmentRoDataStart );
        _ovl_Demo_GoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Go/z_demo_go.o (.sdata)
            build/src/overlays/actors/ovl_Demo_Go/ovl_Demo_Go_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_GoSegmentSDataEnd = .;
        _ovl_Demo_GoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Go/z_demo_go.o (.ovl)
            build/src/overlays/actors/ovl_Demo_Go/ovl_Demo_Go_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_GoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_GoSegmentOvlEnd - _ovl_Demo_GoSegmentTextStart );
    _ovl_Demo_GoSegmentRomEnd = _RomSize;

    ..ovl_Demo_Go.bss ADDR(..ovl_Demo_Go) + SIZEOF(..ovl_Demo_Go) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_GoSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Go/z_demo_go.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Go/ovl_Demo_Go_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Go/z_demo_go.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Go/ovl_Demo_Go_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Go/z_demo_go.o (.bss)
            build/src/overlays/actors/ovl_Demo_Go/ovl_Demo_Go_reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Go/z_demo_go.o (COMMON)
            build/src/overlays/actors/ovl_Demo_Go/ovl_Demo_Go_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_GoSegmentBssEnd = .;
        _ovl_Demo_GoSegmentEnd = .;
    }
    _ovl_Demo_GoSegmentBssSize = ABSOLUTE( _ovl_Demo_GoSegmentBssEnd - _ovl_Demo_GoSegmentBssStart );

    _ovl_Demo_GtSegmentRomStart = _RomSize;
    ..ovl_Demo_Gt : AT(_RomSize)
    {
        _ovl_Demo_GtSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_GtSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Gt/z_demo_gt.o (.text)
            build/data/overlays/actors/z_demo_gt.data.o (.text)
            build/data/overlays/actors/z_demo_gt.reloc.o (.text)
        _ovl_Demo_GtSegmentTextEnd = .;
    _ovl_Demo_GtSegmentTextSize = ABSOLUTE( _ovl_Demo_GtSegmentTextEnd - _ovl_Demo_GtSegmentTextStart );
        _ovl_Demo_GtSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Gt/z_demo_gt.o (.data)
            build/data/overlays/actors/z_demo_gt.data.o (.data)
            build/data/overlays/actors/z_demo_gt.reloc.o (.data)
        _ovl_Demo_GtSegmentDataEnd = .;
    _ovl_Demo_GtSegmentDataSize = ABSOLUTE( _ovl_Demo_GtSegmentDataEnd - _ovl_Demo_GtSegmentDataStart );
        _ovl_Demo_GtSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Gt/z_demo_gt.o (.rodata)
            build/data/overlays/actors/z_demo_gt.data.o (.rodata)
            build/data/overlays/actors/z_demo_gt.reloc.o (.rodata)
        _ovl_Demo_GtSegmentRoDataEnd = .;
    _ovl_Demo_GtSegmentRoDataSize = ABSOLUTE( _ovl_Demo_GtSegmentRoDataEnd - _ovl_Demo_GtSegmentRoDataStart );
        _ovl_Demo_GtSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Gt/z_demo_gt.o (.sdata)
            build/data/overlays/actors/z_demo_gt.data.o (.sdata)
            build/data/overlays/actors/z_demo_gt.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_GtSegmentSDataEnd = .;
        _ovl_Demo_GtSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Gt/z_demo_gt.o (.ovl)
            build/data/overlays/actors/z_demo_gt.data.o (.ovl)
            build/data/overlays/actors/z_demo_gt.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_GtSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_GtSegmentOvlEnd - _ovl_Demo_GtSegmentTextStart );
    _ovl_Demo_GtSegmentRomEnd = _RomSize;

    ..ovl_Demo_Gt.bss ADDR(..ovl_Demo_Gt) + SIZEOF(..ovl_Demo_Gt) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_GtSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Gt/z_demo_gt.o (.sbss)
            build/data/overlays/actors/z_demo_gt.data.o (.sbss)
            build/data/overlays/actors/z_demo_gt.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Gt/z_demo_gt.o (.scommon)
            build/data/overlays/actors/z_demo_gt.data.o (.scommon)
            build/data/overlays/actors/z_demo_gt.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Gt/z_demo_gt.o (.bss)
            build/data/overlays/actors/z_demo_gt.data.o (.bss)
            build/data/overlays/actors/z_demo_gt.reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Gt/z_demo_gt.o (COMMON)
            build/data/overlays/actors/z_demo_gt.data.o (COMMON)
            build/data/overlays/actors/z_demo_gt.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_GtSegmentBssEnd = .;
        _ovl_Demo_GtSegmentEnd = .;
    }
    _ovl_Demo_GtSegmentBssSize = ABSOLUTE( _ovl_Demo_GtSegmentBssEnd - _ovl_Demo_GtSegmentBssStart );

    _ovl_Demo_IkSegmentRomStart = _RomSize;
    ..ovl_Demo_Ik : AT(_RomSize)
    {
        _ovl_Demo_IkSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_IkSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Ik/z_demo_ik.o (.text)
            build/data/overlays/actors/z_demo_ik.data.o (.text)
            build/data/overlays/actors/z_demo_ik.reloc.o (.text)
        _ovl_Demo_IkSegmentTextEnd = .;
    _ovl_Demo_IkSegmentTextSize = ABSOLUTE( _ovl_Demo_IkSegmentTextEnd - _ovl_Demo_IkSegmentTextStart );
        _ovl_Demo_IkSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Ik/z_demo_ik.o (.data)
            build/data/overlays/actors/z_demo_ik.data.o (.data)
            build/data/overlays/actors/z_demo_ik.reloc.o (.data)
        _ovl_Demo_IkSegmentDataEnd = .;
    _ovl_Demo_IkSegmentDataSize = ABSOLUTE( _ovl_Demo_IkSegmentDataEnd - _ovl_Demo_IkSegmentDataStart );
        _ovl_Demo_IkSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Ik/z_demo_ik.o (.rodata)
            build/data/overlays/actors/z_demo_ik.data.o (.rodata)
            build/data/overlays/actors/z_demo_ik.reloc.o (.rodata)
        _ovl_Demo_IkSegmentRoDataEnd = .;
    _ovl_Demo_IkSegmentRoDataSize = ABSOLUTE( _ovl_Demo_IkSegmentRoDataEnd - _ovl_Demo_IkSegmentRoDataStart );
        _ovl_Demo_IkSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Ik/z_demo_ik.o (.sdata)
            build/data/overlays/actors/z_demo_ik.data.o (.sdata)
            build/data/overlays/actors/z_demo_ik.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_IkSegmentSDataEnd = .;
        _ovl_Demo_IkSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Ik/z_demo_ik.o (.ovl)
            build/data/overlays/actors/z_demo_ik.data.o (.ovl)
            build/data/overlays/actors/z_demo_ik.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_IkSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_IkSegmentOvlEnd - _ovl_Demo_IkSegmentTextStart );
    _ovl_Demo_IkSegmentRomEnd = _RomSize;

    ..ovl_Demo_Ik.bss ADDR(..ovl_Demo_Ik) + SIZEOF(..ovl_Demo_Ik) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_IkSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Ik/z_demo_ik.o (.sbss)
            build/data/overlays/actors/z_demo_ik.data.o (.sbss)
            build/data/overlays/actors/z_demo_ik.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Ik/z_demo_ik.o (.scommon)
            build/data/overlays/actors/z_demo_ik.data.o (.scommon)
            build/data/overlays/actors/z_demo_ik.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Ik/z_demo_ik.o (.bss)
            build/data/overlays/actors/z_demo_ik.data.o (.bss)
            build/data/overlays/actors/z_demo_ik.reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Ik/z_demo_ik.o (COMMON)
            build/data/overlays/actors/z_demo_ik.data.o (COMMON)
            build/data/overlays/actors/z_demo_ik.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_IkSegmentBssEnd = .;
        _ovl_Demo_IkSegmentEnd = .;
    }
    _ovl_Demo_IkSegmentBssSize = ABSOLUTE( _ovl_Demo_IkSegmentBssEnd - _ovl_Demo_IkSegmentBssStart );

    _ovl_Demo_ImSegmentRomStart = _RomSize;
    ..ovl_Demo_Im : AT(_RomSize)
    {
        _ovl_Demo_ImSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_ImSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Im/z_demo_im.o (.text)
            build/src/overlays/actors/ovl_Demo_Im/ovl_Demo_Im_reloc.o (.text)
        _ovl_Demo_ImSegmentTextEnd = .;
    _ovl_Demo_ImSegmentTextSize = ABSOLUTE( _ovl_Demo_ImSegmentTextEnd - _ovl_Demo_ImSegmentTextStart );
        _ovl_Demo_ImSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Im/z_demo_im.o (.data)
            build/src/overlays/actors/ovl_Demo_Im/ovl_Demo_Im_reloc.o (.data)
        _ovl_Demo_ImSegmentDataEnd = .;
    _ovl_Demo_ImSegmentDataSize = ABSOLUTE( _ovl_Demo_ImSegmentDataEnd - _ovl_Demo_ImSegmentDataStart );
        _ovl_Demo_ImSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Im/z_demo_im.o (.rodata)
            build/src/overlays/actors/ovl_Demo_Im/ovl_Demo_Im_reloc.o (.rodata)
        _ovl_Demo_ImSegmentRoDataEnd = .;
    _ovl_Demo_ImSegmentRoDataSize = ABSOLUTE( _ovl_Demo_ImSegmentRoDataEnd - _ovl_Demo_ImSegmentRoDataStart );
        _ovl_Demo_ImSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Im/z_demo_im.o (.sdata)
            build/src/overlays/actors/ovl_Demo_Im/ovl_Demo_Im_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_ImSegmentSDataEnd = .;
        _ovl_Demo_ImSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Im/z_demo_im.o (.ovl)
            build/src/overlays/actors/ovl_Demo_Im/ovl_Demo_Im_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_ImSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_ImSegmentOvlEnd - _ovl_Demo_ImSegmentTextStart );
    _ovl_Demo_ImSegmentRomEnd = _RomSize;

    ..ovl_Demo_Im.bss ADDR(..ovl_Demo_Im) + SIZEOF(..ovl_Demo_Im) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_ImSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Im/z_demo_im.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Im/ovl_Demo_Im_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Im/z_demo_im.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Im/ovl_Demo_Im_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Im/z_demo_im.o (.bss)
            build/src/overlays/actors/ovl_Demo_Im/ovl_Demo_Im_reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Im/z_demo_im.o (COMMON)
            build/src/overlays/actors/ovl_Demo_Im/ovl_Demo_Im_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_ImSegmentBssEnd = .;
        _ovl_Demo_ImSegmentEnd = .;
    }
    _ovl_Demo_ImSegmentBssSize = ABSOLUTE( _ovl_Demo_ImSegmentBssEnd - _ovl_Demo_ImSegmentBssStart );

    _ovl_Demo_KankyoSegmentRomStart = _RomSize;
    ..ovl_Demo_Kankyo : AT(_RomSize)
    {
        _ovl_Demo_KankyoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_KankyoSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Kankyo/z_demo_kankyo.o (.text)
            build/data/overlays/actors/z_demo_kankyo.data.o (.text)
            build/data/overlays/actors/z_demo_kankyo.bss.o (.text)
            build/data/overlays/actors/z_demo_kankyo.reloc.o (.text)
        _ovl_Demo_KankyoSegmentTextEnd = .;
    _ovl_Demo_KankyoSegmentTextSize = ABSOLUTE( _ovl_Demo_KankyoSegmentTextEnd - _ovl_Demo_KankyoSegmentTextStart );
        _ovl_Demo_KankyoSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Kankyo/z_demo_kankyo.o (.data)
            build/data/overlays/actors/z_demo_kankyo.data.o (.data)
            build/data/overlays/actors/z_demo_kankyo.bss.o (.data)
            build/data/overlays/actors/z_demo_kankyo.reloc.o (.data)
        _ovl_Demo_KankyoSegmentDataEnd = .;
    _ovl_Demo_KankyoSegmentDataSize = ABSOLUTE( _ovl_Demo_KankyoSegmentDataEnd - _ovl_Demo_KankyoSegmentDataStart );
        _ovl_Demo_KankyoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Kankyo/z_demo_kankyo.o (.rodata)
            build/data/overlays/actors/z_demo_kankyo.data.o (.rodata)
            build/data/overlays/actors/z_demo_kankyo.bss.o (.rodata)
            build/data/overlays/actors/z_demo_kankyo.reloc.o (.rodata)
        _ovl_Demo_KankyoSegmentRoDataEnd = .;
    _ovl_Demo_KankyoSegmentRoDataSize = ABSOLUTE( _ovl_Demo_KankyoSegmentRoDataEnd - _ovl_Demo_KankyoSegmentRoDataStart );
        _ovl_Demo_KankyoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Kankyo/z_demo_kankyo.o (.sdata)
            build/data/overlays/actors/z_demo_kankyo.data.o (.sdata)
            build/data/overlays/actors/z_demo_kankyo.bss.o (.sdata)
            build/data/overlays/actors/z_demo_kankyo.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_KankyoSegmentSDataEnd = .;
        _ovl_Demo_KankyoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Kankyo/z_demo_kankyo.o (.ovl)
            build/data/overlays/actors/z_demo_kankyo.data.o (.ovl)
            build/data/overlays/actors/z_demo_kankyo.bss.o (.ovl)
            build/data/overlays/actors/z_demo_kankyo.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_KankyoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_KankyoSegmentOvlEnd - _ovl_Demo_KankyoSegmentTextStart );
    _ovl_Demo_KankyoSegmentRomEnd = _RomSize;

    ..ovl_Demo_Kankyo.bss ADDR(..ovl_Demo_Kankyo) + SIZEOF(..ovl_Demo_Kankyo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_KankyoSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Kankyo/z_demo_kankyo.o (.sbss)
            build/data/overlays/actors/z_demo_kankyo.data.o (.sbss)
            build/data/overlays/actors/z_demo_kankyo.bss.o (.sbss)
            build/data/overlays/actors/z_demo_kankyo.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Kankyo/z_demo_kankyo.o (.scommon)
            build/data/overlays/actors/z_demo_kankyo.data.o (.scommon)
            build/data/overlays/actors/z_demo_kankyo.bss.o (.scommon)
            build/data/overlays/actors/z_demo_kankyo.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Kankyo/z_demo_kankyo.o (.bss)
            build/data/overlays/actors/z_demo_kankyo.data.o (.bss)
            build/data/overlays/actors/z_demo_kankyo.bss.o (.bss)
            build/data/overlays/actors/z_demo_kankyo.reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Kankyo/z_demo_kankyo.o (COMMON)
            build/data/overlays/actors/z_demo_kankyo.data.o (COMMON)
            build/data/overlays/actors/z_demo_kankyo.bss.o (COMMON)
            build/data/overlays/actors/z_demo_kankyo.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_KankyoSegmentBssEnd = .;
        _ovl_Demo_KankyoSegmentEnd = .;
    }
    _ovl_Demo_KankyoSegmentBssSize = ABSOLUTE( _ovl_Demo_KankyoSegmentBssEnd - _ovl_Demo_KankyoSegmentBssStart );

    _ovl_Demo_KekkaiSegmentRomStart = _RomSize;
    ..ovl_Demo_Kekkai : AT(_RomSize)
    {
        _ovl_Demo_KekkaiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_KekkaiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Kekkai/z_demo_kekkai.o (.text)
            build/data/overlays/actors/z_demo_kekkai.data.o (.text)
            build/data/overlays/actors/z_demo_kekkai.reloc.o (.text)
        _ovl_Demo_KekkaiSegmentTextEnd = .;
    _ovl_Demo_KekkaiSegmentTextSize = ABSOLUTE( _ovl_Demo_KekkaiSegmentTextEnd - _ovl_Demo_KekkaiSegmentTextStart );
        _ovl_Demo_KekkaiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Kekkai/z_demo_kekkai.o (.data)
            build/data/overlays/actors/z_demo_kekkai.data.o (.data)
            build/data/overlays/actors/z_demo_kekkai.reloc.o (.data)
        _ovl_Demo_KekkaiSegmentDataEnd = .;
    _ovl_Demo_KekkaiSegmentDataSize = ABSOLUTE( _ovl_Demo_KekkaiSegmentDataEnd - _ovl_Demo_KekkaiSegmentDataStart );
        _ovl_Demo_KekkaiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Kekkai/z_demo_kekkai.o (.rodata)
            build/data/overlays/actors/z_demo_kekkai.data.o (.rodata)
            build/data/overlays/actors/z_demo_kekkai.reloc.o (.rodata)
        _ovl_Demo_KekkaiSegmentRoDataEnd = .;
    _ovl_Demo_KekkaiSegmentRoDataSize = ABSOLUTE( _ovl_Demo_KekkaiSegmentRoDataEnd - _ovl_Demo_KekkaiSegmentRoDataStart );
        _ovl_Demo_KekkaiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Kekkai/z_demo_kekkai.o (.sdata)
            build/data/overlays/actors/z_demo_kekkai.data.o (.sdata)
            build/data/overlays/actors/z_demo_kekkai.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_KekkaiSegmentSDataEnd = .;
        _ovl_Demo_KekkaiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Kekkai/z_demo_kekkai.o (.ovl)
            build/data/overlays/actors/z_demo_kekkai.data.o (.ovl)
            build/data/overlays/actors/z_demo_kekkai.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_KekkaiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_KekkaiSegmentOvlEnd - _ovl_Demo_KekkaiSegmentTextStart );
    _ovl_Demo_KekkaiSegmentRomEnd = _RomSize;

    ..ovl_Demo_Kekkai.bss ADDR(..ovl_Demo_Kekkai) + SIZEOF(..ovl_Demo_Kekkai) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_KekkaiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Kekkai/z_demo_kekkai.o (.sbss)
            build/data/overlays/actors/z_demo_kekkai.data.o (.sbss)
            build/data/overlays/actors/z_demo_kekkai.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Kekkai/z_demo_kekkai.o (.scommon)
            build/data/overlays/actors/z_demo_kekkai.data.o (.scommon)
            build/data/overlays/actors/z_demo_kekkai.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Kekkai/z_demo_kekkai.o (.bss)
            build/data/overlays/actors/z_demo_kekkai.data.o (.bss)
            build/data/overlays/actors/z_demo_kekkai.reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Kekkai/z_demo_kekkai.o (COMMON)
            build/data/overlays/actors/z_demo_kekkai.data.o (COMMON)
            build/data/overlays/actors/z_demo_kekkai.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_KekkaiSegmentBssEnd = .;
        _ovl_Demo_KekkaiSegmentEnd = .;
    }
    _ovl_Demo_KekkaiSegmentBssSize = ABSOLUTE( _ovl_Demo_KekkaiSegmentBssEnd - _ovl_Demo_KekkaiSegmentBssStart );

    _ovl_Demo_SaSegmentRomStart = _RomSize;
    ..ovl_Demo_Sa : AT(_RomSize)
    {
        _ovl_Demo_SaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_SaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Sa/z_demo_sa.o (.text)
            build/src/overlays/actors/ovl_Demo_Sa/ovl_Demo_Sa_reloc.o (.text)
        _ovl_Demo_SaSegmentTextEnd = .;
    _ovl_Demo_SaSegmentTextSize = ABSOLUTE( _ovl_Demo_SaSegmentTextEnd - _ovl_Demo_SaSegmentTextStart );
        _ovl_Demo_SaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Sa/z_demo_sa.o (.data)
            build/src/overlays/actors/ovl_Demo_Sa/ovl_Demo_Sa_reloc.o (.data)
        _ovl_Demo_SaSegmentDataEnd = .;
    _ovl_Demo_SaSegmentDataSize = ABSOLUTE( _ovl_Demo_SaSegmentDataEnd - _ovl_Demo_SaSegmentDataStart );
        _ovl_Demo_SaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Sa/z_demo_sa.o (.rodata)
            build/src/overlays/actors/ovl_Demo_Sa/ovl_Demo_Sa_reloc.o (.rodata)
        _ovl_Demo_SaSegmentRoDataEnd = .;
    _ovl_Demo_SaSegmentRoDataSize = ABSOLUTE( _ovl_Demo_SaSegmentRoDataEnd - _ovl_Demo_SaSegmentRoDataStart );
        _ovl_Demo_SaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Sa/z_demo_sa.o (.sdata)
            build/src/overlays/actors/ovl_Demo_Sa/ovl_Demo_Sa_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_SaSegmentSDataEnd = .;
        _ovl_Demo_SaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Sa/z_demo_sa.o (.ovl)
            build/src/overlays/actors/ovl_Demo_Sa/ovl_Demo_Sa_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_SaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_SaSegmentOvlEnd - _ovl_Demo_SaSegmentTextStart );
    _ovl_Demo_SaSegmentRomEnd = _RomSize;

    ..ovl_Demo_Sa.bss ADDR(..ovl_Demo_Sa) + SIZEOF(..ovl_Demo_Sa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_SaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Sa/z_demo_sa.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Sa/ovl_Demo_Sa_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Sa/z_demo_sa.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Sa/ovl_Demo_Sa_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Sa/z_demo_sa.o (.bss)
            build/src/overlays/actors/ovl_Demo_Sa/ovl_Demo_Sa_reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Sa/z_demo_sa.o (COMMON)
            build/src/overlays/actors/ovl_Demo_Sa/ovl_Demo_Sa_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_SaSegmentBssEnd = .;
        _ovl_Demo_SaSegmentEnd = .;
    }
    _ovl_Demo_SaSegmentBssSize = ABSOLUTE( _ovl_Demo_SaSegmentBssEnd - _ovl_Demo_SaSegmentBssStart );

    _ovl_Demo_ShdSegmentRomStart = _RomSize;
    ..ovl_Demo_Shd : AT(_RomSize)
    {
        _ovl_Demo_ShdSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_ShdSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Shd/z_demo_shd.o (.text)
            build/src/overlays/actors/ovl_Demo_Shd/ovl_Demo_Shd_reloc.o (.text)
        _ovl_Demo_ShdSegmentTextEnd = .;
    _ovl_Demo_ShdSegmentTextSize = ABSOLUTE( _ovl_Demo_ShdSegmentTextEnd - _ovl_Demo_ShdSegmentTextStart );
        _ovl_Demo_ShdSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Shd/z_demo_shd.o (.data)
            build/src/overlays/actors/ovl_Demo_Shd/ovl_Demo_Shd_reloc.o (.data)
        _ovl_Demo_ShdSegmentDataEnd = .;
    _ovl_Demo_ShdSegmentDataSize = ABSOLUTE( _ovl_Demo_ShdSegmentDataEnd - _ovl_Demo_ShdSegmentDataStart );
        _ovl_Demo_ShdSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Shd/z_demo_shd.o (.rodata)
            build/src/overlays/actors/ovl_Demo_Shd/ovl_Demo_Shd_reloc.o (.rodata)
        _ovl_Demo_ShdSegmentRoDataEnd = .;
    _ovl_Demo_ShdSegmentRoDataSize = ABSOLUTE( _ovl_Demo_ShdSegmentRoDataEnd - _ovl_Demo_ShdSegmentRoDataStart );
        _ovl_Demo_ShdSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Shd/z_demo_shd.o (.sdata)
            build/src/overlays/actors/ovl_Demo_Shd/ovl_Demo_Shd_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_ShdSegmentSDataEnd = .;
        _ovl_Demo_ShdSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Shd/z_demo_shd.o (.ovl)
            build/src/overlays/actors/ovl_Demo_Shd/ovl_Demo_Shd_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_ShdSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_ShdSegmentOvlEnd - _ovl_Demo_ShdSegmentTextStart );
    _ovl_Demo_ShdSegmentRomEnd = _RomSize;

    ..ovl_Demo_Shd.bss ADDR(..ovl_Demo_Shd) + SIZEOF(..ovl_Demo_Shd) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_ShdSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Shd/z_demo_shd.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Shd/ovl_Demo_Shd_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Shd/z_demo_shd.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Shd/ovl_Demo_Shd_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Shd/z_demo_shd.o (.bss)
            build/src/overlays/actors/ovl_Demo_Shd/ovl_Demo_Shd_reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Shd/z_demo_shd.o (COMMON)
            build/src/overlays/actors/ovl_Demo_Shd/ovl_Demo_Shd_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_ShdSegmentBssEnd = .;
        _ovl_Demo_ShdSegmentEnd = .;
    }
    _ovl_Demo_ShdSegmentBssSize = ABSOLUTE( _ovl_Demo_ShdSegmentBssEnd - _ovl_Demo_ShdSegmentBssStart );

    _ovl_Demo_Tre_LgtSegmentRomStart = _RomSize;
    ..ovl_Demo_Tre_Lgt : AT(_RomSize)
    {
        _ovl_Demo_Tre_LgtSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Demo_Tre_LgtSegmentTextStart = .;
            build/src/overlays/actors/ovl_Demo_Tre_Lgt/z_demo_tre_lgt.o (.text)
            build/data/overlays/actors/z_demo_tre_lgt.data.o (.text)
            build/data/overlays/actors/z_demo_tre_lgt.reloc.o (.text)
        _ovl_Demo_Tre_LgtSegmentTextEnd = .;
    _ovl_Demo_Tre_LgtSegmentTextSize = ABSOLUTE( _ovl_Demo_Tre_LgtSegmentTextEnd - _ovl_Demo_Tre_LgtSegmentTextStart );
        _ovl_Demo_Tre_LgtSegmentDataStart = .;
            build/src/overlays/actors/ovl_Demo_Tre_Lgt/z_demo_tre_lgt.o (.data)
            build/data/overlays/actors/z_demo_tre_lgt.data.o (.data)
            build/data/overlays/actors/z_demo_tre_lgt.reloc.o (.data)
        _ovl_Demo_Tre_LgtSegmentDataEnd = .;
    _ovl_Demo_Tre_LgtSegmentDataSize = ABSOLUTE( _ovl_Demo_Tre_LgtSegmentDataEnd - _ovl_Demo_Tre_LgtSegmentDataStart );
        _ovl_Demo_Tre_LgtSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Demo_Tre_Lgt/z_demo_tre_lgt.o (.rodata)
            build/data/overlays/actors/z_demo_tre_lgt.data.o (.rodata)
            build/data/overlays/actors/z_demo_tre_lgt.reloc.o (.rodata)
        _ovl_Demo_Tre_LgtSegmentRoDataEnd = .;
    _ovl_Demo_Tre_LgtSegmentRoDataSize = ABSOLUTE( _ovl_Demo_Tre_LgtSegmentRoDataEnd - _ovl_Demo_Tre_LgtSegmentRoDataStart );
        _ovl_Demo_Tre_LgtSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Demo_Tre_Lgt/z_demo_tre_lgt.o (.sdata)
            build/data/overlays/actors/z_demo_tre_lgt.data.o (.sdata)
            build/data/overlays/actors/z_demo_tre_lgt.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Demo_Tre_LgtSegmentSDataEnd = .;
        _ovl_Demo_Tre_LgtSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Demo_Tre_Lgt/z_demo_tre_lgt.o (.ovl)
            build/data/overlays/actors/z_demo_tre_lgt.data.o (.ovl)
            build/data/overlays/actors/z_demo_tre_lgt.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Demo_Tre_LgtSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Demo_Tre_LgtSegmentOvlEnd - _ovl_Demo_Tre_LgtSegmentTextStart );
    _ovl_Demo_Tre_LgtSegmentRomEnd = _RomSize;

    ..ovl_Demo_Tre_Lgt.bss ADDR(..ovl_Demo_Tre_Lgt) + SIZEOF(..ovl_Demo_Tre_Lgt) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Demo_Tre_LgtSegmentBssStart = .;
            build/src/overlays/actors/ovl_Demo_Tre_Lgt/z_demo_tre_lgt.o (.sbss)
            build/data/overlays/actors/z_demo_tre_lgt.data.o (.sbss)
            build/data/overlays/actors/z_demo_tre_lgt.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Demo_Tre_Lgt/z_demo_tre_lgt.o (.scommon)
            build/data/overlays/actors/z_demo_tre_lgt.data.o (.scommon)
            build/data/overlays/actors/z_demo_tre_lgt.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Demo_Tre_Lgt/z_demo_tre_lgt.o (.bss)
            build/data/overlays/actors/z_demo_tre_lgt.data.o (.bss)
            build/data/overlays/actors/z_demo_tre_lgt.reloc.o (.bss)
            build/src/overlays/actors/ovl_Demo_Tre_Lgt/z_demo_tre_lgt.o (COMMON)
            build/data/overlays/actors/z_demo_tre_lgt.data.o (COMMON)
            build/data/overlays/actors/z_demo_tre_lgt.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Demo_Tre_LgtSegmentBssEnd = .;
        _ovl_Demo_Tre_LgtSegmentEnd = .;
    }
    _ovl_Demo_Tre_LgtSegmentBssSize = ABSOLUTE( _ovl_Demo_Tre_LgtSegmentBssEnd - _ovl_Demo_Tre_LgtSegmentBssStart );

    _ovl_Door_AnaSegmentRomStart = _RomSize;
    ..ovl_Door_Ana : AT(_RomSize)
    {
        _ovl_Door_AnaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Door_AnaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Door_Ana/z_door_ana.o (.text)
            build/src/overlays/actors/ovl_Door_Ana/ovl_Door_Ana_reloc.o (.text)
        _ovl_Door_AnaSegmentTextEnd = .;
    _ovl_Door_AnaSegmentTextSize = ABSOLUTE( _ovl_Door_AnaSegmentTextEnd - _ovl_Door_AnaSegmentTextStart );
        _ovl_Door_AnaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Door_Ana/z_door_ana.o (.data)
            build/src/overlays/actors/ovl_Door_Ana/ovl_Door_Ana_reloc.o (.data)
        _ovl_Door_AnaSegmentDataEnd = .;
    _ovl_Door_AnaSegmentDataSize = ABSOLUTE( _ovl_Door_AnaSegmentDataEnd - _ovl_Door_AnaSegmentDataStart );
        _ovl_Door_AnaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Door_Ana/z_door_ana.o (.rodata)
            build/src/overlays/actors/ovl_Door_Ana/ovl_Door_Ana_reloc.o (.rodata)
        _ovl_Door_AnaSegmentRoDataEnd = .;
    _ovl_Door_AnaSegmentRoDataSize = ABSOLUTE( _ovl_Door_AnaSegmentRoDataEnd - _ovl_Door_AnaSegmentRoDataStart );
        _ovl_Door_AnaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Door_Ana/z_door_ana.o (.sdata)
            build/src/overlays/actors/ovl_Door_Ana/ovl_Door_Ana_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Door_AnaSegmentSDataEnd = .;
        _ovl_Door_AnaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Door_Ana/z_door_ana.o (.ovl)
            build/src/overlays/actors/ovl_Door_Ana/ovl_Door_Ana_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Door_AnaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Door_AnaSegmentOvlEnd - _ovl_Door_AnaSegmentTextStart );
    _ovl_Door_AnaSegmentRomEnd = _RomSize;

    ..ovl_Door_Ana.bss ADDR(..ovl_Door_Ana) + SIZEOF(..ovl_Door_Ana) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Door_AnaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Door_Ana/z_door_ana.o (.sbss)
            build/src/overlays/actors/ovl_Door_Ana/ovl_Door_Ana_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Door_Ana/z_door_ana.o (.scommon)
            build/src/overlays/actors/ovl_Door_Ana/ovl_Door_Ana_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Door_Ana/z_door_ana.o (.bss)
            build/src/overlays/actors/ovl_Door_Ana/ovl_Door_Ana_reloc.o (.bss)
            build/src/overlays/actors/ovl_Door_Ana/z_door_ana.o (COMMON)
            build/src/overlays/actors/ovl_Door_Ana/ovl_Door_Ana_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Door_AnaSegmentBssEnd = .;
        _ovl_Door_AnaSegmentEnd = .;
    }
    _ovl_Door_AnaSegmentBssSize = ABSOLUTE( _ovl_Door_AnaSegmentBssEnd - _ovl_Door_AnaSegmentBssStart );

    _ovl_Door_GerudoSegmentRomStart = _RomSize;
    ..ovl_Door_Gerudo : AT(_RomSize)
    {
        _ovl_Door_GerudoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Door_GerudoSegmentTextStart = .;
            build/src/overlays/actors/ovl_Door_Gerudo/z_door_gerudo.o (.text)
            build/src/overlays/actors/ovl_Door_Gerudo/ovl_Door_Gerudo_reloc.o (.text)
        _ovl_Door_GerudoSegmentTextEnd = .;
    _ovl_Door_GerudoSegmentTextSize = ABSOLUTE( _ovl_Door_GerudoSegmentTextEnd - _ovl_Door_GerudoSegmentTextStart );
        _ovl_Door_GerudoSegmentDataStart = .;
            build/src/overlays/actors/ovl_Door_Gerudo/z_door_gerudo.o (.data)
            build/src/overlays/actors/ovl_Door_Gerudo/ovl_Door_Gerudo_reloc.o (.data)
        _ovl_Door_GerudoSegmentDataEnd = .;
    _ovl_Door_GerudoSegmentDataSize = ABSOLUTE( _ovl_Door_GerudoSegmentDataEnd - _ovl_Door_GerudoSegmentDataStart );
        _ovl_Door_GerudoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Door_Gerudo/z_door_gerudo.o (.rodata)
            build/src/overlays/actors/ovl_Door_Gerudo/ovl_Door_Gerudo_reloc.o (.rodata)
        _ovl_Door_GerudoSegmentRoDataEnd = .;
    _ovl_Door_GerudoSegmentRoDataSize = ABSOLUTE( _ovl_Door_GerudoSegmentRoDataEnd - _ovl_Door_GerudoSegmentRoDataStart );
        _ovl_Door_GerudoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Door_Gerudo/z_door_gerudo.o (.sdata)
            build/src/overlays/actors/ovl_Door_Gerudo/ovl_Door_Gerudo_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Door_GerudoSegmentSDataEnd = .;
        _ovl_Door_GerudoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Door_Gerudo/z_door_gerudo.o (.ovl)
            build/src/overlays/actors/ovl_Door_Gerudo/ovl_Door_Gerudo_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Door_GerudoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Door_GerudoSegmentOvlEnd - _ovl_Door_GerudoSegmentTextStart );
    _ovl_Door_GerudoSegmentRomEnd = _RomSize;

    ..ovl_Door_Gerudo.bss ADDR(..ovl_Door_Gerudo) + SIZEOF(..ovl_Door_Gerudo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Door_GerudoSegmentBssStart = .;
            build/src/overlays/actors/ovl_Door_Gerudo/z_door_gerudo.o (.sbss)
            build/src/overlays/actors/ovl_Door_Gerudo/ovl_Door_Gerudo_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Door_Gerudo/z_door_gerudo.o (.scommon)
            build/src/overlays/actors/ovl_Door_Gerudo/ovl_Door_Gerudo_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Door_Gerudo/z_door_gerudo.o (.bss)
            build/src/overlays/actors/ovl_Door_Gerudo/ovl_Door_Gerudo_reloc.o (.bss)
            build/src/overlays/actors/ovl_Door_Gerudo/z_door_gerudo.o (COMMON)
            build/src/overlays/actors/ovl_Door_Gerudo/ovl_Door_Gerudo_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Door_GerudoSegmentBssEnd = .;
        _ovl_Door_GerudoSegmentEnd = .;
    }
    _ovl_Door_GerudoSegmentBssSize = ABSOLUTE( _ovl_Door_GerudoSegmentBssEnd - _ovl_Door_GerudoSegmentBssStart );

    _ovl_Door_KillerSegmentRomStart = _RomSize;
    ..ovl_Door_Killer : AT(_RomSize)
    {
        _ovl_Door_KillerSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Door_KillerSegmentTextStart = .;
            build/src/overlays/actors/ovl_Door_Killer/z_door_killer.o (.text)
            build/data/overlays/actors/z_door_killer.data.o (.text)
            build/data/overlays/actors/z_door_killer.reloc.o (.text)
        _ovl_Door_KillerSegmentTextEnd = .;
    _ovl_Door_KillerSegmentTextSize = ABSOLUTE( _ovl_Door_KillerSegmentTextEnd - _ovl_Door_KillerSegmentTextStart );
        _ovl_Door_KillerSegmentDataStart = .;
            build/src/overlays/actors/ovl_Door_Killer/z_door_killer.o (.data)
            build/data/overlays/actors/z_door_killer.data.o (.data)
            build/data/overlays/actors/z_door_killer.reloc.o (.data)
        _ovl_Door_KillerSegmentDataEnd = .;
    _ovl_Door_KillerSegmentDataSize = ABSOLUTE( _ovl_Door_KillerSegmentDataEnd - _ovl_Door_KillerSegmentDataStart );
        _ovl_Door_KillerSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Door_Killer/z_door_killer.o (.rodata)
            build/data/overlays/actors/z_door_killer.data.o (.rodata)
            build/data/overlays/actors/z_door_killer.reloc.o (.rodata)
        _ovl_Door_KillerSegmentRoDataEnd = .;
    _ovl_Door_KillerSegmentRoDataSize = ABSOLUTE( _ovl_Door_KillerSegmentRoDataEnd - _ovl_Door_KillerSegmentRoDataStart );
        _ovl_Door_KillerSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Door_Killer/z_door_killer.o (.sdata)
            build/data/overlays/actors/z_door_killer.data.o (.sdata)
            build/data/overlays/actors/z_door_killer.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Door_KillerSegmentSDataEnd = .;
        _ovl_Door_KillerSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Door_Killer/z_door_killer.o (.ovl)
            build/data/overlays/actors/z_door_killer.data.o (.ovl)
            build/data/overlays/actors/z_door_killer.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Door_KillerSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Door_KillerSegmentOvlEnd - _ovl_Door_KillerSegmentTextStart );
    _ovl_Door_KillerSegmentRomEnd = _RomSize;

    ..ovl_Door_Killer.bss ADDR(..ovl_Door_Killer) + SIZEOF(..ovl_Door_Killer) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Door_KillerSegmentBssStart = .;
            build/src/overlays/actors/ovl_Door_Killer/z_door_killer.o (.sbss)
            build/data/overlays/actors/z_door_killer.data.o (.sbss)
            build/data/overlays/actors/z_door_killer.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Door_Killer/z_door_killer.o (.scommon)
            build/data/overlays/actors/z_door_killer.data.o (.scommon)
            build/data/overlays/actors/z_door_killer.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Door_Killer/z_door_killer.o (.bss)
            build/data/overlays/actors/z_door_killer.data.o (.bss)
            build/data/overlays/actors/z_door_killer.reloc.o (.bss)
            build/src/overlays/actors/ovl_Door_Killer/z_door_killer.o (COMMON)
            build/data/overlays/actors/z_door_killer.data.o (COMMON)
            build/data/overlays/actors/z_door_killer.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Door_KillerSegmentBssEnd = .;
        _ovl_Door_KillerSegmentEnd = .;
    }
    _ovl_Door_KillerSegmentBssSize = ABSOLUTE( _ovl_Door_KillerSegmentBssEnd - _ovl_Door_KillerSegmentBssStart );

    _ovl_Door_ShutterSegmentRomStart = _RomSize;
    ..ovl_Door_Shutter : AT(_RomSize)
    {
        _ovl_Door_ShutterSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Door_ShutterSegmentTextStart = .;
            build/src/overlays/actors/ovl_Door_Shutter/z_door_shutter.o (.text)
            build/data/overlays/actors/z_door_shutter.data.o (.text)
            build/data/overlays/actors/z_door_shutter.reloc.o (.text)
        _ovl_Door_ShutterSegmentTextEnd = .;
    _ovl_Door_ShutterSegmentTextSize = ABSOLUTE( _ovl_Door_ShutterSegmentTextEnd - _ovl_Door_ShutterSegmentTextStart );
        _ovl_Door_ShutterSegmentDataStart = .;
            build/src/overlays/actors/ovl_Door_Shutter/z_door_shutter.o (.data)
            build/data/overlays/actors/z_door_shutter.data.o (.data)
            build/data/overlays/actors/z_door_shutter.reloc.o (.data)
        _ovl_Door_ShutterSegmentDataEnd = .;
    _ovl_Door_ShutterSegmentDataSize = ABSOLUTE( _ovl_Door_ShutterSegmentDataEnd - _ovl_Door_ShutterSegmentDataStart );
        _ovl_Door_ShutterSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Door_Shutter/z_door_shutter.o (.rodata)
            build/data/overlays/actors/z_door_shutter.data.o (.rodata)
            build/data/overlays/actors/z_door_shutter.reloc.o (.rodata)
        _ovl_Door_ShutterSegmentRoDataEnd = .;
    _ovl_Door_ShutterSegmentRoDataSize = ABSOLUTE( _ovl_Door_ShutterSegmentRoDataEnd - _ovl_Door_ShutterSegmentRoDataStart );
        _ovl_Door_ShutterSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Door_Shutter/z_door_shutter.o (.sdata)
            build/data/overlays/actors/z_door_shutter.data.o (.sdata)
            build/data/overlays/actors/z_door_shutter.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Door_ShutterSegmentSDataEnd = .;
        _ovl_Door_ShutterSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Door_Shutter/z_door_shutter.o (.ovl)
            build/data/overlays/actors/z_door_shutter.data.o (.ovl)
            build/data/overlays/actors/z_door_shutter.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Door_ShutterSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Door_ShutterSegmentOvlEnd - _ovl_Door_ShutterSegmentTextStart );
    _ovl_Door_ShutterSegmentRomEnd = _RomSize;

    ..ovl_Door_Shutter.bss ADDR(..ovl_Door_Shutter) + SIZEOF(..ovl_Door_Shutter) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Door_ShutterSegmentBssStart = .;
            build/src/overlays/actors/ovl_Door_Shutter/z_door_shutter.o (.sbss)
            build/data/overlays/actors/z_door_shutter.data.o (.sbss)
            build/data/overlays/actors/z_door_shutter.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Door_Shutter/z_door_shutter.o (.scommon)
            build/data/overlays/actors/z_door_shutter.data.o (.scommon)
            build/data/overlays/actors/z_door_shutter.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Door_Shutter/z_door_shutter.o (.bss)
            build/data/overlays/actors/z_door_shutter.data.o (.bss)
            build/data/overlays/actors/z_door_shutter.reloc.o (.bss)
            build/src/overlays/actors/ovl_Door_Shutter/z_door_shutter.o (COMMON)
            build/data/overlays/actors/z_door_shutter.data.o (COMMON)
            build/data/overlays/actors/z_door_shutter.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Door_ShutterSegmentBssEnd = .;
        _ovl_Door_ShutterSegmentEnd = .;
    }
    _ovl_Door_ShutterSegmentBssSize = ABSOLUTE( _ovl_Door_ShutterSegmentBssEnd - _ovl_Door_ShutterSegmentBssStart );

    _ovl_Door_TokiSegmentRomStart = _RomSize;
    ..ovl_Door_Toki : AT(_RomSize)
    {
        _ovl_Door_TokiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Door_TokiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Door_Toki/z_door_toki.o (.text)
            build/src/overlays/actors/ovl_Door_Toki/ovl_Door_Toki_reloc.o (.text)
        _ovl_Door_TokiSegmentTextEnd = .;
    _ovl_Door_TokiSegmentTextSize = ABSOLUTE( _ovl_Door_TokiSegmentTextEnd - _ovl_Door_TokiSegmentTextStart );
        _ovl_Door_TokiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Door_Toki/z_door_toki.o (.data)
            build/src/overlays/actors/ovl_Door_Toki/ovl_Door_Toki_reloc.o (.data)
        _ovl_Door_TokiSegmentDataEnd = .;
    _ovl_Door_TokiSegmentDataSize = ABSOLUTE( _ovl_Door_TokiSegmentDataEnd - _ovl_Door_TokiSegmentDataStart );
        _ovl_Door_TokiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Door_Toki/z_door_toki.o (.rodata)
            build/src/overlays/actors/ovl_Door_Toki/ovl_Door_Toki_reloc.o (.rodata)
        _ovl_Door_TokiSegmentRoDataEnd = .;
    _ovl_Door_TokiSegmentRoDataSize = ABSOLUTE( _ovl_Door_TokiSegmentRoDataEnd - _ovl_Door_TokiSegmentRoDataStart );
        _ovl_Door_TokiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Door_Toki/z_door_toki.o (.sdata)
            build/src/overlays/actors/ovl_Door_Toki/ovl_Door_Toki_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Door_TokiSegmentSDataEnd = .;
        _ovl_Door_TokiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Door_Toki/z_door_toki.o (.ovl)
            build/src/overlays/actors/ovl_Door_Toki/ovl_Door_Toki_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Door_TokiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Door_TokiSegmentOvlEnd - _ovl_Door_TokiSegmentTextStart );
    _ovl_Door_TokiSegmentRomEnd = _RomSize;

    ..ovl_Door_Toki.bss ADDR(..ovl_Door_Toki) + SIZEOF(..ovl_Door_Toki) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Door_TokiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Door_Toki/z_door_toki.o (.sbss)
            build/src/overlays/actors/ovl_Door_Toki/ovl_Door_Toki_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Door_Toki/z_door_toki.o (.scommon)
            build/src/overlays/actors/ovl_Door_Toki/ovl_Door_Toki_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Door_Toki/z_door_toki.o (.bss)
            build/src/overlays/actors/ovl_Door_Toki/ovl_Door_Toki_reloc.o (.bss)
            build/src/overlays/actors/ovl_Door_Toki/z_door_toki.o (COMMON)
            build/src/overlays/actors/ovl_Door_Toki/ovl_Door_Toki_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Door_TokiSegmentBssEnd = .;
        _ovl_Door_TokiSegmentEnd = .;
    }
    _ovl_Door_TokiSegmentBssSize = ABSOLUTE( _ovl_Door_TokiSegmentBssEnd - _ovl_Door_TokiSegmentBssStart );

    _ovl_Door_Warp1SegmentRomStart = _RomSize;
    ..ovl_Door_Warp1 : AT(_RomSize)
    {
        _ovl_Door_Warp1SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Door_Warp1SegmentTextStart = .;
            build/src/overlays/actors/ovl_Door_Warp1/z_door_warp1.o (.text)
            build/data/overlays/actors/z_door_warp1.data.o (.text)
            build/data/overlays/actors/z_door_warp1.bss.o (.text)
            build/data/overlays/actors/z_door_warp1.reloc.o (.text)
        _ovl_Door_Warp1SegmentTextEnd = .;
    _ovl_Door_Warp1SegmentTextSize = ABSOLUTE( _ovl_Door_Warp1SegmentTextEnd - _ovl_Door_Warp1SegmentTextStart );
        _ovl_Door_Warp1SegmentDataStart = .;
            build/src/overlays/actors/ovl_Door_Warp1/z_door_warp1.o (.data)
            build/data/overlays/actors/z_door_warp1.data.o (.data)
            build/data/overlays/actors/z_door_warp1.bss.o (.data)
            build/data/overlays/actors/z_door_warp1.reloc.o (.data)
        _ovl_Door_Warp1SegmentDataEnd = .;
    _ovl_Door_Warp1SegmentDataSize = ABSOLUTE( _ovl_Door_Warp1SegmentDataEnd - _ovl_Door_Warp1SegmentDataStart );
        _ovl_Door_Warp1SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Door_Warp1/z_door_warp1.o (.rodata)
            build/data/overlays/actors/z_door_warp1.data.o (.rodata)
            build/data/overlays/actors/z_door_warp1.bss.o (.rodata)
            build/data/overlays/actors/z_door_warp1.reloc.o (.rodata)
        _ovl_Door_Warp1SegmentRoDataEnd = .;
    _ovl_Door_Warp1SegmentRoDataSize = ABSOLUTE( _ovl_Door_Warp1SegmentRoDataEnd - _ovl_Door_Warp1SegmentRoDataStart );
        _ovl_Door_Warp1SegmentSDataStart = .;
            build/src/overlays/actors/ovl_Door_Warp1/z_door_warp1.o (.sdata)
            build/data/overlays/actors/z_door_warp1.data.o (.sdata)
            build/data/overlays/actors/z_door_warp1.bss.o (.sdata)
            build/data/overlays/actors/z_door_warp1.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Door_Warp1SegmentSDataEnd = .;
        _ovl_Door_Warp1SegmentOvlStart = .;
            build/src/overlays/actors/ovl_Door_Warp1/z_door_warp1.o (.ovl)
            build/data/overlays/actors/z_door_warp1.data.o (.ovl)
            build/data/overlays/actors/z_door_warp1.bss.o (.ovl)
            build/data/overlays/actors/z_door_warp1.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Door_Warp1SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Door_Warp1SegmentOvlEnd - _ovl_Door_Warp1SegmentTextStart );
    _ovl_Door_Warp1SegmentRomEnd = _RomSize;

    ..ovl_Door_Warp1.bss ADDR(..ovl_Door_Warp1) + SIZEOF(..ovl_Door_Warp1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Door_Warp1SegmentBssStart = .;
            build/src/overlays/actors/ovl_Door_Warp1/z_door_warp1.o (.sbss)
            build/data/overlays/actors/z_door_warp1.data.o (.sbss)
            build/data/overlays/actors/z_door_warp1.bss.o (.sbss)
            build/data/overlays/actors/z_door_warp1.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Door_Warp1/z_door_warp1.o (.scommon)
            build/data/overlays/actors/z_door_warp1.data.o (.scommon)
            build/data/overlays/actors/z_door_warp1.bss.o (.scommon)
            build/data/overlays/actors/z_door_warp1.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Door_Warp1/z_door_warp1.o (.bss)
            build/data/overlays/actors/z_door_warp1.data.o (.bss)
            build/data/overlays/actors/z_door_warp1.bss.o (.bss)
            build/data/overlays/actors/z_door_warp1.reloc.o (.bss)
            build/src/overlays/actors/ovl_Door_Warp1/z_door_warp1.o (COMMON)
            build/data/overlays/actors/z_door_warp1.data.o (COMMON)
            build/data/overlays/actors/z_door_warp1.bss.o (COMMON)
            build/data/overlays/actors/z_door_warp1.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Door_Warp1SegmentBssEnd = .;
        _ovl_Door_Warp1SegmentEnd = .;
    }
    _ovl_Door_Warp1SegmentBssSize = ABSOLUTE( _ovl_Door_Warp1SegmentBssEnd - _ovl_Door_Warp1SegmentBssStart );

    _ovl_Efc_ErupcSegmentRomStart = _RomSize;
    ..ovl_Efc_Erupc : AT(_RomSize)
    {
        _ovl_Efc_ErupcSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Efc_ErupcSegmentTextStart = .;
            build/src/overlays/actors/ovl_Efc_Erupc/z_efc_erupc.o (.text)
            build/data/overlays/actors/z_efc_erupc.data.o (.text)
            build/data/overlays/actors/z_efc_erupc.reloc.o (.text)
        _ovl_Efc_ErupcSegmentTextEnd = .;
    _ovl_Efc_ErupcSegmentTextSize = ABSOLUTE( _ovl_Efc_ErupcSegmentTextEnd - _ovl_Efc_ErupcSegmentTextStart );
        _ovl_Efc_ErupcSegmentDataStart = .;
            build/src/overlays/actors/ovl_Efc_Erupc/z_efc_erupc.o (.data)
            build/data/overlays/actors/z_efc_erupc.data.o (.data)
            build/data/overlays/actors/z_efc_erupc.reloc.o (.data)
        _ovl_Efc_ErupcSegmentDataEnd = .;
    _ovl_Efc_ErupcSegmentDataSize = ABSOLUTE( _ovl_Efc_ErupcSegmentDataEnd - _ovl_Efc_ErupcSegmentDataStart );
        _ovl_Efc_ErupcSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Efc_Erupc/z_efc_erupc.o (.rodata)
            build/data/overlays/actors/z_efc_erupc.data.o (.rodata)
            build/data/overlays/actors/z_efc_erupc.reloc.o (.rodata)
        _ovl_Efc_ErupcSegmentRoDataEnd = .;
    _ovl_Efc_ErupcSegmentRoDataSize = ABSOLUTE( _ovl_Efc_ErupcSegmentRoDataEnd - _ovl_Efc_ErupcSegmentRoDataStart );
        _ovl_Efc_ErupcSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Efc_Erupc/z_efc_erupc.o (.sdata)
            build/data/overlays/actors/z_efc_erupc.data.o (.sdata)
            build/data/overlays/actors/z_efc_erupc.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Efc_ErupcSegmentSDataEnd = .;
        _ovl_Efc_ErupcSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Efc_Erupc/z_efc_erupc.o (.ovl)
            build/data/overlays/actors/z_efc_erupc.data.o (.ovl)
            build/data/overlays/actors/z_efc_erupc.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Efc_ErupcSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Efc_ErupcSegmentOvlEnd - _ovl_Efc_ErupcSegmentTextStart );
    _ovl_Efc_ErupcSegmentRomEnd = _RomSize;

    ..ovl_Efc_Erupc.bss ADDR(..ovl_Efc_Erupc) + SIZEOF(..ovl_Efc_Erupc) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Efc_ErupcSegmentBssStart = .;
            build/src/overlays/actors/ovl_Efc_Erupc/z_efc_erupc.o (.sbss)
            build/data/overlays/actors/z_efc_erupc.data.o (.sbss)
            build/data/overlays/actors/z_efc_erupc.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Efc_Erupc/z_efc_erupc.o (.scommon)
            build/data/overlays/actors/z_efc_erupc.data.o (.scommon)
            build/data/overlays/actors/z_efc_erupc.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Efc_Erupc/z_efc_erupc.o (.bss)
            build/data/overlays/actors/z_efc_erupc.data.o (.bss)
            build/data/overlays/actors/z_efc_erupc.reloc.o (.bss)
            build/src/overlays/actors/ovl_Efc_Erupc/z_efc_erupc.o (COMMON)
            build/data/overlays/actors/z_efc_erupc.data.o (COMMON)
            build/data/overlays/actors/z_efc_erupc.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Efc_ErupcSegmentBssEnd = .;
        _ovl_Efc_ErupcSegmentEnd = .;
    }
    _ovl_Efc_ErupcSegmentBssSize = ABSOLUTE( _ovl_Efc_ErupcSegmentBssEnd - _ovl_Efc_ErupcSegmentBssStart );

    _ovl_Eff_DustSegmentRomStart = _RomSize;
    ..ovl_Eff_Dust : AT(_RomSize)
    {
        _ovl_Eff_DustSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Eff_DustSegmentTextStart = .;
            build/src/overlays/actors/ovl_Eff_Dust/z_eff_dust.o (.text)
            build/data/overlays/actors/z_eff_dust.data.o (.text)
            build/data/overlays/actors/z_eff_dust.reloc.o (.text)
        _ovl_Eff_DustSegmentTextEnd = .;
    _ovl_Eff_DustSegmentTextSize = ABSOLUTE( _ovl_Eff_DustSegmentTextEnd - _ovl_Eff_DustSegmentTextStart );
        _ovl_Eff_DustSegmentDataStart = .;
            build/src/overlays/actors/ovl_Eff_Dust/z_eff_dust.o (.data)
            build/data/overlays/actors/z_eff_dust.data.o (.data)
            build/data/overlays/actors/z_eff_dust.reloc.o (.data)
        _ovl_Eff_DustSegmentDataEnd = .;
    _ovl_Eff_DustSegmentDataSize = ABSOLUTE( _ovl_Eff_DustSegmentDataEnd - _ovl_Eff_DustSegmentDataStart );
        _ovl_Eff_DustSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Eff_Dust/z_eff_dust.o (.rodata)
            build/data/overlays/actors/z_eff_dust.data.o (.rodata)
            build/data/overlays/actors/z_eff_dust.reloc.o (.rodata)
        _ovl_Eff_DustSegmentRoDataEnd = .;
    _ovl_Eff_DustSegmentRoDataSize = ABSOLUTE( _ovl_Eff_DustSegmentRoDataEnd - _ovl_Eff_DustSegmentRoDataStart );
        _ovl_Eff_DustSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Eff_Dust/z_eff_dust.o (.sdata)
            build/data/overlays/actors/z_eff_dust.data.o (.sdata)
            build/data/overlays/actors/z_eff_dust.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Eff_DustSegmentSDataEnd = .;
        _ovl_Eff_DustSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Eff_Dust/z_eff_dust.o (.ovl)
            build/data/overlays/actors/z_eff_dust.data.o (.ovl)
            build/data/overlays/actors/z_eff_dust.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Eff_DustSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Eff_DustSegmentOvlEnd - _ovl_Eff_DustSegmentTextStart );
    _ovl_Eff_DustSegmentRomEnd = _RomSize;

    ..ovl_Eff_Dust.bss ADDR(..ovl_Eff_Dust) + SIZEOF(..ovl_Eff_Dust) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Eff_DustSegmentBssStart = .;
            build/src/overlays/actors/ovl_Eff_Dust/z_eff_dust.o (.sbss)
            build/data/overlays/actors/z_eff_dust.data.o (.sbss)
            build/data/overlays/actors/z_eff_dust.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Eff_Dust/z_eff_dust.o (.scommon)
            build/data/overlays/actors/z_eff_dust.data.o (.scommon)
            build/data/overlays/actors/z_eff_dust.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Eff_Dust/z_eff_dust.o (.bss)
            build/data/overlays/actors/z_eff_dust.data.o (.bss)
            build/data/overlays/actors/z_eff_dust.reloc.o (.bss)
            build/src/overlays/actors/ovl_Eff_Dust/z_eff_dust.o (COMMON)
            build/data/overlays/actors/z_eff_dust.data.o (COMMON)
            build/data/overlays/actors/z_eff_dust.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Eff_DustSegmentBssEnd = .;
        _ovl_Eff_DustSegmentEnd = .;
    }
    _ovl_Eff_DustSegmentBssSize = ABSOLUTE( _ovl_Eff_DustSegmentBssEnd - _ovl_Eff_DustSegmentBssStart );

    _ovl_Effect_Ss_BlastSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Blast : AT(_RomSize)
    {
        _ovl_Effect_Ss_BlastSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BlastSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Blast/z_eff_ss_blast.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Blast/ovl_Effect_Ss_Blast_reloc.o (.text)
        _ovl_Effect_Ss_BlastSegmentTextEnd = .;
    _ovl_Effect_Ss_BlastSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_BlastSegmentTextEnd - _ovl_Effect_Ss_BlastSegmentTextStart );
        _ovl_Effect_Ss_BlastSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Blast/z_eff_ss_blast.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Blast/ovl_Effect_Ss_Blast_reloc.o (.data)
        _ovl_Effect_Ss_BlastSegmentDataEnd = .;
    _ovl_Effect_Ss_BlastSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_BlastSegmentDataEnd - _ovl_Effect_Ss_BlastSegmentDataStart );
        _ovl_Effect_Ss_BlastSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Blast/z_eff_ss_blast.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Blast/ovl_Effect_Ss_Blast_reloc.o (.rodata)
        _ovl_Effect_Ss_BlastSegmentRoDataEnd = .;
    _ovl_Effect_Ss_BlastSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_BlastSegmentRoDataEnd - _ovl_Effect_Ss_BlastSegmentRoDataStart );
        _ovl_Effect_Ss_BlastSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Blast/z_eff_ss_blast.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Blast/ovl_Effect_Ss_Blast_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BlastSegmentSDataEnd = .;
        _ovl_Effect_Ss_BlastSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Blast/z_eff_ss_blast.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Blast/ovl_Effect_Ss_Blast_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BlastSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_BlastSegmentOvlEnd - _ovl_Effect_Ss_BlastSegmentTextStart );
    _ovl_Effect_Ss_BlastSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Blast.bss ADDR(..ovl_Effect_Ss_Blast) + SIZEOF(..ovl_Effect_Ss_Blast) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BlastSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Blast/z_eff_ss_blast.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Blast/ovl_Effect_Ss_Blast_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Blast/z_eff_ss_blast.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Blast/ovl_Effect_Ss_Blast_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Blast/z_eff_ss_blast.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Blast/ovl_Effect_Ss_Blast_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Blast/z_eff_ss_blast.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Blast/ovl_Effect_Ss_Blast_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BlastSegmentBssEnd = .;
        _ovl_Effect_Ss_BlastSegmentEnd = .;
    }
    _ovl_Effect_Ss_BlastSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_BlastSegmentBssEnd - _ovl_Effect_Ss_BlastSegmentBssStart );

    _ovl_Effect_Ss_BombSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Bomb : AT(_RomSize)
    {
        _ovl_Effect_Ss_BombSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BombSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/z_eff_ss_bomb.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/ovl_Effect_Ss_Bomb_reloc.o (.text)
        _ovl_Effect_Ss_BombSegmentTextEnd = .;
    _ovl_Effect_Ss_BombSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_BombSegmentTextEnd - _ovl_Effect_Ss_BombSegmentTextStart );
        _ovl_Effect_Ss_BombSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/z_eff_ss_bomb.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/ovl_Effect_Ss_Bomb_reloc.o (.data)
        _ovl_Effect_Ss_BombSegmentDataEnd = .;
    _ovl_Effect_Ss_BombSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_BombSegmentDataEnd - _ovl_Effect_Ss_BombSegmentDataStart );
        _ovl_Effect_Ss_BombSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/z_eff_ss_bomb.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/ovl_Effect_Ss_Bomb_reloc.o (.rodata)
        _ovl_Effect_Ss_BombSegmentRoDataEnd = .;
    _ovl_Effect_Ss_BombSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_BombSegmentRoDataEnd - _ovl_Effect_Ss_BombSegmentRoDataStart );
        _ovl_Effect_Ss_BombSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/z_eff_ss_bomb.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/ovl_Effect_Ss_Bomb_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BombSegmentSDataEnd = .;
        _ovl_Effect_Ss_BombSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/z_eff_ss_bomb.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/ovl_Effect_Ss_Bomb_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BombSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_BombSegmentOvlEnd - _ovl_Effect_Ss_BombSegmentTextStart );
    _ovl_Effect_Ss_BombSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Bomb.bss ADDR(..ovl_Effect_Ss_Bomb) + SIZEOF(..ovl_Effect_Ss_Bomb) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BombSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/z_eff_ss_bomb.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/ovl_Effect_Ss_Bomb_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/z_eff_ss_bomb.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/ovl_Effect_Ss_Bomb_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/z_eff_ss_bomb.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/ovl_Effect_Ss_Bomb_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/z_eff_ss_bomb.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb/ovl_Effect_Ss_Bomb_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BombSegmentBssEnd = .;
        _ovl_Effect_Ss_BombSegmentEnd = .;
    }
    _ovl_Effect_Ss_BombSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_BombSegmentBssEnd - _ovl_Effect_Ss_BombSegmentBssStart );

    _ovl_Effect_Ss_Bomb2SegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Bomb2 : AT(_RomSize)
    {
        _ovl_Effect_Ss_Bomb2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Bomb2SegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/z_eff_ss_bomb2.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/ovl_Effect_Ss_Bomb2_reloc.o (.text)
        _ovl_Effect_Ss_Bomb2SegmentTextEnd = .;
    _ovl_Effect_Ss_Bomb2SegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_Bomb2SegmentTextEnd - _ovl_Effect_Ss_Bomb2SegmentTextStart );
        _ovl_Effect_Ss_Bomb2SegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/z_eff_ss_bomb2.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/ovl_Effect_Ss_Bomb2_reloc.o (.data)
        _ovl_Effect_Ss_Bomb2SegmentDataEnd = .;
    _ovl_Effect_Ss_Bomb2SegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_Bomb2SegmentDataEnd - _ovl_Effect_Ss_Bomb2SegmentDataStart );
        _ovl_Effect_Ss_Bomb2SegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/z_eff_ss_bomb2.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/ovl_Effect_Ss_Bomb2_reloc.o (.rodata)
        _ovl_Effect_Ss_Bomb2SegmentRoDataEnd = .;
    _ovl_Effect_Ss_Bomb2SegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_Bomb2SegmentRoDataEnd - _ovl_Effect_Ss_Bomb2SegmentRoDataStart );
        _ovl_Effect_Ss_Bomb2SegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/z_eff_ss_bomb2.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/ovl_Effect_Ss_Bomb2_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Bomb2SegmentSDataEnd = .;
        _ovl_Effect_Ss_Bomb2SegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/z_eff_ss_bomb2.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/ovl_Effect_Ss_Bomb2_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Bomb2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_Bomb2SegmentOvlEnd - _ovl_Effect_Ss_Bomb2SegmentTextStart );
    _ovl_Effect_Ss_Bomb2SegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Bomb2.bss ADDR(..ovl_Effect_Ss_Bomb2) + SIZEOF(..ovl_Effect_Ss_Bomb2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Bomb2SegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/z_eff_ss_bomb2.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/ovl_Effect_Ss_Bomb2_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/z_eff_ss_bomb2.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/ovl_Effect_Ss_Bomb2_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/z_eff_ss_bomb2.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/ovl_Effect_Ss_Bomb2_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/z_eff_ss_bomb2.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Bomb2/ovl_Effect_Ss_Bomb2_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Bomb2SegmentBssEnd = .;
        _ovl_Effect_Ss_Bomb2SegmentEnd = .;
    }
    _ovl_Effect_Ss_Bomb2SegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_Bomb2SegmentBssEnd - _ovl_Effect_Ss_Bomb2SegmentBssStart );

    _ovl_Effect_Ss_BubbleSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Bubble : AT(_RomSize)
    {
        _ovl_Effect_Ss_BubbleSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BubbleSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/z_eff_ss_bubble.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/ovl_Effect_Ss_Bubble_reloc.o (.text)
        _ovl_Effect_Ss_BubbleSegmentTextEnd = .;
    _ovl_Effect_Ss_BubbleSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_BubbleSegmentTextEnd - _ovl_Effect_Ss_BubbleSegmentTextStart );
        _ovl_Effect_Ss_BubbleSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/z_eff_ss_bubble.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/ovl_Effect_Ss_Bubble_reloc.o (.data)
        _ovl_Effect_Ss_BubbleSegmentDataEnd = .;
    _ovl_Effect_Ss_BubbleSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_BubbleSegmentDataEnd - _ovl_Effect_Ss_BubbleSegmentDataStart );
        _ovl_Effect_Ss_BubbleSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/z_eff_ss_bubble.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/ovl_Effect_Ss_Bubble_reloc.o (.rodata)
        _ovl_Effect_Ss_BubbleSegmentRoDataEnd = .;
    _ovl_Effect_Ss_BubbleSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_BubbleSegmentRoDataEnd - _ovl_Effect_Ss_BubbleSegmentRoDataStart );
        _ovl_Effect_Ss_BubbleSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/z_eff_ss_bubble.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/ovl_Effect_Ss_Bubble_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BubbleSegmentSDataEnd = .;
        _ovl_Effect_Ss_BubbleSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/z_eff_ss_bubble.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/ovl_Effect_Ss_Bubble_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BubbleSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_BubbleSegmentOvlEnd - _ovl_Effect_Ss_BubbleSegmentTextStart );
    _ovl_Effect_Ss_BubbleSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Bubble.bss ADDR(..ovl_Effect_Ss_Bubble) + SIZEOF(..ovl_Effect_Ss_Bubble) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BubbleSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/z_eff_ss_bubble.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/ovl_Effect_Ss_Bubble_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/z_eff_ss_bubble.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/ovl_Effect_Ss_Bubble_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/z_eff_ss_bubble.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/ovl_Effect_Ss_Bubble_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/z_eff_ss_bubble.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Bubble/ovl_Effect_Ss_Bubble_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_BubbleSegmentBssEnd = .;
        _ovl_Effect_Ss_BubbleSegmentEnd = .;
    }
    _ovl_Effect_Ss_BubbleSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_BubbleSegmentBssEnd - _ovl_Effect_Ss_BubbleSegmentBssStart );

    _ovl_Effect_Ss_D_FireSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_D_Fire : AT(_RomSize)
    {
        _ovl_Effect_Ss_D_FireSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_D_FireSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/z_eff_ss_d_fire.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/ovl_Effect_Ss_D_Fire_reloc.o (.text)
        _ovl_Effect_Ss_D_FireSegmentTextEnd = .;
    _ovl_Effect_Ss_D_FireSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_D_FireSegmentTextEnd - _ovl_Effect_Ss_D_FireSegmentTextStart );
        _ovl_Effect_Ss_D_FireSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/z_eff_ss_d_fire.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/ovl_Effect_Ss_D_Fire_reloc.o (.data)
        _ovl_Effect_Ss_D_FireSegmentDataEnd = .;
    _ovl_Effect_Ss_D_FireSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_D_FireSegmentDataEnd - _ovl_Effect_Ss_D_FireSegmentDataStart );
        _ovl_Effect_Ss_D_FireSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/z_eff_ss_d_fire.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/ovl_Effect_Ss_D_Fire_reloc.o (.rodata)
        _ovl_Effect_Ss_D_FireSegmentRoDataEnd = .;
    _ovl_Effect_Ss_D_FireSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_D_FireSegmentRoDataEnd - _ovl_Effect_Ss_D_FireSegmentRoDataStart );
        _ovl_Effect_Ss_D_FireSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/z_eff_ss_d_fire.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/ovl_Effect_Ss_D_Fire_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_D_FireSegmentSDataEnd = .;
        _ovl_Effect_Ss_D_FireSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/z_eff_ss_d_fire.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/ovl_Effect_Ss_D_Fire_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_D_FireSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_D_FireSegmentOvlEnd - _ovl_Effect_Ss_D_FireSegmentTextStart );
    _ovl_Effect_Ss_D_FireSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_D_Fire.bss ADDR(..ovl_Effect_Ss_D_Fire) + SIZEOF(..ovl_Effect_Ss_D_Fire) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_D_FireSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/z_eff_ss_d_fire.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/ovl_Effect_Ss_D_Fire_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/z_eff_ss_d_fire.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/ovl_Effect_Ss_D_Fire_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/z_eff_ss_d_fire.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/ovl_Effect_Ss_D_Fire_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/z_eff_ss_d_fire.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_D_Fire/ovl_Effect_Ss_D_Fire_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_D_FireSegmentBssEnd = .;
        _ovl_Effect_Ss_D_FireSegmentEnd = .;
    }
    _ovl_Effect_Ss_D_FireSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_D_FireSegmentBssEnd - _ovl_Effect_Ss_D_FireSegmentBssStart );

    _ovl_Effect_Ss_Dead_DbSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Dead_Db : AT(_RomSize)
    {
        _ovl_Effect_Ss_Dead_DbSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DbSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/z_eff_ss_dead_db.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/ovl_Effect_Ss_Dead_Db_reloc.o (.text)
        _ovl_Effect_Ss_Dead_DbSegmentTextEnd = .;
    _ovl_Effect_Ss_Dead_DbSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_Dead_DbSegmentTextEnd - _ovl_Effect_Ss_Dead_DbSegmentTextStart );
        _ovl_Effect_Ss_Dead_DbSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/z_eff_ss_dead_db.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/ovl_Effect_Ss_Dead_Db_reloc.o (.data)
        _ovl_Effect_Ss_Dead_DbSegmentDataEnd = .;
    _ovl_Effect_Ss_Dead_DbSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_Dead_DbSegmentDataEnd - _ovl_Effect_Ss_Dead_DbSegmentDataStart );
        _ovl_Effect_Ss_Dead_DbSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/z_eff_ss_dead_db.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/ovl_Effect_Ss_Dead_Db_reloc.o (.rodata)
        _ovl_Effect_Ss_Dead_DbSegmentRoDataEnd = .;
    _ovl_Effect_Ss_Dead_DbSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_Dead_DbSegmentRoDataEnd - _ovl_Effect_Ss_Dead_DbSegmentRoDataStart );
        _ovl_Effect_Ss_Dead_DbSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/z_eff_ss_dead_db.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/ovl_Effect_Ss_Dead_Db_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DbSegmentSDataEnd = .;
        _ovl_Effect_Ss_Dead_DbSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/z_eff_ss_dead_db.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/ovl_Effect_Ss_Dead_Db_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DbSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_Dead_DbSegmentOvlEnd - _ovl_Effect_Ss_Dead_DbSegmentTextStart );
    _ovl_Effect_Ss_Dead_DbSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Dead_Db.bss ADDR(..ovl_Effect_Ss_Dead_Db) + SIZEOF(..ovl_Effect_Ss_Dead_Db) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DbSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/z_eff_ss_dead_db.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/ovl_Effect_Ss_Dead_Db_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/z_eff_ss_dead_db.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/ovl_Effect_Ss_Dead_Db_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/z_eff_ss_dead_db.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/ovl_Effect_Ss_Dead_Db_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/z_eff_ss_dead_db.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Db/ovl_Effect_Ss_Dead_Db_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DbSegmentBssEnd = .;
        _ovl_Effect_Ss_Dead_DbSegmentEnd = .;
    }
    _ovl_Effect_Ss_Dead_DbSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_Dead_DbSegmentBssEnd - _ovl_Effect_Ss_Dead_DbSegmentBssStart );

    _ovl_Effect_Ss_Dead_DdSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Dead_Dd : AT(_RomSize)
    {
        _ovl_Effect_Ss_Dead_DdSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DdSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/z_eff_ss_dead_dd.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/ovl_Effect_Ss_Dead_Dd_reloc.o (.text)
        _ovl_Effect_Ss_Dead_DdSegmentTextEnd = .;
    _ovl_Effect_Ss_Dead_DdSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_Dead_DdSegmentTextEnd - _ovl_Effect_Ss_Dead_DdSegmentTextStart );
        _ovl_Effect_Ss_Dead_DdSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/z_eff_ss_dead_dd.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/ovl_Effect_Ss_Dead_Dd_reloc.o (.data)
        _ovl_Effect_Ss_Dead_DdSegmentDataEnd = .;
    _ovl_Effect_Ss_Dead_DdSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_Dead_DdSegmentDataEnd - _ovl_Effect_Ss_Dead_DdSegmentDataStart );
        _ovl_Effect_Ss_Dead_DdSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/z_eff_ss_dead_dd.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/ovl_Effect_Ss_Dead_Dd_reloc.o (.rodata)
        _ovl_Effect_Ss_Dead_DdSegmentRoDataEnd = .;
    _ovl_Effect_Ss_Dead_DdSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_Dead_DdSegmentRoDataEnd - _ovl_Effect_Ss_Dead_DdSegmentRoDataStart );
        _ovl_Effect_Ss_Dead_DdSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/z_eff_ss_dead_dd.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/ovl_Effect_Ss_Dead_Dd_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DdSegmentSDataEnd = .;
        _ovl_Effect_Ss_Dead_DdSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/z_eff_ss_dead_dd.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/ovl_Effect_Ss_Dead_Dd_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DdSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_Dead_DdSegmentOvlEnd - _ovl_Effect_Ss_Dead_DdSegmentTextStart );
    _ovl_Effect_Ss_Dead_DdSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Dead_Dd.bss ADDR(..ovl_Effect_Ss_Dead_Dd) + SIZEOF(..ovl_Effect_Ss_Dead_Dd) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DdSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/z_eff_ss_dead_dd.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/ovl_Effect_Ss_Dead_Dd_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/z_eff_ss_dead_dd.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/ovl_Effect_Ss_Dead_Dd_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/z_eff_ss_dead_dd.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/ovl_Effect_Ss_Dead_Dd_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/z_eff_ss_dead_dd.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Dd/ovl_Effect_Ss_Dead_Dd_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DdSegmentBssEnd = .;
        _ovl_Effect_Ss_Dead_DdSegmentEnd = .;
    }
    _ovl_Effect_Ss_Dead_DdSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_Dead_DdSegmentBssEnd - _ovl_Effect_Ss_Dead_DdSegmentBssStart );

    _ovl_Effect_Ss_Dead_DsSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Dead_Ds : AT(_RomSize)
    {
        _ovl_Effect_Ss_Dead_DsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DsSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/z_eff_ss_dead_ds.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/ovl_Effect_Ss_Dead_Ds_reloc.o (.text)
        _ovl_Effect_Ss_Dead_DsSegmentTextEnd = .;
    _ovl_Effect_Ss_Dead_DsSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_Dead_DsSegmentTextEnd - _ovl_Effect_Ss_Dead_DsSegmentTextStart );
        _ovl_Effect_Ss_Dead_DsSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/z_eff_ss_dead_ds.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/ovl_Effect_Ss_Dead_Ds_reloc.o (.data)
        _ovl_Effect_Ss_Dead_DsSegmentDataEnd = .;
    _ovl_Effect_Ss_Dead_DsSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_Dead_DsSegmentDataEnd - _ovl_Effect_Ss_Dead_DsSegmentDataStart );
        _ovl_Effect_Ss_Dead_DsSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/z_eff_ss_dead_ds.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/ovl_Effect_Ss_Dead_Ds_reloc.o (.rodata)
        _ovl_Effect_Ss_Dead_DsSegmentRoDataEnd = .;
    _ovl_Effect_Ss_Dead_DsSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_Dead_DsSegmentRoDataEnd - _ovl_Effect_Ss_Dead_DsSegmentRoDataStart );
        _ovl_Effect_Ss_Dead_DsSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/z_eff_ss_dead_ds.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/ovl_Effect_Ss_Dead_Ds_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DsSegmentSDataEnd = .;
        _ovl_Effect_Ss_Dead_DsSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/z_eff_ss_dead_ds.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/ovl_Effect_Ss_Dead_Ds_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_Dead_DsSegmentOvlEnd - _ovl_Effect_Ss_Dead_DsSegmentTextStart );
    _ovl_Effect_Ss_Dead_DsSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Dead_Ds.bss ADDR(..ovl_Effect_Ss_Dead_Ds) + SIZEOF(..ovl_Effect_Ss_Dead_Ds) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DsSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/z_eff_ss_dead_ds.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/ovl_Effect_Ss_Dead_Ds_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/z_eff_ss_dead_ds.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/ovl_Effect_Ss_Dead_Ds_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/z_eff_ss_dead_ds.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/ovl_Effect_Ss_Dead_Ds_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/z_eff_ss_dead_ds.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Ds/ovl_Effect_Ss_Dead_Ds_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_DsSegmentBssEnd = .;
        _ovl_Effect_Ss_Dead_DsSegmentEnd = .;
    }
    _ovl_Effect_Ss_Dead_DsSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_Dead_DsSegmentBssEnd - _ovl_Effect_Ss_Dead_DsSegmentBssStart );

    _ovl_Effect_Ss_Dead_SoundSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Dead_Sound : AT(_RomSize)
    {
        _ovl_Effect_Ss_Dead_SoundSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_SoundSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/z_eff_ss_dead_sound.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/ovl_Effect_Ss_Dead_Sound_reloc.o (.text)
        _ovl_Effect_Ss_Dead_SoundSegmentTextEnd = .;
    _ovl_Effect_Ss_Dead_SoundSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_Dead_SoundSegmentTextEnd - _ovl_Effect_Ss_Dead_SoundSegmentTextStart );
        _ovl_Effect_Ss_Dead_SoundSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/z_eff_ss_dead_sound.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/ovl_Effect_Ss_Dead_Sound_reloc.o (.data)
        _ovl_Effect_Ss_Dead_SoundSegmentDataEnd = .;
    _ovl_Effect_Ss_Dead_SoundSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_Dead_SoundSegmentDataEnd - _ovl_Effect_Ss_Dead_SoundSegmentDataStart );
        _ovl_Effect_Ss_Dead_SoundSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/z_eff_ss_dead_sound.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/ovl_Effect_Ss_Dead_Sound_reloc.o (.rodata)
        _ovl_Effect_Ss_Dead_SoundSegmentRoDataEnd = .;
    _ovl_Effect_Ss_Dead_SoundSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_Dead_SoundSegmentRoDataEnd - _ovl_Effect_Ss_Dead_SoundSegmentRoDataStart );
        _ovl_Effect_Ss_Dead_SoundSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/z_eff_ss_dead_sound.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/ovl_Effect_Ss_Dead_Sound_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_SoundSegmentSDataEnd = .;
        _ovl_Effect_Ss_Dead_SoundSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/z_eff_ss_dead_sound.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/ovl_Effect_Ss_Dead_Sound_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_SoundSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_Dead_SoundSegmentOvlEnd - _ovl_Effect_Ss_Dead_SoundSegmentTextStart );
    _ovl_Effect_Ss_Dead_SoundSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Dead_Sound.bss ADDR(..ovl_Effect_Ss_Dead_Sound) + SIZEOF(..ovl_Effect_Ss_Dead_Sound) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_SoundSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/z_eff_ss_dead_sound.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/ovl_Effect_Ss_Dead_Sound_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/z_eff_ss_dead_sound.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/ovl_Effect_Ss_Dead_Sound_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/z_eff_ss_dead_sound.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/ovl_Effect_Ss_Dead_Sound_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/z_eff_ss_dead_sound.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Dead_Sound/ovl_Effect_Ss_Dead_Sound_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dead_SoundSegmentBssEnd = .;
        _ovl_Effect_Ss_Dead_SoundSegmentEnd = .;
    }
    _ovl_Effect_Ss_Dead_SoundSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_Dead_SoundSegmentBssEnd - _ovl_Effect_Ss_Dead_SoundSegmentBssStart );

    _ovl_Effect_Ss_Dt_BubbleSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Dt_Bubble : AT(_RomSize)
    {
        _ovl_Effect_Ss_Dt_BubbleSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dt_BubbleSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/z_eff_ss_dt_bubble.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/ovl_Effect_Ss_Dt_Bubble_reloc.o (.text)
        _ovl_Effect_Ss_Dt_BubbleSegmentTextEnd = .;
    _ovl_Effect_Ss_Dt_BubbleSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_Dt_BubbleSegmentTextEnd - _ovl_Effect_Ss_Dt_BubbleSegmentTextStart );
        _ovl_Effect_Ss_Dt_BubbleSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/z_eff_ss_dt_bubble.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/ovl_Effect_Ss_Dt_Bubble_reloc.o (.data)
        _ovl_Effect_Ss_Dt_BubbleSegmentDataEnd = .;
    _ovl_Effect_Ss_Dt_BubbleSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_Dt_BubbleSegmentDataEnd - _ovl_Effect_Ss_Dt_BubbleSegmentDataStart );
        _ovl_Effect_Ss_Dt_BubbleSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/z_eff_ss_dt_bubble.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/ovl_Effect_Ss_Dt_Bubble_reloc.o (.rodata)
        _ovl_Effect_Ss_Dt_BubbleSegmentRoDataEnd = .;
    _ovl_Effect_Ss_Dt_BubbleSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_Dt_BubbleSegmentRoDataEnd - _ovl_Effect_Ss_Dt_BubbleSegmentRoDataStart );
        _ovl_Effect_Ss_Dt_BubbleSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/z_eff_ss_dt_bubble.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/ovl_Effect_Ss_Dt_Bubble_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dt_BubbleSegmentSDataEnd = .;
        _ovl_Effect_Ss_Dt_BubbleSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/z_eff_ss_dt_bubble.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/ovl_Effect_Ss_Dt_Bubble_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dt_BubbleSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_Dt_BubbleSegmentOvlEnd - _ovl_Effect_Ss_Dt_BubbleSegmentTextStart );
    _ovl_Effect_Ss_Dt_BubbleSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Dt_Bubble.bss ADDR(..ovl_Effect_Ss_Dt_Bubble) + SIZEOF(..ovl_Effect_Ss_Dt_Bubble) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dt_BubbleSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/z_eff_ss_dt_bubble.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/ovl_Effect_Ss_Dt_Bubble_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/z_eff_ss_dt_bubble.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/ovl_Effect_Ss_Dt_Bubble_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/z_eff_ss_dt_bubble.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/ovl_Effect_Ss_Dt_Bubble_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/z_eff_ss_dt_bubble.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Dt_Bubble/ovl_Effect_Ss_Dt_Bubble_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Dt_BubbleSegmentBssEnd = .;
        _ovl_Effect_Ss_Dt_BubbleSegmentEnd = .;
    }
    _ovl_Effect_Ss_Dt_BubbleSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_Dt_BubbleSegmentBssEnd - _ovl_Effect_Ss_Dt_BubbleSegmentBssStart );

    _ovl_Effect_Ss_DustSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Dust : AT(_RomSize)
    {
        _ovl_Effect_Ss_DustSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_DustSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dust/z_eff_ss_dust.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Dust/ovl_Effect_Ss_Dust_reloc.o (.text)
        _ovl_Effect_Ss_DustSegmentTextEnd = .;
    _ovl_Effect_Ss_DustSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_DustSegmentTextEnd - _ovl_Effect_Ss_DustSegmentTextStart );
        _ovl_Effect_Ss_DustSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dust/z_eff_ss_dust.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Dust/ovl_Effect_Ss_Dust_reloc.o (.data)
        _ovl_Effect_Ss_DustSegmentDataEnd = .;
    _ovl_Effect_Ss_DustSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_DustSegmentDataEnd - _ovl_Effect_Ss_DustSegmentDataStart );
        _ovl_Effect_Ss_DustSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dust/z_eff_ss_dust.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Dust/ovl_Effect_Ss_Dust_reloc.o (.rodata)
        _ovl_Effect_Ss_DustSegmentRoDataEnd = .;
    _ovl_Effect_Ss_DustSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_DustSegmentRoDataEnd - _ovl_Effect_Ss_DustSegmentRoDataStart );
        _ovl_Effect_Ss_DustSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dust/z_eff_ss_dust.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Dust/ovl_Effect_Ss_Dust_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_DustSegmentSDataEnd = .;
        _ovl_Effect_Ss_DustSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dust/z_eff_ss_dust.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Dust/ovl_Effect_Ss_Dust_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_DustSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_DustSegmentOvlEnd - _ovl_Effect_Ss_DustSegmentTextStart );
    _ovl_Effect_Ss_DustSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Dust.bss ADDR(..ovl_Effect_Ss_Dust) + SIZEOF(..ovl_Effect_Ss_Dust) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_DustSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Dust/z_eff_ss_dust.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Dust/ovl_Effect_Ss_Dust_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Dust/z_eff_ss_dust.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Dust/ovl_Effect_Ss_Dust_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Dust/z_eff_ss_dust.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Dust/ovl_Effect_Ss_Dust_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Dust/z_eff_ss_dust.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Dust/ovl_Effect_Ss_Dust_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_DustSegmentBssEnd = .;
        _ovl_Effect_Ss_DustSegmentEnd = .;
    }
    _ovl_Effect_Ss_DustSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_DustSegmentBssEnd - _ovl_Effect_Ss_DustSegmentBssStart );

    _ovl_Effect_Ss_En_FireSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_En_Fire : AT(_RomSize)
    {
        _ovl_Effect_Ss_En_FireSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_En_FireSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/z_eff_ss_en_fire.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/ovl_Effect_Ss_En_Fire_reloc.o (.text)
        _ovl_Effect_Ss_En_FireSegmentTextEnd = .;
    _ovl_Effect_Ss_En_FireSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_En_FireSegmentTextEnd - _ovl_Effect_Ss_En_FireSegmentTextStart );
        _ovl_Effect_Ss_En_FireSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/z_eff_ss_en_fire.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/ovl_Effect_Ss_En_Fire_reloc.o (.data)
        _ovl_Effect_Ss_En_FireSegmentDataEnd = .;
    _ovl_Effect_Ss_En_FireSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_En_FireSegmentDataEnd - _ovl_Effect_Ss_En_FireSegmentDataStart );
        _ovl_Effect_Ss_En_FireSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/z_eff_ss_en_fire.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/ovl_Effect_Ss_En_Fire_reloc.o (.rodata)
        _ovl_Effect_Ss_En_FireSegmentRoDataEnd = .;
    _ovl_Effect_Ss_En_FireSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_En_FireSegmentRoDataEnd - _ovl_Effect_Ss_En_FireSegmentRoDataStart );
        _ovl_Effect_Ss_En_FireSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/z_eff_ss_en_fire.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/ovl_Effect_Ss_En_Fire_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_En_FireSegmentSDataEnd = .;
        _ovl_Effect_Ss_En_FireSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/z_eff_ss_en_fire.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/ovl_Effect_Ss_En_Fire_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_En_FireSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_En_FireSegmentOvlEnd - _ovl_Effect_Ss_En_FireSegmentTextStart );
    _ovl_Effect_Ss_En_FireSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_En_Fire.bss ADDR(..ovl_Effect_Ss_En_Fire) + SIZEOF(..ovl_Effect_Ss_En_Fire) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_En_FireSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/z_eff_ss_en_fire.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/ovl_Effect_Ss_En_Fire_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/z_eff_ss_en_fire.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/ovl_Effect_Ss_En_Fire_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/z_eff_ss_en_fire.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/ovl_Effect_Ss_En_Fire_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/z_eff_ss_en_fire.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_En_Fire/ovl_Effect_Ss_En_Fire_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_En_FireSegmentBssEnd = .;
        _ovl_Effect_Ss_En_FireSegmentEnd = .;
    }
    _ovl_Effect_Ss_En_FireSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_En_FireSegmentBssEnd - _ovl_Effect_Ss_En_FireSegmentBssStart );

    _ovl_Effect_Ss_En_IceSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_En_Ice : AT(_RomSize)
    {
        _ovl_Effect_Ss_En_IceSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_En_IceSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/z_eff_ss_en_ice.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/ovl_Effect_Ss_En_Ice_reloc.o (.text)
        _ovl_Effect_Ss_En_IceSegmentTextEnd = .;
    _ovl_Effect_Ss_En_IceSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_En_IceSegmentTextEnd - _ovl_Effect_Ss_En_IceSegmentTextStart );
        _ovl_Effect_Ss_En_IceSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/z_eff_ss_en_ice.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/ovl_Effect_Ss_En_Ice_reloc.o (.data)
        _ovl_Effect_Ss_En_IceSegmentDataEnd = .;
    _ovl_Effect_Ss_En_IceSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_En_IceSegmentDataEnd - _ovl_Effect_Ss_En_IceSegmentDataStart );
        _ovl_Effect_Ss_En_IceSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/z_eff_ss_en_ice.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/ovl_Effect_Ss_En_Ice_reloc.o (.rodata)
        _ovl_Effect_Ss_En_IceSegmentRoDataEnd = .;
    _ovl_Effect_Ss_En_IceSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_En_IceSegmentRoDataEnd - _ovl_Effect_Ss_En_IceSegmentRoDataStart );
        _ovl_Effect_Ss_En_IceSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/z_eff_ss_en_ice.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/ovl_Effect_Ss_En_Ice_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_En_IceSegmentSDataEnd = .;
        _ovl_Effect_Ss_En_IceSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/z_eff_ss_en_ice.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/ovl_Effect_Ss_En_Ice_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_En_IceSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_En_IceSegmentOvlEnd - _ovl_Effect_Ss_En_IceSegmentTextStart );
    _ovl_Effect_Ss_En_IceSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_En_Ice.bss ADDR(..ovl_Effect_Ss_En_Ice) + SIZEOF(..ovl_Effect_Ss_En_Ice) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_En_IceSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/z_eff_ss_en_ice.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/ovl_Effect_Ss_En_Ice_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/z_eff_ss_en_ice.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/ovl_Effect_Ss_En_Ice_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/z_eff_ss_en_ice.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/ovl_Effect_Ss_En_Ice_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/z_eff_ss_en_ice.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_En_Ice/ovl_Effect_Ss_En_Ice_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_En_IceSegmentBssEnd = .;
        _ovl_Effect_Ss_En_IceSegmentEnd = .;
    }
    _ovl_Effect_Ss_En_IceSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_En_IceSegmentBssEnd - _ovl_Effect_Ss_En_IceSegmentBssStart );

    _ovl_Effect_Ss_ExtraSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Extra : AT(_RomSize)
    {
        _ovl_Effect_Ss_ExtraSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_ExtraSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Extra/z_eff_ss_extra.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Extra/ovl_Effect_Ss_Extra_reloc.o (.text)
        _ovl_Effect_Ss_ExtraSegmentTextEnd = .;
    _ovl_Effect_Ss_ExtraSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_ExtraSegmentTextEnd - _ovl_Effect_Ss_ExtraSegmentTextStart );
        _ovl_Effect_Ss_ExtraSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Extra/z_eff_ss_extra.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Extra/ovl_Effect_Ss_Extra_reloc.o (.data)
        _ovl_Effect_Ss_ExtraSegmentDataEnd = .;
    _ovl_Effect_Ss_ExtraSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_ExtraSegmentDataEnd - _ovl_Effect_Ss_ExtraSegmentDataStart );
        _ovl_Effect_Ss_ExtraSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Extra/z_eff_ss_extra.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Extra/ovl_Effect_Ss_Extra_reloc.o (.rodata)
        _ovl_Effect_Ss_ExtraSegmentRoDataEnd = .;
    _ovl_Effect_Ss_ExtraSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_ExtraSegmentRoDataEnd - _ovl_Effect_Ss_ExtraSegmentRoDataStart );
        _ovl_Effect_Ss_ExtraSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Extra/z_eff_ss_extra.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Extra/ovl_Effect_Ss_Extra_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_ExtraSegmentSDataEnd = .;
        _ovl_Effect_Ss_ExtraSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Extra/z_eff_ss_extra.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Extra/ovl_Effect_Ss_Extra_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_ExtraSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_ExtraSegmentOvlEnd - _ovl_Effect_Ss_ExtraSegmentTextStart );
    _ovl_Effect_Ss_ExtraSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Extra.bss ADDR(..ovl_Effect_Ss_Extra) + SIZEOF(..ovl_Effect_Ss_Extra) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_ExtraSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Extra/z_eff_ss_extra.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Extra/ovl_Effect_Ss_Extra_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Extra/z_eff_ss_extra.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Extra/ovl_Effect_Ss_Extra_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Extra/z_eff_ss_extra.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Extra/ovl_Effect_Ss_Extra_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Extra/z_eff_ss_extra.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Extra/ovl_Effect_Ss_Extra_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_ExtraSegmentBssEnd = .;
        _ovl_Effect_Ss_ExtraSegmentEnd = .;
    }
    _ovl_Effect_Ss_ExtraSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_ExtraSegmentBssEnd - _ovl_Effect_Ss_ExtraSegmentBssStart );

    _ovl_Effect_Ss_FcircleSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Fcircle : AT(_RomSize)
    {
        _ovl_Effect_Ss_FcircleSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_FcircleSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/z_eff_ss_fcircle.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/ovl_Effect_Ss_Fcircle_reloc.o (.text)
        _ovl_Effect_Ss_FcircleSegmentTextEnd = .;
    _ovl_Effect_Ss_FcircleSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_FcircleSegmentTextEnd - _ovl_Effect_Ss_FcircleSegmentTextStart );
        _ovl_Effect_Ss_FcircleSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/z_eff_ss_fcircle.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/ovl_Effect_Ss_Fcircle_reloc.o (.data)
        _ovl_Effect_Ss_FcircleSegmentDataEnd = .;
    _ovl_Effect_Ss_FcircleSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_FcircleSegmentDataEnd - _ovl_Effect_Ss_FcircleSegmentDataStart );
        _ovl_Effect_Ss_FcircleSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/z_eff_ss_fcircle.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/ovl_Effect_Ss_Fcircle_reloc.o (.rodata)
        _ovl_Effect_Ss_FcircleSegmentRoDataEnd = .;
    _ovl_Effect_Ss_FcircleSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_FcircleSegmentRoDataEnd - _ovl_Effect_Ss_FcircleSegmentRoDataStart );
        _ovl_Effect_Ss_FcircleSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/z_eff_ss_fcircle.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/ovl_Effect_Ss_Fcircle_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_FcircleSegmentSDataEnd = .;
        _ovl_Effect_Ss_FcircleSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/z_eff_ss_fcircle.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/ovl_Effect_Ss_Fcircle_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_FcircleSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_FcircleSegmentOvlEnd - _ovl_Effect_Ss_FcircleSegmentTextStart );
    _ovl_Effect_Ss_FcircleSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Fcircle.bss ADDR(..ovl_Effect_Ss_Fcircle) + SIZEOF(..ovl_Effect_Ss_Fcircle) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_FcircleSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/z_eff_ss_fcircle.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/ovl_Effect_Ss_Fcircle_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/z_eff_ss_fcircle.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/ovl_Effect_Ss_Fcircle_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/z_eff_ss_fcircle.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/ovl_Effect_Ss_Fcircle_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/z_eff_ss_fcircle.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Fcircle/ovl_Effect_Ss_Fcircle_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_FcircleSegmentBssEnd = .;
        _ovl_Effect_Ss_FcircleSegmentEnd = .;
    }
    _ovl_Effect_Ss_FcircleSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_FcircleSegmentBssEnd - _ovl_Effect_Ss_FcircleSegmentBssStart );

    _ovl_Effect_Ss_Fhg_FlashSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Fhg_Flash : AT(_RomSize)
    {
        _ovl_Effect_Ss_Fhg_FlashSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Fhg_FlashSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/z_eff_ss_fhg_flash.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/ovl_Effect_Ss_Fhg_Flash_reloc.o (.text)
        _ovl_Effect_Ss_Fhg_FlashSegmentTextEnd = .;
    _ovl_Effect_Ss_Fhg_FlashSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_Fhg_FlashSegmentTextEnd - _ovl_Effect_Ss_Fhg_FlashSegmentTextStart );
        _ovl_Effect_Ss_Fhg_FlashSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/z_eff_ss_fhg_flash.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/ovl_Effect_Ss_Fhg_Flash_reloc.o (.data)
        _ovl_Effect_Ss_Fhg_FlashSegmentDataEnd = .;
    _ovl_Effect_Ss_Fhg_FlashSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_Fhg_FlashSegmentDataEnd - _ovl_Effect_Ss_Fhg_FlashSegmentDataStart );
        _ovl_Effect_Ss_Fhg_FlashSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/z_eff_ss_fhg_flash.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/ovl_Effect_Ss_Fhg_Flash_reloc.o (.rodata)
        _ovl_Effect_Ss_Fhg_FlashSegmentRoDataEnd = .;
    _ovl_Effect_Ss_Fhg_FlashSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_Fhg_FlashSegmentRoDataEnd - _ovl_Effect_Ss_Fhg_FlashSegmentRoDataStart );
        _ovl_Effect_Ss_Fhg_FlashSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/z_eff_ss_fhg_flash.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/ovl_Effect_Ss_Fhg_Flash_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Fhg_FlashSegmentSDataEnd = .;
        _ovl_Effect_Ss_Fhg_FlashSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/z_eff_ss_fhg_flash.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/ovl_Effect_Ss_Fhg_Flash_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Fhg_FlashSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_Fhg_FlashSegmentOvlEnd - _ovl_Effect_Ss_Fhg_FlashSegmentTextStart );
    _ovl_Effect_Ss_Fhg_FlashSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Fhg_Flash.bss ADDR(..ovl_Effect_Ss_Fhg_Flash) + SIZEOF(..ovl_Effect_Ss_Fhg_Flash) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Fhg_FlashSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/z_eff_ss_fhg_flash.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/ovl_Effect_Ss_Fhg_Flash_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/z_eff_ss_fhg_flash.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/ovl_Effect_Ss_Fhg_Flash_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/z_eff_ss_fhg_flash.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/ovl_Effect_Ss_Fhg_Flash_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/z_eff_ss_fhg_flash.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Fhg_Flash/ovl_Effect_Ss_Fhg_Flash_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Fhg_FlashSegmentBssEnd = .;
        _ovl_Effect_Ss_Fhg_FlashSegmentEnd = .;
    }
    _ovl_Effect_Ss_Fhg_FlashSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_Fhg_FlashSegmentBssEnd - _ovl_Effect_Ss_Fhg_FlashSegmentBssStart );

    _ovl_Effect_Ss_Fire_TailSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Fire_Tail : AT(_RomSize)
    {
        _ovl_Effect_Ss_Fire_TailSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Fire_TailSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/z_eff_ss_fire_tail.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/ovl_Effect_Ss_Fire_Tail_reloc.o (.text)
        _ovl_Effect_Ss_Fire_TailSegmentTextEnd = .;
    _ovl_Effect_Ss_Fire_TailSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_Fire_TailSegmentTextEnd - _ovl_Effect_Ss_Fire_TailSegmentTextStart );
        _ovl_Effect_Ss_Fire_TailSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/z_eff_ss_fire_tail.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/ovl_Effect_Ss_Fire_Tail_reloc.o (.data)
        _ovl_Effect_Ss_Fire_TailSegmentDataEnd = .;
    _ovl_Effect_Ss_Fire_TailSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_Fire_TailSegmentDataEnd - _ovl_Effect_Ss_Fire_TailSegmentDataStart );
        _ovl_Effect_Ss_Fire_TailSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/z_eff_ss_fire_tail.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/ovl_Effect_Ss_Fire_Tail_reloc.o (.rodata)
        _ovl_Effect_Ss_Fire_TailSegmentRoDataEnd = .;
    _ovl_Effect_Ss_Fire_TailSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_Fire_TailSegmentRoDataEnd - _ovl_Effect_Ss_Fire_TailSegmentRoDataStart );
        _ovl_Effect_Ss_Fire_TailSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/z_eff_ss_fire_tail.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/ovl_Effect_Ss_Fire_Tail_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Fire_TailSegmentSDataEnd = .;
        _ovl_Effect_Ss_Fire_TailSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/z_eff_ss_fire_tail.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/ovl_Effect_Ss_Fire_Tail_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Fire_TailSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_Fire_TailSegmentOvlEnd - _ovl_Effect_Ss_Fire_TailSegmentTextStart );
    _ovl_Effect_Ss_Fire_TailSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Fire_Tail.bss ADDR(..ovl_Effect_Ss_Fire_Tail) + SIZEOF(..ovl_Effect_Ss_Fire_Tail) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Fire_TailSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/z_eff_ss_fire_tail.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/ovl_Effect_Ss_Fire_Tail_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/z_eff_ss_fire_tail.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/ovl_Effect_Ss_Fire_Tail_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/z_eff_ss_fire_tail.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/ovl_Effect_Ss_Fire_Tail_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/z_eff_ss_fire_tail.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Fire_Tail/ovl_Effect_Ss_Fire_Tail_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Fire_TailSegmentBssEnd = .;
        _ovl_Effect_Ss_Fire_TailSegmentEnd = .;
    }
    _ovl_Effect_Ss_Fire_TailSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_Fire_TailSegmentBssEnd - _ovl_Effect_Ss_Fire_TailSegmentBssStart );

    _ovl_Effect_Ss_G_FireSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_G_Fire : AT(_RomSize)
    {
        _ovl_Effect_Ss_G_FireSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_FireSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/z_eff_ss_g_fire.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/ovl_Effect_Ss_G_Fire_reloc.o (.text)
        _ovl_Effect_Ss_G_FireSegmentTextEnd = .;
    _ovl_Effect_Ss_G_FireSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_G_FireSegmentTextEnd - _ovl_Effect_Ss_G_FireSegmentTextStart );
        _ovl_Effect_Ss_G_FireSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/z_eff_ss_g_fire.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/ovl_Effect_Ss_G_Fire_reloc.o (.data)
        _ovl_Effect_Ss_G_FireSegmentDataEnd = .;
    _ovl_Effect_Ss_G_FireSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_G_FireSegmentDataEnd - _ovl_Effect_Ss_G_FireSegmentDataStart );
        _ovl_Effect_Ss_G_FireSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/z_eff_ss_g_fire.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/ovl_Effect_Ss_G_Fire_reloc.o (.rodata)
        _ovl_Effect_Ss_G_FireSegmentRoDataEnd = .;
    _ovl_Effect_Ss_G_FireSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_G_FireSegmentRoDataEnd - _ovl_Effect_Ss_G_FireSegmentRoDataStart );
        _ovl_Effect_Ss_G_FireSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/z_eff_ss_g_fire.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/ovl_Effect_Ss_G_Fire_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_FireSegmentSDataEnd = .;
        _ovl_Effect_Ss_G_FireSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/z_eff_ss_g_fire.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/ovl_Effect_Ss_G_Fire_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_FireSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_G_FireSegmentOvlEnd - _ovl_Effect_Ss_G_FireSegmentTextStart );
    _ovl_Effect_Ss_G_FireSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_G_Fire.bss ADDR(..ovl_Effect_Ss_G_Fire) + SIZEOF(..ovl_Effect_Ss_G_Fire) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_FireSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/z_eff_ss_g_fire.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/ovl_Effect_Ss_G_Fire_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/z_eff_ss_g_fire.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/ovl_Effect_Ss_G_Fire_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/z_eff_ss_g_fire.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/ovl_Effect_Ss_G_Fire_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/z_eff_ss_g_fire.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_G_Fire/ovl_Effect_Ss_G_Fire_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_FireSegmentBssEnd = .;
        _ovl_Effect_Ss_G_FireSegmentEnd = .;
    }
    _ovl_Effect_Ss_G_FireSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_G_FireSegmentBssEnd - _ovl_Effect_Ss_G_FireSegmentBssStart );

    _ovl_Effect_Ss_G_MagmaSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_G_Magma : AT(_RomSize)
    {
        _ovl_Effect_Ss_G_MagmaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_MagmaSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/z_eff_ss_g_magma.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/ovl_Effect_Ss_G_Magma_reloc.o (.text)
        _ovl_Effect_Ss_G_MagmaSegmentTextEnd = .;
    _ovl_Effect_Ss_G_MagmaSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_G_MagmaSegmentTextEnd - _ovl_Effect_Ss_G_MagmaSegmentTextStart );
        _ovl_Effect_Ss_G_MagmaSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/z_eff_ss_g_magma.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/ovl_Effect_Ss_G_Magma_reloc.o (.data)
        _ovl_Effect_Ss_G_MagmaSegmentDataEnd = .;
    _ovl_Effect_Ss_G_MagmaSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_G_MagmaSegmentDataEnd - _ovl_Effect_Ss_G_MagmaSegmentDataStart );
        _ovl_Effect_Ss_G_MagmaSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/z_eff_ss_g_magma.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/ovl_Effect_Ss_G_Magma_reloc.o (.rodata)
        _ovl_Effect_Ss_G_MagmaSegmentRoDataEnd = .;
    _ovl_Effect_Ss_G_MagmaSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_G_MagmaSegmentRoDataEnd - _ovl_Effect_Ss_G_MagmaSegmentRoDataStart );
        _ovl_Effect_Ss_G_MagmaSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/z_eff_ss_g_magma.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/ovl_Effect_Ss_G_Magma_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_MagmaSegmentSDataEnd = .;
        _ovl_Effect_Ss_G_MagmaSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/z_eff_ss_g_magma.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/ovl_Effect_Ss_G_Magma_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_MagmaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_G_MagmaSegmentOvlEnd - _ovl_Effect_Ss_G_MagmaSegmentTextStart );
    _ovl_Effect_Ss_G_MagmaSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_G_Magma.bss ADDR(..ovl_Effect_Ss_G_Magma) + SIZEOF(..ovl_Effect_Ss_G_Magma) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_MagmaSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/z_eff_ss_g_magma.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/ovl_Effect_Ss_G_Magma_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/z_eff_ss_g_magma.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/ovl_Effect_Ss_G_Magma_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/z_eff_ss_g_magma.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/ovl_Effect_Ss_G_Magma_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/z_eff_ss_g_magma.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma/ovl_Effect_Ss_G_Magma_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_MagmaSegmentBssEnd = .;
        _ovl_Effect_Ss_G_MagmaSegmentEnd = .;
    }
    _ovl_Effect_Ss_G_MagmaSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_G_MagmaSegmentBssEnd - _ovl_Effect_Ss_G_MagmaSegmentBssStart );

    _ovl_Effect_Ss_G_Magma2SegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_G_Magma2 : AT(_RomSize)
    {
        _ovl_Effect_Ss_G_Magma2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_Magma2SegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/z_eff_ss_g_magma2.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/ovl_Effect_Ss_G_Magma2_reloc.o (.text)
        _ovl_Effect_Ss_G_Magma2SegmentTextEnd = .;
    _ovl_Effect_Ss_G_Magma2SegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_G_Magma2SegmentTextEnd - _ovl_Effect_Ss_G_Magma2SegmentTextStart );
        _ovl_Effect_Ss_G_Magma2SegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/z_eff_ss_g_magma2.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/ovl_Effect_Ss_G_Magma2_reloc.o (.data)
        _ovl_Effect_Ss_G_Magma2SegmentDataEnd = .;
    _ovl_Effect_Ss_G_Magma2SegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_G_Magma2SegmentDataEnd - _ovl_Effect_Ss_G_Magma2SegmentDataStart );
        _ovl_Effect_Ss_G_Magma2SegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/z_eff_ss_g_magma2.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/ovl_Effect_Ss_G_Magma2_reloc.o (.rodata)
        _ovl_Effect_Ss_G_Magma2SegmentRoDataEnd = .;
    _ovl_Effect_Ss_G_Magma2SegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_G_Magma2SegmentRoDataEnd - _ovl_Effect_Ss_G_Magma2SegmentRoDataStart );
        _ovl_Effect_Ss_G_Magma2SegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/z_eff_ss_g_magma2.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/ovl_Effect_Ss_G_Magma2_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_Magma2SegmentSDataEnd = .;
        _ovl_Effect_Ss_G_Magma2SegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/z_eff_ss_g_magma2.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/ovl_Effect_Ss_G_Magma2_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_Magma2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_G_Magma2SegmentOvlEnd - _ovl_Effect_Ss_G_Magma2SegmentTextStart );
    _ovl_Effect_Ss_G_Magma2SegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_G_Magma2.bss ADDR(..ovl_Effect_Ss_G_Magma2) + SIZEOF(..ovl_Effect_Ss_G_Magma2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_Magma2SegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/z_eff_ss_g_magma2.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/ovl_Effect_Ss_G_Magma2_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/z_eff_ss_g_magma2.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/ovl_Effect_Ss_G_Magma2_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/z_eff_ss_g_magma2.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/ovl_Effect_Ss_G_Magma2_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/z_eff_ss_g_magma2.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_G_Magma2/ovl_Effect_Ss_G_Magma2_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_Magma2SegmentBssEnd = .;
        _ovl_Effect_Ss_G_Magma2SegmentEnd = .;
    }
    _ovl_Effect_Ss_G_Magma2SegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_G_Magma2SegmentBssEnd - _ovl_Effect_Ss_G_Magma2SegmentBssStart );

    _ovl_Effect_Ss_G_RippleSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_G_Ripple : AT(_RomSize)
    {
        _ovl_Effect_Ss_G_RippleSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_RippleSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/z_eff_ss_g_ripple.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/ovl_Effect_Ss_G_Ripple_reloc.o (.text)
        _ovl_Effect_Ss_G_RippleSegmentTextEnd = .;
    _ovl_Effect_Ss_G_RippleSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_G_RippleSegmentTextEnd - _ovl_Effect_Ss_G_RippleSegmentTextStart );
        _ovl_Effect_Ss_G_RippleSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/z_eff_ss_g_ripple.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/ovl_Effect_Ss_G_Ripple_reloc.o (.data)
        _ovl_Effect_Ss_G_RippleSegmentDataEnd = .;
    _ovl_Effect_Ss_G_RippleSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_G_RippleSegmentDataEnd - _ovl_Effect_Ss_G_RippleSegmentDataStart );
        _ovl_Effect_Ss_G_RippleSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/z_eff_ss_g_ripple.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/ovl_Effect_Ss_G_Ripple_reloc.o (.rodata)
        _ovl_Effect_Ss_G_RippleSegmentRoDataEnd = .;
    _ovl_Effect_Ss_G_RippleSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_G_RippleSegmentRoDataEnd - _ovl_Effect_Ss_G_RippleSegmentRoDataStart );
        _ovl_Effect_Ss_G_RippleSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/z_eff_ss_g_ripple.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/ovl_Effect_Ss_G_Ripple_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_RippleSegmentSDataEnd = .;
        _ovl_Effect_Ss_G_RippleSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/z_eff_ss_g_ripple.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/ovl_Effect_Ss_G_Ripple_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_RippleSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_G_RippleSegmentOvlEnd - _ovl_Effect_Ss_G_RippleSegmentTextStart );
    _ovl_Effect_Ss_G_RippleSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_G_Ripple.bss ADDR(..ovl_Effect_Ss_G_Ripple) + SIZEOF(..ovl_Effect_Ss_G_Ripple) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_RippleSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/z_eff_ss_g_ripple.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/ovl_Effect_Ss_G_Ripple_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/z_eff_ss_g_ripple.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/ovl_Effect_Ss_G_Ripple_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/z_eff_ss_g_ripple.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/ovl_Effect_Ss_G_Ripple_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/z_eff_ss_g_ripple.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_G_Ripple/ovl_Effect_Ss_G_Ripple_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_RippleSegmentBssEnd = .;
        _ovl_Effect_Ss_G_RippleSegmentEnd = .;
    }
    _ovl_Effect_Ss_G_RippleSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_G_RippleSegmentBssEnd - _ovl_Effect_Ss_G_RippleSegmentBssStart );

    _ovl_Effect_Ss_G_SpkSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_G_Spk : AT(_RomSize)
    {
        _ovl_Effect_Ss_G_SpkSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_SpkSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/z_eff_ss_g_spk.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/ovl_Effect_Ss_G_Spk_reloc.o (.text)
        _ovl_Effect_Ss_G_SpkSegmentTextEnd = .;
    _ovl_Effect_Ss_G_SpkSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_G_SpkSegmentTextEnd - _ovl_Effect_Ss_G_SpkSegmentTextStart );
        _ovl_Effect_Ss_G_SpkSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/z_eff_ss_g_spk.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/ovl_Effect_Ss_G_Spk_reloc.o (.data)
        _ovl_Effect_Ss_G_SpkSegmentDataEnd = .;
    _ovl_Effect_Ss_G_SpkSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_G_SpkSegmentDataEnd - _ovl_Effect_Ss_G_SpkSegmentDataStart );
        _ovl_Effect_Ss_G_SpkSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/z_eff_ss_g_spk.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/ovl_Effect_Ss_G_Spk_reloc.o (.rodata)
        _ovl_Effect_Ss_G_SpkSegmentRoDataEnd = .;
    _ovl_Effect_Ss_G_SpkSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_G_SpkSegmentRoDataEnd - _ovl_Effect_Ss_G_SpkSegmentRoDataStart );
        _ovl_Effect_Ss_G_SpkSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/z_eff_ss_g_spk.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/ovl_Effect_Ss_G_Spk_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_SpkSegmentSDataEnd = .;
        _ovl_Effect_Ss_G_SpkSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/z_eff_ss_g_spk.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/ovl_Effect_Ss_G_Spk_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_SpkSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_G_SpkSegmentOvlEnd - _ovl_Effect_Ss_G_SpkSegmentTextStart );
    _ovl_Effect_Ss_G_SpkSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_G_Spk.bss ADDR(..ovl_Effect_Ss_G_Spk) + SIZEOF(..ovl_Effect_Ss_G_Spk) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_SpkSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/z_eff_ss_g_spk.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/ovl_Effect_Ss_G_Spk_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/z_eff_ss_g_spk.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/ovl_Effect_Ss_G_Spk_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/z_eff_ss_g_spk.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/ovl_Effect_Ss_G_Spk_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/z_eff_ss_g_spk.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_G_Spk/ovl_Effect_Ss_G_Spk_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_SpkSegmentBssEnd = .;
        _ovl_Effect_Ss_G_SpkSegmentEnd = .;
    }
    _ovl_Effect_Ss_G_SpkSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_G_SpkSegmentBssEnd - _ovl_Effect_Ss_G_SpkSegmentBssStart );

    _ovl_Effect_Ss_G_SplashSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_G_Splash : AT(_RomSize)
    {
        _ovl_Effect_Ss_G_SplashSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_SplashSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/z_eff_ss_g_splash.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/ovl_Effect_Ss_G_Splash_reloc.o (.text)
        _ovl_Effect_Ss_G_SplashSegmentTextEnd = .;
    _ovl_Effect_Ss_G_SplashSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_G_SplashSegmentTextEnd - _ovl_Effect_Ss_G_SplashSegmentTextStart );
        _ovl_Effect_Ss_G_SplashSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/z_eff_ss_g_splash.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/ovl_Effect_Ss_G_Splash_reloc.o (.data)
        _ovl_Effect_Ss_G_SplashSegmentDataEnd = .;
    _ovl_Effect_Ss_G_SplashSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_G_SplashSegmentDataEnd - _ovl_Effect_Ss_G_SplashSegmentDataStart );
        _ovl_Effect_Ss_G_SplashSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/z_eff_ss_g_splash.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/ovl_Effect_Ss_G_Splash_reloc.o (.rodata)
        _ovl_Effect_Ss_G_SplashSegmentRoDataEnd = .;
    _ovl_Effect_Ss_G_SplashSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_G_SplashSegmentRoDataEnd - _ovl_Effect_Ss_G_SplashSegmentRoDataStart );
        _ovl_Effect_Ss_G_SplashSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/z_eff_ss_g_splash.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/ovl_Effect_Ss_G_Splash_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_SplashSegmentSDataEnd = .;
        _ovl_Effect_Ss_G_SplashSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/z_eff_ss_g_splash.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/ovl_Effect_Ss_G_Splash_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_SplashSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_G_SplashSegmentOvlEnd - _ovl_Effect_Ss_G_SplashSegmentTextStart );
    _ovl_Effect_Ss_G_SplashSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_G_Splash.bss ADDR(..ovl_Effect_Ss_G_Splash) + SIZEOF(..ovl_Effect_Ss_G_Splash) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_SplashSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/z_eff_ss_g_splash.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/ovl_Effect_Ss_G_Splash_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/z_eff_ss_g_splash.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/ovl_Effect_Ss_G_Splash_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/z_eff_ss_g_splash.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/ovl_Effect_Ss_G_Splash_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/z_eff_ss_g_splash.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_G_Splash/ovl_Effect_Ss_G_Splash_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_G_SplashSegmentBssEnd = .;
        _ovl_Effect_Ss_G_SplashSegmentEnd = .;
    }
    _ovl_Effect_Ss_G_SplashSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_G_SplashSegmentBssEnd - _ovl_Effect_Ss_G_SplashSegmentBssStart );

    _ovl_Effect_Ss_HahenSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Hahen : AT(_RomSize)
    {
        _ovl_Effect_Ss_HahenSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_HahenSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/z_eff_ss_hahen.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/ovl_Effect_Ss_Hahen_reloc.o (.text)
        _ovl_Effect_Ss_HahenSegmentTextEnd = .;
    _ovl_Effect_Ss_HahenSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_HahenSegmentTextEnd - _ovl_Effect_Ss_HahenSegmentTextStart );
        _ovl_Effect_Ss_HahenSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/z_eff_ss_hahen.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/ovl_Effect_Ss_Hahen_reloc.o (.data)
        _ovl_Effect_Ss_HahenSegmentDataEnd = .;
    _ovl_Effect_Ss_HahenSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_HahenSegmentDataEnd - _ovl_Effect_Ss_HahenSegmentDataStart );
        _ovl_Effect_Ss_HahenSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/z_eff_ss_hahen.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/ovl_Effect_Ss_Hahen_reloc.o (.rodata)
        _ovl_Effect_Ss_HahenSegmentRoDataEnd = .;
    _ovl_Effect_Ss_HahenSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_HahenSegmentRoDataEnd - _ovl_Effect_Ss_HahenSegmentRoDataStart );
        _ovl_Effect_Ss_HahenSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/z_eff_ss_hahen.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/ovl_Effect_Ss_Hahen_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_HahenSegmentSDataEnd = .;
        _ovl_Effect_Ss_HahenSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/z_eff_ss_hahen.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/ovl_Effect_Ss_Hahen_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_HahenSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_HahenSegmentOvlEnd - _ovl_Effect_Ss_HahenSegmentTextStart );
    _ovl_Effect_Ss_HahenSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Hahen.bss ADDR(..ovl_Effect_Ss_Hahen) + SIZEOF(..ovl_Effect_Ss_Hahen) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_HahenSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/z_eff_ss_hahen.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/ovl_Effect_Ss_Hahen_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/z_eff_ss_hahen.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/ovl_Effect_Ss_Hahen_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/z_eff_ss_hahen.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/ovl_Effect_Ss_Hahen_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/z_eff_ss_hahen.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Hahen/ovl_Effect_Ss_Hahen_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_HahenSegmentBssEnd = .;
        _ovl_Effect_Ss_HahenSegmentEnd = .;
    }
    _ovl_Effect_Ss_HahenSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_HahenSegmentBssEnd - _ovl_Effect_Ss_HahenSegmentBssStart );

    _ovl_Effect_Ss_HitMarkSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_HitMark : AT(_RomSize)
    {
        _ovl_Effect_Ss_HitMarkSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_HitMarkSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/z_eff_ss_hitmark.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/ovl_Effect_Ss_HitMark_reloc.o (.text)
        _ovl_Effect_Ss_HitMarkSegmentTextEnd = .;
    _ovl_Effect_Ss_HitMarkSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_HitMarkSegmentTextEnd - _ovl_Effect_Ss_HitMarkSegmentTextStart );
        _ovl_Effect_Ss_HitMarkSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/z_eff_ss_hitmark.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/ovl_Effect_Ss_HitMark_reloc.o (.data)
        _ovl_Effect_Ss_HitMarkSegmentDataEnd = .;
    _ovl_Effect_Ss_HitMarkSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_HitMarkSegmentDataEnd - _ovl_Effect_Ss_HitMarkSegmentDataStart );
        _ovl_Effect_Ss_HitMarkSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/z_eff_ss_hitmark.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/ovl_Effect_Ss_HitMark_reloc.o (.rodata)
        _ovl_Effect_Ss_HitMarkSegmentRoDataEnd = .;
    _ovl_Effect_Ss_HitMarkSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_HitMarkSegmentRoDataEnd - _ovl_Effect_Ss_HitMarkSegmentRoDataStart );
        _ovl_Effect_Ss_HitMarkSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/z_eff_ss_hitmark.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/ovl_Effect_Ss_HitMark_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_HitMarkSegmentSDataEnd = .;
        _ovl_Effect_Ss_HitMarkSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/z_eff_ss_hitmark.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/ovl_Effect_Ss_HitMark_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_HitMarkSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_HitMarkSegmentOvlEnd - _ovl_Effect_Ss_HitMarkSegmentTextStart );
    _ovl_Effect_Ss_HitMarkSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_HitMark.bss ADDR(..ovl_Effect_Ss_HitMark) + SIZEOF(..ovl_Effect_Ss_HitMark) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_HitMarkSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/z_eff_ss_hitmark.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/ovl_Effect_Ss_HitMark_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/z_eff_ss_hitmark.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/ovl_Effect_Ss_HitMark_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/z_eff_ss_hitmark.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/ovl_Effect_Ss_HitMark_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/z_eff_ss_hitmark.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_HitMark/ovl_Effect_Ss_HitMark_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_HitMarkSegmentBssEnd = .;
        _ovl_Effect_Ss_HitMarkSegmentEnd = .;
    }
    _ovl_Effect_Ss_HitMarkSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_HitMarkSegmentBssEnd - _ovl_Effect_Ss_HitMarkSegmentBssStart );

    _ovl_Effect_Ss_Ice_PieceSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Ice_Piece : AT(_RomSize)
    {
        _ovl_Effect_Ss_Ice_PieceSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Ice_PieceSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/z_eff_ss_ice_piece.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/ovl_Effect_Ss_Ice_Piece_reloc.o (.text)
        _ovl_Effect_Ss_Ice_PieceSegmentTextEnd = .;
    _ovl_Effect_Ss_Ice_PieceSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_Ice_PieceSegmentTextEnd - _ovl_Effect_Ss_Ice_PieceSegmentTextStart );
        _ovl_Effect_Ss_Ice_PieceSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/z_eff_ss_ice_piece.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/ovl_Effect_Ss_Ice_Piece_reloc.o (.data)
        _ovl_Effect_Ss_Ice_PieceSegmentDataEnd = .;
    _ovl_Effect_Ss_Ice_PieceSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_Ice_PieceSegmentDataEnd - _ovl_Effect_Ss_Ice_PieceSegmentDataStart );
        _ovl_Effect_Ss_Ice_PieceSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/z_eff_ss_ice_piece.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/ovl_Effect_Ss_Ice_Piece_reloc.o (.rodata)
        _ovl_Effect_Ss_Ice_PieceSegmentRoDataEnd = .;
    _ovl_Effect_Ss_Ice_PieceSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_Ice_PieceSegmentRoDataEnd - _ovl_Effect_Ss_Ice_PieceSegmentRoDataStart );
        _ovl_Effect_Ss_Ice_PieceSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/z_eff_ss_ice_piece.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/ovl_Effect_Ss_Ice_Piece_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Ice_PieceSegmentSDataEnd = .;
        _ovl_Effect_Ss_Ice_PieceSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/z_eff_ss_ice_piece.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/ovl_Effect_Ss_Ice_Piece_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Ice_PieceSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_Ice_PieceSegmentOvlEnd - _ovl_Effect_Ss_Ice_PieceSegmentTextStart );
    _ovl_Effect_Ss_Ice_PieceSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Ice_Piece.bss ADDR(..ovl_Effect_Ss_Ice_Piece) + SIZEOF(..ovl_Effect_Ss_Ice_Piece) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Ice_PieceSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/z_eff_ss_ice_piece.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/ovl_Effect_Ss_Ice_Piece_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/z_eff_ss_ice_piece.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/ovl_Effect_Ss_Ice_Piece_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/z_eff_ss_ice_piece.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/ovl_Effect_Ss_Ice_Piece_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/z_eff_ss_ice_piece.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Piece/ovl_Effect_Ss_Ice_Piece_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Ice_PieceSegmentBssEnd = .;
        _ovl_Effect_Ss_Ice_PieceSegmentEnd = .;
    }
    _ovl_Effect_Ss_Ice_PieceSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_Ice_PieceSegmentBssEnd - _ovl_Effect_Ss_Ice_PieceSegmentBssStart );

    _ovl_Effect_Ss_Ice_SmokeSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Ice_Smoke : AT(_RomSize)
    {
        _ovl_Effect_Ss_Ice_SmokeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Ice_SmokeSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/z_eff_ss_ice_smoke.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/ovl_Effect_Ss_Ice_Smoke_reloc.o (.text)
        _ovl_Effect_Ss_Ice_SmokeSegmentTextEnd = .;
    _ovl_Effect_Ss_Ice_SmokeSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_Ice_SmokeSegmentTextEnd - _ovl_Effect_Ss_Ice_SmokeSegmentTextStart );
        _ovl_Effect_Ss_Ice_SmokeSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/z_eff_ss_ice_smoke.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/ovl_Effect_Ss_Ice_Smoke_reloc.o (.data)
        _ovl_Effect_Ss_Ice_SmokeSegmentDataEnd = .;
    _ovl_Effect_Ss_Ice_SmokeSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_Ice_SmokeSegmentDataEnd - _ovl_Effect_Ss_Ice_SmokeSegmentDataStart );
        _ovl_Effect_Ss_Ice_SmokeSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/z_eff_ss_ice_smoke.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/ovl_Effect_Ss_Ice_Smoke_reloc.o (.rodata)
        _ovl_Effect_Ss_Ice_SmokeSegmentRoDataEnd = .;
    _ovl_Effect_Ss_Ice_SmokeSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_Ice_SmokeSegmentRoDataEnd - _ovl_Effect_Ss_Ice_SmokeSegmentRoDataStart );
        _ovl_Effect_Ss_Ice_SmokeSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/z_eff_ss_ice_smoke.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/ovl_Effect_Ss_Ice_Smoke_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Ice_SmokeSegmentSDataEnd = .;
        _ovl_Effect_Ss_Ice_SmokeSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/z_eff_ss_ice_smoke.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/ovl_Effect_Ss_Ice_Smoke_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Ice_SmokeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_Ice_SmokeSegmentOvlEnd - _ovl_Effect_Ss_Ice_SmokeSegmentTextStart );
    _ovl_Effect_Ss_Ice_SmokeSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Ice_Smoke.bss ADDR(..ovl_Effect_Ss_Ice_Smoke) + SIZEOF(..ovl_Effect_Ss_Ice_Smoke) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Ice_SmokeSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/z_eff_ss_ice_smoke.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/ovl_Effect_Ss_Ice_Smoke_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/z_eff_ss_ice_smoke.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/ovl_Effect_Ss_Ice_Smoke_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/z_eff_ss_ice_smoke.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/ovl_Effect_Ss_Ice_Smoke_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/z_eff_ss_ice_smoke.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Ice_Smoke/ovl_Effect_Ss_Ice_Smoke_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Ice_SmokeSegmentBssEnd = .;
        _ovl_Effect_Ss_Ice_SmokeSegmentEnd = .;
    }
    _ovl_Effect_Ss_Ice_SmokeSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_Ice_SmokeSegmentBssEnd - _ovl_Effect_Ss_Ice_SmokeSegmentBssStart );

    _ovl_Effect_Ss_K_FireSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_K_Fire : AT(_RomSize)
    {
        _ovl_Effect_Ss_K_FireSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_K_FireSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/z_eff_ss_k_fire.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/ovl_Effect_Ss_K_Fire_reloc.o (.text)
        _ovl_Effect_Ss_K_FireSegmentTextEnd = .;
    _ovl_Effect_Ss_K_FireSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_K_FireSegmentTextEnd - _ovl_Effect_Ss_K_FireSegmentTextStart );
        _ovl_Effect_Ss_K_FireSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/z_eff_ss_k_fire.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/ovl_Effect_Ss_K_Fire_reloc.o (.data)
        _ovl_Effect_Ss_K_FireSegmentDataEnd = .;
    _ovl_Effect_Ss_K_FireSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_K_FireSegmentDataEnd - _ovl_Effect_Ss_K_FireSegmentDataStart );
        _ovl_Effect_Ss_K_FireSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/z_eff_ss_k_fire.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/ovl_Effect_Ss_K_Fire_reloc.o (.rodata)
        _ovl_Effect_Ss_K_FireSegmentRoDataEnd = .;
    _ovl_Effect_Ss_K_FireSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_K_FireSegmentRoDataEnd - _ovl_Effect_Ss_K_FireSegmentRoDataStart );
        _ovl_Effect_Ss_K_FireSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/z_eff_ss_k_fire.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/ovl_Effect_Ss_K_Fire_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_K_FireSegmentSDataEnd = .;
        _ovl_Effect_Ss_K_FireSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/z_eff_ss_k_fire.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/ovl_Effect_Ss_K_Fire_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_K_FireSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_K_FireSegmentOvlEnd - _ovl_Effect_Ss_K_FireSegmentTextStart );
    _ovl_Effect_Ss_K_FireSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_K_Fire.bss ADDR(..ovl_Effect_Ss_K_Fire) + SIZEOF(..ovl_Effect_Ss_K_Fire) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_K_FireSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/z_eff_ss_k_fire.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/ovl_Effect_Ss_K_Fire_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/z_eff_ss_k_fire.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/ovl_Effect_Ss_K_Fire_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/z_eff_ss_k_fire.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/ovl_Effect_Ss_K_Fire_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/z_eff_ss_k_fire.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_K_Fire/ovl_Effect_Ss_K_Fire_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_K_FireSegmentBssEnd = .;
        _ovl_Effect_Ss_K_FireSegmentEnd = .;
    }
    _ovl_Effect_Ss_K_FireSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_K_FireSegmentBssEnd - _ovl_Effect_Ss_K_FireSegmentBssStart );

    _ovl_Effect_Ss_KakeraSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Kakera : AT(_RomSize)
    {
        _ovl_Effect_Ss_KakeraSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_KakeraSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/z_eff_ss_kakera.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/ovl_Effect_Ss_Kakera_reloc.o (.text)
        _ovl_Effect_Ss_KakeraSegmentTextEnd = .;
    _ovl_Effect_Ss_KakeraSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_KakeraSegmentTextEnd - _ovl_Effect_Ss_KakeraSegmentTextStart );
        _ovl_Effect_Ss_KakeraSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/z_eff_ss_kakera.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/ovl_Effect_Ss_Kakera_reloc.o (.data)
        _ovl_Effect_Ss_KakeraSegmentDataEnd = .;
    _ovl_Effect_Ss_KakeraSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_KakeraSegmentDataEnd - _ovl_Effect_Ss_KakeraSegmentDataStart );
        _ovl_Effect_Ss_KakeraSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/z_eff_ss_kakera.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/ovl_Effect_Ss_Kakera_reloc.o (.rodata)
        _ovl_Effect_Ss_KakeraSegmentRoDataEnd = .;
    _ovl_Effect_Ss_KakeraSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_KakeraSegmentRoDataEnd - _ovl_Effect_Ss_KakeraSegmentRoDataStart );
        _ovl_Effect_Ss_KakeraSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/z_eff_ss_kakera.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/ovl_Effect_Ss_Kakera_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_KakeraSegmentSDataEnd = .;
        _ovl_Effect_Ss_KakeraSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/z_eff_ss_kakera.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/ovl_Effect_Ss_Kakera_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_KakeraSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_KakeraSegmentOvlEnd - _ovl_Effect_Ss_KakeraSegmentTextStart );
    _ovl_Effect_Ss_KakeraSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Kakera.bss ADDR(..ovl_Effect_Ss_Kakera) + SIZEOF(..ovl_Effect_Ss_Kakera) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_KakeraSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/z_eff_ss_kakera.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/ovl_Effect_Ss_Kakera_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/z_eff_ss_kakera.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/ovl_Effect_Ss_Kakera_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/z_eff_ss_kakera.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/ovl_Effect_Ss_Kakera_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/z_eff_ss_kakera.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Kakera/ovl_Effect_Ss_Kakera_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_KakeraSegmentBssEnd = .;
        _ovl_Effect_Ss_KakeraSegmentEnd = .;
    }
    _ovl_Effect_Ss_KakeraSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_KakeraSegmentBssEnd - _ovl_Effect_Ss_KakeraSegmentBssStart );

    _ovl_Effect_Ss_KiraKiraSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_KiraKira : AT(_RomSize)
    {
        _ovl_Effect_Ss_KiraKiraSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_KiraKiraSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/z_eff_ss_kirakira.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/ovl_Effect_Ss_KiraKira_reloc.o (.text)
        _ovl_Effect_Ss_KiraKiraSegmentTextEnd = .;
    _ovl_Effect_Ss_KiraKiraSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_KiraKiraSegmentTextEnd - _ovl_Effect_Ss_KiraKiraSegmentTextStart );
        _ovl_Effect_Ss_KiraKiraSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/z_eff_ss_kirakira.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/ovl_Effect_Ss_KiraKira_reloc.o (.data)
        _ovl_Effect_Ss_KiraKiraSegmentDataEnd = .;
    _ovl_Effect_Ss_KiraKiraSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_KiraKiraSegmentDataEnd - _ovl_Effect_Ss_KiraKiraSegmentDataStart );
        _ovl_Effect_Ss_KiraKiraSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/z_eff_ss_kirakira.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/ovl_Effect_Ss_KiraKira_reloc.o (.rodata)
        _ovl_Effect_Ss_KiraKiraSegmentRoDataEnd = .;
    _ovl_Effect_Ss_KiraKiraSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_KiraKiraSegmentRoDataEnd - _ovl_Effect_Ss_KiraKiraSegmentRoDataStart );
        _ovl_Effect_Ss_KiraKiraSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/z_eff_ss_kirakira.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/ovl_Effect_Ss_KiraKira_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_KiraKiraSegmentSDataEnd = .;
        _ovl_Effect_Ss_KiraKiraSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/z_eff_ss_kirakira.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/ovl_Effect_Ss_KiraKira_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_KiraKiraSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_KiraKiraSegmentOvlEnd - _ovl_Effect_Ss_KiraKiraSegmentTextStart );
    _ovl_Effect_Ss_KiraKiraSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_KiraKira.bss ADDR(..ovl_Effect_Ss_KiraKira) + SIZEOF(..ovl_Effect_Ss_KiraKira) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_KiraKiraSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/z_eff_ss_kirakira.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/ovl_Effect_Ss_KiraKira_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/z_eff_ss_kirakira.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/ovl_Effect_Ss_KiraKira_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/z_eff_ss_kirakira.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/ovl_Effect_Ss_KiraKira_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/z_eff_ss_kirakira.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_KiraKira/ovl_Effect_Ss_KiraKira_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_KiraKiraSegmentBssEnd = .;
        _ovl_Effect_Ss_KiraKiraSegmentEnd = .;
    }
    _ovl_Effect_Ss_KiraKiraSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_KiraKiraSegmentBssEnd - _ovl_Effect_Ss_KiraKiraSegmentBssStart );

    _ovl_Effect_Ss_LightningSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Lightning : AT(_RomSize)
    {
        _ovl_Effect_Ss_LightningSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_LightningSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/z_eff_ss_lightning.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/ovl_Effect_Ss_Lightning_reloc.o (.text)
        _ovl_Effect_Ss_LightningSegmentTextEnd = .;
    _ovl_Effect_Ss_LightningSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_LightningSegmentTextEnd - _ovl_Effect_Ss_LightningSegmentTextStart );
        _ovl_Effect_Ss_LightningSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/z_eff_ss_lightning.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/ovl_Effect_Ss_Lightning_reloc.o (.data)
        _ovl_Effect_Ss_LightningSegmentDataEnd = .;
    _ovl_Effect_Ss_LightningSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_LightningSegmentDataEnd - _ovl_Effect_Ss_LightningSegmentDataStart );
        _ovl_Effect_Ss_LightningSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/z_eff_ss_lightning.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/ovl_Effect_Ss_Lightning_reloc.o (.rodata)
        _ovl_Effect_Ss_LightningSegmentRoDataEnd = .;
    _ovl_Effect_Ss_LightningSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_LightningSegmentRoDataEnd - _ovl_Effect_Ss_LightningSegmentRoDataStart );
        _ovl_Effect_Ss_LightningSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/z_eff_ss_lightning.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/ovl_Effect_Ss_Lightning_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_LightningSegmentSDataEnd = .;
        _ovl_Effect_Ss_LightningSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/z_eff_ss_lightning.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/ovl_Effect_Ss_Lightning_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_LightningSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_LightningSegmentOvlEnd - _ovl_Effect_Ss_LightningSegmentTextStart );
    _ovl_Effect_Ss_LightningSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Lightning.bss ADDR(..ovl_Effect_Ss_Lightning) + SIZEOF(..ovl_Effect_Ss_Lightning) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_LightningSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/z_eff_ss_lightning.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/ovl_Effect_Ss_Lightning_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/z_eff_ss_lightning.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/ovl_Effect_Ss_Lightning_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/z_eff_ss_lightning.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/ovl_Effect_Ss_Lightning_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/z_eff_ss_lightning.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Lightning/ovl_Effect_Ss_Lightning_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_LightningSegmentBssEnd = .;
        _ovl_Effect_Ss_LightningSegmentEnd = .;
    }
    _ovl_Effect_Ss_LightningSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_LightningSegmentBssEnd - _ovl_Effect_Ss_LightningSegmentBssStart );

    _ovl_Effect_Ss_SibukiSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Sibuki : AT(_RomSize)
    {
        _ovl_Effect_Ss_SibukiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_SibukiSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/z_eff_ss_sibuki.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/ovl_Effect_Ss_Sibuki_reloc.o (.text)
        _ovl_Effect_Ss_SibukiSegmentTextEnd = .;
    _ovl_Effect_Ss_SibukiSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_SibukiSegmentTextEnd - _ovl_Effect_Ss_SibukiSegmentTextStart );
        _ovl_Effect_Ss_SibukiSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/z_eff_ss_sibuki.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/ovl_Effect_Ss_Sibuki_reloc.o (.data)
        _ovl_Effect_Ss_SibukiSegmentDataEnd = .;
    _ovl_Effect_Ss_SibukiSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_SibukiSegmentDataEnd - _ovl_Effect_Ss_SibukiSegmentDataStart );
        _ovl_Effect_Ss_SibukiSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/z_eff_ss_sibuki.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/ovl_Effect_Ss_Sibuki_reloc.o (.rodata)
        _ovl_Effect_Ss_SibukiSegmentRoDataEnd = .;
    _ovl_Effect_Ss_SibukiSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_SibukiSegmentRoDataEnd - _ovl_Effect_Ss_SibukiSegmentRoDataStart );
        _ovl_Effect_Ss_SibukiSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/z_eff_ss_sibuki.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/ovl_Effect_Ss_Sibuki_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_SibukiSegmentSDataEnd = .;
        _ovl_Effect_Ss_SibukiSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/z_eff_ss_sibuki.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/ovl_Effect_Ss_Sibuki_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_SibukiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_SibukiSegmentOvlEnd - _ovl_Effect_Ss_SibukiSegmentTextStart );
    _ovl_Effect_Ss_SibukiSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Sibuki.bss ADDR(..ovl_Effect_Ss_Sibuki) + SIZEOF(..ovl_Effect_Ss_Sibuki) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_SibukiSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/z_eff_ss_sibuki.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/ovl_Effect_Ss_Sibuki_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/z_eff_ss_sibuki.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/ovl_Effect_Ss_Sibuki_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/z_eff_ss_sibuki.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/ovl_Effect_Ss_Sibuki_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/z_eff_ss_sibuki.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki/ovl_Effect_Ss_Sibuki_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_SibukiSegmentBssEnd = .;
        _ovl_Effect_Ss_SibukiSegmentEnd = .;
    }
    _ovl_Effect_Ss_SibukiSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_SibukiSegmentBssEnd - _ovl_Effect_Ss_SibukiSegmentBssStart );

    _ovl_Effect_Ss_Sibuki2SegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Sibuki2 : AT(_RomSize)
    {
        _ovl_Effect_Ss_Sibuki2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Sibuki2SegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/z_eff_ss_sibuki2.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/ovl_Effect_Ss_Sibuki2_reloc.o (.text)
        _ovl_Effect_Ss_Sibuki2SegmentTextEnd = .;
    _ovl_Effect_Ss_Sibuki2SegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_Sibuki2SegmentTextEnd - _ovl_Effect_Ss_Sibuki2SegmentTextStart );
        _ovl_Effect_Ss_Sibuki2SegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/z_eff_ss_sibuki2.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/ovl_Effect_Ss_Sibuki2_reloc.o (.data)
        _ovl_Effect_Ss_Sibuki2SegmentDataEnd = .;
    _ovl_Effect_Ss_Sibuki2SegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_Sibuki2SegmentDataEnd - _ovl_Effect_Ss_Sibuki2SegmentDataStart );
        _ovl_Effect_Ss_Sibuki2SegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/z_eff_ss_sibuki2.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/ovl_Effect_Ss_Sibuki2_reloc.o (.rodata)
        _ovl_Effect_Ss_Sibuki2SegmentRoDataEnd = .;
    _ovl_Effect_Ss_Sibuki2SegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_Sibuki2SegmentRoDataEnd - _ovl_Effect_Ss_Sibuki2SegmentRoDataStart );
        _ovl_Effect_Ss_Sibuki2SegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/z_eff_ss_sibuki2.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/ovl_Effect_Ss_Sibuki2_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Sibuki2SegmentSDataEnd = .;
        _ovl_Effect_Ss_Sibuki2SegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/z_eff_ss_sibuki2.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/ovl_Effect_Ss_Sibuki2_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Sibuki2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_Sibuki2SegmentOvlEnd - _ovl_Effect_Ss_Sibuki2SegmentTextStart );
    _ovl_Effect_Ss_Sibuki2SegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Sibuki2.bss ADDR(..ovl_Effect_Ss_Sibuki2) + SIZEOF(..ovl_Effect_Ss_Sibuki2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Sibuki2SegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/z_eff_ss_sibuki2.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/ovl_Effect_Ss_Sibuki2_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/z_eff_ss_sibuki2.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/ovl_Effect_Ss_Sibuki2_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/z_eff_ss_sibuki2.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/ovl_Effect_Ss_Sibuki2_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/z_eff_ss_sibuki2.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Sibuki2/ovl_Effect_Ss_Sibuki2_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Sibuki2SegmentBssEnd = .;
        _ovl_Effect_Ss_Sibuki2SegmentEnd = .;
    }
    _ovl_Effect_Ss_Sibuki2SegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_Sibuki2SegmentBssEnd - _ovl_Effect_Ss_Sibuki2SegmentBssStart );

    _ovl_Effect_Ss_Solder_Srch_BallSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Solder_Srch_Ball : AT(_RomSize)
    {
        _ovl_Effect_Ss_Solder_Srch_BallSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Solder_Srch_BallSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/z_eff_ss_solder_srch_ball.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/ovl_Effect_Ss_Solder_Srch_Ball_reloc.o (.text)
        _ovl_Effect_Ss_Solder_Srch_BallSegmentTextEnd = .;
    _ovl_Effect_Ss_Solder_Srch_BallSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_Solder_Srch_BallSegmentTextEnd - _ovl_Effect_Ss_Solder_Srch_BallSegmentTextStart );
        _ovl_Effect_Ss_Solder_Srch_BallSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/z_eff_ss_solder_srch_ball.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/ovl_Effect_Ss_Solder_Srch_Ball_reloc.o (.data)
        _ovl_Effect_Ss_Solder_Srch_BallSegmentDataEnd = .;
    _ovl_Effect_Ss_Solder_Srch_BallSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_Solder_Srch_BallSegmentDataEnd - _ovl_Effect_Ss_Solder_Srch_BallSegmentDataStart );
        _ovl_Effect_Ss_Solder_Srch_BallSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/z_eff_ss_solder_srch_ball.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/ovl_Effect_Ss_Solder_Srch_Ball_reloc.o (.rodata)
        _ovl_Effect_Ss_Solder_Srch_BallSegmentRoDataEnd = .;
    _ovl_Effect_Ss_Solder_Srch_BallSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_Solder_Srch_BallSegmentRoDataEnd - _ovl_Effect_Ss_Solder_Srch_BallSegmentRoDataStart );
        _ovl_Effect_Ss_Solder_Srch_BallSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/z_eff_ss_solder_srch_ball.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/ovl_Effect_Ss_Solder_Srch_Ball_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Solder_Srch_BallSegmentSDataEnd = .;
        _ovl_Effect_Ss_Solder_Srch_BallSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/z_eff_ss_solder_srch_ball.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/ovl_Effect_Ss_Solder_Srch_Ball_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Solder_Srch_BallSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_Solder_Srch_BallSegmentOvlEnd - _ovl_Effect_Ss_Solder_Srch_BallSegmentTextStart );
    _ovl_Effect_Ss_Solder_Srch_BallSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Solder_Srch_Ball.bss ADDR(..ovl_Effect_Ss_Solder_Srch_Ball) + SIZEOF(..ovl_Effect_Ss_Solder_Srch_Ball) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Solder_Srch_BallSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/z_eff_ss_solder_srch_ball.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/ovl_Effect_Ss_Solder_Srch_Ball_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/z_eff_ss_solder_srch_ball.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/ovl_Effect_Ss_Solder_Srch_Ball_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/z_eff_ss_solder_srch_ball.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/ovl_Effect_Ss_Solder_Srch_Ball_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/z_eff_ss_solder_srch_ball.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Solder_Srch_Ball/ovl_Effect_Ss_Solder_Srch_Ball_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Solder_Srch_BallSegmentBssEnd = .;
        _ovl_Effect_Ss_Solder_Srch_BallSegmentEnd = .;
    }
    _ovl_Effect_Ss_Solder_Srch_BallSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_Solder_Srch_BallSegmentBssEnd - _ovl_Effect_Ss_Solder_Srch_BallSegmentBssStart );

    _ovl_Effect_Ss_StickSegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Stick : AT(_RomSize)
    {
        _ovl_Effect_Ss_StickSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_StickSegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Stick/z_eff_ss_stick.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Stick/ovl_Effect_Ss_Stick_reloc.o (.text)
        _ovl_Effect_Ss_StickSegmentTextEnd = .;
    _ovl_Effect_Ss_StickSegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_StickSegmentTextEnd - _ovl_Effect_Ss_StickSegmentTextStart );
        _ovl_Effect_Ss_StickSegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Stick/z_eff_ss_stick.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Stick/ovl_Effect_Ss_Stick_reloc.o (.data)
        _ovl_Effect_Ss_StickSegmentDataEnd = .;
    _ovl_Effect_Ss_StickSegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_StickSegmentDataEnd - _ovl_Effect_Ss_StickSegmentDataStart );
        _ovl_Effect_Ss_StickSegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Stick/z_eff_ss_stick.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Stick/ovl_Effect_Ss_Stick_reloc.o (.rodata)
        _ovl_Effect_Ss_StickSegmentRoDataEnd = .;
    _ovl_Effect_Ss_StickSegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_StickSegmentRoDataEnd - _ovl_Effect_Ss_StickSegmentRoDataStart );
        _ovl_Effect_Ss_StickSegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Stick/z_eff_ss_stick.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Stick/ovl_Effect_Ss_Stick_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_StickSegmentSDataEnd = .;
        _ovl_Effect_Ss_StickSegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Stick/z_eff_ss_stick.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Stick/ovl_Effect_Ss_Stick_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_StickSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_StickSegmentOvlEnd - _ovl_Effect_Ss_StickSegmentTextStart );
    _ovl_Effect_Ss_StickSegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Stick.bss ADDR(..ovl_Effect_Ss_Stick) + SIZEOF(..ovl_Effect_Ss_Stick) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_StickSegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Stick/z_eff_ss_stick.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Stick/ovl_Effect_Ss_Stick_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Stick/z_eff_ss_stick.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Stick/ovl_Effect_Ss_Stick_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Stick/z_eff_ss_stick.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Stick/ovl_Effect_Ss_Stick_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Stick/z_eff_ss_stick.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Stick/ovl_Effect_Ss_Stick_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_StickSegmentBssEnd = .;
        _ovl_Effect_Ss_StickSegmentEnd = .;
    }
    _ovl_Effect_Ss_StickSegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_StickSegmentBssEnd - _ovl_Effect_Ss_StickSegmentBssStart );

    _ovl_Effect_Ss_Stone1SegmentRomStart = _RomSize;
    ..ovl_Effect_Ss_Stone1 : AT(_RomSize)
    {
        _ovl_Effect_Ss_Stone1SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Stone1SegmentTextStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/z_eff_ss_stone1.o (.text)
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/ovl_Effect_Ss_Stone1_reloc.o (.text)
        _ovl_Effect_Ss_Stone1SegmentTextEnd = .;
    _ovl_Effect_Ss_Stone1SegmentTextSize = ABSOLUTE( _ovl_Effect_Ss_Stone1SegmentTextEnd - _ovl_Effect_Ss_Stone1SegmentTextStart );
        _ovl_Effect_Ss_Stone1SegmentDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/z_eff_ss_stone1.o (.data)
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/ovl_Effect_Ss_Stone1_reloc.o (.data)
        _ovl_Effect_Ss_Stone1SegmentDataEnd = .;
    _ovl_Effect_Ss_Stone1SegmentDataSize = ABSOLUTE( _ovl_Effect_Ss_Stone1SegmentDataEnd - _ovl_Effect_Ss_Stone1SegmentDataStart );
        _ovl_Effect_Ss_Stone1SegmentRoDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/z_eff_ss_stone1.o (.rodata)
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/ovl_Effect_Ss_Stone1_reloc.o (.rodata)
        _ovl_Effect_Ss_Stone1SegmentRoDataEnd = .;
    _ovl_Effect_Ss_Stone1SegmentRoDataSize = ABSOLUTE( _ovl_Effect_Ss_Stone1SegmentRoDataEnd - _ovl_Effect_Ss_Stone1SegmentRoDataStart );
        _ovl_Effect_Ss_Stone1SegmentSDataStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/z_eff_ss_stone1.o (.sdata)
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/ovl_Effect_Ss_Stone1_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Stone1SegmentSDataEnd = .;
        _ovl_Effect_Ss_Stone1SegmentOvlStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/z_eff_ss_stone1.o (.ovl)
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/ovl_Effect_Ss_Stone1_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Stone1SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Effect_Ss_Stone1SegmentOvlEnd - _ovl_Effect_Ss_Stone1SegmentTextStart );
    _ovl_Effect_Ss_Stone1SegmentRomEnd = _RomSize;

    ..ovl_Effect_Ss_Stone1.bss ADDR(..ovl_Effect_Ss_Stone1) + SIZEOF(..ovl_Effect_Ss_Stone1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Stone1SegmentBssStart = .;
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/z_eff_ss_stone1.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/ovl_Effect_Ss_Stone1_reloc.o (.sbss)
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/z_eff_ss_stone1.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/ovl_Effect_Ss_Stone1_reloc.o (.scommon)
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/z_eff_ss_stone1.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/ovl_Effect_Ss_Stone1_reloc.o (.bss)
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/z_eff_ss_stone1.o (COMMON)
            build/src/overlays/effects/ovl_Effect_Ss_Stone1/ovl_Effect_Ss_Stone1_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Effect_Ss_Stone1SegmentBssEnd = .;
        _ovl_Effect_Ss_Stone1SegmentEnd = .;
    }
    _ovl_Effect_Ss_Stone1SegmentBssSize = ABSOLUTE( _ovl_Effect_Ss_Stone1SegmentBssEnd - _ovl_Effect_Ss_Stone1SegmentBssStart );

    _ovl_Elf_MsgSegmentRomStart = _RomSize;
    ..ovl_Elf_Msg : AT(_RomSize)
    {
        _ovl_Elf_MsgSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Elf_MsgSegmentTextStart = .;
            build/src/overlays/actors/ovl_Elf_Msg/z_elf_msg.o (.text)
            build/src/overlays/actors/ovl_Elf_Msg/ovl_Elf_Msg_reloc.o (.text)
        _ovl_Elf_MsgSegmentTextEnd = .;
    _ovl_Elf_MsgSegmentTextSize = ABSOLUTE( _ovl_Elf_MsgSegmentTextEnd - _ovl_Elf_MsgSegmentTextStart );
        _ovl_Elf_MsgSegmentDataStart = .;
            build/src/overlays/actors/ovl_Elf_Msg/z_elf_msg.o (.data)
            build/src/overlays/actors/ovl_Elf_Msg/ovl_Elf_Msg_reloc.o (.data)
        _ovl_Elf_MsgSegmentDataEnd = .;
    _ovl_Elf_MsgSegmentDataSize = ABSOLUTE( _ovl_Elf_MsgSegmentDataEnd - _ovl_Elf_MsgSegmentDataStart );
        _ovl_Elf_MsgSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Elf_Msg/z_elf_msg.o (.rodata)
            build/src/overlays/actors/ovl_Elf_Msg/ovl_Elf_Msg_reloc.o (.rodata)
        _ovl_Elf_MsgSegmentRoDataEnd = .;
    _ovl_Elf_MsgSegmentRoDataSize = ABSOLUTE( _ovl_Elf_MsgSegmentRoDataEnd - _ovl_Elf_MsgSegmentRoDataStart );
        _ovl_Elf_MsgSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Elf_Msg/z_elf_msg.o (.sdata)
            build/src/overlays/actors/ovl_Elf_Msg/ovl_Elf_Msg_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Elf_MsgSegmentSDataEnd = .;
        _ovl_Elf_MsgSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Elf_Msg/z_elf_msg.o (.ovl)
            build/src/overlays/actors/ovl_Elf_Msg/ovl_Elf_Msg_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Elf_MsgSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Elf_MsgSegmentOvlEnd - _ovl_Elf_MsgSegmentTextStart );
    _ovl_Elf_MsgSegmentRomEnd = _RomSize;

    ..ovl_Elf_Msg.bss ADDR(..ovl_Elf_Msg) + SIZEOF(..ovl_Elf_Msg) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Elf_MsgSegmentBssStart = .;
            build/src/overlays/actors/ovl_Elf_Msg/z_elf_msg.o (.sbss)
            build/src/overlays/actors/ovl_Elf_Msg/ovl_Elf_Msg_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Elf_Msg/z_elf_msg.o (.scommon)
            build/src/overlays/actors/ovl_Elf_Msg/ovl_Elf_Msg_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Elf_Msg/z_elf_msg.o (.bss)
            build/src/overlays/actors/ovl_Elf_Msg/ovl_Elf_Msg_reloc.o (.bss)
            build/src/overlays/actors/ovl_Elf_Msg/z_elf_msg.o (COMMON)
            build/src/overlays/actors/ovl_Elf_Msg/ovl_Elf_Msg_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Elf_MsgSegmentBssEnd = .;
        _ovl_Elf_MsgSegmentEnd = .;
    }
    _ovl_Elf_MsgSegmentBssSize = ABSOLUTE( _ovl_Elf_MsgSegmentBssEnd - _ovl_Elf_MsgSegmentBssStart );

    _ovl_Elf_Msg2SegmentRomStart = _RomSize;
    ..ovl_Elf_Msg2 : AT(_RomSize)
    {
        _ovl_Elf_Msg2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Elf_Msg2SegmentTextStart = .;
            build/src/overlays/actors/ovl_Elf_Msg2/z_elf_msg2.o (.text)
            build/src/overlays/actors/ovl_Elf_Msg2/ovl_Elf_Msg2_reloc.o (.text)
        _ovl_Elf_Msg2SegmentTextEnd = .;
    _ovl_Elf_Msg2SegmentTextSize = ABSOLUTE( _ovl_Elf_Msg2SegmentTextEnd - _ovl_Elf_Msg2SegmentTextStart );
        _ovl_Elf_Msg2SegmentDataStart = .;
            build/src/overlays/actors/ovl_Elf_Msg2/z_elf_msg2.o (.data)
            build/src/overlays/actors/ovl_Elf_Msg2/ovl_Elf_Msg2_reloc.o (.data)
        _ovl_Elf_Msg2SegmentDataEnd = .;
    _ovl_Elf_Msg2SegmentDataSize = ABSOLUTE( _ovl_Elf_Msg2SegmentDataEnd - _ovl_Elf_Msg2SegmentDataStart );
        _ovl_Elf_Msg2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Elf_Msg2/z_elf_msg2.o (.rodata)
            build/src/overlays/actors/ovl_Elf_Msg2/ovl_Elf_Msg2_reloc.o (.rodata)
        _ovl_Elf_Msg2SegmentRoDataEnd = .;
    _ovl_Elf_Msg2SegmentRoDataSize = ABSOLUTE( _ovl_Elf_Msg2SegmentRoDataEnd - _ovl_Elf_Msg2SegmentRoDataStart );
        _ovl_Elf_Msg2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_Elf_Msg2/z_elf_msg2.o (.sdata)
            build/src/overlays/actors/ovl_Elf_Msg2/ovl_Elf_Msg2_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Elf_Msg2SegmentSDataEnd = .;
        _ovl_Elf_Msg2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_Elf_Msg2/z_elf_msg2.o (.ovl)
            build/src/overlays/actors/ovl_Elf_Msg2/ovl_Elf_Msg2_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Elf_Msg2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Elf_Msg2SegmentOvlEnd - _ovl_Elf_Msg2SegmentTextStart );
    _ovl_Elf_Msg2SegmentRomEnd = _RomSize;

    ..ovl_Elf_Msg2.bss ADDR(..ovl_Elf_Msg2) + SIZEOF(..ovl_Elf_Msg2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Elf_Msg2SegmentBssStart = .;
            build/src/overlays/actors/ovl_Elf_Msg2/z_elf_msg2.o (.sbss)
            build/src/overlays/actors/ovl_Elf_Msg2/ovl_Elf_Msg2_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Elf_Msg2/z_elf_msg2.o (.scommon)
            build/src/overlays/actors/ovl_Elf_Msg2/ovl_Elf_Msg2_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Elf_Msg2/z_elf_msg2.o (.bss)
            build/src/overlays/actors/ovl_Elf_Msg2/ovl_Elf_Msg2_reloc.o (.bss)
            build/src/overlays/actors/ovl_Elf_Msg2/z_elf_msg2.o (COMMON)
            build/src/overlays/actors/ovl_Elf_Msg2/ovl_Elf_Msg2_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Elf_Msg2SegmentBssEnd = .;
        _ovl_Elf_Msg2SegmentEnd = .;
    }
    _ovl_Elf_Msg2SegmentBssSize = ABSOLUTE( _ovl_Elf_Msg2SegmentBssEnd - _ovl_Elf_Msg2SegmentBssStart );

    _ovl_En_AmSegmentRomStart = _RomSize;
    ..ovl_En_Am : AT(_RomSize)
    {
        _ovl_En_AmSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_AmSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Am/z_en_am.o (.text)
            build/data/overlays/actors/z_en_am.data.o (.text)
            build/data/overlays/actors/z_en_am.reloc.o (.text)
        _ovl_En_AmSegmentTextEnd = .;
    _ovl_En_AmSegmentTextSize = ABSOLUTE( _ovl_En_AmSegmentTextEnd - _ovl_En_AmSegmentTextStart );
        _ovl_En_AmSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Am/z_en_am.o (.data)
            build/data/overlays/actors/z_en_am.data.o (.data)
            build/data/overlays/actors/z_en_am.reloc.o (.data)
        _ovl_En_AmSegmentDataEnd = .;
    _ovl_En_AmSegmentDataSize = ABSOLUTE( _ovl_En_AmSegmentDataEnd - _ovl_En_AmSegmentDataStart );
        _ovl_En_AmSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Am/z_en_am.o (.rodata)
            build/data/overlays/actors/z_en_am.data.o (.rodata)
            build/data/overlays/actors/z_en_am.reloc.o (.rodata)
        _ovl_En_AmSegmentRoDataEnd = .;
    _ovl_En_AmSegmentRoDataSize = ABSOLUTE( _ovl_En_AmSegmentRoDataEnd - _ovl_En_AmSegmentRoDataStart );
        _ovl_En_AmSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Am/z_en_am.o (.sdata)
            build/data/overlays/actors/z_en_am.data.o (.sdata)
            build/data/overlays/actors/z_en_am.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_AmSegmentSDataEnd = .;
        _ovl_En_AmSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Am/z_en_am.o (.ovl)
            build/data/overlays/actors/z_en_am.data.o (.ovl)
            build/data/overlays/actors/z_en_am.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_AmSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_AmSegmentOvlEnd - _ovl_En_AmSegmentTextStart );
    _ovl_En_AmSegmentRomEnd = _RomSize;

    ..ovl_En_Am.bss ADDR(..ovl_En_Am) + SIZEOF(..ovl_En_Am) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_AmSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Am/z_en_am.o (.sbss)
            build/data/overlays/actors/z_en_am.data.o (.sbss)
            build/data/overlays/actors/z_en_am.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Am/z_en_am.o (.scommon)
            build/data/overlays/actors/z_en_am.data.o (.scommon)
            build/data/overlays/actors/z_en_am.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Am/z_en_am.o (.bss)
            build/data/overlays/actors/z_en_am.data.o (.bss)
            build/data/overlays/actors/z_en_am.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Am/z_en_am.o (COMMON)
            build/data/overlays/actors/z_en_am.data.o (COMMON)
            build/data/overlays/actors/z_en_am.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_AmSegmentBssEnd = .;
        _ovl_En_AmSegmentEnd = .;
    }
    _ovl_En_AmSegmentBssSize = ABSOLUTE( _ovl_En_AmSegmentBssEnd - _ovl_En_AmSegmentBssStart );

    _ovl_En_AniSegmentRomStart = _RomSize;
    ..ovl_En_Ani : AT(_RomSize)
    {
        _ovl_En_AniSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_AniSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ani/z_en_ani.o (.text)
            build/src/overlays/actors/ovl_En_Ani/ovl_En_Ani_reloc.o (.text)
        _ovl_En_AniSegmentTextEnd = .;
    _ovl_En_AniSegmentTextSize = ABSOLUTE( _ovl_En_AniSegmentTextEnd - _ovl_En_AniSegmentTextStart );
        _ovl_En_AniSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ani/z_en_ani.o (.data)
            build/src/overlays/actors/ovl_En_Ani/ovl_En_Ani_reloc.o (.data)
        _ovl_En_AniSegmentDataEnd = .;
    _ovl_En_AniSegmentDataSize = ABSOLUTE( _ovl_En_AniSegmentDataEnd - _ovl_En_AniSegmentDataStart );
        _ovl_En_AniSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ani/z_en_ani.o (.rodata)
            build/src/overlays/actors/ovl_En_Ani/ovl_En_Ani_reloc.o (.rodata)
        _ovl_En_AniSegmentRoDataEnd = .;
    _ovl_En_AniSegmentRoDataSize = ABSOLUTE( _ovl_En_AniSegmentRoDataEnd - _ovl_En_AniSegmentRoDataStart );
        _ovl_En_AniSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ani/z_en_ani.o (.sdata)
            build/src/overlays/actors/ovl_En_Ani/ovl_En_Ani_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_AniSegmentSDataEnd = .;
        _ovl_En_AniSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ani/z_en_ani.o (.ovl)
            build/src/overlays/actors/ovl_En_Ani/ovl_En_Ani_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_AniSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_AniSegmentOvlEnd - _ovl_En_AniSegmentTextStart );
    _ovl_En_AniSegmentRomEnd = _RomSize;

    ..ovl_En_Ani.bss ADDR(..ovl_En_Ani) + SIZEOF(..ovl_En_Ani) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_AniSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ani/z_en_ani.o (.sbss)
            build/src/overlays/actors/ovl_En_Ani/ovl_En_Ani_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ani/z_en_ani.o (.scommon)
            build/src/overlays/actors/ovl_En_Ani/ovl_En_Ani_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ani/z_en_ani.o (.bss)
            build/src/overlays/actors/ovl_En_Ani/ovl_En_Ani_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ani/z_en_ani.o (COMMON)
            build/src/overlays/actors/ovl_En_Ani/ovl_En_Ani_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_AniSegmentBssEnd = .;
        _ovl_En_AniSegmentEnd = .;
    }
    _ovl_En_AniSegmentBssSize = ABSOLUTE( _ovl_En_AniSegmentBssEnd - _ovl_En_AniSegmentBssStart );

    _ovl_En_AnubiceSegmentRomStart = _RomSize;
    ..ovl_En_Anubice : AT(_RomSize)
    {
        _ovl_En_AnubiceSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_AnubiceSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Anubice/z_en_anubice.o (.text)
            build/data/overlays/actors/z_en_anubice.data.o (.text)
            build/data/overlays/actors/z_en_anubice.reloc.o (.text)
        _ovl_En_AnubiceSegmentTextEnd = .;
    _ovl_En_AnubiceSegmentTextSize = ABSOLUTE( _ovl_En_AnubiceSegmentTextEnd - _ovl_En_AnubiceSegmentTextStart );
        _ovl_En_AnubiceSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Anubice/z_en_anubice.o (.data)
            build/data/overlays/actors/z_en_anubice.data.o (.data)
            build/data/overlays/actors/z_en_anubice.reloc.o (.data)
        _ovl_En_AnubiceSegmentDataEnd = .;
    _ovl_En_AnubiceSegmentDataSize = ABSOLUTE( _ovl_En_AnubiceSegmentDataEnd - _ovl_En_AnubiceSegmentDataStart );
        _ovl_En_AnubiceSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Anubice/z_en_anubice.o (.rodata)
            build/data/overlays/actors/z_en_anubice.data.o (.rodata)
            build/data/overlays/actors/z_en_anubice.reloc.o (.rodata)
        _ovl_En_AnubiceSegmentRoDataEnd = .;
    _ovl_En_AnubiceSegmentRoDataSize = ABSOLUTE( _ovl_En_AnubiceSegmentRoDataEnd - _ovl_En_AnubiceSegmentRoDataStart );
        _ovl_En_AnubiceSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Anubice/z_en_anubice.o (.sdata)
            build/data/overlays/actors/z_en_anubice.data.o (.sdata)
            build/data/overlays/actors/z_en_anubice.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_AnubiceSegmentSDataEnd = .;
        _ovl_En_AnubiceSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Anubice/z_en_anubice.o (.ovl)
            build/data/overlays/actors/z_en_anubice.data.o (.ovl)
            build/data/overlays/actors/z_en_anubice.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_AnubiceSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_AnubiceSegmentOvlEnd - _ovl_En_AnubiceSegmentTextStart );
    _ovl_En_AnubiceSegmentRomEnd = _RomSize;

    ..ovl_En_Anubice.bss ADDR(..ovl_En_Anubice) + SIZEOF(..ovl_En_Anubice) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_AnubiceSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Anubice/z_en_anubice.o (.sbss)
            build/data/overlays/actors/z_en_anubice.data.o (.sbss)
            build/data/overlays/actors/z_en_anubice.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Anubice/z_en_anubice.o (.scommon)
            build/data/overlays/actors/z_en_anubice.data.o (.scommon)
            build/data/overlays/actors/z_en_anubice.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Anubice/z_en_anubice.o (.bss)
            build/data/overlays/actors/z_en_anubice.data.o (.bss)
            build/data/overlays/actors/z_en_anubice.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Anubice/z_en_anubice.o (COMMON)
            build/data/overlays/actors/z_en_anubice.data.o (COMMON)
            build/data/overlays/actors/z_en_anubice.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_AnubiceSegmentBssEnd = .;
        _ovl_En_AnubiceSegmentEnd = .;
    }
    _ovl_En_AnubiceSegmentBssSize = ABSOLUTE( _ovl_En_AnubiceSegmentBssEnd - _ovl_En_AnubiceSegmentBssStart );

    _ovl_En_Anubice_FireSegmentRomStart = _RomSize;
    ..ovl_En_Anubice_Fire : AT(_RomSize)
    {
        _ovl_En_Anubice_FireSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Anubice_FireSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Anubice_Fire/z_en_anubice_fire.o (.text)
            build/data/overlays/actors/z_en_anubice_fire.data.o (.text)
            build/data/overlays/actors/z_en_anubice_fire.reloc.o (.text)
        _ovl_En_Anubice_FireSegmentTextEnd = .;
    _ovl_En_Anubice_FireSegmentTextSize = ABSOLUTE( _ovl_En_Anubice_FireSegmentTextEnd - _ovl_En_Anubice_FireSegmentTextStart );
        _ovl_En_Anubice_FireSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Anubice_Fire/z_en_anubice_fire.o (.data)
            build/data/overlays/actors/z_en_anubice_fire.data.o (.data)
            build/data/overlays/actors/z_en_anubice_fire.reloc.o (.data)
        _ovl_En_Anubice_FireSegmentDataEnd = .;
    _ovl_En_Anubice_FireSegmentDataSize = ABSOLUTE( _ovl_En_Anubice_FireSegmentDataEnd - _ovl_En_Anubice_FireSegmentDataStart );
        _ovl_En_Anubice_FireSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Anubice_Fire/z_en_anubice_fire.o (.rodata)
            build/data/overlays/actors/z_en_anubice_fire.data.o (.rodata)
            build/data/overlays/actors/z_en_anubice_fire.reloc.o (.rodata)
        _ovl_En_Anubice_FireSegmentRoDataEnd = .;
    _ovl_En_Anubice_FireSegmentRoDataSize = ABSOLUTE( _ovl_En_Anubice_FireSegmentRoDataEnd - _ovl_En_Anubice_FireSegmentRoDataStart );
        _ovl_En_Anubice_FireSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Anubice_Fire/z_en_anubice_fire.o (.sdata)
            build/data/overlays/actors/z_en_anubice_fire.data.o (.sdata)
            build/data/overlays/actors/z_en_anubice_fire.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Anubice_FireSegmentSDataEnd = .;
        _ovl_En_Anubice_FireSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Anubice_Fire/z_en_anubice_fire.o (.ovl)
            build/data/overlays/actors/z_en_anubice_fire.data.o (.ovl)
            build/data/overlays/actors/z_en_anubice_fire.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Anubice_FireSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Anubice_FireSegmentOvlEnd - _ovl_En_Anubice_FireSegmentTextStart );
    _ovl_En_Anubice_FireSegmentRomEnd = _RomSize;

    ..ovl_En_Anubice_Fire.bss ADDR(..ovl_En_Anubice_Fire) + SIZEOF(..ovl_En_Anubice_Fire) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Anubice_FireSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Anubice_Fire/z_en_anubice_fire.o (.sbss)
            build/data/overlays/actors/z_en_anubice_fire.data.o (.sbss)
            build/data/overlays/actors/z_en_anubice_fire.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Anubice_Fire/z_en_anubice_fire.o (.scommon)
            build/data/overlays/actors/z_en_anubice_fire.data.o (.scommon)
            build/data/overlays/actors/z_en_anubice_fire.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Anubice_Fire/z_en_anubice_fire.o (.bss)
            build/data/overlays/actors/z_en_anubice_fire.data.o (.bss)
            build/data/overlays/actors/z_en_anubice_fire.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Anubice_Fire/z_en_anubice_fire.o (COMMON)
            build/data/overlays/actors/z_en_anubice_fire.data.o (COMMON)
            build/data/overlays/actors/z_en_anubice_fire.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Anubice_FireSegmentBssEnd = .;
        _ovl_En_Anubice_FireSegmentEnd = .;
    }
    _ovl_En_Anubice_FireSegmentBssSize = ABSOLUTE( _ovl_En_Anubice_FireSegmentBssEnd - _ovl_En_Anubice_FireSegmentBssStart );

    _ovl_En_Anubice_TagSegmentRomStart = _RomSize;
    ..ovl_En_Anubice_Tag : AT(_RomSize)
    {
        _ovl_En_Anubice_TagSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Anubice_TagSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Anubice_Tag/z_en_anubice_tag.o (.text)
            build/src/overlays/actors/ovl_En_Anubice_Tag/ovl_En_Anubice_Tag_reloc.o (.text)
        _ovl_En_Anubice_TagSegmentTextEnd = .;
    _ovl_En_Anubice_TagSegmentTextSize = ABSOLUTE( _ovl_En_Anubice_TagSegmentTextEnd - _ovl_En_Anubice_TagSegmentTextStart );
        _ovl_En_Anubice_TagSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Anubice_Tag/z_en_anubice_tag.o (.data)
            build/src/overlays/actors/ovl_En_Anubice_Tag/ovl_En_Anubice_Tag_reloc.o (.data)
        _ovl_En_Anubice_TagSegmentDataEnd = .;
    _ovl_En_Anubice_TagSegmentDataSize = ABSOLUTE( _ovl_En_Anubice_TagSegmentDataEnd - _ovl_En_Anubice_TagSegmentDataStart );
        _ovl_En_Anubice_TagSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Anubice_Tag/z_en_anubice_tag.o (.rodata)
            build/src/overlays/actors/ovl_En_Anubice_Tag/ovl_En_Anubice_Tag_reloc.o (.rodata)
        _ovl_En_Anubice_TagSegmentRoDataEnd = .;
    _ovl_En_Anubice_TagSegmentRoDataSize = ABSOLUTE( _ovl_En_Anubice_TagSegmentRoDataEnd - _ovl_En_Anubice_TagSegmentRoDataStart );
        _ovl_En_Anubice_TagSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Anubice_Tag/z_en_anubice_tag.o (.sdata)
            build/src/overlays/actors/ovl_En_Anubice_Tag/ovl_En_Anubice_Tag_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Anubice_TagSegmentSDataEnd = .;
        _ovl_En_Anubice_TagSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Anubice_Tag/z_en_anubice_tag.o (.ovl)
            build/src/overlays/actors/ovl_En_Anubice_Tag/ovl_En_Anubice_Tag_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Anubice_TagSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Anubice_TagSegmentOvlEnd - _ovl_En_Anubice_TagSegmentTextStart );
    _ovl_En_Anubice_TagSegmentRomEnd = _RomSize;

    ..ovl_En_Anubice_Tag.bss ADDR(..ovl_En_Anubice_Tag) + SIZEOF(..ovl_En_Anubice_Tag) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Anubice_TagSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Anubice_Tag/z_en_anubice_tag.o (.sbss)
            build/src/overlays/actors/ovl_En_Anubice_Tag/ovl_En_Anubice_Tag_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Anubice_Tag/z_en_anubice_tag.o (.scommon)
            build/src/overlays/actors/ovl_En_Anubice_Tag/ovl_En_Anubice_Tag_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Anubice_Tag/z_en_anubice_tag.o (.bss)
            build/src/overlays/actors/ovl_En_Anubice_Tag/ovl_En_Anubice_Tag_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Anubice_Tag/z_en_anubice_tag.o (COMMON)
            build/src/overlays/actors/ovl_En_Anubice_Tag/ovl_En_Anubice_Tag_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Anubice_TagSegmentBssEnd = .;
        _ovl_En_Anubice_TagSegmentEnd = .;
    }
    _ovl_En_Anubice_TagSegmentBssSize = ABSOLUTE( _ovl_En_Anubice_TagSegmentBssEnd - _ovl_En_Anubice_TagSegmentBssStart );

    _ovl_En_Arow_TrapSegmentRomStart = _RomSize;
    ..ovl_En_Arow_Trap : AT(_RomSize)
    {
        _ovl_En_Arow_TrapSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Arow_TrapSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Arow_Trap/z_en_arow_trap.o (.text)
            build/src/overlays/actors/ovl_En_Arow_Trap/ovl_En_Arow_Trap_reloc.o (.text)
        _ovl_En_Arow_TrapSegmentTextEnd = .;
    _ovl_En_Arow_TrapSegmentTextSize = ABSOLUTE( _ovl_En_Arow_TrapSegmentTextEnd - _ovl_En_Arow_TrapSegmentTextStart );
        _ovl_En_Arow_TrapSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Arow_Trap/z_en_arow_trap.o (.data)
            build/src/overlays/actors/ovl_En_Arow_Trap/ovl_En_Arow_Trap_reloc.o (.data)
        _ovl_En_Arow_TrapSegmentDataEnd = .;
    _ovl_En_Arow_TrapSegmentDataSize = ABSOLUTE( _ovl_En_Arow_TrapSegmentDataEnd - _ovl_En_Arow_TrapSegmentDataStart );
        _ovl_En_Arow_TrapSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Arow_Trap/z_en_arow_trap.o (.rodata)
            build/src/overlays/actors/ovl_En_Arow_Trap/ovl_En_Arow_Trap_reloc.o (.rodata)
        _ovl_En_Arow_TrapSegmentRoDataEnd = .;
    _ovl_En_Arow_TrapSegmentRoDataSize = ABSOLUTE( _ovl_En_Arow_TrapSegmentRoDataEnd - _ovl_En_Arow_TrapSegmentRoDataStart );
        _ovl_En_Arow_TrapSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Arow_Trap/z_en_arow_trap.o (.sdata)
            build/src/overlays/actors/ovl_En_Arow_Trap/ovl_En_Arow_Trap_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Arow_TrapSegmentSDataEnd = .;
        _ovl_En_Arow_TrapSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Arow_Trap/z_en_arow_trap.o (.ovl)
            build/src/overlays/actors/ovl_En_Arow_Trap/ovl_En_Arow_Trap_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Arow_TrapSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Arow_TrapSegmentOvlEnd - _ovl_En_Arow_TrapSegmentTextStart );
    _ovl_En_Arow_TrapSegmentRomEnd = _RomSize;

    ..ovl_En_Arow_Trap.bss ADDR(..ovl_En_Arow_Trap) + SIZEOF(..ovl_En_Arow_Trap) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Arow_TrapSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Arow_Trap/z_en_arow_trap.o (.sbss)
            build/src/overlays/actors/ovl_En_Arow_Trap/ovl_En_Arow_Trap_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Arow_Trap/z_en_arow_trap.o (.scommon)
            build/src/overlays/actors/ovl_En_Arow_Trap/ovl_En_Arow_Trap_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Arow_Trap/z_en_arow_trap.o (.bss)
            build/src/overlays/actors/ovl_En_Arow_Trap/ovl_En_Arow_Trap_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Arow_Trap/z_en_arow_trap.o (COMMON)
            build/src/overlays/actors/ovl_En_Arow_Trap/ovl_En_Arow_Trap_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Arow_TrapSegmentBssEnd = .;
        _ovl_En_Arow_TrapSegmentEnd = .;
    }
    _ovl_En_Arow_TrapSegmentBssSize = ABSOLUTE( _ovl_En_Arow_TrapSegmentBssEnd - _ovl_En_Arow_TrapSegmentBssStart );

    _ovl_En_ArrowSegmentRomStart = _RomSize;
    ..ovl_En_Arrow : AT(_RomSize)
    {
        _ovl_En_ArrowSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_ArrowSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Arrow/z_en_arrow.o (.text)
            build/data/overlays/actors/z_en_arrow.data.o (.text)
            build/data/overlays/actors/z_en_arrow.reloc.o (.text)
        _ovl_En_ArrowSegmentTextEnd = .;
    _ovl_En_ArrowSegmentTextSize = ABSOLUTE( _ovl_En_ArrowSegmentTextEnd - _ovl_En_ArrowSegmentTextStart );
        _ovl_En_ArrowSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Arrow/z_en_arrow.o (.data)
            build/data/overlays/actors/z_en_arrow.data.o (.data)
            build/data/overlays/actors/z_en_arrow.reloc.o (.data)
        _ovl_En_ArrowSegmentDataEnd = .;
    _ovl_En_ArrowSegmentDataSize = ABSOLUTE( _ovl_En_ArrowSegmentDataEnd - _ovl_En_ArrowSegmentDataStart );
        _ovl_En_ArrowSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Arrow/z_en_arrow.o (.rodata)
            build/data/overlays/actors/z_en_arrow.data.o (.rodata)
            build/data/overlays/actors/z_en_arrow.reloc.o (.rodata)
        _ovl_En_ArrowSegmentRoDataEnd = .;
    _ovl_En_ArrowSegmentRoDataSize = ABSOLUTE( _ovl_En_ArrowSegmentRoDataEnd - _ovl_En_ArrowSegmentRoDataStart );
        _ovl_En_ArrowSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Arrow/z_en_arrow.o (.sdata)
            build/data/overlays/actors/z_en_arrow.data.o (.sdata)
            build/data/overlays/actors/z_en_arrow.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_ArrowSegmentSDataEnd = .;
        _ovl_En_ArrowSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Arrow/z_en_arrow.o (.ovl)
            build/data/overlays/actors/z_en_arrow.data.o (.ovl)
            build/data/overlays/actors/z_en_arrow.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_ArrowSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_ArrowSegmentOvlEnd - _ovl_En_ArrowSegmentTextStart );
    _ovl_En_ArrowSegmentRomEnd = _RomSize;

    ..ovl_En_Arrow.bss ADDR(..ovl_En_Arrow) + SIZEOF(..ovl_En_Arrow) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_ArrowSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Arrow/z_en_arrow.o (.sbss)
            build/data/overlays/actors/z_en_arrow.data.o (.sbss)
            build/data/overlays/actors/z_en_arrow.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Arrow/z_en_arrow.o (.scommon)
            build/data/overlays/actors/z_en_arrow.data.o (.scommon)
            build/data/overlays/actors/z_en_arrow.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Arrow/z_en_arrow.o (.bss)
            build/data/overlays/actors/z_en_arrow.data.o (.bss)
            build/data/overlays/actors/z_en_arrow.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Arrow/z_en_arrow.o (COMMON)
            build/data/overlays/actors/z_en_arrow.data.o (COMMON)
            build/data/overlays/actors/z_en_arrow.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_ArrowSegmentBssEnd = .;
        _ovl_En_ArrowSegmentEnd = .;
    }
    _ovl_En_ArrowSegmentBssSize = ABSOLUTE( _ovl_En_ArrowSegmentBssEnd - _ovl_En_ArrowSegmentBssStart );

    _ovl_En_Attack_NiwSegmentRomStart = _RomSize;
    ..ovl_En_Attack_Niw : AT(_RomSize)
    {
        _ovl_En_Attack_NiwSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Attack_NiwSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Attack_Niw/z_en_attack_niw.o (.text)
            build/data/overlays/actors/z_en_attack_niw.reloc.o (.text)
        _ovl_En_Attack_NiwSegmentTextEnd = .;
    _ovl_En_Attack_NiwSegmentTextSize = ABSOLUTE( _ovl_En_Attack_NiwSegmentTextEnd - _ovl_En_Attack_NiwSegmentTextStart );
        _ovl_En_Attack_NiwSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Attack_Niw/z_en_attack_niw.o (.data)
            build/data/overlays/actors/z_en_attack_niw.reloc.o (.data)
        _ovl_En_Attack_NiwSegmentDataEnd = .;
    _ovl_En_Attack_NiwSegmentDataSize = ABSOLUTE( _ovl_En_Attack_NiwSegmentDataEnd - _ovl_En_Attack_NiwSegmentDataStart );
        _ovl_En_Attack_NiwSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Attack_Niw/z_en_attack_niw.o (.rodata)
            build/data/overlays/actors/z_en_attack_niw.reloc.o (.rodata)
        _ovl_En_Attack_NiwSegmentRoDataEnd = .;
    _ovl_En_Attack_NiwSegmentRoDataSize = ABSOLUTE( _ovl_En_Attack_NiwSegmentRoDataEnd - _ovl_En_Attack_NiwSegmentRoDataStart );
        _ovl_En_Attack_NiwSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Attack_Niw/z_en_attack_niw.o (.sdata)
            build/data/overlays/actors/z_en_attack_niw.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Attack_NiwSegmentSDataEnd = .;
        _ovl_En_Attack_NiwSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Attack_Niw/z_en_attack_niw.o (.ovl)
            build/data/overlays/actors/z_en_attack_niw.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Attack_NiwSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Attack_NiwSegmentOvlEnd - _ovl_En_Attack_NiwSegmentTextStart );
    _ovl_En_Attack_NiwSegmentRomEnd = _RomSize;

    ..ovl_En_Attack_Niw.bss ADDR(..ovl_En_Attack_Niw) + SIZEOF(..ovl_En_Attack_Niw) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Attack_NiwSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Attack_Niw/z_en_attack_niw.o (.sbss)
            build/data/overlays/actors/z_en_attack_niw.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Attack_Niw/z_en_attack_niw.o (.scommon)
            build/data/overlays/actors/z_en_attack_niw.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Attack_Niw/z_en_attack_niw.o (.bss)
            build/data/overlays/actors/z_en_attack_niw.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Attack_Niw/z_en_attack_niw.o (COMMON)
            build/data/overlays/actors/z_en_attack_niw.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Attack_NiwSegmentBssEnd = .;
        _ovl_En_Attack_NiwSegmentEnd = .;
    }
    _ovl_En_Attack_NiwSegmentBssSize = ABSOLUTE( _ovl_En_Attack_NiwSegmentBssEnd - _ovl_En_Attack_NiwSegmentBssStart );

    _ovl_En_BaSegmentRomStart = _RomSize;
    ..ovl_En_Ba : AT(_RomSize)
    {
        _ovl_En_BaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ba/z_en_ba.o (.text)
            build/data/overlays/actors/z_en_ba.data.o (.text)
            build/data/overlays/actors/z_en_ba.reloc.o (.text)
        _ovl_En_BaSegmentTextEnd = .;
    _ovl_En_BaSegmentTextSize = ABSOLUTE( _ovl_En_BaSegmentTextEnd - _ovl_En_BaSegmentTextStart );
        _ovl_En_BaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ba/z_en_ba.o (.data)
            build/data/overlays/actors/z_en_ba.data.o (.data)
            build/data/overlays/actors/z_en_ba.reloc.o (.data)
        _ovl_En_BaSegmentDataEnd = .;
    _ovl_En_BaSegmentDataSize = ABSOLUTE( _ovl_En_BaSegmentDataEnd - _ovl_En_BaSegmentDataStart );
        _ovl_En_BaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ba/z_en_ba.o (.rodata)
            build/data/overlays/actors/z_en_ba.data.o (.rodata)
            build/data/overlays/actors/z_en_ba.reloc.o (.rodata)
        _ovl_En_BaSegmentRoDataEnd = .;
    _ovl_En_BaSegmentRoDataSize = ABSOLUTE( _ovl_En_BaSegmentRoDataEnd - _ovl_En_BaSegmentRoDataStart );
        _ovl_En_BaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ba/z_en_ba.o (.sdata)
            build/data/overlays/actors/z_en_ba.data.o (.sdata)
            build/data/overlays/actors/z_en_ba.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BaSegmentSDataEnd = .;
        _ovl_En_BaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ba/z_en_ba.o (.ovl)
            build/data/overlays/actors/z_en_ba.data.o (.ovl)
            build/data/overlays/actors/z_en_ba.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BaSegmentOvlEnd - _ovl_En_BaSegmentTextStart );
    _ovl_En_BaSegmentRomEnd = _RomSize;

    ..ovl_En_Ba.bss ADDR(..ovl_En_Ba) + SIZEOF(..ovl_En_Ba) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ba/z_en_ba.o (.sbss)
            build/data/overlays/actors/z_en_ba.data.o (.sbss)
            build/data/overlays/actors/z_en_ba.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ba/z_en_ba.o (.scommon)
            build/data/overlays/actors/z_en_ba.data.o (.scommon)
            build/data/overlays/actors/z_en_ba.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ba/z_en_ba.o (.bss)
            build/data/overlays/actors/z_en_ba.data.o (.bss)
            build/data/overlays/actors/z_en_ba.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ba/z_en_ba.o (COMMON)
            build/data/overlays/actors/z_en_ba.data.o (COMMON)
            build/data/overlays/actors/z_en_ba.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BaSegmentBssEnd = .;
        _ovl_En_BaSegmentEnd = .;
    }
    _ovl_En_BaSegmentBssSize = ABSOLUTE( _ovl_En_BaSegmentBssEnd - _ovl_En_BaSegmentBssStart );

    _ovl_En_BbSegmentRomStart = _RomSize;
    ..ovl_En_Bb : AT(_RomSize)
    {
        _ovl_En_BbSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BbSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Bb/z_en_bb.o (.text)
            build/data/overlays/actors/z_en_bb.data.o (.text)
            build/data/overlays/actors/z_en_bb.reloc.o (.text)
        _ovl_En_BbSegmentTextEnd = .;
    _ovl_En_BbSegmentTextSize = ABSOLUTE( _ovl_En_BbSegmentTextEnd - _ovl_En_BbSegmentTextStart );
        _ovl_En_BbSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Bb/z_en_bb.o (.data)
            build/data/overlays/actors/z_en_bb.data.o (.data)
            build/data/overlays/actors/z_en_bb.reloc.o (.data)
        _ovl_En_BbSegmentDataEnd = .;
    _ovl_En_BbSegmentDataSize = ABSOLUTE( _ovl_En_BbSegmentDataEnd - _ovl_En_BbSegmentDataStart );
        _ovl_En_BbSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Bb/z_en_bb.o (.rodata)
            build/data/overlays/actors/z_en_bb.data.o (.rodata)
            build/data/overlays/actors/z_en_bb.reloc.o (.rodata)
        _ovl_En_BbSegmentRoDataEnd = .;
    _ovl_En_BbSegmentRoDataSize = ABSOLUTE( _ovl_En_BbSegmentRoDataEnd - _ovl_En_BbSegmentRoDataStart );
        _ovl_En_BbSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Bb/z_en_bb.o (.sdata)
            build/data/overlays/actors/z_en_bb.data.o (.sdata)
            build/data/overlays/actors/z_en_bb.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BbSegmentSDataEnd = .;
        _ovl_En_BbSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Bb/z_en_bb.o (.ovl)
            build/data/overlays/actors/z_en_bb.data.o (.ovl)
            build/data/overlays/actors/z_en_bb.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BbSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BbSegmentOvlEnd - _ovl_En_BbSegmentTextStart );
    _ovl_En_BbSegmentRomEnd = _RomSize;

    ..ovl_En_Bb.bss ADDR(..ovl_En_Bb) + SIZEOF(..ovl_En_Bb) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BbSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Bb/z_en_bb.o (.sbss)
            build/data/overlays/actors/z_en_bb.data.o (.sbss)
            build/data/overlays/actors/z_en_bb.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Bb/z_en_bb.o (.scommon)
            build/data/overlays/actors/z_en_bb.data.o (.scommon)
            build/data/overlays/actors/z_en_bb.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Bb/z_en_bb.o (.bss)
            build/data/overlays/actors/z_en_bb.data.o (.bss)
            build/data/overlays/actors/z_en_bb.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Bb/z_en_bb.o (COMMON)
            build/data/overlays/actors/z_en_bb.data.o (COMMON)
            build/data/overlays/actors/z_en_bb.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BbSegmentBssEnd = .;
        _ovl_En_BbSegmentEnd = .;
    }
    _ovl_En_BbSegmentBssSize = ABSOLUTE( _ovl_En_BbSegmentBssEnd - _ovl_En_BbSegmentBssStart );

    _ovl_En_BdfireSegmentRomStart = _RomSize;
    ..ovl_En_Bdfire : AT(_RomSize)
    {
        _ovl_En_BdfireSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BdfireSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Bdfire/z_en_bdfire.o (.text)
            build/data/overlays/actors/z_en_bdfire.data.o (.text)
            build/data/overlays/actors/z_en_bdfire.reloc.o (.text)
        _ovl_En_BdfireSegmentTextEnd = .;
    _ovl_En_BdfireSegmentTextSize = ABSOLUTE( _ovl_En_BdfireSegmentTextEnd - _ovl_En_BdfireSegmentTextStart );
        _ovl_En_BdfireSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Bdfire/z_en_bdfire.o (.data)
            build/data/overlays/actors/z_en_bdfire.data.o (.data)
            build/data/overlays/actors/z_en_bdfire.reloc.o (.data)
        _ovl_En_BdfireSegmentDataEnd = .;
    _ovl_En_BdfireSegmentDataSize = ABSOLUTE( _ovl_En_BdfireSegmentDataEnd - _ovl_En_BdfireSegmentDataStart );
        _ovl_En_BdfireSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Bdfire/z_en_bdfire.o (.rodata)
            build/data/overlays/actors/z_en_bdfire.data.o (.rodata)
            build/data/overlays/actors/z_en_bdfire.reloc.o (.rodata)
        _ovl_En_BdfireSegmentRoDataEnd = .;
    _ovl_En_BdfireSegmentRoDataSize = ABSOLUTE( _ovl_En_BdfireSegmentRoDataEnd - _ovl_En_BdfireSegmentRoDataStart );
        _ovl_En_BdfireSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Bdfire/z_en_bdfire.o (.sdata)
            build/data/overlays/actors/z_en_bdfire.data.o (.sdata)
            build/data/overlays/actors/z_en_bdfire.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BdfireSegmentSDataEnd = .;
        _ovl_En_BdfireSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Bdfire/z_en_bdfire.o (.ovl)
            build/data/overlays/actors/z_en_bdfire.data.o (.ovl)
            build/data/overlays/actors/z_en_bdfire.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BdfireSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BdfireSegmentOvlEnd - _ovl_En_BdfireSegmentTextStart );
    _ovl_En_BdfireSegmentRomEnd = _RomSize;

    ..ovl_En_Bdfire.bss ADDR(..ovl_En_Bdfire) + SIZEOF(..ovl_En_Bdfire) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BdfireSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Bdfire/z_en_bdfire.o (.sbss)
            build/data/overlays/actors/z_en_bdfire.data.o (.sbss)
            build/data/overlays/actors/z_en_bdfire.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Bdfire/z_en_bdfire.o (.scommon)
            build/data/overlays/actors/z_en_bdfire.data.o (.scommon)
            build/data/overlays/actors/z_en_bdfire.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Bdfire/z_en_bdfire.o (.bss)
            build/data/overlays/actors/z_en_bdfire.data.o (.bss)
            build/data/overlays/actors/z_en_bdfire.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Bdfire/z_en_bdfire.o (COMMON)
            build/data/overlays/actors/z_en_bdfire.data.o (COMMON)
            build/data/overlays/actors/z_en_bdfire.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BdfireSegmentBssEnd = .;
        _ovl_En_BdfireSegmentEnd = .;
    }
    _ovl_En_BdfireSegmentBssSize = ABSOLUTE( _ovl_En_BdfireSegmentBssEnd - _ovl_En_BdfireSegmentBssStart );

    _ovl_En_BigokutaSegmentRomStart = _RomSize;
    ..ovl_En_Bigokuta : AT(_RomSize)
    {
        _ovl_En_BigokutaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BigokutaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Bigokuta/z_en_bigokuta.o (.text)
            build/data/overlays/actors/z_en_bigokuta.data.o (.text)
            build/data/overlays/actors/z_en_bigokuta.reloc.o (.text)
        _ovl_En_BigokutaSegmentTextEnd = .;
    _ovl_En_BigokutaSegmentTextSize = ABSOLUTE( _ovl_En_BigokutaSegmentTextEnd - _ovl_En_BigokutaSegmentTextStart );
        _ovl_En_BigokutaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Bigokuta/z_en_bigokuta.o (.data)
            build/data/overlays/actors/z_en_bigokuta.data.o (.data)
            build/data/overlays/actors/z_en_bigokuta.reloc.o (.data)
        _ovl_En_BigokutaSegmentDataEnd = .;
    _ovl_En_BigokutaSegmentDataSize = ABSOLUTE( _ovl_En_BigokutaSegmentDataEnd - _ovl_En_BigokutaSegmentDataStart );
        _ovl_En_BigokutaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Bigokuta/z_en_bigokuta.o (.rodata)
            build/data/overlays/actors/z_en_bigokuta.data.o (.rodata)
            build/data/overlays/actors/z_en_bigokuta.reloc.o (.rodata)
        _ovl_En_BigokutaSegmentRoDataEnd = .;
    _ovl_En_BigokutaSegmentRoDataSize = ABSOLUTE( _ovl_En_BigokutaSegmentRoDataEnd - _ovl_En_BigokutaSegmentRoDataStart );
        _ovl_En_BigokutaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Bigokuta/z_en_bigokuta.o (.sdata)
            build/data/overlays/actors/z_en_bigokuta.data.o (.sdata)
            build/data/overlays/actors/z_en_bigokuta.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BigokutaSegmentSDataEnd = .;
        _ovl_En_BigokutaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Bigokuta/z_en_bigokuta.o (.ovl)
            build/data/overlays/actors/z_en_bigokuta.data.o (.ovl)
            build/data/overlays/actors/z_en_bigokuta.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BigokutaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BigokutaSegmentOvlEnd - _ovl_En_BigokutaSegmentTextStart );
    _ovl_En_BigokutaSegmentRomEnd = _RomSize;

    ..ovl_En_Bigokuta.bss ADDR(..ovl_En_Bigokuta) + SIZEOF(..ovl_En_Bigokuta) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BigokutaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Bigokuta/z_en_bigokuta.o (.sbss)
            build/data/overlays/actors/z_en_bigokuta.data.o (.sbss)
            build/data/overlays/actors/z_en_bigokuta.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Bigokuta/z_en_bigokuta.o (.scommon)
            build/data/overlays/actors/z_en_bigokuta.data.o (.scommon)
            build/data/overlays/actors/z_en_bigokuta.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Bigokuta/z_en_bigokuta.o (.bss)
            build/data/overlays/actors/z_en_bigokuta.data.o (.bss)
            build/data/overlays/actors/z_en_bigokuta.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Bigokuta/z_en_bigokuta.o (COMMON)
            build/data/overlays/actors/z_en_bigokuta.data.o (COMMON)
            build/data/overlays/actors/z_en_bigokuta.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BigokutaSegmentBssEnd = .;
        _ovl_En_BigokutaSegmentEnd = .;
    }
    _ovl_En_BigokutaSegmentBssSize = ABSOLUTE( _ovl_En_BigokutaSegmentBssEnd - _ovl_En_BigokutaSegmentBssStart );

    _ovl_En_BiliSegmentRomStart = _RomSize;
    ..ovl_En_Bili : AT(_RomSize)
    {
        _ovl_En_BiliSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BiliSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Bili/z_en_bili.o (.text)
            build/data/overlays/actors/z_en_bili.data.o (.text)
            build/data/overlays/actors/z_en_bili.reloc.o (.text)
        _ovl_En_BiliSegmentTextEnd = .;
    _ovl_En_BiliSegmentTextSize = ABSOLUTE( _ovl_En_BiliSegmentTextEnd - _ovl_En_BiliSegmentTextStart );
        _ovl_En_BiliSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Bili/z_en_bili.o (.data)
            build/data/overlays/actors/z_en_bili.data.o (.data)
            build/data/overlays/actors/z_en_bili.reloc.o (.data)
        _ovl_En_BiliSegmentDataEnd = .;
    _ovl_En_BiliSegmentDataSize = ABSOLUTE( _ovl_En_BiliSegmentDataEnd - _ovl_En_BiliSegmentDataStart );
        _ovl_En_BiliSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Bili/z_en_bili.o (.rodata)
            build/data/overlays/actors/z_en_bili.data.o (.rodata)
            build/data/overlays/actors/z_en_bili.reloc.o (.rodata)
        _ovl_En_BiliSegmentRoDataEnd = .;
    _ovl_En_BiliSegmentRoDataSize = ABSOLUTE( _ovl_En_BiliSegmentRoDataEnd - _ovl_En_BiliSegmentRoDataStart );
        _ovl_En_BiliSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Bili/z_en_bili.o (.sdata)
            build/data/overlays/actors/z_en_bili.data.o (.sdata)
            build/data/overlays/actors/z_en_bili.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BiliSegmentSDataEnd = .;
        _ovl_En_BiliSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Bili/z_en_bili.o (.ovl)
            build/data/overlays/actors/z_en_bili.data.o (.ovl)
            build/data/overlays/actors/z_en_bili.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BiliSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BiliSegmentOvlEnd - _ovl_En_BiliSegmentTextStart );
    _ovl_En_BiliSegmentRomEnd = _RomSize;

    ..ovl_En_Bili.bss ADDR(..ovl_En_Bili) + SIZEOF(..ovl_En_Bili) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BiliSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Bili/z_en_bili.o (.sbss)
            build/data/overlays/actors/z_en_bili.data.o (.sbss)
            build/data/overlays/actors/z_en_bili.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Bili/z_en_bili.o (.scommon)
            build/data/overlays/actors/z_en_bili.data.o (.scommon)
            build/data/overlays/actors/z_en_bili.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Bili/z_en_bili.o (.bss)
            build/data/overlays/actors/z_en_bili.data.o (.bss)
            build/data/overlays/actors/z_en_bili.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Bili/z_en_bili.o (COMMON)
            build/data/overlays/actors/z_en_bili.data.o (COMMON)
            build/data/overlays/actors/z_en_bili.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BiliSegmentBssEnd = .;
        _ovl_En_BiliSegmentEnd = .;
    }
    _ovl_En_BiliSegmentBssSize = ABSOLUTE( _ovl_En_BiliSegmentBssEnd - _ovl_En_BiliSegmentBssStart );

    _ovl_En_BirdSegmentRomStart = _RomSize;
    ..ovl_En_Bird : AT(_RomSize)
    {
        _ovl_En_BirdSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BirdSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Bird/z_en_bird.o (.text)
            build/data/overlays/actors/z_en_bird.reloc.o (.text)
        _ovl_En_BirdSegmentTextEnd = .;
    _ovl_En_BirdSegmentTextSize = ABSOLUTE( _ovl_En_BirdSegmentTextEnd - _ovl_En_BirdSegmentTextStart );
        _ovl_En_BirdSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Bird/z_en_bird.o (.data)
            build/data/overlays/actors/z_en_bird.reloc.o (.data)
        _ovl_En_BirdSegmentDataEnd = .;
    _ovl_En_BirdSegmentDataSize = ABSOLUTE( _ovl_En_BirdSegmentDataEnd - _ovl_En_BirdSegmentDataStart );
        _ovl_En_BirdSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Bird/z_en_bird.o (.rodata)
            build/data/overlays/actors/z_en_bird.reloc.o (.rodata)
        _ovl_En_BirdSegmentRoDataEnd = .;
    _ovl_En_BirdSegmentRoDataSize = ABSOLUTE( _ovl_En_BirdSegmentRoDataEnd - _ovl_En_BirdSegmentRoDataStart );
        _ovl_En_BirdSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Bird/z_en_bird.o (.sdata)
            build/data/overlays/actors/z_en_bird.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BirdSegmentSDataEnd = .;
        _ovl_En_BirdSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Bird/z_en_bird.o (.ovl)
            build/data/overlays/actors/z_en_bird.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BirdSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BirdSegmentOvlEnd - _ovl_En_BirdSegmentTextStart );
    _ovl_En_BirdSegmentRomEnd = _RomSize;

    ..ovl_En_Bird.bss ADDR(..ovl_En_Bird) + SIZEOF(..ovl_En_Bird) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BirdSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Bird/z_en_bird.o (.sbss)
            build/data/overlays/actors/z_en_bird.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Bird/z_en_bird.o (.scommon)
            build/data/overlays/actors/z_en_bird.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Bird/z_en_bird.o (.bss)
            build/data/overlays/actors/z_en_bird.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Bird/z_en_bird.o (COMMON)
            build/data/overlays/actors/z_en_bird.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BirdSegmentBssEnd = .;
        _ovl_En_BirdSegmentEnd = .;
    }
    _ovl_En_BirdSegmentBssSize = ABSOLUTE( _ovl_En_BirdSegmentBssEnd - _ovl_En_BirdSegmentBssStart );

    _ovl_En_BlkobjSegmentRomStart = _RomSize;
    ..ovl_En_Blkobj : AT(_RomSize)
    {
        _ovl_En_BlkobjSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BlkobjSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Blkobj/z_en_blkobj.o (.text)
            build/src/overlays/actors/ovl_En_Blkobj/ovl_En_Blkobj_reloc.o (.text)
        _ovl_En_BlkobjSegmentTextEnd = .;
    _ovl_En_BlkobjSegmentTextSize = ABSOLUTE( _ovl_En_BlkobjSegmentTextEnd - _ovl_En_BlkobjSegmentTextStart );
        _ovl_En_BlkobjSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Blkobj/z_en_blkobj.o (.data)
            build/src/overlays/actors/ovl_En_Blkobj/ovl_En_Blkobj_reloc.o (.data)
        _ovl_En_BlkobjSegmentDataEnd = .;
    _ovl_En_BlkobjSegmentDataSize = ABSOLUTE( _ovl_En_BlkobjSegmentDataEnd - _ovl_En_BlkobjSegmentDataStart );
        _ovl_En_BlkobjSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Blkobj/z_en_blkobj.o (.rodata)
            build/src/overlays/actors/ovl_En_Blkobj/ovl_En_Blkobj_reloc.o (.rodata)
        _ovl_En_BlkobjSegmentRoDataEnd = .;
    _ovl_En_BlkobjSegmentRoDataSize = ABSOLUTE( _ovl_En_BlkobjSegmentRoDataEnd - _ovl_En_BlkobjSegmentRoDataStart );
        _ovl_En_BlkobjSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Blkobj/z_en_blkobj.o (.sdata)
            build/src/overlays/actors/ovl_En_Blkobj/ovl_En_Blkobj_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BlkobjSegmentSDataEnd = .;
        _ovl_En_BlkobjSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Blkobj/z_en_blkobj.o (.ovl)
            build/src/overlays/actors/ovl_En_Blkobj/ovl_En_Blkobj_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BlkobjSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BlkobjSegmentOvlEnd - _ovl_En_BlkobjSegmentTextStart );
    _ovl_En_BlkobjSegmentRomEnd = _RomSize;

    ..ovl_En_Blkobj.bss ADDR(..ovl_En_Blkobj) + SIZEOF(..ovl_En_Blkobj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BlkobjSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Blkobj/z_en_blkobj.o (.sbss)
            build/src/overlays/actors/ovl_En_Blkobj/ovl_En_Blkobj_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Blkobj/z_en_blkobj.o (.scommon)
            build/src/overlays/actors/ovl_En_Blkobj/ovl_En_Blkobj_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Blkobj/z_en_blkobj.o (.bss)
            build/src/overlays/actors/ovl_En_Blkobj/ovl_En_Blkobj_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Blkobj/z_en_blkobj.o (COMMON)
            build/src/overlays/actors/ovl_En_Blkobj/ovl_En_Blkobj_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BlkobjSegmentBssEnd = .;
        _ovl_En_BlkobjSegmentEnd = .;
    }
    _ovl_En_BlkobjSegmentBssSize = ABSOLUTE( _ovl_En_BlkobjSegmentBssEnd - _ovl_En_BlkobjSegmentBssStart );

    _ovl_En_BomSegmentRomStart = _RomSize;
    ..ovl_En_Bom : AT(_RomSize)
    {
        _ovl_En_BomSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BomSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Bom/z_en_bom.o (.text)
            build/src/overlays/actors/ovl_En_Bom/ovl_En_Bom_reloc.o (.text)
        _ovl_En_BomSegmentTextEnd = .;
    _ovl_En_BomSegmentTextSize = ABSOLUTE( _ovl_En_BomSegmentTextEnd - _ovl_En_BomSegmentTextStart );
        _ovl_En_BomSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Bom/z_en_bom.o (.data)
            build/src/overlays/actors/ovl_En_Bom/ovl_En_Bom_reloc.o (.data)
        _ovl_En_BomSegmentDataEnd = .;
    _ovl_En_BomSegmentDataSize = ABSOLUTE( _ovl_En_BomSegmentDataEnd - _ovl_En_BomSegmentDataStart );
        _ovl_En_BomSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Bom/z_en_bom.o (.rodata)
            build/src/overlays/actors/ovl_En_Bom/ovl_En_Bom_reloc.o (.rodata)
        _ovl_En_BomSegmentRoDataEnd = .;
    _ovl_En_BomSegmentRoDataSize = ABSOLUTE( _ovl_En_BomSegmentRoDataEnd - _ovl_En_BomSegmentRoDataStart );
        _ovl_En_BomSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Bom/z_en_bom.o (.sdata)
            build/src/overlays/actors/ovl_En_Bom/ovl_En_Bom_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BomSegmentSDataEnd = .;
        _ovl_En_BomSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Bom/z_en_bom.o (.ovl)
            build/src/overlays/actors/ovl_En_Bom/ovl_En_Bom_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BomSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BomSegmentOvlEnd - _ovl_En_BomSegmentTextStart );
    _ovl_En_BomSegmentRomEnd = _RomSize;

    ..ovl_En_Bom.bss ADDR(..ovl_En_Bom) + SIZEOF(..ovl_En_Bom) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BomSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Bom/z_en_bom.o (.sbss)
            build/src/overlays/actors/ovl_En_Bom/ovl_En_Bom_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Bom/z_en_bom.o (.scommon)
            build/src/overlays/actors/ovl_En_Bom/ovl_En_Bom_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Bom/z_en_bom.o (.bss)
            build/src/overlays/actors/ovl_En_Bom/ovl_En_Bom_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Bom/z_en_bom.o (COMMON)
            build/src/overlays/actors/ovl_En_Bom/ovl_En_Bom_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BomSegmentBssEnd = .;
        _ovl_En_BomSegmentEnd = .;
    }
    _ovl_En_BomSegmentBssSize = ABSOLUTE( _ovl_En_BomSegmentBssEnd - _ovl_En_BomSegmentBssStart );

    _ovl_En_Bom_Bowl_ManSegmentRomStart = _RomSize;
    ..ovl_En_Bom_Bowl_Man : AT(_RomSize)
    {
        _ovl_En_Bom_Bowl_ManSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Bom_Bowl_ManSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Bom_Bowl_Man/z_en_bom_bowl_man.o (.text)
            build/data/overlays/actors/z_en_bom_bowl_man.data.o (.text)
            build/data/overlays/actors/z_en_bom_bowl_man.reloc.o (.text)
        _ovl_En_Bom_Bowl_ManSegmentTextEnd = .;
    _ovl_En_Bom_Bowl_ManSegmentTextSize = ABSOLUTE( _ovl_En_Bom_Bowl_ManSegmentTextEnd - _ovl_En_Bom_Bowl_ManSegmentTextStart );
        _ovl_En_Bom_Bowl_ManSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Bom_Bowl_Man/z_en_bom_bowl_man.o (.data)
            build/data/overlays/actors/z_en_bom_bowl_man.data.o (.data)
            build/data/overlays/actors/z_en_bom_bowl_man.reloc.o (.data)
        _ovl_En_Bom_Bowl_ManSegmentDataEnd = .;
    _ovl_En_Bom_Bowl_ManSegmentDataSize = ABSOLUTE( _ovl_En_Bom_Bowl_ManSegmentDataEnd - _ovl_En_Bom_Bowl_ManSegmentDataStart );
        _ovl_En_Bom_Bowl_ManSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Bom_Bowl_Man/z_en_bom_bowl_man.o (.rodata)
            build/data/overlays/actors/z_en_bom_bowl_man.data.o (.rodata)
            build/data/overlays/actors/z_en_bom_bowl_man.reloc.o (.rodata)
        _ovl_En_Bom_Bowl_ManSegmentRoDataEnd = .;
    _ovl_En_Bom_Bowl_ManSegmentRoDataSize = ABSOLUTE( _ovl_En_Bom_Bowl_ManSegmentRoDataEnd - _ovl_En_Bom_Bowl_ManSegmentRoDataStart );
        _ovl_En_Bom_Bowl_ManSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Bom_Bowl_Man/z_en_bom_bowl_man.o (.sdata)
            build/data/overlays/actors/z_en_bom_bowl_man.data.o (.sdata)
            build/data/overlays/actors/z_en_bom_bowl_man.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Bom_Bowl_ManSegmentSDataEnd = .;
        _ovl_En_Bom_Bowl_ManSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Bom_Bowl_Man/z_en_bom_bowl_man.o (.ovl)
            build/data/overlays/actors/z_en_bom_bowl_man.data.o (.ovl)
            build/data/overlays/actors/z_en_bom_bowl_man.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Bom_Bowl_ManSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Bom_Bowl_ManSegmentOvlEnd - _ovl_En_Bom_Bowl_ManSegmentTextStart );
    _ovl_En_Bom_Bowl_ManSegmentRomEnd = _RomSize;

    ..ovl_En_Bom_Bowl_Man.bss ADDR(..ovl_En_Bom_Bowl_Man) + SIZEOF(..ovl_En_Bom_Bowl_Man) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Bom_Bowl_ManSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Bom_Bowl_Man/z_en_bom_bowl_man.o (.sbss)
            build/data/overlays/actors/z_en_bom_bowl_man.data.o (.sbss)
            build/data/overlays/actors/z_en_bom_bowl_man.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Bom_Bowl_Man/z_en_bom_bowl_man.o (.scommon)
            build/data/overlays/actors/z_en_bom_bowl_man.data.o (.scommon)
            build/data/overlays/actors/z_en_bom_bowl_man.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Bom_Bowl_Man/z_en_bom_bowl_man.o (.bss)
            build/data/overlays/actors/z_en_bom_bowl_man.data.o (.bss)
            build/data/overlays/actors/z_en_bom_bowl_man.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Bom_Bowl_Man/z_en_bom_bowl_man.o (COMMON)
            build/data/overlays/actors/z_en_bom_bowl_man.data.o (COMMON)
            build/data/overlays/actors/z_en_bom_bowl_man.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Bom_Bowl_ManSegmentBssEnd = .;
        _ovl_En_Bom_Bowl_ManSegmentEnd = .;
    }
    _ovl_En_Bom_Bowl_ManSegmentBssSize = ABSOLUTE( _ovl_En_Bom_Bowl_ManSegmentBssEnd - _ovl_En_Bom_Bowl_ManSegmentBssStart );

    _ovl_En_Bom_Bowl_PitSegmentRomStart = _RomSize;
    ..ovl_En_Bom_Bowl_Pit : AT(_RomSize)
    {
        _ovl_En_Bom_Bowl_PitSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Bom_Bowl_PitSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Bom_Bowl_Pit/z_en_bom_bowl_pit.o (.text)
            build/data/overlays/actors/z_en_bom_bowl_pit.data.o (.text)
            build/data/overlays/actors/z_en_bom_bowl_pit.reloc.o (.text)
        _ovl_En_Bom_Bowl_PitSegmentTextEnd = .;
    _ovl_En_Bom_Bowl_PitSegmentTextSize = ABSOLUTE( _ovl_En_Bom_Bowl_PitSegmentTextEnd - _ovl_En_Bom_Bowl_PitSegmentTextStart );
        _ovl_En_Bom_Bowl_PitSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Bom_Bowl_Pit/z_en_bom_bowl_pit.o (.data)
            build/data/overlays/actors/z_en_bom_bowl_pit.data.o (.data)
            build/data/overlays/actors/z_en_bom_bowl_pit.reloc.o (.data)
        _ovl_En_Bom_Bowl_PitSegmentDataEnd = .;
    _ovl_En_Bom_Bowl_PitSegmentDataSize = ABSOLUTE( _ovl_En_Bom_Bowl_PitSegmentDataEnd - _ovl_En_Bom_Bowl_PitSegmentDataStart );
        _ovl_En_Bom_Bowl_PitSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Bom_Bowl_Pit/z_en_bom_bowl_pit.o (.rodata)
            build/data/overlays/actors/z_en_bom_bowl_pit.data.o (.rodata)
            build/data/overlays/actors/z_en_bom_bowl_pit.reloc.o (.rodata)
        _ovl_En_Bom_Bowl_PitSegmentRoDataEnd = .;
    _ovl_En_Bom_Bowl_PitSegmentRoDataSize = ABSOLUTE( _ovl_En_Bom_Bowl_PitSegmentRoDataEnd - _ovl_En_Bom_Bowl_PitSegmentRoDataStart );
        _ovl_En_Bom_Bowl_PitSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Bom_Bowl_Pit/z_en_bom_bowl_pit.o (.sdata)
            build/data/overlays/actors/z_en_bom_bowl_pit.data.o (.sdata)
            build/data/overlays/actors/z_en_bom_bowl_pit.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Bom_Bowl_PitSegmentSDataEnd = .;
        _ovl_En_Bom_Bowl_PitSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Bom_Bowl_Pit/z_en_bom_bowl_pit.o (.ovl)
            build/data/overlays/actors/z_en_bom_bowl_pit.data.o (.ovl)
            build/data/overlays/actors/z_en_bom_bowl_pit.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Bom_Bowl_PitSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Bom_Bowl_PitSegmentOvlEnd - _ovl_En_Bom_Bowl_PitSegmentTextStart );
    _ovl_En_Bom_Bowl_PitSegmentRomEnd = _RomSize;

    ..ovl_En_Bom_Bowl_Pit.bss ADDR(..ovl_En_Bom_Bowl_Pit) + SIZEOF(..ovl_En_Bom_Bowl_Pit) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Bom_Bowl_PitSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Bom_Bowl_Pit/z_en_bom_bowl_pit.o (.sbss)
            build/data/overlays/actors/z_en_bom_bowl_pit.data.o (.sbss)
            build/data/overlays/actors/z_en_bom_bowl_pit.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Bom_Bowl_Pit/z_en_bom_bowl_pit.o (.scommon)
            build/data/overlays/actors/z_en_bom_bowl_pit.data.o (.scommon)
            build/data/overlays/actors/z_en_bom_bowl_pit.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Bom_Bowl_Pit/z_en_bom_bowl_pit.o (.bss)
            build/data/overlays/actors/z_en_bom_bowl_pit.data.o (.bss)
            build/data/overlays/actors/z_en_bom_bowl_pit.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Bom_Bowl_Pit/z_en_bom_bowl_pit.o (COMMON)
            build/data/overlays/actors/z_en_bom_bowl_pit.data.o (COMMON)
            build/data/overlays/actors/z_en_bom_bowl_pit.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Bom_Bowl_PitSegmentBssEnd = .;
        _ovl_En_Bom_Bowl_PitSegmentEnd = .;
    }
    _ovl_En_Bom_Bowl_PitSegmentBssSize = ABSOLUTE( _ovl_En_Bom_Bowl_PitSegmentBssEnd - _ovl_En_Bom_Bowl_PitSegmentBssStart );

    _ovl_En_Bom_ChuSegmentRomStart = _RomSize;
    ..ovl_En_Bom_Chu : AT(_RomSize)
    {
        _ovl_En_Bom_ChuSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Bom_ChuSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Bom_Chu/z_en_bom_chu.o (.text)
            build/data/overlays/actors/z_en_bom_chu.data.o (.text)
            build/data/overlays/actors/z_en_bom_chu.reloc.o (.text)
        _ovl_En_Bom_ChuSegmentTextEnd = .;
    _ovl_En_Bom_ChuSegmentTextSize = ABSOLUTE( _ovl_En_Bom_ChuSegmentTextEnd - _ovl_En_Bom_ChuSegmentTextStart );
        _ovl_En_Bom_ChuSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Bom_Chu/z_en_bom_chu.o (.data)
            build/data/overlays/actors/z_en_bom_chu.data.o (.data)
            build/data/overlays/actors/z_en_bom_chu.reloc.o (.data)
        _ovl_En_Bom_ChuSegmentDataEnd = .;
    _ovl_En_Bom_ChuSegmentDataSize = ABSOLUTE( _ovl_En_Bom_ChuSegmentDataEnd - _ovl_En_Bom_ChuSegmentDataStart );
        _ovl_En_Bom_ChuSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Bom_Chu/z_en_bom_chu.o (.rodata)
            build/data/overlays/actors/z_en_bom_chu.data.o (.rodata)
            build/data/overlays/actors/z_en_bom_chu.reloc.o (.rodata)
        _ovl_En_Bom_ChuSegmentRoDataEnd = .;
    _ovl_En_Bom_ChuSegmentRoDataSize = ABSOLUTE( _ovl_En_Bom_ChuSegmentRoDataEnd - _ovl_En_Bom_ChuSegmentRoDataStart );
        _ovl_En_Bom_ChuSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Bom_Chu/z_en_bom_chu.o (.sdata)
            build/data/overlays/actors/z_en_bom_chu.data.o (.sdata)
            build/data/overlays/actors/z_en_bom_chu.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Bom_ChuSegmentSDataEnd = .;
        _ovl_En_Bom_ChuSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Bom_Chu/z_en_bom_chu.o (.ovl)
            build/data/overlays/actors/z_en_bom_chu.data.o (.ovl)
            build/data/overlays/actors/z_en_bom_chu.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Bom_ChuSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Bom_ChuSegmentOvlEnd - _ovl_En_Bom_ChuSegmentTextStart );
    _ovl_En_Bom_ChuSegmentRomEnd = _RomSize;

    ..ovl_En_Bom_Chu.bss ADDR(..ovl_En_Bom_Chu) + SIZEOF(..ovl_En_Bom_Chu) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Bom_ChuSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Bom_Chu/z_en_bom_chu.o (.sbss)
            build/data/overlays/actors/z_en_bom_chu.data.o (.sbss)
            build/data/overlays/actors/z_en_bom_chu.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Bom_Chu/z_en_bom_chu.o (.scommon)
            build/data/overlays/actors/z_en_bom_chu.data.o (.scommon)
            build/data/overlays/actors/z_en_bom_chu.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Bom_Chu/z_en_bom_chu.o (.bss)
            build/data/overlays/actors/z_en_bom_chu.data.o (.bss)
            build/data/overlays/actors/z_en_bom_chu.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Bom_Chu/z_en_bom_chu.o (COMMON)
            build/data/overlays/actors/z_en_bom_chu.data.o (COMMON)
            build/data/overlays/actors/z_en_bom_chu.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Bom_ChuSegmentBssEnd = .;
        _ovl_En_Bom_ChuSegmentEnd = .;
    }
    _ovl_En_Bom_ChuSegmentBssSize = ABSOLUTE( _ovl_En_Bom_ChuSegmentBssEnd - _ovl_En_Bom_ChuSegmentBssStart );

    _ovl_En_BombfSegmentRomStart = _RomSize;
    ..ovl_En_Bombf : AT(_RomSize)
    {
        _ovl_En_BombfSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BombfSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Bombf/z_en_bombf.o (.text)
            build/src/overlays/actors/ovl_En_Bombf/ovl_En_Bombf_reloc.o (.text)
        _ovl_En_BombfSegmentTextEnd = .;
    _ovl_En_BombfSegmentTextSize = ABSOLUTE( _ovl_En_BombfSegmentTextEnd - _ovl_En_BombfSegmentTextStart );
        _ovl_En_BombfSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Bombf/z_en_bombf.o (.data)
            build/src/overlays/actors/ovl_En_Bombf/ovl_En_Bombf_reloc.o (.data)
        _ovl_En_BombfSegmentDataEnd = .;
    _ovl_En_BombfSegmentDataSize = ABSOLUTE( _ovl_En_BombfSegmentDataEnd - _ovl_En_BombfSegmentDataStart );
        _ovl_En_BombfSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Bombf/z_en_bombf.o (.rodata)
            build/src/overlays/actors/ovl_En_Bombf/ovl_En_Bombf_reloc.o (.rodata)
        _ovl_En_BombfSegmentRoDataEnd = .;
    _ovl_En_BombfSegmentRoDataSize = ABSOLUTE( _ovl_En_BombfSegmentRoDataEnd - _ovl_En_BombfSegmentRoDataStart );
        _ovl_En_BombfSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Bombf/z_en_bombf.o (.sdata)
            build/src/overlays/actors/ovl_En_Bombf/ovl_En_Bombf_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BombfSegmentSDataEnd = .;
        _ovl_En_BombfSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Bombf/z_en_bombf.o (.ovl)
            build/src/overlays/actors/ovl_En_Bombf/ovl_En_Bombf_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BombfSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BombfSegmentOvlEnd - _ovl_En_BombfSegmentTextStart );
    _ovl_En_BombfSegmentRomEnd = _RomSize;

    ..ovl_En_Bombf.bss ADDR(..ovl_En_Bombf) + SIZEOF(..ovl_En_Bombf) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BombfSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Bombf/z_en_bombf.o (.sbss)
            build/src/overlays/actors/ovl_En_Bombf/ovl_En_Bombf_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Bombf/z_en_bombf.o (.scommon)
            build/src/overlays/actors/ovl_En_Bombf/ovl_En_Bombf_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Bombf/z_en_bombf.o (.bss)
            build/src/overlays/actors/ovl_En_Bombf/ovl_En_Bombf_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Bombf/z_en_bombf.o (COMMON)
            build/src/overlays/actors/ovl_En_Bombf/ovl_En_Bombf_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BombfSegmentBssEnd = .;
        _ovl_En_BombfSegmentEnd = .;
    }
    _ovl_En_BombfSegmentBssSize = ABSOLUTE( _ovl_En_BombfSegmentBssEnd - _ovl_En_BombfSegmentBssStart );

    _ovl_En_BoomSegmentRomStart = _RomSize;
    ..ovl_En_Boom : AT(_RomSize)
    {
        _ovl_En_BoomSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BoomSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Boom/z_en_boom.o (.text)
            build/src/overlays/actors/ovl_En_Boom/ovl_En_Boom_reloc.o (.text)
        _ovl_En_BoomSegmentTextEnd = .;
    _ovl_En_BoomSegmentTextSize = ABSOLUTE( _ovl_En_BoomSegmentTextEnd - _ovl_En_BoomSegmentTextStart );
        _ovl_En_BoomSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Boom/z_en_boom.o (.data)
            build/src/overlays/actors/ovl_En_Boom/ovl_En_Boom_reloc.o (.data)
        _ovl_En_BoomSegmentDataEnd = .;
    _ovl_En_BoomSegmentDataSize = ABSOLUTE( _ovl_En_BoomSegmentDataEnd - _ovl_En_BoomSegmentDataStart );
        _ovl_En_BoomSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Boom/z_en_boom.o (.rodata)
            build/src/overlays/actors/ovl_En_Boom/ovl_En_Boom_reloc.o (.rodata)
        _ovl_En_BoomSegmentRoDataEnd = .;
    _ovl_En_BoomSegmentRoDataSize = ABSOLUTE( _ovl_En_BoomSegmentRoDataEnd - _ovl_En_BoomSegmentRoDataStart );
        _ovl_En_BoomSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Boom/z_en_boom.o (.sdata)
            build/src/overlays/actors/ovl_En_Boom/ovl_En_Boom_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BoomSegmentSDataEnd = .;
        _ovl_En_BoomSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Boom/z_en_boom.o (.ovl)
            build/src/overlays/actors/ovl_En_Boom/ovl_En_Boom_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BoomSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BoomSegmentOvlEnd - _ovl_En_BoomSegmentTextStart );
    _ovl_En_BoomSegmentRomEnd = _RomSize;

    ..ovl_En_Boom.bss ADDR(..ovl_En_Boom) + SIZEOF(..ovl_En_Boom) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BoomSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Boom/z_en_boom.o (.sbss)
            build/src/overlays/actors/ovl_En_Boom/ovl_En_Boom_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Boom/z_en_boom.o (.scommon)
            build/src/overlays/actors/ovl_En_Boom/ovl_En_Boom_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Boom/z_en_boom.o (.bss)
            build/src/overlays/actors/ovl_En_Boom/ovl_En_Boom_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Boom/z_en_boom.o (COMMON)
            build/src/overlays/actors/ovl_En_Boom/ovl_En_Boom_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BoomSegmentBssEnd = .;
        _ovl_En_BoomSegmentEnd = .;
    }
    _ovl_En_BoomSegmentBssSize = ABSOLUTE( _ovl_En_BoomSegmentBssEnd - _ovl_En_BoomSegmentBssStart );

    _ovl_En_BoxSegmentRomStart = _RomSize;
    ..ovl_En_Box : AT(_RomSize)
    {
        _ovl_En_BoxSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BoxSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Box/z_en_box.o (.text)
            build/src/overlays/actors/ovl_En_Box/ovl_En_Box_reloc.o (.text)
        _ovl_En_BoxSegmentTextEnd = .;
    _ovl_En_BoxSegmentTextSize = ABSOLUTE( _ovl_En_BoxSegmentTextEnd - _ovl_En_BoxSegmentTextStart );
        _ovl_En_BoxSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Box/z_en_box.o (.data)
            build/src/overlays/actors/ovl_En_Box/ovl_En_Box_reloc.o (.data)
        _ovl_En_BoxSegmentDataEnd = .;
    _ovl_En_BoxSegmentDataSize = ABSOLUTE( _ovl_En_BoxSegmentDataEnd - _ovl_En_BoxSegmentDataStart );
        _ovl_En_BoxSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Box/z_en_box.o (.rodata)
            build/src/overlays/actors/ovl_En_Box/ovl_En_Box_reloc.o (.rodata)
        _ovl_En_BoxSegmentRoDataEnd = .;
    _ovl_En_BoxSegmentRoDataSize = ABSOLUTE( _ovl_En_BoxSegmentRoDataEnd - _ovl_En_BoxSegmentRoDataStart );
        _ovl_En_BoxSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Box/z_en_box.o (.sdata)
            build/src/overlays/actors/ovl_En_Box/ovl_En_Box_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BoxSegmentSDataEnd = .;
        _ovl_En_BoxSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Box/z_en_box.o (.ovl)
            build/src/overlays/actors/ovl_En_Box/ovl_En_Box_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BoxSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BoxSegmentOvlEnd - _ovl_En_BoxSegmentTextStart );
    _ovl_En_BoxSegmentRomEnd = _RomSize;

    ..ovl_En_Box.bss ADDR(..ovl_En_Box) + SIZEOF(..ovl_En_Box) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BoxSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Box/z_en_box.o (.sbss)
            build/src/overlays/actors/ovl_En_Box/ovl_En_Box_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Box/z_en_box.o (.scommon)
            build/src/overlays/actors/ovl_En_Box/ovl_En_Box_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Box/z_en_box.o (.bss)
            build/src/overlays/actors/ovl_En_Box/ovl_En_Box_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Box/z_en_box.o (COMMON)
            build/src/overlays/actors/ovl_En_Box/ovl_En_Box_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BoxSegmentBssEnd = .;
        _ovl_En_BoxSegmentEnd = .;
    }
    _ovl_En_BoxSegmentBssSize = ABSOLUTE( _ovl_En_BoxSegmentBssEnd - _ovl_En_BoxSegmentBssStart );

    _ovl_En_BrobSegmentRomStart = _RomSize;
    ..ovl_En_Brob : AT(_RomSize)
    {
        _ovl_En_BrobSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BrobSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Brob/z_en_brob.o (.text)
            build/data/overlays/actors/z_en_brob.data.o (.text)
            build/data/overlays/actors/z_en_brob.reloc.o (.text)
        _ovl_En_BrobSegmentTextEnd = .;
    _ovl_En_BrobSegmentTextSize = ABSOLUTE( _ovl_En_BrobSegmentTextEnd - _ovl_En_BrobSegmentTextStart );
        _ovl_En_BrobSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Brob/z_en_brob.o (.data)
            build/data/overlays/actors/z_en_brob.data.o (.data)
            build/data/overlays/actors/z_en_brob.reloc.o (.data)
        _ovl_En_BrobSegmentDataEnd = .;
    _ovl_En_BrobSegmentDataSize = ABSOLUTE( _ovl_En_BrobSegmentDataEnd - _ovl_En_BrobSegmentDataStart );
        _ovl_En_BrobSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Brob/z_en_brob.o (.rodata)
            build/data/overlays/actors/z_en_brob.data.o (.rodata)
            build/data/overlays/actors/z_en_brob.reloc.o (.rodata)
        _ovl_En_BrobSegmentRoDataEnd = .;
    _ovl_En_BrobSegmentRoDataSize = ABSOLUTE( _ovl_En_BrobSegmentRoDataEnd - _ovl_En_BrobSegmentRoDataStart );
        _ovl_En_BrobSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Brob/z_en_brob.o (.sdata)
            build/data/overlays/actors/z_en_brob.data.o (.sdata)
            build/data/overlays/actors/z_en_brob.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BrobSegmentSDataEnd = .;
        _ovl_En_BrobSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Brob/z_en_brob.o (.ovl)
            build/data/overlays/actors/z_en_brob.data.o (.ovl)
            build/data/overlays/actors/z_en_brob.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BrobSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BrobSegmentOvlEnd - _ovl_En_BrobSegmentTextStart );
    _ovl_En_BrobSegmentRomEnd = _RomSize;

    ..ovl_En_Brob.bss ADDR(..ovl_En_Brob) + SIZEOF(..ovl_En_Brob) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BrobSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Brob/z_en_brob.o (.sbss)
            build/data/overlays/actors/z_en_brob.data.o (.sbss)
            build/data/overlays/actors/z_en_brob.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Brob/z_en_brob.o (.scommon)
            build/data/overlays/actors/z_en_brob.data.o (.scommon)
            build/data/overlays/actors/z_en_brob.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Brob/z_en_brob.o (.bss)
            build/data/overlays/actors/z_en_brob.data.o (.bss)
            build/data/overlays/actors/z_en_brob.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Brob/z_en_brob.o (COMMON)
            build/data/overlays/actors/z_en_brob.data.o (COMMON)
            build/data/overlays/actors/z_en_brob.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BrobSegmentBssEnd = .;
        _ovl_En_BrobSegmentEnd = .;
    }
    _ovl_En_BrobSegmentBssSize = ABSOLUTE( _ovl_En_BrobSegmentBssEnd - _ovl_En_BrobSegmentBssStart );

    _ovl_En_BubbleSegmentRomStart = _RomSize;
    ..ovl_En_Bubble : AT(_RomSize)
    {
        _ovl_En_BubbleSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BubbleSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Bubble/z_en_bubble.o (.text)
            build/data/overlays/actors/z_en_bubble.data.o (.text)
            build/data/overlays/actors/z_en_bubble.reloc.o (.text)
        _ovl_En_BubbleSegmentTextEnd = .;
    _ovl_En_BubbleSegmentTextSize = ABSOLUTE( _ovl_En_BubbleSegmentTextEnd - _ovl_En_BubbleSegmentTextStart );
        _ovl_En_BubbleSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Bubble/z_en_bubble.o (.data)
            build/data/overlays/actors/z_en_bubble.data.o (.data)
            build/data/overlays/actors/z_en_bubble.reloc.o (.data)
        _ovl_En_BubbleSegmentDataEnd = .;
    _ovl_En_BubbleSegmentDataSize = ABSOLUTE( _ovl_En_BubbleSegmentDataEnd - _ovl_En_BubbleSegmentDataStart );
        _ovl_En_BubbleSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Bubble/z_en_bubble.o (.rodata)
            build/data/overlays/actors/z_en_bubble.data.o (.rodata)
            build/data/overlays/actors/z_en_bubble.reloc.o (.rodata)
        _ovl_En_BubbleSegmentRoDataEnd = .;
    _ovl_En_BubbleSegmentRoDataSize = ABSOLUTE( _ovl_En_BubbleSegmentRoDataEnd - _ovl_En_BubbleSegmentRoDataStart );
        _ovl_En_BubbleSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Bubble/z_en_bubble.o (.sdata)
            build/data/overlays/actors/z_en_bubble.data.o (.sdata)
            build/data/overlays/actors/z_en_bubble.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BubbleSegmentSDataEnd = .;
        _ovl_En_BubbleSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Bubble/z_en_bubble.o (.ovl)
            build/data/overlays/actors/z_en_bubble.data.o (.ovl)
            build/data/overlays/actors/z_en_bubble.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BubbleSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BubbleSegmentOvlEnd - _ovl_En_BubbleSegmentTextStart );
    _ovl_En_BubbleSegmentRomEnd = _RomSize;

    ..ovl_En_Bubble.bss ADDR(..ovl_En_Bubble) + SIZEOF(..ovl_En_Bubble) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BubbleSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Bubble/z_en_bubble.o (.sbss)
            build/data/overlays/actors/z_en_bubble.data.o (.sbss)
            build/data/overlays/actors/z_en_bubble.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Bubble/z_en_bubble.o (.scommon)
            build/data/overlays/actors/z_en_bubble.data.o (.scommon)
            build/data/overlays/actors/z_en_bubble.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Bubble/z_en_bubble.o (.bss)
            build/data/overlays/actors/z_en_bubble.data.o (.bss)
            build/data/overlays/actors/z_en_bubble.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Bubble/z_en_bubble.o (COMMON)
            build/data/overlays/actors/z_en_bubble.data.o (COMMON)
            build/data/overlays/actors/z_en_bubble.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BubbleSegmentBssEnd = .;
        _ovl_En_BubbleSegmentEnd = .;
    }
    _ovl_En_BubbleSegmentBssSize = ABSOLUTE( _ovl_En_BubbleSegmentBssEnd - _ovl_En_BubbleSegmentBssStart );

    _ovl_En_ButteSegmentRomStart = _RomSize;
    ..ovl_En_Butte : AT(_RomSize)
    {
        _ovl_En_ButteSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_ButteSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Butte/z_en_butte.o (.text)
            build/src/overlays/actors/ovl_En_Butte/ovl_En_Butte_reloc.o (.text)
        _ovl_En_ButteSegmentTextEnd = .;
    _ovl_En_ButteSegmentTextSize = ABSOLUTE( _ovl_En_ButteSegmentTextEnd - _ovl_En_ButteSegmentTextStart );
        _ovl_En_ButteSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Butte/z_en_butte.o (.data)
            build/src/overlays/actors/ovl_En_Butte/ovl_En_Butte_reloc.o (.data)
        _ovl_En_ButteSegmentDataEnd = .;
    _ovl_En_ButteSegmentDataSize = ABSOLUTE( _ovl_En_ButteSegmentDataEnd - _ovl_En_ButteSegmentDataStart );
        _ovl_En_ButteSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Butte/z_en_butte.o (.rodata)
            build/src/overlays/actors/ovl_En_Butte/ovl_En_Butte_reloc.o (.rodata)
        _ovl_En_ButteSegmentRoDataEnd = .;
    _ovl_En_ButteSegmentRoDataSize = ABSOLUTE( _ovl_En_ButteSegmentRoDataEnd - _ovl_En_ButteSegmentRoDataStart );
        _ovl_En_ButteSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Butte/z_en_butte.o (.sdata)
            build/src/overlays/actors/ovl_En_Butte/ovl_En_Butte_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_ButteSegmentSDataEnd = .;
        _ovl_En_ButteSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Butte/z_en_butte.o (.ovl)
            build/src/overlays/actors/ovl_En_Butte/ovl_En_Butte_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_ButteSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_ButteSegmentOvlEnd - _ovl_En_ButteSegmentTextStart );
    _ovl_En_ButteSegmentRomEnd = _RomSize;

    ..ovl_En_Butte.bss ADDR(..ovl_En_Butte) + SIZEOF(..ovl_En_Butte) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_ButteSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Butte/z_en_butte.o (.sbss)
            build/src/overlays/actors/ovl_En_Butte/ovl_En_Butte_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Butte/z_en_butte.o (.scommon)
            build/src/overlays/actors/ovl_En_Butte/ovl_En_Butte_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Butte/z_en_butte.o (.bss)
            build/src/overlays/actors/ovl_En_Butte/ovl_En_Butte_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Butte/z_en_butte.o (COMMON)
            build/src/overlays/actors/ovl_En_Butte/ovl_En_Butte_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_ButteSegmentBssEnd = .;
        _ovl_En_ButteSegmentEnd = .;
    }
    _ovl_En_ButteSegmentBssSize = ABSOLUTE( _ovl_En_ButteSegmentBssEnd - _ovl_En_ButteSegmentBssStart );

    _ovl_En_BwSegmentRomStart = _RomSize;
    ..ovl_En_Bw : AT(_RomSize)
    {
        _ovl_En_BwSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BwSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Bw/z_en_bw.o (.text)
            build/data/overlays/actors/z_en_bw.data.o (.text)
            build/data/overlays/actors/z_en_bw.reloc.o (.text)
        _ovl_En_BwSegmentTextEnd = .;
    _ovl_En_BwSegmentTextSize = ABSOLUTE( _ovl_En_BwSegmentTextEnd - _ovl_En_BwSegmentTextStart );
        _ovl_En_BwSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Bw/z_en_bw.o (.data)
            build/data/overlays/actors/z_en_bw.data.o (.data)
            build/data/overlays/actors/z_en_bw.reloc.o (.data)
        _ovl_En_BwSegmentDataEnd = .;
    _ovl_En_BwSegmentDataSize = ABSOLUTE( _ovl_En_BwSegmentDataEnd - _ovl_En_BwSegmentDataStart );
        _ovl_En_BwSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Bw/z_en_bw.o (.rodata)
            build/data/overlays/actors/z_en_bw.data.o (.rodata)
            build/data/overlays/actors/z_en_bw.reloc.o (.rodata)
        _ovl_En_BwSegmentRoDataEnd = .;
    _ovl_En_BwSegmentRoDataSize = ABSOLUTE( _ovl_En_BwSegmentRoDataEnd - _ovl_En_BwSegmentRoDataStart );
        _ovl_En_BwSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Bw/z_en_bw.o (.sdata)
            build/data/overlays/actors/z_en_bw.data.o (.sdata)
            build/data/overlays/actors/z_en_bw.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BwSegmentSDataEnd = .;
        _ovl_En_BwSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Bw/z_en_bw.o (.ovl)
            build/data/overlays/actors/z_en_bw.data.o (.ovl)
            build/data/overlays/actors/z_en_bw.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BwSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BwSegmentOvlEnd - _ovl_En_BwSegmentTextStart );
    _ovl_En_BwSegmentRomEnd = _RomSize;

    ..ovl_En_Bw.bss ADDR(..ovl_En_Bw) + SIZEOF(..ovl_En_Bw) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BwSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Bw/z_en_bw.o (.sbss)
            build/data/overlays/actors/z_en_bw.data.o (.sbss)
            build/data/overlays/actors/z_en_bw.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Bw/z_en_bw.o (.scommon)
            build/data/overlays/actors/z_en_bw.data.o (.scommon)
            build/data/overlays/actors/z_en_bw.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Bw/z_en_bw.o (.bss)
            build/data/overlays/actors/z_en_bw.data.o (.bss)
            build/data/overlays/actors/z_en_bw.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Bw/z_en_bw.o (COMMON)
            build/data/overlays/actors/z_en_bw.data.o (COMMON)
            build/data/overlays/actors/z_en_bw.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BwSegmentBssEnd = .;
        _ovl_En_BwSegmentEnd = .;
    }
    _ovl_En_BwSegmentBssSize = ABSOLUTE( _ovl_En_BwSegmentBssEnd - _ovl_En_BwSegmentBssStart );

    _ovl_En_BxSegmentRomStart = _RomSize;
    ..ovl_En_Bx : AT(_RomSize)
    {
        _ovl_En_BxSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_BxSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Bx/z_en_bx.o (.text)
            build/src/overlays/actors/ovl_En_Bx/ovl_En_Bx_reloc.o (.text)
        _ovl_En_BxSegmentTextEnd = .;
    _ovl_En_BxSegmentTextSize = ABSOLUTE( _ovl_En_BxSegmentTextEnd - _ovl_En_BxSegmentTextStart );
        _ovl_En_BxSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Bx/z_en_bx.o (.data)
            build/src/overlays/actors/ovl_En_Bx/ovl_En_Bx_reloc.o (.data)
        _ovl_En_BxSegmentDataEnd = .;
    _ovl_En_BxSegmentDataSize = ABSOLUTE( _ovl_En_BxSegmentDataEnd - _ovl_En_BxSegmentDataStart );
        _ovl_En_BxSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Bx/z_en_bx.o (.rodata)
            build/src/overlays/actors/ovl_En_Bx/ovl_En_Bx_reloc.o (.rodata)
        _ovl_En_BxSegmentRoDataEnd = .;
    _ovl_En_BxSegmentRoDataSize = ABSOLUTE( _ovl_En_BxSegmentRoDataEnd - _ovl_En_BxSegmentRoDataStart );
        _ovl_En_BxSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Bx/z_en_bx.o (.sdata)
            build/src/overlays/actors/ovl_En_Bx/ovl_En_Bx_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_BxSegmentSDataEnd = .;
        _ovl_En_BxSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Bx/z_en_bx.o (.ovl)
            build/src/overlays/actors/ovl_En_Bx/ovl_En_Bx_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_BxSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_BxSegmentOvlEnd - _ovl_En_BxSegmentTextStart );
    _ovl_En_BxSegmentRomEnd = _RomSize;

    ..ovl_En_Bx.bss ADDR(..ovl_En_Bx) + SIZEOF(..ovl_En_Bx) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_BxSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Bx/z_en_bx.o (.sbss)
            build/src/overlays/actors/ovl_En_Bx/ovl_En_Bx_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Bx/z_en_bx.o (.scommon)
            build/src/overlays/actors/ovl_En_Bx/ovl_En_Bx_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Bx/z_en_bx.o (.bss)
            build/src/overlays/actors/ovl_En_Bx/ovl_En_Bx_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Bx/z_en_bx.o (COMMON)
            build/src/overlays/actors/ovl_En_Bx/ovl_En_Bx_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_BxSegmentBssEnd = .;
        _ovl_En_BxSegmentEnd = .;
    }
    _ovl_En_BxSegmentBssSize = ABSOLUTE( _ovl_En_BxSegmentBssEnd - _ovl_En_BxSegmentBssStart );

    _ovl_En_ChangerSegmentRomStart = _RomSize;
    ..ovl_En_Changer : AT(_RomSize)
    {
        _ovl_En_ChangerSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_ChangerSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Changer/z_en_changer.o (.text)
            build/data/overlays/actors/z_en_changer.data.o (.text)
            build/data/overlays/actors/z_en_changer.reloc.o (.text)
        _ovl_En_ChangerSegmentTextEnd = .;
    _ovl_En_ChangerSegmentTextSize = ABSOLUTE( _ovl_En_ChangerSegmentTextEnd - _ovl_En_ChangerSegmentTextStart );
        _ovl_En_ChangerSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Changer/z_en_changer.o (.data)
            build/data/overlays/actors/z_en_changer.data.o (.data)
            build/data/overlays/actors/z_en_changer.reloc.o (.data)
        _ovl_En_ChangerSegmentDataEnd = .;
    _ovl_En_ChangerSegmentDataSize = ABSOLUTE( _ovl_En_ChangerSegmentDataEnd - _ovl_En_ChangerSegmentDataStart );
        _ovl_En_ChangerSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Changer/z_en_changer.o (.rodata)
            build/data/overlays/actors/z_en_changer.data.o (.rodata)
            build/data/overlays/actors/z_en_changer.reloc.o (.rodata)
        _ovl_En_ChangerSegmentRoDataEnd = .;
    _ovl_En_ChangerSegmentRoDataSize = ABSOLUTE( _ovl_En_ChangerSegmentRoDataEnd - _ovl_En_ChangerSegmentRoDataStart );
        _ovl_En_ChangerSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Changer/z_en_changer.o (.sdata)
            build/data/overlays/actors/z_en_changer.data.o (.sdata)
            build/data/overlays/actors/z_en_changer.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_ChangerSegmentSDataEnd = .;
        _ovl_En_ChangerSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Changer/z_en_changer.o (.ovl)
            build/data/overlays/actors/z_en_changer.data.o (.ovl)
            build/data/overlays/actors/z_en_changer.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_ChangerSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_ChangerSegmentOvlEnd - _ovl_En_ChangerSegmentTextStart );
    _ovl_En_ChangerSegmentRomEnd = _RomSize;

    ..ovl_En_Changer.bss ADDR(..ovl_En_Changer) + SIZEOF(..ovl_En_Changer) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_ChangerSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Changer/z_en_changer.o (.sbss)
            build/data/overlays/actors/z_en_changer.data.o (.sbss)
            build/data/overlays/actors/z_en_changer.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Changer/z_en_changer.o (.scommon)
            build/data/overlays/actors/z_en_changer.data.o (.scommon)
            build/data/overlays/actors/z_en_changer.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Changer/z_en_changer.o (.bss)
            build/data/overlays/actors/z_en_changer.data.o (.bss)
            build/data/overlays/actors/z_en_changer.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Changer/z_en_changer.o (COMMON)
            build/data/overlays/actors/z_en_changer.data.o (COMMON)
            build/data/overlays/actors/z_en_changer.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_ChangerSegmentBssEnd = .;
        _ovl_En_ChangerSegmentEnd = .;
    }
    _ovl_En_ChangerSegmentBssSize = ABSOLUTE( _ovl_En_ChangerSegmentBssEnd - _ovl_En_ChangerSegmentBssStart );

    _ovl_En_Clear_TagSegmentRomStart = _RomSize;
    ..ovl_En_Clear_Tag : AT(_RomSize)
    {
        _ovl_En_Clear_TagSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Clear_TagSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Clear_Tag/z_en_clear_tag.o (.text)
            build/data/overlays/actors/z_en_clear_tag.data.o (.text)
            build/data/overlays/actors/z_en_clear_tag.bss.o (.text)
            build/data/overlays/actors/z_en_clear_tag.reloc.o (.text)
        _ovl_En_Clear_TagSegmentTextEnd = .;
    _ovl_En_Clear_TagSegmentTextSize = ABSOLUTE( _ovl_En_Clear_TagSegmentTextEnd - _ovl_En_Clear_TagSegmentTextStart );
        _ovl_En_Clear_TagSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Clear_Tag/z_en_clear_tag.o (.data)
            build/data/overlays/actors/z_en_clear_tag.data.o (.data)
            build/data/overlays/actors/z_en_clear_tag.bss.o (.data)
            build/data/overlays/actors/z_en_clear_tag.reloc.o (.data)
        _ovl_En_Clear_TagSegmentDataEnd = .;
    _ovl_En_Clear_TagSegmentDataSize = ABSOLUTE( _ovl_En_Clear_TagSegmentDataEnd - _ovl_En_Clear_TagSegmentDataStart );
        _ovl_En_Clear_TagSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Clear_Tag/z_en_clear_tag.o (.rodata)
            build/data/overlays/actors/z_en_clear_tag.data.o (.rodata)
            build/data/overlays/actors/z_en_clear_tag.bss.o (.rodata)
            build/data/overlays/actors/z_en_clear_tag.reloc.o (.rodata)
        _ovl_En_Clear_TagSegmentRoDataEnd = .;
    _ovl_En_Clear_TagSegmentRoDataSize = ABSOLUTE( _ovl_En_Clear_TagSegmentRoDataEnd - _ovl_En_Clear_TagSegmentRoDataStart );
        _ovl_En_Clear_TagSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Clear_Tag/z_en_clear_tag.o (.sdata)
            build/data/overlays/actors/z_en_clear_tag.data.o (.sdata)
            build/data/overlays/actors/z_en_clear_tag.bss.o (.sdata)
            build/data/overlays/actors/z_en_clear_tag.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Clear_TagSegmentSDataEnd = .;
        _ovl_En_Clear_TagSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Clear_Tag/z_en_clear_tag.o (.ovl)
            build/data/overlays/actors/z_en_clear_tag.data.o (.ovl)
            build/data/overlays/actors/z_en_clear_tag.bss.o (.ovl)
            build/data/overlays/actors/z_en_clear_tag.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Clear_TagSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Clear_TagSegmentOvlEnd - _ovl_En_Clear_TagSegmentTextStart );
    _ovl_En_Clear_TagSegmentRomEnd = _RomSize;

    ..ovl_En_Clear_Tag.bss ADDR(..ovl_En_Clear_Tag) + SIZEOF(..ovl_En_Clear_Tag) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Clear_TagSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Clear_Tag/z_en_clear_tag.o (.sbss)
            build/data/overlays/actors/z_en_clear_tag.data.o (.sbss)
            build/data/overlays/actors/z_en_clear_tag.bss.o (.sbss)
            build/data/overlays/actors/z_en_clear_tag.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Clear_Tag/z_en_clear_tag.o (.scommon)
            build/data/overlays/actors/z_en_clear_tag.data.o (.scommon)
            build/data/overlays/actors/z_en_clear_tag.bss.o (.scommon)
            build/data/overlays/actors/z_en_clear_tag.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Clear_Tag/z_en_clear_tag.o (.bss)
            build/data/overlays/actors/z_en_clear_tag.data.o (.bss)
            build/data/overlays/actors/z_en_clear_tag.bss.o (.bss)
            build/data/overlays/actors/z_en_clear_tag.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Clear_Tag/z_en_clear_tag.o (COMMON)
            build/data/overlays/actors/z_en_clear_tag.data.o (COMMON)
            build/data/overlays/actors/z_en_clear_tag.bss.o (COMMON)
            build/data/overlays/actors/z_en_clear_tag.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Clear_TagSegmentBssEnd = .;
        _ovl_En_Clear_TagSegmentEnd = .;
    }
    _ovl_En_Clear_TagSegmentBssSize = ABSOLUTE( _ovl_En_Clear_TagSegmentBssEnd - _ovl_En_Clear_TagSegmentBssStart );

    _ovl_En_CowSegmentRomStart = _RomSize;
    ..ovl_En_Cow : AT(_RomSize)
    {
        _ovl_En_CowSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_CowSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Cow/z_en_cow.o (.text)
            build/src/overlays/actors/ovl_En_Cow/ovl_En_Cow_reloc.o (.text)
        _ovl_En_CowSegmentTextEnd = .;
    _ovl_En_CowSegmentTextSize = ABSOLUTE( _ovl_En_CowSegmentTextEnd - _ovl_En_CowSegmentTextStart );
        _ovl_En_CowSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Cow/z_en_cow.o (.data)
            build/src/overlays/actors/ovl_En_Cow/ovl_En_Cow_reloc.o (.data)
        _ovl_En_CowSegmentDataEnd = .;
    _ovl_En_CowSegmentDataSize = ABSOLUTE( _ovl_En_CowSegmentDataEnd - _ovl_En_CowSegmentDataStart );
        _ovl_En_CowSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Cow/z_en_cow.o (.rodata)
            build/src/overlays/actors/ovl_En_Cow/ovl_En_Cow_reloc.o (.rodata)
        _ovl_En_CowSegmentRoDataEnd = .;
    _ovl_En_CowSegmentRoDataSize = ABSOLUTE( _ovl_En_CowSegmentRoDataEnd - _ovl_En_CowSegmentRoDataStart );
        _ovl_En_CowSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Cow/z_en_cow.o (.sdata)
            build/src/overlays/actors/ovl_En_Cow/ovl_En_Cow_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_CowSegmentSDataEnd = .;
        _ovl_En_CowSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Cow/z_en_cow.o (.ovl)
            build/src/overlays/actors/ovl_En_Cow/ovl_En_Cow_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_CowSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_CowSegmentOvlEnd - _ovl_En_CowSegmentTextStart );
    _ovl_En_CowSegmentRomEnd = _RomSize;

    ..ovl_En_Cow.bss ADDR(..ovl_En_Cow) + SIZEOF(..ovl_En_Cow) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_CowSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Cow/z_en_cow.o (.sbss)
            build/src/overlays/actors/ovl_En_Cow/ovl_En_Cow_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Cow/z_en_cow.o (.scommon)
            build/src/overlays/actors/ovl_En_Cow/ovl_En_Cow_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Cow/z_en_cow.o (.bss)
            build/src/overlays/actors/ovl_En_Cow/ovl_En_Cow_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Cow/z_en_cow.o (COMMON)
            build/src/overlays/actors/ovl_En_Cow/ovl_En_Cow_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_CowSegmentBssEnd = .;
        _ovl_En_CowSegmentEnd = .;
    }
    _ovl_En_CowSegmentBssSize = ABSOLUTE( _ovl_En_CowSegmentBssEnd - _ovl_En_CowSegmentBssStart );

    _ovl_En_CrowSegmentRomStart = _RomSize;
    ..ovl_En_Crow : AT(_RomSize)
    {
        _ovl_En_CrowSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_CrowSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Crow/z_en_crow.o (.text)
            build/data/overlays/actors/z_en_crow.data.o (.text)
            build/data/overlays/actors/z_en_crow.reloc.o (.text)
        _ovl_En_CrowSegmentTextEnd = .;
    _ovl_En_CrowSegmentTextSize = ABSOLUTE( _ovl_En_CrowSegmentTextEnd - _ovl_En_CrowSegmentTextStart );
        _ovl_En_CrowSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Crow/z_en_crow.o (.data)
            build/data/overlays/actors/z_en_crow.data.o (.data)
            build/data/overlays/actors/z_en_crow.reloc.o (.data)
        _ovl_En_CrowSegmentDataEnd = .;
    _ovl_En_CrowSegmentDataSize = ABSOLUTE( _ovl_En_CrowSegmentDataEnd - _ovl_En_CrowSegmentDataStart );
        _ovl_En_CrowSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Crow/z_en_crow.o (.rodata)
            build/data/overlays/actors/z_en_crow.data.o (.rodata)
            build/data/overlays/actors/z_en_crow.reloc.o (.rodata)
        _ovl_En_CrowSegmentRoDataEnd = .;
    _ovl_En_CrowSegmentRoDataSize = ABSOLUTE( _ovl_En_CrowSegmentRoDataEnd - _ovl_En_CrowSegmentRoDataStart );
        _ovl_En_CrowSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Crow/z_en_crow.o (.sdata)
            build/data/overlays/actors/z_en_crow.data.o (.sdata)
            build/data/overlays/actors/z_en_crow.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_CrowSegmentSDataEnd = .;
        _ovl_En_CrowSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Crow/z_en_crow.o (.ovl)
            build/data/overlays/actors/z_en_crow.data.o (.ovl)
            build/data/overlays/actors/z_en_crow.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_CrowSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_CrowSegmentOvlEnd - _ovl_En_CrowSegmentTextStart );
    _ovl_En_CrowSegmentRomEnd = _RomSize;

    ..ovl_En_Crow.bss ADDR(..ovl_En_Crow) + SIZEOF(..ovl_En_Crow) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_CrowSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Crow/z_en_crow.o (.sbss)
            build/data/overlays/actors/z_en_crow.data.o (.sbss)
            build/data/overlays/actors/z_en_crow.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Crow/z_en_crow.o (.scommon)
            build/data/overlays/actors/z_en_crow.data.o (.scommon)
            build/data/overlays/actors/z_en_crow.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Crow/z_en_crow.o (.bss)
            build/data/overlays/actors/z_en_crow.data.o (.bss)
            build/data/overlays/actors/z_en_crow.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Crow/z_en_crow.o (COMMON)
            build/data/overlays/actors/z_en_crow.data.o (COMMON)
            build/data/overlays/actors/z_en_crow.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_CrowSegmentBssEnd = .;
        _ovl_En_CrowSegmentEnd = .;
    }
    _ovl_En_CrowSegmentBssSize = ABSOLUTE( _ovl_En_CrowSegmentBssEnd - _ovl_En_CrowSegmentBssStart );

    _ovl_En_CsSegmentRomStart = _RomSize;
    ..ovl_En_Cs : AT(_RomSize)
    {
        _ovl_En_CsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_CsSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Cs/z_en_cs.o (.text)
            build/data/overlays/actors/z_en_cs.data.o (.text)
            build/data/overlays/actors/z_en_cs.reloc.o (.text)
        _ovl_En_CsSegmentTextEnd = .;
    _ovl_En_CsSegmentTextSize = ABSOLUTE( _ovl_En_CsSegmentTextEnd - _ovl_En_CsSegmentTextStart );
        _ovl_En_CsSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Cs/z_en_cs.o (.data)
            build/data/overlays/actors/z_en_cs.data.o (.data)
            build/data/overlays/actors/z_en_cs.reloc.o (.data)
        _ovl_En_CsSegmentDataEnd = .;
    _ovl_En_CsSegmentDataSize = ABSOLUTE( _ovl_En_CsSegmentDataEnd - _ovl_En_CsSegmentDataStart );
        _ovl_En_CsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Cs/z_en_cs.o (.rodata)
            build/data/overlays/actors/z_en_cs.data.o (.rodata)
            build/data/overlays/actors/z_en_cs.reloc.o (.rodata)
        _ovl_En_CsSegmentRoDataEnd = .;
    _ovl_En_CsSegmentRoDataSize = ABSOLUTE( _ovl_En_CsSegmentRoDataEnd - _ovl_En_CsSegmentRoDataStart );
        _ovl_En_CsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Cs/z_en_cs.o (.sdata)
            build/data/overlays/actors/z_en_cs.data.o (.sdata)
            build/data/overlays/actors/z_en_cs.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_CsSegmentSDataEnd = .;
        _ovl_En_CsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Cs/z_en_cs.o (.ovl)
            build/data/overlays/actors/z_en_cs.data.o (.ovl)
            build/data/overlays/actors/z_en_cs.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_CsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_CsSegmentOvlEnd - _ovl_En_CsSegmentTextStart );
    _ovl_En_CsSegmentRomEnd = _RomSize;

    ..ovl_En_Cs.bss ADDR(..ovl_En_Cs) + SIZEOF(..ovl_En_Cs) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_CsSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Cs/z_en_cs.o (.sbss)
            build/data/overlays/actors/z_en_cs.data.o (.sbss)
            build/data/overlays/actors/z_en_cs.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Cs/z_en_cs.o (.scommon)
            build/data/overlays/actors/z_en_cs.data.o (.scommon)
            build/data/overlays/actors/z_en_cs.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Cs/z_en_cs.o (.bss)
            build/data/overlays/actors/z_en_cs.data.o (.bss)
            build/data/overlays/actors/z_en_cs.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Cs/z_en_cs.o (COMMON)
            build/data/overlays/actors/z_en_cs.data.o (COMMON)
            build/data/overlays/actors/z_en_cs.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_CsSegmentBssEnd = .;
        _ovl_En_CsSegmentEnd = .;
    }
    _ovl_En_CsSegmentBssSize = ABSOLUTE( _ovl_En_CsSegmentBssEnd - _ovl_En_CsSegmentBssStart );

    _ovl_En_DaikuSegmentRomStart = _RomSize;
    ..ovl_En_Daiku : AT(_RomSize)
    {
        _ovl_En_DaikuSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_DaikuSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Daiku/z_en_daiku.o (.text)
            build/data/overlays/actors/z_en_daiku.data.o (.text)
            build/data/overlays/actors/z_en_daiku.reloc.o (.text)
        _ovl_En_DaikuSegmentTextEnd = .;
    _ovl_En_DaikuSegmentTextSize = ABSOLUTE( _ovl_En_DaikuSegmentTextEnd - _ovl_En_DaikuSegmentTextStart );
        _ovl_En_DaikuSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Daiku/z_en_daiku.o (.data)
            build/data/overlays/actors/z_en_daiku.data.o (.data)
            build/data/overlays/actors/z_en_daiku.reloc.o (.data)
        _ovl_En_DaikuSegmentDataEnd = .;
    _ovl_En_DaikuSegmentDataSize = ABSOLUTE( _ovl_En_DaikuSegmentDataEnd - _ovl_En_DaikuSegmentDataStart );
        _ovl_En_DaikuSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Daiku/z_en_daiku.o (.rodata)
            build/data/overlays/actors/z_en_daiku.data.o (.rodata)
            build/data/overlays/actors/z_en_daiku.reloc.o (.rodata)
        _ovl_En_DaikuSegmentRoDataEnd = .;
    _ovl_En_DaikuSegmentRoDataSize = ABSOLUTE( _ovl_En_DaikuSegmentRoDataEnd - _ovl_En_DaikuSegmentRoDataStart );
        _ovl_En_DaikuSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Daiku/z_en_daiku.o (.sdata)
            build/data/overlays/actors/z_en_daiku.data.o (.sdata)
            build/data/overlays/actors/z_en_daiku.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_DaikuSegmentSDataEnd = .;
        _ovl_En_DaikuSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Daiku/z_en_daiku.o (.ovl)
            build/data/overlays/actors/z_en_daiku.data.o (.ovl)
            build/data/overlays/actors/z_en_daiku.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_DaikuSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_DaikuSegmentOvlEnd - _ovl_En_DaikuSegmentTextStart );
    _ovl_En_DaikuSegmentRomEnd = _RomSize;

    ..ovl_En_Daiku.bss ADDR(..ovl_En_Daiku) + SIZEOF(..ovl_En_Daiku) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_DaikuSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Daiku/z_en_daiku.o (.sbss)
            build/data/overlays/actors/z_en_daiku.data.o (.sbss)
            build/data/overlays/actors/z_en_daiku.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Daiku/z_en_daiku.o (.scommon)
            build/data/overlays/actors/z_en_daiku.data.o (.scommon)
            build/data/overlays/actors/z_en_daiku.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Daiku/z_en_daiku.o (.bss)
            build/data/overlays/actors/z_en_daiku.data.o (.bss)
            build/data/overlays/actors/z_en_daiku.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Daiku/z_en_daiku.o (COMMON)
            build/data/overlays/actors/z_en_daiku.data.o (COMMON)
            build/data/overlays/actors/z_en_daiku.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_DaikuSegmentBssEnd = .;
        _ovl_En_DaikuSegmentEnd = .;
    }
    _ovl_En_DaikuSegmentBssSize = ABSOLUTE( _ovl_En_DaikuSegmentBssEnd - _ovl_En_DaikuSegmentBssStart );

    _ovl_En_Daiku_KakarikoSegmentRomStart = _RomSize;
    ..ovl_En_Daiku_Kakariko : AT(_RomSize)
    {
        _ovl_En_Daiku_KakarikoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Daiku_KakarikoSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Daiku_Kakariko/z_en_daiku_kakariko.o (.text)
            build/data/overlays/actors/z_en_daiku_kakariko.data.o (.text)
            build/data/overlays/actors/z_en_daiku_kakariko.reloc.o (.text)
        _ovl_En_Daiku_KakarikoSegmentTextEnd = .;
    _ovl_En_Daiku_KakarikoSegmentTextSize = ABSOLUTE( _ovl_En_Daiku_KakarikoSegmentTextEnd - _ovl_En_Daiku_KakarikoSegmentTextStart );
        _ovl_En_Daiku_KakarikoSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Daiku_Kakariko/z_en_daiku_kakariko.o (.data)
            build/data/overlays/actors/z_en_daiku_kakariko.data.o (.data)
            build/data/overlays/actors/z_en_daiku_kakariko.reloc.o (.data)
        _ovl_En_Daiku_KakarikoSegmentDataEnd = .;
    _ovl_En_Daiku_KakarikoSegmentDataSize = ABSOLUTE( _ovl_En_Daiku_KakarikoSegmentDataEnd - _ovl_En_Daiku_KakarikoSegmentDataStart );
        _ovl_En_Daiku_KakarikoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Daiku_Kakariko/z_en_daiku_kakariko.o (.rodata)
            build/data/overlays/actors/z_en_daiku_kakariko.data.o (.rodata)
            build/data/overlays/actors/z_en_daiku_kakariko.reloc.o (.rodata)
        _ovl_En_Daiku_KakarikoSegmentRoDataEnd = .;
    _ovl_En_Daiku_KakarikoSegmentRoDataSize = ABSOLUTE( _ovl_En_Daiku_KakarikoSegmentRoDataEnd - _ovl_En_Daiku_KakarikoSegmentRoDataStart );
        _ovl_En_Daiku_KakarikoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Daiku_Kakariko/z_en_daiku_kakariko.o (.sdata)
            build/data/overlays/actors/z_en_daiku_kakariko.data.o (.sdata)
            build/data/overlays/actors/z_en_daiku_kakariko.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Daiku_KakarikoSegmentSDataEnd = .;
        _ovl_En_Daiku_KakarikoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Daiku_Kakariko/z_en_daiku_kakariko.o (.ovl)
            build/data/overlays/actors/z_en_daiku_kakariko.data.o (.ovl)
            build/data/overlays/actors/z_en_daiku_kakariko.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Daiku_KakarikoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Daiku_KakarikoSegmentOvlEnd - _ovl_En_Daiku_KakarikoSegmentTextStart );
    _ovl_En_Daiku_KakarikoSegmentRomEnd = _RomSize;

    ..ovl_En_Daiku_Kakariko.bss ADDR(..ovl_En_Daiku_Kakariko) + SIZEOF(..ovl_En_Daiku_Kakariko) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Daiku_KakarikoSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Daiku_Kakariko/z_en_daiku_kakariko.o (.sbss)
            build/data/overlays/actors/z_en_daiku_kakariko.data.o (.sbss)
            build/data/overlays/actors/z_en_daiku_kakariko.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Daiku_Kakariko/z_en_daiku_kakariko.o (.scommon)
            build/data/overlays/actors/z_en_daiku_kakariko.data.o (.scommon)
            build/data/overlays/actors/z_en_daiku_kakariko.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Daiku_Kakariko/z_en_daiku_kakariko.o (.bss)
            build/data/overlays/actors/z_en_daiku_kakariko.data.o (.bss)
            build/data/overlays/actors/z_en_daiku_kakariko.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Daiku_Kakariko/z_en_daiku_kakariko.o (COMMON)
            build/data/overlays/actors/z_en_daiku_kakariko.data.o (COMMON)
            build/data/overlays/actors/z_en_daiku_kakariko.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Daiku_KakarikoSegmentBssEnd = .;
        _ovl_En_Daiku_KakarikoSegmentEnd = .;
    }
    _ovl_En_Daiku_KakarikoSegmentBssSize = ABSOLUTE( _ovl_En_Daiku_KakarikoSegmentBssEnd - _ovl_En_Daiku_KakarikoSegmentBssStart );

    _ovl_En_DekubabaSegmentRomStart = _RomSize;
    ..ovl_En_Dekubaba : AT(_RomSize)
    {
        _ovl_En_DekubabaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_DekubabaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Dekubaba/z_en_dekubaba.o (.text)
            build/data/overlays/actors/z_en_dekubaba.data.o (.text)
            build/data/overlays/actors/z_en_dekubaba.reloc.o (.text)
        _ovl_En_DekubabaSegmentTextEnd = .;
    _ovl_En_DekubabaSegmentTextSize = ABSOLUTE( _ovl_En_DekubabaSegmentTextEnd - _ovl_En_DekubabaSegmentTextStart );
        _ovl_En_DekubabaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Dekubaba/z_en_dekubaba.o (.data)
            build/data/overlays/actors/z_en_dekubaba.data.o (.data)
            build/data/overlays/actors/z_en_dekubaba.reloc.o (.data)
        _ovl_En_DekubabaSegmentDataEnd = .;
    _ovl_En_DekubabaSegmentDataSize = ABSOLUTE( _ovl_En_DekubabaSegmentDataEnd - _ovl_En_DekubabaSegmentDataStart );
        _ovl_En_DekubabaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Dekubaba/z_en_dekubaba.o (.rodata)
            build/data/overlays/actors/z_en_dekubaba.data.o (.rodata)
            build/data/overlays/actors/z_en_dekubaba.reloc.o (.rodata)
        _ovl_En_DekubabaSegmentRoDataEnd = .;
    _ovl_En_DekubabaSegmentRoDataSize = ABSOLUTE( _ovl_En_DekubabaSegmentRoDataEnd - _ovl_En_DekubabaSegmentRoDataStart );
        _ovl_En_DekubabaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Dekubaba/z_en_dekubaba.o (.sdata)
            build/data/overlays/actors/z_en_dekubaba.data.o (.sdata)
            build/data/overlays/actors/z_en_dekubaba.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_DekubabaSegmentSDataEnd = .;
        _ovl_En_DekubabaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Dekubaba/z_en_dekubaba.o (.ovl)
            build/data/overlays/actors/z_en_dekubaba.data.o (.ovl)
            build/data/overlays/actors/z_en_dekubaba.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_DekubabaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_DekubabaSegmentOvlEnd - _ovl_En_DekubabaSegmentTextStart );
    _ovl_En_DekubabaSegmentRomEnd = _RomSize;

    ..ovl_En_Dekubaba.bss ADDR(..ovl_En_Dekubaba) + SIZEOF(..ovl_En_Dekubaba) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_DekubabaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Dekubaba/z_en_dekubaba.o (.sbss)
            build/data/overlays/actors/z_en_dekubaba.data.o (.sbss)
            build/data/overlays/actors/z_en_dekubaba.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Dekubaba/z_en_dekubaba.o (.scommon)
            build/data/overlays/actors/z_en_dekubaba.data.o (.scommon)
            build/data/overlays/actors/z_en_dekubaba.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Dekubaba/z_en_dekubaba.o (.bss)
            build/data/overlays/actors/z_en_dekubaba.data.o (.bss)
            build/data/overlays/actors/z_en_dekubaba.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Dekubaba/z_en_dekubaba.o (COMMON)
            build/data/overlays/actors/z_en_dekubaba.data.o (COMMON)
            build/data/overlays/actors/z_en_dekubaba.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_DekubabaSegmentBssEnd = .;
        _ovl_En_DekubabaSegmentEnd = .;
    }
    _ovl_En_DekubabaSegmentBssSize = ABSOLUTE( _ovl_En_DekubabaSegmentBssEnd - _ovl_En_DekubabaSegmentBssStart );

    _ovl_En_DekunutsSegmentRomStart = _RomSize;
    ..ovl_En_Dekunuts : AT(_RomSize)
    {
        _ovl_En_DekunutsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_DekunutsSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Dekunuts/z_en_dekunuts.o (.text)
            build/data/overlays/actors/z_en_dekunuts.data.o (.text)
            build/data/overlays/actors/z_en_dekunuts.reloc.o (.text)
        _ovl_En_DekunutsSegmentTextEnd = .;
    _ovl_En_DekunutsSegmentTextSize = ABSOLUTE( _ovl_En_DekunutsSegmentTextEnd - _ovl_En_DekunutsSegmentTextStart );
        _ovl_En_DekunutsSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Dekunuts/z_en_dekunuts.o (.data)
            build/data/overlays/actors/z_en_dekunuts.data.o (.data)
            build/data/overlays/actors/z_en_dekunuts.reloc.o (.data)
        _ovl_En_DekunutsSegmentDataEnd = .;
    _ovl_En_DekunutsSegmentDataSize = ABSOLUTE( _ovl_En_DekunutsSegmentDataEnd - _ovl_En_DekunutsSegmentDataStart );
        _ovl_En_DekunutsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Dekunuts/z_en_dekunuts.o (.rodata)
            build/data/overlays/actors/z_en_dekunuts.data.o (.rodata)
            build/data/overlays/actors/z_en_dekunuts.reloc.o (.rodata)
        _ovl_En_DekunutsSegmentRoDataEnd = .;
    _ovl_En_DekunutsSegmentRoDataSize = ABSOLUTE( _ovl_En_DekunutsSegmentRoDataEnd - _ovl_En_DekunutsSegmentRoDataStart );
        _ovl_En_DekunutsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Dekunuts/z_en_dekunuts.o (.sdata)
            build/data/overlays/actors/z_en_dekunuts.data.o (.sdata)
            build/data/overlays/actors/z_en_dekunuts.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_DekunutsSegmentSDataEnd = .;
        _ovl_En_DekunutsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Dekunuts/z_en_dekunuts.o (.ovl)
            build/data/overlays/actors/z_en_dekunuts.data.o (.ovl)
            build/data/overlays/actors/z_en_dekunuts.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_DekunutsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_DekunutsSegmentOvlEnd - _ovl_En_DekunutsSegmentTextStart );
    _ovl_En_DekunutsSegmentRomEnd = _RomSize;

    ..ovl_En_Dekunuts.bss ADDR(..ovl_En_Dekunuts) + SIZEOF(..ovl_En_Dekunuts) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_DekunutsSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Dekunuts/z_en_dekunuts.o (.sbss)
            build/data/overlays/actors/z_en_dekunuts.data.o (.sbss)
            build/data/overlays/actors/z_en_dekunuts.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Dekunuts/z_en_dekunuts.o (.scommon)
            build/data/overlays/actors/z_en_dekunuts.data.o (.scommon)
            build/data/overlays/actors/z_en_dekunuts.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Dekunuts/z_en_dekunuts.o (.bss)
            build/data/overlays/actors/z_en_dekunuts.data.o (.bss)
            build/data/overlays/actors/z_en_dekunuts.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Dekunuts/z_en_dekunuts.o (COMMON)
            build/data/overlays/actors/z_en_dekunuts.data.o (COMMON)
            build/data/overlays/actors/z_en_dekunuts.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_DekunutsSegmentBssEnd = .;
        _ovl_En_DekunutsSegmentEnd = .;
    }
    _ovl_En_DekunutsSegmentBssSize = ABSOLUTE( _ovl_En_DekunutsSegmentBssEnd - _ovl_En_DekunutsSegmentBssStart );

    _ovl_En_DhSegmentRomStart = _RomSize;
    ..ovl_En_Dh : AT(_RomSize)
    {
        _ovl_En_DhSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_DhSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Dh/z_en_dh.o (.text)
            build/data/overlays/actors/z_en_dh.data.o (.text)
            build/data/overlays/actors/z_en_dh.reloc.o (.text)
        _ovl_En_DhSegmentTextEnd = .;
    _ovl_En_DhSegmentTextSize = ABSOLUTE( _ovl_En_DhSegmentTextEnd - _ovl_En_DhSegmentTextStart );
        _ovl_En_DhSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Dh/z_en_dh.o (.data)
            build/data/overlays/actors/z_en_dh.data.o (.data)
            build/data/overlays/actors/z_en_dh.reloc.o (.data)
        _ovl_En_DhSegmentDataEnd = .;
    _ovl_En_DhSegmentDataSize = ABSOLUTE( _ovl_En_DhSegmentDataEnd - _ovl_En_DhSegmentDataStart );
        _ovl_En_DhSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Dh/z_en_dh.o (.rodata)
            build/data/overlays/actors/z_en_dh.data.o (.rodata)
            build/data/overlays/actors/z_en_dh.reloc.o (.rodata)
        _ovl_En_DhSegmentRoDataEnd = .;
    _ovl_En_DhSegmentRoDataSize = ABSOLUTE( _ovl_En_DhSegmentRoDataEnd - _ovl_En_DhSegmentRoDataStart );
        _ovl_En_DhSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Dh/z_en_dh.o (.sdata)
            build/data/overlays/actors/z_en_dh.data.o (.sdata)
            build/data/overlays/actors/z_en_dh.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_DhSegmentSDataEnd = .;
        _ovl_En_DhSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Dh/z_en_dh.o (.ovl)
            build/data/overlays/actors/z_en_dh.data.o (.ovl)
            build/data/overlays/actors/z_en_dh.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_DhSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_DhSegmentOvlEnd - _ovl_En_DhSegmentTextStart );
    _ovl_En_DhSegmentRomEnd = _RomSize;

    ..ovl_En_Dh.bss ADDR(..ovl_En_Dh) + SIZEOF(..ovl_En_Dh) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_DhSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Dh/z_en_dh.o (.sbss)
            build/data/overlays/actors/z_en_dh.data.o (.sbss)
            build/data/overlays/actors/z_en_dh.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Dh/z_en_dh.o (.scommon)
            build/data/overlays/actors/z_en_dh.data.o (.scommon)
            build/data/overlays/actors/z_en_dh.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Dh/z_en_dh.o (.bss)
            build/data/overlays/actors/z_en_dh.data.o (.bss)
            build/data/overlays/actors/z_en_dh.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Dh/z_en_dh.o (COMMON)
            build/data/overlays/actors/z_en_dh.data.o (COMMON)
            build/data/overlays/actors/z_en_dh.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_DhSegmentBssEnd = .;
        _ovl_En_DhSegmentEnd = .;
    }
    _ovl_En_DhSegmentBssSize = ABSOLUTE( _ovl_En_DhSegmentBssEnd - _ovl_En_DhSegmentBssStart );

    _ovl_En_DhaSegmentRomStart = _RomSize;
    ..ovl_En_Dha : AT(_RomSize)
    {
        _ovl_En_DhaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_DhaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Dha/z_en_dha.o (.text)
            build/src/overlays/actors/ovl_En_Dha/ovl_En_Dha_reloc.o (.text)
        _ovl_En_DhaSegmentTextEnd = .;
    _ovl_En_DhaSegmentTextSize = ABSOLUTE( _ovl_En_DhaSegmentTextEnd - _ovl_En_DhaSegmentTextStart );
        _ovl_En_DhaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Dha/z_en_dha.o (.data)
            build/src/overlays/actors/ovl_En_Dha/ovl_En_Dha_reloc.o (.data)
        _ovl_En_DhaSegmentDataEnd = .;
    _ovl_En_DhaSegmentDataSize = ABSOLUTE( _ovl_En_DhaSegmentDataEnd - _ovl_En_DhaSegmentDataStart );
        _ovl_En_DhaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Dha/z_en_dha.o (.rodata)
            build/src/overlays/actors/ovl_En_Dha/ovl_En_Dha_reloc.o (.rodata)
        _ovl_En_DhaSegmentRoDataEnd = .;
    _ovl_En_DhaSegmentRoDataSize = ABSOLUTE( _ovl_En_DhaSegmentRoDataEnd - _ovl_En_DhaSegmentRoDataStart );
        _ovl_En_DhaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Dha/z_en_dha.o (.sdata)
            build/src/overlays/actors/ovl_En_Dha/ovl_En_Dha_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_DhaSegmentSDataEnd = .;
        _ovl_En_DhaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Dha/z_en_dha.o (.ovl)
            build/src/overlays/actors/ovl_En_Dha/ovl_En_Dha_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_DhaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_DhaSegmentOvlEnd - _ovl_En_DhaSegmentTextStart );
    _ovl_En_DhaSegmentRomEnd = _RomSize;

    ..ovl_En_Dha.bss ADDR(..ovl_En_Dha) + SIZEOF(..ovl_En_Dha) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_DhaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Dha/z_en_dha.o (.sbss)
            build/src/overlays/actors/ovl_En_Dha/ovl_En_Dha_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Dha/z_en_dha.o (.scommon)
            build/src/overlays/actors/ovl_En_Dha/ovl_En_Dha_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Dha/z_en_dha.o (.bss)
            build/src/overlays/actors/ovl_En_Dha/ovl_En_Dha_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Dha/z_en_dha.o (COMMON)
            build/src/overlays/actors/ovl_En_Dha/ovl_En_Dha_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_DhaSegmentBssEnd = .;
        _ovl_En_DhaSegmentEnd = .;
    }
    _ovl_En_DhaSegmentBssSize = ABSOLUTE( _ovl_En_DhaSegmentBssEnd - _ovl_En_DhaSegmentBssStart );

    _ovl_En_Diving_GameSegmentRomStart = _RomSize;
    ..ovl_En_Diving_Game : AT(_RomSize)
    {
        _ovl_En_Diving_GameSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Diving_GameSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Diving_Game/z_en_diving_game.o (.text)
            build/data/overlays/actors/z_en_diving_game.data.o (.text)
            build/data/overlays/actors/z_en_diving_game.reloc.o (.text)
        _ovl_En_Diving_GameSegmentTextEnd = .;
    _ovl_En_Diving_GameSegmentTextSize = ABSOLUTE( _ovl_En_Diving_GameSegmentTextEnd - _ovl_En_Diving_GameSegmentTextStart );
        _ovl_En_Diving_GameSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Diving_Game/z_en_diving_game.o (.data)
            build/data/overlays/actors/z_en_diving_game.data.o (.data)
            build/data/overlays/actors/z_en_diving_game.reloc.o (.data)
        _ovl_En_Diving_GameSegmentDataEnd = .;
    _ovl_En_Diving_GameSegmentDataSize = ABSOLUTE( _ovl_En_Diving_GameSegmentDataEnd - _ovl_En_Diving_GameSegmentDataStart );
        _ovl_En_Diving_GameSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Diving_Game/z_en_diving_game.o (.rodata)
            build/data/overlays/actors/z_en_diving_game.data.o (.rodata)
            build/data/overlays/actors/z_en_diving_game.reloc.o (.rodata)
        _ovl_En_Diving_GameSegmentRoDataEnd = .;
    _ovl_En_Diving_GameSegmentRoDataSize = ABSOLUTE( _ovl_En_Diving_GameSegmentRoDataEnd - _ovl_En_Diving_GameSegmentRoDataStart );
        _ovl_En_Diving_GameSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Diving_Game/z_en_diving_game.o (.sdata)
            build/data/overlays/actors/z_en_diving_game.data.o (.sdata)
            build/data/overlays/actors/z_en_diving_game.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Diving_GameSegmentSDataEnd = .;
        _ovl_En_Diving_GameSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Diving_Game/z_en_diving_game.o (.ovl)
            build/data/overlays/actors/z_en_diving_game.data.o (.ovl)
            build/data/overlays/actors/z_en_diving_game.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Diving_GameSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Diving_GameSegmentOvlEnd - _ovl_En_Diving_GameSegmentTextStart );
    _ovl_En_Diving_GameSegmentRomEnd = _RomSize;

    ..ovl_En_Diving_Game.bss ADDR(..ovl_En_Diving_Game) + SIZEOF(..ovl_En_Diving_Game) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Diving_GameSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Diving_Game/z_en_diving_game.o (.sbss)
            build/data/overlays/actors/z_en_diving_game.data.o (.sbss)
            build/data/overlays/actors/z_en_diving_game.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Diving_Game/z_en_diving_game.o (.scommon)
            build/data/overlays/actors/z_en_diving_game.data.o (.scommon)
            build/data/overlays/actors/z_en_diving_game.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Diving_Game/z_en_diving_game.o (.bss)
            build/data/overlays/actors/z_en_diving_game.data.o (.bss)
            build/data/overlays/actors/z_en_diving_game.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Diving_Game/z_en_diving_game.o (COMMON)
            build/data/overlays/actors/z_en_diving_game.data.o (COMMON)
            build/data/overlays/actors/z_en_diving_game.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Diving_GameSegmentBssEnd = .;
        _ovl_En_Diving_GameSegmentEnd = .;
    }
    _ovl_En_Diving_GameSegmentBssSize = ABSOLUTE( _ovl_En_Diving_GameSegmentBssEnd - _ovl_En_Diving_GameSegmentBssStart );

    _ovl_En_DnsSegmentRomStart = _RomSize;
    ..ovl_En_Dns : AT(_RomSize)
    {
        _ovl_En_DnsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_DnsSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Dns/z_en_dns.o (.text)
            build/data/overlays/actors/z_en_dns.data.o (.text)
            build/data/overlays/actors/z_en_dns.reloc.o (.text)
        _ovl_En_DnsSegmentTextEnd = .;
    _ovl_En_DnsSegmentTextSize = ABSOLUTE( _ovl_En_DnsSegmentTextEnd - _ovl_En_DnsSegmentTextStart );
        _ovl_En_DnsSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Dns/z_en_dns.o (.data)
            build/data/overlays/actors/z_en_dns.data.o (.data)
            build/data/overlays/actors/z_en_dns.reloc.o (.data)
        _ovl_En_DnsSegmentDataEnd = .;
    _ovl_En_DnsSegmentDataSize = ABSOLUTE( _ovl_En_DnsSegmentDataEnd - _ovl_En_DnsSegmentDataStart );
        _ovl_En_DnsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Dns/z_en_dns.o (.rodata)
            build/data/overlays/actors/z_en_dns.data.o (.rodata)
            build/data/overlays/actors/z_en_dns.reloc.o (.rodata)
        _ovl_En_DnsSegmentRoDataEnd = .;
    _ovl_En_DnsSegmentRoDataSize = ABSOLUTE( _ovl_En_DnsSegmentRoDataEnd - _ovl_En_DnsSegmentRoDataStart );
        _ovl_En_DnsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Dns/z_en_dns.o (.sdata)
            build/data/overlays/actors/z_en_dns.data.o (.sdata)
            build/data/overlays/actors/z_en_dns.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_DnsSegmentSDataEnd = .;
        _ovl_En_DnsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Dns/z_en_dns.o (.ovl)
            build/data/overlays/actors/z_en_dns.data.o (.ovl)
            build/data/overlays/actors/z_en_dns.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_DnsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_DnsSegmentOvlEnd - _ovl_En_DnsSegmentTextStart );
    _ovl_En_DnsSegmentRomEnd = _RomSize;

    ..ovl_En_Dns.bss ADDR(..ovl_En_Dns) + SIZEOF(..ovl_En_Dns) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_DnsSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Dns/z_en_dns.o (.sbss)
            build/data/overlays/actors/z_en_dns.data.o (.sbss)
            build/data/overlays/actors/z_en_dns.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Dns/z_en_dns.o (.scommon)
            build/data/overlays/actors/z_en_dns.data.o (.scommon)
            build/data/overlays/actors/z_en_dns.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Dns/z_en_dns.o (.bss)
            build/data/overlays/actors/z_en_dns.data.o (.bss)
            build/data/overlays/actors/z_en_dns.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Dns/z_en_dns.o (COMMON)
            build/data/overlays/actors/z_en_dns.data.o (COMMON)
            build/data/overlays/actors/z_en_dns.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_DnsSegmentBssEnd = .;
        _ovl_En_DnsSegmentEnd = .;
    }
    _ovl_En_DnsSegmentBssSize = ABSOLUTE( _ovl_En_DnsSegmentBssEnd - _ovl_En_DnsSegmentBssStart );

    _ovl_En_Dnt_DemoSegmentRomStart = _RomSize;
    ..ovl_En_Dnt_Demo : AT(_RomSize)
    {
        _ovl_En_Dnt_DemoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Dnt_DemoSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Demo/z_en_dnt_demo.o (.text)
            build/data/overlays/actors/z_en_dnt_demo.data.o (.text)
            build/data/overlays/actors/z_en_dnt_demo.reloc.o (.text)
        _ovl_En_Dnt_DemoSegmentTextEnd = .;
    _ovl_En_Dnt_DemoSegmentTextSize = ABSOLUTE( _ovl_En_Dnt_DemoSegmentTextEnd - _ovl_En_Dnt_DemoSegmentTextStart );
        _ovl_En_Dnt_DemoSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Demo/z_en_dnt_demo.o (.data)
            build/data/overlays/actors/z_en_dnt_demo.data.o (.data)
            build/data/overlays/actors/z_en_dnt_demo.reloc.o (.data)
        _ovl_En_Dnt_DemoSegmentDataEnd = .;
    _ovl_En_Dnt_DemoSegmentDataSize = ABSOLUTE( _ovl_En_Dnt_DemoSegmentDataEnd - _ovl_En_Dnt_DemoSegmentDataStart );
        _ovl_En_Dnt_DemoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Demo/z_en_dnt_demo.o (.rodata)
            build/data/overlays/actors/z_en_dnt_demo.data.o (.rodata)
            build/data/overlays/actors/z_en_dnt_demo.reloc.o (.rodata)
        _ovl_En_Dnt_DemoSegmentRoDataEnd = .;
    _ovl_En_Dnt_DemoSegmentRoDataSize = ABSOLUTE( _ovl_En_Dnt_DemoSegmentRoDataEnd - _ovl_En_Dnt_DemoSegmentRoDataStart );
        _ovl_En_Dnt_DemoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Demo/z_en_dnt_demo.o (.sdata)
            build/data/overlays/actors/z_en_dnt_demo.data.o (.sdata)
            build/data/overlays/actors/z_en_dnt_demo.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Dnt_DemoSegmentSDataEnd = .;
        _ovl_En_Dnt_DemoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Demo/z_en_dnt_demo.o (.ovl)
            build/data/overlays/actors/z_en_dnt_demo.data.o (.ovl)
            build/data/overlays/actors/z_en_dnt_demo.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Dnt_DemoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Dnt_DemoSegmentOvlEnd - _ovl_En_Dnt_DemoSegmentTextStart );
    _ovl_En_Dnt_DemoSegmentRomEnd = _RomSize;

    ..ovl_En_Dnt_Demo.bss ADDR(..ovl_En_Dnt_Demo) + SIZEOF(..ovl_En_Dnt_Demo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Dnt_DemoSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Demo/z_en_dnt_demo.o (.sbss)
            build/data/overlays/actors/z_en_dnt_demo.data.o (.sbss)
            build/data/overlays/actors/z_en_dnt_demo.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Dnt_Demo/z_en_dnt_demo.o (.scommon)
            build/data/overlays/actors/z_en_dnt_demo.data.o (.scommon)
            build/data/overlays/actors/z_en_dnt_demo.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Dnt_Demo/z_en_dnt_demo.o (.bss)
            build/data/overlays/actors/z_en_dnt_demo.data.o (.bss)
            build/data/overlays/actors/z_en_dnt_demo.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Dnt_Demo/z_en_dnt_demo.o (COMMON)
            build/data/overlays/actors/z_en_dnt_demo.data.o (COMMON)
            build/data/overlays/actors/z_en_dnt_demo.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Dnt_DemoSegmentBssEnd = .;
        _ovl_En_Dnt_DemoSegmentEnd = .;
    }
    _ovl_En_Dnt_DemoSegmentBssSize = ABSOLUTE( _ovl_En_Dnt_DemoSegmentBssEnd - _ovl_En_Dnt_DemoSegmentBssStart );

    _ovl_En_Dnt_JijiSegmentRomStart = _RomSize;
    ..ovl_En_Dnt_Jiji : AT(_RomSize)
    {
        _ovl_En_Dnt_JijiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Dnt_JijiSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Jiji/z_en_dnt_jiji.o (.text)
            build/data/overlays/actors/z_en_dnt_jiji.data.o (.text)
            build/data/overlays/actors/z_en_dnt_jiji.reloc.o (.text)
        _ovl_En_Dnt_JijiSegmentTextEnd = .;
    _ovl_En_Dnt_JijiSegmentTextSize = ABSOLUTE( _ovl_En_Dnt_JijiSegmentTextEnd - _ovl_En_Dnt_JijiSegmentTextStart );
        _ovl_En_Dnt_JijiSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Jiji/z_en_dnt_jiji.o (.data)
            build/data/overlays/actors/z_en_dnt_jiji.data.o (.data)
            build/data/overlays/actors/z_en_dnt_jiji.reloc.o (.data)
        _ovl_En_Dnt_JijiSegmentDataEnd = .;
    _ovl_En_Dnt_JijiSegmentDataSize = ABSOLUTE( _ovl_En_Dnt_JijiSegmentDataEnd - _ovl_En_Dnt_JijiSegmentDataStart );
        _ovl_En_Dnt_JijiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Jiji/z_en_dnt_jiji.o (.rodata)
            build/data/overlays/actors/z_en_dnt_jiji.data.o (.rodata)
            build/data/overlays/actors/z_en_dnt_jiji.reloc.o (.rodata)
        _ovl_En_Dnt_JijiSegmentRoDataEnd = .;
    _ovl_En_Dnt_JijiSegmentRoDataSize = ABSOLUTE( _ovl_En_Dnt_JijiSegmentRoDataEnd - _ovl_En_Dnt_JijiSegmentRoDataStart );
        _ovl_En_Dnt_JijiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Jiji/z_en_dnt_jiji.o (.sdata)
            build/data/overlays/actors/z_en_dnt_jiji.data.o (.sdata)
            build/data/overlays/actors/z_en_dnt_jiji.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Dnt_JijiSegmentSDataEnd = .;
        _ovl_En_Dnt_JijiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Jiji/z_en_dnt_jiji.o (.ovl)
            build/data/overlays/actors/z_en_dnt_jiji.data.o (.ovl)
            build/data/overlays/actors/z_en_dnt_jiji.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Dnt_JijiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Dnt_JijiSegmentOvlEnd - _ovl_En_Dnt_JijiSegmentTextStart );
    _ovl_En_Dnt_JijiSegmentRomEnd = _RomSize;

    ..ovl_En_Dnt_Jiji.bss ADDR(..ovl_En_Dnt_Jiji) + SIZEOF(..ovl_En_Dnt_Jiji) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Dnt_JijiSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Jiji/z_en_dnt_jiji.o (.sbss)
            build/data/overlays/actors/z_en_dnt_jiji.data.o (.sbss)
            build/data/overlays/actors/z_en_dnt_jiji.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Dnt_Jiji/z_en_dnt_jiji.o (.scommon)
            build/data/overlays/actors/z_en_dnt_jiji.data.o (.scommon)
            build/data/overlays/actors/z_en_dnt_jiji.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Dnt_Jiji/z_en_dnt_jiji.o (.bss)
            build/data/overlays/actors/z_en_dnt_jiji.data.o (.bss)
            build/data/overlays/actors/z_en_dnt_jiji.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Dnt_Jiji/z_en_dnt_jiji.o (COMMON)
            build/data/overlays/actors/z_en_dnt_jiji.data.o (COMMON)
            build/data/overlays/actors/z_en_dnt_jiji.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Dnt_JijiSegmentBssEnd = .;
        _ovl_En_Dnt_JijiSegmentEnd = .;
    }
    _ovl_En_Dnt_JijiSegmentBssSize = ABSOLUTE( _ovl_En_Dnt_JijiSegmentBssEnd - _ovl_En_Dnt_JijiSegmentBssStart );

    _ovl_En_Dnt_NomalSegmentRomStart = _RomSize;
    ..ovl_En_Dnt_Nomal : AT(_RomSize)
    {
        _ovl_En_Dnt_NomalSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Dnt_NomalSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Nomal/z_en_dnt_nomal.o (.text)
            build/data/overlays/actors/z_en_dnt_nomal.data.o (.text)
            build/data/overlays/actors/z_en_dnt_nomal.reloc.o (.text)
        _ovl_En_Dnt_NomalSegmentTextEnd = .;
    _ovl_En_Dnt_NomalSegmentTextSize = ABSOLUTE( _ovl_En_Dnt_NomalSegmentTextEnd - _ovl_En_Dnt_NomalSegmentTextStart );
        _ovl_En_Dnt_NomalSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Nomal/z_en_dnt_nomal.o (.data)
            build/data/overlays/actors/z_en_dnt_nomal.data.o (.data)
            build/data/overlays/actors/z_en_dnt_nomal.reloc.o (.data)
        _ovl_En_Dnt_NomalSegmentDataEnd = .;
    _ovl_En_Dnt_NomalSegmentDataSize = ABSOLUTE( _ovl_En_Dnt_NomalSegmentDataEnd - _ovl_En_Dnt_NomalSegmentDataStart );
        _ovl_En_Dnt_NomalSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Nomal/z_en_dnt_nomal.o (.rodata)
            build/data/overlays/actors/z_en_dnt_nomal.data.o (.rodata)
            build/data/overlays/actors/z_en_dnt_nomal.reloc.o (.rodata)
        _ovl_En_Dnt_NomalSegmentRoDataEnd = .;
    _ovl_En_Dnt_NomalSegmentRoDataSize = ABSOLUTE( _ovl_En_Dnt_NomalSegmentRoDataEnd - _ovl_En_Dnt_NomalSegmentRoDataStart );
        _ovl_En_Dnt_NomalSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Nomal/z_en_dnt_nomal.o (.sdata)
            build/data/overlays/actors/z_en_dnt_nomal.data.o (.sdata)
            build/data/overlays/actors/z_en_dnt_nomal.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Dnt_NomalSegmentSDataEnd = .;
        _ovl_En_Dnt_NomalSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Nomal/z_en_dnt_nomal.o (.ovl)
            build/data/overlays/actors/z_en_dnt_nomal.data.o (.ovl)
            build/data/overlays/actors/z_en_dnt_nomal.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Dnt_NomalSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Dnt_NomalSegmentOvlEnd - _ovl_En_Dnt_NomalSegmentTextStart );
    _ovl_En_Dnt_NomalSegmentRomEnd = _RomSize;

    ..ovl_En_Dnt_Nomal.bss ADDR(..ovl_En_Dnt_Nomal) + SIZEOF(..ovl_En_Dnt_Nomal) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Dnt_NomalSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Dnt_Nomal/z_en_dnt_nomal.o (.sbss)
            build/data/overlays/actors/z_en_dnt_nomal.data.o (.sbss)
            build/data/overlays/actors/z_en_dnt_nomal.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Dnt_Nomal/z_en_dnt_nomal.o (.scommon)
            build/data/overlays/actors/z_en_dnt_nomal.data.o (.scommon)
            build/data/overlays/actors/z_en_dnt_nomal.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Dnt_Nomal/z_en_dnt_nomal.o (.bss)
            build/data/overlays/actors/z_en_dnt_nomal.data.o (.bss)
            build/data/overlays/actors/z_en_dnt_nomal.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Dnt_Nomal/z_en_dnt_nomal.o (COMMON)
            build/data/overlays/actors/z_en_dnt_nomal.data.o (COMMON)
            build/data/overlays/actors/z_en_dnt_nomal.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Dnt_NomalSegmentBssEnd = .;
        _ovl_En_Dnt_NomalSegmentEnd = .;
    }
    _ovl_En_Dnt_NomalSegmentBssSize = ABSOLUTE( _ovl_En_Dnt_NomalSegmentBssEnd - _ovl_En_Dnt_NomalSegmentBssStart );

    _ovl_En_DodojrSegmentRomStart = _RomSize;
    ..ovl_En_Dodojr : AT(_RomSize)
    {
        _ovl_En_DodojrSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_DodojrSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Dodojr/z_en_dodojr.o (.text)
            build/data/overlays/actors/z_en_dodojr.data.o (.text)
            build/data/overlays/actors/z_en_dodojr.reloc.o (.text)
        _ovl_En_DodojrSegmentTextEnd = .;
    _ovl_En_DodojrSegmentTextSize = ABSOLUTE( _ovl_En_DodojrSegmentTextEnd - _ovl_En_DodojrSegmentTextStart );
        _ovl_En_DodojrSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Dodojr/z_en_dodojr.o (.data)
            build/data/overlays/actors/z_en_dodojr.data.o (.data)
            build/data/overlays/actors/z_en_dodojr.reloc.o (.data)
        _ovl_En_DodojrSegmentDataEnd = .;
    _ovl_En_DodojrSegmentDataSize = ABSOLUTE( _ovl_En_DodojrSegmentDataEnd - _ovl_En_DodojrSegmentDataStart );
        _ovl_En_DodojrSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Dodojr/z_en_dodojr.o (.rodata)
            build/data/overlays/actors/z_en_dodojr.data.o (.rodata)
            build/data/overlays/actors/z_en_dodojr.reloc.o (.rodata)
        _ovl_En_DodojrSegmentRoDataEnd = .;
    _ovl_En_DodojrSegmentRoDataSize = ABSOLUTE( _ovl_En_DodojrSegmentRoDataEnd - _ovl_En_DodojrSegmentRoDataStart );
        _ovl_En_DodojrSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Dodojr/z_en_dodojr.o (.sdata)
            build/data/overlays/actors/z_en_dodojr.data.o (.sdata)
            build/data/overlays/actors/z_en_dodojr.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_DodojrSegmentSDataEnd = .;
        _ovl_En_DodojrSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Dodojr/z_en_dodojr.o (.ovl)
            build/data/overlays/actors/z_en_dodojr.data.o (.ovl)
            build/data/overlays/actors/z_en_dodojr.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_DodojrSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_DodojrSegmentOvlEnd - _ovl_En_DodojrSegmentTextStart );
    _ovl_En_DodojrSegmentRomEnd = _RomSize;

    ..ovl_En_Dodojr.bss ADDR(..ovl_En_Dodojr) + SIZEOF(..ovl_En_Dodojr) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_DodojrSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Dodojr/z_en_dodojr.o (.sbss)
            build/data/overlays/actors/z_en_dodojr.data.o (.sbss)
            build/data/overlays/actors/z_en_dodojr.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Dodojr/z_en_dodojr.o (.scommon)
            build/data/overlays/actors/z_en_dodojr.data.o (.scommon)
            build/data/overlays/actors/z_en_dodojr.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Dodojr/z_en_dodojr.o (.bss)
            build/data/overlays/actors/z_en_dodojr.data.o (.bss)
            build/data/overlays/actors/z_en_dodojr.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Dodojr/z_en_dodojr.o (COMMON)
            build/data/overlays/actors/z_en_dodojr.data.o (COMMON)
            build/data/overlays/actors/z_en_dodojr.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_DodojrSegmentBssEnd = .;
        _ovl_En_DodojrSegmentEnd = .;
    }
    _ovl_En_DodojrSegmentBssSize = ABSOLUTE( _ovl_En_DodojrSegmentBssEnd - _ovl_En_DodojrSegmentBssStart );

    _ovl_En_DodongoSegmentRomStart = _RomSize;
    ..ovl_En_Dodongo : AT(_RomSize)
    {
        _ovl_En_DodongoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_DodongoSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Dodongo/z_en_dodongo.o (.text)
            build/data/overlays/actors/z_en_dodongo.data.o (.text)
            build/data/overlays/actors/z_en_dodongo.reloc.o (.text)
        _ovl_En_DodongoSegmentTextEnd = .;
    _ovl_En_DodongoSegmentTextSize = ABSOLUTE( _ovl_En_DodongoSegmentTextEnd - _ovl_En_DodongoSegmentTextStart );
        _ovl_En_DodongoSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Dodongo/z_en_dodongo.o (.data)
            build/data/overlays/actors/z_en_dodongo.data.o (.data)
            build/data/overlays/actors/z_en_dodongo.reloc.o (.data)
        _ovl_En_DodongoSegmentDataEnd = .;
    _ovl_En_DodongoSegmentDataSize = ABSOLUTE( _ovl_En_DodongoSegmentDataEnd - _ovl_En_DodongoSegmentDataStart );
        _ovl_En_DodongoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Dodongo/z_en_dodongo.o (.rodata)
            build/data/overlays/actors/z_en_dodongo.data.o (.rodata)
            build/data/overlays/actors/z_en_dodongo.reloc.o (.rodata)
        _ovl_En_DodongoSegmentRoDataEnd = .;
    _ovl_En_DodongoSegmentRoDataSize = ABSOLUTE( _ovl_En_DodongoSegmentRoDataEnd - _ovl_En_DodongoSegmentRoDataStart );
        _ovl_En_DodongoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Dodongo/z_en_dodongo.o (.sdata)
            build/data/overlays/actors/z_en_dodongo.data.o (.sdata)
            build/data/overlays/actors/z_en_dodongo.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_DodongoSegmentSDataEnd = .;
        _ovl_En_DodongoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Dodongo/z_en_dodongo.o (.ovl)
            build/data/overlays/actors/z_en_dodongo.data.o (.ovl)
            build/data/overlays/actors/z_en_dodongo.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_DodongoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_DodongoSegmentOvlEnd - _ovl_En_DodongoSegmentTextStart );
    _ovl_En_DodongoSegmentRomEnd = _RomSize;

    ..ovl_En_Dodongo.bss ADDR(..ovl_En_Dodongo) + SIZEOF(..ovl_En_Dodongo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_DodongoSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Dodongo/z_en_dodongo.o (.sbss)
            build/data/overlays/actors/z_en_dodongo.data.o (.sbss)
            build/data/overlays/actors/z_en_dodongo.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Dodongo/z_en_dodongo.o (.scommon)
            build/data/overlays/actors/z_en_dodongo.data.o (.scommon)
            build/data/overlays/actors/z_en_dodongo.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Dodongo/z_en_dodongo.o (.bss)
            build/data/overlays/actors/z_en_dodongo.data.o (.bss)
            build/data/overlays/actors/z_en_dodongo.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Dodongo/z_en_dodongo.o (COMMON)
            build/data/overlays/actors/z_en_dodongo.data.o (COMMON)
            build/data/overlays/actors/z_en_dodongo.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_DodongoSegmentBssEnd = .;
        _ovl_En_DodongoSegmentEnd = .;
    }
    _ovl_En_DodongoSegmentBssSize = ABSOLUTE( _ovl_En_DodongoSegmentBssEnd - _ovl_En_DodongoSegmentBssStart );

    _ovl_En_DogSegmentRomStart = _RomSize;
    ..ovl_En_Dog : AT(_RomSize)
    {
        _ovl_En_DogSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_DogSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Dog/z_en_dog.o (.text)
            build/src/overlays/actors/ovl_En_Dog/ovl_En_Dog_reloc.o (.text)
        _ovl_En_DogSegmentTextEnd = .;
    _ovl_En_DogSegmentTextSize = ABSOLUTE( _ovl_En_DogSegmentTextEnd - _ovl_En_DogSegmentTextStart );
        _ovl_En_DogSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Dog/z_en_dog.o (.data)
            build/src/overlays/actors/ovl_En_Dog/ovl_En_Dog_reloc.o (.data)
        _ovl_En_DogSegmentDataEnd = .;
    _ovl_En_DogSegmentDataSize = ABSOLUTE( _ovl_En_DogSegmentDataEnd - _ovl_En_DogSegmentDataStart );
        _ovl_En_DogSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Dog/z_en_dog.o (.rodata)
            build/src/overlays/actors/ovl_En_Dog/ovl_En_Dog_reloc.o (.rodata)
        _ovl_En_DogSegmentRoDataEnd = .;
    _ovl_En_DogSegmentRoDataSize = ABSOLUTE( _ovl_En_DogSegmentRoDataEnd - _ovl_En_DogSegmentRoDataStart );
        _ovl_En_DogSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Dog/z_en_dog.o (.sdata)
            build/src/overlays/actors/ovl_En_Dog/ovl_En_Dog_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_DogSegmentSDataEnd = .;
        _ovl_En_DogSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Dog/z_en_dog.o (.ovl)
            build/src/overlays/actors/ovl_En_Dog/ovl_En_Dog_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_DogSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_DogSegmentOvlEnd - _ovl_En_DogSegmentTextStart );
    _ovl_En_DogSegmentRomEnd = _RomSize;

    ..ovl_En_Dog.bss ADDR(..ovl_En_Dog) + SIZEOF(..ovl_En_Dog) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_DogSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Dog/z_en_dog.o (.sbss)
            build/src/overlays/actors/ovl_En_Dog/ovl_En_Dog_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Dog/z_en_dog.o (.scommon)
            build/src/overlays/actors/ovl_En_Dog/ovl_En_Dog_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Dog/z_en_dog.o (.bss)
            build/src/overlays/actors/ovl_En_Dog/ovl_En_Dog_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Dog/z_en_dog.o (COMMON)
            build/src/overlays/actors/ovl_En_Dog/ovl_En_Dog_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_DogSegmentBssEnd = .;
        _ovl_En_DogSegmentEnd = .;
    }
    _ovl_En_DogSegmentBssSize = ABSOLUTE( _ovl_En_DogSegmentBssEnd - _ovl_En_DogSegmentBssStart );

    _ovl_En_DoorSegmentRomStart = _RomSize;
    ..ovl_En_Door : AT(_RomSize)
    {
        _ovl_En_DoorSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_DoorSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Door/z_en_door.o (.text)
            build/data/overlays/actors/z_en_door.data.o (.text)
            build/data/overlays/actors/z_en_door.reloc.o (.text)
        _ovl_En_DoorSegmentTextEnd = .;
    _ovl_En_DoorSegmentTextSize = ABSOLUTE( _ovl_En_DoorSegmentTextEnd - _ovl_En_DoorSegmentTextStart );
        _ovl_En_DoorSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Door/z_en_door.o (.data)
            build/data/overlays/actors/z_en_door.data.o (.data)
            build/data/overlays/actors/z_en_door.reloc.o (.data)
        _ovl_En_DoorSegmentDataEnd = .;
    _ovl_En_DoorSegmentDataSize = ABSOLUTE( _ovl_En_DoorSegmentDataEnd - _ovl_En_DoorSegmentDataStart );
        _ovl_En_DoorSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Door/z_en_door.o (.rodata)
            build/data/overlays/actors/z_en_door.data.o (.rodata)
            build/data/overlays/actors/z_en_door.reloc.o (.rodata)
        _ovl_En_DoorSegmentRoDataEnd = .;
    _ovl_En_DoorSegmentRoDataSize = ABSOLUTE( _ovl_En_DoorSegmentRoDataEnd - _ovl_En_DoorSegmentRoDataStart );
        _ovl_En_DoorSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Door/z_en_door.o (.sdata)
            build/data/overlays/actors/z_en_door.data.o (.sdata)
            build/data/overlays/actors/z_en_door.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_DoorSegmentSDataEnd = .;
        _ovl_En_DoorSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Door/z_en_door.o (.ovl)
            build/data/overlays/actors/z_en_door.data.o (.ovl)
            build/data/overlays/actors/z_en_door.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_DoorSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_DoorSegmentOvlEnd - _ovl_En_DoorSegmentTextStart );
    _ovl_En_DoorSegmentRomEnd = _RomSize;

    ..ovl_En_Door.bss ADDR(..ovl_En_Door) + SIZEOF(..ovl_En_Door) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_DoorSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Door/z_en_door.o (.sbss)
            build/data/overlays/actors/z_en_door.data.o (.sbss)
            build/data/overlays/actors/z_en_door.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Door/z_en_door.o (.scommon)
            build/data/overlays/actors/z_en_door.data.o (.scommon)
            build/data/overlays/actors/z_en_door.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Door/z_en_door.o (.bss)
            build/data/overlays/actors/z_en_door.data.o (.bss)
            build/data/overlays/actors/z_en_door.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Door/z_en_door.o (COMMON)
            build/data/overlays/actors/z_en_door.data.o (COMMON)
            build/data/overlays/actors/z_en_door.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_DoorSegmentBssEnd = .;
        _ovl_En_DoorSegmentEnd = .;
    }
    _ovl_En_DoorSegmentBssSize = ABSOLUTE( _ovl_En_DoorSegmentBssEnd - _ovl_En_DoorSegmentBssStart );

    _ovl_En_DsSegmentRomStart = _RomSize;
    ..ovl_En_Ds : AT(_RomSize)
    {
        _ovl_En_DsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_DsSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ds/z_en_ds.o (.text)
            build/src/overlays/actors/ovl_En_Ds/ovl_En_Ds_reloc.o (.text)
        _ovl_En_DsSegmentTextEnd = .;
    _ovl_En_DsSegmentTextSize = ABSOLUTE( _ovl_En_DsSegmentTextEnd - _ovl_En_DsSegmentTextStart );
        _ovl_En_DsSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ds/z_en_ds.o (.data)
            build/src/overlays/actors/ovl_En_Ds/ovl_En_Ds_reloc.o (.data)
        _ovl_En_DsSegmentDataEnd = .;
    _ovl_En_DsSegmentDataSize = ABSOLUTE( _ovl_En_DsSegmentDataEnd - _ovl_En_DsSegmentDataStart );
        _ovl_En_DsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ds/z_en_ds.o (.rodata)
            build/src/overlays/actors/ovl_En_Ds/ovl_En_Ds_reloc.o (.rodata)
        _ovl_En_DsSegmentRoDataEnd = .;
    _ovl_En_DsSegmentRoDataSize = ABSOLUTE( _ovl_En_DsSegmentRoDataEnd - _ovl_En_DsSegmentRoDataStart );
        _ovl_En_DsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ds/z_en_ds.o (.sdata)
            build/src/overlays/actors/ovl_En_Ds/ovl_En_Ds_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_DsSegmentSDataEnd = .;
        _ovl_En_DsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ds/z_en_ds.o (.ovl)
            build/src/overlays/actors/ovl_En_Ds/ovl_En_Ds_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_DsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_DsSegmentOvlEnd - _ovl_En_DsSegmentTextStart );
    _ovl_En_DsSegmentRomEnd = _RomSize;

    ..ovl_En_Ds.bss ADDR(..ovl_En_Ds) + SIZEOF(..ovl_En_Ds) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_DsSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ds/z_en_ds.o (.sbss)
            build/src/overlays/actors/ovl_En_Ds/ovl_En_Ds_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ds/z_en_ds.o (.scommon)
            build/src/overlays/actors/ovl_En_Ds/ovl_En_Ds_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ds/z_en_ds.o (.bss)
            build/src/overlays/actors/ovl_En_Ds/ovl_En_Ds_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ds/z_en_ds.o (COMMON)
            build/src/overlays/actors/ovl_En_Ds/ovl_En_Ds_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_DsSegmentBssEnd = .;
        _ovl_En_DsSegmentEnd = .;
    }
    _ovl_En_DsSegmentBssSize = ABSOLUTE( _ovl_En_DsSegmentBssEnd - _ovl_En_DsSegmentBssStart );

    _ovl_En_DuSegmentRomStart = _RomSize;
    ..ovl_En_Du : AT(_RomSize)
    {
        _ovl_En_DuSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_DuSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Du/z_en_du.o (.text)
            build/data/overlays/actors/z_en_du.data.o (.text)
            build/data/overlays/actors/z_en_du.reloc.o (.text)
        _ovl_En_DuSegmentTextEnd = .;
    _ovl_En_DuSegmentTextSize = ABSOLUTE( _ovl_En_DuSegmentTextEnd - _ovl_En_DuSegmentTextStart );
        _ovl_En_DuSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Du/z_en_du.o (.data)
            build/data/overlays/actors/z_en_du.data.o (.data)
            build/data/overlays/actors/z_en_du.reloc.o (.data)
        _ovl_En_DuSegmentDataEnd = .;
    _ovl_En_DuSegmentDataSize = ABSOLUTE( _ovl_En_DuSegmentDataEnd - _ovl_En_DuSegmentDataStart );
        _ovl_En_DuSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Du/z_en_du.o (.rodata)
            build/data/overlays/actors/z_en_du.data.o (.rodata)
            build/data/overlays/actors/z_en_du.reloc.o (.rodata)
        _ovl_En_DuSegmentRoDataEnd = .;
    _ovl_En_DuSegmentRoDataSize = ABSOLUTE( _ovl_En_DuSegmentRoDataEnd - _ovl_En_DuSegmentRoDataStart );
        _ovl_En_DuSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Du/z_en_du.o (.sdata)
            build/data/overlays/actors/z_en_du.data.o (.sdata)
            build/data/overlays/actors/z_en_du.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_DuSegmentSDataEnd = .;
        _ovl_En_DuSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Du/z_en_du.o (.ovl)
            build/data/overlays/actors/z_en_du.data.o (.ovl)
            build/data/overlays/actors/z_en_du.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_DuSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_DuSegmentOvlEnd - _ovl_En_DuSegmentTextStart );
    _ovl_En_DuSegmentRomEnd = _RomSize;

    ..ovl_En_Du.bss ADDR(..ovl_En_Du) + SIZEOF(..ovl_En_Du) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_DuSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Du/z_en_du.o (.sbss)
            build/data/overlays/actors/z_en_du.data.o (.sbss)
            build/data/overlays/actors/z_en_du.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Du/z_en_du.o (.scommon)
            build/data/overlays/actors/z_en_du.data.o (.scommon)
            build/data/overlays/actors/z_en_du.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Du/z_en_du.o (.bss)
            build/data/overlays/actors/z_en_du.data.o (.bss)
            build/data/overlays/actors/z_en_du.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Du/z_en_du.o (COMMON)
            build/data/overlays/actors/z_en_du.data.o (COMMON)
            build/data/overlays/actors/z_en_du.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_DuSegmentBssEnd = .;
        _ovl_En_DuSegmentEnd = .;
    }
    _ovl_En_DuSegmentBssSize = ABSOLUTE( _ovl_En_DuSegmentBssEnd - _ovl_En_DuSegmentBssStart );

    _ovl_En_Dy_ExtraSegmentRomStart = _RomSize;
    ..ovl_En_Dy_Extra : AT(_RomSize)
    {
        _ovl_En_Dy_ExtraSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Dy_ExtraSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Dy_Extra/z_en_dy_extra.o (.text)
            build/src/overlays/actors/ovl_En_Dy_Extra/ovl_En_Dy_Extra_reloc.o (.text)
        _ovl_En_Dy_ExtraSegmentTextEnd = .;
    _ovl_En_Dy_ExtraSegmentTextSize = ABSOLUTE( _ovl_En_Dy_ExtraSegmentTextEnd - _ovl_En_Dy_ExtraSegmentTextStart );
        _ovl_En_Dy_ExtraSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Dy_Extra/z_en_dy_extra.o (.data)
            build/src/overlays/actors/ovl_En_Dy_Extra/ovl_En_Dy_Extra_reloc.o (.data)
        _ovl_En_Dy_ExtraSegmentDataEnd = .;
    _ovl_En_Dy_ExtraSegmentDataSize = ABSOLUTE( _ovl_En_Dy_ExtraSegmentDataEnd - _ovl_En_Dy_ExtraSegmentDataStart );
        _ovl_En_Dy_ExtraSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Dy_Extra/z_en_dy_extra.o (.rodata)
            build/src/overlays/actors/ovl_En_Dy_Extra/ovl_En_Dy_Extra_reloc.o (.rodata)
        _ovl_En_Dy_ExtraSegmentRoDataEnd = .;
    _ovl_En_Dy_ExtraSegmentRoDataSize = ABSOLUTE( _ovl_En_Dy_ExtraSegmentRoDataEnd - _ovl_En_Dy_ExtraSegmentRoDataStart );
        _ovl_En_Dy_ExtraSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Dy_Extra/z_en_dy_extra.o (.sdata)
            build/src/overlays/actors/ovl_En_Dy_Extra/ovl_En_Dy_Extra_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Dy_ExtraSegmentSDataEnd = .;
        _ovl_En_Dy_ExtraSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Dy_Extra/z_en_dy_extra.o (.ovl)
            build/src/overlays/actors/ovl_En_Dy_Extra/ovl_En_Dy_Extra_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Dy_ExtraSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Dy_ExtraSegmentOvlEnd - _ovl_En_Dy_ExtraSegmentTextStart );
    _ovl_En_Dy_ExtraSegmentRomEnd = _RomSize;

    ..ovl_En_Dy_Extra.bss ADDR(..ovl_En_Dy_Extra) + SIZEOF(..ovl_En_Dy_Extra) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Dy_ExtraSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Dy_Extra/z_en_dy_extra.o (.sbss)
            build/src/overlays/actors/ovl_En_Dy_Extra/ovl_En_Dy_Extra_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Dy_Extra/z_en_dy_extra.o (.scommon)
            build/src/overlays/actors/ovl_En_Dy_Extra/ovl_En_Dy_Extra_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Dy_Extra/z_en_dy_extra.o (.bss)
            build/src/overlays/actors/ovl_En_Dy_Extra/ovl_En_Dy_Extra_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Dy_Extra/z_en_dy_extra.o (COMMON)
            build/src/overlays/actors/ovl_En_Dy_Extra/ovl_En_Dy_Extra_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Dy_ExtraSegmentBssEnd = .;
        _ovl_En_Dy_ExtraSegmentEnd = .;
    }
    _ovl_En_Dy_ExtraSegmentBssSize = ABSOLUTE( _ovl_En_Dy_ExtraSegmentBssEnd - _ovl_En_Dy_ExtraSegmentBssStart );

    _ovl_En_EgSegmentRomStart = _RomSize;
    ..ovl_En_Eg : AT(_RomSize)
    {
        _ovl_En_EgSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_EgSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Eg/z_en_eg.o (.text)
            build/src/overlays/actors/ovl_En_Eg/ovl_En_Eg_reloc.o (.text)
        _ovl_En_EgSegmentTextEnd = .;
    _ovl_En_EgSegmentTextSize = ABSOLUTE( _ovl_En_EgSegmentTextEnd - _ovl_En_EgSegmentTextStart );
        _ovl_En_EgSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Eg/z_en_eg.o (.data)
            build/src/overlays/actors/ovl_En_Eg/ovl_En_Eg_reloc.o (.data)
        _ovl_En_EgSegmentDataEnd = .;
    _ovl_En_EgSegmentDataSize = ABSOLUTE( _ovl_En_EgSegmentDataEnd - _ovl_En_EgSegmentDataStart );
        _ovl_En_EgSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Eg/z_en_eg.o (.rodata)
            build/src/overlays/actors/ovl_En_Eg/ovl_En_Eg_reloc.o (.rodata)
        _ovl_En_EgSegmentRoDataEnd = .;
    _ovl_En_EgSegmentRoDataSize = ABSOLUTE( _ovl_En_EgSegmentRoDataEnd - _ovl_En_EgSegmentRoDataStart );
        _ovl_En_EgSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Eg/z_en_eg.o (.sdata)
            build/src/overlays/actors/ovl_En_Eg/ovl_En_Eg_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_EgSegmentSDataEnd = .;
        _ovl_En_EgSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Eg/z_en_eg.o (.ovl)
            build/src/overlays/actors/ovl_En_Eg/ovl_En_Eg_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_EgSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_EgSegmentOvlEnd - _ovl_En_EgSegmentTextStart );
    _ovl_En_EgSegmentRomEnd = _RomSize;

    ..ovl_En_Eg.bss ADDR(..ovl_En_Eg) + SIZEOF(..ovl_En_Eg) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_EgSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Eg/z_en_eg.o (.sbss)
            build/src/overlays/actors/ovl_En_Eg/ovl_En_Eg_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Eg/z_en_eg.o (.scommon)
            build/src/overlays/actors/ovl_En_Eg/ovl_En_Eg_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Eg/z_en_eg.o (.bss)
            build/src/overlays/actors/ovl_En_Eg/ovl_En_Eg_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Eg/z_en_eg.o (COMMON)
            build/src/overlays/actors/ovl_En_Eg/ovl_En_Eg_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_EgSegmentBssEnd = .;
        _ovl_En_EgSegmentEnd = .;
    }
    _ovl_En_EgSegmentBssSize = ABSOLUTE( _ovl_En_EgSegmentBssEnd - _ovl_En_EgSegmentBssStart );

    _ovl_En_EiyerSegmentRomStart = _RomSize;
    ..ovl_En_Eiyer : AT(_RomSize)
    {
        _ovl_En_EiyerSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_EiyerSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Eiyer/z_en_eiyer.o (.text)
            build/data/overlays/actors/z_en_eiyer.data.o (.text)
            build/data/overlays/actors/z_en_eiyer.reloc.o (.text)
        _ovl_En_EiyerSegmentTextEnd = .;
    _ovl_En_EiyerSegmentTextSize = ABSOLUTE( _ovl_En_EiyerSegmentTextEnd - _ovl_En_EiyerSegmentTextStart );
        _ovl_En_EiyerSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Eiyer/z_en_eiyer.o (.data)
            build/data/overlays/actors/z_en_eiyer.data.o (.data)
            build/data/overlays/actors/z_en_eiyer.reloc.o (.data)
        _ovl_En_EiyerSegmentDataEnd = .;
    _ovl_En_EiyerSegmentDataSize = ABSOLUTE( _ovl_En_EiyerSegmentDataEnd - _ovl_En_EiyerSegmentDataStart );
        _ovl_En_EiyerSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Eiyer/z_en_eiyer.o (.rodata)
            build/data/overlays/actors/z_en_eiyer.data.o (.rodata)
            build/data/overlays/actors/z_en_eiyer.reloc.o (.rodata)
        _ovl_En_EiyerSegmentRoDataEnd = .;
    _ovl_En_EiyerSegmentRoDataSize = ABSOLUTE( _ovl_En_EiyerSegmentRoDataEnd - _ovl_En_EiyerSegmentRoDataStart );
        _ovl_En_EiyerSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Eiyer/z_en_eiyer.o (.sdata)
            build/data/overlays/actors/z_en_eiyer.data.o (.sdata)
            build/data/overlays/actors/z_en_eiyer.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_EiyerSegmentSDataEnd = .;
        _ovl_En_EiyerSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Eiyer/z_en_eiyer.o (.ovl)
            build/data/overlays/actors/z_en_eiyer.data.o (.ovl)
            build/data/overlays/actors/z_en_eiyer.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_EiyerSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_EiyerSegmentOvlEnd - _ovl_En_EiyerSegmentTextStart );
    _ovl_En_EiyerSegmentRomEnd = _RomSize;

    ..ovl_En_Eiyer.bss ADDR(..ovl_En_Eiyer) + SIZEOF(..ovl_En_Eiyer) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_EiyerSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Eiyer/z_en_eiyer.o (.sbss)
            build/data/overlays/actors/z_en_eiyer.data.o (.sbss)
            build/data/overlays/actors/z_en_eiyer.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Eiyer/z_en_eiyer.o (.scommon)
            build/data/overlays/actors/z_en_eiyer.data.o (.scommon)
            build/data/overlays/actors/z_en_eiyer.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Eiyer/z_en_eiyer.o (.bss)
            build/data/overlays/actors/z_en_eiyer.data.o (.bss)
            build/data/overlays/actors/z_en_eiyer.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Eiyer/z_en_eiyer.o (COMMON)
            build/data/overlays/actors/z_en_eiyer.data.o (COMMON)
            build/data/overlays/actors/z_en_eiyer.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_EiyerSegmentBssEnd = .;
        _ovl_En_EiyerSegmentEnd = .;
    }
    _ovl_En_EiyerSegmentBssSize = ABSOLUTE( _ovl_En_EiyerSegmentBssEnd - _ovl_En_EiyerSegmentBssStart );

    _ovl_En_ElfSegmentRomStart = _RomSize;
    ..ovl_En_Elf : AT(_RomSize)
    {
        _ovl_En_ElfSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_ElfSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Elf/z_en_elf.o (.text)
            build/data/overlays/actors/z_en_elf.data.o (.text)
            build/data/overlays/actors/z_en_elf.reloc.o (.text)
        _ovl_En_ElfSegmentTextEnd = .;
    _ovl_En_ElfSegmentTextSize = ABSOLUTE( _ovl_En_ElfSegmentTextEnd - _ovl_En_ElfSegmentTextStart );
        _ovl_En_ElfSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Elf/z_en_elf.o (.data)
            build/data/overlays/actors/z_en_elf.data.o (.data)
            build/data/overlays/actors/z_en_elf.reloc.o (.data)
        _ovl_En_ElfSegmentDataEnd = .;
    _ovl_En_ElfSegmentDataSize = ABSOLUTE( _ovl_En_ElfSegmentDataEnd - _ovl_En_ElfSegmentDataStart );
        _ovl_En_ElfSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Elf/z_en_elf.o (.rodata)
            build/data/overlays/actors/z_en_elf.data.o (.rodata)
            build/data/overlays/actors/z_en_elf.reloc.o (.rodata)
        _ovl_En_ElfSegmentRoDataEnd = .;
    _ovl_En_ElfSegmentRoDataSize = ABSOLUTE( _ovl_En_ElfSegmentRoDataEnd - _ovl_En_ElfSegmentRoDataStart );
        _ovl_En_ElfSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Elf/z_en_elf.o (.sdata)
            build/data/overlays/actors/z_en_elf.data.o (.sdata)
            build/data/overlays/actors/z_en_elf.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_ElfSegmentSDataEnd = .;
        _ovl_En_ElfSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Elf/z_en_elf.o (.ovl)
            build/data/overlays/actors/z_en_elf.data.o (.ovl)
            build/data/overlays/actors/z_en_elf.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_ElfSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_ElfSegmentOvlEnd - _ovl_En_ElfSegmentTextStart );
    _ovl_En_ElfSegmentRomEnd = _RomSize;

    ..ovl_En_Elf.bss ADDR(..ovl_En_Elf) + SIZEOF(..ovl_En_Elf) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_ElfSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Elf/z_en_elf.o (.sbss)
            build/data/overlays/actors/z_en_elf.data.o (.sbss)
            build/data/overlays/actors/z_en_elf.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Elf/z_en_elf.o (.scommon)
            build/data/overlays/actors/z_en_elf.data.o (.scommon)
            build/data/overlays/actors/z_en_elf.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Elf/z_en_elf.o (.bss)
            build/data/overlays/actors/z_en_elf.data.o (.bss)
            build/data/overlays/actors/z_en_elf.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Elf/z_en_elf.o (COMMON)
            build/data/overlays/actors/z_en_elf.data.o (COMMON)
            build/data/overlays/actors/z_en_elf.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_ElfSegmentBssEnd = .;
        _ovl_En_ElfSegmentEnd = .;
    }
    _ovl_En_ElfSegmentBssSize = ABSOLUTE( _ovl_En_ElfSegmentBssEnd - _ovl_En_ElfSegmentBssStart );

    _ovl_En_Encount1SegmentRomStart = _RomSize;
    ..ovl_En_Encount1 : AT(_RomSize)
    {
        _ovl_En_Encount1SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Encount1SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Encount1/z_en_encount1.o (.text)
            build/data/overlays/actors/z_en_encount1.data.o (.text)
            build/data/overlays/actors/z_en_encount1.reloc.o (.text)
        _ovl_En_Encount1SegmentTextEnd = .;
    _ovl_En_Encount1SegmentTextSize = ABSOLUTE( _ovl_En_Encount1SegmentTextEnd - _ovl_En_Encount1SegmentTextStart );
        _ovl_En_Encount1SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Encount1/z_en_encount1.o (.data)
            build/data/overlays/actors/z_en_encount1.data.o (.data)
            build/data/overlays/actors/z_en_encount1.reloc.o (.data)
        _ovl_En_Encount1SegmentDataEnd = .;
    _ovl_En_Encount1SegmentDataSize = ABSOLUTE( _ovl_En_Encount1SegmentDataEnd - _ovl_En_Encount1SegmentDataStart );
        _ovl_En_Encount1SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Encount1/z_en_encount1.o (.rodata)
            build/data/overlays/actors/z_en_encount1.data.o (.rodata)
            build/data/overlays/actors/z_en_encount1.reloc.o (.rodata)
        _ovl_En_Encount1SegmentRoDataEnd = .;
    _ovl_En_Encount1SegmentRoDataSize = ABSOLUTE( _ovl_En_Encount1SegmentRoDataEnd - _ovl_En_Encount1SegmentRoDataStart );
        _ovl_En_Encount1SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Encount1/z_en_encount1.o (.sdata)
            build/data/overlays/actors/z_en_encount1.data.o (.sdata)
            build/data/overlays/actors/z_en_encount1.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Encount1SegmentSDataEnd = .;
        _ovl_En_Encount1SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Encount1/z_en_encount1.o (.ovl)
            build/data/overlays/actors/z_en_encount1.data.o (.ovl)
            build/data/overlays/actors/z_en_encount1.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Encount1SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Encount1SegmentOvlEnd - _ovl_En_Encount1SegmentTextStart );
    _ovl_En_Encount1SegmentRomEnd = _RomSize;

    ..ovl_En_Encount1.bss ADDR(..ovl_En_Encount1) + SIZEOF(..ovl_En_Encount1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Encount1SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Encount1/z_en_encount1.o (.sbss)
            build/data/overlays/actors/z_en_encount1.data.o (.sbss)
            build/data/overlays/actors/z_en_encount1.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Encount1/z_en_encount1.o (.scommon)
            build/data/overlays/actors/z_en_encount1.data.o (.scommon)
            build/data/overlays/actors/z_en_encount1.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Encount1/z_en_encount1.o (.bss)
            build/data/overlays/actors/z_en_encount1.data.o (.bss)
            build/data/overlays/actors/z_en_encount1.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Encount1/z_en_encount1.o (COMMON)
            build/data/overlays/actors/z_en_encount1.data.o (COMMON)
            build/data/overlays/actors/z_en_encount1.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Encount1SegmentBssEnd = .;
        _ovl_En_Encount1SegmentEnd = .;
    }
    _ovl_En_Encount1SegmentBssSize = ABSOLUTE( _ovl_En_Encount1SegmentBssEnd - _ovl_En_Encount1SegmentBssStart );

    _ovl_En_Encount2SegmentRomStart = _RomSize;
    ..ovl_En_Encount2 : AT(_RomSize)
    {
        _ovl_En_Encount2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Encount2SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Encount2/z_en_encount2.o (.text)
            build/data/overlays/actors/z_en_encount2.data.o (.text)
            build/data/overlays/actors/z_en_encount2.reloc.o (.text)
        _ovl_En_Encount2SegmentTextEnd = .;
    _ovl_En_Encount2SegmentTextSize = ABSOLUTE( _ovl_En_Encount2SegmentTextEnd - _ovl_En_Encount2SegmentTextStart );
        _ovl_En_Encount2SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Encount2/z_en_encount2.o (.data)
            build/data/overlays/actors/z_en_encount2.data.o (.data)
            build/data/overlays/actors/z_en_encount2.reloc.o (.data)
        _ovl_En_Encount2SegmentDataEnd = .;
    _ovl_En_Encount2SegmentDataSize = ABSOLUTE( _ovl_En_Encount2SegmentDataEnd - _ovl_En_Encount2SegmentDataStart );
        _ovl_En_Encount2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Encount2/z_en_encount2.o (.rodata)
            build/data/overlays/actors/z_en_encount2.data.o (.rodata)
            build/data/overlays/actors/z_en_encount2.reloc.o (.rodata)
        _ovl_En_Encount2SegmentRoDataEnd = .;
    _ovl_En_Encount2SegmentRoDataSize = ABSOLUTE( _ovl_En_Encount2SegmentRoDataEnd - _ovl_En_Encount2SegmentRoDataStart );
        _ovl_En_Encount2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Encount2/z_en_encount2.o (.sdata)
            build/data/overlays/actors/z_en_encount2.data.o (.sdata)
            build/data/overlays/actors/z_en_encount2.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Encount2SegmentSDataEnd = .;
        _ovl_En_Encount2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Encount2/z_en_encount2.o (.ovl)
            build/data/overlays/actors/z_en_encount2.data.o (.ovl)
            build/data/overlays/actors/z_en_encount2.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Encount2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Encount2SegmentOvlEnd - _ovl_En_Encount2SegmentTextStart );
    _ovl_En_Encount2SegmentRomEnd = _RomSize;

    ..ovl_En_Encount2.bss ADDR(..ovl_En_Encount2) + SIZEOF(..ovl_En_Encount2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Encount2SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Encount2/z_en_encount2.o (.sbss)
            build/data/overlays/actors/z_en_encount2.data.o (.sbss)
            build/data/overlays/actors/z_en_encount2.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Encount2/z_en_encount2.o (.scommon)
            build/data/overlays/actors/z_en_encount2.data.o (.scommon)
            build/data/overlays/actors/z_en_encount2.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Encount2/z_en_encount2.o (.bss)
            build/data/overlays/actors/z_en_encount2.data.o (.bss)
            build/data/overlays/actors/z_en_encount2.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Encount2/z_en_encount2.o (COMMON)
            build/data/overlays/actors/z_en_encount2.data.o (COMMON)
            build/data/overlays/actors/z_en_encount2.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Encount2SegmentBssEnd = .;
        _ovl_En_Encount2SegmentEnd = .;
    }
    _ovl_En_Encount2SegmentBssSize = ABSOLUTE( _ovl_En_Encount2SegmentBssEnd - _ovl_En_Encount2SegmentBssStart );

    _ovl_En_Ex_ItemSegmentRomStart = _RomSize;
    ..ovl_En_Ex_Item : AT(_RomSize)
    {
        _ovl_En_Ex_ItemSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Ex_ItemSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ex_Item/z_en_ex_item.o (.text)
            build/data/overlays/actors/z_en_ex_item.data.o (.text)
            build/data/overlays/actors/z_en_ex_item.reloc.o (.text)
        _ovl_En_Ex_ItemSegmentTextEnd = .;
    _ovl_En_Ex_ItemSegmentTextSize = ABSOLUTE( _ovl_En_Ex_ItemSegmentTextEnd - _ovl_En_Ex_ItemSegmentTextStart );
        _ovl_En_Ex_ItemSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ex_Item/z_en_ex_item.o (.data)
            build/data/overlays/actors/z_en_ex_item.data.o (.data)
            build/data/overlays/actors/z_en_ex_item.reloc.o (.data)
        _ovl_En_Ex_ItemSegmentDataEnd = .;
    _ovl_En_Ex_ItemSegmentDataSize = ABSOLUTE( _ovl_En_Ex_ItemSegmentDataEnd - _ovl_En_Ex_ItemSegmentDataStart );
        _ovl_En_Ex_ItemSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ex_Item/z_en_ex_item.o (.rodata)
            build/data/overlays/actors/z_en_ex_item.data.o (.rodata)
            build/data/overlays/actors/z_en_ex_item.reloc.o (.rodata)
        _ovl_En_Ex_ItemSegmentRoDataEnd = .;
    _ovl_En_Ex_ItemSegmentRoDataSize = ABSOLUTE( _ovl_En_Ex_ItemSegmentRoDataEnd - _ovl_En_Ex_ItemSegmentRoDataStart );
        _ovl_En_Ex_ItemSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ex_Item/z_en_ex_item.o (.sdata)
            build/data/overlays/actors/z_en_ex_item.data.o (.sdata)
            build/data/overlays/actors/z_en_ex_item.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Ex_ItemSegmentSDataEnd = .;
        _ovl_En_Ex_ItemSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ex_Item/z_en_ex_item.o (.ovl)
            build/data/overlays/actors/z_en_ex_item.data.o (.ovl)
            build/data/overlays/actors/z_en_ex_item.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Ex_ItemSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Ex_ItemSegmentOvlEnd - _ovl_En_Ex_ItemSegmentTextStart );
    _ovl_En_Ex_ItemSegmentRomEnd = _RomSize;

    ..ovl_En_Ex_Item.bss ADDR(..ovl_En_Ex_Item) + SIZEOF(..ovl_En_Ex_Item) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Ex_ItemSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ex_Item/z_en_ex_item.o (.sbss)
            build/data/overlays/actors/z_en_ex_item.data.o (.sbss)
            build/data/overlays/actors/z_en_ex_item.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ex_Item/z_en_ex_item.o (.scommon)
            build/data/overlays/actors/z_en_ex_item.data.o (.scommon)
            build/data/overlays/actors/z_en_ex_item.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ex_Item/z_en_ex_item.o (.bss)
            build/data/overlays/actors/z_en_ex_item.data.o (.bss)
            build/data/overlays/actors/z_en_ex_item.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ex_Item/z_en_ex_item.o (COMMON)
            build/data/overlays/actors/z_en_ex_item.data.o (COMMON)
            build/data/overlays/actors/z_en_ex_item.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Ex_ItemSegmentBssEnd = .;
        _ovl_En_Ex_ItemSegmentEnd = .;
    }
    _ovl_En_Ex_ItemSegmentBssSize = ABSOLUTE( _ovl_En_Ex_ItemSegmentBssEnd - _ovl_En_Ex_ItemSegmentBssStart );

    _ovl_En_Ex_RuppySegmentRomStart = _RomSize;
    ..ovl_En_Ex_Ruppy : AT(_RomSize)
    {
        _ovl_En_Ex_RuppySegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Ex_RuppySegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ex_Ruppy/z_en_ex_ruppy.o (.text)
            build/src/overlays/actors/ovl_En_Ex_Ruppy/ovl_En_Ex_Ruppy_reloc.o (.text)
        _ovl_En_Ex_RuppySegmentTextEnd = .;
    _ovl_En_Ex_RuppySegmentTextSize = ABSOLUTE( _ovl_En_Ex_RuppySegmentTextEnd - _ovl_En_Ex_RuppySegmentTextStart );
        _ovl_En_Ex_RuppySegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ex_Ruppy/z_en_ex_ruppy.o (.data)
            build/src/overlays/actors/ovl_En_Ex_Ruppy/ovl_En_Ex_Ruppy_reloc.o (.data)
        _ovl_En_Ex_RuppySegmentDataEnd = .;
    _ovl_En_Ex_RuppySegmentDataSize = ABSOLUTE( _ovl_En_Ex_RuppySegmentDataEnd - _ovl_En_Ex_RuppySegmentDataStart );
        _ovl_En_Ex_RuppySegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ex_Ruppy/z_en_ex_ruppy.o (.rodata)
            build/src/overlays/actors/ovl_En_Ex_Ruppy/ovl_En_Ex_Ruppy_reloc.o (.rodata)
        _ovl_En_Ex_RuppySegmentRoDataEnd = .;
    _ovl_En_Ex_RuppySegmentRoDataSize = ABSOLUTE( _ovl_En_Ex_RuppySegmentRoDataEnd - _ovl_En_Ex_RuppySegmentRoDataStart );
        _ovl_En_Ex_RuppySegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ex_Ruppy/z_en_ex_ruppy.o (.sdata)
            build/src/overlays/actors/ovl_En_Ex_Ruppy/ovl_En_Ex_Ruppy_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Ex_RuppySegmentSDataEnd = .;
        _ovl_En_Ex_RuppySegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ex_Ruppy/z_en_ex_ruppy.o (.ovl)
            build/src/overlays/actors/ovl_En_Ex_Ruppy/ovl_En_Ex_Ruppy_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Ex_RuppySegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Ex_RuppySegmentOvlEnd - _ovl_En_Ex_RuppySegmentTextStart );
    _ovl_En_Ex_RuppySegmentRomEnd = _RomSize;

    ..ovl_En_Ex_Ruppy.bss ADDR(..ovl_En_Ex_Ruppy) + SIZEOF(..ovl_En_Ex_Ruppy) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Ex_RuppySegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ex_Ruppy/z_en_ex_ruppy.o (.sbss)
            build/src/overlays/actors/ovl_En_Ex_Ruppy/ovl_En_Ex_Ruppy_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ex_Ruppy/z_en_ex_ruppy.o (.scommon)
            build/src/overlays/actors/ovl_En_Ex_Ruppy/ovl_En_Ex_Ruppy_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ex_Ruppy/z_en_ex_ruppy.o (.bss)
            build/src/overlays/actors/ovl_En_Ex_Ruppy/ovl_En_Ex_Ruppy_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ex_Ruppy/z_en_ex_ruppy.o (COMMON)
            build/src/overlays/actors/ovl_En_Ex_Ruppy/ovl_En_Ex_Ruppy_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Ex_RuppySegmentBssEnd = .;
        _ovl_En_Ex_RuppySegmentEnd = .;
    }
    _ovl_En_Ex_RuppySegmentBssSize = ABSOLUTE( _ovl_En_Ex_RuppySegmentBssEnd - _ovl_En_Ex_RuppySegmentBssStart );

    _ovl_En_FdSegmentRomStart = _RomSize;
    ..ovl_En_Fd : AT(_RomSize)
    {
        _ovl_En_FdSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_FdSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Fd/z_en_fd.o (.text)
            build/data/overlays/actors/z_en_fd.data.o (.text)
            build/data/overlays/actors/z_en_fd.reloc.o (.text)
        _ovl_En_FdSegmentTextEnd = .;
    _ovl_En_FdSegmentTextSize = ABSOLUTE( _ovl_En_FdSegmentTextEnd - _ovl_En_FdSegmentTextStart );
        _ovl_En_FdSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Fd/z_en_fd.o (.data)
            build/data/overlays/actors/z_en_fd.data.o (.data)
            build/data/overlays/actors/z_en_fd.reloc.o (.data)
        _ovl_En_FdSegmentDataEnd = .;
    _ovl_En_FdSegmentDataSize = ABSOLUTE( _ovl_En_FdSegmentDataEnd - _ovl_En_FdSegmentDataStart );
        _ovl_En_FdSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Fd/z_en_fd.o (.rodata)
            build/data/overlays/actors/z_en_fd.data.o (.rodata)
            build/data/overlays/actors/z_en_fd.reloc.o (.rodata)
        _ovl_En_FdSegmentRoDataEnd = .;
    _ovl_En_FdSegmentRoDataSize = ABSOLUTE( _ovl_En_FdSegmentRoDataEnd - _ovl_En_FdSegmentRoDataStart );
        _ovl_En_FdSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Fd/z_en_fd.o (.sdata)
            build/data/overlays/actors/z_en_fd.data.o (.sdata)
            build/data/overlays/actors/z_en_fd.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_FdSegmentSDataEnd = .;
        _ovl_En_FdSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Fd/z_en_fd.o (.ovl)
            build/data/overlays/actors/z_en_fd.data.o (.ovl)
            build/data/overlays/actors/z_en_fd.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_FdSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_FdSegmentOvlEnd - _ovl_En_FdSegmentTextStart );
    _ovl_En_FdSegmentRomEnd = _RomSize;

    ..ovl_En_Fd.bss ADDR(..ovl_En_Fd) + SIZEOF(..ovl_En_Fd) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_FdSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Fd/z_en_fd.o (.sbss)
            build/data/overlays/actors/z_en_fd.data.o (.sbss)
            build/data/overlays/actors/z_en_fd.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Fd/z_en_fd.o (.scommon)
            build/data/overlays/actors/z_en_fd.data.o (.scommon)
            build/data/overlays/actors/z_en_fd.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Fd/z_en_fd.o (.bss)
            build/data/overlays/actors/z_en_fd.data.o (.bss)
            build/data/overlays/actors/z_en_fd.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Fd/z_en_fd.o (COMMON)
            build/data/overlays/actors/z_en_fd.data.o (COMMON)
            build/data/overlays/actors/z_en_fd.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_FdSegmentBssEnd = .;
        _ovl_En_FdSegmentEnd = .;
    }
    _ovl_En_FdSegmentBssSize = ABSOLUTE( _ovl_En_FdSegmentBssEnd - _ovl_En_FdSegmentBssStart );

    _ovl_En_Fd_FireSegmentRomStart = _RomSize;
    ..ovl_En_Fd_Fire : AT(_RomSize)
    {
        _ovl_En_Fd_FireSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Fd_FireSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Fd_Fire/z_en_fd_fire.o (.text)
            build/data/overlays/actors/z_en_fd_fire.data.o (.text)
            build/data/overlays/actors/z_en_fd_fire.reloc.o (.text)
        _ovl_En_Fd_FireSegmentTextEnd = .;
    _ovl_En_Fd_FireSegmentTextSize = ABSOLUTE( _ovl_En_Fd_FireSegmentTextEnd - _ovl_En_Fd_FireSegmentTextStart );
        _ovl_En_Fd_FireSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Fd_Fire/z_en_fd_fire.o (.data)
            build/data/overlays/actors/z_en_fd_fire.data.o (.data)
            build/data/overlays/actors/z_en_fd_fire.reloc.o (.data)
        _ovl_En_Fd_FireSegmentDataEnd = .;
    _ovl_En_Fd_FireSegmentDataSize = ABSOLUTE( _ovl_En_Fd_FireSegmentDataEnd - _ovl_En_Fd_FireSegmentDataStart );
        _ovl_En_Fd_FireSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Fd_Fire/z_en_fd_fire.o (.rodata)
            build/data/overlays/actors/z_en_fd_fire.data.o (.rodata)
            build/data/overlays/actors/z_en_fd_fire.reloc.o (.rodata)
        _ovl_En_Fd_FireSegmentRoDataEnd = .;
    _ovl_En_Fd_FireSegmentRoDataSize = ABSOLUTE( _ovl_En_Fd_FireSegmentRoDataEnd - _ovl_En_Fd_FireSegmentRoDataStart );
        _ovl_En_Fd_FireSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Fd_Fire/z_en_fd_fire.o (.sdata)
            build/data/overlays/actors/z_en_fd_fire.data.o (.sdata)
            build/data/overlays/actors/z_en_fd_fire.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Fd_FireSegmentSDataEnd = .;
        _ovl_En_Fd_FireSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Fd_Fire/z_en_fd_fire.o (.ovl)
            build/data/overlays/actors/z_en_fd_fire.data.o (.ovl)
            build/data/overlays/actors/z_en_fd_fire.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Fd_FireSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Fd_FireSegmentOvlEnd - _ovl_En_Fd_FireSegmentTextStart );
    _ovl_En_Fd_FireSegmentRomEnd = _RomSize;

    ..ovl_En_Fd_Fire.bss ADDR(..ovl_En_Fd_Fire) + SIZEOF(..ovl_En_Fd_Fire) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Fd_FireSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Fd_Fire/z_en_fd_fire.o (.sbss)
            build/data/overlays/actors/z_en_fd_fire.data.o (.sbss)
            build/data/overlays/actors/z_en_fd_fire.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Fd_Fire/z_en_fd_fire.o (.scommon)
            build/data/overlays/actors/z_en_fd_fire.data.o (.scommon)
            build/data/overlays/actors/z_en_fd_fire.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Fd_Fire/z_en_fd_fire.o (.bss)
            build/data/overlays/actors/z_en_fd_fire.data.o (.bss)
            build/data/overlays/actors/z_en_fd_fire.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Fd_Fire/z_en_fd_fire.o (COMMON)
            build/data/overlays/actors/z_en_fd_fire.data.o (COMMON)
            build/data/overlays/actors/z_en_fd_fire.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Fd_FireSegmentBssEnd = .;
        _ovl_En_Fd_FireSegmentEnd = .;
    }
    _ovl_En_Fd_FireSegmentBssSize = ABSOLUTE( _ovl_En_Fd_FireSegmentBssEnd - _ovl_En_Fd_FireSegmentBssStart );

    _ovl_En_Fhg_FireSegmentRomStart = _RomSize;
    ..ovl_En_Fhg_Fire : AT(_RomSize)
    {
        _ovl_En_Fhg_FireSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Fhg_FireSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Fhg_Fire/z_en_fhg_fire.o (.text)
            build/data/overlays/actors/z_en_fhg_fire.data.o (.text)
            build/data/overlays/actors/z_en_fhg_fire.reloc.o (.text)
        _ovl_En_Fhg_FireSegmentTextEnd = .;
    _ovl_En_Fhg_FireSegmentTextSize = ABSOLUTE( _ovl_En_Fhg_FireSegmentTextEnd - _ovl_En_Fhg_FireSegmentTextStart );
        _ovl_En_Fhg_FireSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Fhg_Fire/z_en_fhg_fire.o (.data)
            build/data/overlays/actors/z_en_fhg_fire.data.o (.data)
            build/data/overlays/actors/z_en_fhg_fire.reloc.o (.data)
        _ovl_En_Fhg_FireSegmentDataEnd = .;
    _ovl_En_Fhg_FireSegmentDataSize = ABSOLUTE( _ovl_En_Fhg_FireSegmentDataEnd - _ovl_En_Fhg_FireSegmentDataStart );
        _ovl_En_Fhg_FireSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Fhg_Fire/z_en_fhg_fire.o (.rodata)
            build/data/overlays/actors/z_en_fhg_fire.data.o (.rodata)
            build/data/overlays/actors/z_en_fhg_fire.reloc.o (.rodata)
        _ovl_En_Fhg_FireSegmentRoDataEnd = .;
    _ovl_En_Fhg_FireSegmentRoDataSize = ABSOLUTE( _ovl_En_Fhg_FireSegmentRoDataEnd - _ovl_En_Fhg_FireSegmentRoDataStart );
        _ovl_En_Fhg_FireSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Fhg_Fire/z_en_fhg_fire.o (.sdata)
            build/data/overlays/actors/z_en_fhg_fire.data.o (.sdata)
            build/data/overlays/actors/z_en_fhg_fire.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Fhg_FireSegmentSDataEnd = .;
        _ovl_En_Fhg_FireSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Fhg_Fire/z_en_fhg_fire.o (.ovl)
            build/data/overlays/actors/z_en_fhg_fire.data.o (.ovl)
            build/data/overlays/actors/z_en_fhg_fire.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Fhg_FireSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Fhg_FireSegmentOvlEnd - _ovl_En_Fhg_FireSegmentTextStart );
    _ovl_En_Fhg_FireSegmentRomEnd = _RomSize;

    ..ovl_En_Fhg_Fire.bss ADDR(..ovl_En_Fhg_Fire) + SIZEOF(..ovl_En_Fhg_Fire) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Fhg_FireSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Fhg_Fire/z_en_fhg_fire.o (.sbss)
            build/data/overlays/actors/z_en_fhg_fire.data.o (.sbss)
            build/data/overlays/actors/z_en_fhg_fire.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Fhg_Fire/z_en_fhg_fire.o (.scommon)
            build/data/overlays/actors/z_en_fhg_fire.data.o (.scommon)
            build/data/overlays/actors/z_en_fhg_fire.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Fhg_Fire/z_en_fhg_fire.o (.bss)
            build/data/overlays/actors/z_en_fhg_fire.data.o (.bss)
            build/data/overlays/actors/z_en_fhg_fire.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Fhg_Fire/z_en_fhg_fire.o (COMMON)
            build/data/overlays/actors/z_en_fhg_fire.data.o (COMMON)
            build/data/overlays/actors/z_en_fhg_fire.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Fhg_FireSegmentBssEnd = .;
        _ovl_En_Fhg_FireSegmentEnd = .;
    }
    _ovl_En_Fhg_FireSegmentBssSize = ABSOLUTE( _ovl_En_Fhg_FireSegmentBssEnd - _ovl_En_Fhg_FireSegmentBssStart );

    _ovl_En_Fire_RockSegmentRomStart = _RomSize;
    ..ovl_En_Fire_Rock : AT(_RomSize)
    {
        _ovl_En_Fire_RockSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Fire_RockSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Fire_Rock/z_en_fire_rock.o (.text)
            build/data/overlays/actors/z_en_fire_rock.data.o (.text)
            build/data/overlays/actors/z_en_fire_rock.reloc.o (.text)
        _ovl_En_Fire_RockSegmentTextEnd = .;
    _ovl_En_Fire_RockSegmentTextSize = ABSOLUTE( _ovl_En_Fire_RockSegmentTextEnd - _ovl_En_Fire_RockSegmentTextStart );
        _ovl_En_Fire_RockSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Fire_Rock/z_en_fire_rock.o (.data)
            build/data/overlays/actors/z_en_fire_rock.data.o (.data)
            build/data/overlays/actors/z_en_fire_rock.reloc.o (.data)
        _ovl_En_Fire_RockSegmentDataEnd = .;
    _ovl_En_Fire_RockSegmentDataSize = ABSOLUTE( _ovl_En_Fire_RockSegmentDataEnd - _ovl_En_Fire_RockSegmentDataStart );
        _ovl_En_Fire_RockSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Fire_Rock/z_en_fire_rock.o (.rodata)
            build/data/overlays/actors/z_en_fire_rock.data.o (.rodata)
            build/data/overlays/actors/z_en_fire_rock.reloc.o (.rodata)
        _ovl_En_Fire_RockSegmentRoDataEnd = .;
    _ovl_En_Fire_RockSegmentRoDataSize = ABSOLUTE( _ovl_En_Fire_RockSegmentRoDataEnd - _ovl_En_Fire_RockSegmentRoDataStart );
        _ovl_En_Fire_RockSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Fire_Rock/z_en_fire_rock.o (.sdata)
            build/data/overlays/actors/z_en_fire_rock.data.o (.sdata)
            build/data/overlays/actors/z_en_fire_rock.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Fire_RockSegmentSDataEnd = .;
        _ovl_En_Fire_RockSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Fire_Rock/z_en_fire_rock.o (.ovl)
            build/data/overlays/actors/z_en_fire_rock.data.o (.ovl)
            build/data/overlays/actors/z_en_fire_rock.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Fire_RockSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Fire_RockSegmentOvlEnd - _ovl_En_Fire_RockSegmentTextStart );
    _ovl_En_Fire_RockSegmentRomEnd = _RomSize;

    ..ovl_En_Fire_Rock.bss ADDR(..ovl_En_Fire_Rock) + SIZEOF(..ovl_En_Fire_Rock) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Fire_RockSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Fire_Rock/z_en_fire_rock.o (.sbss)
            build/data/overlays/actors/z_en_fire_rock.data.o (.sbss)
            build/data/overlays/actors/z_en_fire_rock.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Fire_Rock/z_en_fire_rock.o (.scommon)
            build/data/overlays/actors/z_en_fire_rock.data.o (.scommon)
            build/data/overlays/actors/z_en_fire_rock.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Fire_Rock/z_en_fire_rock.o (.bss)
            build/data/overlays/actors/z_en_fire_rock.data.o (.bss)
            build/data/overlays/actors/z_en_fire_rock.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Fire_Rock/z_en_fire_rock.o (COMMON)
            build/data/overlays/actors/z_en_fire_rock.data.o (COMMON)
            build/data/overlays/actors/z_en_fire_rock.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Fire_RockSegmentBssEnd = .;
        _ovl_En_Fire_RockSegmentEnd = .;
    }
    _ovl_En_Fire_RockSegmentBssSize = ABSOLUTE( _ovl_En_Fire_RockSegmentBssEnd - _ovl_En_Fire_RockSegmentBssStart );

    _ovl_En_FireflySegmentRomStart = _RomSize;
    ..ovl_En_Firefly : AT(_RomSize)
    {
        _ovl_En_FireflySegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_FireflySegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Firefly/z_en_firefly.o (.text)
            build/data/overlays/actors/z_en_firefly.data.o (.text)
            build/data/overlays/actors/z_en_firefly.reloc.o (.text)
        _ovl_En_FireflySegmentTextEnd = .;
    _ovl_En_FireflySegmentTextSize = ABSOLUTE( _ovl_En_FireflySegmentTextEnd - _ovl_En_FireflySegmentTextStart );
        _ovl_En_FireflySegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Firefly/z_en_firefly.o (.data)
            build/data/overlays/actors/z_en_firefly.data.o (.data)
            build/data/overlays/actors/z_en_firefly.reloc.o (.data)
        _ovl_En_FireflySegmentDataEnd = .;
    _ovl_En_FireflySegmentDataSize = ABSOLUTE( _ovl_En_FireflySegmentDataEnd - _ovl_En_FireflySegmentDataStart );
        _ovl_En_FireflySegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Firefly/z_en_firefly.o (.rodata)
            build/data/overlays/actors/z_en_firefly.data.o (.rodata)
            build/data/overlays/actors/z_en_firefly.reloc.o (.rodata)
        _ovl_En_FireflySegmentRoDataEnd = .;
    _ovl_En_FireflySegmentRoDataSize = ABSOLUTE( _ovl_En_FireflySegmentRoDataEnd - _ovl_En_FireflySegmentRoDataStart );
        _ovl_En_FireflySegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Firefly/z_en_firefly.o (.sdata)
            build/data/overlays/actors/z_en_firefly.data.o (.sdata)
            build/data/overlays/actors/z_en_firefly.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_FireflySegmentSDataEnd = .;
        _ovl_En_FireflySegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Firefly/z_en_firefly.o (.ovl)
            build/data/overlays/actors/z_en_firefly.data.o (.ovl)
            build/data/overlays/actors/z_en_firefly.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_FireflySegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_FireflySegmentOvlEnd - _ovl_En_FireflySegmentTextStart );
    _ovl_En_FireflySegmentRomEnd = _RomSize;

    ..ovl_En_Firefly.bss ADDR(..ovl_En_Firefly) + SIZEOF(..ovl_En_Firefly) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_FireflySegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Firefly/z_en_firefly.o (.sbss)
            build/data/overlays/actors/z_en_firefly.data.o (.sbss)
            build/data/overlays/actors/z_en_firefly.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Firefly/z_en_firefly.o (.scommon)
            build/data/overlays/actors/z_en_firefly.data.o (.scommon)
            build/data/overlays/actors/z_en_firefly.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Firefly/z_en_firefly.o (.bss)
            build/data/overlays/actors/z_en_firefly.data.o (.bss)
            build/data/overlays/actors/z_en_firefly.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Firefly/z_en_firefly.o (COMMON)
            build/data/overlays/actors/z_en_firefly.data.o (COMMON)
            build/data/overlays/actors/z_en_firefly.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_FireflySegmentBssEnd = .;
        _ovl_En_FireflySegmentEnd = .;
    }
    _ovl_En_FireflySegmentBssSize = ABSOLUTE( _ovl_En_FireflySegmentBssEnd - _ovl_En_FireflySegmentBssStart );

    _ovl_En_FishSegmentRomStart = _RomSize;
    ..ovl_En_Fish : AT(_RomSize)
    {
        _ovl_En_FishSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_FishSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Fish/z_en_fish.o (.text)
            build/data/overlays/actors/z_en_fish.data.o (.text)
            build/data/overlays/actors/z_en_fish.reloc.o (.text)
        _ovl_En_FishSegmentTextEnd = .;
    _ovl_En_FishSegmentTextSize = ABSOLUTE( _ovl_En_FishSegmentTextEnd - _ovl_En_FishSegmentTextStart );
        _ovl_En_FishSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Fish/z_en_fish.o (.data)
            build/data/overlays/actors/z_en_fish.data.o (.data)
            build/data/overlays/actors/z_en_fish.reloc.o (.data)
        _ovl_En_FishSegmentDataEnd = .;
    _ovl_En_FishSegmentDataSize = ABSOLUTE( _ovl_En_FishSegmentDataEnd - _ovl_En_FishSegmentDataStart );
        _ovl_En_FishSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Fish/z_en_fish.o (.rodata)
            build/data/overlays/actors/z_en_fish.data.o (.rodata)
            build/data/overlays/actors/z_en_fish.reloc.o (.rodata)
        _ovl_En_FishSegmentRoDataEnd = .;
    _ovl_En_FishSegmentRoDataSize = ABSOLUTE( _ovl_En_FishSegmentRoDataEnd - _ovl_En_FishSegmentRoDataStart );
        _ovl_En_FishSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Fish/z_en_fish.o (.sdata)
            build/data/overlays/actors/z_en_fish.data.o (.sdata)
            build/data/overlays/actors/z_en_fish.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_FishSegmentSDataEnd = .;
        _ovl_En_FishSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Fish/z_en_fish.o (.ovl)
            build/data/overlays/actors/z_en_fish.data.o (.ovl)
            build/data/overlays/actors/z_en_fish.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_FishSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_FishSegmentOvlEnd - _ovl_En_FishSegmentTextStart );
    _ovl_En_FishSegmentRomEnd = _RomSize;

    ..ovl_En_Fish.bss ADDR(..ovl_En_Fish) + SIZEOF(..ovl_En_Fish) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_FishSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Fish/z_en_fish.o (.sbss)
            build/data/overlays/actors/z_en_fish.data.o (.sbss)
            build/data/overlays/actors/z_en_fish.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Fish/z_en_fish.o (.scommon)
            build/data/overlays/actors/z_en_fish.data.o (.scommon)
            build/data/overlays/actors/z_en_fish.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Fish/z_en_fish.o (.bss)
            build/data/overlays/actors/z_en_fish.data.o (.bss)
            build/data/overlays/actors/z_en_fish.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Fish/z_en_fish.o (COMMON)
            build/data/overlays/actors/z_en_fish.data.o (COMMON)
            build/data/overlays/actors/z_en_fish.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_FishSegmentBssEnd = .;
        _ovl_En_FishSegmentEnd = .;
    }
    _ovl_En_FishSegmentBssSize = ABSOLUTE( _ovl_En_FishSegmentBssEnd - _ovl_En_FishSegmentBssStart );

    _ovl_En_FloormasSegmentRomStart = _RomSize;
    ..ovl_En_Floormas : AT(_RomSize)
    {
        _ovl_En_FloormasSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_FloormasSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Floormas/z_en_floormas.o (.text)
            build/src/overlays/actors/ovl_En_Floormas/ovl_En_Floormas_reloc.o (.text)
        _ovl_En_FloormasSegmentTextEnd = .;
    _ovl_En_FloormasSegmentTextSize = ABSOLUTE( _ovl_En_FloormasSegmentTextEnd - _ovl_En_FloormasSegmentTextStart );
        _ovl_En_FloormasSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Floormas/z_en_floormas.o (.data)
            build/src/overlays/actors/ovl_En_Floormas/ovl_En_Floormas_reloc.o (.data)
        _ovl_En_FloormasSegmentDataEnd = .;
    _ovl_En_FloormasSegmentDataSize = ABSOLUTE( _ovl_En_FloormasSegmentDataEnd - _ovl_En_FloormasSegmentDataStart );
        _ovl_En_FloormasSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Floormas/z_en_floormas.o (.rodata)
            build/src/overlays/actors/ovl_En_Floormas/ovl_En_Floormas_reloc.o (.rodata)
        _ovl_En_FloormasSegmentRoDataEnd = .;
    _ovl_En_FloormasSegmentRoDataSize = ABSOLUTE( _ovl_En_FloormasSegmentRoDataEnd - _ovl_En_FloormasSegmentRoDataStart );
        _ovl_En_FloormasSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Floormas/z_en_floormas.o (.sdata)
            build/src/overlays/actors/ovl_En_Floormas/ovl_En_Floormas_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_FloormasSegmentSDataEnd = .;
        _ovl_En_FloormasSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Floormas/z_en_floormas.o (.ovl)
            build/src/overlays/actors/ovl_En_Floormas/ovl_En_Floormas_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_FloormasSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_FloormasSegmentOvlEnd - _ovl_En_FloormasSegmentTextStart );
    _ovl_En_FloormasSegmentRomEnd = _RomSize;

    ..ovl_En_Floormas.bss ADDR(..ovl_En_Floormas) + SIZEOF(..ovl_En_Floormas) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_FloormasSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Floormas/z_en_floormas.o (.sbss)
            build/src/overlays/actors/ovl_En_Floormas/ovl_En_Floormas_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Floormas/z_en_floormas.o (.scommon)
            build/src/overlays/actors/ovl_En_Floormas/ovl_En_Floormas_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Floormas/z_en_floormas.o (.bss)
            build/src/overlays/actors/ovl_En_Floormas/ovl_En_Floormas_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Floormas/z_en_floormas.o (COMMON)
            build/src/overlays/actors/ovl_En_Floormas/ovl_En_Floormas_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_FloormasSegmentBssEnd = .;
        _ovl_En_FloormasSegmentEnd = .;
    }
    _ovl_En_FloormasSegmentBssSize = ABSOLUTE( _ovl_En_FloormasSegmentBssEnd - _ovl_En_FloormasSegmentBssStart );

    _ovl_En_FrSegmentRomStart = _RomSize;
    ..ovl_En_Fr : AT(_RomSize)
    {
        _ovl_En_FrSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_FrSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Fr/z_en_fr.o (.text)
            build/data/overlays/actors/z_en_fr.data.o (.text)
            build/data/overlays/actors/z_en_fr.reloc.o (.text)
        _ovl_En_FrSegmentTextEnd = .;
    _ovl_En_FrSegmentTextSize = ABSOLUTE( _ovl_En_FrSegmentTextEnd - _ovl_En_FrSegmentTextStart );
        _ovl_En_FrSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Fr/z_en_fr.o (.data)
            build/data/overlays/actors/z_en_fr.data.o (.data)
            build/data/overlays/actors/z_en_fr.reloc.o (.data)
        _ovl_En_FrSegmentDataEnd = .;
    _ovl_En_FrSegmentDataSize = ABSOLUTE( _ovl_En_FrSegmentDataEnd - _ovl_En_FrSegmentDataStart );
        _ovl_En_FrSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Fr/z_en_fr.o (.rodata)
            build/data/overlays/actors/z_en_fr.data.o (.rodata)
            build/data/overlays/actors/z_en_fr.reloc.o (.rodata)
        _ovl_En_FrSegmentRoDataEnd = .;
    _ovl_En_FrSegmentRoDataSize = ABSOLUTE( _ovl_En_FrSegmentRoDataEnd - _ovl_En_FrSegmentRoDataStart );
        _ovl_En_FrSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Fr/z_en_fr.o (.sdata)
            build/data/overlays/actors/z_en_fr.data.o (.sdata)
            build/data/overlays/actors/z_en_fr.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_FrSegmentSDataEnd = .;
        _ovl_En_FrSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Fr/z_en_fr.o (.ovl)
            build/data/overlays/actors/z_en_fr.data.o (.ovl)
            build/data/overlays/actors/z_en_fr.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_FrSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_FrSegmentOvlEnd - _ovl_En_FrSegmentTextStart );
    _ovl_En_FrSegmentRomEnd = _RomSize;

    ..ovl_En_Fr.bss ADDR(..ovl_En_Fr) + SIZEOF(..ovl_En_Fr) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_FrSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Fr/z_en_fr.o (.sbss)
            build/data/overlays/actors/z_en_fr.data.o (.sbss)
            build/data/overlays/actors/z_en_fr.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Fr/z_en_fr.o (.scommon)
            build/data/overlays/actors/z_en_fr.data.o (.scommon)
            build/data/overlays/actors/z_en_fr.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Fr/z_en_fr.o (.bss)
            build/data/overlays/actors/z_en_fr.data.o (.bss)
            build/data/overlays/actors/z_en_fr.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Fr/z_en_fr.o (COMMON)
            build/data/overlays/actors/z_en_fr.data.o (COMMON)
            build/data/overlays/actors/z_en_fr.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_FrSegmentBssEnd = .;
        _ovl_En_FrSegmentEnd = .;
    }
    _ovl_En_FrSegmentBssSize = ABSOLUTE( _ovl_En_FrSegmentBssEnd - _ovl_En_FrSegmentBssStart );

    _ovl_En_FuSegmentRomStart = _RomSize;
    ..ovl_En_Fu : AT(_RomSize)
    {
        _ovl_En_FuSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_FuSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Fu/z_en_fu.o (.text)
            build/src/overlays/actors/ovl_En_Fu/ovl_En_Fu_reloc.o (.text)
        _ovl_En_FuSegmentTextEnd = .;
    _ovl_En_FuSegmentTextSize = ABSOLUTE( _ovl_En_FuSegmentTextEnd - _ovl_En_FuSegmentTextStart );
        _ovl_En_FuSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Fu/z_en_fu.o (.data)
            build/src/overlays/actors/ovl_En_Fu/ovl_En_Fu_reloc.o (.data)
        _ovl_En_FuSegmentDataEnd = .;
    _ovl_En_FuSegmentDataSize = ABSOLUTE( _ovl_En_FuSegmentDataEnd - _ovl_En_FuSegmentDataStart );
        _ovl_En_FuSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Fu/z_en_fu.o (.rodata)
            build/src/overlays/actors/ovl_En_Fu/ovl_En_Fu_reloc.o (.rodata)
        _ovl_En_FuSegmentRoDataEnd = .;
    _ovl_En_FuSegmentRoDataSize = ABSOLUTE( _ovl_En_FuSegmentRoDataEnd - _ovl_En_FuSegmentRoDataStart );
        _ovl_En_FuSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Fu/z_en_fu.o (.sdata)
            build/src/overlays/actors/ovl_En_Fu/ovl_En_Fu_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_FuSegmentSDataEnd = .;
        _ovl_En_FuSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Fu/z_en_fu.o (.ovl)
            build/src/overlays/actors/ovl_En_Fu/ovl_En_Fu_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_FuSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_FuSegmentOvlEnd - _ovl_En_FuSegmentTextStart );
    _ovl_En_FuSegmentRomEnd = _RomSize;

    ..ovl_En_Fu.bss ADDR(..ovl_En_Fu) + SIZEOF(..ovl_En_Fu) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_FuSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Fu/z_en_fu.o (.sbss)
            build/src/overlays/actors/ovl_En_Fu/ovl_En_Fu_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Fu/z_en_fu.o (.scommon)
            build/src/overlays/actors/ovl_En_Fu/ovl_En_Fu_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Fu/z_en_fu.o (.bss)
            build/src/overlays/actors/ovl_En_Fu/ovl_En_Fu_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Fu/z_en_fu.o (COMMON)
            build/src/overlays/actors/ovl_En_Fu/ovl_En_Fu_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_FuSegmentBssEnd = .;
        _ovl_En_FuSegmentEnd = .;
    }
    _ovl_En_FuSegmentBssSize = ABSOLUTE( _ovl_En_FuSegmentBssEnd - _ovl_En_FuSegmentBssStart );

    _ovl_En_FwSegmentRomStart = _RomSize;
    ..ovl_En_Fw : AT(_RomSize)
    {
        _ovl_En_FwSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_FwSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Fw/z_en_fw.o (.text)
            build/data/overlays/actors/z_en_fw.data.o (.text)
            build/data/overlays/actors/z_en_fw.reloc.o (.text)
        _ovl_En_FwSegmentTextEnd = .;
    _ovl_En_FwSegmentTextSize = ABSOLUTE( _ovl_En_FwSegmentTextEnd - _ovl_En_FwSegmentTextStart );
        _ovl_En_FwSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Fw/z_en_fw.o (.data)
            build/data/overlays/actors/z_en_fw.data.o (.data)
            build/data/overlays/actors/z_en_fw.reloc.o (.data)
        _ovl_En_FwSegmentDataEnd = .;
    _ovl_En_FwSegmentDataSize = ABSOLUTE( _ovl_En_FwSegmentDataEnd - _ovl_En_FwSegmentDataStart );
        _ovl_En_FwSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Fw/z_en_fw.o (.rodata)
            build/data/overlays/actors/z_en_fw.data.o (.rodata)
            build/data/overlays/actors/z_en_fw.reloc.o (.rodata)
        _ovl_En_FwSegmentRoDataEnd = .;
    _ovl_En_FwSegmentRoDataSize = ABSOLUTE( _ovl_En_FwSegmentRoDataEnd - _ovl_En_FwSegmentRoDataStart );
        _ovl_En_FwSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Fw/z_en_fw.o (.sdata)
            build/data/overlays/actors/z_en_fw.data.o (.sdata)
            build/data/overlays/actors/z_en_fw.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_FwSegmentSDataEnd = .;
        _ovl_En_FwSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Fw/z_en_fw.o (.ovl)
            build/data/overlays/actors/z_en_fw.data.o (.ovl)
            build/data/overlays/actors/z_en_fw.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_FwSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_FwSegmentOvlEnd - _ovl_En_FwSegmentTextStart );
    _ovl_En_FwSegmentRomEnd = _RomSize;

    ..ovl_En_Fw.bss ADDR(..ovl_En_Fw) + SIZEOF(..ovl_En_Fw) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_FwSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Fw/z_en_fw.o (.sbss)
            build/data/overlays/actors/z_en_fw.data.o (.sbss)
            build/data/overlays/actors/z_en_fw.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Fw/z_en_fw.o (.scommon)
            build/data/overlays/actors/z_en_fw.data.o (.scommon)
            build/data/overlays/actors/z_en_fw.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Fw/z_en_fw.o (.bss)
            build/data/overlays/actors/z_en_fw.data.o (.bss)
            build/data/overlays/actors/z_en_fw.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Fw/z_en_fw.o (COMMON)
            build/data/overlays/actors/z_en_fw.data.o (COMMON)
            build/data/overlays/actors/z_en_fw.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_FwSegmentBssEnd = .;
        _ovl_En_FwSegmentEnd = .;
    }
    _ovl_En_FwSegmentBssSize = ABSOLUTE( _ovl_En_FwSegmentBssEnd - _ovl_En_FwSegmentBssStart );

    _ovl_En_FzSegmentRomStart = _RomSize;
    ..ovl_En_Fz : AT(_RomSize)
    {
        _ovl_En_FzSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_FzSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Fz/z_en_fz.o (.text)
            build/data/overlays/actors/z_en_fz.data.o (.text)
            build/data/overlays/actors/z_en_fz.reloc.o (.text)
        _ovl_En_FzSegmentTextEnd = .;
    _ovl_En_FzSegmentTextSize = ABSOLUTE( _ovl_En_FzSegmentTextEnd - _ovl_En_FzSegmentTextStart );
        _ovl_En_FzSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Fz/z_en_fz.o (.data)
            build/data/overlays/actors/z_en_fz.data.o (.data)
            build/data/overlays/actors/z_en_fz.reloc.o (.data)
        _ovl_En_FzSegmentDataEnd = .;
    _ovl_En_FzSegmentDataSize = ABSOLUTE( _ovl_En_FzSegmentDataEnd - _ovl_En_FzSegmentDataStart );
        _ovl_En_FzSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Fz/z_en_fz.o (.rodata)
            build/data/overlays/actors/z_en_fz.data.o (.rodata)
            build/data/overlays/actors/z_en_fz.reloc.o (.rodata)
        _ovl_En_FzSegmentRoDataEnd = .;
    _ovl_En_FzSegmentRoDataSize = ABSOLUTE( _ovl_En_FzSegmentRoDataEnd - _ovl_En_FzSegmentRoDataStart );
        _ovl_En_FzSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Fz/z_en_fz.o (.sdata)
            build/data/overlays/actors/z_en_fz.data.o (.sdata)
            build/data/overlays/actors/z_en_fz.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_FzSegmentSDataEnd = .;
        _ovl_En_FzSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Fz/z_en_fz.o (.ovl)
            build/data/overlays/actors/z_en_fz.data.o (.ovl)
            build/data/overlays/actors/z_en_fz.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_FzSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_FzSegmentOvlEnd - _ovl_En_FzSegmentTextStart );
    _ovl_En_FzSegmentRomEnd = _RomSize;

    ..ovl_En_Fz.bss ADDR(..ovl_En_Fz) + SIZEOF(..ovl_En_Fz) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_FzSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Fz/z_en_fz.o (.sbss)
            build/data/overlays/actors/z_en_fz.data.o (.sbss)
            build/data/overlays/actors/z_en_fz.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Fz/z_en_fz.o (.scommon)
            build/data/overlays/actors/z_en_fz.data.o (.scommon)
            build/data/overlays/actors/z_en_fz.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Fz/z_en_fz.o (.bss)
            build/data/overlays/actors/z_en_fz.data.o (.bss)
            build/data/overlays/actors/z_en_fz.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Fz/z_en_fz.o (COMMON)
            build/data/overlays/actors/z_en_fz.data.o (COMMON)
            build/data/overlays/actors/z_en_fz.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_FzSegmentBssEnd = .;
        _ovl_En_FzSegmentEnd = .;
    }
    _ovl_En_FzSegmentBssSize = ABSOLUTE( _ovl_En_FzSegmentBssEnd - _ovl_En_FzSegmentBssStart );

    _ovl_En_G_SwitchSegmentRomStart = _RomSize;
    ..ovl_En_G_Switch : AT(_RomSize)
    {
        _ovl_En_G_SwitchSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_G_SwitchSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_G_Switch/z_en_g_switch.o (.text)
            build/data/overlays/actors/z_en_g_switch.data.o (.text)
            build/data/overlays/actors/z_en_g_switch.reloc.o (.text)
        _ovl_En_G_SwitchSegmentTextEnd = .;
    _ovl_En_G_SwitchSegmentTextSize = ABSOLUTE( _ovl_En_G_SwitchSegmentTextEnd - _ovl_En_G_SwitchSegmentTextStart );
        _ovl_En_G_SwitchSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_G_Switch/z_en_g_switch.o (.data)
            build/data/overlays/actors/z_en_g_switch.data.o (.data)
            build/data/overlays/actors/z_en_g_switch.reloc.o (.data)
        _ovl_En_G_SwitchSegmentDataEnd = .;
    _ovl_En_G_SwitchSegmentDataSize = ABSOLUTE( _ovl_En_G_SwitchSegmentDataEnd - _ovl_En_G_SwitchSegmentDataStart );
        _ovl_En_G_SwitchSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_G_Switch/z_en_g_switch.o (.rodata)
            build/data/overlays/actors/z_en_g_switch.data.o (.rodata)
            build/data/overlays/actors/z_en_g_switch.reloc.o (.rodata)
        _ovl_En_G_SwitchSegmentRoDataEnd = .;
    _ovl_En_G_SwitchSegmentRoDataSize = ABSOLUTE( _ovl_En_G_SwitchSegmentRoDataEnd - _ovl_En_G_SwitchSegmentRoDataStart );
        _ovl_En_G_SwitchSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_G_Switch/z_en_g_switch.o (.sdata)
            build/data/overlays/actors/z_en_g_switch.data.o (.sdata)
            build/data/overlays/actors/z_en_g_switch.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_G_SwitchSegmentSDataEnd = .;
        _ovl_En_G_SwitchSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_G_Switch/z_en_g_switch.o (.ovl)
            build/data/overlays/actors/z_en_g_switch.data.o (.ovl)
            build/data/overlays/actors/z_en_g_switch.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_G_SwitchSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_G_SwitchSegmentOvlEnd - _ovl_En_G_SwitchSegmentTextStart );
    _ovl_En_G_SwitchSegmentRomEnd = _RomSize;

    ..ovl_En_G_Switch.bss ADDR(..ovl_En_G_Switch) + SIZEOF(..ovl_En_G_Switch) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_G_SwitchSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_G_Switch/z_en_g_switch.o (.sbss)
            build/data/overlays/actors/z_en_g_switch.data.o (.sbss)
            build/data/overlays/actors/z_en_g_switch.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_G_Switch/z_en_g_switch.o (.scommon)
            build/data/overlays/actors/z_en_g_switch.data.o (.scommon)
            build/data/overlays/actors/z_en_g_switch.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_G_Switch/z_en_g_switch.o (.bss)
            build/data/overlays/actors/z_en_g_switch.data.o (.bss)
            build/data/overlays/actors/z_en_g_switch.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_G_Switch/z_en_g_switch.o (COMMON)
            build/data/overlays/actors/z_en_g_switch.data.o (COMMON)
            build/data/overlays/actors/z_en_g_switch.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_G_SwitchSegmentBssEnd = .;
        _ovl_En_G_SwitchSegmentEnd = .;
    }
    _ovl_En_G_SwitchSegmentBssSize = ABSOLUTE( _ovl_En_G_SwitchSegmentBssEnd - _ovl_En_G_SwitchSegmentBssStart );

    _ovl_En_Ganon_MantSegmentRomStart = _RomSize;
    ..ovl_En_Ganon_Mant : AT(_RomSize)
    {
        _ovl_En_Ganon_MantSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Ganon_MantSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ganon_Mant/z_en_ganon_mant.o (.text)
            build/data/overlays/actors/z_en_ganon_mant.data.o (.text)
            build/data/overlays/actors/z_en_ganon_mant.reloc.o (.text)
        _ovl_En_Ganon_MantSegmentTextEnd = .;
    _ovl_En_Ganon_MantSegmentTextSize = ABSOLUTE( _ovl_En_Ganon_MantSegmentTextEnd - _ovl_En_Ganon_MantSegmentTextStart );
        _ovl_En_Ganon_MantSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ganon_Mant/z_en_ganon_mant.o (.data)
            build/data/overlays/actors/z_en_ganon_mant.data.o (.data)
            build/data/overlays/actors/z_en_ganon_mant.reloc.o (.data)
        _ovl_En_Ganon_MantSegmentDataEnd = .;
    _ovl_En_Ganon_MantSegmentDataSize = ABSOLUTE( _ovl_En_Ganon_MantSegmentDataEnd - _ovl_En_Ganon_MantSegmentDataStart );
        _ovl_En_Ganon_MantSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ganon_Mant/z_en_ganon_mant.o (.rodata)
            build/data/overlays/actors/z_en_ganon_mant.data.o (.rodata)
            build/data/overlays/actors/z_en_ganon_mant.reloc.o (.rodata)
        _ovl_En_Ganon_MantSegmentRoDataEnd = .;
    _ovl_En_Ganon_MantSegmentRoDataSize = ABSOLUTE( _ovl_En_Ganon_MantSegmentRoDataEnd - _ovl_En_Ganon_MantSegmentRoDataStart );
        _ovl_En_Ganon_MantSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ganon_Mant/z_en_ganon_mant.o (.sdata)
            build/data/overlays/actors/z_en_ganon_mant.data.o (.sdata)
            build/data/overlays/actors/z_en_ganon_mant.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Ganon_MantSegmentSDataEnd = .;
        _ovl_En_Ganon_MantSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ganon_Mant/z_en_ganon_mant.o (.ovl)
            build/data/overlays/actors/z_en_ganon_mant.data.o (.ovl)
            build/data/overlays/actors/z_en_ganon_mant.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Ganon_MantSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Ganon_MantSegmentOvlEnd - _ovl_En_Ganon_MantSegmentTextStart );
    _ovl_En_Ganon_MantSegmentRomEnd = _RomSize;

    ..ovl_En_Ganon_Mant.bss ADDR(..ovl_En_Ganon_Mant) + SIZEOF(..ovl_En_Ganon_Mant) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Ganon_MantSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ganon_Mant/z_en_ganon_mant.o (.sbss)
            build/data/overlays/actors/z_en_ganon_mant.data.o (.sbss)
            build/data/overlays/actors/z_en_ganon_mant.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ganon_Mant/z_en_ganon_mant.o (.scommon)
            build/data/overlays/actors/z_en_ganon_mant.data.o (.scommon)
            build/data/overlays/actors/z_en_ganon_mant.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ganon_Mant/z_en_ganon_mant.o (.bss)
            build/data/overlays/actors/z_en_ganon_mant.data.o (.bss)
            build/data/overlays/actors/z_en_ganon_mant.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ganon_Mant/z_en_ganon_mant.o (COMMON)
            build/data/overlays/actors/z_en_ganon_mant.data.o (COMMON)
            build/data/overlays/actors/z_en_ganon_mant.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Ganon_MantSegmentBssEnd = .;
        _ovl_En_Ganon_MantSegmentEnd = .;
    }
    _ovl_En_Ganon_MantSegmentBssSize = ABSOLUTE( _ovl_En_Ganon_MantSegmentBssEnd - _ovl_En_Ganon_MantSegmentBssStart );

    _ovl_En_Ganon_OrganSegmentRomStart = _RomSize;
    ..ovl_En_Ganon_Organ : AT(_RomSize)
    {
        _ovl_En_Ganon_OrganSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Ganon_OrganSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ganon_Organ/z_en_ganon_organ.o (.text)
            build/data/overlays/actors/z_en_ganon_organ.data.o (.text)
            build/data/overlays/actors/z_en_ganon_organ.reloc.o (.text)
        _ovl_En_Ganon_OrganSegmentTextEnd = .;
    _ovl_En_Ganon_OrganSegmentTextSize = ABSOLUTE( _ovl_En_Ganon_OrganSegmentTextEnd - _ovl_En_Ganon_OrganSegmentTextStart );
        _ovl_En_Ganon_OrganSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ganon_Organ/z_en_ganon_organ.o (.data)
            build/data/overlays/actors/z_en_ganon_organ.data.o (.data)
            build/data/overlays/actors/z_en_ganon_organ.reloc.o (.data)
        _ovl_En_Ganon_OrganSegmentDataEnd = .;
    _ovl_En_Ganon_OrganSegmentDataSize = ABSOLUTE( _ovl_En_Ganon_OrganSegmentDataEnd - _ovl_En_Ganon_OrganSegmentDataStart );
        _ovl_En_Ganon_OrganSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ganon_Organ/z_en_ganon_organ.o (.rodata)
            build/data/overlays/actors/z_en_ganon_organ.data.o (.rodata)
            build/data/overlays/actors/z_en_ganon_organ.reloc.o (.rodata)
        _ovl_En_Ganon_OrganSegmentRoDataEnd = .;
    _ovl_En_Ganon_OrganSegmentRoDataSize = ABSOLUTE( _ovl_En_Ganon_OrganSegmentRoDataEnd - _ovl_En_Ganon_OrganSegmentRoDataStart );
        _ovl_En_Ganon_OrganSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ganon_Organ/z_en_ganon_organ.o (.sdata)
            build/data/overlays/actors/z_en_ganon_organ.data.o (.sdata)
            build/data/overlays/actors/z_en_ganon_organ.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Ganon_OrganSegmentSDataEnd = .;
        _ovl_En_Ganon_OrganSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ganon_Organ/z_en_ganon_organ.o (.ovl)
            build/data/overlays/actors/z_en_ganon_organ.data.o (.ovl)
            build/data/overlays/actors/z_en_ganon_organ.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Ganon_OrganSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Ganon_OrganSegmentOvlEnd - _ovl_En_Ganon_OrganSegmentTextStart );
    _ovl_En_Ganon_OrganSegmentRomEnd = _RomSize;

    ..ovl_En_Ganon_Organ.bss ADDR(..ovl_En_Ganon_Organ) + SIZEOF(..ovl_En_Ganon_Organ) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Ganon_OrganSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ganon_Organ/z_en_ganon_organ.o (.sbss)
            build/data/overlays/actors/z_en_ganon_organ.data.o (.sbss)
            build/data/overlays/actors/z_en_ganon_organ.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ganon_Organ/z_en_ganon_organ.o (.scommon)
            build/data/overlays/actors/z_en_ganon_organ.data.o (.scommon)
            build/data/overlays/actors/z_en_ganon_organ.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ganon_Organ/z_en_ganon_organ.o (.bss)
            build/data/overlays/actors/z_en_ganon_organ.data.o (.bss)
            build/data/overlays/actors/z_en_ganon_organ.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ganon_Organ/z_en_ganon_organ.o (COMMON)
            build/data/overlays/actors/z_en_ganon_organ.data.o (COMMON)
            build/data/overlays/actors/z_en_ganon_organ.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Ganon_OrganSegmentBssEnd = .;
        _ovl_En_Ganon_OrganSegmentEnd = .;
    }
    _ovl_En_Ganon_OrganSegmentBssSize = ABSOLUTE( _ovl_En_Ganon_OrganSegmentBssEnd - _ovl_En_Ganon_OrganSegmentBssStart );

    _ovl_En_GbSegmentRomStart = _RomSize;
    ..ovl_En_Gb : AT(_RomSize)
    {
        _ovl_En_GbSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_GbSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Gb/z_en_gb.o (.text)
            build/data/overlays/actors/z_en_gb.data.o (.text)
            build/data/overlays/actors/z_en_gb.reloc.o (.text)
        _ovl_En_GbSegmentTextEnd = .;
    _ovl_En_GbSegmentTextSize = ABSOLUTE( _ovl_En_GbSegmentTextEnd - _ovl_En_GbSegmentTextStart );
        _ovl_En_GbSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Gb/z_en_gb.o (.data)
            build/data/overlays/actors/z_en_gb.data.o (.data)
            build/data/overlays/actors/z_en_gb.reloc.o (.data)
        _ovl_En_GbSegmentDataEnd = .;
    _ovl_En_GbSegmentDataSize = ABSOLUTE( _ovl_En_GbSegmentDataEnd - _ovl_En_GbSegmentDataStart );
        _ovl_En_GbSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Gb/z_en_gb.o (.rodata)
            build/data/overlays/actors/z_en_gb.data.o (.rodata)
            build/data/overlays/actors/z_en_gb.reloc.o (.rodata)
        _ovl_En_GbSegmentRoDataEnd = .;
    _ovl_En_GbSegmentRoDataSize = ABSOLUTE( _ovl_En_GbSegmentRoDataEnd - _ovl_En_GbSegmentRoDataStart );
        _ovl_En_GbSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Gb/z_en_gb.o (.sdata)
            build/data/overlays/actors/z_en_gb.data.o (.sdata)
            build/data/overlays/actors/z_en_gb.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_GbSegmentSDataEnd = .;
        _ovl_En_GbSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Gb/z_en_gb.o (.ovl)
            build/data/overlays/actors/z_en_gb.data.o (.ovl)
            build/data/overlays/actors/z_en_gb.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_GbSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_GbSegmentOvlEnd - _ovl_En_GbSegmentTextStart );
    _ovl_En_GbSegmentRomEnd = _RomSize;

    ..ovl_En_Gb.bss ADDR(..ovl_En_Gb) + SIZEOF(..ovl_En_Gb) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_GbSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Gb/z_en_gb.o (.sbss)
            build/data/overlays/actors/z_en_gb.data.o (.sbss)
            build/data/overlays/actors/z_en_gb.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Gb/z_en_gb.o (.scommon)
            build/data/overlays/actors/z_en_gb.data.o (.scommon)
            build/data/overlays/actors/z_en_gb.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Gb/z_en_gb.o (.bss)
            build/data/overlays/actors/z_en_gb.data.o (.bss)
            build/data/overlays/actors/z_en_gb.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Gb/z_en_gb.o (COMMON)
            build/data/overlays/actors/z_en_gb.data.o (COMMON)
            build/data/overlays/actors/z_en_gb.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_GbSegmentBssEnd = .;
        _ovl_En_GbSegmentEnd = .;
    }
    _ovl_En_GbSegmentBssSize = ABSOLUTE( _ovl_En_GbSegmentBssEnd - _ovl_En_GbSegmentBssStart );

    _ovl_En_Ge1SegmentRomStart = _RomSize;
    ..ovl_En_Ge1 : AT(_RomSize)
    {
        _ovl_En_Ge1SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Ge1SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ge1/z_en_ge1.o (.text)
            build/data/overlays/actors/z_en_ge1.data.o (.text)
            build/data/overlays/actors/z_en_ge1.reloc.o (.text)
        _ovl_En_Ge1SegmentTextEnd = .;
    _ovl_En_Ge1SegmentTextSize = ABSOLUTE( _ovl_En_Ge1SegmentTextEnd - _ovl_En_Ge1SegmentTextStart );
        _ovl_En_Ge1SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ge1/z_en_ge1.o (.data)
            build/data/overlays/actors/z_en_ge1.data.o (.data)
            build/data/overlays/actors/z_en_ge1.reloc.o (.data)
        _ovl_En_Ge1SegmentDataEnd = .;
    _ovl_En_Ge1SegmentDataSize = ABSOLUTE( _ovl_En_Ge1SegmentDataEnd - _ovl_En_Ge1SegmentDataStart );
        _ovl_En_Ge1SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ge1/z_en_ge1.o (.rodata)
            build/data/overlays/actors/z_en_ge1.data.o (.rodata)
            build/data/overlays/actors/z_en_ge1.reloc.o (.rodata)
        _ovl_En_Ge1SegmentRoDataEnd = .;
    _ovl_En_Ge1SegmentRoDataSize = ABSOLUTE( _ovl_En_Ge1SegmentRoDataEnd - _ovl_En_Ge1SegmentRoDataStart );
        _ovl_En_Ge1SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ge1/z_en_ge1.o (.sdata)
            build/data/overlays/actors/z_en_ge1.data.o (.sdata)
            build/data/overlays/actors/z_en_ge1.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Ge1SegmentSDataEnd = .;
        _ovl_En_Ge1SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ge1/z_en_ge1.o (.ovl)
            build/data/overlays/actors/z_en_ge1.data.o (.ovl)
            build/data/overlays/actors/z_en_ge1.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Ge1SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Ge1SegmentOvlEnd - _ovl_En_Ge1SegmentTextStart );
    _ovl_En_Ge1SegmentRomEnd = _RomSize;

    ..ovl_En_Ge1.bss ADDR(..ovl_En_Ge1) + SIZEOF(..ovl_En_Ge1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Ge1SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ge1/z_en_ge1.o (.sbss)
            build/data/overlays/actors/z_en_ge1.data.o (.sbss)
            build/data/overlays/actors/z_en_ge1.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ge1/z_en_ge1.o (.scommon)
            build/data/overlays/actors/z_en_ge1.data.o (.scommon)
            build/data/overlays/actors/z_en_ge1.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ge1/z_en_ge1.o (.bss)
            build/data/overlays/actors/z_en_ge1.data.o (.bss)
            build/data/overlays/actors/z_en_ge1.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ge1/z_en_ge1.o (COMMON)
            build/data/overlays/actors/z_en_ge1.data.o (COMMON)
            build/data/overlays/actors/z_en_ge1.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Ge1SegmentBssEnd = .;
        _ovl_En_Ge1SegmentEnd = .;
    }
    _ovl_En_Ge1SegmentBssSize = ABSOLUTE( _ovl_En_Ge1SegmentBssEnd - _ovl_En_Ge1SegmentBssStart );

    _ovl_En_Ge2SegmentRomStart = _RomSize;
    ..ovl_En_Ge2 : AT(_RomSize)
    {
        _ovl_En_Ge2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Ge2SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ge2/z_en_ge2.o (.text)
            build/data/overlays/actors/z_en_ge2.data.o (.text)
            build/data/overlays/actors/z_en_ge2.reloc.o (.text)
        _ovl_En_Ge2SegmentTextEnd = .;
    _ovl_En_Ge2SegmentTextSize = ABSOLUTE( _ovl_En_Ge2SegmentTextEnd - _ovl_En_Ge2SegmentTextStart );
        _ovl_En_Ge2SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ge2/z_en_ge2.o (.data)
            build/data/overlays/actors/z_en_ge2.data.o (.data)
            build/data/overlays/actors/z_en_ge2.reloc.o (.data)
        _ovl_En_Ge2SegmentDataEnd = .;
    _ovl_En_Ge2SegmentDataSize = ABSOLUTE( _ovl_En_Ge2SegmentDataEnd - _ovl_En_Ge2SegmentDataStart );
        _ovl_En_Ge2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ge2/z_en_ge2.o (.rodata)
            build/data/overlays/actors/z_en_ge2.data.o (.rodata)
            build/data/overlays/actors/z_en_ge2.reloc.o (.rodata)
        _ovl_En_Ge2SegmentRoDataEnd = .;
    _ovl_En_Ge2SegmentRoDataSize = ABSOLUTE( _ovl_En_Ge2SegmentRoDataEnd - _ovl_En_Ge2SegmentRoDataStart );
        _ovl_En_Ge2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ge2/z_en_ge2.o (.sdata)
            build/data/overlays/actors/z_en_ge2.data.o (.sdata)
            build/data/overlays/actors/z_en_ge2.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Ge2SegmentSDataEnd = .;
        _ovl_En_Ge2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ge2/z_en_ge2.o (.ovl)
            build/data/overlays/actors/z_en_ge2.data.o (.ovl)
            build/data/overlays/actors/z_en_ge2.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Ge2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Ge2SegmentOvlEnd - _ovl_En_Ge2SegmentTextStart );
    _ovl_En_Ge2SegmentRomEnd = _RomSize;

    ..ovl_En_Ge2.bss ADDR(..ovl_En_Ge2) + SIZEOF(..ovl_En_Ge2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Ge2SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ge2/z_en_ge2.o (.sbss)
            build/data/overlays/actors/z_en_ge2.data.o (.sbss)
            build/data/overlays/actors/z_en_ge2.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ge2/z_en_ge2.o (.scommon)
            build/data/overlays/actors/z_en_ge2.data.o (.scommon)
            build/data/overlays/actors/z_en_ge2.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ge2/z_en_ge2.o (.bss)
            build/data/overlays/actors/z_en_ge2.data.o (.bss)
            build/data/overlays/actors/z_en_ge2.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ge2/z_en_ge2.o (COMMON)
            build/data/overlays/actors/z_en_ge2.data.o (COMMON)
            build/data/overlays/actors/z_en_ge2.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Ge2SegmentBssEnd = .;
        _ovl_En_Ge2SegmentEnd = .;
    }
    _ovl_En_Ge2SegmentBssSize = ABSOLUTE( _ovl_En_Ge2SegmentBssEnd - _ovl_En_Ge2SegmentBssStart );

    _ovl_En_Ge3SegmentRomStart = _RomSize;
    ..ovl_En_Ge3 : AT(_RomSize)
    {
        _ovl_En_Ge3SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Ge3SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ge3/z_en_ge3.o (.text)
            build/data/overlays/actors/z_en_ge3.data.o (.text)
            build/data/overlays/actors/z_en_ge3.reloc.o (.text)
        _ovl_En_Ge3SegmentTextEnd = .;
    _ovl_En_Ge3SegmentTextSize = ABSOLUTE( _ovl_En_Ge3SegmentTextEnd - _ovl_En_Ge3SegmentTextStart );
        _ovl_En_Ge3SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ge3/z_en_ge3.o (.data)
            build/data/overlays/actors/z_en_ge3.data.o (.data)
            build/data/overlays/actors/z_en_ge3.reloc.o (.data)
        _ovl_En_Ge3SegmentDataEnd = .;
    _ovl_En_Ge3SegmentDataSize = ABSOLUTE( _ovl_En_Ge3SegmentDataEnd - _ovl_En_Ge3SegmentDataStart );
        _ovl_En_Ge3SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ge3/z_en_ge3.o (.rodata)
            build/data/overlays/actors/z_en_ge3.data.o (.rodata)
            build/data/overlays/actors/z_en_ge3.reloc.o (.rodata)
        _ovl_En_Ge3SegmentRoDataEnd = .;
    _ovl_En_Ge3SegmentRoDataSize = ABSOLUTE( _ovl_En_Ge3SegmentRoDataEnd - _ovl_En_Ge3SegmentRoDataStart );
        _ovl_En_Ge3SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ge3/z_en_ge3.o (.sdata)
            build/data/overlays/actors/z_en_ge3.data.o (.sdata)
            build/data/overlays/actors/z_en_ge3.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Ge3SegmentSDataEnd = .;
        _ovl_En_Ge3SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ge3/z_en_ge3.o (.ovl)
            build/data/overlays/actors/z_en_ge3.data.o (.ovl)
            build/data/overlays/actors/z_en_ge3.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Ge3SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Ge3SegmentOvlEnd - _ovl_En_Ge3SegmentTextStart );
    _ovl_En_Ge3SegmentRomEnd = _RomSize;

    ..ovl_En_Ge3.bss ADDR(..ovl_En_Ge3) + SIZEOF(..ovl_En_Ge3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Ge3SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ge3/z_en_ge3.o (.sbss)
            build/data/overlays/actors/z_en_ge3.data.o (.sbss)
            build/data/overlays/actors/z_en_ge3.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ge3/z_en_ge3.o (.scommon)
            build/data/overlays/actors/z_en_ge3.data.o (.scommon)
            build/data/overlays/actors/z_en_ge3.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ge3/z_en_ge3.o (.bss)
            build/data/overlays/actors/z_en_ge3.data.o (.bss)
            build/data/overlays/actors/z_en_ge3.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ge3/z_en_ge3.o (COMMON)
            build/data/overlays/actors/z_en_ge3.data.o (COMMON)
            build/data/overlays/actors/z_en_ge3.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Ge3SegmentBssEnd = .;
        _ovl_En_Ge3SegmentEnd = .;
    }
    _ovl_En_Ge3SegmentBssSize = ABSOLUTE( _ovl_En_Ge3SegmentBssEnd - _ovl_En_Ge3SegmentBssStart );

    _ovl_En_GeldBSegmentRomStart = _RomSize;
    ..ovl_En_GeldB : AT(_RomSize)
    {
        _ovl_En_GeldBSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_GeldBSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_GeldB/z_en_geldb.o (.text)
            build/data/overlays/actors/z_en_geldb.data.o (.text)
            build/data/overlays/actors/z_en_geldb.reloc.o (.text)
        _ovl_En_GeldBSegmentTextEnd = .;
    _ovl_En_GeldBSegmentTextSize = ABSOLUTE( _ovl_En_GeldBSegmentTextEnd - _ovl_En_GeldBSegmentTextStart );
        _ovl_En_GeldBSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_GeldB/z_en_geldb.o (.data)
            build/data/overlays/actors/z_en_geldb.data.o (.data)
            build/data/overlays/actors/z_en_geldb.reloc.o (.data)
        _ovl_En_GeldBSegmentDataEnd = .;
    _ovl_En_GeldBSegmentDataSize = ABSOLUTE( _ovl_En_GeldBSegmentDataEnd - _ovl_En_GeldBSegmentDataStart );
        _ovl_En_GeldBSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_GeldB/z_en_geldb.o (.rodata)
            build/data/overlays/actors/z_en_geldb.data.o (.rodata)
            build/data/overlays/actors/z_en_geldb.reloc.o (.rodata)
        _ovl_En_GeldBSegmentRoDataEnd = .;
    _ovl_En_GeldBSegmentRoDataSize = ABSOLUTE( _ovl_En_GeldBSegmentRoDataEnd - _ovl_En_GeldBSegmentRoDataStart );
        _ovl_En_GeldBSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_GeldB/z_en_geldb.o (.sdata)
            build/data/overlays/actors/z_en_geldb.data.o (.sdata)
            build/data/overlays/actors/z_en_geldb.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_GeldBSegmentSDataEnd = .;
        _ovl_En_GeldBSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_GeldB/z_en_geldb.o (.ovl)
            build/data/overlays/actors/z_en_geldb.data.o (.ovl)
            build/data/overlays/actors/z_en_geldb.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_GeldBSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_GeldBSegmentOvlEnd - _ovl_En_GeldBSegmentTextStart );
    _ovl_En_GeldBSegmentRomEnd = _RomSize;

    ..ovl_En_GeldB.bss ADDR(..ovl_En_GeldB) + SIZEOF(..ovl_En_GeldB) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_GeldBSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_GeldB/z_en_geldb.o (.sbss)
            build/data/overlays/actors/z_en_geldb.data.o (.sbss)
            build/data/overlays/actors/z_en_geldb.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_GeldB/z_en_geldb.o (.scommon)
            build/data/overlays/actors/z_en_geldb.data.o (.scommon)
            build/data/overlays/actors/z_en_geldb.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_GeldB/z_en_geldb.o (.bss)
            build/data/overlays/actors/z_en_geldb.data.o (.bss)
            build/data/overlays/actors/z_en_geldb.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_GeldB/z_en_geldb.o (COMMON)
            build/data/overlays/actors/z_en_geldb.data.o (COMMON)
            build/data/overlays/actors/z_en_geldb.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_GeldBSegmentBssEnd = .;
        _ovl_En_GeldBSegmentEnd = .;
    }
    _ovl_En_GeldBSegmentBssSize = ABSOLUTE( _ovl_En_GeldBSegmentBssEnd - _ovl_En_GeldBSegmentBssStart );

    _ovl_En_GirlASegmentRomStart = _RomSize;
    ..ovl_En_GirlA : AT(_RomSize)
    {
        _ovl_En_GirlASegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_GirlASegmentTextStart = .;
            build/src/overlays/actors/ovl_En_GirlA/z_en_girla.o (.text)
            build/src/overlays/actors/ovl_En_GirlA/ovl_En_GirlA_reloc.o (.text)
        _ovl_En_GirlASegmentTextEnd = .;
    _ovl_En_GirlASegmentTextSize = ABSOLUTE( _ovl_En_GirlASegmentTextEnd - _ovl_En_GirlASegmentTextStart );
        _ovl_En_GirlASegmentDataStart = .;
            build/src/overlays/actors/ovl_En_GirlA/z_en_girla.o (.data)
            build/src/overlays/actors/ovl_En_GirlA/ovl_En_GirlA_reloc.o (.data)
        _ovl_En_GirlASegmentDataEnd = .;
    _ovl_En_GirlASegmentDataSize = ABSOLUTE( _ovl_En_GirlASegmentDataEnd - _ovl_En_GirlASegmentDataStart );
        _ovl_En_GirlASegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_GirlA/z_en_girla.o (.rodata)
            build/src/overlays/actors/ovl_En_GirlA/ovl_En_GirlA_reloc.o (.rodata)
        _ovl_En_GirlASegmentRoDataEnd = .;
    _ovl_En_GirlASegmentRoDataSize = ABSOLUTE( _ovl_En_GirlASegmentRoDataEnd - _ovl_En_GirlASegmentRoDataStart );
        _ovl_En_GirlASegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_GirlA/z_en_girla.o (.sdata)
            build/src/overlays/actors/ovl_En_GirlA/ovl_En_GirlA_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_GirlASegmentSDataEnd = .;
        _ovl_En_GirlASegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_GirlA/z_en_girla.o (.ovl)
            build/src/overlays/actors/ovl_En_GirlA/ovl_En_GirlA_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_GirlASegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_GirlASegmentOvlEnd - _ovl_En_GirlASegmentTextStart );
    _ovl_En_GirlASegmentRomEnd = _RomSize;

    ..ovl_En_GirlA.bss ADDR(..ovl_En_GirlA) + SIZEOF(..ovl_En_GirlA) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_GirlASegmentBssStart = .;
            build/src/overlays/actors/ovl_En_GirlA/z_en_girla.o (.sbss)
            build/src/overlays/actors/ovl_En_GirlA/ovl_En_GirlA_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_GirlA/z_en_girla.o (.scommon)
            build/src/overlays/actors/ovl_En_GirlA/ovl_En_GirlA_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_GirlA/z_en_girla.o (.bss)
            build/src/overlays/actors/ovl_En_GirlA/ovl_En_GirlA_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_GirlA/z_en_girla.o (COMMON)
            build/src/overlays/actors/ovl_En_GirlA/ovl_En_GirlA_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_GirlASegmentBssEnd = .;
        _ovl_En_GirlASegmentEnd = .;
    }
    _ovl_En_GirlASegmentBssSize = ABSOLUTE( _ovl_En_GirlASegmentBssEnd - _ovl_En_GirlASegmentBssStart );

    _ovl_En_GmSegmentRomStart = _RomSize;
    ..ovl_En_Gm : AT(_RomSize)
    {
        _ovl_En_GmSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_GmSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Gm/z_en_gm.o (.text)
            build/data/overlays/actors/z_en_gm.data.o (.text)
            build/data/overlays/actors/z_en_gm.reloc.o (.text)
        _ovl_En_GmSegmentTextEnd = .;
    _ovl_En_GmSegmentTextSize = ABSOLUTE( _ovl_En_GmSegmentTextEnd - _ovl_En_GmSegmentTextStart );
        _ovl_En_GmSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Gm/z_en_gm.o (.data)
            build/data/overlays/actors/z_en_gm.data.o (.data)
            build/data/overlays/actors/z_en_gm.reloc.o (.data)
        _ovl_En_GmSegmentDataEnd = .;
    _ovl_En_GmSegmentDataSize = ABSOLUTE( _ovl_En_GmSegmentDataEnd - _ovl_En_GmSegmentDataStart );
        _ovl_En_GmSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Gm/z_en_gm.o (.rodata)
            build/data/overlays/actors/z_en_gm.data.o (.rodata)
            build/data/overlays/actors/z_en_gm.reloc.o (.rodata)
        _ovl_En_GmSegmentRoDataEnd = .;
    _ovl_En_GmSegmentRoDataSize = ABSOLUTE( _ovl_En_GmSegmentRoDataEnd - _ovl_En_GmSegmentRoDataStart );
        _ovl_En_GmSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Gm/z_en_gm.o (.sdata)
            build/data/overlays/actors/z_en_gm.data.o (.sdata)
            build/data/overlays/actors/z_en_gm.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_GmSegmentSDataEnd = .;
        _ovl_En_GmSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Gm/z_en_gm.o (.ovl)
            build/data/overlays/actors/z_en_gm.data.o (.ovl)
            build/data/overlays/actors/z_en_gm.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_GmSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_GmSegmentOvlEnd - _ovl_En_GmSegmentTextStart );
    _ovl_En_GmSegmentRomEnd = _RomSize;

    ..ovl_En_Gm.bss ADDR(..ovl_En_Gm) + SIZEOF(..ovl_En_Gm) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_GmSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Gm/z_en_gm.o (.sbss)
            build/data/overlays/actors/z_en_gm.data.o (.sbss)
            build/data/overlays/actors/z_en_gm.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Gm/z_en_gm.o (.scommon)
            build/data/overlays/actors/z_en_gm.data.o (.scommon)
            build/data/overlays/actors/z_en_gm.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Gm/z_en_gm.o (.bss)
            build/data/overlays/actors/z_en_gm.data.o (.bss)
            build/data/overlays/actors/z_en_gm.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Gm/z_en_gm.o (COMMON)
            build/data/overlays/actors/z_en_gm.data.o (COMMON)
            build/data/overlays/actors/z_en_gm.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_GmSegmentBssEnd = .;
        _ovl_En_GmSegmentEnd = .;
    }
    _ovl_En_GmSegmentBssSize = ABSOLUTE( _ovl_En_GmSegmentBssEnd - _ovl_En_GmSegmentBssStart );

    _ovl_En_GoSegmentRomStart = _RomSize;
    ..ovl_En_Go : AT(_RomSize)
    {
        _ovl_En_GoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_GoSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Go/z_en_go.o (.text)
            build/data/overlays/actors/z_en_go.data.o (.text)
            build/data/overlays/actors/z_en_go.rodata.o (.text)
            build/data/overlays/actors/z_en_go.reloc.o (.text)
        _ovl_En_GoSegmentTextEnd = .;
    _ovl_En_GoSegmentTextSize = ABSOLUTE( _ovl_En_GoSegmentTextEnd - _ovl_En_GoSegmentTextStart );
        _ovl_En_GoSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Go/z_en_go.o (.data)
            build/data/overlays/actors/z_en_go.data.o (.data)
            build/data/overlays/actors/z_en_go.rodata.o (.data)
            build/data/overlays/actors/z_en_go.reloc.o (.data)
        _ovl_En_GoSegmentDataEnd = .;
    _ovl_En_GoSegmentDataSize = ABSOLUTE( _ovl_En_GoSegmentDataEnd - _ovl_En_GoSegmentDataStart );
        _ovl_En_GoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Go/z_en_go.o (.rodata)
            build/data/overlays/actors/z_en_go.data.o (.rodata)
            build/data/overlays/actors/z_en_go.rodata.o (.rodata)
            build/data/overlays/actors/z_en_go.reloc.o (.rodata)
        _ovl_En_GoSegmentRoDataEnd = .;
    _ovl_En_GoSegmentRoDataSize = ABSOLUTE( _ovl_En_GoSegmentRoDataEnd - _ovl_En_GoSegmentRoDataStart );
        _ovl_En_GoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Go/z_en_go.o (.sdata)
            build/data/overlays/actors/z_en_go.data.o (.sdata)
            build/data/overlays/actors/z_en_go.rodata.o (.sdata)
            build/data/overlays/actors/z_en_go.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_GoSegmentSDataEnd = .;
        _ovl_En_GoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Go/z_en_go.o (.ovl)
            build/data/overlays/actors/z_en_go.data.o (.ovl)
            build/data/overlays/actors/z_en_go.rodata.o (.ovl)
            build/data/overlays/actors/z_en_go.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_GoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_GoSegmentOvlEnd - _ovl_En_GoSegmentTextStart );
    _ovl_En_GoSegmentRomEnd = _RomSize;

    ..ovl_En_Go.bss ADDR(..ovl_En_Go) + SIZEOF(..ovl_En_Go) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_GoSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Go/z_en_go.o (.sbss)
            build/data/overlays/actors/z_en_go.data.o (.sbss)
            build/data/overlays/actors/z_en_go.rodata.o (.sbss)
            build/data/overlays/actors/z_en_go.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Go/z_en_go.o (.scommon)
            build/data/overlays/actors/z_en_go.data.o (.scommon)
            build/data/overlays/actors/z_en_go.rodata.o (.scommon)
            build/data/overlays/actors/z_en_go.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Go/z_en_go.o (.bss)
            build/data/overlays/actors/z_en_go.data.o (.bss)
            build/data/overlays/actors/z_en_go.rodata.o (.bss)
            build/data/overlays/actors/z_en_go.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Go/z_en_go.o (COMMON)
            build/data/overlays/actors/z_en_go.data.o (COMMON)
            build/data/overlays/actors/z_en_go.rodata.o (COMMON)
            build/data/overlays/actors/z_en_go.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_GoSegmentBssEnd = .;
        _ovl_En_GoSegmentEnd = .;
    }
    _ovl_En_GoSegmentBssSize = ABSOLUTE( _ovl_En_GoSegmentBssEnd - _ovl_En_GoSegmentBssStart );

    _ovl_En_Go2SegmentRomStart = _RomSize;
    ..ovl_En_Go2 : AT(_RomSize)
    {
        _ovl_En_Go2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Go2SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Go2/z_en_go2.o (.text)
            build/data/overlays/actors/z_en_go2.data.o (.text)
            build/data/overlays/actors/z_en_go2.reloc.o (.text)
        _ovl_En_Go2SegmentTextEnd = .;
    _ovl_En_Go2SegmentTextSize = ABSOLUTE( _ovl_En_Go2SegmentTextEnd - _ovl_En_Go2SegmentTextStart );
        _ovl_En_Go2SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Go2/z_en_go2.o (.data)
            build/data/overlays/actors/z_en_go2.data.o (.data)
            build/data/overlays/actors/z_en_go2.reloc.o (.data)
        _ovl_En_Go2SegmentDataEnd = .;
    _ovl_En_Go2SegmentDataSize = ABSOLUTE( _ovl_En_Go2SegmentDataEnd - _ovl_En_Go2SegmentDataStart );
        _ovl_En_Go2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Go2/z_en_go2.o (.rodata)
            build/data/overlays/actors/z_en_go2.data.o (.rodata)
            build/data/overlays/actors/z_en_go2.reloc.o (.rodata)
        _ovl_En_Go2SegmentRoDataEnd = .;
    _ovl_En_Go2SegmentRoDataSize = ABSOLUTE( _ovl_En_Go2SegmentRoDataEnd - _ovl_En_Go2SegmentRoDataStart );
        _ovl_En_Go2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Go2/z_en_go2.o (.sdata)
            build/data/overlays/actors/z_en_go2.data.o (.sdata)
            build/data/overlays/actors/z_en_go2.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Go2SegmentSDataEnd = .;
        _ovl_En_Go2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Go2/z_en_go2.o (.ovl)
            build/data/overlays/actors/z_en_go2.data.o (.ovl)
            build/data/overlays/actors/z_en_go2.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Go2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Go2SegmentOvlEnd - _ovl_En_Go2SegmentTextStart );
    _ovl_En_Go2SegmentRomEnd = _RomSize;

    ..ovl_En_Go2.bss ADDR(..ovl_En_Go2) + SIZEOF(..ovl_En_Go2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Go2SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Go2/z_en_go2.o (.sbss)
            build/data/overlays/actors/z_en_go2.data.o (.sbss)
            build/data/overlays/actors/z_en_go2.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Go2/z_en_go2.o (.scommon)
            build/data/overlays/actors/z_en_go2.data.o (.scommon)
            build/data/overlays/actors/z_en_go2.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Go2/z_en_go2.o (.bss)
            build/data/overlays/actors/z_en_go2.data.o (.bss)
            build/data/overlays/actors/z_en_go2.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Go2/z_en_go2.o (COMMON)
            build/data/overlays/actors/z_en_go2.data.o (COMMON)
            build/data/overlays/actors/z_en_go2.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Go2SegmentBssEnd = .;
        _ovl_En_Go2SegmentEnd = .;
    }
    _ovl_En_Go2SegmentBssSize = ABSOLUTE( _ovl_En_Go2SegmentBssEnd - _ovl_En_Go2SegmentBssStart );

    _ovl_En_GomaSegmentRomStart = _RomSize;
    ..ovl_En_Goma : AT(_RomSize)
    {
        _ovl_En_GomaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_GomaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Goma/z_en_goma.o (.text)
            build/data/overlays/actors/z_en_goma.data.o (.text)
            build/data/overlays/actors/z_en_goma.reloc.o (.text)
        _ovl_En_GomaSegmentTextEnd = .;
    _ovl_En_GomaSegmentTextSize = ABSOLUTE( _ovl_En_GomaSegmentTextEnd - _ovl_En_GomaSegmentTextStart );
        _ovl_En_GomaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Goma/z_en_goma.o (.data)
            build/data/overlays/actors/z_en_goma.data.o (.data)
            build/data/overlays/actors/z_en_goma.reloc.o (.data)
        _ovl_En_GomaSegmentDataEnd = .;
    _ovl_En_GomaSegmentDataSize = ABSOLUTE( _ovl_En_GomaSegmentDataEnd - _ovl_En_GomaSegmentDataStart );
        _ovl_En_GomaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Goma/z_en_goma.o (.rodata)
            build/data/overlays/actors/z_en_goma.data.o (.rodata)
            build/data/overlays/actors/z_en_goma.reloc.o (.rodata)
        _ovl_En_GomaSegmentRoDataEnd = .;
    _ovl_En_GomaSegmentRoDataSize = ABSOLUTE( _ovl_En_GomaSegmentRoDataEnd - _ovl_En_GomaSegmentRoDataStart );
        _ovl_En_GomaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Goma/z_en_goma.o (.sdata)
            build/data/overlays/actors/z_en_goma.data.o (.sdata)
            build/data/overlays/actors/z_en_goma.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_GomaSegmentSDataEnd = .;
        _ovl_En_GomaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Goma/z_en_goma.o (.ovl)
            build/data/overlays/actors/z_en_goma.data.o (.ovl)
            build/data/overlays/actors/z_en_goma.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_GomaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_GomaSegmentOvlEnd - _ovl_En_GomaSegmentTextStart );
    _ovl_En_GomaSegmentRomEnd = _RomSize;

    ..ovl_En_Goma.bss ADDR(..ovl_En_Goma) + SIZEOF(..ovl_En_Goma) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_GomaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Goma/z_en_goma.o (.sbss)
            build/data/overlays/actors/z_en_goma.data.o (.sbss)
            build/data/overlays/actors/z_en_goma.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Goma/z_en_goma.o (.scommon)
            build/data/overlays/actors/z_en_goma.data.o (.scommon)
            build/data/overlays/actors/z_en_goma.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Goma/z_en_goma.o (.bss)
            build/data/overlays/actors/z_en_goma.data.o (.bss)
            build/data/overlays/actors/z_en_goma.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Goma/z_en_goma.o (COMMON)
            build/data/overlays/actors/z_en_goma.data.o (COMMON)
            build/data/overlays/actors/z_en_goma.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_GomaSegmentBssEnd = .;
        _ovl_En_GomaSegmentEnd = .;
    }
    _ovl_En_GomaSegmentBssSize = ABSOLUTE( _ovl_En_GomaSegmentBssEnd - _ovl_En_GomaSegmentBssStart );

    _ovl_En_GoroiwaSegmentRomStart = _RomSize;
    ..ovl_En_Goroiwa : AT(_RomSize)
    {
        _ovl_En_GoroiwaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_GoroiwaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Goroiwa/z_en_goroiwa.o (.text)
            build/src/overlays/actors/ovl_En_Goroiwa/ovl_En_Goroiwa_reloc.o (.text)
        _ovl_En_GoroiwaSegmentTextEnd = .;
    _ovl_En_GoroiwaSegmentTextSize = ABSOLUTE( _ovl_En_GoroiwaSegmentTextEnd - _ovl_En_GoroiwaSegmentTextStart );
        _ovl_En_GoroiwaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Goroiwa/z_en_goroiwa.o (.data)
            build/src/overlays/actors/ovl_En_Goroiwa/ovl_En_Goroiwa_reloc.o (.data)
        _ovl_En_GoroiwaSegmentDataEnd = .;
    _ovl_En_GoroiwaSegmentDataSize = ABSOLUTE( _ovl_En_GoroiwaSegmentDataEnd - _ovl_En_GoroiwaSegmentDataStart );
        _ovl_En_GoroiwaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Goroiwa/z_en_goroiwa.o (.rodata)
            build/src/overlays/actors/ovl_En_Goroiwa/ovl_En_Goroiwa_reloc.o (.rodata)
        _ovl_En_GoroiwaSegmentRoDataEnd = .;
    _ovl_En_GoroiwaSegmentRoDataSize = ABSOLUTE( _ovl_En_GoroiwaSegmentRoDataEnd - _ovl_En_GoroiwaSegmentRoDataStart );
        _ovl_En_GoroiwaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Goroiwa/z_en_goroiwa.o (.sdata)
            build/src/overlays/actors/ovl_En_Goroiwa/ovl_En_Goroiwa_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_GoroiwaSegmentSDataEnd = .;
        _ovl_En_GoroiwaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Goroiwa/z_en_goroiwa.o (.ovl)
            build/src/overlays/actors/ovl_En_Goroiwa/ovl_En_Goroiwa_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_GoroiwaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_GoroiwaSegmentOvlEnd - _ovl_En_GoroiwaSegmentTextStart );
    _ovl_En_GoroiwaSegmentRomEnd = _RomSize;

    ..ovl_En_Goroiwa.bss ADDR(..ovl_En_Goroiwa) + SIZEOF(..ovl_En_Goroiwa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_GoroiwaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Goroiwa/z_en_goroiwa.o (.sbss)
            build/src/overlays/actors/ovl_En_Goroiwa/ovl_En_Goroiwa_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Goroiwa/z_en_goroiwa.o (.scommon)
            build/src/overlays/actors/ovl_En_Goroiwa/ovl_En_Goroiwa_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Goroiwa/z_en_goroiwa.o (.bss)
            build/src/overlays/actors/ovl_En_Goroiwa/ovl_En_Goroiwa_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Goroiwa/z_en_goroiwa.o (COMMON)
            build/src/overlays/actors/ovl_En_Goroiwa/ovl_En_Goroiwa_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_GoroiwaSegmentBssEnd = .;
        _ovl_En_GoroiwaSegmentEnd = .;
    }
    _ovl_En_GoroiwaSegmentBssSize = ABSOLUTE( _ovl_En_GoroiwaSegmentBssEnd - _ovl_En_GoroiwaSegmentBssStart );

    _ovl_En_GsSegmentRomStart = _RomSize;
    ..ovl_En_Gs : AT(_RomSize)
    {
        _ovl_En_GsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_GsSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Gs/z_en_gs.o (.text)
            build/src/overlays/actors/ovl_En_Gs/ovl_En_Gs_reloc.o (.text)
        _ovl_En_GsSegmentTextEnd = .;
    _ovl_En_GsSegmentTextSize = ABSOLUTE( _ovl_En_GsSegmentTextEnd - _ovl_En_GsSegmentTextStart );
        _ovl_En_GsSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Gs/z_en_gs.o (.data)
            build/src/overlays/actors/ovl_En_Gs/ovl_En_Gs_reloc.o (.data)
        _ovl_En_GsSegmentDataEnd = .;
    _ovl_En_GsSegmentDataSize = ABSOLUTE( _ovl_En_GsSegmentDataEnd - _ovl_En_GsSegmentDataStart );
        _ovl_En_GsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Gs/z_en_gs.o (.rodata)
            build/src/overlays/actors/ovl_En_Gs/ovl_En_Gs_reloc.o (.rodata)
        _ovl_En_GsSegmentRoDataEnd = .;
    _ovl_En_GsSegmentRoDataSize = ABSOLUTE( _ovl_En_GsSegmentRoDataEnd - _ovl_En_GsSegmentRoDataStart );
        _ovl_En_GsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Gs/z_en_gs.o (.sdata)
            build/src/overlays/actors/ovl_En_Gs/ovl_En_Gs_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_GsSegmentSDataEnd = .;
        _ovl_En_GsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Gs/z_en_gs.o (.ovl)
            build/src/overlays/actors/ovl_En_Gs/ovl_En_Gs_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_GsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_GsSegmentOvlEnd - _ovl_En_GsSegmentTextStart );
    _ovl_En_GsSegmentRomEnd = _RomSize;

    ..ovl_En_Gs.bss ADDR(..ovl_En_Gs) + SIZEOF(..ovl_En_Gs) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_GsSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Gs/z_en_gs.o (.sbss)
            build/src/overlays/actors/ovl_En_Gs/ovl_En_Gs_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Gs/z_en_gs.o (.scommon)
            build/src/overlays/actors/ovl_En_Gs/ovl_En_Gs_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Gs/z_en_gs.o (.bss)
            build/src/overlays/actors/ovl_En_Gs/ovl_En_Gs_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Gs/z_en_gs.o (COMMON)
            build/src/overlays/actors/ovl_En_Gs/ovl_En_Gs_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_GsSegmentBssEnd = .;
        _ovl_En_GsSegmentEnd = .;
    }
    _ovl_En_GsSegmentBssSize = ABSOLUTE( _ovl_En_GsSegmentBssEnd - _ovl_En_GsSegmentBssStart );

    _ovl_En_GuestSegmentRomStart = _RomSize;
    ..ovl_En_Guest : AT(_RomSize)
    {
        _ovl_En_GuestSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_GuestSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Guest/z_en_guest.o (.text)
            build/src/overlays/actors/ovl_En_Guest/ovl_En_Guest_reloc.o (.text)
        _ovl_En_GuestSegmentTextEnd = .;
    _ovl_En_GuestSegmentTextSize = ABSOLUTE( _ovl_En_GuestSegmentTextEnd - _ovl_En_GuestSegmentTextStart );
        _ovl_En_GuestSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Guest/z_en_guest.o (.data)
            build/src/overlays/actors/ovl_En_Guest/ovl_En_Guest_reloc.o (.data)
        _ovl_En_GuestSegmentDataEnd = .;
    _ovl_En_GuestSegmentDataSize = ABSOLUTE( _ovl_En_GuestSegmentDataEnd - _ovl_En_GuestSegmentDataStart );
        _ovl_En_GuestSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Guest/z_en_guest.o (.rodata)
            build/src/overlays/actors/ovl_En_Guest/ovl_En_Guest_reloc.o (.rodata)
        _ovl_En_GuestSegmentRoDataEnd = .;
    _ovl_En_GuestSegmentRoDataSize = ABSOLUTE( _ovl_En_GuestSegmentRoDataEnd - _ovl_En_GuestSegmentRoDataStart );
        _ovl_En_GuestSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Guest/z_en_guest.o (.sdata)
            build/src/overlays/actors/ovl_En_Guest/ovl_En_Guest_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_GuestSegmentSDataEnd = .;
        _ovl_En_GuestSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Guest/z_en_guest.o (.ovl)
            build/src/overlays/actors/ovl_En_Guest/ovl_En_Guest_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_GuestSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_GuestSegmentOvlEnd - _ovl_En_GuestSegmentTextStart );
    _ovl_En_GuestSegmentRomEnd = _RomSize;

    ..ovl_En_Guest.bss ADDR(..ovl_En_Guest) + SIZEOF(..ovl_En_Guest) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_GuestSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Guest/z_en_guest.o (.sbss)
            build/src/overlays/actors/ovl_En_Guest/ovl_En_Guest_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Guest/z_en_guest.o (.scommon)
            build/src/overlays/actors/ovl_En_Guest/ovl_En_Guest_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Guest/z_en_guest.o (.bss)
            build/src/overlays/actors/ovl_En_Guest/ovl_En_Guest_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Guest/z_en_guest.o (COMMON)
            build/src/overlays/actors/ovl_En_Guest/ovl_En_Guest_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_GuestSegmentBssEnd = .;
        _ovl_En_GuestSegmentEnd = .;
    }
    _ovl_En_GuestSegmentBssSize = ABSOLUTE( _ovl_En_GuestSegmentBssEnd - _ovl_En_GuestSegmentBssStart );

    _ovl_En_HataSegmentRomStart = _RomSize;
    ..ovl_En_Hata : AT(_RomSize)
    {
        _ovl_En_HataSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_HataSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Hata/z_en_hata.o (.text)
            build/src/overlays/actors/ovl_En_Hata/ovl_En_Hata_reloc.o (.text)
        _ovl_En_HataSegmentTextEnd = .;
    _ovl_En_HataSegmentTextSize = ABSOLUTE( _ovl_En_HataSegmentTextEnd - _ovl_En_HataSegmentTextStart );
        _ovl_En_HataSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Hata/z_en_hata.o (.data)
            build/src/overlays/actors/ovl_En_Hata/ovl_En_Hata_reloc.o (.data)
        _ovl_En_HataSegmentDataEnd = .;
    _ovl_En_HataSegmentDataSize = ABSOLUTE( _ovl_En_HataSegmentDataEnd - _ovl_En_HataSegmentDataStart );
        _ovl_En_HataSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Hata/z_en_hata.o (.rodata)
            build/src/overlays/actors/ovl_En_Hata/ovl_En_Hata_reloc.o (.rodata)
        _ovl_En_HataSegmentRoDataEnd = .;
    _ovl_En_HataSegmentRoDataSize = ABSOLUTE( _ovl_En_HataSegmentRoDataEnd - _ovl_En_HataSegmentRoDataStart );
        _ovl_En_HataSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Hata/z_en_hata.o (.sdata)
            build/src/overlays/actors/ovl_En_Hata/ovl_En_Hata_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_HataSegmentSDataEnd = .;
        _ovl_En_HataSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Hata/z_en_hata.o (.ovl)
            build/src/overlays/actors/ovl_En_Hata/ovl_En_Hata_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_HataSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_HataSegmentOvlEnd - _ovl_En_HataSegmentTextStart );
    _ovl_En_HataSegmentRomEnd = _RomSize;

    ..ovl_En_Hata.bss ADDR(..ovl_En_Hata) + SIZEOF(..ovl_En_Hata) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_HataSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Hata/z_en_hata.o (.sbss)
            build/src/overlays/actors/ovl_En_Hata/ovl_En_Hata_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Hata/z_en_hata.o (.scommon)
            build/src/overlays/actors/ovl_En_Hata/ovl_En_Hata_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Hata/z_en_hata.o (.bss)
            build/src/overlays/actors/ovl_En_Hata/ovl_En_Hata_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Hata/z_en_hata.o (COMMON)
            build/src/overlays/actors/ovl_En_Hata/ovl_En_Hata_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_HataSegmentBssEnd = .;
        _ovl_En_HataSegmentEnd = .;
    }
    _ovl_En_HataSegmentBssSize = ABSOLUTE( _ovl_En_HataSegmentBssEnd - _ovl_En_HataSegmentBssStart );

    _ovl_En_Heishi1SegmentRomStart = _RomSize;
    ..ovl_En_Heishi1 : AT(_RomSize)
    {
        _ovl_En_Heishi1SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Heishi1SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Heishi1/z_en_heishi1.o (.text)
            build/src/overlays/actors/ovl_En_Heishi1/ovl_En_Heishi1_reloc.o (.text)
        _ovl_En_Heishi1SegmentTextEnd = .;
    _ovl_En_Heishi1SegmentTextSize = ABSOLUTE( _ovl_En_Heishi1SegmentTextEnd - _ovl_En_Heishi1SegmentTextStart );
        _ovl_En_Heishi1SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Heishi1/z_en_heishi1.o (.data)
            build/src/overlays/actors/ovl_En_Heishi1/ovl_En_Heishi1_reloc.o (.data)
        _ovl_En_Heishi1SegmentDataEnd = .;
    _ovl_En_Heishi1SegmentDataSize = ABSOLUTE( _ovl_En_Heishi1SegmentDataEnd - _ovl_En_Heishi1SegmentDataStart );
        _ovl_En_Heishi1SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Heishi1/z_en_heishi1.o (.rodata)
            build/src/overlays/actors/ovl_En_Heishi1/ovl_En_Heishi1_reloc.o (.rodata)
        _ovl_En_Heishi1SegmentRoDataEnd = .;
    _ovl_En_Heishi1SegmentRoDataSize = ABSOLUTE( _ovl_En_Heishi1SegmentRoDataEnd - _ovl_En_Heishi1SegmentRoDataStart );
        _ovl_En_Heishi1SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Heishi1/z_en_heishi1.o (.sdata)
            build/src/overlays/actors/ovl_En_Heishi1/ovl_En_Heishi1_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Heishi1SegmentSDataEnd = .;
        _ovl_En_Heishi1SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Heishi1/z_en_heishi1.o (.ovl)
            build/src/overlays/actors/ovl_En_Heishi1/ovl_En_Heishi1_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Heishi1SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Heishi1SegmentOvlEnd - _ovl_En_Heishi1SegmentTextStart );
    _ovl_En_Heishi1SegmentRomEnd = _RomSize;

    ..ovl_En_Heishi1.bss ADDR(..ovl_En_Heishi1) + SIZEOF(..ovl_En_Heishi1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Heishi1SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Heishi1/z_en_heishi1.o (.sbss)
            build/src/overlays/actors/ovl_En_Heishi1/ovl_En_Heishi1_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Heishi1/z_en_heishi1.o (.scommon)
            build/src/overlays/actors/ovl_En_Heishi1/ovl_En_Heishi1_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Heishi1/z_en_heishi1.o (.bss)
            build/src/overlays/actors/ovl_En_Heishi1/ovl_En_Heishi1_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Heishi1/z_en_heishi1.o (COMMON)
            build/src/overlays/actors/ovl_En_Heishi1/ovl_En_Heishi1_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Heishi1SegmentBssEnd = .;
        _ovl_En_Heishi1SegmentEnd = .;
    }
    _ovl_En_Heishi1SegmentBssSize = ABSOLUTE( _ovl_En_Heishi1SegmentBssEnd - _ovl_En_Heishi1SegmentBssStart );

    _ovl_En_Heishi2SegmentRomStart = _RomSize;
    ..ovl_En_Heishi2 : AT(_RomSize)
    {
        _ovl_En_Heishi2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Heishi2SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Heishi2/z_en_heishi2.o (.text)
            build/src/overlays/actors/ovl_En_Heishi2/ovl_En_Heishi2_reloc.o (.text)
        _ovl_En_Heishi2SegmentTextEnd = .;
    _ovl_En_Heishi2SegmentTextSize = ABSOLUTE( _ovl_En_Heishi2SegmentTextEnd - _ovl_En_Heishi2SegmentTextStart );
        _ovl_En_Heishi2SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Heishi2/z_en_heishi2.o (.data)
            build/src/overlays/actors/ovl_En_Heishi2/ovl_En_Heishi2_reloc.o (.data)
        _ovl_En_Heishi2SegmentDataEnd = .;
    _ovl_En_Heishi2SegmentDataSize = ABSOLUTE( _ovl_En_Heishi2SegmentDataEnd - _ovl_En_Heishi2SegmentDataStart );
        _ovl_En_Heishi2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Heishi2/z_en_heishi2.o (.rodata)
            build/src/overlays/actors/ovl_En_Heishi2/ovl_En_Heishi2_reloc.o (.rodata)
        _ovl_En_Heishi2SegmentRoDataEnd = .;
    _ovl_En_Heishi2SegmentRoDataSize = ABSOLUTE( _ovl_En_Heishi2SegmentRoDataEnd - _ovl_En_Heishi2SegmentRoDataStart );
        _ovl_En_Heishi2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Heishi2/z_en_heishi2.o (.sdata)
            build/src/overlays/actors/ovl_En_Heishi2/ovl_En_Heishi2_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Heishi2SegmentSDataEnd = .;
        _ovl_En_Heishi2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Heishi2/z_en_heishi2.o (.ovl)
            build/src/overlays/actors/ovl_En_Heishi2/ovl_En_Heishi2_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Heishi2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Heishi2SegmentOvlEnd - _ovl_En_Heishi2SegmentTextStart );
    _ovl_En_Heishi2SegmentRomEnd = _RomSize;

    ..ovl_En_Heishi2.bss ADDR(..ovl_En_Heishi2) + SIZEOF(..ovl_En_Heishi2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Heishi2SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Heishi2/z_en_heishi2.o (.sbss)
            build/src/overlays/actors/ovl_En_Heishi2/ovl_En_Heishi2_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Heishi2/z_en_heishi2.o (.scommon)
            build/src/overlays/actors/ovl_En_Heishi2/ovl_En_Heishi2_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Heishi2/z_en_heishi2.o (.bss)
            build/src/overlays/actors/ovl_En_Heishi2/ovl_En_Heishi2_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Heishi2/z_en_heishi2.o (COMMON)
            build/src/overlays/actors/ovl_En_Heishi2/ovl_En_Heishi2_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Heishi2SegmentBssEnd = .;
        _ovl_En_Heishi2SegmentEnd = .;
    }
    _ovl_En_Heishi2SegmentBssSize = ABSOLUTE( _ovl_En_Heishi2SegmentBssEnd - _ovl_En_Heishi2SegmentBssStart );

    _ovl_En_Heishi3SegmentRomStart = _RomSize;
    ..ovl_En_Heishi3 : AT(_RomSize)
    {
        _ovl_En_Heishi3SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Heishi3SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Heishi3/z_en_heishi3.o (.text)
            build/src/overlays/actors/ovl_En_Heishi3/ovl_En_Heishi3_reloc.o (.text)
        _ovl_En_Heishi3SegmentTextEnd = .;
    _ovl_En_Heishi3SegmentTextSize = ABSOLUTE( _ovl_En_Heishi3SegmentTextEnd - _ovl_En_Heishi3SegmentTextStart );
        _ovl_En_Heishi3SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Heishi3/z_en_heishi3.o (.data)
            build/src/overlays/actors/ovl_En_Heishi3/ovl_En_Heishi3_reloc.o (.data)
        _ovl_En_Heishi3SegmentDataEnd = .;
    _ovl_En_Heishi3SegmentDataSize = ABSOLUTE( _ovl_En_Heishi3SegmentDataEnd - _ovl_En_Heishi3SegmentDataStart );
        _ovl_En_Heishi3SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Heishi3/z_en_heishi3.o (.rodata)
            build/src/overlays/actors/ovl_En_Heishi3/ovl_En_Heishi3_reloc.o (.rodata)
        _ovl_En_Heishi3SegmentRoDataEnd = .;
    _ovl_En_Heishi3SegmentRoDataSize = ABSOLUTE( _ovl_En_Heishi3SegmentRoDataEnd - _ovl_En_Heishi3SegmentRoDataStart );
        _ovl_En_Heishi3SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Heishi3/z_en_heishi3.o (.sdata)
            build/src/overlays/actors/ovl_En_Heishi3/ovl_En_Heishi3_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Heishi3SegmentSDataEnd = .;
        _ovl_En_Heishi3SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Heishi3/z_en_heishi3.o (.ovl)
            build/src/overlays/actors/ovl_En_Heishi3/ovl_En_Heishi3_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Heishi3SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Heishi3SegmentOvlEnd - _ovl_En_Heishi3SegmentTextStart );
    _ovl_En_Heishi3SegmentRomEnd = _RomSize;

    ..ovl_En_Heishi3.bss ADDR(..ovl_En_Heishi3) + SIZEOF(..ovl_En_Heishi3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Heishi3SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Heishi3/z_en_heishi3.o (.sbss)
            build/src/overlays/actors/ovl_En_Heishi3/ovl_En_Heishi3_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Heishi3/z_en_heishi3.o (.scommon)
            build/src/overlays/actors/ovl_En_Heishi3/ovl_En_Heishi3_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Heishi3/z_en_heishi3.o (.bss)
            build/src/overlays/actors/ovl_En_Heishi3/ovl_En_Heishi3_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Heishi3/z_en_heishi3.o (COMMON)
            build/src/overlays/actors/ovl_En_Heishi3/ovl_En_Heishi3_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Heishi3SegmentBssEnd = .;
        _ovl_En_Heishi3SegmentEnd = .;
    }
    _ovl_En_Heishi3SegmentBssSize = ABSOLUTE( _ovl_En_Heishi3SegmentBssEnd - _ovl_En_Heishi3SegmentBssStart );

    _ovl_En_Heishi4SegmentRomStart = _RomSize;
    ..ovl_En_Heishi4 : AT(_RomSize)
    {
        _ovl_En_Heishi4SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Heishi4SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Heishi4/z_en_heishi4.o (.text)
            build/src/overlays/actors/ovl_En_Heishi4/ovl_En_Heishi4_reloc.o (.text)
        _ovl_En_Heishi4SegmentTextEnd = .;
    _ovl_En_Heishi4SegmentTextSize = ABSOLUTE( _ovl_En_Heishi4SegmentTextEnd - _ovl_En_Heishi4SegmentTextStart );
        _ovl_En_Heishi4SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Heishi4/z_en_heishi4.o (.data)
            build/src/overlays/actors/ovl_En_Heishi4/ovl_En_Heishi4_reloc.o (.data)
        _ovl_En_Heishi4SegmentDataEnd = .;
    _ovl_En_Heishi4SegmentDataSize = ABSOLUTE( _ovl_En_Heishi4SegmentDataEnd - _ovl_En_Heishi4SegmentDataStart );
        _ovl_En_Heishi4SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Heishi4/z_en_heishi4.o (.rodata)
            build/src/overlays/actors/ovl_En_Heishi4/ovl_En_Heishi4_reloc.o (.rodata)
        _ovl_En_Heishi4SegmentRoDataEnd = .;
    _ovl_En_Heishi4SegmentRoDataSize = ABSOLUTE( _ovl_En_Heishi4SegmentRoDataEnd - _ovl_En_Heishi4SegmentRoDataStart );
        _ovl_En_Heishi4SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Heishi4/z_en_heishi4.o (.sdata)
            build/src/overlays/actors/ovl_En_Heishi4/ovl_En_Heishi4_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Heishi4SegmentSDataEnd = .;
        _ovl_En_Heishi4SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Heishi4/z_en_heishi4.o (.ovl)
            build/src/overlays/actors/ovl_En_Heishi4/ovl_En_Heishi4_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Heishi4SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Heishi4SegmentOvlEnd - _ovl_En_Heishi4SegmentTextStart );
    _ovl_En_Heishi4SegmentRomEnd = _RomSize;

    ..ovl_En_Heishi4.bss ADDR(..ovl_En_Heishi4) + SIZEOF(..ovl_En_Heishi4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Heishi4SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Heishi4/z_en_heishi4.o (.sbss)
            build/src/overlays/actors/ovl_En_Heishi4/ovl_En_Heishi4_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Heishi4/z_en_heishi4.o (.scommon)
            build/src/overlays/actors/ovl_En_Heishi4/ovl_En_Heishi4_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Heishi4/z_en_heishi4.o (.bss)
            build/src/overlays/actors/ovl_En_Heishi4/ovl_En_Heishi4_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Heishi4/z_en_heishi4.o (COMMON)
            build/src/overlays/actors/ovl_En_Heishi4/ovl_En_Heishi4_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Heishi4SegmentBssEnd = .;
        _ovl_En_Heishi4SegmentEnd = .;
    }
    _ovl_En_Heishi4SegmentBssSize = ABSOLUTE( _ovl_En_Heishi4SegmentBssEnd - _ovl_En_Heishi4SegmentBssStart );

    _ovl_En_HintnutsSegmentRomStart = _RomSize;
    ..ovl_En_Hintnuts : AT(_RomSize)
    {
        _ovl_En_HintnutsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_HintnutsSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Hintnuts/z_en_hintnuts.o (.text)
            build/src/overlays/actors/ovl_En_Hintnuts/ovl_En_Hintnuts_reloc.o (.text)
        _ovl_En_HintnutsSegmentTextEnd = .;
    _ovl_En_HintnutsSegmentTextSize = ABSOLUTE( _ovl_En_HintnutsSegmentTextEnd - _ovl_En_HintnutsSegmentTextStart );
        _ovl_En_HintnutsSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Hintnuts/z_en_hintnuts.o (.data)
            build/src/overlays/actors/ovl_En_Hintnuts/ovl_En_Hintnuts_reloc.o (.data)
        _ovl_En_HintnutsSegmentDataEnd = .;
    _ovl_En_HintnutsSegmentDataSize = ABSOLUTE( _ovl_En_HintnutsSegmentDataEnd - _ovl_En_HintnutsSegmentDataStart );
        _ovl_En_HintnutsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Hintnuts/z_en_hintnuts.o (.rodata)
            build/src/overlays/actors/ovl_En_Hintnuts/ovl_En_Hintnuts_reloc.o (.rodata)
        _ovl_En_HintnutsSegmentRoDataEnd = .;
    _ovl_En_HintnutsSegmentRoDataSize = ABSOLUTE( _ovl_En_HintnutsSegmentRoDataEnd - _ovl_En_HintnutsSegmentRoDataStart );
        _ovl_En_HintnutsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Hintnuts/z_en_hintnuts.o (.sdata)
            build/src/overlays/actors/ovl_En_Hintnuts/ovl_En_Hintnuts_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_HintnutsSegmentSDataEnd = .;
        _ovl_En_HintnutsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Hintnuts/z_en_hintnuts.o (.ovl)
            build/src/overlays/actors/ovl_En_Hintnuts/ovl_En_Hintnuts_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_HintnutsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_HintnutsSegmentOvlEnd - _ovl_En_HintnutsSegmentTextStart );
    _ovl_En_HintnutsSegmentRomEnd = _RomSize;

    ..ovl_En_Hintnuts.bss ADDR(..ovl_En_Hintnuts) + SIZEOF(..ovl_En_Hintnuts) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_HintnutsSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Hintnuts/z_en_hintnuts.o (.sbss)
            build/src/overlays/actors/ovl_En_Hintnuts/ovl_En_Hintnuts_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Hintnuts/z_en_hintnuts.o (.scommon)
            build/src/overlays/actors/ovl_En_Hintnuts/ovl_En_Hintnuts_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Hintnuts/z_en_hintnuts.o (.bss)
            build/src/overlays/actors/ovl_En_Hintnuts/ovl_En_Hintnuts_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Hintnuts/z_en_hintnuts.o (COMMON)
            build/src/overlays/actors/ovl_En_Hintnuts/ovl_En_Hintnuts_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_HintnutsSegmentBssEnd = .;
        _ovl_En_HintnutsSegmentEnd = .;
    }
    _ovl_En_HintnutsSegmentBssSize = ABSOLUTE( _ovl_En_HintnutsSegmentBssEnd - _ovl_En_HintnutsSegmentBssStart );

    _ovl_En_HollSegmentRomStart = _RomSize;
    ..ovl_En_Holl : AT(_RomSize)
    {
        _ovl_En_HollSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_HollSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Holl/z_en_holl.o (.text)
            build/data/overlays/actors/z_en_holl.reloc.o (.text)
        _ovl_En_HollSegmentTextEnd = .;
    _ovl_En_HollSegmentTextSize = ABSOLUTE( _ovl_En_HollSegmentTextEnd - _ovl_En_HollSegmentTextStart );
        _ovl_En_HollSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Holl/z_en_holl.o (.data)
            build/data/overlays/actors/z_en_holl.reloc.o (.data)
        _ovl_En_HollSegmentDataEnd = .;
    _ovl_En_HollSegmentDataSize = ABSOLUTE( _ovl_En_HollSegmentDataEnd - _ovl_En_HollSegmentDataStart );
        _ovl_En_HollSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Holl/z_en_holl.o (.rodata)
            build/data/overlays/actors/z_en_holl.reloc.o (.rodata)
        _ovl_En_HollSegmentRoDataEnd = .;
    _ovl_En_HollSegmentRoDataSize = ABSOLUTE( _ovl_En_HollSegmentRoDataEnd - _ovl_En_HollSegmentRoDataStart );
        _ovl_En_HollSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Holl/z_en_holl.o (.sdata)
            build/data/overlays/actors/z_en_holl.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_HollSegmentSDataEnd = .;
        _ovl_En_HollSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Holl/z_en_holl.o (.ovl)
            build/data/overlays/actors/z_en_holl.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_HollSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_HollSegmentOvlEnd - _ovl_En_HollSegmentTextStart );
    _ovl_En_HollSegmentRomEnd = _RomSize;

    ..ovl_En_Holl.bss ADDR(..ovl_En_Holl) + SIZEOF(..ovl_En_Holl) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_HollSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Holl/z_en_holl.o (.sbss)
            build/data/overlays/actors/z_en_holl.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Holl/z_en_holl.o (.scommon)
            build/data/overlays/actors/z_en_holl.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Holl/z_en_holl.o (.bss)
            build/data/overlays/actors/z_en_holl.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Holl/z_en_holl.o (COMMON)
            build/data/overlays/actors/z_en_holl.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_HollSegmentBssEnd = .;
        _ovl_En_HollSegmentEnd = .;
    }
    _ovl_En_HollSegmentBssSize = ABSOLUTE( _ovl_En_HollSegmentBssEnd - _ovl_En_HollSegmentBssStart );

    _ovl_En_HonotrapSegmentRomStart = _RomSize;
    ..ovl_En_Honotrap : AT(_RomSize)
    {
        _ovl_En_HonotrapSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_HonotrapSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Honotrap/z_en_honotrap.o (.text)
            build/data/overlays/actors/z_en_honotrap.data.o (.text)
            build/data/overlays/actors/z_en_honotrap.reloc.o (.text)
        _ovl_En_HonotrapSegmentTextEnd = .;
    _ovl_En_HonotrapSegmentTextSize = ABSOLUTE( _ovl_En_HonotrapSegmentTextEnd - _ovl_En_HonotrapSegmentTextStart );
        _ovl_En_HonotrapSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Honotrap/z_en_honotrap.o (.data)
            build/data/overlays/actors/z_en_honotrap.data.o (.data)
            build/data/overlays/actors/z_en_honotrap.reloc.o (.data)
        _ovl_En_HonotrapSegmentDataEnd = .;
    _ovl_En_HonotrapSegmentDataSize = ABSOLUTE( _ovl_En_HonotrapSegmentDataEnd - _ovl_En_HonotrapSegmentDataStart );
        _ovl_En_HonotrapSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Honotrap/z_en_honotrap.o (.rodata)
            build/data/overlays/actors/z_en_honotrap.data.o (.rodata)
            build/data/overlays/actors/z_en_honotrap.reloc.o (.rodata)
        _ovl_En_HonotrapSegmentRoDataEnd = .;
    _ovl_En_HonotrapSegmentRoDataSize = ABSOLUTE( _ovl_En_HonotrapSegmentRoDataEnd - _ovl_En_HonotrapSegmentRoDataStart );
        _ovl_En_HonotrapSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Honotrap/z_en_honotrap.o (.sdata)
            build/data/overlays/actors/z_en_honotrap.data.o (.sdata)
            build/data/overlays/actors/z_en_honotrap.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_HonotrapSegmentSDataEnd = .;
        _ovl_En_HonotrapSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Honotrap/z_en_honotrap.o (.ovl)
            build/data/overlays/actors/z_en_honotrap.data.o (.ovl)
            build/data/overlays/actors/z_en_honotrap.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_HonotrapSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_HonotrapSegmentOvlEnd - _ovl_En_HonotrapSegmentTextStart );
    _ovl_En_HonotrapSegmentRomEnd = _RomSize;

    ..ovl_En_Honotrap.bss ADDR(..ovl_En_Honotrap) + SIZEOF(..ovl_En_Honotrap) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_HonotrapSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Honotrap/z_en_honotrap.o (.sbss)
            build/data/overlays/actors/z_en_honotrap.data.o (.sbss)
            build/data/overlays/actors/z_en_honotrap.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Honotrap/z_en_honotrap.o (.scommon)
            build/data/overlays/actors/z_en_honotrap.data.o (.scommon)
            build/data/overlays/actors/z_en_honotrap.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Honotrap/z_en_honotrap.o (.bss)
            build/data/overlays/actors/z_en_honotrap.data.o (.bss)
            build/data/overlays/actors/z_en_honotrap.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Honotrap/z_en_honotrap.o (COMMON)
            build/data/overlays/actors/z_en_honotrap.data.o (COMMON)
            build/data/overlays/actors/z_en_honotrap.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_HonotrapSegmentBssEnd = .;
        _ovl_En_HonotrapSegmentEnd = .;
    }
    _ovl_En_HonotrapSegmentBssSize = ABSOLUTE( _ovl_En_HonotrapSegmentBssEnd - _ovl_En_HonotrapSegmentBssStart );

    _ovl_En_HorseSegmentRomStart = _RomSize;
    ..ovl_En_Horse : AT(_RomSize)
    {
        _ovl_En_HorseSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_HorseSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Horse/z_en_horse.o (.text)
            build/data/overlays/actors/z_en_horse.data.o (.text)
            build/data/overlays/actors/z_en_horse.reloc.o (.text)
        _ovl_En_HorseSegmentTextEnd = .;
    _ovl_En_HorseSegmentTextSize = ABSOLUTE( _ovl_En_HorseSegmentTextEnd - _ovl_En_HorseSegmentTextStart );
        _ovl_En_HorseSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Horse/z_en_horse.o (.data)
            build/data/overlays/actors/z_en_horse.data.o (.data)
            build/data/overlays/actors/z_en_horse.reloc.o (.data)
        _ovl_En_HorseSegmentDataEnd = .;
    _ovl_En_HorseSegmentDataSize = ABSOLUTE( _ovl_En_HorseSegmentDataEnd - _ovl_En_HorseSegmentDataStart );
        _ovl_En_HorseSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Horse/z_en_horse.o (.rodata)
            build/data/overlays/actors/z_en_horse.data.o (.rodata)
            build/data/overlays/actors/z_en_horse.reloc.o (.rodata)
        _ovl_En_HorseSegmentRoDataEnd = .;
    _ovl_En_HorseSegmentRoDataSize = ABSOLUTE( _ovl_En_HorseSegmentRoDataEnd - _ovl_En_HorseSegmentRoDataStart );
        _ovl_En_HorseSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Horse/z_en_horse.o (.sdata)
            build/data/overlays/actors/z_en_horse.data.o (.sdata)
            build/data/overlays/actors/z_en_horse.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_HorseSegmentSDataEnd = .;
        _ovl_En_HorseSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Horse/z_en_horse.o (.ovl)
            build/data/overlays/actors/z_en_horse.data.o (.ovl)
            build/data/overlays/actors/z_en_horse.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_HorseSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_HorseSegmentOvlEnd - _ovl_En_HorseSegmentTextStart );
    _ovl_En_HorseSegmentRomEnd = _RomSize;

    ..ovl_En_Horse.bss ADDR(..ovl_En_Horse) + SIZEOF(..ovl_En_Horse) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_HorseSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Horse/z_en_horse.o (.sbss)
            build/data/overlays/actors/z_en_horse.data.o (.sbss)
            build/data/overlays/actors/z_en_horse.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Horse/z_en_horse.o (.scommon)
            build/data/overlays/actors/z_en_horse.data.o (.scommon)
            build/data/overlays/actors/z_en_horse.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Horse/z_en_horse.o (.bss)
            build/data/overlays/actors/z_en_horse.data.o (.bss)
            build/data/overlays/actors/z_en_horse.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Horse/z_en_horse.o (COMMON)
            build/data/overlays/actors/z_en_horse.data.o (COMMON)
            build/data/overlays/actors/z_en_horse.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_HorseSegmentBssEnd = .;
        _ovl_En_HorseSegmentEnd = .;
    }
    _ovl_En_HorseSegmentBssSize = ABSOLUTE( _ovl_En_HorseSegmentBssEnd - _ovl_En_HorseSegmentBssStart );

    _ovl_En_Horse_Game_CheckSegmentRomStart = _RomSize;
    ..ovl_En_Horse_Game_Check : AT(_RomSize)
    {
        _ovl_En_Horse_Game_CheckSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Horse_Game_CheckSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Horse_Game_Check/z_en_horse_game_check.o (.text)
            build/data/overlays/actors/z_en_horse_game_check.data.o (.text)
            build/data/overlays/actors/z_en_horse_game_check.reloc.o (.text)
        _ovl_En_Horse_Game_CheckSegmentTextEnd = .;
    _ovl_En_Horse_Game_CheckSegmentTextSize = ABSOLUTE( _ovl_En_Horse_Game_CheckSegmentTextEnd - _ovl_En_Horse_Game_CheckSegmentTextStart );
        _ovl_En_Horse_Game_CheckSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Game_Check/z_en_horse_game_check.o (.data)
            build/data/overlays/actors/z_en_horse_game_check.data.o (.data)
            build/data/overlays/actors/z_en_horse_game_check.reloc.o (.data)
        _ovl_En_Horse_Game_CheckSegmentDataEnd = .;
    _ovl_En_Horse_Game_CheckSegmentDataSize = ABSOLUTE( _ovl_En_Horse_Game_CheckSegmentDataEnd - _ovl_En_Horse_Game_CheckSegmentDataStart );
        _ovl_En_Horse_Game_CheckSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Game_Check/z_en_horse_game_check.o (.rodata)
            build/data/overlays/actors/z_en_horse_game_check.data.o (.rodata)
            build/data/overlays/actors/z_en_horse_game_check.reloc.o (.rodata)
        _ovl_En_Horse_Game_CheckSegmentRoDataEnd = .;
    _ovl_En_Horse_Game_CheckSegmentRoDataSize = ABSOLUTE( _ovl_En_Horse_Game_CheckSegmentRoDataEnd - _ovl_En_Horse_Game_CheckSegmentRoDataStart );
        _ovl_En_Horse_Game_CheckSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Game_Check/z_en_horse_game_check.o (.sdata)
            build/data/overlays/actors/z_en_horse_game_check.data.o (.sdata)
            build/data/overlays/actors/z_en_horse_game_check.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Horse_Game_CheckSegmentSDataEnd = .;
        _ovl_En_Horse_Game_CheckSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Horse_Game_Check/z_en_horse_game_check.o (.ovl)
            build/data/overlays/actors/z_en_horse_game_check.data.o (.ovl)
            build/data/overlays/actors/z_en_horse_game_check.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Horse_Game_CheckSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Horse_Game_CheckSegmentOvlEnd - _ovl_En_Horse_Game_CheckSegmentTextStart );
    _ovl_En_Horse_Game_CheckSegmentRomEnd = _RomSize;

    ..ovl_En_Horse_Game_Check.bss ADDR(..ovl_En_Horse_Game_Check) + SIZEOF(..ovl_En_Horse_Game_Check) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Horse_Game_CheckSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Horse_Game_Check/z_en_horse_game_check.o (.sbss)
            build/data/overlays/actors/z_en_horse_game_check.data.o (.sbss)
            build/data/overlays/actors/z_en_horse_game_check.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Horse_Game_Check/z_en_horse_game_check.o (.scommon)
            build/data/overlays/actors/z_en_horse_game_check.data.o (.scommon)
            build/data/overlays/actors/z_en_horse_game_check.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Horse_Game_Check/z_en_horse_game_check.o (.bss)
            build/data/overlays/actors/z_en_horse_game_check.data.o (.bss)
            build/data/overlays/actors/z_en_horse_game_check.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Horse_Game_Check/z_en_horse_game_check.o (COMMON)
            build/data/overlays/actors/z_en_horse_game_check.data.o (COMMON)
            build/data/overlays/actors/z_en_horse_game_check.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Horse_Game_CheckSegmentBssEnd = .;
        _ovl_En_Horse_Game_CheckSegmentEnd = .;
    }
    _ovl_En_Horse_Game_CheckSegmentBssSize = ABSOLUTE( _ovl_En_Horse_Game_CheckSegmentBssEnd - _ovl_En_Horse_Game_CheckSegmentBssStart );

    _ovl_En_Horse_GanonSegmentRomStart = _RomSize;
    ..ovl_En_Horse_Ganon : AT(_RomSize)
    {
        _ovl_En_Horse_GanonSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Horse_GanonSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Horse_Ganon/z_en_horse_ganon.o (.text)
            build/src/overlays/actors/ovl_En_Horse_Ganon/ovl_En_Horse_Ganon_reloc.o (.text)
        _ovl_En_Horse_GanonSegmentTextEnd = .;
    _ovl_En_Horse_GanonSegmentTextSize = ABSOLUTE( _ovl_En_Horse_GanonSegmentTextEnd - _ovl_En_Horse_GanonSegmentTextStart );
        _ovl_En_Horse_GanonSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Ganon/z_en_horse_ganon.o (.data)
            build/src/overlays/actors/ovl_En_Horse_Ganon/ovl_En_Horse_Ganon_reloc.o (.data)
        _ovl_En_Horse_GanonSegmentDataEnd = .;
    _ovl_En_Horse_GanonSegmentDataSize = ABSOLUTE( _ovl_En_Horse_GanonSegmentDataEnd - _ovl_En_Horse_GanonSegmentDataStart );
        _ovl_En_Horse_GanonSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Ganon/z_en_horse_ganon.o (.rodata)
            build/src/overlays/actors/ovl_En_Horse_Ganon/ovl_En_Horse_Ganon_reloc.o (.rodata)
        _ovl_En_Horse_GanonSegmentRoDataEnd = .;
    _ovl_En_Horse_GanonSegmentRoDataSize = ABSOLUTE( _ovl_En_Horse_GanonSegmentRoDataEnd - _ovl_En_Horse_GanonSegmentRoDataStart );
        _ovl_En_Horse_GanonSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Ganon/z_en_horse_ganon.o (.sdata)
            build/src/overlays/actors/ovl_En_Horse_Ganon/ovl_En_Horse_Ganon_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Horse_GanonSegmentSDataEnd = .;
        _ovl_En_Horse_GanonSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Horse_Ganon/z_en_horse_ganon.o (.ovl)
            build/src/overlays/actors/ovl_En_Horse_Ganon/ovl_En_Horse_Ganon_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Horse_GanonSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Horse_GanonSegmentOvlEnd - _ovl_En_Horse_GanonSegmentTextStart );
    _ovl_En_Horse_GanonSegmentRomEnd = _RomSize;

    ..ovl_En_Horse_Ganon.bss ADDR(..ovl_En_Horse_Ganon) + SIZEOF(..ovl_En_Horse_Ganon) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Horse_GanonSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Horse_Ganon/z_en_horse_ganon.o (.sbss)
            build/src/overlays/actors/ovl_En_Horse_Ganon/ovl_En_Horse_Ganon_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Horse_Ganon/z_en_horse_ganon.o (.scommon)
            build/src/overlays/actors/ovl_En_Horse_Ganon/ovl_En_Horse_Ganon_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Horse_Ganon/z_en_horse_ganon.o (.bss)
            build/src/overlays/actors/ovl_En_Horse_Ganon/ovl_En_Horse_Ganon_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Horse_Ganon/z_en_horse_ganon.o (COMMON)
            build/src/overlays/actors/ovl_En_Horse_Ganon/ovl_En_Horse_Ganon_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Horse_GanonSegmentBssEnd = .;
        _ovl_En_Horse_GanonSegmentEnd = .;
    }
    _ovl_En_Horse_GanonSegmentBssSize = ABSOLUTE( _ovl_En_Horse_GanonSegmentBssEnd - _ovl_En_Horse_GanonSegmentBssStart );

    _ovl_En_Horse_Link_ChildSegmentRomStart = _RomSize;
    ..ovl_En_Horse_Link_Child : AT(_RomSize)
    {
        _ovl_En_Horse_Link_ChildSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Horse_Link_ChildSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Horse_Link_Child/z_en_horse_link_child.o (.text)
            build/data/overlays/actors/z_en_horse_link_child.data.o (.text)
            build/data/overlays/actors/z_en_horse_link_child.reloc.o (.text)
        _ovl_En_Horse_Link_ChildSegmentTextEnd = .;
    _ovl_En_Horse_Link_ChildSegmentTextSize = ABSOLUTE( _ovl_En_Horse_Link_ChildSegmentTextEnd - _ovl_En_Horse_Link_ChildSegmentTextStart );
        _ovl_En_Horse_Link_ChildSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Link_Child/z_en_horse_link_child.o (.data)
            build/data/overlays/actors/z_en_horse_link_child.data.o (.data)
            build/data/overlays/actors/z_en_horse_link_child.reloc.o (.data)
        _ovl_En_Horse_Link_ChildSegmentDataEnd = .;
    _ovl_En_Horse_Link_ChildSegmentDataSize = ABSOLUTE( _ovl_En_Horse_Link_ChildSegmentDataEnd - _ovl_En_Horse_Link_ChildSegmentDataStart );
        _ovl_En_Horse_Link_ChildSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Link_Child/z_en_horse_link_child.o (.rodata)
            build/data/overlays/actors/z_en_horse_link_child.data.o (.rodata)
            build/data/overlays/actors/z_en_horse_link_child.reloc.o (.rodata)
        _ovl_En_Horse_Link_ChildSegmentRoDataEnd = .;
    _ovl_En_Horse_Link_ChildSegmentRoDataSize = ABSOLUTE( _ovl_En_Horse_Link_ChildSegmentRoDataEnd - _ovl_En_Horse_Link_ChildSegmentRoDataStart );
        _ovl_En_Horse_Link_ChildSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Link_Child/z_en_horse_link_child.o (.sdata)
            build/data/overlays/actors/z_en_horse_link_child.data.o (.sdata)
            build/data/overlays/actors/z_en_horse_link_child.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Horse_Link_ChildSegmentSDataEnd = .;
        _ovl_En_Horse_Link_ChildSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Horse_Link_Child/z_en_horse_link_child.o (.ovl)
            build/data/overlays/actors/z_en_horse_link_child.data.o (.ovl)
            build/data/overlays/actors/z_en_horse_link_child.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Horse_Link_ChildSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Horse_Link_ChildSegmentOvlEnd - _ovl_En_Horse_Link_ChildSegmentTextStart );
    _ovl_En_Horse_Link_ChildSegmentRomEnd = _RomSize;

    ..ovl_En_Horse_Link_Child.bss ADDR(..ovl_En_Horse_Link_Child) + SIZEOF(..ovl_En_Horse_Link_Child) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Horse_Link_ChildSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Horse_Link_Child/z_en_horse_link_child.o (.sbss)
            build/data/overlays/actors/z_en_horse_link_child.data.o (.sbss)
            build/data/overlays/actors/z_en_horse_link_child.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Horse_Link_Child/z_en_horse_link_child.o (.scommon)
            build/data/overlays/actors/z_en_horse_link_child.data.o (.scommon)
            build/data/overlays/actors/z_en_horse_link_child.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Horse_Link_Child/z_en_horse_link_child.o (.bss)
            build/data/overlays/actors/z_en_horse_link_child.data.o (.bss)
            build/data/overlays/actors/z_en_horse_link_child.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Horse_Link_Child/z_en_horse_link_child.o (COMMON)
            build/data/overlays/actors/z_en_horse_link_child.data.o (COMMON)
            build/data/overlays/actors/z_en_horse_link_child.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Horse_Link_ChildSegmentBssEnd = .;
        _ovl_En_Horse_Link_ChildSegmentEnd = .;
    }
    _ovl_En_Horse_Link_ChildSegmentBssSize = ABSOLUTE( _ovl_En_Horse_Link_ChildSegmentBssEnd - _ovl_En_Horse_Link_ChildSegmentBssStart );

    _ovl_En_Horse_NormalSegmentRomStart = _RomSize;
    ..ovl_En_Horse_Normal : AT(_RomSize)
    {
        _ovl_En_Horse_NormalSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Horse_NormalSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Horse_Normal/z_en_horse_normal.o (.text)
            build/src/overlays/actors/ovl_En_Horse_Normal/ovl_En_Horse_Normal_reloc.o (.text)
        _ovl_En_Horse_NormalSegmentTextEnd = .;
    _ovl_En_Horse_NormalSegmentTextSize = ABSOLUTE( _ovl_En_Horse_NormalSegmentTextEnd - _ovl_En_Horse_NormalSegmentTextStart );
        _ovl_En_Horse_NormalSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Normal/z_en_horse_normal.o (.data)
            build/src/overlays/actors/ovl_En_Horse_Normal/ovl_En_Horse_Normal_reloc.o (.data)
        _ovl_En_Horse_NormalSegmentDataEnd = .;
    _ovl_En_Horse_NormalSegmentDataSize = ABSOLUTE( _ovl_En_Horse_NormalSegmentDataEnd - _ovl_En_Horse_NormalSegmentDataStart );
        _ovl_En_Horse_NormalSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Normal/z_en_horse_normal.o (.rodata)
            build/src/overlays/actors/ovl_En_Horse_Normal/ovl_En_Horse_Normal_reloc.o (.rodata)
        _ovl_En_Horse_NormalSegmentRoDataEnd = .;
    _ovl_En_Horse_NormalSegmentRoDataSize = ABSOLUTE( _ovl_En_Horse_NormalSegmentRoDataEnd - _ovl_En_Horse_NormalSegmentRoDataStart );
        _ovl_En_Horse_NormalSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Normal/z_en_horse_normal.o (.sdata)
            build/src/overlays/actors/ovl_En_Horse_Normal/ovl_En_Horse_Normal_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Horse_NormalSegmentSDataEnd = .;
        _ovl_En_Horse_NormalSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Horse_Normal/z_en_horse_normal.o (.ovl)
            build/src/overlays/actors/ovl_En_Horse_Normal/ovl_En_Horse_Normal_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Horse_NormalSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Horse_NormalSegmentOvlEnd - _ovl_En_Horse_NormalSegmentTextStart );
    _ovl_En_Horse_NormalSegmentRomEnd = _RomSize;

    ..ovl_En_Horse_Normal.bss ADDR(..ovl_En_Horse_Normal) + SIZEOF(..ovl_En_Horse_Normal) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Horse_NormalSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Horse_Normal/z_en_horse_normal.o (.sbss)
            build/src/overlays/actors/ovl_En_Horse_Normal/ovl_En_Horse_Normal_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Horse_Normal/z_en_horse_normal.o (.scommon)
            build/src/overlays/actors/ovl_En_Horse_Normal/ovl_En_Horse_Normal_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Horse_Normal/z_en_horse_normal.o (.bss)
            build/src/overlays/actors/ovl_En_Horse_Normal/ovl_En_Horse_Normal_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Horse_Normal/z_en_horse_normal.o (COMMON)
            build/src/overlays/actors/ovl_En_Horse_Normal/ovl_En_Horse_Normal_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Horse_NormalSegmentBssEnd = .;
        _ovl_En_Horse_NormalSegmentEnd = .;
    }
    _ovl_En_Horse_NormalSegmentBssSize = ABSOLUTE( _ovl_En_Horse_NormalSegmentBssEnd - _ovl_En_Horse_NormalSegmentBssStart );

    _ovl_En_Horse_ZeldaSegmentRomStart = _RomSize;
    ..ovl_En_Horse_Zelda : AT(_RomSize)
    {
        _ovl_En_Horse_ZeldaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Horse_ZeldaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Horse_Zelda/z_en_horse_zelda.o (.text)
            build/data/overlays/actors/z_en_horse_zelda.data.o (.text)
            build/data/overlays/actors/z_en_horse_zelda.reloc.o (.text)
        _ovl_En_Horse_ZeldaSegmentTextEnd = .;
    _ovl_En_Horse_ZeldaSegmentTextSize = ABSOLUTE( _ovl_En_Horse_ZeldaSegmentTextEnd - _ovl_En_Horse_ZeldaSegmentTextStart );
        _ovl_En_Horse_ZeldaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Zelda/z_en_horse_zelda.o (.data)
            build/data/overlays/actors/z_en_horse_zelda.data.o (.data)
            build/data/overlays/actors/z_en_horse_zelda.reloc.o (.data)
        _ovl_En_Horse_ZeldaSegmentDataEnd = .;
    _ovl_En_Horse_ZeldaSegmentDataSize = ABSOLUTE( _ovl_En_Horse_ZeldaSegmentDataEnd - _ovl_En_Horse_ZeldaSegmentDataStart );
        _ovl_En_Horse_ZeldaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Zelda/z_en_horse_zelda.o (.rodata)
            build/data/overlays/actors/z_en_horse_zelda.data.o (.rodata)
            build/data/overlays/actors/z_en_horse_zelda.reloc.o (.rodata)
        _ovl_En_Horse_ZeldaSegmentRoDataEnd = .;
    _ovl_En_Horse_ZeldaSegmentRoDataSize = ABSOLUTE( _ovl_En_Horse_ZeldaSegmentRoDataEnd - _ovl_En_Horse_ZeldaSegmentRoDataStart );
        _ovl_En_Horse_ZeldaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Horse_Zelda/z_en_horse_zelda.o (.sdata)
            build/data/overlays/actors/z_en_horse_zelda.data.o (.sdata)
            build/data/overlays/actors/z_en_horse_zelda.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Horse_ZeldaSegmentSDataEnd = .;
        _ovl_En_Horse_ZeldaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Horse_Zelda/z_en_horse_zelda.o (.ovl)
            build/data/overlays/actors/z_en_horse_zelda.data.o (.ovl)
            build/data/overlays/actors/z_en_horse_zelda.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Horse_ZeldaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Horse_ZeldaSegmentOvlEnd - _ovl_En_Horse_ZeldaSegmentTextStart );
    _ovl_En_Horse_ZeldaSegmentRomEnd = _RomSize;

    ..ovl_En_Horse_Zelda.bss ADDR(..ovl_En_Horse_Zelda) + SIZEOF(..ovl_En_Horse_Zelda) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Horse_ZeldaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Horse_Zelda/z_en_horse_zelda.o (.sbss)
            build/data/overlays/actors/z_en_horse_zelda.data.o (.sbss)
            build/data/overlays/actors/z_en_horse_zelda.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Horse_Zelda/z_en_horse_zelda.o (.scommon)
            build/data/overlays/actors/z_en_horse_zelda.data.o (.scommon)
            build/data/overlays/actors/z_en_horse_zelda.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Horse_Zelda/z_en_horse_zelda.o (.bss)
            build/data/overlays/actors/z_en_horse_zelda.data.o (.bss)
            build/data/overlays/actors/z_en_horse_zelda.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Horse_Zelda/z_en_horse_zelda.o (COMMON)
            build/data/overlays/actors/z_en_horse_zelda.data.o (COMMON)
            build/data/overlays/actors/z_en_horse_zelda.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Horse_ZeldaSegmentBssEnd = .;
        _ovl_En_Horse_ZeldaSegmentEnd = .;
    }
    _ovl_En_Horse_ZeldaSegmentBssSize = ABSOLUTE( _ovl_En_Horse_ZeldaSegmentBssEnd - _ovl_En_Horse_ZeldaSegmentBssStart );

    _ovl_En_HsSegmentRomStart = _RomSize;
    ..ovl_En_Hs : AT(_RomSize)
    {
        _ovl_En_HsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_HsSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Hs/z_en_hs.o (.text)
            build/data/overlays/actors/z_en_hs.data.o (.text)
            build/data/overlays/actors/z_en_hs.reloc.o (.text)
        _ovl_En_HsSegmentTextEnd = .;
    _ovl_En_HsSegmentTextSize = ABSOLUTE( _ovl_En_HsSegmentTextEnd - _ovl_En_HsSegmentTextStart );
        _ovl_En_HsSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Hs/z_en_hs.o (.data)
            build/data/overlays/actors/z_en_hs.data.o (.data)
            build/data/overlays/actors/z_en_hs.reloc.o (.data)
        _ovl_En_HsSegmentDataEnd = .;
    _ovl_En_HsSegmentDataSize = ABSOLUTE( _ovl_En_HsSegmentDataEnd - _ovl_En_HsSegmentDataStart );
        _ovl_En_HsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Hs/z_en_hs.o (.rodata)
            build/data/overlays/actors/z_en_hs.data.o (.rodata)
            build/data/overlays/actors/z_en_hs.reloc.o (.rodata)
        _ovl_En_HsSegmentRoDataEnd = .;
    _ovl_En_HsSegmentRoDataSize = ABSOLUTE( _ovl_En_HsSegmentRoDataEnd - _ovl_En_HsSegmentRoDataStart );
        _ovl_En_HsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Hs/z_en_hs.o (.sdata)
            build/data/overlays/actors/z_en_hs.data.o (.sdata)
            build/data/overlays/actors/z_en_hs.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_HsSegmentSDataEnd = .;
        _ovl_En_HsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Hs/z_en_hs.o (.ovl)
            build/data/overlays/actors/z_en_hs.data.o (.ovl)
            build/data/overlays/actors/z_en_hs.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_HsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_HsSegmentOvlEnd - _ovl_En_HsSegmentTextStart );
    _ovl_En_HsSegmentRomEnd = _RomSize;

    ..ovl_En_Hs.bss ADDR(..ovl_En_Hs) + SIZEOF(..ovl_En_Hs) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_HsSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Hs/z_en_hs.o (.sbss)
            build/data/overlays/actors/z_en_hs.data.o (.sbss)
            build/data/overlays/actors/z_en_hs.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Hs/z_en_hs.o (.scommon)
            build/data/overlays/actors/z_en_hs.data.o (.scommon)
            build/data/overlays/actors/z_en_hs.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Hs/z_en_hs.o (.bss)
            build/data/overlays/actors/z_en_hs.data.o (.bss)
            build/data/overlays/actors/z_en_hs.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Hs/z_en_hs.o (COMMON)
            build/data/overlays/actors/z_en_hs.data.o (COMMON)
            build/data/overlays/actors/z_en_hs.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_HsSegmentBssEnd = .;
        _ovl_En_HsSegmentEnd = .;
    }
    _ovl_En_HsSegmentBssSize = ABSOLUTE( _ovl_En_HsSegmentBssEnd - _ovl_En_HsSegmentBssStart );

    _ovl_En_Hs2SegmentRomStart = _RomSize;
    ..ovl_En_Hs2 : AT(_RomSize)
    {
        _ovl_En_Hs2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Hs2SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Hs2/z_en_hs2.o (.text)
            build/src/overlays/actors/ovl_En_Hs2/ovl_En_Hs2_reloc.o (.text)
        _ovl_En_Hs2SegmentTextEnd = .;
    _ovl_En_Hs2SegmentTextSize = ABSOLUTE( _ovl_En_Hs2SegmentTextEnd - _ovl_En_Hs2SegmentTextStart );
        _ovl_En_Hs2SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Hs2/z_en_hs2.o (.data)
            build/src/overlays/actors/ovl_En_Hs2/ovl_En_Hs2_reloc.o (.data)
        _ovl_En_Hs2SegmentDataEnd = .;
    _ovl_En_Hs2SegmentDataSize = ABSOLUTE( _ovl_En_Hs2SegmentDataEnd - _ovl_En_Hs2SegmentDataStart );
        _ovl_En_Hs2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Hs2/z_en_hs2.o (.rodata)
            build/src/overlays/actors/ovl_En_Hs2/ovl_En_Hs2_reloc.o (.rodata)
        _ovl_En_Hs2SegmentRoDataEnd = .;
    _ovl_En_Hs2SegmentRoDataSize = ABSOLUTE( _ovl_En_Hs2SegmentRoDataEnd - _ovl_En_Hs2SegmentRoDataStart );
        _ovl_En_Hs2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Hs2/z_en_hs2.o (.sdata)
            build/src/overlays/actors/ovl_En_Hs2/ovl_En_Hs2_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Hs2SegmentSDataEnd = .;
        _ovl_En_Hs2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Hs2/z_en_hs2.o (.ovl)
            build/src/overlays/actors/ovl_En_Hs2/ovl_En_Hs2_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Hs2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Hs2SegmentOvlEnd - _ovl_En_Hs2SegmentTextStart );
    _ovl_En_Hs2SegmentRomEnd = _RomSize;

    ..ovl_En_Hs2.bss ADDR(..ovl_En_Hs2) + SIZEOF(..ovl_En_Hs2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Hs2SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Hs2/z_en_hs2.o (.sbss)
            build/src/overlays/actors/ovl_En_Hs2/ovl_En_Hs2_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Hs2/z_en_hs2.o (.scommon)
            build/src/overlays/actors/ovl_En_Hs2/ovl_En_Hs2_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Hs2/z_en_hs2.o (.bss)
            build/src/overlays/actors/ovl_En_Hs2/ovl_En_Hs2_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Hs2/z_en_hs2.o (COMMON)
            build/src/overlays/actors/ovl_En_Hs2/ovl_En_Hs2_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Hs2SegmentBssEnd = .;
        _ovl_En_Hs2SegmentEnd = .;
    }
    _ovl_En_Hs2SegmentBssSize = ABSOLUTE( _ovl_En_Hs2SegmentBssEnd - _ovl_En_Hs2SegmentBssStart );

    _ovl_En_HySegmentRomStart = _RomSize;
    ..ovl_En_Hy : AT(_RomSize)
    {
        _ovl_En_HySegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_HySegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Hy/z_en_hy.o (.text)
            build/data/overlays/actors/z_en_hy.data.o (.text)
            build/data/overlays/actors/z_en_hy.reloc.o (.text)
        _ovl_En_HySegmentTextEnd = .;
    _ovl_En_HySegmentTextSize = ABSOLUTE( _ovl_En_HySegmentTextEnd - _ovl_En_HySegmentTextStart );
        _ovl_En_HySegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Hy/z_en_hy.o (.data)
            build/data/overlays/actors/z_en_hy.data.o (.data)
            build/data/overlays/actors/z_en_hy.reloc.o (.data)
        _ovl_En_HySegmentDataEnd = .;
    _ovl_En_HySegmentDataSize = ABSOLUTE( _ovl_En_HySegmentDataEnd - _ovl_En_HySegmentDataStart );
        _ovl_En_HySegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Hy/z_en_hy.o (.rodata)
            build/data/overlays/actors/z_en_hy.data.o (.rodata)
            build/data/overlays/actors/z_en_hy.reloc.o (.rodata)
        _ovl_En_HySegmentRoDataEnd = .;
    _ovl_En_HySegmentRoDataSize = ABSOLUTE( _ovl_En_HySegmentRoDataEnd - _ovl_En_HySegmentRoDataStart );
        _ovl_En_HySegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Hy/z_en_hy.o (.sdata)
            build/data/overlays/actors/z_en_hy.data.o (.sdata)
            build/data/overlays/actors/z_en_hy.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_HySegmentSDataEnd = .;
        _ovl_En_HySegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Hy/z_en_hy.o (.ovl)
            build/data/overlays/actors/z_en_hy.data.o (.ovl)
            build/data/overlays/actors/z_en_hy.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_HySegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_HySegmentOvlEnd - _ovl_En_HySegmentTextStart );
    _ovl_En_HySegmentRomEnd = _RomSize;

    ..ovl_En_Hy.bss ADDR(..ovl_En_Hy) + SIZEOF(..ovl_En_Hy) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_HySegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Hy/z_en_hy.o (.sbss)
            build/data/overlays/actors/z_en_hy.data.o (.sbss)
            build/data/overlays/actors/z_en_hy.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Hy/z_en_hy.o (.scommon)
            build/data/overlays/actors/z_en_hy.data.o (.scommon)
            build/data/overlays/actors/z_en_hy.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Hy/z_en_hy.o (.bss)
            build/data/overlays/actors/z_en_hy.data.o (.bss)
            build/data/overlays/actors/z_en_hy.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Hy/z_en_hy.o (COMMON)
            build/data/overlays/actors/z_en_hy.data.o (COMMON)
            build/data/overlays/actors/z_en_hy.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_HySegmentBssEnd = .;
        _ovl_En_HySegmentEnd = .;
    }
    _ovl_En_HySegmentBssSize = ABSOLUTE( _ovl_En_HySegmentBssEnd - _ovl_En_HySegmentBssStart );

    _ovl_En_Ice_HonoSegmentRomStart = _RomSize;
    ..ovl_En_Ice_Hono : AT(_RomSize)
    {
        _ovl_En_Ice_HonoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Ice_HonoSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ice_Hono/z_en_ice_hono.o (.text)
            build/src/overlays/actors/ovl_En_Ice_Hono/ovl_En_Ice_Hono_reloc.o (.text)
        _ovl_En_Ice_HonoSegmentTextEnd = .;
    _ovl_En_Ice_HonoSegmentTextSize = ABSOLUTE( _ovl_En_Ice_HonoSegmentTextEnd - _ovl_En_Ice_HonoSegmentTextStart );
        _ovl_En_Ice_HonoSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ice_Hono/z_en_ice_hono.o (.data)
            build/src/overlays/actors/ovl_En_Ice_Hono/ovl_En_Ice_Hono_reloc.o (.data)
        _ovl_En_Ice_HonoSegmentDataEnd = .;
    _ovl_En_Ice_HonoSegmentDataSize = ABSOLUTE( _ovl_En_Ice_HonoSegmentDataEnd - _ovl_En_Ice_HonoSegmentDataStart );
        _ovl_En_Ice_HonoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ice_Hono/z_en_ice_hono.o (.rodata)
            build/src/overlays/actors/ovl_En_Ice_Hono/ovl_En_Ice_Hono_reloc.o (.rodata)
        _ovl_En_Ice_HonoSegmentRoDataEnd = .;
    _ovl_En_Ice_HonoSegmentRoDataSize = ABSOLUTE( _ovl_En_Ice_HonoSegmentRoDataEnd - _ovl_En_Ice_HonoSegmentRoDataStart );
        _ovl_En_Ice_HonoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ice_Hono/z_en_ice_hono.o (.sdata)
            build/src/overlays/actors/ovl_En_Ice_Hono/ovl_En_Ice_Hono_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Ice_HonoSegmentSDataEnd = .;
        _ovl_En_Ice_HonoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ice_Hono/z_en_ice_hono.o (.ovl)
            build/src/overlays/actors/ovl_En_Ice_Hono/ovl_En_Ice_Hono_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Ice_HonoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Ice_HonoSegmentOvlEnd - _ovl_En_Ice_HonoSegmentTextStart );
    _ovl_En_Ice_HonoSegmentRomEnd = _RomSize;

    ..ovl_En_Ice_Hono.bss ADDR(..ovl_En_Ice_Hono) + SIZEOF(..ovl_En_Ice_Hono) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Ice_HonoSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ice_Hono/z_en_ice_hono.o (.sbss)
            build/src/overlays/actors/ovl_En_Ice_Hono/ovl_En_Ice_Hono_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ice_Hono/z_en_ice_hono.o (.scommon)
            build/src/overlays/actors/ovl_En_Ice_Hono/ovl_En_Ice_Hono_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ice_Hono/z_en_ice_hono.o (.bss)
            build/src/overlays/actors/ovl_En_Ice_Hono/ovl_En_Ice_Hono_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ice_Hono/z_en_ice_hono.o (COMMON)
            build/src/overlays/actors/ovl_En_Ice_Hono/ovl_En_Ice_Hono_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Ice_HonoSegmentBssEnd = .;
        _ovl_En_Ice_HonoSegmentEnd = .;
    }
    _ovl_En_Ice_HonoSegmentBssSize = ABSOLUTE( _ovl_En_Ice_HonoSegmentBssEnd - _ovl_En_Ice_HonoSegmentBssStart );

    _ovl_En_IkSegmentRomStart = _RomSize;
    ..ovl_En_Ik : AT(_RomSize)
    {
        _ovl_En_IkSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_IkSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ik/z_en_ik.o (.text)
            build/data/overlays/actors/z_en_ik.data.o (.text)
            build/data/overlays/actors/z_en_ik.bss.o (.text)
            build/data/overlays/actors/z_en_ik.reloc.o (.text)
        _ovl_En_IkSegmentTextEnd = .;
    _ovl_En_IkSegmentTextSize = ABSOLUTE( _ovl_En_IkSegmentTextEnd - _ovl_En_IkSegmentTextStart );
        _ovl_En_IkSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ik/z_en_ik.o (.data)
            build/data/overlays/actors/z_en_ik.data.o (.data)
            build/data/overlays/actors/z_en_ik.bss.o (.data)
            build/data/overlays/actors/z_en_ik.reloc.o (.data)
        _ovl_En_IkSegmentDataEnd = .;
    _ovl_En_IkSegmentDataSize = ABSOLUTE( _ovl_En_IkSegmentDataEnd - _ovl_En_IkSegmentDataStart );
        _ovl_En_IkSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ik/z_en_ik.o (.rodata)
            build/data/overlays/actors/z_en_ik.data.o (.rodata)
            build/data/overlays/actors/z_en_ik.bss.o (.rodata)
            build/data/overlays/actors/z_en_ik.reloc.o (.rodata)
        _ovl_En_IkSegmentRoDataEnd = .;
    _ovl_En_IkSegmentRoDataSize = ABSOLUTE( _ovl_En_IkSegmentRoDataEnd - _ovl_En_IkSegmentRoDataStart );
        _ovl_En_IkSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ik/z_en_ik.o (.sdata)
            build/data/overlays/actors/z_en_ik.data.o (.sdata)
            build/data/overlays/actors/z_en_ik.bss.o (.sdata)
            build/data/overlays/actors/z_en_ik.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_IkSegmentSDataEnd = .;
        _ovl_En_IkSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ik/z_en_ik.o (.ovl)
            build/data/overlays/actors/z_en_ik.data.o (.ovl)
            build/data/overlays/actors/z_en_ik.bss.o (.ovl)
            build/data/overlays/actors/z_en_ik.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_IkSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_IkSegmentOvlEnd - _ovl_En_IkSegmentTextStart );
    _ovl_En_IkSegmentRomEnd = _RomSize;

    ..ovl_En_Ik.bss ADDR(..ovl_En_Ik) + SIZEOF(..ovl_En_Ik) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_IkSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ik/z_en_ik.o (.sbss)
            build/data/overlays/actors/z_en_ik.data.o (.sbss)
            build/data/overlays/actors/z_en_ik.bss.o (.sbss)
            build/data/overlays/actors/z_en_ik.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ik/z_en_ik.o (.scommon)
            build/data/overlays/actors/z_en_ik.data.o (.scommon)
            build/data/overlays/actors/z_en_ik.bss.o (.scommon)
            build/data/overlays/actors/z_en_ik.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ik/z_en_ik.o (.bss)
            build/data/overlays/actors/z_en_ik.data.o (.bss)
            build/data/overlays/actors/z_en_ik.bss.o (.bss)
            build/data/overlays/actors/z_en_ik.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ik/z_en_ik.o (COMMON)
            build/data/overlays/actors/z_en_ik.data.o (COMMON)
            build/data/overlays/actors/z_en_ik.bss.o (COMMON)
            build/data/overlays/actors/z_en_ik.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_IkSegmentBssEnd = .;
        _ovl_En_IkSegmentEnd = .;
    }
    _ovl_En_IkSegmentBssSize = ABSOLUTE( _ovl_En_IkSegmentBssEnd - _ovl_En_IkSegmentBssStart );

    _ovl_En_InSegmentRomStart = _RomSize;
    ..ovl_En_In : AT(_RomSize)
    {
        _ovl_En_InSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_InSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_In/z_en_in.o (.text)
            build/data/overlays/actors/z_en_in.data.o (.text)
            build/data/overlays/actors/z_en_in.reloc.o (.text)
        _ovl_En_InSegmentTextEnd = .;
    _ovl_En_InSegmentTextSize = ABSOLUTE( _ovl_En_InSegmentTextEnd - _ovl_En_InSegmentTextStart );
        _ovl_En_InSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_In/z_en_in.o (.data)
            build/data/overlays/actors/z_en_in.data.o (.data)
            build/data/overlays/actors/z_en_in.reloc.o (.data)
        _ovl_En_InSegmentDataEnd = .;
    _ovl_En_InSegmentDataSize = ABSOLUTE( _ovl_En_InSegmentDataEnd - _ovl_En_InSegmentDataStart );
        _ovl_En_InSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_In/z_en_in.o (.rodata)
            build/data/overlays/actors/z_en_in.data.o (.rodata)
            build/data/overlays/actors/z_en_in.reloc.o (.rodata)
        _ovl_En_InSegmentRoDataEnd = .;
    _ovl_En_InSegmentRoDataSize = ABSOLUTE( _ovl_En_InSegmentRoDataEnd - _ovl_En_InSegmentRoDataStart );
        _ovl_En_InSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_In/z_en_in.o (.sdata)
            build/data/overlays/actors/z_en_in.data.o (.sdata)
            build/data/overlays/actors/z_en_in.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_InSegmentSDataEnd = .;
        _ovl_En_InSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_In/z_en_in.o (.ovl)
            build/data/overlays/actors/z_en_in.data.o (.ovl)
            build/data/overlays/actors/z_en_in.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_InSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_InSegmentOvlEnd - _ovl_En_InSegmentTextStart );
    _ovl_En_InSegmentRomEnd = _RomSize;

    ..ovl_En_In.bss ADDR(..ovl_En_In) + SIZEOF(..ovl_En_In) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_InSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_In/z_en_in.o (.sbss)
            build/data/overlays/actors/z_en_in.data.o (.sbss)
            build/data/overlays/actors/z_en_in.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_In/z_en_in.o (.scommon)
            build/data/overlays/actors/z_en_in.data.o (.scommon)
            build/data/overlays/actors/z_en_in.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_In/z_en_in.o (.bss)
            build/data/overlays/actors/z_en_in.data.o (.bss)
            build/data/overlays/actors/z_en_in.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_In/z_en_in.o (COMMON)
            build/data/overlays/actors/z_en_in.data.o (COMMON)
            build/data/overlays/actors/z_en_in.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_InSegmentBssEnd = .;
        _ovl_En_InSegmentEnd = .;
    }
    _ovl_En_InSegmentBssSize = ABSOLUTE( _ovl_En_InSegmentBssEnd - _ovl_En_InSegmentBssStart );

    _ovl_En_InsectSegmentRomStart = _RomSize;
    ..ovl_En_Insect : AT(_RomSize)
    {
        _ovl_En_InsectSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_InsectSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Insect/z_en_insect.o (.text)
            build/data/overlays/actors/z_en_insect.reloc.o (.text)
        _ovl_En_InsectSegmentTextEnd = .;
    _ovl_En_InsectSegmentTextSize = ABSOLUTE( _ovl_En_InsectSegmentTextEnd - _ovl_En_InsectSegmentTextStart );
        _ovl_En_InsectSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Insect/z_en_insect.o (.data)
            build/data/overlays/actors/z_en_insect.reloc.o (.data)
        _ovl_En_InsectSegmentDataEnd = .;
    _ovl_En_InsectSegmentDataSize = ABSOLUTE( _ovl_En_InsectSegmentDataEnd - _ovl_En_InsectSegmentDataStart );
        _ovl_En_InsectSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Insect/z_en_insect.o (.rodata)
            build/data/overlays/actors/z_en_insect.reloc.o (.rodata)
        _ovl_En_InsectSegmentRoDataEnd = .;
    _ovl_En_InsectSegmentRoDataSize = ABSOLUTE( _ovl_En_InsectSegmentRoDataEnd - _ovl_En_InsectSegmentRoDataStart );
        _ovl_En_InsectSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Insect/z_en_insect.o (.sdata)
            build/data/overlays/actors/z_en_insect.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_InsectSegmentSDataEnd = .;
        _ovl_En_InsectSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Insect/z_en_insect.o (.ovl)
            build/data/overlays/actors/z_en_insect.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_InsectSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_InsectSegmentOvlEnd - _ovl_En_InsectSegmentTextStart );
    _ovl_En_InsectSegmentRomEnd = _RomSize;

    ..ovl_En_Insect.bss ADDR(..ovl_En_Insect) + SIZEOF(..ovl_En_Insect) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_InsectSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Insect/z_en_insect.o (.sbss)
            build/data/overlays/actors/z_en_insect.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Insect/z_en_insect.o (.scommon)
            build/data/overlays/actors/z_en_insect.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Insect/z_en_insect.o (.bss)
            build/data/overlays/actors/z_en_insect.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Insect/z_en_insect.o (COMMON)
            build/data/overlays/actors/z_en_insect.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_InsectSegmentBssEnd = .;
        _ovl_En_InsectSegmentEnd = .;
    }
    _ovl_En_InsectSegmentBssSize = ABSOLUTE( _ovl_En_InsectSegmentBssEnd - _ovl_En_InsectSegmentBssStart );

    _ovl_En_IshiSegmentRomStart = _RomSize;
    ..ovl_En_Ishi : AT(_RomSize)
    {
        _ovl_En_IshiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_IshiSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ishi/z_en_ishi.o (.text)
            build/src/overlays/actors/ovl_En_Ishi/ovl_En_Ishi_reloc.o (.text)
        _ovl_En_IshiSegmentTextEnd = .;
    _ovl_En_IshiSegmentTextSize = ABSOLUTE( _ovl_En_IshiSegmentTextEnd - _ovl_En_IshiSegmentTextStart );
        _ovl_En_IshiSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ishi/z_en_ishi.o (.data)
            build/src/overlays/actors/ovl_En_Ishi/ovl_En_Ishi_reloc.o (.data)
        _ovl_En_IshiSegmentDataEnd = .;
    _ovl_En_IshiSegmentDataSize = ABSOLUTE( _ovl_En_IshiSegmentDataEnd - _ovl_En_IshiSegmentDataStart );
        _ovl_En_IshiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ishi/z_en_ishi.o (.rodata)
            build/src/overlays/actors/ovl_En_Ishi/ovl_En_Ishi_reloc.o (.rodata)
        _ovl_En_IshiSegmentRoDataEnd = .;
    _ovl_En_IshiSegmentRoDataSize = ABSOLUTE( _ovl_En_IshiSegmentRoDataEnd - _ovl_En_IshiSegmentRoDataStart );
        _ovl_En_IshiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ishi/z_en_ishi.o (.sdata)
            build/src/overlays/actors/ovl_En_Ishi/ovl_En_Ishi_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_IshiSegmentSDataEnd = .;
        _ovl_En_IshiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ishi/z_en_ishi.o (.ovl)
            build/src/overlays/actors/ovl_En_Ishi/ovl_En_Ishi_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_IshiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_IshiSegmentOvlEnd - _ovl_En_IshiSegmentTextStart );
    _ovl_En_IshiSegmentRomEnd = _RomSize;

    ..ovl_En_Ishi.bss ADDR(..ovl_En_Ishi) + SIZEOF(..ovl_En_Ishi) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_IshiSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ishi/z_en_ishi.o (.sbss)
            build/src/overlays/actors/ovl_En_Ishi/ovl_En_Ishi_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ishi/z_en_ishi.o (.scommon)
            build/src/overlays/actors/ovl_En_Ishi/ovl_En_Ishi_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ishi/z_en_ishi.o (.bss)
            build/src/overlays/actors/ovl_En_Ishi/ovl_En_Ishi_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ishi/z_en_ishi.o (COMMON)
            build/src/overlays/actors/ovl_En_Ishi/ovl_En_Ishi_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_IshiSegmentBssEnd = .;
        _ovl_En_IshiSegmentEnd = .;
    }
    _ovl_En_IshiSegmentBssSize = ABSOLUTE( _ovl_En_IshiSegmentBssEnd - _ovl_En_IshiSegmentBssStart );

    _ovl_En_ItSegmentRomStart = _RomSize;
    ..ovl_En_It : AT(_RomSize)
    {
        _ovl_En_ItSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_ItSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_It/z_en_it.o (.text)
            build/src/overlays/actors/ovl_En_It/ovl_En_It_reloc.o (.text)
        _ovl_En_ItSegmentTextEnd = .;
    _ovl_En_ItSegmentTextSize = ABSOLUTE( _ovl_En_ItSegmentTextEnd - _ovl_En_ItSegmentTextStart );
        _ovl_En_ItSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_It/z_en_it.o (.data)
            build/src/overlays/actors/ovl_En_It/ovl_En_It_reloc.o (.data)
        _ovl_En_ItSegmentDataEnd = .;
    _ovl_En_ItSegmentDataSize = ABSOLUTE( _ovl_En_ItSegmentDataEnd - _ovl_En_ItSegmentDataStart );
        _ovl_En_ItSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_It/z_en_it.o (.rodata)
            build/src/overlays/actors/ovl_En_It/ovl_En_It_reloc.o (.rodata)
        _ovl_En_ItSegmentRoDataEnd = .;
    _ovl_En_ItSegmentRoDataSize = ABSOLUTE( _ovl_En_ItSegmentRoDataEnd - _ovl_En_ItSegmentRoDataStart );
        _ovl_En_ItSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_It/z_en_it.o (.sdata)
            build/src/overlays/actors/ovl_En_It/ovl_En_It_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_ItSegmentSDataEnd = .;
        _ovl_En_ItSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_It/z_en_it.o (.ovl)
            build/src/overlays/actors/ovl_En_It/ovl_En_It_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_ItSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_ItSegmentOvlEnd - _ovl_En_ItSegmentTextStart );
    _ovl_En_ItSegmentRomEnd = _RomSize;

    ..ovl_En_It.bss ADDR(..ovl_En_It) + SIZEOF(..ovl_En_It) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_ItSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_It/z_en_it.o (.sbss)
            build/src/overlays/actors/ovl_En_It/ovl_En_It_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_It/z_en_it.o (.scommon)
            build/src/overlays/actors/ovl_En_It/ovl_En_It_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_It/z_en_it.o (.bss)
            build/src/overlays/actors/ovl_En_It/ovl_En_It_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_It/z_en_it.o (COMMON)
            build/src/overlays/actors/ovl_En_It/ovl_En_It_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_ItSegmentBssEnd = .;
        _ovl_En_ItSegmentEnd = .;
    }
    _ovl_En_ItSegmentBssSize = ABSOLUTE( _ovl_En_ItSegmentBssEnd - _ovl_En_ItSegmentBssStart );

    _ovl_En_JjSegmentRomStart = _RomSize;
    ..ovl_En_Jj : AT(_RomSize)
    {
        _ovl_En_JjSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_JjSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Jj/z_en_jj.o (.text)
            build/data/overlays/actors/z_en_jj.data.o (.text)
            build/data/overlays/actors/z_en_jj.reloc.o (.text)
        _ovl_En_JjSegmentTextEnd = .;
    _ovl_En_JjSegmentTextSize = ABSOLUTE( _ovl_En_JjSegmentTextEnd - _ovl_En_JjSegmentTextStart );
        _ovl_En_JjSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Jj/z_en_jj.o (.data)
            build/data/overlays/actors/z_en_jj.data.o (.data)
            build/data/overlays/actors/z_en_jj.reloc.o (.data)
        _ovl_En_JjSegmentDataEnd = .;
    _ovl_En_JjSegmentDataSize = ABSOLUTE( _ovl_En_JjSegmentDataEnd - _ovl_En_JjSegmentDataStart );
        _ovl_En_JjSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Jj/z_en_jj.o (.rodata)
            build/data/overlays/actors/z_en_jj.data.o (.rodata)
            build/data/overlays/actors/z_en_jj.reloc.o (.rodata)
        _ovl_En_JjSegmentRoDataEnd = .;
    _ovl_En_JjSegmentRoDataSize = ABSOLUTE( _ovl_En_JjSegmentRoDataEnd - _ovl_En_JjSegmentRoDataStart );
        _ovl_En_JjSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Jj/z_en_jj.o (.sdata)
            build/data/overlays/actors/z_en_jj.data.o (.sdata)
            build/data/overlays/actors/z_en_jj.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_JjSegmentSDataEnd = .;
        _ovl_En_JjSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Jj/z_en_jj.o (.ovl)
            build/data/overlays/actors/z_en_jj.data.o (.ovl)
            build/data/overlays/actors/z_en_jj.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_JjSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_JjSegmentOvlEnd - _ovl_En_JjSegmentTextStart );
    _ovl_En_JjSegmentRomEnd = _RomSize;

    ..ovl_En_Jj.bss ADDR(..ovl_En_Jj) + SIZEOF(..ovl_En_Jj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_JjSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Jj/z_en_jj.o (.sbss)
            build/data/overlays/actors/z_en_jj.data.o (.sbss)
            build/data/overlays/actors/z_en_jj.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Jj/z_en_jj.o (.scommon)
            build/data/overlays/actors/z_en_jj.data.o (.scommon)
            build/data/overlays/actors/z_en_jj.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Jj/z_en_jj.o (.bss)
            build/data/overlays/actors/z_en_jj.data.o (.bss)
            build/data/overlays/actors/z_en_jj.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Jj/z_en_jj.o (COMMON)
            build/data/overlays/actors/z_en_jj.data.o (COMMON)
            build/data/overlays/actors/z_en_jj.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_JjSegmentBssEnd = .;
        _ovl_En_JjSegmentEnd = .;
    }
    _ovl_En_JjSegmentBssSize = ABSOLUTE( _ovl_En_JjSegmentBssEnd - _ovl_En_JjSegmentBssStart );

    _ovl_En_JsSegmentRomStart = _RomSize;
    ..ovl_En_Js : AT(_RomSize)
    {
        _ovl_En_JsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_JsSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Js/z_en_js.o (.text)
            build/src/overlays/actors/ovl_En_Js/ovl_En_Js_reloc.o (.text)
        _ovl_En_JsSegmentTextEnd = .;
    _ovl_En_JsSegmentTextSize = ABSOLUTE( _ovl_En_JsSegmentTextEnd - _ovl_En_JsSegmentTextStart );
        _ovl_En_JsSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Js/z_en_js.o (.data)
            build/src/overlays/actors/ovl_En_Js/ovl_En_Js_reloc.o (.data)
        _ovl_En_JsSegmentDataEnd = .;
    _ovl_En_JsSegmentDataSize = ABSOLUTE( _ovl_En_JsSegmentDataEnd - _ovl_En_JsSegmentDataStart );
        _ovl_En_JsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Js/z_en_js.o (.rodata)
            build/src/overlays/actors/ovl_En_Js/ovl_En_Js_reloc.o (.rodata)
        _ovl_En_JsSegmentRoDataEnd = .;
    _ovl_En_JsSegmentRoDataSize = ABSOLUTE( _ovl_En_JsSegmentRoDataEnd - _ovl_En_JsSegmentRoDataStart );
        _ovl_En_JsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Js/z_en_js.o (.sdata)
            build/src/overlays/actors/ovl_En_Js/ovl_En_Js_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_JsSegmentSDataEnd = .;
        _ovl_En_JsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Js/z_en_js.o (.ovl)
            build/src/overlays/actors/ovl_En_Js/ovl_En_Js_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_JsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_JsSegmentOvlEnd - _ovl_En_JsSegmentTextStart );
    _ovl_En_JsSegmentRomEnd = _RomSize;

    ..ovl_En_Js.bss ADDR(..ovl_En_Js) + SIZEOF(..ovl_En_Js) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_JsSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Js/z_en_js.o (.sbss)
            build/src/overlays/actors/ovl_En_Js/ovl_En_Js_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Js/z_en_js.o (.scommon)
            build/src/overlays/actors/ovl_En_Js/ovl_En_Js_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Js/z_en_js.o (.bss)
            build/src/overlays/actors/ovl_En_Js/ovl_En_Js_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Js/z_en_js.o (COMMON)
            build/src/overlays/actors/ovl_En_Js/ovl_En_Js_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_JsSegmentBssEnd = .;
        _ovl_En_JsSegmentEnd = .;
    }
    _ovl_En_JsSegmentBssSize = ABSOLUTE( _ovl_En_JsSegmentBssEnd - _ovl_En_JsSegmentBssStart );

    _ovl_En_JsjutanSegmentRomStart = _RomSize;
    ..ovl_En_Jsjutan : AT(_RomSize)
    {
        _ovl_En_JsjutanSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_JsjutanSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Jsjutan/z_en_jsjutan.o (.text)
            build/data/overlays/actors/z_en_jsjutan.data.o (.text)
            build/data/overlays/actors/z_en_jsjutan.bss.o (.text)
            build/data/overlays/actors/z_en_jsjutan.reloc.o (.text)
        _ovl_En_JsjutanSegmentTextEnd = .;
    _ovl_En_JsjutanSegmentTextSize = ABSOLUTE( _ovl_En_JsjutanSegmentTextEnd - _ovl_En_JsjutanSegmentTextStart );
        _ovl_En_JsjutanSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Jsjutan/z_en_jsjutan.o (.data)
            build/data/overlays/actors/z_en_jsjutan.data.o (.data)
            build/data/overlays/actors/z_en_jsjutan.bss.o (.data)
            build/data/overlays/actors/z_en_jsjutan.reloc.o (.data)
        _ovl_En_JsjutanSegmentDataEnd = .;
    _ovl_En_JsjutanSegmentDataSize = ABSOLUTE( _ovl_En_JsjutanSegmentDataEnd - _ovl_En_JsjutanSegmentDataStart );
        _ovl_En_JsjutanSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Jsjutan/z_en_jsjutan.o (.rodata)
            build/data/overlays/actors/z_en_jsjutan.data.o (.rodata)
            build/data/overlays/actors/z_en_jsjutan.bss.o (.rodata)
            build/data/overlays/actors/z_en_jsjutan.reloc.o (.rodata)
        _ovl_En_JsjutanSegmentRoDataEnd = .;
    _ovl_En_JsjutanSegmentRoDataSize = ABSOLUTE( _ovl_En_JsjutanSegmentRoDataEnd - _ovl_En_JsjutanSegmentRoDataStart );
        _ovl_En_JsjutanSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Jsjutan/z_en_jsjutan.o (.sdata)
            build/data/overlays/actors/z_en_jsjutan.data.o (.sdata)
            build/data/overlays/actors/z_en_jsjutan.bss.o (.sdata)
            build/data/overlays/actors/z_en_jsjutan.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_JsjutanSegmentSDataEnd = .;
        _ovl_En_JsjutanSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Jsjutan/z_en_jsjutan.o (.ovl)
            build/data/overlays/actors/z_en_jsjutan.data.o (.ovl)
            build/data/overlays/actors/z_en_jsjutan.bss.o (.ovl)
            build/data/overlays/actors/z_en_jsjutan.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_JsjutanSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_JsjutanSegmentOvlEnd - _ovl_En_JsjutanSegmentTextStart );
    _ovl_En_JsjutanSegmentRomEnd = _RomSize;

    ..ovl_En_Jsjutan.bss ADDR(..ovl_En_Jsjutan) + SIZEOF(..ovl_En_Jsjutan) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_JsjutanSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Jsjutan/z_en_jsjutan.o (.sbss)
            build/data/overlays/actors/z_en_jsjutan.data.o (.sbss)
            build/data/overlays/actors/z_en_jsjutan.bss.o (.sbss)
            build/data/overlays/actors/z_en_jsjutan.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Jsjutan/z_en_jsjutan.o (.scommon)
            build/data/overlays/actors/z_en_jsjutan.data.o (.scommon)
            build/data/overlays/actors/z_en_jsjutan.bss.o (.scommon)
            build/data/overlays/actors/z_en_jsjutan.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Jsjutan/z_en_jsjutan.o (.bss)
            build/data/overlays/actors/z_en_jsjutan.data.o (.bss)
            build/data/overlays/actors/z_en_jsjutan.bss.o (.bss)
            build/data/overlays/actors/z_en_jsjutan.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Jsjutan/z_en_jsjutan.o (COMMON)
            build/data/overlays/actors/z_en_jsjutan.data.o (COMMON)
            build/data/overlays/actors/z_en_jsjutan.bss.o (COMMON)
            build/data/overlays/actors/z_en_jsjutan.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_JsjutanSegmentBssEnd = .;
        _ovl_En_JsjutanSegmentEnd = .;
    }
    _ovl_En_JsjutanSegmentBssSize = ABSOLUTE( _ovl_En_JsjutanSegmentBssEnd - _ovl_En_JsjutanSegmentBssStart );

    _ovl_En_KakasiSegmentRomStart = _RomSize;
    ..ovl_En_Kakasi : AT(_RomSize)
    {
        _ovl_En_KakasiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_KakasiSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Kakasi/z_en_kakasi.o (.text)
            build/src/overlays/actors/ovl_En_Kakasi/ovl_En_Kakasi_reloc.o (.text)
        _ovl_En_KakasiSegmentTextEnd = .;
    _ovl_En_KakasiSegmentTextSize = ABSOLUTE( _ovl_En_KakasiSegmentTextEnd - _ovl_En_KakasiSegmentTextStart );
        _ovl_En_KakasiSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Kakasi/z_en_kakasi.o (.data)
            build/src/overlays/actors/ovl_En_Kakasi/ovl_En_Kakasi_reloc.o (.data)
        _ovl_En_KakasiSegmentDataEnd = .;
    _ovl_En_KakasiSegmentDataSize = ABSOLUTE( _ovl_En_KakasiSegmentDataEnd - _ovl_En_KakasiSegmentDataStart );
        _ovl_En_KakasiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Kakasi/z_en_kakasi.o (.rodata)
            build/src/overlays/actors/ovl_En_Kakasi/ovl_En_Kakasi_reloc.o (.rodata)
        _ovl_En_KakasiSegmentRoDataEnd = .;
    _ovl_En_KakasiSegmentRoDataSize = ABSOLUTE( _ovl_En_KakasiSegmentRoDataEnd - _ovl_En_KakasiSegmentRoDataStart );
        _ovl_En_KakasiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Kakasi/z_en_kakasi.o (.sdata)
            build/src/overlays/actors/ovl_En_Kakasi/ovl_En_Kakasi_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_KakasiSegmentSDataEnd = .;
        _ovl_En_KakasiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Kakasi/z_en_kakasi.o (.ovl)
            build/src/overlays/actors/ovl_En_Kakasi/ovl_En_Kakasi_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_KakasiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_KakasiSegmentOvlEnd - _ovl_En_KakasiSegmentTextStart );
    _ovl_En_KakasiSegmentRomEnd = _RomSize;

    ..ovl_En_Kakasi.bss ADDR(..ovl_En_Kakasi) + SIZEOF(..ovl_En_Kakasi) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_KakasiSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Kakasi/z_en_kakasi.o (.sbss)
            build/src/overlays/actors/ovl_En_Kakasi/ovl_En_Kakasi_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Kakasi/z_en_kakasi.o (.scommon)
            build/src/overlays/actors/ovl_En_Kakasi/ovl_En_Kakasi_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Kakasi/z_en_kakasi.o (.bss)
            build/src/overlays/actors/ovl_En_Kakasi/ovl_En_Kakasi_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Kakasi/z_en_kakasi.o (COMMON)
            build/src/overlays/actors/ovl_En_Kakasi/ovl_En_Kakasi_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_KakasiSegmentBssEnd = .;
        _ovl_En_KakasiSegmentEnd = .;
    }
    _ovl_En_KakasiSegmentBssSize = ABSOLUTE( _ovl_En_KakasiSegmentBssEnd - _ovl_En_KakasiSegmentBssStart );

    _ovl_En_Kakasi2SegmentRomStart = _RomSize;
    ..ovl_En_Kakasi2 : AT(_RomSize)
    {
        _ovl_En_Kakasi2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Kakasi2SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Kakasi2/z_en_kakasi2.o (.text)
            build/src/overlays/actors/ovl_En_Kakasi2/ovl_En_Kakasi2_reloc.o (.text)
        _ovl_En_Kakasi2SegmentTextEnd = .;
    _ovl_En_Kakasi2SegmentTextSize = ABSOLUTE( _ovl_En_Kakasi2SegmentTextEnd - _ovl_En_Kakasi2SegmentTextStart );
        _ovl_En_Kakasi2SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Kakasi2/z_en_kakasi2.o (.data)
            build/src/overlays/actors/ovl_En_Kakasi2/ovl_En_Kakasi2_reloc.o (.data)
        _ovl_En_Kakasi2SegmentDataEnd = .;
    _ovl_En_Kakasi2SegmentDataSize = ABSOLUTE( _ovl_En_Kakasi2SegmentDataEnd - _ovl_En_Kakasi2SegmentDataStart );
        _ovl_En_Kakasi2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Kakasi2/z_en_kakasi2.o (.rodata)
            build/src/overlays/actors/ovl_En_Kakasi2/ovl_En_Kakasi2_reloc.o (.rodata)
        _ovl_En_Kakasi2SegmentRoDataEnd = .;
    _ovl_En_Kakasi2SegmentRoDataSize = ABSOLUTE( _ovl_En_Kakasi2SegmentRoDataEnd - _ovl_En_Kakasi2SegmentRoDataStart );
        _ovl_En_Kakasi2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Kakasi2/z_en_kakasi2.o (.sdata)
            build/src/overlays/actors/ovl_En_Kakasi2/ovl_En_Kakasi2_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Kakasi2SegmentSDataEnd = .;
        _ovl_En_Kakasi2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Kakasi2/z_en_kakasi2.o (.ovl)
            build/src/overlays/actors/ovl_En_Kakasi2/ovl_En_Kakasi2_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Kakasi2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Kakasi2SegmentOvlEnd - _ovl_En_Kakasi2SegmentTextStart );
    _ovl_En_Kakasi2SegmentRomEnd = _RomSize;

    ..ovl_En_Kakasi2.bss ADDR(..ovl_En_Kakasi2) + SIZEOF(..ovl_En_Kakasi2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Kakasi2SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Kakasi2/z_en_kakasi2.o (.sbss)
            build/src/overlays/actors/ovl_En_Kakasi2/ovl_En_Kakasi2_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Kakasi2/z_en_kakasi2.o (.scommon)
            build/src/overlays/actors/ovl_En_Kakasi2/ovl_En_Kakasi2_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Kakasi2/z_en_kakasi2.o (.bss)
            build/src/overlays/actors/ovl_En_Kakasi2/ovl_En_Kakasi2_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Kakasi2/z_en_kakasi2.o (COMMON)
            build/src/overlays/actors/ovl_En_Kakasi2/ovl_En_Kakasi2_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Kakasi2SegmentBssEnd = .;
        _ovl_En_Kakasi2SegmentEnd = .;
    }
    _ovl_En_Kakasi2SegmentBssSize = ABSOLUTE( _ovl_En_Kakasi2SegmentBssEnd - _ovl_En_Kakasi2SegmentBssStart );

    _ovl_En_Kakasi3SegmentRomStart = _RomSize;
    ..ovl_En_Kakasi3 : AT(_RomSize)
    {
        _ovl_En_Kakasi3SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Kakasi3SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Kakasi3/z_en_kakasi3.o (.text)
            build/src/overlays/actors/ovl_En_Kakasi3/ovl_En_Kakasi3_reloc.o (.text)
        _ovl_En_Kakasi3SegmentTextEnd = .;
    _ovl_En_Kakasi3SegmentTextSize = ABSOLUTE( _ovl_En_Kakasi3SegmentTextEnd - _ovl_En_Kakasi3SegmentTextStart );
        _ovl_En_Kakasi3SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Kakasi3/z_en_kakasi3.o (.data)
            build/src/overlays/actors/ovl_En_Kakasi3/ovl_En_Kakasi3_reloc.o (.data)
        _ovl_En_Kakasi3SegmentDataEnd = .;
    _ovl_En_Kakasi3SegmentDataSize = ABSOLUTE( _ovl_En_Kakasi3SegmentDataEnd - _ovl_En_Kakasi3SegmentDataStart );
        _ovl_En_Kakasi3SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Kakasi3/z_en_kakasi3.o (.rodata)
            build/src/overlays/actors/ovl_En_Kakasi3/ovl_En_Kakasi3_reloc.o (.rodata)
        _ovl_En_Kakasi3SegmentRoDataEnd = .;
    _ovl_En_Kakasi3SegmentRoDataSize = ABSOLUTE( _ovl_En_Kakasi3SegmentRoDataEnd - _ovl_En_Kakasi3SegmentRoDataStart );
        _ovl_En_Kakasi3SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Kakasi3/z_en_kakasi3.o (.sdata)
            build/src/overlays/actors/ovl_En_Kakasi3/ovl_En_Kakasi3_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Kakasi3SegmentSDataEnd = .;
        _ovl_En_Kakasi3SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Kakasi3/z_en_kakasi3.o (.ovl)
            build/src/overlays/actors/ovl_En_Kakasi3/ovl_En_Kakasi3_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Kakasi3SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Kakasi3SegmentOvlEnd - _ovl_En_Kakasi3SegmentTextStart );
    _ovl_En_Kakasi3SegmentRomEnd = _RomSize;

    ..ovl_En_Kakasi3.bss ADDR(..ovl_En_Kakasi3) + SIZEOF(..ovl_En_Kakasi3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Kakasi3SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Kakasi3/z_en_kakasi3.o (.sbss)
            build/src/overlays/actors/ovl_En_Kakasi3/ovl_En_Kakasi3_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Kakasi3/z_en_kakasi3.o (.scommon)
            build/src/overlays/actors/ovl_En_Kakasi3/ovl_En_Kakasi3_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Kakasi3/z_en_kakasi3.o (.bss)
            build/src/overlays/actors/ovl_En_Kakasi3/ovl_En_Kakasi3_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Kakasi3/z_en_kakasi3.o (COMMON)
            build/src/overlays/actors/ovl_En_Kakasi3/ovl_En_Kakasi3_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Kakasi3SegmentBssEnd = .;
        _ovl_En_Kakasi3SegmentEnd = .;
    }
    _ovl_En_Kakasi3SegmentBssSize = ABSOLUTE( _ovl_En_Kakasi3SegmentBssEnd - _ovl_En_Kakasi3SegmentBssStart );

    _ovl_En_KanbanSegmentRomStart = _RomSize;
    ..ovl_En_Kanban : AT(_RomSize)
    {
        _ovl_En_KanbanSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_KanbanSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Kanban/z_en_kanban.o (.text)
            build/data/overlays/actors/z_en_kanban.data.o (.text)
            build/data/overlays/actors/z_en_kanban.reloc.o (.text)
        _ovl_En_KanbanSegmentTextEnd = .;
    _ovl_En_KanbanSegmentTextSize = ABSOLUTE( _ovl_En_KanbanSegmentTextEnd - _ovl_En_KanbanSegmentTextStart );
        _ovl_En_KanbanSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Kanban/z_en_kanban.o (.data)
            build/data/overlays/actors/z_en_kanban.data.o (.data)
            build/data/overlays/actors/z_en_kanban.reloc.o (.data)
        _ovl_En_KanbanSegmentDataEnd = .;
    _ovl_En_KanbanSegmentDataSize = ABSOLUTE( _ovl_En_KanbanSegmentDataEnd - _ovl_En_KanbanSegmentDataStart );
        _ovl_En_KanbanSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Kanban/z_en_kanban.o (.rodata)
            build/data/overlays/actors/z_en_kanban.data.o (.rodata)
            build/data/overlays/actors/z_en_kanban.reloc.o (.rodata)
        _ovl_En_KanbanSegmentRoDataEnd = .;
    _ovl_En_KanbanSegmentRoDataSize = ABSOLUTE( _ovl_En_KanbanSegmentRoDataEnd - _ovl_En_KanbanSegmentRoDataStart );
        _ovl_En_KanbanSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Kanban/z_en_kanban.o (.sdata)
            build/data/overlays/actors/z_en_kanban.data.o (.sdata)
            build/data/overlays/actors/z_en_kanban.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_KanbanSegmentSDataEnd = .;
        _ovl_En_KanbanSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Kanban/z_en_kanban.o (.ovl)
            build/data/overlays/actors/z_en_kanban.data.o (.ovl)
            build/data/overlays/actors/z_en_kanban.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_KanbanSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_KanbanSegmentOvlEnd - _ovl_En_KanbanSegmentTextStart );
    _ovl_En_KanbanSegmentRomEnd = _RomSize;

    ..ovl_En_Kanban.bss ADDR(..ovl_En_Kanban) + SIZEOF(..ovl_En_Kanban) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_KanbanSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Kanban/z_en_kanban.o (.sbss)
            build/data/overlays/actors/z_en_kanban.data.o (.sbss)
            build/data/overlays/actors/z_en_kanban.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Kanban/z_en_kanban.o (.scommon)
            build/data/overlays/actors/z_en_kanban.data.o (.scommon)
            build/data/overlays/actors/z_en_kanban.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Kanban/z_en_kanban.o (.bss)
            build/data/overlays/actors/z_en_kanban.data.o (.bss)
            build/data/overlays/actors/z_en_kanban.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Kanban/z_en_kanban.o (COMMON)
            build/data/overlays/actors/z_en_kanban.data.o (COMMON)
            build/data/overlays/actors/z_en_kanban.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_KanbanSegmentBssEnd = .;
        _ovl_En_KanbanSegmentEnd = .;
    }
    _ovl_En_KanbanSegmentBssSize = ABSOLUTE( _ovl_En_KanbanSegmentBssEnd - _ovl_En_KanbanSegmentBssStart );

    _ovl_En_KarebabaSegmentRomStart = _RomSize;
    ..ovl_En_Karebaba : AT(_RomSize)
    {
        _ovl_En_KarebabaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_KarebabaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Karebaba/z_en_karebaba.o (.text)
            build/data/overlays/actors/z_en_karebaba.data.o (.text)
            build/data/overlays/actors/z_en_karebaba.reloc.o (.text)
        _ovl_En_KarebabaSegmentTextEnd = .;
    _ovl_En_KarebabaSegmentTextSize = ABSOLUTE( _ovl_En_KarebabaSegmentTextEnd - _ovl_En_KarebabaSegmentTextStart );
        _ovl_En_KarebabaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Karebaba/z_en_karebaba.o (.data)
            build/data/overlays/actors/z_en_karebaba.data.o (.data)
            build/data/overlays/actors/z_en_karebaba.reloc.o (.data)
        _ovl_En_KarebabaSegmentDataEnd = .;
    _ovl_En_KarebabaSegmentDataSize = ABSOLUTE( _ovl_En_KarebabaSegmentDataEnd - _ovl_En_KarebabaSegmentDataStart );
        _ovl_En_KarebabaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Karebaba/z_en_karebaba.o (.rodata)
            build/data/overlays/actors/z_en_karebaba.data.o (.rodata)
            build/data/overlays/actors/z_en_karebaba.reloc.o (.rodata)
        _ovl_En_KarebabaSegmentRoDataEnd = .;
    _ovl_En_KarebabaSegmentRoDataSize = ABSOLUTE( _ovl_En_KarebabaSegmentRoDataEnd - _ovl_En_KarebabaSegmentRoDataStart );
        _ovl_En_KarebabaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Karebaba/z_en_karebaba.o (.sdata)
            build/data/overlays/actors/z_en_karebaba.data.o (.sdata)
            build/data/overlays/actors/z_en_karebaba.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_KarebabaSegmentSDataEnd = .;
        _ovl_En_KarebabaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Karebaba/z_en_karebaba.o (.ovl)
            build/data/overlays/actors/z_en_karebaba.data.o (.ovl)
            build/data/overlays/actors/z_en_karebaba.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_KarebabaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_KarebabaSegmentOvlEnd - _ovl_En_KarebabaSegmentTextStart );
    _ovl_En_KarebabaSegmentRomEnd = _RomSize;

    ..ovl_En_Karebaba.bss ADDR(..ovl_En_Karebaba) + SIZEOF(..ovl_En_Karebaba) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_KarebabaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Karebaba/z_en_karebaba.o (.sbss)
            build/data/overlays/actors/z_en_karebaba.data.o (.sbss)
            build/data/overlays/actors/z_en_karebaba.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Karebaba/z_en_karebaba.o (.scommon)
            build/data/overlays/actors/z_en_karebaba.data.o (.scommon)
            build/data/overlays/actors/z_en_karebaba.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Karebaba/z_en_karebaba.o (.bss)
            build/data/overlays/actors/z_en_karebaba.data.o (.bss)
            build/data/overlays/actors/z_en_karebaba.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Karebaba/z_en_karebaba.o (COMMON)
            build/data/overlays/actors/z_en_karebaba.data.o (COMMON)
            build/data/overlays/actors/z_en_karebaba.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_KarebabaSegmentBssEnd = .;
        _ovl_En_KarebabaSegmentEnd = .;
    }
    _ovl_En_KarebabaSegmentBssSize = ABSOLUTE( _ovl_En_KarebabaSegmentBssEnd - _ovl_En_KarebabaSegmentBssStart );

    _ovl_En_KoSegmentRomStart = _RomSize;
    ..ovl_En_Ko : AT(_RomSize)
    {
        _ovl_En_KoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_KoSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ko/z_en_ko.o (.text)
            build/data/overlays/actors/z_en_ko.data.o (.text)
            build/data/overlays/actors/z_en_ko.reloc.o (.text)
        _ovl_En_KoSegmentTextEnd = .;
    _ovl_En_KoSegmentTextSize = ABSOLUTE( _ovl_En_KoSegmentTextEnd - _ovl_En_KoSegmentTextStart );
        _ovl_En_KoSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ko/z_en_ko.o (.data)
            build/data/overlays/actors/z_en_ko.data.o (.data)
            build/data/overlays/actors/z_en_ko.reloc.o (.data)
        _ovl_En_KoSegmentDataEnd = .;
    _ovl_En_KoSegmentDataSize = ABSOLUTE( _ovl_En_KoSegmentDataEnd - _ovl_En_KoSegmentDataStart );
        _ovl_En_KoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ko/z_en_ko.o (.rodata)
            build/data/overlays/actors/z_en_ko.data.o (.rodata)
            build/data/overlays/actors/z_en_ko.reloc.o (.rodata)
        _ovl_En_KoSegmentRoDataEnd = .;
    _ovl_En_KoSegmentRoDataSize = ABSOLUTE( _ovl_En_KoSegmentRoDataEnd - _ovl_En_KoSegmentRoDataStart );
        _ovl_En_KoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ko/z_en_ko.o (.sdata)
            build/data/overlays/actors/z_en_ko.data.o (.sdata)
            build/data/overlays/actors/z_en_ko.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_KoSegmentSDataEnd = .;
        _ovl_En_KoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ko/z_en_ko.o (.ovl)
            build/data/overlays/actors/z_en_ko.data.o (.ovl)
            build/data/overlays/actors/z_en_ko.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_KoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_KoSegmentOvlEnd - _ovl_En_KoSegmentTextStart );
    _ovl_En_KoSegmentRomEnd = _RomSize;

    ..ovl_En_Ko.bss ADDR(..ovl_En_Ko) + SIZEOF(..ovl_En_Ko) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_KoSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ko/z_en_ko.o (.sbss)
            build/data/overlays/actors/z_en_ko.data.o (.sbss)
            build/data/overlays/actors/z_en_ko.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ko/z_en_ko.o (.scommon)
            build/data/overlays/actors/z_en_ko.data.o (.scommon)
            build/data/overlays/actors/z_en_ko.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ko/z_en_ko.o (.bss)
            build/data/overlays/actors/z_en_ko.data.o (.bss)
            build/data/overlays/actors/z_en_ko.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ko/z_en_ko.o (COMMON)
            build/data/overlays/actors/z_en_ko.data.o (COMMON)
            build/data/overlays/actors/z_en_ko.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_KoSegmentBssEnd = .;
        _ovl_En_KoSegmentEnd = .;
    }
    _ovl_En_KoSegmentBssSize = ABSOLUTE( _ovl_En_KoSegmentBssEnd - _ovl_En_KoSegmentBssStart );

    _ovl_En_KusaSegmentRomStart = _RomSize;
    ..ovl_En_Kusa : AT(_RomSize)
    {
        _ovl_En_KusaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_KusaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Kusa/z_en_kusa.o (.text)
            build/data/overlays/actors/z_en_kusa.data.o (.text)
            build/data/overlays/actors/z_en_kusa.reloc.o (.text)
        _ovl_En_KusaSegmentTextEnd = .;
    _ovl_En_KusaSegmentTextSize = ABSOLUTE( _ovl_En_KusaSegmentTextEnd - _ovl_En_KusaSegmentTextStart );
        _ovl_En_KusaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Kusa/z_en_kusa.o (.data)
            build/data/overlays/actors/z_en_kusa.data.o (.data)
            build/data/overlays/actors/z_en_kusa.reloc.o (.data)
        _ovl_En_KusaSegmentDataEnd = .;
    _ovl_En_KusaSegmentDataSize = ABSOLUTE( _ovl_En_KusaSegmentDataEnd - _ovl_En_KusaSegmentDataStart );
        _ovl_En_KusaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Kusa/z_en_kusa.o (.rodata)
            build/data/overlays/actors/z_en_kusa.data.o (.rodata)
            build/data/overlays/actors/z_en_kusa.reloc.o (.rodata)
        _ovl_En_KusaSegmentRoDataEnd = .;
    _ovl_En_KusaSegmentRoDataSize = ABSOLUTE( _ovl_En_KusaSegmentRoDataEnd - _ovl_En_KusaSegmentRoDataStart );
        _ovl_En_KusaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Kusa/z_en_kusa.o (.sdata)
            build/data/overlays/actors/z_en_kusa.data.o (.sdata)
            build/data/overlays/actors/z_en_kusa.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_KusaSegmentSDataEnd = .;
        _ovl_En_KusaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Kusa/z_en_kusa.o (.ovl)
            build/data/overlays/actors/z_en_kusa.data.o (.ovl)
            build/data/overlays/actors/z_en_kusa.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_KusaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_KusaSegmentOvlEnd - _ovl_En_KusaSegmentTextStart );
    _ovl_En_KusaSegmentRomEnd = _RomSize;

    ..ovl_En_Kusa.bss ADDR(..ovl_En_Kusa) + SIZEOF(..ovl_En_Kusa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_KusaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Kusa/z_en_kusa.o (.sbss)
            build/data/overlays/actors/z_en_kusa.data.o (.sbss)
            build/data/overlays/actors/z_en_kusa.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Kusa/z_en_kusa.o (.scommon)
            build/data/overlays/actors/z_en_kusa.data.o (.scommon)
            build/data/overlays/actors/z_en_kusa.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Kusa/z_en_kusa.o (.bss)
            build/data/overlays/actors/z_en_kusa.data.o (.bss)
            build/data/overlays/actors/z_en_kusa.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Kusa/z_en_kusa.o (COMMON)
            build/data/overlays/actors/z_en_kusa.data.o (COMMON)
            build/data/overlays/actors/z_en_kusa.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_KusaSegmentBssEnd = .;
        _ovl_En_KusaSegmentEnd = .;
    }
    _ovl_En_KusaSegmentBssSize = ABSOLUTE( _ovl_En_KusaSegmentBssEnd - _ovl_En_KusaSegmentBssStart );

    _ovl_En_KzSegmentRomStart = _RomSize;
    ..ovl_En_Kz : AT(_RomSize)
    {
        _ovl_En_KzSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_KzSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Kz/z_en_kz.o (.text)
            build/src/overlays/actors/ovl_En_Kz/ovl_En_Kz_reloc.o (.text)
        _ovl_En_KzSegmentTextEnd = .;
    _ovl_En_KzSegmentTextSize = ABSOLUTE( _ovl_En_KzSegmentTextEnd - _ovl_En_KzSegmentTextStart );
        _ovl_En_KzSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Kz/z_en_kz.o (.data)
            build/src/overlays/actors/ovl_En_Kz/ovl_En_Kz_reloc.o (.data)
        _ovl_En_KzSegmentDataEnd = .;
    _ovl_En_KzSegmentDataSize = ABSOLUTE( _ovl_En_KzSegmentDataEnd - _ovl_En_KzSegmentDataStart );
        _ovl_En_KzSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Kz/z_en_kz.o (.rodata)
            build/src/overlays/actors/ovl_En_Kz/ovl_En_Kz_reloc.o (.rodata)
        _ovl_En_KzSegmentRoDataEnd = .;
    _ovl_En_KzSegmentRoDataSize = ABSOLUTE( _ovl_En_KzSegmentRoDataEnd - _ovl_En_KzSegmentRoDataStart );
        _ovl_En_KzSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Kz/z_en_kz.o (.sdata)
            build/src/overlays/actors/ovl_En_Kz/ovl_En_Kz_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_KzSegmentSDataEnd = .;
        _ovl_En_KzSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Kz/z_en_kz.o (.ovl)
            build/src/overlays/actors/ovl_En_Kz/ovl_En_Kz_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_KzSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_KzSegmentOvlEnd - _ovl_En_KzSegmentTextStart );
    _ovl_En_KzSegmentRomEnd = _RomSize;

    ..ovl_En_Kz.bss ADDR(..ovl_En_Kz) + SIZEOF(..ovl_En_Kz) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_KzSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Kz/z_en_kz.o (.sbss)
            build/src/overlays/actors/ovl_En_Kz/ovl_En_Kz_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Kz/z_en_kz.o (.scommon)
            build/src/overlays/actors/ovl_En_Kz/ovl_En_Kz_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Kz/z_en_kz.o (.bss)
            build/src/overlays/actors/ovl_En_Kz/ovl_En_Kz_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Kz/z_en_kz.o (COMMON)
            build/src/overlays/actors/ovl_En_Kz/ovl_En_Kz_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_KzSegmentBssEnd = .;
        _ovl_En_KzSegmentEnd = .;
    }
    _ovl_En_KzSegmentBssSize = ABSOLUTE( _ovl_En_KzSegmentBssEnd - _ovl_En_KzSegmentBssStart );

    _ovl_En_LightSegmentRomStart = _RomSize;
    ..ovl_En_Light : AT(_RomSize)
    {
        _ovl_En_LightSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_LightSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Light/z_en_light.o (.text)
            build/src/overlays/actors/ovl_En_Light/ovl_En_Light_reloc.o (.text)
        _ovl_En_LightSegmentTextEnd = .;
    _ovl_En_LightSegmentTextSize = ABSOLUTE( _ovl_En_LightSegmentTextEnd - _ovl_En_LightSegmentTextStart );
        _ovl_En_LightSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Light/z_en_light.o (.data)
            build/src/overlays/actors/ovl_En_Light/ovl_En_Light_reloc.o (.data)
        _ovl_En_LightSegmentDataEnd = .;
    _ovl_En_LightSegmentDataSize = ABSOLUTE( _ovl_En_LightSegmentDataEnd - _ovl_En_LightSegmentDataStart );
        _ovl_En_LightSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Light/z_en_light.o (.rodata)
            build/src/overlays/actors/ovl_En_Light/ovl_En_Light_reloc.o (.rodata)
        _ovl_En_LightSegmentRoDataEnd = .;
    _ovl_En_LightSegmentRoDataSize = ABSOLUTE( _ovl_En_LightSegmentRoDataEnd - _ovl_En_LightSegmentRoDataStart );
        _ovl_En_LightSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Light/z_en_light.o (.sdata)
            build/src/overlays/actors/ovl_En_Light/ovl_En_Light_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_LightSegmentSDataEnd = .;
        _ovl_En_LightSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Light/z_en_light.o (.ovl)
            build/src/overlays/actors/ovl_En_Light/ovl_En_Light_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_LightSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_LightSegmentOvlEnd - _ovl_En_LightSegmentTextStart );
    _ovl_En_LightSegmentRomEnd = _RomSize;

    ..ovl_En_Light.bss ADDR(..ovl_En_Light) + SIZEOF(..ovl_En_Light) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_LightSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Light/z_en_light.o (.sbss)
            build/src/overlays/actors/ovl_En_Light/ovl_En_Light_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Light/z_en_light.o (.scommon)
            build/src/overlays/actors/ovl_En_Light/ovl_En_Light_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Light/z_en_light.o (.bss)
            build/src/overlays/actors/ovl_En_Light/ovl_En_Light_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Light/z_en_light.o (COMMON)
            build/src/overlays/actors/ovl_En_Light/ovl_En_Light_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_LightSegmentBssEnd = .;
        _ovl_En_LightSegmentEnd = .;
    }
    _ovl_En_LightSegmentBssSize = ABSOLUTE( _ovl_En_LightSegmentBssEnd - _ovl_En_LightSegmentBssStart );

    _ovl_En_LightboxSegmentRomStart = _RomSize;
    ..ovl_En_Lightbox : AT(_RomSize)
    {
        _ovl_En_LightboxSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_LightboxSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Lightbox/z_en_lightbox.o (.text)
            build/src/overlays/actors/ovl_En_Lightbox/ovl_En_Lightbox_reloc.o (.text)
        _ovl_En_LightboxSegmentTextEnd = .;
    _ovl_En_LightboxSegmentTextSize = ABSOLUTE( _ovl_En_LightboxSegmentTextEnd - _ovl_En_LightboxSegmentTextStart );
        _ovl_En_LightboxSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Lightbox/z_en_lightbox.o (.data)
            build/src/overlays/actors/ovl_En_Lightbox/ovl_En_Lightbox_reloc.o (.data)
        _ovl_En_LightboxSegmentDataEnd = .;
    _ovl_En_LightboxSegmentDataSize = ABSOLUTE( _ovl_En_LightboxSegmentDataEnd - _ovl_En_LightboxSegmentDataStart );
        _ovl_En_LightboxSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Lightbox/z_en_lightbox.o (.rodata)
            build/src/overlays/actors/ovl_En_Lightbox/ovl_En_Lightbox_reloc.o (.rodata)
        _ovl_En_LightboxSegmentRoDataEnd = .;
    _ovl_En_LightboxSegmentRoDataSize = ABSOLUTE( _ovl_En_LightboxSegmentRoDataEnd - _ovl_En_LightboxSegmentRoDataStart );
        _ovl_En_LightboxSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Lightbox/z_en_lightbox.o (.sdata)
            build/src/overlays/actors/ovl_En_Lightbox/ovl_En_Lightbox_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_LightboxSegmentSDataEnd = .;
        _ovl_En_LightboxSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Lightbox/z_en_lightbox.o (.ovl)
            build/src/overlays/actors/ovl_En_Lightbox/ovl_En_Lightbox_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_LightboxSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_LightboxSegmentOvlEnd - _ovl_En_LightboxSegmentTextStart );
    _ovl_En_LightboxSegmentRomEnd = _RomSize;

    ..ovl_En_Lightbox.bss ADDR(..ovl_En_Lightbox) + SIZEOF(..ovl_En_Lightbox) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_LightboxSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Lightbox/z_en_lightbox.o (.sbss)
            build/src/overlays/actors/ovl_En_Lightbox/ovl_En_Lightbox_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Lightbox/z_en_lightbox.o (.scommon)
            build/src/overlays/actors/ovl_En_Lightbox/ovl_En_Lightbox_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Lightbox/z_en_lightbox.o (.bss)
            build/src/overlays/actors/ovl_En_Lightbox/ovl_En_Lightbox_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Lightbox/z_en_lightbox.o (COMMON)
            build/src/overlays/actors/ovl_En_Lightbox/ovl_En_Lightbox_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_LightboxSegmentBssEnd = .;
        _ovl_En_LightboxSegmentEnd = .;
    }
    _ovl_En_LightboxSegmentBssSize = ABSOLUTE( _ovl_En_LightboxSegmentBssEnd - _ovl_En_LightboxSegmentBssStart );

    _ovl_En_M_Fire1SegmentRomStart = _RomSize;
    ..ovl_En_M_Fire1 : AT(_RomSize)
    {
        _ovl_En_M_Fire1SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_M_Fire1SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_M_Fire1/z_en_m_fire1.o (.text)
            build/src/overlays/actors/ovl_En_M_Fire1/ovl_En_M_Fire1_reloc.o (.text)
        _ovl_En_M_Fire1SegmentTextEnd = .;
    _ovl_En_M_Fire1SegmentTextSize = ABSOLUTE( _ovl_En_M_Fire1SegmentTextEnd - _ovl_En_M_Fire1SegmentTextStart );
        _ovl_En_M_Fire1SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_M_Fire1/z_en_m_fire1.o (.data)
            build/src/overlays/actors/ovl_En_M_Fire1/ovl_En_M_Fire1_reloc.o (.data)
        _ovl_En_M_Fire1SegmentDataEnd = .;
    _ovl_En_M_Fire1SegmentDataSize = ABSOLUTE( _ovl_En_M_Fire1SegmentDataEnd - _ovl_En_M_Fire1SegmentDataStart );
        _ovl_En_M_Fire1SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_M_Fire1/z_en_m_fire1.o (.rodata)
            build/src/overlays/actors/ovl_En_M_Fire1/ovl_En_M_Fire1_reloc.o (.rodata)
        _ovl_En_M_Fire1SegmentRoDataEnd = .;
    _ovl_En_M_Fire1SegmentRoDataSize = ABSOLUTE( _ovl_En_M_Fire1SegmentRoDataEnd - _ovl_En_M_Fire1SegmentRoDataStart );
        _ovl_En_M_Fire1SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_M_Fire1/z_en_m_fire1.o (.sdata)
            build/src/overlays/actors/ovl_En_M_Fire1/ovl_En_M_Fire1_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_M_Fire1SegmentSDataEnd = .;
        _ovl_En_M_Fire1SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_M_Fire1/z_en_m_fire1.o (.ovl)
            build/src/overlays/actors/ovl_En_M_Fire1/ovl_En_M_Fire1_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_M_Fire1SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_M_Fire1SegmentOvlEnd - _ovl_En_M_Fire1SegmentTextStart );
    _ovl_En_M_Fire1SegmentRomEnd = _RomSize;

    ..ovl_En_M_Fire1.bss ADDR(..ovl_En_M_Fire1) + SIZEOF(..ovl_En_M_Fire1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_M_Fire1SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_M_Fire1/z_en_m_fire1.o (.sbss)
            build/src/overlays/actors/ovl_En_M_Fire1/ovl_En_M_Fire1_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_M_Fire1/z_en_m_fire1.o (.scommon)
            build/src/overlays/actors/ovl_En_M_Fire1/ovl_En_M_Fire1_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_M_Fire1/z_en_m_fire1.o (.bss)
            build/src/overlays/actors/ovl_En_M_Fire1/ovl_En_M_Fire1_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_M_Fire1/z_en_m_fire1.o (COMMON)
            build/src/overlays/actors/ovl_En_M_Fire1/ovl_En_M_Fire1_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_M_Fire1SegmentBssEnd = .;
        _ovl_En_M_Fire1SegmentEnd = .;
    }
    _ovl_En_M_Fire1SegmentBssSize = ABSOLUTE( _ovl_En_M_Fire1SegmentBssEnd - _ovl_En_M_Fire1SegmentBssStart );

    _ovl_En_M_ThunderSegmentRomStart = _RomSize;
    ..ovl_En_M_Thunder : AT(_RomSize)
    {
        _ovl_En_M_ThunderSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_M_ThunderSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_M_Thunder/z_en_m_thunder.o (.text)
            build/data/overlays/actors/z_en_m_thunder.data.o (.text)
            build/data/overlays/actors/z_en_m_thunder.reloc.o (.text)
        _ovl_En_M_ThunderSegmentTextEnd = .;
    _ovl_En_M_ThunderSegmentTextSize = ABSOLUTE( _ovl_En_M_ThunderSegmentTextEnd - _ovl_En_M_ThunderSegmentTextStart );
        _ovl_En_M_ThunderSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_M_Thunder/z_en_m_thunder.o (.data)
            build/data/overlays/actors/z_en_m_thunder.data.o (.data)
            build/data/overlays/actors/z_en_m_thunder.reloc.o (.data)
        _ovl_En_M_ThunderSegmentDataEnd = .;
    _ovl_En_M_ThunderSegmentDataSize = ABSOLUTE( _ovl_En_M_ThunderSegmentDataEnd - _ovl_En_M_ThunderSegmentDataStart );
        _ovl_En_M_ThunderSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_M_Thunder/z_en_m_thunder.o (.rodata)
            build/data/overlays/actors/z_en_m_thunder.data.o (.rodata)
            build/data/overlays/actors/z_en_m_thunder.reloc.o (.rodata)
        _ovl_En_M_ThunderSegmentRoDataEnd = .;
    _ovl_En_M_ThunderSegmentRoDataSize = ABSOLUTE( _ovl_En_M_ThunderSegmentRoDataEnd - _ovl_En_M_ThunderSegmentRoDataStart );
        _ovl_En_M_ThunderSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_M_Thunder/z_en_m_thunder.o (.sdata)
            build/data/overlays/actors/z_en_m_thunder.data.o (.sdata)
            build/data/overlays/actors/z_en_m_thunder.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_M_ThunderSegmentSDataEnd = .;
        _ovl_En_M_ThunderSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_M_Thunder/z_en_m_thunder.o (.ovl)
            build/data/overlays/actors/z_en_m_thunder.data.o (.ovl)
            build/data/overlays/actors/z_en_m_thunder.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_M_ThunderSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_M_ThunderSegmentOvlEnd - _ovl_En_M_ThunderSegmentTextStart );
    _ovl_En_M_ThunderSegmentRomEnd = _RomSize;

    ..ovl_En_M_Thunder.bss ADDR(..ovl_En_M_Thunder) + SIZEOF(..ovl_En_M_Thunder) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_M_ThunderSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_M_Thunder/z_en_m_thunder.o (.sbss)
            build/data/overlays/actors/z_en_m_thunder.data.o (.sbss)
            build/data/overlays/actors/z_en_m_thunder.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_M_Thunder/z_en_m_thunder.o (.scommon)
            build/data/overlays/actors/z_en_m_thunder.data.o (.scommon)
            build/data/overlays/actors/z_en_m_thunder.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_M_Thunder/z_en_m_thunder.o (.bss)
            build/data/overlays/actors/z_en_m_thunder.data.o (.bss)
            build/data/overlays/actors/z_en_m_thunder.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_M_Thunder/z_en_m_thunder.o (COMMON)
            build/data/overlays/actors/z_en_m_thunder.data.o (COMMON)
            build/data/overlays/actors/z_en_m_thunder.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_M_ThunderSegmentBssEnd = .;
        _ovl_En_M_ThunderSegmentEnd = .;
    }
    _ovl_En_M_ThunderSegmentBssSize = ABSOLUTE( _ovl_En_M_ThunderSegmentBssEnd - _ovl_En_M_ThunderSegmentBssStart );

    _ovl_En_Ma1SegmentRomStart = _RomSize;
    ..ovl_En_Ma1 : AT(_RomSize)
    {
        _ovl_En_Ma1SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Ma1SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ma1/z_en_ma1.o (.text)
            build/src/overlays/actors/ovl_En_Ma1/ovl_En_Ma1_reloc.o (.text)
        _ovl_En_Ma1SegmentTextEnd = .;
    _ovl_En_Ma1SegmentTextSize = ABSOLUTE( _ovl_En_Ma1SegmentTextEnd - _ovl_En_Ma1SegmentTextStart );
        _ovl_En_Ma1SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ma1/z_en_ma1.o (.data)
            build/src/overlays/actors/ovl_En_Ma1/ovl_En_Ma1_reloc.o (.data)
        _ovl_En_Ma1SegmentDataEnd = .;
    _ovl_En_Ma1SegmentDataSize = ABSOLUTE( _ovl_En_Ma1SegmentDataEnd - _ovl_En_Ma1SegmentDataStart );
        _ovl_En_Ma1SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ma1/z_en_ma1.o (.rodata)
            build/src/overlays/actors/ovl_En_Ma1/ovl_En_Ma1_reloc.o (.rodata)
        _ovl_En_Ma1SegmentRoDataEnd = .;
    _ovl_En_Ma1SegmentRoDataSize = ABSOLUTE( _ovl_En_Ma1SegmentRoDataEnd - _ovl_En_Ma1SegmentRoDataStart );
        _ovl_En_Ma1SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ma1/z_en_ma1.o (.sdata)
            build/src/overlays/actors/ovl_En_Ma1/ovl_En_Ma1_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Ma1SegmentSDataEnd = .;
        _ovl_En_Ma1SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ma1/z_en_ma1.o (.ovl)
            build/src/overlays/actors/ovl_En_Ma1/ovl_En_Ma1_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Ma1SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Ma1SegmentOvlEnd - _ovl_En_Ma1SegmentTextStart );
    _ovl_En_Ma1SegmentRomEnd = _RomSize;

    ..ovl_En_Ma1.bss ADDR(..ovl_En_Ma1) + SIZEOF(..ovl_En_Ma1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Ma1SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ma1/z_en_ma1.o (.sbss)
            build/src/overlays/actors/ovl_En_Ma1/ovl_En_Ma1_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ma1/z_en_ma1.o (.scommon)
            build/src/overlays/actors/ovl_En_Ma1/ovl_En_Ma1_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ma1/z_en_ma1.o (.bss)
            build/src/overlays/actors/ovl_En_Ma1/ovl_En_Ma1_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ma1/z_en_ma1.o (COMMON)
            build/src/overlays/actors/ovl_En_Ma1/ovl_En_Ma1_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Ma1SegmentBssEnd = .;
        _ovl_En_Ma1SegmentEnd = .;
    }
    _ovl_En_Ma1SegmentBssSize = ABSOLUTE( _ovl_En_Ma1SegmentBssEnd - _ovl_En_Ma1SegmentBssStart );

    _ovl_En_Ma2SegmentRomStart = _RomSize;
    ..ovl_En_Ma2 : AT(_RomSize)
    {
        _ovl_En_Ma2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Ma2SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ma2/z_en_ma2.o (.text)
            build/src/overlays/actors/ovl_En_Ma2/ovl_En_Ma2_reloc.o (.text)
        _ovl_En_Ma2SegmentTextEnd = .;
    _ovl_En_Ma2SegmentTextSize = ABSOLUTE( _ovl_En_Ma2SegmentTextEnd - _ovl_En_Ma2SegmentTextStart );
        _ovl_En_Ma2SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ma2/z_en_ma2.o (.data)
            build/src/overlays/actors/ovl_En_Ma2/ovl_En_Ma2_reloc.o (.data)
        _ovl_En_Ma2SegmentDataEnd = .;
    _ovl_En_Ma2SegmentDataSize = ABSOLUTE( _ovl_En_Ma2SegmentDataEnd - _ovl_En_Ma2SegmentDataStart );
        _ovl_En_Ma2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ma2/z_en_ma2.o (.rodata)
            build/src/overlays/actors/ovl_En_Ma2/ovl_En_Ma2_reloc.o (.rodata)
        _ovl_En_Ma2SegmentRoDataEnd = .;
    _ovl_En_Ma2SegmentRoDataSize = ABSOLUTE( _ovl_En_Ma2SegmentRoDataEnd - _ovl_En_Ma2SegmentRoDataStart );
        _ovl_En_Ma2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ma2/z_en_ma2.o (.sdata)
            build/src/overlays/actors/ovl_En_Ma2/ovl_En_Ma2_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Ma2SegmentSDataEnd = .;
        _ovl_En_Ma2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ma2/z_en_ma2.o (.ovl)
            build/src/overlays/actors/ovl_En_Ma2/ovl_En_Ma2_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Ma2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Ma2SegmentOvlEnd - _ovl_En_Ma2SegmentTextStart );
    _ovl_En_Ma2SegmentRomEnd = _RomSize;

    ..ovl_En_Ma2.bss ADDR(..ovl_En_Ma2) + SIZEOF(..ovl_En_Ma2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Ma2SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ma2/z_en_ma2.o (.sbss)
            build/src/overlays/actors/ovl_En_Ma2/ovl_En_Ma2_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ma2/z_en_ma2.o (.scommon)
            build/src/overlays/actors/ovl_En_Ma2/ovl_En_Ma2_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ma2/z_en_ma2.o (.bss)
            build/src/overlays/actors/ovl_En_Ma2/ovl_En_Ma2_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ma2/z_en_ma2.o (COMMON)
            build/src/overlays/actors/ovl_En_Ma2/ovl_En_Ma2_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Ma2SegmentBssEnd = .;
        _ovl_En_Ma2SegmentEnd = .;
    }
    _ovl_En_Ma2SegmentBssSize = ABSOLUTE( _ovl_En_Ma2SegmentBssEnd - _ovl_En_Ma2SegmentBssStart );

    _ovl_En_Ma3SegmentRomStart = _RomSize;
    ..ovl_En_Ma3 : AT(_RomSize)
    {
        _ovl_En_Ma3SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Ma3SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ma3/z_en_ma3.o (.text)
            build/src/overlays/actors/ovl_En_Ma3/ovl_En_Ma3_reloc.o (.text)
        _ovl_En_Ma3SegmentTextEnd = .;
    _ovl_En_Ma3SegmentTextSize = ABSOLUTE( _ovl_En_Ma3SegmentTextEnd - _ovl_En_Ma3SegmentTextStart );
        _ovl_En_Ma3SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ma3/z_en_ma3.o (.data)
            build/src/overlays/actors/ovl_En_Ma3/ovl_En_Ma3_reloc.o (.data)
        _ovl_En_Ma3SegmentDataEnd = .;
    _ovl_En_Ma3SegmentDataSize = ABSOLUTE( _ovl_En_Ma3SegmentDataEnd - _ovl_En_Ma3SegmentDataStart );
        _ovl_En_Ma3SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ma3/z_en_ma3.o (.rodata)
            build/src/overlays/actors/ovl_En_Ma3/ovl_En_Ma3_reloc.o (.rodata)
        _ovl_En_Ma3SegmentRoDataEnd = .;
    _ovl_En_Ma3SegmentRoDataSize = ABSOLUTE( _ovl_En_Ma3SegmentRoDataEnd - _ovl_En_Ma3SegmentRoDataStart );
        _ovl_En_Ma3SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ma3/z_en_ma3.o (.sdata)
            build/src/overlays/actors/ovl_En_Ma3/ovl_En_Ma3_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Ma3SegmentSDataEnd = .;
        _ovl_En_Ma3SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ma3/z_en_ma3.o (.ovl)
            build/src/overlays/actors/ovl_En_Ma3/ovl_En_Ma3_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Ma3SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Ma3SegmentOvlEnd - _ovl_En_Ma3SegmentTextStart );
    _ovl_En_Ma3SegmentRomEnd = _RomSize;

    ..ovl_En_Ma3.bss ADDR(..ovl_En_Ma3) + SIZEOF(..ovl_En_Ma3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Ma3SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ma3/z_en_ma3.o (.sbss)
            build/src/overlays/actors/ovl_En_Ma3/ovl_En_Ma3_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ma3/z_en_ma3.o (.scommon)
            build/src/overlays/actors/ovl_En_Ma3/ovl_En_Ma3_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ma3/z_en_ma3.o (.bss)
            build/src/overlays/actors/ovl_En_Ma3/ovl_En_Ma3_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ma3/z_en_ma3.o (COMMON)
            build/src/overlays/actors/ovl_En_Ma3/ovl_En_Ma3_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Ma3SegmentBssEnd = .;
        _ovl_En_Ma3SegmentEnd = .;
    }
    _ovl_En_Ma3SegmentBssSize = ABSOLUTE( _ovl_En_Ma3SegmentBssEnd - _ovl_En_Ma3SegmentBssStart );

    _ovl_En_MagSegmentRomStart = _RomSize;
    ..ovl_En_Mag : AT(_RomSize)
    {
        _ovl_En_MagSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_MagSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Mag/z_en_mag.o (.text)
            build/src/overlays/actors/ovl_En_Mag/ovl_En_Mag_reloc.o (.text)
        _ovl_En_MagSegmentTextEnd = .;
    _ovl_En_MagSegmentTextSize = ABSOLUTE( _ovl_En_MagSegmentTextEnd - _ovl_En_MagSegmentTextStart );
        _ovl_En_MagSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Mag/z_en_mag.o (.data)
            build/src/overlays/actors/ovl_En_Mag/ovl_En_Mag_reloc.o (.data)
        _ovl_En_MagSegmentDataEnd = .;
    _ovl_En_MagSegmentDataSize = ABSOLUTE( _ovl_En_MagSegmentDataEnd - _ovl_En_MagSegmentDataStart );
        _ovl_En_MagSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Mag/z_en_mag.o (.rodata)
            build/src/overlays/actors/ovl_En_Mag/ovl_En_Mag_reloc.o (.rodata)
        _ovl_En_MagSegmentRoDataEnd = .;
    _ovl_En_MagSegmentRoDataSize = ABSOLUTE( _ovl_En_MagSegmentRoDataEnd - _ovl_En_MagSegmentRoDataStart );
        _ovl_En_MagSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Mag/z_en_mag.o (.sdata)
            build/src/overlays/actors/ovl_En_Mag/ovl_En_Mag_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_MagSegmentSDataEnd = .;
        _ovl_En_MagSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Mag/z_en_mag.o (.ovl)
            build/src/overlays/actors/ovl_En_Mag/ovl_En_Mag_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_MagSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_MagSegmentOvlEnd - _ovl_En_MagSegmentTextStart );
    _ovl_En_MagSegmentRomEnd = _RomSize;

    ..ovl_En_Mag.bss ADDR(..ovl_En_Mag) + SIZEOF(..ovl_En_Mag) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_MagSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Mag/z_en_mag.o (.sbss)
            build/src/overlays/actors/ovl_En_Mag/ovl_En_Mag_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Mag/z_en_mag.o (.scommon)
            build/src/overlays/actors/ovl_En_Mag/ovl_En_Mag_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Mag/z_en_mag.o (.bss)
            build/src/overlays/actors/ovl_En_Mag/ovl_En_Mag_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Mag/z_en_mag.o (COMMON)
            build/src/overlays/actors/ovl_En_Mag/ovl_En_Mag_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_MagSegmentBssEnd = .;
        _ovl_En_MagSegmentEnd = .;
    }
    _ovl_En_MagSegmentBssSize = ABSOLUTE( _ovl_En_MagSegmentBssEnd - _ovl_En_MagSegmentBssStart );

    _ovl_En_MbSegmentRomStart = _RomSize;
    ..ovl_En_Mb : AT(_RomSize)
    {
        _ovl_En_MbSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_MbSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Mb/z_en_mb.o (.text)
            build/data/overlays/actors/z_en_mb.data.o (.text)
            build/data/overlays/actors/z_en_mb.reloc.o (.text)
        _ovl_En_MbSegmentTextEnd = .;
    _ovl_En_MbSegmentTextSize = ABSOLUTE( _ovl_En_MbSegmentTextEnd - _ovl_En_MbSegmentTextStart );
        _ovl_En_MbSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Mb/z_en_mb.o (.data)
            build/data/overlays/actors/z_en_mb.data.o (.data)
            build/data/overlays/actors/z_en_mb.reloc.o (.data)
        _ovl_En_MbSegmentDataEnd = .;
    _ovl_En_MbSegmentDataSize = ABSOLUTE( _ovl_En_MbSegmentDataEnd - _ovl_En_MbSegmentDataStart );
        _ovl_En_MbSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Mb/z_en_mb.o (.rodata)
            build/data/overlays/actors/z_en_mb.data.o (.rodata)
            build/data/overlays/actors/z_en_mb.reloc.o (.rodata)
        _ovl_En_MbSegmentRoDataEnd = .;
    _ovl_En_MbSegmentRoDataSize = ABSOLUTE( _ovl_En_MbSegmentRoDataEnd - _ovl_En_MbSegmentRoDataStart );
        _ovl_En_MbSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Mb/z_en_mb.o (.sdata)
            build/data/overlays/actors/z_en_mb.data.o (.sdata)
            build/data/overlays/actors/z_en_mb.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_MbSegmentSDataEnd = .;
        _ovl_En_MbSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Mb/z_en_mb.o (.ovl)
            build/data/overlays/actors/z_en_mb.data.o (.ovl)
            build/data/overlays/actors/z_en_mb.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_MbSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_MbSegmentOvlEnd - _ovl_En_MbSegmentTextStart );
    _ovl_En_MbSegmentRomEnd = _RomSize;

    ..ovl_En_Mb.bss ADDR(..ovl_En_Mb) + SIZEOF(..ovl_En_Mb) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_MbSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Mb/z_en_mb.o (.sbss)
            build/data/overlays/actors/z_en_mb.data.o (.sbss)
            build/data/overlays/actors/z_en_mb.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Mb/z_en_mb.o (.scommon)
            build/data/overlays/actors/z_en_mb.data.o (.scommon)
            build/data/overlays/actors/z_en_mb.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Mb/z_en_mb.o (.bss)
            build/data/overlays/actors/z_en_mb.data.o (.bss)
            build/data/overlays/actors/z_en_mb.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Mb/z_en_mb.o (COMMON)
            build/data/overlays/actors/z_en_mb.data.o (COMMON)
            build/data/overlays/actors/z_en_mb.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_MbSegmentBssEnd = .;
        _ovl_En_MbSegmentEnd = .;
    }
    _ovl_En_MbSegmentBssSize = ABSOLUTE( _ovl_En_MbSegmentBssEnd - _ovl_En_MbSegmentBssStart );

    _ovl_En_MdSegmentRomStart = _RomSize;
    ..ovl_En_Md : AT(_RomSize)
    {
        _ovl_En_MdSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_MdSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Md/z_en_md.o (.text)
            build/src/overlays/actors/ovl_En_Md/ovl_En_Md_reloc.o (.text)
        _ovl_En_MdSegmentTextEnd = .;
    _ovl_En_MdSegmentTextSize = ABSOLUTE( _ovl_En_MdSegmentTextEnd - _ovl_En_MdSegmentTextStart );
        _ovl_En_MdSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Md/z_en_md.o (.data)
            build/src/overlays/actors/ovl_En_Md/ovl_En_Md_reloc.o (.data)
        _ovl_En_MdSegmentDataEnd = .;
    _ovl_En_MdSegmentDataSize = ABSOLUTE( _ovl_En_MdSegmentDataEnd - _ovl_En_MdSegmentDataStart );
        _ovl_En_MdSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Md/z_en_md.o (.rodata)
            build/src/overlays/actors/ovl_En_Md/ovl_En_Md_reloc.o (.rodata)
        _ovl_En_MdSegmentRoDataEnd = .;
    _ovl_En_MdSegmentRoDataSize = ABSOLUTE( _ovl_En_MdSegmentRoDataEnd - _ovl_En_MdSegmentRoDataStart );
        _ovl_En_MdSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Md/z_en_md.o (.sdata)
            build/src/overlays/actors/ovl_En_Md/ovl_En_Md_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_MdSegmentSDataEnd = .;
        _ovl_En_MdSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Md/z_en_md.o (.ovl)
            build/src/overlays/actors/ovl_En_Md/ovl_En_Md_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_MdSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_MdSegmentOvlEnd - _ovl_En_MdSegmentTextStart );
    _ovl_En_MdSegmentRomEnd = _RomSize;

    ..ovl_En_Md.bss ADDR(..ovl_En_Md) + SIZEOF(..ovl_En_Md) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_MdSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Md/z_en_md.o (.sbss)
            build/src/overlays/actors/ovl_En_Md/ovl_En_Md_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Md/z_en_md.o (.scommon)
            build/src/overlays/actors/ovl_En_Md/ovl_En_Md_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Md/z_en_md.o (.bss)
            build/src/overlays/actors/ovl_En_Md/ovl_En_Md_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Md/z_en_md.o (COMMON)
            build/src/overlays/actors/ovl_En_Md/ovl_En_Md_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_MdSegmentBssEnd = .;
        _ovl_En_MdSegmentEnd = .;
    }
    _ovl_En_MdSegmentBssSize = ABSOLUTE( _ovl_En_MdSegmentBssEnd - _ovl_En_MdSegmentBssStart );

    _ovl_En_MkSegmentRomStart = _RomSize;
    ..ovl_En_Mk : AT(_RomSize)
    {
        _ovl_En_MkSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_MkSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Mk/z_en_mk.o (.text)
            build/data/overlays/actors/z_en_mk.data.o (.text)
            build/data/overlays/actors/z_en_mk.reloc.o (.text)
        _ovl_En_MkSegmentTextEnd = .;
    _ovl_En_MkSegmentTextSize = ABSOLUTE( _ovl_En_MkSegmentTextEnd - _ovl_En_MkSegmentTextStart );
        _ovl_En_MkSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Mk/z_en_mk.o (.data)
            build/data/overlays/actors/z_en_mk.data.o (.data)
            build/data/overlays/actors/z_en_mk.reloc.o (.data)
        _ovl_En_MkSegmentDataEnd = .;
    _ovl_En_MkSegmentDataSize = ABSOLUTE( _ovl_En_MkSegmentDataEnd - _ovl_En_MkSegmentDataStart );
        _ovl_En_MkSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Mk/z_en_mk.o (.rodata)
            build/data/overlays/actors/z_en_mk.data.o (.rodata)
            build/data/overlays/actors/z_en_mk.reloc.o (.rodata)
        _ovl_En_MkSegmentRoDataEnd = .;
    _ovl_En_MkSegmentRoDataSize = ABSOLUTE( _ovl_En_MkSegmentRoDataEnd - _ovl_En_MkSegmentRoDataStart );
        _ovl_En_MkSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Mk/z_en_mk.o (.sdata)
            build/data/overlays/actors/z_en_mk.data.o (.sdata)
            build/data/overlays/actors/z_en_mk.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_MkSegmentSDataEnd = .;
        _ovl_En_MkSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Mk/z_en_mk.o (.ovl)
            build/data/overlays/actors/z_en_mk.data.o (.ovl)
            build/data/overlays/actors/z_en_mk.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_MkSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_MkSegmentOvlEnd - _ovl_En_MkSegmentTextStart );
    _ovl_En_MkSegmentRomEnd = _RomSize;

    ..ovl_En_Mk.bss ADDR(..ovl_En_Mk) + SIZEOF(..ovl_En_Mk) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_MkSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Mk/z_en_mk.o (.sbss)
            build/data/overlays/actors/z_en_mk.data.o (.sbss)
            build/data/overlays/actors/z_en_mk.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Mk/z_en_mk.o (.scommon)
            build/data/overlays/actors/z_en_mk.data.o (.scommon)
            build/data/overlays/actors/z_en_mk.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Mk/z_en_mk.o (.bss)
            build/data/overlays/actors/z_en_mk.data.o (.bss)
            build/data/overlays/actors/z_en_mk.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Mk/z_en_mk.o (COMMON)
            build/data/overlays/actors/z_en_mk.data.o (COMMON)
            build/data/overlays/actors/z_en_mk.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_MkSegmentBssEnd = .;
        _ovl_En_MkSegmentEnd = .;
    }
    _ovl_En_MkSegmentBssSize = ABSOLUTE( _ovl_En_MkSegmentBssEnd - _ovl_En_MkSegmentBssStart );

    _ovl_En_MmSegmentRomStart = _RomSize;
    ..ovl_En_Mm : AT(_RomSize)
    {
        _ovl_En_MmSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_MmSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Mm/z_en_mm.o (.text)
            build/data/overlays/actors/z_en_mm.data.o (.text)
            build/data/overlays/actors/z_en_mm.reloc.o (.text)
        _ovl_En_MmSegmentTextEnd = .;
    _ovl_En_MmSegmentTextSize = ABSOLUTE( _ovl_En_MmSegmentTextEnd - _ovl_En_MmSegmentTextStart );
        _ovl_En_MmSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Mm/z_en_mm.o (.data)
            build/data/overlays/actors/z_en_mm.data.o (.data)
            build/data/overlays/actors/z_en_mm.reloc.o (.data)
        _ovl_En_MmSegmentDataEnd = .;
    _ovl_En_MmSegmentDataSize = ABSOLUTE( _ovl_En_MmSegmentDataEnd - _ovl_En_MmSegmentDataStart );
        _ovl_En_MmSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Mm/z_en_mm.o (.rodata)
            build/data/overlays/actors/z_en_mm.data.o (.rodata)
            build/data/overlays/actors/z_en_mm.reloc.o (.rodata)
        _ovl_En_MmSegmentRoDataEnd = .;
    _ovl_En_MmSegmentRoDataSize = ABSOLUTE( _ovl_En_MmSegmentRoDataEnd - _ovl_En_MmSegmentRoDataStart );
        _ovl_En_MmSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Mm/z_en_mm.o (.sdata)
            build/data/overlays/actors/z_en_mm.data.o (.sdata)
            build/data/overlays/actors/z_en_mm.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_MmSegmentSDataEnd = .;
        _ovl_En_MmSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Mm/z_en_mm.o (.ovl)
            build/data/overlays/actors/z_en_mm.data.o (.ovl)
            build/data/overlays/actors/z_en_mm.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_MmSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_MmSegmentOvlEnd - _ovl_En_MmSegmentTextStart );
    _ovl_En_MmSegmentRomEnd = _RomSize;

    ..ovl_En_Mm.bss ADDR(..ovl_En_Mm) + SIZEOF(..ovl_En_Mm) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_MmSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Mm/z_en_mm.o (.sbss)
            build/data/overlays/actors/z_en_mm.data.o (.sbss)
            build/data/overlays/actors/z_en_mm.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Mm/z_en_mm.o (.scommon)
            build/data/overlays/actors/z_en_mm.data.o (.scommon)
            build/data/overlays/actors/z_en_mm.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Mm/z_en_mm.o (.bss)
            build/data/overlays/actors/z_en_mm.data.o (.bss)
            build/data/overlays/actors/z_en_mm.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Mm/z_en_mm.o (COMMON)
            build/data/overlays/actors/z_en_mm.data.o (COMMON)
            build/data/overlays/actors/z_en_mm.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_MmSegmentBssEnd = .;
        _ovl_En_MmSegmentEnd = .;
    }
    _ovl_En_MmSegmentBssSize = ABSOLUTE( _ovl_En_MmSegmentBssEnd - _ovl_En_MmSegmentBssStart );

    _ovl_En_Mm2SegmentRomStart = _RomSize;
    ..ovl_En_Mm2 : AT(_RomSize)
    {
        _ovl_En_Mm2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Mm2SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Mm2/z_en_mm2.o (.text)
            build/data/overlays/actors/z_en_mm2.data.o (.text)
            build/data/overlays/actors/z_en_mm2.reloc.o (.text)
        _ovl_En_Mm2SegmentTextEnd = .;
    _ovl_En_Mm2SegmentTextSize = ABSOLUTE( _ovl_En_Mm2SegmentTextEnd - _ovl_En_Mm2SegmentTextStart );
        _ovl_En_Mm2SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Mm2/z_en_mm2.o (.data)
            build/data/overlays/actors/z_en_mm2.data.o (.data)
            build/data/overlays/actors/z_en_mm2.reloc.o (.data)
        _ovl_En_Mm2SegmentDataEnd = .;
    _ovl_En_Mm2SegmentDataSize = ABSOLUTE( _ovl_En_Mm2SegmentDataEnd - _ovl_En_Mm2SegmentDataStart );
        _ovl_En_Mm2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Mm2/z_en_mm2.o (.rodata)
            build/data/overlays/actors/z_en_mm2.data.o (.rodata)
            build/data/overlays/actors/z_en_mm2.reloc.o (.rodata)
        _ovl_En_Mm2SegmentRoDataEnd = .;
    _ovl_En_Mm2SegmentRoDataSize = ABSOLUTE( _ovl_En_Mm2SegmentRoDataEnd - _ovl_En_Mm2SegmentRoDataStart );
        _ovl_En_Mm2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Mm2/z_en_mm2.o (.sdata)
            build/data/overlays/actors/z_en_mm2.data.o (.sdata)
            build/data/overlays/actors/z_en_mm2.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Mm2SegmentSDataEnd = .;
        _ovl_En_Mm2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Mm2/z_en_mm2.o (.ovl)
            build/data/overlays/actors/z_en_mm2.data.o (.ovl)
            build/data/overlays/actors/z_en_mm2.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Mm2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Mm2SegmentOvlEnd - _ovl_En_Mm2SegmentTextStart );
    _ovl_En_Mm2SegmentRomEnd = _RomSize;

    ..ovl_En_Mm2.bss ADDR(..ovl_En_Mm2) + SIZEOF(..ovl_En_Mm2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Mm2SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Mm2/z_en_mm2.o (.sbss)
            build/data/overlays/actors/z_en_mm2.data.o (.sbss)
            build/data/overlays/actors/z_en_mm2.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Mm2/z_en_mm2.o (.scommon)
            build/data/overlays/actors/z_en_mm2.data.o (.scommon)
            build/data/overlays/actors/z_en_mm2.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Mm2/z_en_mm2.o (.bss)
            build/data/overlays/actors/z_en_mm2.data.o (.bss)
            build/data/overlays/actors/z_en_mm2.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Mm2/z_en_mm2.o (COMMON)
            build/data/overlays/actors/z_en_mm2.data.o (COMMON)
            build/data/overlays/actors/z_en_mm2.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Mm2SegmentBssEnd = .;
        _ovl_En_Mm2SegmentEnd = .;
    }
    _ovl_En_Mm2SegmentBssSize = ABSOLUTE( _ovl_En_Mm2SegmentBssEnd - _ovl_En_Mm2SegmentBssStart );

    _ovl_En_MsSegmentRomStart = _RomSize;
    ..ovl_En_Ms : AT(_RomSize)
    {
        _ovl_En_MsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_MsSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ms/z_en_ms.o (.text)
            build/src/overlays/actors/ovl_En_Ms/ovl_En_Ms_reloc.o (.text)
        _ovl_En_MsSegmentTextEnd = .;
    _ovl_En_MsSegmentTextSize = ABSOLUTE( _ovl_En_MsSegmentTextEnd - _ovl_En_MsSegmentTextStart );
        _ovl_En_MsSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ms/z_en_ms.o (.data)
            build/src/overlays/actors/ovl_En_Ms/ovl_En_Ms_reloc.o (.data)
        _ovl_En_MsSegmentDataEnd = .;
    _ovl_En_MsSegmentDataSize = ABSOLUTE( _ovl_En_MsSegmentDataEnd - _ovl_En_MsSegmentDataStart );
        _ovl_En_MsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ms/z_en_ms.o (.rodata)
            build/src/overlays/actors/ovl_En_Ms/ovl_En_Ms_reloc.o (.rodata)
        _ovl_En_MsSegmentRoDataEnd = .;
    _ovl_En_MsSegmentRoDataSize = ABSOLUTE( _ovl_En_MsSegmentRoDataEnd - _ovl_En_MsSegmentRoDataStart );
        _ovl_En_MsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ms/z_en_ms.o (.sdata)
            build/src/overlays/actors/ovl_En_Ms/ovl_En_Ms_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_MsSegmentSDataEnd = .;
        _ovl_En_MsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ms/z_en_ms.o (.ovl)
            build/src/overlays/actors/ovl_En_Ms/ovl_En_Ms_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_MsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_MsSegmentOvlEnd - _ovl_En_MsSegmentTextStart );
    _ovl_En_MsSegmentRomEnd = _RomSize;

    ..ovl_En_Ms.bss ADDR(..ovl_En_Ms) + SIZEOF(..ovl_En_Ms) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_MsSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ms/z_en_ms.o (.sbss)
            build/src/overlays/actors/ovl_En_Ms/ovl_En_Ms_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ms/z_en_ms.o (.scommon)
            build/src/overlays/actors/ovl_En_Ms/ovl_En_Ms_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ms/z_en_ms.o (.bss)
            build/src/overlays/actors/ovl_En_Ms/ovl_En_Ms_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ms/z_en_ms.o (COMMON)
            build/src/overlays/actors/ovl_En_Ms/ovl_En_Ms_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_MsSegmentBssEnd = .;
        _ovl_En_MsSegmentEnd = .;
    }
    _ovl_En_MsSegmentBssSize = ABSOLUTE( _ovl_En_MsSegmentBssEnd - _ovl_En_MsSegmentBssStart );

    _ovl_En_MuSegmentRomStart = _RomSize;
    ..ovl_En_Mu : AT(_RomSize)
    {
        _ovl_En_MuSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_MuSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Mu/z_en_mu.o (.text)
            build/data/overlays/actors/z_en_mu.data.o (.text)
            build/data/overlays/actors/z_en_mu.reloc.o (.text)
        _ovl_En_MuSegmentTextEnd = .;
    _ovl_En_MuSegmentTextSize = ABSOLUTE( _ovl_En_MuSegmentTextEnd - _ovl_En_MuSegmentTextStart );
        _ovl_En_MuSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Mu/z_en_mu.o (.data)
            build/data/overlays/actors/z_en_mu.data.o (.data)
            build/data/overlays/actors/z_en_mu.reloc.o (.data)
        _ovl_En_MuSegmentDataEnd = .;
    _ovl_En_MuSegmentDataSize = ABSOLUTE( _ovl_En_MuSegmentDataEnd - _ovl_En_MuSegmentDataStart );
        _ovl_En_MuSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Mu/z_en_mu.o (.rodata)
            build/data/overlays/actors/z_en_mu.data.o (.rodata)
            build/data/overlays/actors/z_en_mu.reloc.o (.rodata)
        _ovl_En_MuSegmentRoDataEnd = .;
    _ovl_En_MuSegmentRoDataSize = ABSOLUTE( _ovl_En_MuSegmentRoDataEnd - _ovl_En_MuSegmentRoDataStart );
        _ovl_En_MuSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Mu/z_en_mu.o (.sdata)
            build/data/overlays/actors/z_en_mu.data.o (.sdata)
            build/data/overlays/actors/z_en_mu.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_MuSegmentSDataEnd = .;
        _ovl_En_MuSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Mu/z_en_mu.o (.ovl)
            build/data/overlays/actors/z_en_mu.data.o (.ovl)
            build/data/overlays/actors/z_en_mu.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_MuSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_MuSegmentOvlEnd - _ovl_En_MuSegmentTextStart );
    _ovl_En_MuSegmentRomEnd = _RomSize;

    ..ovl_En_Mu.bss ADDR(..ovl_En_Mu) + SIZEOF(..ovl_En_Mu) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_MuSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Mu/z_en_mu.o (.sbss)
            build/data/overlays/actors/z_en_mu.data.o (.sbss)
            build/data/overlays/actors/z_en_mu.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Mu/z_en_mu.o (.scommon)
            build/data/overlays/actors/z_en_mu.data.o (.scommon)
            build/data/overlays/actors/z_en_mu.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Mu/z_en_mu.o (.bss)
            build/data/overlays/actors/z_en_mu.data.o (.bss)
            build/data/overlays/actors/z_en_mu.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Mu/z_en_mu.o (COMMON)
            build/data/overlays/actors/z_en_mu.data.o (COMMON)
            build/data/overlays/actors/z_en_mu.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_MuSegmentBssEnd = .;
        _ovl_En_MuSegmentEnd = .;
    }
    _ovl_En_MuSegmentBssSize = ABSOLUTE( _ovl_En_MuSegmentBssEnd - _ovl_En_MuSegmentBssStart );

    _ovl_En_NbSegmentRomStart = _RomSize;
    ..ovl_En_Nb : AT(_RomSize)
    {
        _ovl_En_NbSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_NbSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Nb/z_en_nb.o (.text)
            build/data/overlays/actors/z_en_nb.data.o (.text)
            build/data/overlays/actors/z_en_nb.reloc.o (.text)
        _ovl_En_NbSegmentTextEnd = .;
    _ovl_En_NbSegmentTextSize = ABSOLUTE( _ovl_En_NbSegmentTextEnd - _ovl_En_NbSegmentTextStart );
        _ovl_En_NbSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Nb/z_en_nb.o (.data)
            build/data/overlays/actors/z_en_nb.data.o (.data)
            build/data/overlays/actors/z_en_nb.reloc.o (.data)
        _ovl_En_NbSegmentDataEnd = .;
    _ovl_En_NbSegmentDataSize = ABSOLUTE( _ovl_En_NbSegmentDataEnd - _ovl_En_NbSegmentDataStart );
        _ovl_En_NbSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Nb/z_en_nb.o (.rodata)
            build/data/overlays/actors/z_en_nb.data.o (.rodata)
            build/data/overlays/actors/z_en_nb.reloc.o (.rodata)
        _ovl_En_NbSegmentRoDataEnd = .;
    _ovl_En_NbSegmentRoDataSize = ABSOLUTE( _ovl_En_NbSegmentRoDataEnd - _ovl_En_NbSegmentRoDataStart );
        _ovl_En_NbSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Nb/z_en_nb.o (.sdata)
            build/data/overlays/actors/z_en_nb.data.o (.sdata)
            build/data/overlays/actors/z_en_nb.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_NbSegmentSDataEnd = .;
        _ovl_En_NbSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Nb/z_en_nb.o (.ovl)
            build/data/overlays/actors/z_en_nb.data.o (.ovl)
            build/data/overlays/actors/z_en_nb.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_NbSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_NbSegmentOvlEnd - _ovl_En_NbSegmentTextStart );
    _ovl_En_NbSegmentRomEnd = _RomSize;

    ..ovl_En_Nb.bss ADDR(..ovl_En_Nb) + SIZEOF(..ovl_En_Nb) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_NbSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Nb/z_en_nb.o (.sbss)
            build/data/overlays/actors/z_en_nb.data.o (.sbss)
            build/data/overlays/actors/z_en_nb.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Nb/z_en_nb.o (.scommon)
            build/data/overlays/actors/z_en_nb.data.o (.scommon)
            build/data/overlays/actors/z_en_nb.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Nb/z_en_nb.o (.bss)
            build/data/overlays/actors/z_en_nb.data.o (.bss)
            build/data/overlays/actors/z_en_nb.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Nb/z_en_nb.o (COMMON)
            build/data/overlays/actors/z_en_nb.data.o (COMMON)
            build/data/overlays/actors/z_en_nb.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_NbSegmentBssEnd = .;
        _ovl_En_NbSegmentEnd = .;
    }
    _ovl_En_NbSegmentBssSize = ABSOLUTE( _ovl_En_NbSegmentBssEnd - _ovl_En_NbSegmentBssStart );

    _ovl_En_NiwSegmentRomStart = _RomSize;
    ..ovl_En_Niw : AT(_RomSize)
    {
        _ovl_En_NiwSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_NiwSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Niw/z_en_niw.o (.text)
            build/data/overlays/actors/z_en_niw.data.o (.text)
            build/data/overlays/actors/z_en_niw.reloc.o (.text)
        _ovl_En_NiwSegmentTextEnd = .;
    _ovl_En_NiwSegmentTextSize = ABSOLUTE( _ovl_En_NiwSegmentTextEnd - _ovl_En_NiwSegmentTextStart );
        _ovl_En_NiwSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Niw/z_en_niw.o (.data)
            build/data/overlays/actors/z_en_niw.data.o (.data)
            build/data/overlays/actors/z_en_niw.reloc.o (.data)
        _ovl_En_NiwSegmentDataEnd = .;
    _ovl_En_NiwSegmentDataSize = ABSOLUTE( _ovl_En_NiwSegmentDataEnd - _ovl_En_NiwSegmentDataStart );
        _ovl_En_NiwSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Niw/z_en_niw.o (.rodata)
            build/data/overlays/actors/z_en_niw.data.o (.rodata)
            build/data/overlays/actors/z_en_niw.reloc.o (.rodata)
        _ovl_En_NiwSegmentRoDataEnd = .;
    _ovl_En_NiwSegmentRoDataSize = ABSOLUTE( _ovl_En_NiwSegmentRoDataEnd - _ovl_En_NiwSegmentRoDataStart );
        _ovl_En_NiwSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Niw/z_en_niw.o (.sdata)
            build/data/overlays/actors/z_en_niw.data.o (.sdata)
            build/data/overlays/actors/z_en_niw.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_NiwSegmentSDataEnd = .;
        _ovl_En_NiwSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Niw/z_en_niw.o (.ovl)
            build/data/overlays/actors/z_en_niw.data.o (.ovl)
            build/data/overlays/actors/z_en_niw.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_NiwSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_NiwSegmentOvlEnd - _ovl_En_NiwSegmentTextStart );
    _ovl_En_NiwSegmentRomEnd = _RomSize;

    ..ovl_En_Niw.bss ADDR(..ovl_En_Niw) + SIZEOF(..ovl_En_Niw) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_NiwSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Niw/z_en_niw.o (.sbss)
            build/data/overlays/actors/z_en_niw.data.o (.sbss)
            build/data/overlays/actors/z_en_niw.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Niw/z_en_niw.o (.scommon)
            build/data/overlays/actors/z_en_niw.data.o (.scommon)
            build/data/overlays/actors/z_en_niw.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Niw/z_en_niw.o (.bss)
            build/data/overlays/actors/z_en_niw.data.o (.bss)
            build/data/overlays/actors/z_en_niw.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Niw/z_en_niw.o (COMMON)
            build/data/overlays/actors/z_en_niw.data.o (COMMON)
            build/data/overlays/actors/z_en_niw.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_NiwSegmentBssEnd = .;
        _ovl_En_NiwSegmentEnd = .;
    }
    _ovl_En_NiwSegmentBssSize = ABSOLUTE( _ovl_En_NiwSegmentBssEnd - _ovl_En_NiwSegmentBssStart );

    _ovl_En_Niw_GirlSegmentRomStart = _RomSize;
    ..ovl_En_Niw_Girl : AT(_RomSize)
    {
        _ovl_En_Niw_GirlSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Niw_GirlSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Niw_Girl/z_en_niw_girl.o (.text)
            build/src/overlays/actors/ovl_En_Niw_Girl/ovl_En_Niw_Girl_reloc.o (.text)
        _ovl_En_Niw_GirlSegmentTextEnd = .;
    _ovl_En_Niw_GirlSegmentTextSize = ABSOLUTE( _ovl_En_Niw_GirlSegmentTextEnd - _ovl_En_Niw_GirlSegmentTextStart );
        _ovl_En_Niw_GirlSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Niw_Girl/z_en_niw_girl.o (.data)
            build/src/overlays/actors/ovl_En_Niw_Girl/ovl_En_Niw_Girl_reloc.o (.data)
        _ovl_En_Niw_GirlSegmentDataEnd = .;
    _ovl_En_Niw_GirlSegmentDataSize = ABSOLUTE( _ovl_En_Niw_GirlSegmentDataEnd - _ovl_En_Niw_GirlSegmentDataStart );
        _ovl_En_Niw_GirlSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Niw_Girl/z_en_niw_girl.o (.rodata)
            build/src/overlays/actors/ovl_En_Niw_Girl/ovl_En_Niw_Girl_reloc.o (.rodata)
        _ovl_En_Niw_GirlSegmentRoDataEnd = .;
    _ovl_En_Niw_GirlSegmentRoDataSize = ABSOLUTE( _ovl_En_Niw_GirlSegmentRoDataEnd - _ovl_En_Niw_GirlSegmentRoDataStart );
        _ovl_En_Niw_GirlSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Niw_Girl/z_en_niw_girl.o (.sdata)
            build/src/overlays/actors/ovl_En_Niw_Girl/ovl_En_Niw_Girl_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Niw_GirlSegmentSDataEnd = .;
        _ovl_En_Niw_GirlSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Niw_Girl/z_en_niw_girl.o (.ovl)
            build/src/overlays/actors/ovl_En_Niw_Girl/ovl_En_Niw_Girl_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Niw_GirlSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Niw_GirlSegmentOvlEnd - _ovl_En_Niw_GirlSegmentTextStart );
    _ovl_En_Niw_GirlSegmentRomEnd = _RomSize;

    ..ovl_En_Niw_Girl.bss ADDR(..ovl_En_Niw_Girl) + SIZEOF(..ovl_En_Niw_Girl) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Niw_GirlSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Niw_Girl/z_en_niw_girl.o (.sbss)
            build/src/overlays/actors/ovl_En_Niw_Girl/ovl_En_Niw_Girl_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Niw_Girl/z_en_niw_girl.o (.scommon)
            build/src/overlays/actors/ovl_En_Niw_Girl/ovl_En_Niw_Girl_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Niw_Girl/z_en_niw_girl.o (.bss)
            build/src/overlays/actors/ovl_En_Niw_Girl/ovl_En_Niw_Girl_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Niw_Girl/z_en_niw_girl.o (COMMON)
            build/src/overlays/actors/ovl_En_Niw_Girl/ovl_En_Niw_Girl_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Niw_GirlSegmentBssEnd = .;
        _ovl_En_Niw_GirlSegmentEnd = .;
    }
    _ovl_En_Niw_GirlSegmentBssSize = ABSOLUTE( _ovl_En_Niw_GirlSegmentBssEnd - _ovl_En_Niw_GirlSegmentBssStart );

    _ovl_En_Niw_LadySegmentRomStart = _RomSize;
    ..ovl_En_Niw_Lady : AT(_RomSize)
    {
        _ovl_En_Niw_LadySegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Niw_LadySegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Niw_Lady/z_en_niw_lady.o (.text)
            build/data/overlays/actors/z_en_niw_lady.data.o (.text)
            build/data/overlays/actors/z_en_niw_lady.reloc.o (.text)
        _ovl_En_Niw_LadySegmentTextEnd = .;
    _ovl_En_Niw_LadySegmentTextSize = ABSOLUTE( _ovl_En_Niw_LadySegmentTextEnd - _ovl_En_Niw_LadySegmentTextStart );
        _ovl_En_Niw_LadySegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Niw_Lady/z_en_niw_lady.o (.data)
            build/data/overlays/actors/z_en_niw_lady.data.o (.data)
            build/data/overlays/actors/z_en_niw_lady.reloc.o (.data)
        _ovl_En_Niw_LadySegmentDataEnd = .;
    _ovl_En_Niw_LadySegmentDataSize = ABSOLUTE( _ovl_En_Niw_LadySegmentDataEnd - _ovl_En_Niw_LadySegmentDataStart );
        _ovl_En_Niw_LadySegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Niw_Lady/z_en_niw_lady.o (.rodata)
            build/data/overlays/actors/z_en_niw_lady.data.o (.rodata)
            build/data/overlays/actors/z_en_niw_lady.reloc.o (.rodata)
        _ovl_En_Niw_LadySegmentRoDataEnd = .;
    _ovl_En_Niw_LadySegmentRoDataSize = ABSOLUTE( _ovl_En_Niw_LadySegmentRoDataEnd - _ovl_En_Niw_LadySegmentRoDataStart );
        _ovl_En_Niw_LadySegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Niw_Lady/z_en_niw_lady.o (.sdata)
            build/data/overlays/actors/z_en_niw_lady.data.o (.sdata)
            build/data/overlays/actors/z_en_niw_lady.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Niw_LadySegmentSDataEnd = .;
        _ovl_En_Niw_LadySegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Niw_Lady/z_en_niw_lady.o (.ovl)
            build/data/overlays/actors/z_en_niw_lady.data.o (.ovl)
            build/data/overlays/actors/z_en_niw_lady.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Niw_LadySegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Niw_LadySegmentOvlEnd - _ovl_En_Niw_LadySegmentTextStart );
    _ovl_En_Niw_LadySegmentRomEnd = _RomSize;

    ..ovl_En_Niw_Lady.bss ADDR(..ovl_En_Niw_Lady) + SIZEOF(..ovl_En_Niw_Lady) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Niw_LadySegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Niw_Lady/z_en_niw_lady.o (.sbss)
            build/data/overlays/actors/z_en_niw_lady.data.o (.sbss)
            build/data/overlays/actors/z_en_niw_lady.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Niw_Lady/z_en_niw_lady.o (.scommon)
            build/data/overlays/actors/z_en_niw_lady.data.o (.scommon)
            build/data/overlays/actors/z_en_niw_lady.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Niw_Lady/z_en_niw_lady.o (.bss)
            build/data/overlays/actors/z_en_niw_lady.data.o (.bss)
            build/data/overlays/actors/z_en_niw_lady.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Niw_Lady/z_en_niw_lady.o (COMMON)
            build/data/overlays/actors/z_en_niw_lady.data.o (COMMON)
            build/data/overlays/actors/z_en_niw_lady.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Niw_LadySegmentBssEnd = .;
        _ovl_En_Niw_LadySegmentEnd = .;
    }
    _ovl_En_Niw_LadySegmentBssSize = ABSOLUTE( _ovl_En_Niw_LadySegmentBssEnd - _ovl_En_Niw_LadySegmentBssStart );

    _ovl_En_NutsballSegmentRomStart = _RomSize;
    ..ovl_En_Nutsball : AT(_RomSize)
    {
        _ovl_En_NutsballSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_NutsballSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Nutsball/z_en_nutsball.o (.text)
            build/src/overlays/actors/ovl_En_Nutsball/ovl_En_Nutsball_reloc.o (.text)
        _ovl_En_NutsballSegmentTextEnd = .;
    _ovl_En_NutsballSegmentTextSize = ABSOLUTE( _ovl_En_NutsballSegmentTextEnd - _ovl_En_NutsballSegmentTextStart );
        _ovl_En_NutsballSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Nutsball/z_en_nutsball.o (.data)
            build/src/overlays/actors/ovl_En_Nutsball/ovl_En_Nutsball_reloc.o (.data)
        _ovl_En_NutsballSegmentDataEnd = .;
    _ovl_En_NutsballSegmentDataSize = ABSOLUTE( _ovl_En_NutsballSegmentDataEnd - _ovl_En_NutsballSegmentDataStart );
        _ovl_En_NutsballSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Nutsball/z_en_nutsball.o (.rodata)
            build/src/overlays/actors/ovl_En_Nutsball/ovl_En_Nutsball_reloc.o (.rodata)
        _ovl_En_NutsballSegmentRoDataEnd = .;
    _ovl_En_NutsballSegmentRoDataSize = ABSOLUTE( _ovl_En_NutsballSegmentRoDataEnd - _ovl_En_NutsballSegmentRoDataStart );
        _ovl_En_NutsballSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Nutsball/z_en_nutsball.o (.sdata)
            build/src/overlays/actors/ovl_En_Nutsball/ovl_En_Nutsball_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_NutsballSegmentSDataEnd = .;
        _ovl_En_NutsballSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Nutsball/z_en_nutsball.o (.ovl)
            build/src/overlays/actors/ovl_En_Nutsball/ovl_En_Nutsball_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_NutsballSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_NutsballSegmentOvlEnd - _ovl_En_NutsballSegmentTextStart );
    _ovl_En_NutsballSegmentRomEnd = _RomSize;

    ..ovl_En_Nutsball.bss ADDR(..ovl_En_Nutsball) + SIZEOF(..ovl_En_Nutsball) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_NutsballSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Nutsball/z_en_nutsball.o (.sbss)
            build/src/overlays/actors/ovl_En_Nutsball/ovl_En_Nutsball_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Nutsball/z_en_nutsball.o (.scommon)
            build/src/overlays/actors/ovl_En_Nutsball/ovl_En_Nutsball_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Nutsball/z_en_nutsball.o (.bss)
            build/src/overlays/actors/ovl_En_Nutsball/ovl_En_Nutsball_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Nutsball/z_en_nutsball.o (COMMON)
            build/src/overlays/actors/ovl_En_Nutsball/ovl_En_Nutsball_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_NutsballSegmentBssEnd = .;
        _ovl_En_NutsballSegmentEnd = .;
    }
    _ovl_En_NutsballSegmentBssSize = ABSOLUTE( _ovl_En_NutsballSegmentBssEnd - _ovl_En_NutsballSegmentBssStart );

    _ovl_En_NwcSegmentRomStart = _RomSize;
    ..ovl_En_Nwc : AT(_RomSize)
    {
        _ovl_En_NwcSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_NwcSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Nwc/z_en_nwc.o (.text)
            build/data/overlays/actors/z_en_nwc.data.o (.text)
            build/data/overlays/actors/z_en_nwc.reloc.o (.text)
        _ovl_En_NwcSegmentTextEnd = .;
    _ovl_En_NwcSegmentTextSize = ABSOLUTE( _ovl_En_NwcSegmentTextEnd - _ovl_En_NwcSegmentTextStart );
        _ovl_En_NwcSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Nwc/z_en_nwc.o (.data)
            build/data/overlays/actors/z_en_nwc.data.o (.data)
            build/data/overlays/actors/z_en_nwc.reloc.o (.data)
        _ovl_En_NwcSegmentDataEnd = .;
    _ovl_En_NwcSegmentDataSize = ABSOLUTE( _ovl_En_NwcSegmentDataEnd - _ovl_En_NwcSegmentDataStart );
        _ovl_En_NwcSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Nwc/z_en_nwc.o (.rodata)
            build/data/overlays/actors/z_en_nwc.data.o (.rodata)
            build/data/overlays/actors/z_en_nwc.reloc.o (.rodata)
        _ovl_En_NwcSegmentRoDataEnd = .;
    _ovl_En_NwcSegmentRoDataSize = ABSOLUTE( _ovl_En_NwcSegmentRoDataEnd - _ovl_En_NwcSegmentRoDataStart );
        _ovl_En_NwcSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Nwc/z_en_nwc.o (.sdata)
            build/data/overlays/actors/z_en_nwc.data.o (.sdata)
            build/data/overlays/actors/z_en_nwc.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_NwcSegmentSDataEnd = .;
        _ovl_En_NwcSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Nwc/z_en_nwc.o (.ovl)
            build/data/overlays/actors/z_en_nwc.data.o (.ovl)
            build/data/overlays/actors/z_en_nwc.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_NwcSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_NwcSegmentOvlEnd - _ovl_En_NwcSegmentTextStart );
    _ovl_En_NwcSegmentRomEnd = _RomSize;

    ..ovl_En_Nwc.bss ADDR(..ovl_En_Nwc) + SIZEOF(..ovl_En_Nwc) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_NwcSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Nwc/z_en_nwc.o (.sbss)
            build/data/overlays/actors/z_en_nwc.data.o (.sbss)
            build/data/overlays/actors/z_en_nwc.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Nwc/z_en_nwc.o (.scommon)
            build/data/overlays/actors/z_en_nwc.data.o (.scommon)
            build/data/overlays/actors/z_en_nwc.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Nwc/z_en_nwc.o (.bss)
            build/data/overlays/actors/z_en_nwc.data.o (.bss)
            build/data/overlays/actors/z_en_nwc.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Nwc/z_en_nwc.o (COMMON)
            build/data/overlays/actors/z_en_nwc.data.o (COMMON)
            build/data/overlays/actors/z_en_nwc.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_NwcSegmentBssEnd = .;
        _ovl_En_NwcSegmentEnd = .;
    }
    _ovl_En_NwcSegmentBssSize = ABSOLUTE( _ovl_En_NwcSegmentBssEnd - _ovl_En_NwcSegmentBssStart );

    _ovl_En_NySegmentRomStart = _RomSize;
    ..ovl_En_Ny : AT(_RomSize)
    {
        _ovl_En_NySegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_NySegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ny/z_en_ny.o (.text)
            build/data/overlays/actors/z_en_ny.data.o (.text)
            build/data/overlays/actors/z_en_ny.reloc.o (.text)
        _ovl_En_NySegmentTextEnd = .;
    _ovl_En_NySegmentTextSize = ABSOLUTE( _ovl_En_NySegmentTextEnd - _ovl_En_NySegmentTextStart );
        _ovl_En_NySegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ny/z_en_ny.o (.data)
            build/data/overlays/actors/z_en_ny.data.o (.data)
            build/data/overlays/actors/z_en_ny.reloc.o (.data)
        _ovl_En_NySegmentDataEnd = .;
    _ovl_En_NySegmentDataSize = ABSOLUTE( _ovl_En_NySegmentDataEnd - _ovl_En_NySegmentDataStart );
        _ovl_En_NySegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ny/z_en_ny.o (.rodata)
            build/data/overlays/actors/z_en_ny.data.o (.rodata)
            build/data/overlays/actors/z_en_ny.reloc.o (.rodata)
        _ovl_En_NySegmentRoDataEnd = .;
    _ovl_En_NySegmentRoDataSize = ABSOLUTE( _ovl_En_NySegmentRoDataEnd - _ovl_En_NySegmentRoDataStart );
        _ovl_En_NySegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ny/z_en_ny.o (.sdata)
            build/data/overlays/actors/z_en_ny.data.o (.sdata)
            build/data/overlays/actors/z_en_ny.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_NySegmentSDataEnd = .;
        _ovl_En_NySegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ny/z_en_ny.o (.ovl)
            build/data/overlays/actors/z_en_ny.data.o (.ovl)
            build/data/overlays/actors/z_en_ny.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_NySegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_NySegmentOvlEnd - _ovl_En_NySegmentTextStart );
    _ovl_En_NySegmentRomEnd = _RomSize;

    ..ovl_En_Ny.bss ADDR(..ovl_En_Ny) + SIZEOF(..ovl_En_Ny) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_NySegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ny/z_en_ny.o (.sbss)
            build/data/overlays/actors/z_en_ny.data.o (.sbss)
            build/data/overlays/actors/z_en_ny.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ny/z_en_ny.o (.scommon)
            build/data/overlays/actors/z_en_ny.data.o (.scommon)
            build/data/overlays/actors/z_en_ny.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ny/z_en_ny.o (.bss)
            build/data/overlays/actors/z_en_ny.data.o (.bss)
            build/data/overlays/actors/z_en_ny.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ny/z_en_ny.o (COMMON)
            build/data/overlays/actors/z_en_ny.data.o (COMMON)
            build/data/overlays/actors/z_en_ny.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_NySegmentBssEnd = .;
        _ovl_En_NySegmentEnd = .;
    }
    _ovl_En_NySegmentBssSize = ABSOLUTE( _ovl_En_NySegmentBssEnd - _ovl_En_NySegmentBssStart );

    _ovl_En_OE2SegmentRomStart = _RomSize;
    ..ovl_En_OE2 : AT(_RomSize)
    {
        _ovl_En_OE2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_OE2SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_OE2/z_en_oe2.o (.text)
            build/src/overlays/actors/ovl_En_OE2/ovl_En_OE2_reloc.o (.text)
        _ovl_En_OE2SegmentTextEnd = .;
    _ovl_En_OE2SegmentTextSize = ABSOLUTE( _ovl_En_OE2SegmentTextEnd - _ovl_En_OE2SegmentTextStart );
        _ovl_En_OE2SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_OE2/z_en_oe2.o (.data)
            build/src/overlays/actors/ovl_En_OE2/ovl_En_OE2_reloc.o (.data)
        _ovl_En_OE2SegmentDataEnd = .;
    _ovl_En_OE2SegmentDataSize = ABSOLUTE( _ovl_En_OE2SegmentDataEnd - _ovl_En_OE2SegmentDataStart );
        _ovl_En_OE2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_OE2/z_en_oe2.o (.rodata)
            build/src/overlays/actors/ovl_En_OE2/ovl_En_OE2_reloc.o (.rodata)
        _ovl_En_OE2SegmentRoDataEnd = .;
    _ovl_En_OE2SegmentRoDataSize = ABSOLUTE( _ovl_En_OE2SegmentRoDataEnd - _ovl_En_OE2SegmentRoDataStart );
        _ovl_En_OE2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_OE2/z_en_oe2.o (.sdata)
            build/src/overlays/actors/ovl_En_OE2/ovl_En_OE2_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_OE2SegmentSDataEnd = .;
        _ovl_En_OE2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_OE2/z_en_oe2.o (.ovl)
            build/src/overlays/actors/ovl_En_OE2/ovl_En_OE2_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_OE2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_OE2SegmentOvlEnd - _ovl_En_OE2SegmentTextStart );
    _ovl_En_OE2SegmentRomEnd = _RomSize;

    ..ovl_En_OE2.bss ADDR(..ovl_En_OE2) + SIZEOF(..ovl_En_OE2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_OE2SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_OE2/z_en_oe2.o (.sbss)
            build/src/overlays/actors/ovl_En_OE2/ovl_En_OE2_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_OE2/z_en_oe2.o (.scommon)
            build/src/overlays/actors/ovl_En_OE2/ovl_En_OE2_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_OE2/z_en_oe2.o (.bss)
            build/src/overlays/actors/ovl_En_OE2/ovl_En_OE2_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_OE2/z_en_oe2.o (COMMON)
            build/src/overlays/actors/ovl_En_OE2/ovl_En_OE2_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_OE2SegmentBssEnd = .;
        _ovl_En_OE2SegmentEnd = .;
    }
    _ovl_En_OE2SegmentBssSize = ABSOLUTE( _ovl_En_OE2SegmentBssEnd - _ovl_En_OE2SegmentBssStart );

    _ovl_En_Okarina_EffectSegmentRomStart = _RomSize;
    ..ovl_En_Okarina_Effect : AT(_RomSize)
    {
        _ovl_En_Okarina_EffectSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Okarina_EffectSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Okarina_Effect/z_en_okarina_effect.o (.text)
            build/src/overlays/actors/ovl_En_Okarina_Effect/ovl_En_Okarina_Effect_reloc.o (.text)
        _ovl_En_Okarina_EffectSegmentTextEnd = .;
    _ovl_En_Okarina_EffectSegmentTextSize = ABSOLUTE( _ovl_En_Okarina_EffectSegmentTextEnd - _ovl_En_Okarina_EffectSegmentTextStart );
        _ovl_En_Okarina_EffectSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Okarina_Effect/z_en_okarina_effect.o (.data)
            build/src/overlays/actors/ovl_En_Okarina_Effect/ovl_En_Okarina_Effect_reloc.o (.data)
        _ovl_En_Okarina_EffectSegmentDataEnd = .;
    _ovl_En_Okarina_EffectSegmentDataSize = ABSOLUTE( _ovl_En_Okarina_EffectSegmentDataEnd - _ovl_En_Okarina_EffectSegmentDataStart );
        _ovl_En_Okarina_EffectSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Okarina_Effect/z_en_okarina_effect.o (.rodata)
            build/src/overlays/actors/ovl_En_Okarina_Effect/ovl_En_Okarina_Effect_reloc.o (.rodata)
        _ovl_En_Okarina_EffectSegmentRoDataEnd = .;
    _ovl_En_Okarina_EffectSegmentRoDataSize = ABSOLUTE( _ovl_En_Okarina_EffectSegmentRoDataEnd - _ovl_En_Okarina_EffectSegmentRoDataStart );
        _ovl_En_Okarina_EffectSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Okarina_Effect/z_en_okarina_effect.o (.sdata)
            build/src/overlays/actors/ovl_En_Okarina_Effect/ovl_En_Okarina_Effect_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Okarina_EffectSegmentSDataEnd = .;
        _ovl_En_Okarina_EffectSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Okarina_Effect/z_en_okarina_effect.o (.ovl)
            build/src/overlays/actors/ovl_En_Okarina_Effect/ovl_En_Okarina_Effect_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Okarina_EffectSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Okarina_EffectSegmentOvlEnd - _ovl_En_Okarina_EffectSegmentTextStart );
    _ovl_En_Okarina_EffectSegmentRomEnd = _RomSize;

    ..ovl_En_Okarina_Effect.bss ADDR(..ovl_En_Okarina_Effect) + SIZEOF(..ovl_En_Okarina_Effect) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Okarina_EffectSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Okarina_Effect/z_en_okarina_effect.o (.sbss)
            build/src/overlays/actors/ovl_En_Okarina_Effect/ovl_En_Okarina_Effect_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Okarina_Effect/z_en_okarina_effect.o (.scommon)
            build/src/overlays/actors/ovl_En_Okarina_Effect/ovl_En_Okarina_Effect_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Okarina_Effect/z_en_okarina_effect.o (.bss)
            build/src/overlays/actors/ovl_En_Okarina_Effect/ovl_En_Okarina_Effect_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Okarina_Effect/z_en_okarina_effect.o (COMMON)
            build/src/overlays/actors/ovl_En_Okarina_Effect/ovl_En_Okarina_Effect_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Okarina_EffectSegmentBssEnd = .;
        _ovl_En_Okarina_EffectSegmentEnd = .;
    }
    _ovl_En_Okarina_EffectSegmentBssSize = ABSOLUTE( _ovl_En_Okarina_EffectSegmentBssEnd - _ovl_En_Okarina_EffectSegmentBssStart );

    _ovl_En_Okarina_TagSegmentRomStart = _RomSize;
    ..ovl_En_Okarina_Tag : AT(_RomSize)
    {
        _ovl_En_Okarina_TagSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Okarina_TagSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag_cutscene_data.o (.text)
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag.o (.text)
            build/src/overlays/actors/ovl_En_Okarina_Tag/ovl_En_Okarina_Tag_reloc.o (.text)
        _ovl_En_Okarina_TagSegmentTextEnd = .;
    _ovl_En_Okarina_TagSegmentTextSize = ABSOLUTE( _ovl_En_Okarina_TagSegmentTextEnd - _ovl_En_Okarina_TagSegmentTextStart );
        _ovl_En_Okarina_TagSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag_cutscene_data.o (.data)
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag.o (.data)
            build/src/overlays/actors/ovl_En_Okarina_Tag/ovl_En_Okarina_Tag_reloc.o (.data)
        _ovl_En_Okarina_TagSegmentDataEnd = .;
    _ovl_En_Okarina_TagSegmentDataSize = ABSOLUTE( _ovl_En_Okarina_TagSegmentDataEnd - _ovl_En_Okarina_TagSegmentDataStart );
        _ovl_En_Okarina_TagSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag_cutscene_data.o (.rodata)
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag.o (.rodata)
            build/src/overlays/actors/ovl_En_Okarina_Tag/ovl_En_Okarina_Tag_reloc.o (.rodata)
        _ovl_En_Okarina_TagSegmentRoDataEnd = .;
    _ovl_En_Okarina_TagSegmentRoDataSize = ABSOLUTE( _ovl_En_Okarina_TagSegmentRoDataEnd - _ovl_En_Okarina_TagSegmentRoDataStart );
        _ovl_En_Okarina_TagSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag_cutscene_data.o (.sdata)
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag.o (.sdata)
            build/src/overlays/actors/ovl_En_Okarina_Tag/ovl_En_Okarina_Tag_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Okarina_TagSegmentSDataEnd = .;
        _ovl_En_Okarina_TagSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag_cutscene_data.o (.ovl)
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag.o (.ovl)
            build/src/overlays/actors/ovl_En_Okarina_Tag/ovl_En_Okarina_Tag_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Okarina_TagSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Okarina_TagSegmentOvlEnd - _ovl_En_Okarina_TagSegmentTextStart );
    _ovl_En_Okarina_TagSegmentRomEnd = _RomSize;

    ..ovl_En_Okarina_Tag.bss ADDR(..ovl_En_Okarina_Tag) + SIZEOF(..ovl_En_Okarina_Tag) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Okarina_TagSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag_cutscene_data.o (.sbss)
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag.o (.sbss)
            build/src/overlays/actors/ovl_En_Okarina_Tag/ovl_En_Okarina_Tag_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag_cutscene_data.o (.scommon)
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag.o (.scommon)
            build/src/overlays/actors/ovl_En_Okarina_Tag/ovl_En_Okarina_Tag_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag_cutscene_data.o (.bss)
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag.o (.bss)
            build/src/overlays/actors/ovl_En_Okarina_Tag/ovl_En_Okarina_Tag_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag_cutscene_data.o (COMMON)
            build/src/overlays/actors/ovl_En_Okarina_Tag/z_en_okarina_tag.o (COMMON)
            build/src/overlays/actors/ovl_En_Okarina_Tag/ovl_En_Okarina_Tag_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Okarina_TagSegmentBssEnd = .;
        _ovl_En_Okarina_TagSegmentEnd = .;
    }
    _ovl_En_Okarina_TagSegmentBssSize = ABSOLUTE( _ovl_En_Okarina_TagSegmentBssEnd - _ovl_En_Okarina_TagSegmentBssStart );

    _ovl_En_OkutaSegmentRomStart = _RomSize;
    ..ovl_En_Okuta : AT(_RomSize)
    {
        _ovl_En_OkutaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_OkutaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Okuta/z_en_okuta.o (.text)
            build/data/overlays/actors/z_en_okuta.data.o (.text)
            build/data/overlays/actors/z_en_okuta.reloc.o (.text)
        _ovl_En_OkutaSegmentTextEnd = .;
    _ovl_En_OkutaSegmentTextSize = ABSOLUTE( _ovl_En_OkutaSegmentTextEnd - _ovl_En_OkutaSegmentTextStart );
        _ovl_En_OkutaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Okuta/z_en_okuta.o (.data)
            build/data/overlays/actors/z_en_okuta.data.o (.data)
            build/data/overlays/actors/z_en_okuta.reloc.o (.data)
        _ovl_En_OkutaSegmentDataEnd = .;
    _ovl_En_OkutaSegmentDataSize = ABSOLUTE( _ovl_En_OkutaSegmentDataEnd - _ovl_En_OkutaSegmentDataStart );
        _ovl_En_OkutaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Okuta/z_en_okuta.o (.rodata)
            build/data/overlays/actors/z_en_okuta.data.o (.rodata)
            build/data/overlays/actors/z_en_okuta.reloc.o (.rodata)
        _ovl_En_OkutaSegmentRoDataEnd = .;
    _ovl_En_OkutaSegmentRoDataSize = ABSOLUTE( _ovl_En_OkutaSegmentRoDataEnd - _ovl_En_OkutaSegmentRoDataStart );
        _ovl_En_OkutaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Okuta/z_en_okuta.o (.sdata)
            build/data/overlays/actors/z_en_okuta.data.o (.sdata)
            build/data/overlays/actors/z_en_okuta.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_OkutaSegmentSDataEnd = .;
        _ovl_En_OkutaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Okuta/z_en_okuta.o (.ovl)
            build/data/overlays/actors/z_en_okuta.data.o (.ovl)
            build/data/overlays/actors/z_en_okuta.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_OkutaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_OkutaSegmentOvlEnd - _ovl_En_OkutaSegmentTextStart );
    _ovl_En_OkutaSegmentRomEnd = _RomSize;

    ..ovl_En_Okuta.bss ADDR(..ovl_En_Okuta) + SIZEOF(..ovl_En_Okuta) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_OkutaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Okuta/z_en_okuta.o (.sbss)
            build/data/overlays/actors/z_en_okuta.data.o (.sbss)
            build/data/overlays/actors/z_en_okuta.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Okuta/z_en_okuta.o (.scommon)
            build/data/overlays/actors/z_en_okuta.data.o (.scommon)
            build/data/overlays/actors/z_en_okuta.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Okuta/z_en_okuta.o (.bss)
            build/data/overlays/actors/z_en_okuta.data.o (.bss)
            build/data/overlays/actors/z_en_okuta.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Okuta/z_en_okuta.o (COMMON)
            build/data/overlays/actors/z_en_okuta.data.o (COMMON)
            build/data/overlays/actors/z_en_okuta.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_OkutaSegmentBssEnd = .;
        _ovl_En_OkutaSegmentEnd = .;
    }
    _ovl_En_OkutaSegmentBssSize = ABSOLUTE( _ovl_En_OkutaSegmentBssEnd - _ovl_En_OkutaSegmentBssStart );

    _ovl_En_OssanSegmentRomStart = _RomSize;
    ..ovl_En_Ossan : AT(_RomSize)
    {
        _ovl_En_OssanSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_OssanSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ossan/z_en_ossan.o (.text)
            build/data/overlays/actors/z_en_ossan.data.o (.text)
            build/data/overlays/actors/z_en_ossan.reloc.o (.text)
        _ovl_En_OssanSegmentTextEnd = .;
    _ovl_En_OssanSegmentTextSize = ABSOLUTE( _ovl_En_OssanSegmentTextEnd - _ovl_En_OssanSegmentTextStart );
        _ovl_En_OssanSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ossan/z_en_ossan.o (.data)
            build/data/overlays/actors/z_en_ossan.data.o (.data)
            build/data/overlays/actors/z_en_ossan.reloc.o (.data)
        _ovl_En_OssanSegmentDataEnd = .;
    _ovl_En_OssanSegmentDataSize = ABSOLUTE( _ovl_En_OssanSegmentDataEnd - _ovl_En_OssanSegmentDataStart );
        _ovl_En_OssanSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ossan/z_en_ossan.o (.rodata)
            build/data/overlays/actors/z_en_ossan.data.o (.rodata)
            build/data/overlays/actors/z_en_ossan.reloc.o (.rodata)
        _ovl_En_OssanSegmentRoDataEnd = .;
    _ovl_En_OssanSegmentRoDataSize = ABSOLUTE( _ovl_En_OssanSegmentRoDataEnd - _ovl_En_OssanSegmentRoDataStart );
        _ovl_En_OssanSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ossan/z_en_ossan.o (.sdata)
            build/data/overlays/actors/z_en_ossan.data.o (.sdata)
            build/data/overlays/actors/z_en_ossan.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_OssanSegmentSDataEnd = .;
        _ovl_En_OssanSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ossan/z_en_ossan.o (.ovl)
            build/data/overlays/actors/z_en_ossan.data.o (.ovl)
            build/data/overlays/actors/z_en_ossan.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_OssanSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_OssanSegmentOvlEnd - _ovl_En_OssanSegmentTextStart );
    _ovl_En_OssanSegmentRomEnd = _RomSize;

    ..ovl_En_Ossan.bss ADDR(..ovl_En_Ossan) + SIZEOF(..ovl_En_Ossan) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_OssanSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ossan/z_en_ossan.o (.sbss)
            build/data/overlays/actors/z_en_ossan.data.o (.sbss)
            build/data/overlays/actors/z_en_ossan.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ossan/z_en_ossan.o (.scommon)
            build/data/overlays/actors/z_en_ossan.data.o (.scommon)
            build/data/overlays/actors/z_en_ossan.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ossan/z_en_ossan.o (.bss)
            build/data/overlays/actors/z_en_ossan.data.o (.bss)
            build/data/overlays/actors/z_en_ossan.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ossan/z_en_ossan.o (COMMON)
            build/data/overlays/actors/z_en_ossan.data.o (COMMON)
            build/data/overlays/actors/z_en_ossan.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_OssanSegmentBssEnd = .;
        _ovl_En_OssanSegmentEnd = .;
    }
    _ovl_En_OssanSegmentBssSize = ABSOLUTE( _ovl_En_OssanSegmentBssEnd - _ovl_En_OssanSegmentBssStart );

    _ovl_En_OwlSegmentRomStart = _RomSize;
    ..ovl_En_Owl : AT(_RomSize)
    {
        _ovl_En_OwlSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_OwlSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Owl/z_en_owl.o (.text)
            build/data/overlays/actors/z_en_owl.data.o (.text)
            build/data/overlays/actors/z_en_owl.reloc.o (.text)
        _ovl_En_OwlSegmentTextEnd = .;
    _ovl_En_OwlSegmentTextSize = ABSOLUTE( _ovl_En_OwlSegmentTextEnd - _ovl_En_OwlSegmentTextStart );
        _ovl_En_OwlSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Owl/z_en_owl.o (.data)
            build/data/overlays/actors/z_en_owl.data.o (.data)
            build/data/overlays/actors/z_en_owl.reloc.o (.data)
        _ovl_En_OwlSegmentDataEnd = .;
    _ovl_En_OwlSegmentDataSize = ABSOLUTE( _ovl_En_OwlSegmentDataEnd - _ovl_En_OwlSegmentDataStart );
        _ovl_En_OwlSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Owl/z_en_owl.o (.rodata)
            build/data/overlays/actors/z_en_owl.data.o (.rodata)
            build/data/overlays/actors/z_en_owl.reloc.o (.rodata)
        _ovl_En_OwlSegmentRoDataEnd = .;
    _ovl_En_OwlSegmentRoDataSize = ABSOLUTE( _ovl_En_OwlSegmentRoDataEnd - _ovl_En_OwlSegmentRoDataStart );
        _ovl_En_OwlSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Owl/z_en_owl.o (.sdata)
            build/data/overlays/actors/z_en_owl.data.o (.sdata)
            build/data/overlays/actors/z_en_owl.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_OwlSegmentSDataEnd = .;
        _ovl_En_OwlSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Owl/z_en_owl.o (.ovl)
            build/data/overlays/actors/z_en_owl.data.o (.ovl)
            build/data/overlays/actors/z_en_owl.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_OwlSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_OwlSegmentOvlEnd - _ovl_En_OwlSegmentTextStart );
    _ovl_En_OwlSegmentRomEnd = _RomSize;

    ..ovl_En_Owl.bss ADDR(..ovl_En_Owl) + SIZEOF(..ovl_En_Owl) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_OwlSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Owl/z_en_owl.o (.sbss)
            build/data/overlays/actors/z_en_owl.data.o (.sbss)
            build/data/overlays/actors/z_en_owl.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Owl/z_en_owl.o (.scommon)
            build/data/overlays/actors/z_en_owl.data.o (.scommon)
            build/data/overlays/actors/z_en_owl.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Owl/z_en_owl.o (.bss)
            build/data/overlays/actors/z_en_owl.data.o (.bss)
            build/data/overlays/actors/z_en_owl.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Owl/z_en_owl.o (COMMON)
            build/data/overlays/actors/z_en_owl.data.o (COMMON)
            build/data/overlays/actors/z_en_owl.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_OwlSegmentBssEnd = .;
        _ovl_En_OwlSegmentEnd = .;
    }
    _ovl_En_OwlSegmentBssSize = ABSOLUTE( _ovl_En_OwlSegmentBssEnd - _ovl_En_OwlSegmentBssStart );

    _ovl_En_PartSegmentRomStart = _RomSize;
    ..ovl_En_Part : AT(_RomSize)
    {
        _ovl_En_PartSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_PartSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Part/z_en_part.o (.text)
            build/src/overlays/actors/ovl_En_Part/ovl_En_Part_reloc.o (.text)
        _ovl_En_PartSegmentTextEnd = .;
    _ovl_En_PartSegmentTextSize = ABSOLUTE( _ovl_En_PartSegmentTextEnd - _ovl_En_PartSegmentTextStart );
        _ovl_En_PartSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Part/z_en_part.o (.data)
            build/src/overlays/actors/ovl_En_Part/ovl_En_Part_reloc.o (.data)
        _ovl_En_PartSegmentDataEnd = .;
    _ovl_En_PartSegmentDataSize = ABSOLUTE( _ovl_En_PartSegmentDataEnd - _ovl_En_PartSegmentDataStart );
        _ovl_En_PartSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Part/z_en_part.o (.rodata)
            build/src/overlays/actors/ovl_En_Part/ovl_En_Part_reloc.o (.rodata)
        _ovl_En_PartSegmentRoDataEnd = .;
    _ovl_En_PartSegmentRoDataSize = ABSOLUTE( _ovl_En_PartSegmentRoDataEnd - _ovl_En_PartSegmentRoDataStart );
        _ovl_En_PartSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Part/z_en_part.o (.sdata)
            build/src/overlays/actors/ovl_En_Part/ovl_En_Part_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_PartSegmentSDataEnd = .;
        _ovl_En_PartSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Part/z_en_part.o (.ovl)
            build/src/overlays/actors/ovl_En_Part/ovl_En_Part_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_PartSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_PartSegmentOvlEnd - _ovl_En_PartSegmentTextStart );
    _ovl_En_PartSegmentRomEnd = _RomSize;

    ..ovl_En_Part.bss ADDR(..ovl_En_Part) + SIZEOF(..ovl_En_Part) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_PartSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Part/z_en_part.o (.sbss)
            build/src/overlays/actors/ovl_En_Part/ovl_En_Part_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Part/z_en_part.o (.scommon)
            build/src/overlays/actors/ovl_En_Part/ovl_En_Part_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Part/z_en_part.o (.bss)
            build/src/overlays/actors/ovl_En_Part/ovl_En_Part_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Part/z_en_part.o (COMMON)
            build/src/overlays/actors/ovl_En_Part/ovl_En_Part_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_PartSegmentBssEnd = .;
        _ovl_En_PartSegmentEnd = .;
    }
    _ovl_En_PartSegmentBssSize = ABSOLUTE( _ovl_En_PartSegmentBssEnd - _ovl_En_PartSegmentBssStart );

    _ovl_En_PeehatSegmentRomStart = _RomSize;
    ..ovl_En_Peehat : AT(_RomSize)
    {
        _ovl_En_PeehatSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_PeehatSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Peehat/z_en_peehat.o (.text)
            build/data/overlays/actors/z_en_peehat.data.o (.text)
            build/data/overlays/actors/z_en_peehat.reloc.o (.text)
        _ovl_En_PeehatSegmentTextEnd = .;
    _ovl_En_PeehatSegmentTextSize = ABSOLUTE( _ovl_En_PeehatSegmentTextEnd - _ovl_En_PeehatSegmentTextStart );
        _ovl_En_PeehatSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Peehat/z_en_peehat.o (.data)
            build/data/overlays/actors/z_en_peehat.data.o (.data)
            build/data/overlays/actors/z_en_peehat.reloc.o (.data)
        _ovl_En_PeehatSegmentDataEnd = .;
    _ovl_En_PeehatSegmentDataSize = ABSOLUTE( _ovl_En_PeehatSegmentDataEnd - _ovl_En_PeehatSegmentDataStart );
        _ovl_En_PeehatSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Peehat/z_en_peehat.o (.rodata)
            build/data/overlays/actors/z_en_peehat.data.o (.rodata)
            build/data/overlays/actors/z_en_peehat.reloc.o (.rodata)
        _ovl_En_PeehatSegmentRoDataEnd = .;
    _ovl_En_PeehatSegmentRoDataSize = ABSOLUTE( _ovl_En_PeehatSegmentRoDataEnd - _ovl_En_PeehatSegmentRoDataStart );
        _ovl_En_PeehatSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Peehat/z_en_peehat.o (.sdata)
            build/data/overlays/actors/z_en_peehat.data.o (.sdata)
            build/data/overlays/actors/z_en_peehat.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_PeehatSegmentSDataEnd = .;
        _ovl_En_PeehatSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Peehat/z_en_peehat.o (.ovl)
            build/data/overlays/actors/z_en_peehat.data.o (.ovl)
            build/data/overlays/actors/z_en_peehat.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_PeehatSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_PeehatSegmentOvlEnd - _ovl_En_PeehatSegmentTextStart );
    _ovl_En_PeehatSegmentRomEnd = _RomSize;

    ..ovl_En_Peehat.bss ADDR(..ovl_En_Peehat) + SIZEOF(..ovl_En_Peehat) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_PeehatSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Peehat/z_en_peehat.o (.sbss)
            build/data/overlays/actors/z_en_peehat.data.o (.sbss)
            build/data/overlays/actors/z_en_peehat.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Peehat/z_en_peehat.o (.scommon)
            build/data/overlays/actors/z_en_peehat.data.o (.scommon)
            build/data/overlays/actors/z_en_peehat.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Peehat/z_en_peehat.o (.bss)
            build/data/overlays/actors/z_en_peehat.data.o (.bss)
            build/data/overlays/actors/z_en_peehat.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Peehat/z_en_peehat.o (COMMON)
            build/data/overlays/actors/z_en_peehat.data.o (COMMON)
            build/data/overlays/actors/z_en_peehat.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_PeehatSegmentBssEnd = .;
        _ovl_En_PeehatSegmentEnd = .;
    }
    _ovl_En_PeehatSegmentBssSize = ABSOLUTE( _ovl_En_PeehatSegmentBssEnd - _ovl_En_PeehatSegmentBssStart );

    _ovl_En_Po_DesertSegmentRomStart = _RomSize;
    ..ovl_En_Po_Desert : AT(_RomSize)
    {
        _ovl_En_Po_DesertSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Po_DesertSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Po_Desert/z_en_po_desert.o (.text)
            build/data/overlays/actors/z_en_po_desert.data.o (.text)
            build/data/overlays/actors/z_en_po_desert.reloc.o (.text)
        _ovl_En_Po_DesertSegmentTextEnd = .;
    _ovl_En_Po_DesertSegmentTextSize = ABSOLUTE( _ovl_En_Po_DesertSegmentTextEnd - _ovl_En_Po_DesertSegmentTextStart );
        _ovl_En_Po_DesertSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Po_Desert/z_en_po_desert.o (.data)
            build/data/overlays/actors/z_en_po_desert.data.o (.data)
            build/data/overlays/actors/z_en_po_desert.reloc.o (.data)
        _ovl_En_Po_DesertSegmentDataEnd = .;
    _ovl_En_Po_DesertSegmentDataSize = ABSOLUTE( _ovl_En_Po_DesertSegmentDataEnd - _ovl_En_Po_DesertSegmentDataStart );
        _ovl_En_Po_DesertSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Po_Desert/z_en_po_desert.o (.rodata)
            build/data/overlays/actors/z_en_po_desert.data.o (.rodata)
            build/data/overlays/actors/z_en_po_desert.reloc.o (.rodata)
        _ovl_En_Po_DesertSegmentRoDataEnd = .;
    _ovl_En_Po_DesertSegmentRoDataSize = ABSOLUTE( _ovl_En_Po_DesertSegmentRoDataEnd - _ovl_En_Po_DesertSegmentRoDataStart );
        _ovl_En_Po_DesertSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Po_Desert/z_en_po_desert.o (.sdata)
            build/data/overlays/actors/z_en_po_desert.data.o (.sdata)
            build/data/overlays/actors/z_en_po_desert.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Po_DesertSegmentSDataEnd = .;
        _ovl_En_Po_DesertSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Po_Desert/z_en_po_desert.o (.ovl)
            build/data/overlays/actors/z_en_po_desert.data.o (.ovl)
            build/data/overlays/actors/z_en_po_desert.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Po_DesertSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Po_DesertSegmentOvlEnd - _ovl_En_Po_DesertSegmentTextStart );
    _ovl_En_Po_DesertSegmentRomEnd = _RomSize;

    ..ovl_En_Po_Desert.bss ADDR(..ovl_En_Po_Desert) + SIZEOF(..ovl_En_Po_Desert) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Po_DesertSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Po_Desert/z_en_po_desert.o (.sbss)
            build/data/overlays/actors/z_en_po_desert.data.o (.sbss)
            build/data/overlays/actors/z_en_po_desert.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Po_Desert/z_en_po_desert.o (.scommon)
            build/data/overlays/actors/z_en_po_desert.data.o (.scommon)
            build/data/overlays/actors/z_en_po_desert.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Po_Desert/z_en_po_desert.o (.bss)
            build/data/overlays/actors/z_en_po_desert.data.o (.bss)
            build/data/overlays/actors/z_en_po_desert.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Po_Desert/z_en_po_desert.o (COMMON)
            build/data/overlays/actors/z_en_po_desert.data.o (COMMON)
            build/data/overlays/actors/z_en_po_desert.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Po_DesertSegmentBssEnd = .;
        _ovl_En_Po_DesertSegmentEnd = .;
    }
    _ovl_En_Po_DesertSegmentBssSize = ABSOLUTE( _ovl_En_Po_DesertSegmentBssEnd - _ovl_En_Po_DesertSegmentBssStart );

    _ovl_En_Po_FieldSegmentRomStart = _RomSize;
    ..ovl_En_Po_Field : AT(_RomSize)
    {
        _ovl_En_Po_FieldSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Po_FieldSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Po_Field/z_en_po_field.o (.text)
            build/data/overlays/actors/z_en_po_field.data.o (.text)
            build/data/overlays/actors/z_en_po_field.bss.o (.text)
            build/data/overlays/actors/z_en_po_field.reloc.o (.text)
        _ovl_En_Po_FieldSegmentTextEnd = .;
    _ovl_En_Po_FieldSegmentTextSize = ABSOLUTE( _ovl_En_Po_FieldSegmentTextEnd - _ovl_En_Po_FieldSegmentTextStart );
        _ovl_En_Po_FieldSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Po_Field/z_en_po_field.o (.data)
            build/data/overlays/actors/z_en_po_field.data.o (.data)
            build/data/overlays/actors/z_en_po_field.bss.o (.data)
            build/data/overlays/actors/z_en_po_field.reloc.o (.data)
        _ovl_En_Po_FieldSegmentDataEnd = .;
    _ovl_En_Po_FieldSegmentDataSize = ABSOLUTE( _ovl_En_Po_FieldSegmentDataEnd - _ovl_En_Po_FieldSegmentDataStart );
        _ovl_En_Po_FieldSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Po_Field/z_en_po_field.o (.rodata)
            build/data/overlays/actors/z_en_po_field.data.o (.rodata)
            build/data/overlays/actors/z_en_po_field.bss.o (.rodata)
            build/data/overlays/actors/z_en_po_field.reloc.o (.rodata)
        _ovl_En_Po_FieldSegmentRoDataEnd = .;
    _ovl_En_Po_FieldSegmentRoDataSize = ABSOLUTE( _ovl_En_Po_FieldSegmentRoDataEnd - _ovl_En_Po_FieldSegmentRoDataStart );
        _ovl_En_Po_FieldSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Po_Field/z_en_po_field.o (.sdata)
            build/data/overlays/actors/z_en_po_field.data.o (.sdata)
            build/data/overlays/actors/z_en_po_field.bss.o (.sdata)
            build/data/overlays/actors/z_en_po_field.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Po_FieldSegmentSDataEnd = .;
        _ovl_En_Po_FieldSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Po_Field/z_en_po_field.o (.ovl)
            build/data/overlays/actors/z_en_po_field.data.o (.ovl)
            build/data/overlays/actors/z_en_po_field.bss.o (.ovl)
            build/data/overlays/actors/z_en_po_field.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Po_FieldSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Po_FieldSegmentOvlEnd - _ovl_En_Po_FieldSegmentTextStart );
    _ovl_En_Po_FieldSegmentRomEnd = _RomSize;

    ..ovl_En_Po_Field.bss ADDR(..ovl_En_Po_Field) + SIZEOF(..ovl_En_Po_Field) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Po_FieldSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Po_Field/z_en_po_field.o (.sbss)
            build/data/overlays/actors/z_en_po_field.data.o (.sbss)
            build/data/overlays/actors/z_en_po_field.bss.o (.sbss)
            build/data/overlays/actors/z_en_po_field.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Po_Field/z_en_po_field.o (.scommon)
            build/data/overlays/actors/z_en_po_field.data.o (.scommon)
            build/data/overlays/actors/z_en_po_field.bss.o (.scommon)
            build/data/overlays/actors/z_en_po_field.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Po_Field/z_en_po_field.o (.bss)
            build/data/overlays/actors/z_en_po_field.data.o (.bss)
            build/data/overlays/actors/z_en_po_field.bss.o (.bss)
            build/data/overlays/actors/z_en_po_field.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Po_Field/z_en_po_field.o (COMMON)
            build/data/overlays/actors/z_en_po_field.data.o (COMMON)
            build/data/overlays/actors/z_en_po_field.bss.o (COMMON)
            build/data/overlays/actors/z_en_po_field.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Po_FieldSegmentBssEnd = .;
        _ovl_En_Po_FieldSegmentEnd = .;
    }
    _ovl_En_Po_FieldSegmentBssSize = ABSOLUTE( _ovl_En_Po_FieldSegmentBssEnd - _ovl_En_Po_FieldSegmentBssStart );

    _ovl_En_Po_RelaySegmentRomStart = _RomSize;
    ..ovl_En_Po_Relay : AT(_RomSize)
    {
        _ovl_En_Po_RelaySegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Po_RelaySegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Po_Relay/z_en_po_relay.o (.text)
            build/data/overlays/actors/z_en_po_relay.data.o (.text)
            build/data/overlays/actors/z_en_po_relay.reloc.o (.text)
        _ovl_En_Po_RelaySegmentTextEnd = .;
    _ovl_En_Po_RelaySegmentTextSize = ABSOLUTE( _ovl_En_Po_RelaySegmentTextEnd - _ovl_En_Po_RelaySegmentTextStart );
        _ovl_En_Po_RelaySegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Po_Relay/z_en_po_relay.o (.data)
            build/data/overlays/actors/z_en_po_relay.data.o (.data)
            build/data/overlays/actors/z_en_po_relay.reloc.o (.data)
        _ovl_En_Po_RelaySegmentDataEnd = .;
    _ovl_En_Po_RelaySegmentDataSize = ABSOLUTE( _ovl_En_Po_RelaySegmentDataEnd - _ovl_En_Po_RelaySegmentDataStart );
        _ovl_En_Po_RelaySegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Po_Relay/z_en_po_relay.o (.rodata)
            build/data/overlays/actors/z_en_po_relay.data.o (.rodata)
            build/data/overlays/actors/z_en_po_relay.reloc.o (.rodata)
        _ovl_En_Po_RelaySegmentRoDataEnd = .;
    _ovl_En_Po_RelaySegmentRoDataSize = ABSOLUTE( _ovl_En_Po_RelaySegmentRoDataEnd - _ovl_En_Po_RelaySegmentRoDataStart );
        _ovl_En_Po_RelaySegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Po_Relay/z_en_po_relay.o (.sdata)
            build/data/overlays/actors/z_en_po_relay.data.o (.sdata)
            build/data/overlays/actors/z_en_po_relay.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Po_RelaySegmentSDataEnd = .;
        _ovl_En_Po_RelaySegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Po_Relay/z_en_po_relay.o (.ovl)
            build/data/overlays/actors/z_en_po_relay.data.o (.ovl)
            build/data/overlays/actors/z_en_po_relay.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Po_RelaySegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Po_RelaySegmentOvlEnd - _ovl_En_Po_RelaySegmentTextStart );
    _ovl_En_Po_RelaySegmentRomEnd = _RomSize;

    ..ovl_En_Po_Relay.bss ADDR(..ovl_En_Po_Relay) + SIZEOF(..ovl_En_Po_Relay) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Po_RelaySegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Po_Relay/z_en_po_relay.o (.sbss)
            build/data/overlays/actors/z_en_po_relay.data.o (.sbss)
            build/data/overlays/actors/z_en_po_relay.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Po_Relay/z_en_po_relay.o (.scommon)
            build/data/overlays/actors/z_en_po_relay.data.o (.scommon)
            build/data/overlays/actors/z_en_po_relay.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Po_Relay/z_en_po_relay.o (.bss)
            build/data/overlays/actors/z_en_po_relay.data.o (.bss)
            build/data/overlays/actors/z_en_po_relay.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Po_Relay/z_en_po_relay.o (COMMON)
            build/data/overlays/actors/z_en_po_relay.data.o (COMMON)
            build/data/overlays/actors/z_en_po_relay.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Po_RelaySegmentBssEnd = .;
        _ovl_En_Po_RelaySegmentEnd = .;
    }
    _ovl_En_Po_RelaySegmentBssSize = ABSOLUTE( _ovl_En_Po_RelaySegmentBssEnd - _ovl_En_Po_RelaySegmentBssStart );

    _ovl_En_Po_SistersSegmentRomStart = _RomSize;
    ..ovl_En_Po_Sisters : AT(_RomSize)
    {
        _ovl_En_Po_SistersSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Po_SistersSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Po_Sisters/z_en_po_sisters.o (.text)
            build/data/overlays/actors/z_en_po_sisters.data.o (.text)
            build/data/overlays/actors/z_en_po_sisters.reloc.o (.text)
        _ovl_En_Po_SistersSegmentTextEnd = .;
    _ovl_En_Po_SistersSegmentTextSize = ABSOLUTE( _ovl_En_Po_SistersSegmentTextEnd - _ovl_En_Po_SistersSegmentTextStart );
        _ovl_En_Po_SistersSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Po_Sisters/z_en_po_sisters.o (.data)
            build/data/overlays/actors/z_en_po_sisters.data.o (.data)
            build/data/overlays/actors/z_en_po_sisters.reloc.o (.data)
        _ovl_En_Po_SistersSegmentDataEnd = .;
    _ovl_En_Po_SistersSegmentDataSize = ABSOLUTE( _ovl_En_Po_SistersSegmentDataEnd - _ovl_En_Po_SistersSegmentDataStart );
        _ovl_En_Po_SistersSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Po_Sisters/z_en_po_sisters.o (.rodata)
            build/data/overlays/actors/z_en_po_sisters.data.o (.rodata)
            build/data/overlays/actors/z_en_po_sisters.reloc.o (.rodata)
        _ovl_En_Po_SistersSegmentRoDataEnd = .;
    _ovl_En_Po_SistersSegmentRoDataSize = ABSOLUTE( _ovl_En_Po_SistersSegmentRoDataEnd - _ovl_En_Po_SistersSegmentRoDataStart );
        _ovl_En_Po_SistersSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Po_Sisters/z_en_po_sisters.o (.sdata)
            build/data/overlays/actors/z_en_po_sisters.data.o (.sdata)
            build/data/overlays/actors/z_en_po_sisters.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Po_SistersSegmentSDataEnd = .;
        _ovl_En_Po_SistersSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Po_Sisters/z_en_po_sisters.o (.ovl)
            build/data/overlays/actors/z_en_po_sisters.data.o (.ovl)
            build/data/overlays/actors/z_en_po_sisters.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Po_SistersSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Po_SistersSegmentOvlEnd - _ovl_En_Po_SistersSegmentTextStart );
    _ovl_En_Po_SistersSegmentRomEnd = _RomSize;

    ..ovl_En_Po_Sisters.bss ADDR(..ovl_En_Po_Sisters) + SIZEOF(..ovl_En_Po_Sisters) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Po_SistersSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Po_Sisters/z_en_po_sisters.o (.sbss)
            build/data/overlays/actors/z_en_po_sisters.data.o (.sbss)
            build/data/overlays/actors/z_en_po_sisters.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Po_Sisters/z_en_po_sisters.o (.scommon)
            build/data/overlays/actors/z_en_po_sisters.data.o (.scommon)
            build/data/overlays/actors/z_en_po_sisters.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Po_Sisters/z_en_po_sisters.o (.bss)
            build/data/overlays/actors/z_en_po_sisters.data.o (.bss)
            build/data/overlays/actors/z_en_po_sisters.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Po_Sisters/z_en_po_sisters.o (COMMON)
            build/data/overlays/actors/z_en_po_sisters.data.o (COMMON)
            build/data/overlays/actors/z_en_po_sisters.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Po_SistersSegmentBssEnd = .;
        _ovl_En_Po_SistersSegmentEnd = .;
    }
    _ovl_En_Po_SistersSegmentBssSize = ABSOLUTE( _ovl_En_Po_SistersSegmentBssEnd - _ovl_En_Po_SistersSegmentBssStart );

    _ovl_En_PohSegmentRomStart = _RomSize;
    ..ovl_En_Poh : AT(_RomSize)
    {
        _ovl_En_PohSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_PohSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Poh/z_en_poh.o (.text)
            build/data/overlays/actors/z_en_poh.data.o (.text)
            build/data/overlays/actors/z_en_poh.reloc.o (.text)
        _ovl_En_PohSegmentTextEnd = .;
    _ovl_En_PohSegmentTextSize = ABSOLUTE( _ovl_En_PohSegmentTextEnd - _ovl_En_PohSegmentTextStart );
        _ovl_En_PohSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Poh/z_en_poh.o (.data)
            build/data/overlays/actors/z_en_poh.data.o (.data)
            build/data/overlays/actors/z_en_poh.reloc.o (.data)
        _ovl_En_PohSegmentDataEnd = .;
    _ovl_En_PohSegmentDataSize = ABSOLUTE( _ovl_En_PohSegmentDataEnd - _ovl_En_PohSegmentDataStart );
        _ovl_En_PohSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Poh/z_en_poh.o (.rodata)
            build/data/overlays/actors/z_en_poh.data.o (.rodata)
            build/data/overlays/actors/z_en_poh.reloc.o (.rodata)
        _ovl_En_PohSegmentRoDataEnd = .;
    _ovl_En_PohSegmentRoDataSize = ABSOLUTE( _ovl_En_PohSegmentRoDataEnd - _ovl_En_PohSegmentRoDataStart );
        _ovl_En_PohSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Poh/z_en_poh.o (.sdata)
            build/data/overlays/actors/z_en_poh.data.o (.sdata)
            build/data/overlays/actors/z_en_poh.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_PohSegmentSDataEnd = .;
        _ovl_En_PohSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Poh/z_en_poh.o (.ovl)
            build/data/overlays/actors/z_en_poh.data.o (.ovl)
            build/data/overlays/actors/z_en_poh.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_PohSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_PohSegmentOvlEnd - _ovl_En_PohSegmentTextStart );
    _ovl_En_PohSegmentRomEnd = _RomSize;

    ..ovl_En_Poh.bss ADDR(..ovl_En_Poh) + SIZEOF(..ovl_En_Poh) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_PohSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Poh/z_en_poh.o (.sbss)
            build/data/overlays/actors/z_en_poh.data.o (.sbss)
            build/data/overlays/actors/z_en_poh.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Poh/z_en_poh.o (.scommon)
            build/data/overlays/actors/z_en_poh.data.o (.scommon)
            build/data/overlays/actors/z_en_poh.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Poh/z_en_poh.o (.bss)
            build/data/overlays/actors/z_en_poh.data.o (.bss)
            build/data/overlays/actors/z_en_poh.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Poh/z_en_poh.o (COMMON)
            build/data/overlays/actors/z_en_poh.data.o (COMMON)
            build/data/overlays/actors/z_en_poh.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_PohSegmentBssEnd = .;
        _ovl_En_PohSegmentEnd = .;
    }
    _ovl_En_PohSegmentBssSize = ABSOLUTE( _ovl_En_PohSegmentBssEnd - _ovl_En_PohSegmentBssStart );

    _ovl_En_Pu_boxSegmentRomStart = _RomSize;
    ..ovl_En_Pu_box : AT(_RomSize)
    {
        _ovl_En_Pu_boxSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Pu_boxSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Pu_box/z_en_pu_box.o (.text)
            build/src/overlays/actors/ovl_En_Pu_box/ovl_En_Pu_box_reloc.o (.text)
        _ovl_En_Pu_boxSegmentTextEnd = .;
    _ovl_En_Pu_boxSegmentTextSize = ABSOLUTE( _ovl_En_Pu_boxSegmentTextEnd - _ovl_En_Pu_boxSegmentTextStart );
        _ovl_En_Pu_boxSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Pu_box/z_en_pu_box.o (.data)
            build/src/overlays/actors/ovl_En_Pu_box/ovl_En_Pu_box_reloc.o (.data)
        _ovl_En_Pu_boxSegmentDataEnd = .;
    _ovl_En_Pu_boxSegmentDataSize = ABSOLUTE( _ovl_En_Pu_boxSegmentDataEnd - _ovl_En_Pu_boxSegmentDataStart );
        _ovl_En_Pu_boxSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Pu_box/z_en_pu_box.o (.rodata)
            build/src/overlays/actors/ovl_En_Pu_box/ovl_En_Pu_box_reloc.o (.rodata)
        _ovl_En_Pu_boxSegmentRoDataEnd = .;
    _ovl_En_Pu_boxSegmentRoDataSize = ABSOLUTE( _ovl_En_Pu_boxSegmentRoDataEnd - _ovl_En_Pu_boxSegmentRoDataStart );
        _ovl_En_Pu_boxSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Pu_box/z_en_pu_box.o (.sdata)
            build/src/overlays/actors/ovl_En_Pu_box/ovl_En_Pu_box_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Pu_boxSegmentSDataEnd = .;
        _ovl_En_Pu_boxSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Pu_box/z_en_pu_box.o (.ovl)
            build/src/overlays/actors/ovl_En_Pu_box/ovl_En_Pu_box_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Pu_boxSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Pu_boxSegmentOvlEnd - _ovl_En_Pu_boxSegmentTextStart );
    _ovl_En_Pu_boxSegmentRomEnd = _RomSize;

    ..ovl_En_Pu_box.bss ADDR(..ovl_En_Pu_box) + SIZEOF(..ovl_En_Pu_box) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Pu_boxSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Pu_box/z_en_pu_box.o (.sbss)
            build/src/overlays/actors/ovl_En_Pu_box/ovl_En_Pu_box_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Pu_box/z_en_pu_box.o (.scommon)
            build/src/overlays/actors/ovl_En_Pu_box/ovl_En_Pu_box_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Pu_box/z_en_pu_box.o (.bss)
            build/src/overlays/actors/ovl_En_Pu_box/ovl_En_Pu_box_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Pu_box/z_en_pu_box.o (COMMON)
            build/src/overlays/actors/ovl_En_Pu_box/ovl_En_Pu_box_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Pu_boxSegmentBssEnd = .;
        _ovl_En_Pu_boxSegmentEnd = .;
    }
    _ovl_En_Pu_boxSegmentBssSize = ABSOLUTE( _ovl_En_Pu_boxSegmentBssEnd - _ovl_En_Pu_boxSegmentBssStart );

    _ovl_En_RdSegmentRomStart = _RomSize;
    ..ovl_En_Rd : AT(_RomSize)
    {
        _ovl_En_RdSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_RdSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Rd/z_en_rd.o (.text)
            build/src/overlays/actors/ovl_En_Rd/ovl_En_Rd_reloc.o (.text)
        _ovl_En_RdSegmentTextEnd = .;
    _ovl_En_RdSegmentTextSize = ABSOLUTE( _ovl_En_RdSegmentTextEnd - _ovl_En_RdSegmentTextStart );
        _ovl_En_RdSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Rd/z_en_rd.o (.data)
            build/src/overlays/actors/ovl_En_Rd/ovl_En_Rd_reloc.o (.data)
        _ovl_En_RdSegmentDataEnd = .;
    _ovl_En_RdSegmentDataSize = ABSOLUTE( _ovl_En_RdSegmentDataEnd - _ovl_En_RdSegmentDataStart );
        _ovl_En_RdSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Rd/z_en_rd.o (.rodata)
            build/src/overlays/actors/ovl_En_Rd/ovl_En_Rd_reloc.o (.rodata)
        _ovl_En_RdSegmentRoDataEnd = .;
    _ovl_En_RdSegmentRoDataSize = ABSOLUTE( _ovl_En_RdSegmentRoDataEnd - _ovl_En_RdSegmentRoDataStart );
        _ovl_En_RdSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Rd/z_en_rd.o (.sdata)
            build/src/overlays/actors/ovl_En_Rd/ovl_En_Rd_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_RdSegmentSDataEnd = .;
        _ovl_En_RdSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Rd/z_en_rd.o (.ovl)
            build/src/overlays/actors/ovl_En_Rd/ovl_En_Rd_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_RdSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_RdSegmentOvlEnd - _ovl_En_RdSegmentTextStart );
    _ovl_En_RdSegmentRomEnd = _RomSize;

    ..ovl_En_Rd.bss ADDR(..ovl_En_Rd) + SIZEOF(..ovl_En_Rd) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_RdSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Rd/z_en_rd.o (.sbss)
            build/src/overlays/actors/ovl_En_Rd/ovl_En_Rd_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Rd/z_en_rd.o (.scommon)
            build/src/overlays/actors/ovl_En_Rd/ovl_En_Rd_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Rd/z_en_rd.o (.bss)
            build/src/overlays/actors/ovl_En_Rd/ovl_En_Rd_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Rd/z_en_rd.o (COMMON)
            build/src/overlays/actors/ovl_En_Rd/ovl_En_Rd_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_RdSegmentBssEnd = .;
        _ovl_En_RdSegmentEnd = .;
    }
    _ovl_En_RdSegmentBssSize = ABSOLUTE( _ovl_En_RdSegmentBssEnd - _ovl_En_RdSegmentBssStart );

    _ovl_En_ReebaSegmentRomStart = _RomSize;
    ..ovl_En_Reeba : AT(_RomSize)
    {
        _ovl_En_ReebaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_ReebaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Reeba/z_en_reeba.o (.text)
            build/src/overlays/actors/ovl_En_Reeba/ovl_En_Reeba_reloc.o (.text)
        _ovl_En_ReebaSegmentTextEnd = .;
    _ovl_En_ReebaSegmentTextSize = ABSOLUTE( _ovl_En_ReebaSegmentTextEnd - _ovl_En_ReebaSegmentTextStart );
        _ovl_En_ReebaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Reeba/z_en_reeba.o (.data)
            build/src/overlays/actors/ovl_En_Reeba/ovl_En_Reeba_reloc.o (.data)
        _ovl_En_ReebaSegmentDataEnd = .;
    _ovl_En_ReebaSegmentDataSize = ABSOLUTE( _ovl_En_ReebaSegmentDataEnd - _ovl_En_ReebaSegmentDataStart );
        _ovl_En_ReebaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Reeba/z_en_reeba.o (.rodata)
            build/src/overlays/actors/ovl_En_Reeba/ovl_En_Reeba_reloc.o (.rodata)
        _ovl_En_ReebaSegmentRoDataEnd = .;
    _ovl_En_ReebaSegmentRoDataSize = ABSOLUTE( _ovl_En_ReebaSegmentRoDataEnd - _ovl_En_ReebaSegmentRoDataStart );
        _ovl_En_ReebaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Reeba/z_en_reeba.o (.sdata)
            build/src/overlays/actors/ovl_En_Reeba/ovl_En_Reeba_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_ReebaSegmentSDataEnd = .;
        _ovl_En_ReebaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Reeba/z_en_reeba.o (.ovl)
            build/src/overlays/actors/ovl_En_Reeba/ovl_En_Reeba_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_ReebaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_ReebaSegmentOvlEnd - _ovl_En_ReebaSegmentTextStart );
    _ovl_En_ReebaSegmentRomEnd = _RomSize;

    ..ovl_En_Reeba.bss ADDR(..ovl_En_Reeba) + SIZEOF(..ovl_En_Reeba) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_ReebaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Reeba/z_en_reeba.o (.sbss)
            build/src/overlays/actors/ovl_En_Reeba/ovl_En_Reeba_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Reeba/z_en_reeba.o (.scommon)
            build/src/overlays/actors/ovl_En_Reeba/ovl_En_Reeba_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Reeba/z_en_reeba.o (.bss)
            build/src/overlays/actors/ovl_En_Reeba/ovl_En_Reeba_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Reeba/z_en_reeba.o (COMMON)
            build/src/overlays/actors/ovl_En_Reeba/ovl_En_Reeba_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_ReebaSegmentBssEnd = .;
        _ovl_En_ReebaSegmentEnd = .;
    }
    _ovl_En_ReebaSegmentBssSize = ABSOLUTE( _ovl_En_ReebaSegmentBssEnd - _ovl_En_ReebaSegmentBssStart );

    _ovl_En_River_SoundSegmentRomStart = _RomSize;
    ..ovl_En_River_Sound : AT(_RomSize)
    {
        _ovl_En_River_SoundSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_River_SoundSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_River_Sound/z_en_river_sound.o (.text)
            build/data/overlays/actors/z_en_river_sound.data.o (.text)
            build/data/overlays/actors/z_en_river_sound.reloc.o (.text)
        _ovl_En_River_SoundSegmentTextEnd = .;
    _ovl_En_River_SoundSegmentTextSize = ABSOLUTE( _ovl_En_River_SoundSegmentTextEnd - _ovl_En_River_SoundSegmentTextStart );
        _ovl_En_River_SoundSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_River_Sound/z_en_river_sound.o (.data)
            build/data/overlays/actors/z_en_river_sound.data.o (.data)
            build/data/overlays/actors/z_en_river_sound.reloc.o (.data)
        _ovl_En_River_SoundSegmentDataEnd = .;
    _ovl_En_River_SoundSegmentDataSize = ABSOLUTE( _ovl_En_River_SoundSegmentDataEnd - _ovl_En_River_SoundSegmentDataStart );
        _ovl_En_River_SoundSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_River_Sound/z_en_river_sound.o (.rodata)
            build/data/overlays/actors/z_en_river_sound.data.o (.rodata)
            build/data/overlays/actors/z_en_river_sound.reloc.o (.rodata)
        _ovl_En_River_SoundSegmentRoDataEnd = .;
    _ovl_En_River_SoundSegmentRoDataSize = ABSOLUTE( _ovl_En_River_SoundSegmentRoDataEnd - _ovl_En_River_SoundSegmentRoDataStart );
        _ovl_En_River_SoundSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_River_Sound/z_en_river_sound.o (.sdata)
            build/data/overlays/actors/z_en_river_sound.data.o (.sdata)
            build/data/overlays/actors/z_en_river_sound.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_River_SoundSegmentSDataEnd = .;
        _ovl_En_River_SoundSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_River_Sound/z_en_river_sound.o (.ovl)
            build/data/overlays/actors/z_en_river_sound.data.o (.ovl)
            build/data/overlays/actors/z_en_river_sound.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_River_SoundSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_River_SoundSegmentOvlEnd - _ovl_En_River_SoundSegmentTextStart );
    _ovl_En_River_SoundSegmentRomEnd = _RomSize;

    ..ovl_En_River_Sound.bss ADDR(..ovl_En_River_Sound) + SIZEOF(..ovl_En_River_Sound) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_River_SoundSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_River_Sound/z_en_river_sound.o (.sbss)
            build/data/overlays/actors/z_en_river_sound.data.o (.sbss)
            build/data/overlays/actors/z_en_river_sound.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_River_Sound/z_en_river_sound.o (.scommon)
            build/data/overlays/actors/z_en_river_sound.data.o (.scommon)
            build/data/overlays/actors/z_en_river_sound.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_River_Sound/z_en_river_sound.o (.bss)
            build/data/overlays/actors/z_en_river_sound.data.o (.bss)
            build/data/overlays/actors/z_en_river_sound.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_River_Sound/z_en_river_sound.o (COMMON)
            build/data/overlays/actors/z_en_river_sound.data.o (COMMON)
            build/data/overlays/actors/z_en_river_sound.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_River_SoundSegmentBssEnd = .;
        _ovl_En_River_SoundSegmentEnd = .;
    }
    _ovl_En_River_SoundSegmentBssSize = ABSOLUTE( _ovl_En_River_SoundSegmentBssEnd - _ovl_En_River_SoundSegmentBssStart );

    _ovl_En_RlSegmentRomStart = _RomSize;
    ..ovl_En_Rl : AT(_RomSize)
    {
        _ovl_En_RlSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_RlSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Rl/z_en_rl.o (.text)
            build/src/overlays/actors/ovl_En_Rl/ovl_En_Rl_reloc.o (.text)
        _ovl_En_RlSegmentTextEnd = .;
    _ovl_En_RlSegmentTextSize = ABSOLUTE( _ovl_En_RlSegmentTextEnd - _ovl_En_RlSegmentTextStart );
        _ovl_En_RlSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Rl/z_en_rl.o (.data)
            build/src/overlays/actors/ovl_En_Rl/ovl_En_Rl_reloc.o (.data)
        _ovl_En_RlSegmentDataEnd = .;
    _ovl_En_RlSegmentDataSize = ABSOLUTE( _ovl_En_RlSegmentDataEnd - _ovl_En_RlSegmentDataStart );
        _ovl_En_RlSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Rl/z_en_rl.o (.rodata)
            build/src/overlays/actors/ovl_En_Rl/ovl_En_Rl_reloc.o (.rodata)
        _ovl_En_RlSegmentRoDataEnd = .;
    _ovl_En_RlSegmentRoDataSize = ABSOLUTE( _ovl_En_RlSegmentRoDataEnd - _ovl_En_RlSegmentRoDataStart );
        _ovl_En_RlSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Rl/z_en_rl.o (.sdata)
            build/src/overlays/actors/ovl_En_Rl/ovl_En_Rl_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_RlSegmentSDataEnd = .;
        _ovl_En_RlSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Rl/z_en_rl.o (.ovl)
            build/src/overlays/actors/ovl_En_Rl/ovl_En_Rl_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_RlSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_RlSegmentOvlEnd - _ovl_En_RlSegmentTextStart );
    _ovl_En_RlSegmentRomEnd = _RomSize;

    ..ovl_En_Rl.bss ADDR(..ovl_En_Rl) + SIZEOF(..ovl_En_Rl) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_RlSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Rl/z_en_rl.o (.sbss)
            build/src/overlays/actors/ovl_En_Rl/ovl_En_Rl_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Rl/z_en_rl.o (.scommon)
            build/src/overlays/actors/ovl_En_Rl/ovl_En_Rl_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Rl/z_en_rl.o (.bss)
            build/src/overlays/actors/ovl_En_Rl/ovl_En_Rl_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Rl/z_en_rl.o (COMMON)
            build/src/overlays/actors/ovl_En_Rl/ovl_En_Rl_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_RlSegmentBssEnd = .;
        _ovl_En_RlSegmentEnd = .;
    }
    _ovl_En_RlSegmentBssSize = ABSOLUTE( _ovl_En_RlSegmentBssEnd - _ovl_En_RlSegmentBssStart );

    _ovl_En_RrSegmentRomStart = _RomSize;
    ..ovl_En_Rr : AT(_RomSize)
    {
        _ovl_En_RrSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_RrSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Rr/z_en_rr.o (.text)
            build/data/overlays/actors/z_en_rr.data.o (.text)
            build/data/overlays/actors/z_en_rr.reloc.o (.text)
        _ovl_En_RrSegmentTextEnd = .;
    _ovl_En_RrSegmentTextSize = ABSOLUTE( _ovl_En_RrSegmentTextEnd - _ovl_En_RrSegmentTextStart );
        _ovl_En_RrSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Rr/z_en_rr.o (.data)
            build/data/overlays/actors/z_en_rr.data.o (.data)
            build/data/overlays/actors/z_en_rr.reloc.o (.data)
        _ovl_En_RrSegmentDataEnd = .;
    _ovl_En_RrSegmentDataSize = ABSOLUTE( _ovl_En_RrSegmentDataEnd - _ovl_En_RrSegmentDataStart );
        _ovl_En_RrSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Rr/z_en_rr.o (.rodata)
            build/data/overlays/actors/z_en_rr.data.o (.rodata)
            build/data/overlays/actors/z_en_rr.reloc.o (.rodata)
        _ovl_En_RrSegmentRoDataEnd = .;
    _ovl_En_RrSegmentRoDataSize = ABSOLUTE( _ovl_En_RrSegmentRoDataEnd - _ovl_En_RrSegmentRoDataStart );
        _ovl_En_RrSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Rr/z_en_rr.o (.sdata)
            build/data/overlays/actors/z_en_rr.data.o (.sdata)
            build/data/overlays/actors/z_en_rr.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_RrSegmentSDataEnd = .;
        _ovl_En_RrSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Rr/z_en_rr.o (.ovl)
            build/data/overlays/actors/z_en_rr.data.o (.ovl)
            build/data/overlays/actors/z_en_rr.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_RrSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_RrSegmentOvlEnd - _ovl_En_RrSegmentTextStart );
    _ovl_En_RrSegmentRomEnd = _RomSize;

    ..ovl_En_Rr.bss ADDR(..ovl_En_Rr) + SIZEOF(..ovl_En_Rr) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_RrSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Rr/z_en_rr.o (.sbss)
            build/data/overlays/actors/z_en_rr.data.o (.sbss)
            build/data/overlays/actors/z_en_rr.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Rr/z_en_rr.o (.scommon)
            build/data/overlays/actors/z_en_rr.data.o (.scommon)
            build/data/overlays/actors/z_en_rr.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Rr/z_en_rr.o (.bss)
            build/data/overlays/actors/z_en_rr.data.o (.bss)
            build/data/overlays/actors/z_en_rr.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Rr/z_en_rr.o (COMMON)
            build/data/overlays/actors/z_en_rr.data.o (COMMON)
            build/data/overlays/actors/z_en_rr.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_RrSegmentBssEnd = .;
        _ovl_En_RrSegmentEnd = .;
    }
    _ovl_En_RrSegmentBssSize = ABSOLUTE( _ovl_En_RrSegmentBssEnd - _ovl_En_RrSegmentBssStart );

    _ovl_En_Ru1SegmentRomStart = _RomSize;
    ..ovl_En_Ru1 : AT(_RomSize)
    {
        _ovl_En_Ru1SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Ru1SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ru1/z_en_ru1.o (.text)
            build/src/overlays/actors/ovl_En_Ru1/ovl_En_Ru1_reloc.o (.text)
        _ovl_En_Ru1SegmentTextEnd = .;
    _ovl_En_Ru1SegmentTextSize = ABSOLUTE( _ovl_En_Ru1SegmentTextEnd - _ovl_En_Ru1SegmentTextStart );
        _ovl_En_Ru1SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ru1/z_en_ru1.o (.data)
            build/src/overlays/actors/ovl_En_Ru1/ovl_En_Ru1_reloc.o (.data)
        _ovl_En_Ru1SegmentDataEnd = .;
    _ovl_En_Ru1SegmentDataSize = ABSOLUTE( _ovl_En_Ru1SegmentDataEnd - _ovl_En_Ru1SegmentDataStart );
        _ovl_En_Ru1SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ru1/z_en_ru1.o (.rodata)
            build/src/overlays/actors/ovl_En_Ru1/ovl_En_Ru1_reloc.o (.rodata)
        _ovl_En_Ru1SegmentRoDataEnd = .;
    _ovl_En_Ru1SegmentRoDataSize = ABSOLUTE( _ovl_En_Ru1SegmentRoDataEnd - _ovl_En_Ru1SegmentRoDataStart );
        _ovl_En_Ru1SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ru1/z_en_ru1.o (.sdata)
            build/src/overlays/actors/ovl_En_Ru1/ovl_En_Ru1_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Ru1SegmentSDataEnd = .;
        _ovl_En_Ru1SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ru1/z_en_ru1.o (.ovl)
            build/src/overlays/actors/ovl_En_Ru1/ovl_En_Ru1_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Ru1SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Ru1SegmentOvlEnd - _ovl_En_Ru1SegmentTextStart );
    _ovl_En_Ru1SegmentRomEnd = _RomSize;

    ..ovl_En_Ru1.bss ADDR(..ovl_En_Ru1) + SIZEOF(..ovl_En_Ru1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Ru1SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ru1/z_en_ru1.o (.sbss)
            build/src/overlays/actors/ovl_En_Ru1/ovl_En_Ru1_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ru1/z_en_ru1.o (.scommon)
            build/src/overlays/actors/ovl_En_Ru1/ovl_En_Ru1_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ru1/z_en_ru1.o (.bss)
            build/src/overlays/actors/ovl_En_Ru1/ovl_En_Ru1_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ru1/z_en_ru1.o (COMMON)
            build/src/overlays/actors/ovl_En_Ru1/ovl_En_Ru1_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Ru1SegmentBssEnd = .;
        _ovl_En_Ru1SegmentEnd = .;
    }
    _ovl_En_Ru1SegmentBssSize = ABSOLUTE( _ovl_En_Ru1SegmentBssEnd - _ovl_En_Ru1SegmentBssStart );

    _ovl_En_Ru2SegmentRomStart = _RomSize;
    ..ovl_En_Ru2 : AT(_RomSize)
    {
        _ovl_En_Ru2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Ru2SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ru2/z_en_ru2.o (.text)
            build/src/overlays/actors/ovl_En_Ru2/ovl_En_Ru2_reloc.o (.text)
        _ovl_En_Ru2SegmentTextEnd = .;
    _ovl_En_Ru2SegmentTextSize = ABSOLUTE( _ovl_En_Ru2SegmentTextEnd - _ovl_En_Ru2SegmentTextStart );
        _ovl_En_Ru2SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ru2/z_en_ru2.o (.data)
            build/src/overlays/actors/ovl_En_Ru2/ovl_En_Ru2_reloc.o (.data)
        _ovl_En_Ru2SegmentDataEnd = .;
    _ovl_En_Ru2SegmentDataSize = ABSOLUTE( _ovl_En_Ru2SegmentDataEnd - _ovl_En_Ru2SegmentDataStart );
        _ovl_En_Ru2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ru2/z_en_ru2.o (.rodata)
            build/src/overlays/actors/ovl_En_Ru2/ovl_En_Ru2_reloc.o (.rodata)
        _ovl_En_Ru2SegmentRoDataEnd = .;
    _ovl_En_Ru2SegmentRoDataSize = ABSOLUTE( _ovl_En_Ru2SegmentRoDataEnd - _ovl_En_Ru2SegmentRoDataStart );
        _ovl_En_Ru2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ru2/z_en_ru2.o (.sdata)
            build/src/overlays/actors/ovl_En_Ru2/ovl_En_Ru2_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Ru2SegmentSDataEnd = .;
        _ovl_En_Ru2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ru2/z_en_ru2.o (.ovl)
            build/src/overlays/actors/ovl_En_Ru2/ovl_En_Ru2_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Ru2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Ru2SegmentOvlEnd - _ovl_En_Ru2SegmentTextStart );
    _ovl_En_Ru2SegmentRomEnd = _RomSize;

    ..ovl_En_Ru2.bss ADDR(..ovl_En_Ru2) + SIZEOF(..ovl_En_Ru2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Ru2SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ru2/z_en_ru2.o (.sbss)
            build/src/overlays/actors/ovl_En_Ru2/ovl_En_Ru2_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ru2/z_en_ru2.o (.scommon)
            build/src/overlays/actors/ovl_En_Ru2/ovl_En_Ru2_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ru2/z_en_ru2.o (.bss)
            build/src/overlays/actors/ovl_En_Ru2/ovl_En_Ru2_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ru2/z_en_ru2.o (COMMON)
            build/src/overlays/actors/ovl_En_Ru2/ovl_En_Ru2_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Ru2SegmentBssEnd = .;
        _ovl_En_Ru2SegmentEnd = .;
    }
    _ovl_En_Ru2SegmentBssSize = ABSOLUTE( _ovl_En_Ru2SegmentBssEnd - _ovl_En_Ru2SegmentBssStart );

    _ovl_En_SaSegmentRomStart = _RomSize;
    ..ovl_En_Sa : AT(_RomSize)
    {
        _ovl_En_SaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_SaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Sa/z_en_sa.o (.text)
            build/data/overlays/actors/z_en_sa.data.o (.text)
            build/data/overlays/actors/z_en_sa.reloc.o (.text)
        _ovl_En_SaSegmentTextEnd = .;
    _ovl_En_SaSegmentTextSize = ABSOLUTE( _ovl_En_SaSegmentTextEnd - _ovl_En_SaSegmentTextStart );
        _ovl_En_SaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Sa/z_en_sa.o (.data)
            build/data/overlays/actors/z_en_sa.data.o (.data)
            build/data/overlays/actors/z_en_sa.reloc.o (.data)
        _ovl_En_SaSegmentDataEnd = .;
    _ovl_En_SaSegmentDataSize = ABSOLUTE( _ovl_En_SaSegmentDataEnd - _ovl_En_SaSegmentDataStart );
        _ovl_En_SaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Sa/z_en_sa.o (.rodata)
            build/data/overlays/actors/z_en_sa.data.o (.rodata)
            build/data/overlays/actors/z_en_sa.reloc.o (.rodata)
        _ovl_En_SaSegmentRoDataEnd = .;
    _ovl_En_SaSegmentRoDataSize = ABSOLUTE( _ovl_En_SaSegmentRoDataEnd - _ovl_En_SaSegmentRoDataStart );
        _ovl_En_SaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Sa/z_en_sa.o (.sdata)
            build/data/overlays/actors/z_en_sa.data.o (.sdata)
            build/data/overlays/actors/z_en_sa.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_SaSegmentSDataEnd = .;
        _ovl_En_SaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Sa/z_en_sa.o (.ovl)
            build/data/overlays/actors/z_en_sa.data.o (.ovl)
            build/data/overlays/actors/z_en_sa.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_SaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_SaSegmentOvlEnd - _ovl_En_SaSegmentTextStart );
    _ovl_En_SaSegmentRomEnd = _RomSize;

    ..ovl_En_Sa.bss ADDR(..ovl_En_Sa) + SIZEOF(..ovl_En_Sa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_SaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Sa/z_en_sa.o (.sbss)
            build/data/overlays/actors/z_en_sa.data.o (.sbss)
            build/data/overlays/actors/z_en_sa.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Sa/z_en_sa.o (.scommon)
            build/data/overlays/actors/z_en_sa.data.o (.scommon)
            build/data/overlays/actors/z_en_sa.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Sa/z_en_sa.o (.bss)
            build/data/overlays/actors/z_en_sa.data.o (.bss)
            build/data/overlays/actors/z_en_sa.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Sa/z_en_sa.o (COMMON)
            build/data/overlays/actors/z_en_sa.data.o (COMMON)
            build/data/overlays/actors/z_en_sa.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_SaSegmentBssEnd = .;
        _ovl_En_SaSegmentEnd = .;
    }
    _ovl_En_SaSegmentBssSize = ABSOLUTE( _ovl_En_SaSegmentBssEnd - _ovl_En_SaSegmentBssStart );

    _ovl_En_SbSegmentRomStart = _RomSize;
    ..ovl_En_Sb : AT(_RomSize)
    {
        _ovl_En_SbSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_SbSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Sb/z_en_sb.o (.text)
            build/src/overlays/actors/ovl_En_Sb/ovl_En_Sb_reloc.o (.text)
        _ovl_En_SbSegmentTextEnd = .;
    _ovl_En_SbSegmentTextSize = ABSOLUTE( _ovl_En_SbSegmentTextEnd - _ovl_En_SbSegmentTextStart );
        _ovl_En_SbSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Sb/z_en_sb.o (.data)
            build/src/overlays/actors/ovl_En_Sb/ovl_En_Sb_reloc.o (.data)
        _ovl_En_SbSegmentDataEnd = .;
    _ovl_En_SbSegmentDataSize = ABSOLUTE( _ovl_En_SbSegmentDataEnd - _ovl_En_SbSegmentDataStart );
        _ovl_En_SbSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Sb/z_en_sb.o (.rodata)
            build/src/overlays/actors/ovl_En_Sb/ovl_En_Sb_reloc.o (.rodata)
        _ovl_En_SbSegmentRoDataEnd = .;
    _ovl_En_SbSegmentRoDataSize = ABSOLUTE( _ovl_En_SbSegmentRoDataEnd - _ovl_En_SbSegmentRoDataStart );
        _ovl_En_SbSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Sb/z_en_sb.o (.sdata)
            build/src/overlays/actors/ovl_En_Sb/ovl_En_Sb_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_SbSegmentSDataEnd = .;
        _ovl_En_SbSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Sb/z_en_sb.o (.ovl)
            build/src/overlays/actors/ovl_En_Sb/ovl_En_Sb_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_SbSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_SbSegmentOvlEnd - _ovl_En_SbSegmentTextStart );
    _ovl_En_SbSegmentRomEnd = _RomSize;

    ..ovl_En_Sb.bss ADDR(..ovl_En_Sb) + SIZEOF(..ovl_En_Sb) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_SbSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Sb/z_en_sb.o (.sbss)
            build/src/overlays/actors/ovl_En_Sb/ovl_En_Sb_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Sb/z_en_sb.o (.scommon)
            build/src/overlays/actors/ovl_En_Sb/ovl_En_Sb_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Sb/z_en_sb.o (.bss)
            build/src/overlays/actors/ovl_En_Sb/ovl_En_Sb_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Sb/z_en_sb.o (COMMON)
            build/src/overlays/actors/ovl_En_Sb/ovl_En_Sb_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_SbSegmentBssEnd = .;
        _ovl_En_SbSegmentEnd = .;
    }
    _ovl_En_SbSegmentBssSize = ABSOLUTE( _ovl_En_SbSegmentBssEnd - _ovl_En_SbSegmentBssStart );

    _ovl_En_Scene_ChangeSegmentRomStart = _RomSize;
    ..ovl_En_Scene_Change : AT(_RomSize)
    {
        _ovl_En_Scene_ChangeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Scene_ChangeSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Scene_Change/z_en_scene_change.o (.text)
            build/src/overlays/actors/ovl_En_Scene_Change/ovl_En_Scene_Change_reloc.o (.text)
        _ovl_En_Scene_ChangeSegmentTextEnd = .;
    _ovl_En_Scene_ChangeSegmentTextSize = ABSOLUTE( _ovl_En_Scene_ChangeSegmentTextEnd - _ovl_En_Scene_ChangeSegmentTextStart );
        _ovl_En_Scene_ChangeSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Scene_Change/z_en_scene_change.o (.data)
            build/src/overlays/actors/ovl_En_Scene_Change/ovl_En_Scene_Change_reloc.o (.data)
        _ovl_En_Scene_ChangeSegmentDataEnd = .;
    _ovl_En_Scene_ChangeSegmentDataSize = ABSOLUTE( _ovl_En_Scene_ChangeSegmentDataEnd - _ovl_En_Scene_ChangeSegmentDataStart );
        _ovl_En_Scene_ChangeSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Scene_Change/z_en_scene_change.o (.rodata)
            build/src/overlays/actors/ovl_En_Scene_Change/ovl_En_Scene_Change_reloc.o (.rodata)
        _ovl_En_Scene_ChangeSegmentRoDataEnd = .;
    _ovl_En_Scene_ChangeSegmentRoDataSize = ABSOLUTE( _ovl_En_Scene_ChangeSegmentRoDataEnd - _ovl_En_Scene_ChangeSegmentRoDataStart );
        _ovl_En_Scene_ChangeSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Scene_Change/z_en_scene_change.o (.sdata)
            build/src/overlays/actors/ovl_En_Scene_Change/ovl_En_Scene_Change_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Scene_ChangeSegmentSDataEnd = .;
        _ovl_En_Scene_ChangeSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Scene_Change/z_en_scene_change.o (.ovl)
            build/src/overlays/actors/ovl_En_Scene_Change/ovl_En_Scene_Change_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Scene_ChangeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Scene_ChangeSegmentOvlEnd - _ovl_En_Scene_ChangeSegmentTextStart );
    _ovl_En_Scene_ChangeSegmentRomEnd = _RomSize;

    ..ovl_En_Scene_Change.bss ADDR(..ovl_En_Scene_Change) + SIZEOF(..ovl_En_Scene_Change) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Scene_ChangeSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Scene_Change/z_en_scene_change.o (.sbss)
            build/src/overlays/actors/ovl_En_Scene_Change/ovl_En_Scene_Change_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Scene_Change/z_en_scene_change.o (.scommon)
            build/src/overlays/actors/ovl_En_Scene_Change/ovl_En_Scene_Change_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Scene_Change/z_en_scene_change.o (.bss)
            build/src/overlays/actors/ovl_En_Scene_Change/ovl_En_Scene_Change_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Scene_Change/z_en_scene_change.o (COMMON)
            build/src/overlays/actors/ovl_En_Scene_Change/ovl_En_Scene_Change_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Scene_ChangeSegmentBssEnd = .;
        _ovl_En_Scene_ChangeSegmentEnd = .;
    }
    _ovl_En_Scene_ChangeSegmentBssSize = ABSOLUTE( _ovl_En_Scene_ChangeSegmentBssEnd - _ovl_En_Scene_ChangeSegmentBssStart );

    _ovl_En_SdaSegmentRomStart = _RomSize;
    ..ovl_En_Sda : AT(_RomSize)
    {
        _ovl_En_SdaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_SdaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Sda/z_en_sda.o (.text)
            build/data/overlays/actors/z_en_sda.data.o (.text)
            build/data/overlays/actors/z_en_sda.bss.o (.text)
            build/data/overlays/actors/z_en_sda.reloc.o (.text)
        _ovl_En_SdaSegmentTextEnd = .;
    _ovl_En_SdaSegmentTextSize = ABSOLUTE( _ovl_En_SdaSegmentTextEnd - _ovl_En_SdaSegmentTextStart );
        _ovl_En_SdaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Sda/z_en_sda.o (.data)
            build/data/overlays/actors/z_en_sda.data.o (.data)
            build/data/overlays/actors/z_en_sda.bss.o (.data)
            build/data/overlays/actors/z_en_sda.reloc.o (.data)
        _ovl_En_SdaSegmentDataEnd = .;
    _ovl_En_SdaSegmentDataSize = ABSOLUTE( _ovl_En_SdaSegmentDataEnd - _ovl_En_SdaSegmentDataStart );
        _ovl_En_SdaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Sda/z_en_sda.o (.rodata)
            build/data/overlays/actors/z_en_sda.data.o (.rodata)
            build/data/overlays/actors/z_en_sda.bss.o (.rodata)
            build/data/overlays/actors/z_en_sda.reloc.o (.rodata)
        _ovl_En_SdaSegmentRoDataEnd = .;
    _ovl_En_SdaSegmentRoDataSize = ABSOLUTE( _ovl_En_SdaSegmentRoDataEnd - _ovl_En_SdaSegmentRoDataStart );
        _ovl_En_SdaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Sda/z_en_sda.o (.sdata)
            build/data/overlays/actors/z_en_sda.data.o (.sdata)
            build/data/overlays/actors/z_en_sda.bss.o (.sdata)
            build/data/overlays/actors/z_en_sda.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_SdaSegmentSDataEnd = .;
        _ovl_En_SdaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Sda/z_en_sda.o (.ovl)
            build/data/overlays/actors/z_en_sda.data.o (.ovl)
            build/data/overlays/actors/z_en_sda.bss.o (.ovl)
            build/data/overlays/actors/z_en_sda.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_SdaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_SdaSegmentOvlEnd - _ovl_En_SdaSegmentTextStart );
    _ovl_En_SdaSegmentRomEnd = _RomSize;

    ..ovl_En_Sda.bss ADDR(..ovl_En_Sda) + SIZEOF(..ovl_En_Sda) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_SdaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Sda/z_en_sda.o (.sbss)
            build/data/overlays/actors/z_en_sda.data.o (.sbss)
            build/data/overlays/actors/z_en_sda.bss.o (.sbss)
            build/data/overlays/actors/z_en_sda.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Sda/z_en_sda.o (.scommon)
            build/data/overlays/actors/z_en_sda.data.o (.scommon)
            build/data/overlays/actors/z_en_sda.bss.o (.scommon)
            build/data/overlays/actors/z_en_sda.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Sda/z_en_sda.o (.bss)
            build/data/overlays/actors/z_en_sda.data.o (.bss)
            build/data/overlays/actors/z_en_sda.bss.o (.bss)
            build/data/overlays/actors/z_en_sda.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Sda/z_en_sda.o (COMMON)
            build/data/overlays/actors/z_en_sda.data.o (COMMON)
            build/data/overlays/actors/z_en_sda.bss.o (COMMON)
            build/data/overlays/actors/z_en_sda.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_SdaSegmentBssEnd = .;
        _ovl_En_SdaSegmentEnd = .;
    }
    _ovl_En_SdaSegmentBssSize = ABSOLUTE( _ovl_En_SdaSegmentBssEnd - _ovl_En_SdaSegmentBssStart );

    _ovl_En_ShopnutsSegmentRomStart = _RomSize;
    ..ovl_En_Shopnuts : AT(_RomSize)
    {
        _ovl_En_ShopnutsSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_ShopnutsSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Shopnuts/z_en_shopnuts.o (.text)
            build/data/overlays/actors/z_en_shopnuts.data.o (.text)
            build/data/overlays/actors/z_en_shopnuts.reloc.o (.text)
        _ovl_En_ShopnutsSegmentTextEnd = .;
    _ovl_En_ShopnutsSegmentTextSize = ABSOLUTE( _ovl_En_ShopnutsSegmentTextEnd - _ovl_En_ShopnutsSegmentTextStart );
        _ovl_En_ShopnutsSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Shopnuts/z_en_shopnuts.o (.data)
            build/data/overlays/actors/z_en_shopnuts.data.o (.data)
            build/data/overlays/actors/z_en_shopnuts.reloc.o (.data)
        _ovl_En_ShopnutsSegmentDataEnd = .;
    _ovl_En_ShopnutsSegmentDataSize = ABSOLUTE( _ovl_En_ShopnutsSegmentDataEnd - _ovl_En_ShopnutsSegmentDataStart );
        _ovl_En_ShopnutsSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Shopnuts/z_en_shopnuts.o (.rodata)
            build/data/overlays/actors/z_en_shopnuts.data.o (.rodata)
            build/data/overlays/actors/z_en_shopnuts.reloc.o (.rodata)
        _ovl_En_ShopnutsSegmentRoDataEnd = .;
    _ovl_En_ShopnutsSegmentRoDataSize = ABSOLUTE( _ovl_En_ShopnutsSegmentRoDataEnd - _ovl_En_ShopnutsSegmentRoDataStart );
        _ovl_En_ShopnutsSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Shopnuts/z_en_shopnuts.o (.sdata)
            build/data/overlays/actors/z_en_shopnuts.data.o (.sdata)
            build/data/overlays/actors/z_en_shopnuts.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_ShopnutsSegmentSDataEnd = .;
        _ovl_En_ShopnutsSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Shopnuts/z_en_shopnuts.o (.ovl)
            build/data/overlays/actors/z_en_shopnuts.data.o (.ovl)
            build/data/overlays/actors/z_en_shopnuts.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_ShopnutsSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_ShopnutsSegmentOvlEnd - _ovl_En_ShopnutsSegmentTextStart );
    _ovl_En_ShopnutsSegmentRomEnd = _RomSize;

    ..ovl_En_Shopnuts.bss ADDR(..ovl_En_Shopnuts) + SIZEOF(..ovl_En_Shopnuts) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_ShopnutsSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Shopnuts/z_en_shopnuts.o (.sbss)
            build/data/overlays/actors/z_en_shopnuts.data.o (.sbss)
            build/data/overlays/actors/z_en_shopnuts.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Shopnuts/z_en_shopnuts.o (.scommon)
            build/data/overlays/actors/z_en_shopnuts.data.o (.scommon)
            build/data/overlays/actors/z_en_shopnuts.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Shopnuts/z_en_shopnuts.o (.bss)
            build/data/overlays/actors/z_en_shopnuts.data.o (.bss)
            build/data/overlays/actors/z_en_shopnuts.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Shopnuts/z_en_shopnuts.o (COMMON)
            build/data/overlays/actors/z_en_shopnuts.data.o (COMMON)
            build/data/overlays/actors/z_en_shopnuts.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_ShopnutsSegmentBssEnd = .;
        _ovl_En_ShopnutsSegmentEnd = .;
    }
    _ovl_En_ShopnutsSegmentBssSize = ABSOLUTE( _ovl_En_ShopnutsSegmentBssEnd - _ovl_En_ShopnutsSegmentBssStart );

    _ovl_En_SiSegmentRomStart = _RomSize;
    ..ovl_En_Si : AT(_RomSize)
    {
        _ovl_En_SiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_SiSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Si/z_en_si.o (.text)
            build/src/overlays/actors/ovl_En_Si/ovl_En_Si_reloc.o (.text)
        _ovl_En_SiSegmentTextEnd = .;
    _ovl_En_SiSegmentTextSize = ABSOLUTE( _ovl_En_SiSegmentTextEnd - _ovl_En_SiSegmentTextStart );
        _ovl_En_SiSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Si/z_en_si.o (.data)
            build/src/overlays/actors/ovl_En_Si/ovl_En_Si_reloc.o (.data)
        _ovl_En_SiSegmentDataEnd = .;
    _ovl_En_SiSegmentDataSize = ABSOLUTE( _ovl_En_SiSegmentDataEnd - _ovl_En_SiSegmentDataStart );
        _ovl_En_SiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Si/z_en_si.o (.rodata)
            build/src/overlays/actors/ovl_En_Si/ovl_En_Si_reloc.o (.rodata)
        _ovl_En_SiSegmentRoDataEnd = .;
    _ovl_En_SiSegmentRoDataSize = ABSOLUTE( _ovl_En_SiSegmentRoDataEnd - _ovl_En_SiSegmentRoDataStart );
        _ovl_En_SiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Si/z_en_si.o (.sdata)
            build/src/overlays/actors/ovl_En_Si/ovl_En_Si_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_SiSegmentSDataEnd = .;
        _ovl_En_SiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Si/z_en_si.o (.ovl)
            build/src/overlays/actors/ovl_En_Si/ovl_En_Si_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_SiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_SiSegmentOvlEnd - _ovl_En_SiSegmentTextStart );
    _ovl_En_SiSegmentRomEnd = _RomSize;

    ..ovl_En_Si.bss ADDR(..ovl_En_Si) + SIZEOF(..ovl_En_Si) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_SiSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Si/z_en_si.o (.sbss)
            build/src/overlays/actors/ovl_En_Si/ovl_En_Si_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Si/z_en_si.o (.scommon)
            build/src/overlays/actors/ovl_En_Si/ovl_En_Si_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Si/z_en_si.o (.bss)
            build/src/overlays/actors/ovl_En_Si/ovl_En_Si_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Si/z_en_si.o (COMMON)
            build/src/overlays/actors/ovl_En_Si/ovl_En_Si_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_SiSegmentBssEnd = .;
        _ovl_En_SiSegmentEnd = .;
    }
    _ovl_En_SiSegmentBssSize = ABSOLUTE( _ovl_En_SiSegmentBssEnd - _ovl_En_SiSegmentBssStart );

    _ovl_En_SiofukiSegmentRomStart = _RomSize;
    ..ovl_En_Siofuki : AT(_RomSize)
    {
        _ovl_En_SiofukiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_SiofukiSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Siofuki/z_en_siofuki.o (.text)
            build/data/overlays/actors/z_en_siofuki.data.o (.text)
            build/data/overlays/actors/z_en_siofuki.reloc.o (.text)
        _ovl_En_SiofukiSegmentTextEnd = .;
    _ovl_En_SiofukiSegmentTextSize = ABSOLUTE( _ovl_En_SiofukiSegmentTextEnd - _ovl_En_SiofukiSegmentTextStart );
        _ovl_En_SiofukiSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Siofuki/z_en_siofuki.o (.data)
            build/data/overlays/actors/z_en_siofuki.data.o (.data)
            build/data/overlays/actors/z_en_siofuki.reloc.o (.data)
        _ovl_En_SiofukiSegmentDataEnd = .;
    _ovl_En_SiofukiSegmentDataSize = ABSOLUTE( _ovl_En_SiofukiSegmentDataEnd - _ovl_En_SiofukiSegmentDataStart );
        _ovl_En_SiofukiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Siofuki/z_en_siofuki.o (.rodata)
            build/data/overlays/actors/z_en_siofuki.data.o (.rodata)
            build/data/overlays/actors/z_en_siofuki.reloc.o (.rodata)
        _ovl_En_SiofukiSegmentRoDataEnd = .;
    _ovl_En_SiofukiSegmentRoDataSize = ABSOLUTE( _ovl_En_SiofukiSegmentRoDataEnd - _ovl_En_SiofukiSegmentRoDataStart );
        _ovl_En_SiofukiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Siofuki/z_en_siofuki.o (.sdata)
            build/data/overlays/actors/z_en_siofuki.data.o (.sdata)
            build/data/overlays/actors/z_en_siofuki.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_SiofukiSegmentSDataEnd = .;
        _ovl_En_SiofukiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Siofuki/z_en_siofuki.o (.ovl)
            build/data/overlays/actors/z_en_siofuki.data.o (.ovl)
            build/data/overlays/actors/z_en_siofuki.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_SiofukiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_SiofukiSegmentOvlEnd - _ovl_En_SiofukiSegmentTextStart );
    _ovl_En_SiofukiSegmentRomEnd = _RomSize;

    ..ovl_En_Siofuki.bss ADDR(..ovl_En_Siofuki) + SIZEOF(..ovl_En_Siofuki) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_SiofukiSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Siofuki/z_en_siofuki.o (.sbss)
            build/data/overlays/actors/z_en_siofuki.data.o (.sbss)
            build/data/overlays/actors/z_en_siofuki.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Siofuki/z_en_siofuki.o (.scommon)
            build/data/overlays/actors/z_en_siofuki.data.o (.scommon)
            build/data/overlays/actors/z_en_siofuki.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Siofuki/z_en_siofuki.o (.bss)
            build/data/overlays/actors/z_en_siofuki.data.o (.bss)
            build/data/overlays/actors/z_en_siofuki.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Siofuki/z_en_siofuki.o (COMMON)
            build/data/overlays/actors/z_en_siofuki.data.o (COMMON)
            build/data/overlays/actors/z_en_siofuki.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_SiofukiSegmentBssEnd = .;
        _ovl_En_SiofukiSegmentEnd = .;
    }
    _ovl_En_SiofukiSegmentBssSize = ABSOLUTE( _ovl_En_SiofukiSegmentBssEnd - _ovl_En_SiofukiSegmentBssStart );

    _ovl_En_SkbSegmentRomStart = _RomSize;
    ..ovl_En_Skb : AT(_RomSize)
    {
        _ovl_En_SkbSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_SkbSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Skb/z_en_skb.o (.text)
            build/data/overlays/actors/z_en_skb.data.o (.text)
            build/data/overlays/actors/z_en_skb.reloc.o (.text)
        _ovl_En_SkbSegmentTextEnd = .;
    _ovl_En_SkbSegmentTextSize = ABSOLUTE( _ovl_En_SkbSegmentTextEnd - _ovl_En_SkbSegmentTextStart );
        _ovl_En_SkbSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Skb/z_en_skb.o (.data)
            build/data/overlays/actors/z_en_skb.data.o (.data)
            build/data/overlays/actors/z_en_skb.reloc.o (.data)
        _ovl_En_SkbSegmentDataEnd = .;
    _ovl_En_SkbSegmentDataSize = ABSOLUTE( _ovl_En_SkbSegmentDataEnd - _ovl_En_SkbSegmentDataStart );
        _ovl_En_SkbSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Skb/z_en_skb.o (.rodata)
            build/data/overlays/actors/z_en_skb.data.o (.rodata)
            build/data/overlays/actors/z_en_skb.reloc.o (.rodata)
        _ovl_En_SkbSegmentRoDataEnd = .;
    _ovl_En_SkbSegmentRoDataSize = ABSOLUTE( _ovl_En_SkbSegmentRoDataEnd - _ovl_En_SkbSegmentRoDataStart );
        _ovl_En_SkbSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Skb/z_en_skb.o (.sdata)
            build/data/overlays/actors/z_en_skb.data.o (.sdata)
            build/data/overlays/actors/z_en_skb.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_SkbSegmentSDataEnd = .;
        _ovl_En_SkbSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Skb/z_en_skb.o (.ovl)
            build/data/overlays/actors/z_en_skb.data.o (.ovl)
            build/data/overlays/actors/z_en_skb.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_SkbSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_SkbSegmentOvlEnd - _ovl_En_SkbSegmentTextStart );
    _ovl_En_SkbSegmentRomEnd = _RomSize;

    ..ovl_En_Skb.bss ADDR(..ovl_En_Skb) + SIZEOF(..ovl_En_Skb) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_SkbSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Skb/z_en_skb.o (.sbss)
            build/data/overlays/actors/z_en_skb.data.o (.sbss)
            build/data/overlays/actors/z_en_skb.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Skb/z_en_skb.o (.scommon)
            build/data/overlays/actors/z_en_skb.data.o (.scommon)
            build/data/overlays/actors/z_en_skb.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Skb/z_en_skb.o (.bss)
            build/data/overlays/actors/z_en_skb.data.o (.bss)
            build/data/overlays/actors/z_en_skb.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Skb/z_en_skb.o (COMMON)
            build/data/overlays/actors/z_en_skb.data.o (COMMON)
            build/data/overlays/actors/z_en_skb.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_SkbSegmentBssEnd = .;
        _ovl_En_SkbSegmentEnd = .;
    }
    _ovl_En_SkbSegmentBssSize = ABSOLUTE( _ovl_En_SkbSegmentBssEnd - _ovl_En_SkbSegmentBssStart );

    _ovl_En_SkjSegmentRomStart = _RomSize;
    ..ovl_En_Skj : AT(_RomSize)
    {
        _ovl_En_SkjSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_SkjSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Skj/z_en_skj.o (.text)
            build/data/overlays/actors/z_en_skj.data.o (.text)
            build/data/overlays/actors/z_en_skj.rodata.o (.text)
            build/data/overlays/actors/z_en_skj.bss.o (.text)
            build/data/overlays/actors/z_en_skj.reloc.o (.text)
        _ovl_En_SkjSegmentTextEnd = .;
    _ovl_En_SkjSegmentTextSize = ABSOLUTE( _ovl_En_SkjSegmentTextEnd - _ovl_En_SkjSegmentTextStart );
        _ovl_En_SkjSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Skj/z_en_skj.o (.data)
            build/data/overlays/actors/z_en_skj.data.o (.data)
            build/data/overlays/actors/z_en_skj.rodata.o (.data)
            build/data/overlays/actors/z_en_skj.bss.o (.data)
            build/data/overlays/actors/z_en_skj.reloc.o (.data)
        _ovl_En_SkjSegmentDataEnd = .;
    _ovl_En_SkjSegmentDataSize = ABSOLUTE( _ovl_En_SkjSegmentDataEnd - _ovl_En_SkjSegmentDataStart );
        _ovl_En_SkjSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Skj/z_en_skj.o (.rodata)
            build/data/overlays/actors/z_en_skj.data.o (.rodata)
            build/data/overlays/actors/z_en_skj.rodata.o (.rodata)
            build/data/overlays/actors/z_en_skj.bss.o (.rodata)
            build/data/overlays/actors/z_en_skj.reloc.o (.rodata)
        _ovl_En_SkjSegmentRoDataEnd = .;
    _ovl_En_SkjSegmentRoDataSize = ABSOLUTE( _ovl_En_SkjSegmentRoDataEnd - _ovl_En_SkjSegmentRoDataStart );
        _ovl_En_SkjSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Skj/z_en_skj.o (.sdata)
            build/data/overlays/actors/z_en_skj.data.o (.sdata)
            build/data/overlays/actors/z_en_skj.rodata.o (.sdata)
            build/data/overlays/actors/z_en_skj.bss.o (.sdata)
            build/data/overlays/actors/z_en_skj.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_SkjSegmentSDataEnd = .;
        _ovl_En_SkjSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Skj/z_en_skj.o (.ovl)
            build/data/overlays/actors/z_en_skj.data.o (.ovl)
            build/data/overlays/actors/z_en_skj.rodata.o (.ovl)
            build/data/overlays/actors/z_en_skj.bss.o (.ovl)
            build/data/overlays/actors/z_en_skj.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_SkjSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_SkjSegmentOvlEnd - _ovl_En_SkjSegmentTextStart );
    _ovl_En_SkjSegmentRomEnd = _RomSize;

    ..ovl_En_Skj.bss ADDR(..ovl_En_Skj) + SIZEOF(..ovl_En_Skj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_SkjSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Skj/z_en_skj.o (.sbss)
            build/data/overlays/actors/z_en_skj.data.o (.sbss)
            build/data/overlays/actors/z_en_skj.rodata.o (.sbss)
            build/data/overlays/actors/z_en_skj.bss.o (.sbss)
            build/data/overlays/actors/z_en_skj.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Skj/z_en_skj.o (.scommon)
            build/data/overlays/actors/z_en_skj.data.o (.scommon)
            build/data/overlays/actors/z_en_skj.rodata.o (.scommon)
            build/data/overlays/actors/z_en_skj.bss.o (.scommon)
            build/data/overlays/actors/z_en_skj.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Skj/z_en_skj.o (.bss)
            build/data/overlays/actors/z_en_skj.data.o (.bss)
            build/data/overlays/actors/z_en_skj.rodata.o (.bss)
            build/data/overlays/actors/z_en_skj.bss.o (.bss)
            build/data/overlays/actors/z_en_skj.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Skj/z_en_skj.o (COMMON)
            build/data/overlays/actors/z_en_skj.data.o (COMMON)
            build/data/overlays/actors/z_en_skj.rodata.o (COMMON)
            build/data/overlays/actors/z_en_skj.bss.o (COMMON)
            build/data/overlays/actors/z_en_skj.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_SkjSegmentBssEnd = .;
        _ovl_En_SkjSegmentEnd = .;
    }
    _ovl_En_SkjSegmentBssSize = ABSOLUTE( _ovl_En_SkjSegmentBssEnd - _ovl_En_SkjSegmentBssStart );

    _ovl_En_SkjneedleSegmentRomStart = _RomSize;
    ..ovl_En_Skjneedle : AT(_RomSize)
    {
        _ovl_En_SkjneedleSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_SkjneedleSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Skjneedle/z_en_skjneedle.o (.text)
            build/src/overlays/actors/ovl_En_Skjneedle/ovl_En_Skjneedle_reloc.o (.text)
        _ovl_En_SkjneedleSegmentTextEnd = .;
    _ovl_En_SkjneedleSegmentTextSize = ABSOLUTE( _ovl_En_SkjneedleSegmentTextEnd - _ovl_En_SkjneedleSegmentTextStart );
        _ovl_En_SkjneedleSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Skjneedle/z_en_skjneedle.o (.data)
            build/src/overlays/actors/ovl_En_Skjneedle/ovl_En_Skjneedle_reloc.o (.data)
        _ovl_En_SkjneedleSegmentDataEnd = .;
    _ovl_En_SkjneedleSegmentDataSize = ABSOLUTE( _ovl_En_SkjneedleSegmentDataEnd - _ovl_En_SkjneedleSegmentDataStart );
        _ovl_En_SkjneedleSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Skjneedle/z_en_skjneedle.o (.rodata)
            build/src/overlays/actors/ovl_En_Skjneedle/ovl_En_Skjneedle_reloc.o (.rodata)
        _ovl_En_SkjneedleSegmentRoDataEnd = .;
    _ovl_En_SkjneedleSegmentRoDataSize = ABSOLUTE( _ovl_En_SkjneedleSegmentRoDataEnd - _ovl_En_SkjneedleSegmentRoDataStart );
        _ovl_En_SkjneedleSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Skjneedle/z_en_skjneedle.o (.sdata)
            build/src/overlays/actors/ovl_En_Skjneedle/ovl_En_Skjneedle_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_SkjneedleSegmentSDataEnd = .;
        _ovl_En_SkjneedleSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Skjneedle/z_en_skjneedle.o (.ovl)
            build/src/overlays/actors/ovl_En_Skjneedle/ovl_En_Skjneedle_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_SkjneedleSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_SkjneedleSegmentOvlEnd - _ovl_En_SkjneedleSegmentTextStart );
    _ovl_En_SkjneedleSegmentRomEnd = _RomSize;

    ..ovl_En_Skjneedle.bss ADDR(..ovl_En_Skjneedle) + SIZEOF(..ovl_En_Skjneedle) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_SkjneedleSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Skjneedle/z_en_skjneedle.o (.sbss)
            build/src/overlays/actors/ovl_En_Skjneedle/ovl_En_Skjneedle_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Skjneedle/z_en_skjneedle.o (.scommon)
            build/src/overlays/actors/ovl_En_Skjneedle/ovl_En_Skjneedle_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Skjneedle/z_en_skjneedle.o (.bss)
            build/src/overlays/actors/ovl_En_Skjneedle/ovl_En_Skjneedle_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Skjneedle/z_en_skjneedle.o (COMMON)
            build/src/overlays/actors/ovl_En_Skjneedle/ovl_En_Skjneedle_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_SkjneedleSegmentBssEnd = .;
        _ovl_En_SkjneedleSegmentEnd = .;
    }
    _ovl_En_SkjneedleSegmentBssSize = ABSOLUTE( _ovl_En_SkjneedleSegmentBssEnd - _ovl_En_SkjneedleSegmentBssStart );

    _ovl_En_SshSegmentRomStart = _RomSize;
    ..ovl_En_Ssh : AT(_RomSize)
    {
        _ovl_En_SshSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_SshSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ssh/z_en_ssh.o (.text)
            build/data/overlays/actors/z_en_ssh.data.o (.text)
            build/data/overlays/actors/z_en_ssh.reloc.o (.text)
        _ovl_En_SshSegmentTextEnd = .;
    _ovl_En_SshSegmentTextSize = ABSOLUTE( _ovl_En_SshSegmentTextEnd - _ovl_En_SshSegmentTextStart );
        _ovl_En_SshSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ssh/z_en_ssh.o (.data)
            build/data/overlays/actors/z_en_ssh.data.o (.data)
            build/data/overlays/actors/z_en_ssh.reloc.o (.data)
        _ovl_En_SshSegmentDataEnd = .;
    _ovl_En_SshSegmentDataSize = ABSOLUTE( _ovl_En_SshSegmentDataEnd - _ovl_En_SshSegmentDataStart );
        _ovl_En_SshSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ssh/z_en_ssh.o (.rodata)
            build/data/overlays/actors/z_en_ssh.data.o (.rodata)
            build/data/overlays/actors/z_en_ssh.reloc.o (.rodata)
        _ovl_En_SshSegmentRoDataEnd = .;
    _ovl_En_SshSegmentRoDataSize = ABSOLUTE( _ovl_En_SshSegmentRoDataEnd - _ovl_En_SshSegmentRoDataStart );
        _ovl_En_SshSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ssh/z_en_ssh.o (.sdata)
            build/data/overlays/actors/z_en_ssh.data.o (.sdata)
            build/data/overlays/actors/z_en_ssh.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_SshSegmentSDataEnd = .;
        _ovl_En_SshSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ssh/z_en_ssh.o (.ovl)
            build/data/overlays/actors/z_en_ssh.data.o (.ovl)
            build/data/overlays/actors/z_en_ssh.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_SshSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_SshSegmentOvlEnd - _ovl_En_SshSegmentTextStart );
    _ovl_En_SshSegmentRomEnd = _RomSize;

    ..ovl_En_Ssh.bss ADDR(..ovl_En_Ssh) + SIZEOF(..ovl_En_Ssh) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_SshSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ssh/z_en_ssh.o (.sbss)
            build/data/overlays/actors/z_en_ssh.data.o (.sbss)
            build/data/overlays/actors/z_en_ssh.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ssh/z_en_ssh.o (.scommon)
            build/data/overlays/actors/z_en_ssh.data.o (.scommon)
            build/data/overlays/actors/z_en_ssh.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ssh/z_en_ssh.o (.bss)
            build/data/overlays/actors/z_en_ssh.data.o (.bss)
            build/data/overlays/actors/z_en_ssh.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ssh/z_en_ssh.o (COMMON)
            build/data/overlays/actors/z_en_ssh.data.o (COMMON)
            build/data/overlays/actors/z_en_ssh.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_SshSegmentBssEnd = .;
        _ovl_En_SshSegmentEnd = .;
    }
    _ovl_En_SshSegmentBssSize = ABSOLUTE( _ovl_En_SshSegmentBssEnd - _ovl_En_SshSegmentBssStart );

    _ovl_En_StSegmentRomStart = _RomSize;
    ..ovl_En_St : AT(_RomSize)
    {
        _ovl_En_StSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_StSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_St/z_en_st.o (.text)
            build/src/overlays/actors/ovl_En_St/ovl_En_St_reloc.o (.text)
        _ovl_En_StSegmentTextEnd = .;
    _ovl_En_StSegmentTextSize = ABSOLUTE( _ovl_En_StSegmentTextEnd - _ovl_En_StSegmentTextStart );
        _ovl_En_StSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_St/z_en_st.o (.data)
            build/src/overlays/actors/ovl_En_St/ovl_En_St_reloc.o (.data)
        _ovl_En_StSegmentDataEnd = .;
    _ovl_En_StSegmentDataSize = ABSOLUTE( _ovl_En_StSegmentDataEnd - _ovl_En_StSegmentDataStart );
        _ovl_En_StSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_St/z_en_st.o (.rodata)
            build/src/overlays/actors/ovl_En_St/ovl_En_St_reloc.o (.rodata)
        _ovl_En_StSegmentRoDataEnd = .;
    _ovl_En_StSegmentRoDataSize = ABSOLUTE( _ovl_En_StSegmentRoDataEnd - _ovl_En_StSegmentRoDataStart );
        _ovl_En_StSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_St/z_en_st.o (.sdata)
            build/src/overlays/actors/ovl_En_St/ovl_En_St_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_StSegmentSDataEnd = .;
        _ovl_En_StSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_St/z_en_st.o (.ovl)
            build/src/overlays/actors/ovl_En_St/ovl_En_St_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_StSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_StSegmentOvlEnd - _ovl_En_StSegmentTextStart );
    _ovl_En_StSegmentRomEnd = _RomSize;

    ..ovl_En_St.bss ADDR(..ovl_En_St) + SIZEOF(..ovl_En_St) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_StSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_St/z_en_st.o (.sbss)
            build/src/overlays/actors/ovl_En_St/ovl_En_St_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_St/z_en_st.o (.scommon)
            build/src/overlays/actors/ovl_En_St/ovl_En_St_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_St/z_en_st.o (.bss)
            build/src/overlays/actors/ovl_En_St/ovl_En_St_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_St/z_en_st.o (COMMON)
            build/src/overlays/actors/ovl_En_St/ovl_En_St_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_StSegmentBssEnd = .;
        _ovl_En_StSegmentEnd = .;
    }
    _ovl_En_StSegmentBssSize = ABSOLUTE( _ovl_En_StSegmentBssEnd - _ovl_En_StSegmentBssStart );

    _ovl_En_SthSegmentRomStart = _RomSize;
    ..ovl_En_Sth : AT(_RomSize)
    {
        _ovl_En_SthSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_SthSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Sth/z_en_sth.o (.text)
            build/data/overlays/actors/z_en_sth.data.o (.text)
            build/data/overlays/actors/z_en_sth.reloc.o (.text)
        _ovl_En_SthSegmentTextEnd = .;
    _ovl_En_SthSegmentTextSize = ABSOLUTE( _ovl_En_SthSegmentTextEnd - _ovl_En_SthSegmentTextStart );
        _ovl_En_SthSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Sth/z_en_sth.o (.data)
            build/data/overlays/actors/z_en_sth.data.o (.data)
            build/data/overlays/actors/z_en_sth.reloc.o (.data)
        _ovl_En_SthSegmentDataEnd = .;
    _ovl_En_SthSegmentDataSize = ABSOLUTE( _ovl_En_SthSegmentDataEnd - _ovl_En_SthSegmentDataStart );
        _ovl_En_SthSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Sth/z_en_sth.o (.rodata)
            build/data/overlays/actors/z_en_sth.data.o (.rodata)
            build/data/overlays/actors/z_en_sth.reloc.o (.rodata)
        _ovl_En_SthSegmentRoDataEnd = .;
    _ovl_En_SthSegmentRoDataSize = ABSOLUTE( _ovl_En_SthSegmentRoDataEnd - _ovl_En_SthSegmentRoDataStart );
        _ovl_En_SthSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Sth/z_en_sth.o (.sdata)
            build/data/overlays/actors/z_en_sth.data.o (.sdata)
            build/data/overlays/actors/z_en_sth.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_SthSegmentSDataEnd = .;
        _ovl_En_SthSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Sth/z_en_sth.o (.ovl)
            build/data/overlays/actors/z_en_sth.data.o (.ovl)
            build/data/overlays/actors/z_en_sth.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_SthSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_SthSegmentOvlEnd - _ovl_En_SthSegmentTextStart );
    _ovl_En_SthSegmentRomEnd = _RomSize;

    ..ovl_En_Sth.bss ADDR(..ovl_En_Sth) + SIZEOF(..ovl_En_Sth) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_SthSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Sth/z_en_sth.o (.sbss)
            build/data/overlays/actors/z_en_sth.data.o (.sbss)
            build/data/overlays/actors/z_en_sth.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Sth/z_en_sth.o (.scommon)
            build/data/overlays/actors/z_en_sth.data.o (.scommon)
            build/data/overlays/actors/z_en_sth.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Sth/z_en_sth.o (.bss)
            build/data/overlays/actors/z_en_sth.data.o (.bss)
            build/data/overlays/actors/z_en_sth.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Sth/z_en_sth.o (COMMON)
            build/data/overlays/actors/z_en_sth.data.o (COMMON)
            build/data/overlays/actors/z_en_sth.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_SthSegmentBssEnd = .;
        _ovl_En_SthSegmentEnd = .;
    }
    _ovl_En_SthSegmentBssSize = ABSOLUTE( _ovl_En_SthSegmentBssEnd - _ovl_En_SthSegmentBssStart );

    _ovl_En_StreamSegmentRomStart = _RomSize;
    ..ovl_En_Stream : AT(_RomSize)
    {
        _ovl_En_StreamSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_StreamSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Stream/z_en_stream.o (.text)
            build/data/overlays/actors/z_en_stream.data.o (.text)
            build/data/overlays/actors/z_en_stream.reloc.o (.text)
        _ovl_En_StreamSegmentTextEnd = .;
    _ovl_En_StreamSegmentTextSize = ABSOLUTE( _ovl_En_StreamSegmentTextEnd - _ovl_En_StreamSegmentTextStart );
        _ovl_En_StreamSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Stream/z_en_stream.o (.data)
            build/data/overlays/actors/z_en_stream.data.o (.data)
            build/data/overlays/actors/z_en_stream.reloc.o (.data)
        _ovl_En_StreamSegmentDataEnd = .;
    _ovl_En_StreamSegmentDataSize = ABSOLUTE( _ovl_En_StreamSegmentDataEnd - _ovl_En_StreamSegmentDataStart );
        _ovl_En_StreamSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Stream/z_en_stream.o (.rodata)
            build/data/overlays/actors/z_en_stream.data.o (.rodata)
            build/data/overlays/actors/z_en_stream.reloc.o (.rodata)
        _ovl_En_StreamSegmentRoDataEnd = .;
    _ovl_En_StreamSegmentRoDataSize = ABSOLUTE( _ovl_En_StreamSegmentRoDataEnd - _ovl_En_StreamSegmentRoDataStart );
        _ovl_En_StreamSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Stream/z_en_stream.o (.sdata)
            build/data/overlays/actors/z_en_stream.data.o (.sdata)
            build/data/overlays/actors/z_en_stream.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_StreamSegmentSDataEnd = .;
        _ovl_En_StreamSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Stream/z_en_stream.o (.ovl)
            build/data/overlays/actors/z_en_stream.data.o (.ovl)
            build/data/overlays/actors/z_en_stream.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_StreamSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_StreamSegmentOvlEnd - _ovl_En_StreamSegmentTextStart );
    _ovl_En_StreamSegmentRomEnd = _RomSize;

    ..ovl_En_Stream.bss ADDR(..ovl_En_Stream) + SIZEOF(..ovl_En_Stream) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_StreamSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Stream/z_en_stream.o (.sbss)
            build/data/overlays/actors/z_en_stream.data.o (.sbss)
            build/data/overlays/actors/z_en_stream.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Stream/z_en_stream.o (.scommon)
            build/data/overlays/actors/z_en_stream.data.o (.scommon)
            build/data/overlays/actors/z_en_stream.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Stream/z_en_stream.o (.bss)
            build/data/overlays/actors/z_en_stream.data.o (.bss)
            build/data/overlays/actors/z_en_stream.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Stream/z_en_stream.o (COMMON)
            build/data/overlays/actors/z_en_stream.data.o (COMMON)
            build/data/overlays/actors/z_en_stream.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_StreamSegmentBssEnd = .;
        _ovl_En_StreamSegmentEnd = .;
    }
    _ovl_En_StreamSegmentBssSize = ABSOLUTE( _ovl_En_StreamSegmentBssEnd - _ovl_En_StreamSegmentBssStart );

    _ovl_En_SwSegmentRomStart = _RomSize;
    ..ovl_En_Sw : AT(_RomSize)
    {
        _ovl_En_SwSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_SwSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Sw/z_en_sw.o (.text)
            build/data/overlays/actors/z_en_sw.data.o (.text)
            build/data/overlays/actors/z_en_sw.bss.o (.text)
            build/data/overlays/actors/z_en_sw.reloc.o (.text)
        _ovl_En_SwSegmentTextEnd = .;
    _ovl_En_SwSegmentTextSize = ABSOLUTE( _ovl_En_SwSegmentTextEnd - _ovl_En_SwSegmentTextStart );
        _ovl_En_SwSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Sw/z_en_sw.o (.data)
            build/data/overlays/actors/z_en_sw.data.o (.data)
            build/data/overlays/actors/z_en_sw.bss.o (.data)
            build/data/overlays/actors/z_en_sw.reloc.o (.data)
        _ovl_En_SwSegmentDataEnd = .;
    _ovl_En_SwSegmentDataSize = ABSOLUTE( _ovl_En_SwSegmentDataEnd - _ovl_En_SwSegmentDataStart );
        _ovl_En_SwSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Sw/z_en_sw.o (.rodata)
            build/data/overlays/actors/z_en_sw.data.o (.rodata)
            build/data/overlays/actors/z_en_sw.bss.o (.rodata)
            build/data/overlays/actors/z_en_sw.reloc.o (.rodata)
        _ovl_En_SwSegmentRoDataEnd = .;
    _ovl_En_SwSegmentRoDataSize = ABSOLUTE( _ovl_En_SwSegmentRoDataEnd - _ovl_En_SwSegmentRoDataStart );
        _ovl_En_SwSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Sw/z_en_sw.o (.sdata)
            build/data/overlays/actors/z_en_sw.data.o (.sdata)
            build/data/overlays/actors/z_en_sw.bss.o (.sdata)
            build/data/overlays/actors/z_en_sw.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_SwSegmentSDataEnd = .;
        _ovl_En_SwSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Sw/z_en_sw.o (.ovl)
            build/data/overlays/actors/z_en_sw.data.o (.ovl)
            build/data/overlays/actors/z_en_sw.bss.o (.ovl)
            build/data/overlays/actors/z_en_sw.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_SwSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_SwSegmentOvlEnd - _ovl_En_SwSegmentTextStart );
    _ovl_En_SwSegmentRomEnd = _RomSize;

    ..ovl_En_Sw.bss ADDR(..ovl_En_Sw) + SIZEOF(..ovl_En_Sw) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_SwSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Sw/z_en_sw.o (.sbss)
            build/data/overlays/actors/z_en_sw.data.o (.sbss)
            build/data/overlays/actors/z_en_sw.bss.o (.sbss)
            build/data/overlays/actors/z_en_sw.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Sw/z_en_sw.o (.scommon)
            build/data/overlays/actors/z_en_sw.data.o (.scommon)
            build/data/overlays/actors/z_en_sw.bss.o (.scommon)
            build/data/overlays/actors/z_en_sw.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Sw/z_en_sw.o (.bss)
            build/data/overlays/actors/z_en_sw.data.o (.bss)
            build/data/overlays/actors/z_en_sw.bss.o (.bss)
            build/data/overlays/actors/z_en_sw.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Sw/z_en_sw.o (COMMON)
            build/data/overlays/actors/z_en_sw.data.o (COMMON)
            build/data/overlays/actors/z_en_sw.bss.o (COMMON)
            build/data/overlays/actors/z_en_sw.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_SwSegmentBssEnd = .;
        _ovl_En_SwSegmentEnd = .;
    }
    _ovl_En_SwSegmentBssSize = ABSOLUTE( _ovl_En_SwSegmentBssEnd - _ovl_En_SwSegmentBssStart );

    _ovl_En_Syateki_ItmSegmentRomStart = _RomSize;
    ..ovl_En_Syateki_Itm : AT(_RomSize)
    {
        _ovl_En_Syateki_ItmSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Syateki_ItmSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Itm/z_en_syateki_itm.o (.text)
            build/data/overlays/actors/z_en_syateki_itm.data.o (.text)
            build/data/overlays/actors/z_en_syateki_itm.reloc.o (.text)
        _ovl_En_Syateki_ItmSegmentTextEnd = .;
    _ovl_En_Syateki_ItmSegmentTextSize = ABSOLUTE( _ovl_En_Syateki_ItmSegmentTextEnd - _ovl_En_Syateki_ItmSegmentTextStart );
        _ovl_En_Syateki_ItmSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Itm/z_en_syateki_itm.o (.data)
            build/data/overlays/actors/z_en_syateki_itm.data.o (.data)
            build/data/overlays/actors/z_en_syateki_itm.reloc.o (.data)
        _ovl_En_Syateki_ItmSegmentDataEnd = .;
    _ovl_En_Syateki_ItmSegmentDataSize = ABSOLUTE( _ovl_En_Syateki_ItmSegmentDataEnd - _ovl_En_Syateki_ItmSegmentDataStart );
        _ovl_En_Syateki_ItmSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Itm/z_en_syateki_itm.o (.rodata)
            build/data/overlays/actors/z_en_syateki_itm.data.o (.rodata)
            build/data/overlays/actors/z_en_syateki_itm.reloc.o (.rodata)
        _ovl_En_Syateki_ItmSegmentRoDataEnd = .;
    _ovl_En_Syateki_ItmSegmentRoDataSize = ABSOLUTE( _ovl_En_Syateki_ItmSegmentRoDataEnd - _ovl_En_Syateki_ItmSegmentRoDataStart );
        _ovl_En_Syateki_ItmSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Itm/z_en_syateki_itm.o (.sdata)
            build/data/overlays/actors/z_en_syateki_itm.data.o (.sdata)
            build/data/overlays/actors/z_en_syateki_itm.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Syateki_ItmSegmentSDataEnd = .;
        _ovl_En_Syateki_ItmSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Itm/z_en_syateki_itm.o (.ovl)
            build/data/overlays/actors/z_en_syateki_itm.data.o (.ovl)
            build/data/overlays/actors/z_en_syateki_itm.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Syateki_ItmSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Syateki_ItmSegmentOvlEnd - _ovl_En_Syateki_ItmSegmentTextStart );
    _ovl_En_Syateki_ItmSegmentRomEnd = _RomSize;

    ..ovl_En_Syateki_Itm.bss ADDR(..ovl_En_Syateki_Itm) + SIZEOF(..ovl_En_Syateki_Itm) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Syateki_ItmSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Itm/z_en_syateki_itm.o (.sbss)
            build/data/overlays/actors/z_en_syateki_itm.data.o (.sbss)
            build/data/overlays/actors/z_en_syateki_itm.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Syateki_Itm/z_en_syateki_itm.o (.scommon)
            build/data/overlays/actors/z_en_syateki_itm.data.o (.scommon)
            build/data/overlays/actors/z_en_syateki_itm.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Syateki_Itm/z_en_syateki_itm.o (.bss)
            build/data/overlays/actors/z_en_syateki_itm.data.o (.bss)
            build/data/overlays/actors/z_en_syateki_itm.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Syateki_Itm/z_en_syateki_itm.o (COMMON)
            build/data/overlays/actors/z_en_syateki_itm.data.o (COMMON)
            build/data/overlays/actors/z_en_syateki_itm.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Syateki_ItmSegmentBssEnd = .;
        _ovl_En_Syateki_ItmSegmentEnd = .;
    }
    _ovl_En_Syateki_ItmSegmentBssSize = ABSOLUTE( _ovl_En_Syateki_ItmSegmentBssEnd - _ovl_En_Syateki_ItmSegmentBssStart );

    _ovl_En_Syateki_ManSegmentRomStart = _RomSize;
    ..ovl_En_Syateki_Man : AT(_RomSize)
    {
        _ovl_En_Syateki_ManSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Syateki_ManSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Man/z_en_syateki_man.o (.text)
            build/data/overlays/actors/z_en_syateki_man.data.o (.text)
            build/data/overlays/actors/z_en_syateki_man.reloc.o (.text)
        _ovl_En_Syateki_ManSegmentTextEnd = .;
    _ovl_En_Syateki_ManSegmentTextSize = ABSOLUTE( _ovl_En_Syateki_ManSegmentTextEnd - _ovl_En_Syateki_ManSegmentTextStart );
        _ovl_En_Syateki_ManSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Man/z_en_syateki_man.o (.data)
            build/data/overlays/actors/z_en_syateki_man.data.o (.data)
            build/data/overlays/actors/z_en_syateki_man.reloc.o (.data)
        _ovl_En_Syateki_ManSegmentDataEnd = .;
    _ovl_En_Syateki_ManSegmentDataSize = ABSOLUTE( _ovl_En_Syateki_ManSegmentDataEnd - _ovl_En_Syateki_ManSegmentDataStart );
        _ovl_En_Syateki_ManSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Man/z_en_syateki_man.o (.rodata)
            build/data/overlays/actors/z_en_syateki_man.data.o (.rodata)
            build/data/overlays/actors/z_en_syateki_man.reloc.o (.rodata)
        _ovl_En_Syateki_ManSegmentRoDataEnd = .;
    _ovl_En_Syateki_ManSegmentRoDataSize = ABSOLUTE( _ovl_En_Syateki_ManSegmentRoDataEnd - _ovl_En_Syateki_ManSegmentRoDataStart );
        _ovl_En_Syateki_ManSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Man/z_en_syateki_man.o (.sdata)
            build/data/overlays/actors/z_en_syateki_man.data.o (.sdata)
            build/data/overlays/actors/z_en_syateki_man.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Syateki_ManSegmentSDataEnd = .;
        _ovl_En_Syateki_ManSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Man/z_en_syateki_man.o (.ovl)
            build/data/overlays/actors/z_en_syateki_man.data.o (.ovl)
            build/data/overlays/actors/z_en_syateki_man.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Syateki_ManSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Syateki_ManSegmentOvlEnd - _ovl_En_Syateki_ManSegmentTextStart );
    _ovl_En_Syateki_ManSegmentRomEnd = _RomSize;

    ..ovl_En_Syateki_Man.bss ADDR(..ovl_En_Syateki_Man) + SIZEOF(..ovl_En_Syateki_Man) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Syateki_ManSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Man/z_en_syateki_man.o (.sbss)
            build/data/overlays/actors/z_en_syateki_man.data.o (.sbss)
            build/data/overlays/actors/z_en_syateki_man.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Syateki_Man/z_en_syateki_man.o (.scommon)
            build/data/overlays/actors/z_en_syateki_man.data.o (.scommon)
            build/data/overlays/actors/z_en_syateki_man.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Syateki_Man/z_en_syateki_man.o (.bss)
            build/data/overlays/actors/z_en_syateki_man.data.o (.bss)
            build/data/overlays/actors/z_en_syateki_man.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Syateki_Man/z_en_syateki_man.o (COMMON)
            build/data/overlays/actors/z_en_syateki_man.data.o (COMMON)
            build/data/overlays/actors/z_en_syateki_man.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Syateki_ManSegmentBssEnd = .;
        _ovl_En_Syateki_ManSegmentEnd = .;
    }
    _ovl_En_Syateki_ManSegmentBssSize = ABSOLUTE( _ovl_En_Syateki_ManSegmentBssEnd - _ovl_En_Syateki_ManSegmentBssStart );

    _ovl_En_Syateki_NiwSegmentRomStart = _RomSize;
    ..ovl_En_Syateki_Niw : AT(_RomSize)
    {
        _ovl_En_Syateki_NiwSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Syateki_NiwSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Niw/z_en_syateki_niw.o (.text)
            build/src/overlays/actors/ovl_En_Syateki_Niw/ovl_En_Syateki_Niw_reloc.o (.text)
        _ovl_En_Syateki_NiwSegmentTextEnd = .;
    _ovl_En_Syateki_NiwSegmentTextSize = ABSOLUTE( _ovl_En_Syateki_NiwSegmentTextEnd - _ovl_En_Syateki_NiwSegmentTextStart );
        _ovl_En_Syateki_NiwSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Niw/z_en_syateki_niw.o (.data)
            build/src/overlays/actors/ovl_En_Syateki_Niw/ovl_En_Syateki_Niw_reloc.o (.data)
        _ovl_En_Syateki_NiwSegmentDataEnd = .;
    _ovl_En_Syateki_NiwSegmentDataSize = ABSOLUTE( _ovl_En_Syateki_NiwSegmentDataEnd - _ovl_En_Syateki_NiwSegmentDataStart );
        _ovl_En_Syateki_NiwSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Niw/z_en_syateki_niw.o (.rodata)
            build/src/overlays/actors/ovl_En_Syateki_Niw/ovl_En_Syateki_Niw_reloc.o (.rodata)
        _ovl_En_Syateki_NiwSegmentRoDataEnd = .;
    _ovl_En_Syateki_NiwSegmentRoDataSize = ABSOLUTE( _ovl_En_Syateki_NiwSegmentRoDataEnd - _ovl_En_Syateki_NiwSegmentRoDataStart );
        _ovl_En_Syateki_NiwSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Niw/z_en_syateki_niw.o (.sdata)
            build/src/overlays/actors/ovl_En_Syateki_Niw/ovl_En_Syateki_Niw_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Syateki_NiwSegmentSDataEnd = .;
        _ovl_En_Syateki_NiwSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Niw/z_en_syateki_niw.o (.ovl)
            build/src/overlays/actors/ovl_En_Syateki_Niw/ovl_En_Syateki_Niw_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Syateki_NiwSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Syateki_NiwSegmentOvlEnd - _ovl_En_Syateki_NiwSegmentTextStart );
    _ovl_En_Syateki_NiwSegmentRomEnd = _RomSize;

    ..ovl_En_Syateki_Niw.bss ADDR(..ovl_En_Syateki_Niw) + SIZEOF(..ovl_En_Syateki_Niw) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Syateki_NiwSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Syateki_Niw/z_en_syateki_niw.o (.sbss)
            build/src/overlays/actors/ovl_En_Syateki_Niw/ovl_En_Syateki_Niw_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Syateki_Niw/z_en_syateki_niw.o (.scommon)
            build/src/overlays/actors/ovl_En_Syateki_Niw/ovl_En_Syateki_Niw_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Syateki_Niw/z_en_syateki_niw.o (.bss)
            build/src/overlays/actors/ovl_En_Syateki_Niw/ovl_En_Syateki_Niw_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Syateki_Niw/z_en_syateki_niw.o (COMMON)
            build/src/overlays/actors/ovl_En_Syateki_Niw/ovl_En_Syateki_Niw_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Syateki_NiwSegmentBssEnd = .;
        _ovl_En_Syateki_NiwSegmentEnd = .;
    }
    _ovl_En_Syateki_NiwSegmentBssSize = ABSOLUTE( _ovl_En_Syateki_NiwSegmentBssEnd - _ovl_En_Syateki_NiwSegmentBssStart );

    _ovl_En_TaSegmentRomStart = _RomSize;
    ..ovl_En_Ta : AT(_RomSize)
    {
        _ovl_En_TaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_TaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Ta/z_en_ta.o (.text)
            build/data/overlays/actors/z_en_ta.data.o (.text)
            build/data/overlays/actors/z_en_ta.reloc.o (.text)
        _ovl_En_TaSegmentTextEnd = .;
    _ovl_En_TaSegmentTextSize = ABSOLUTE( _ovl_En_TaSegmentTextEnd - _ovl_En_TaSegmentTextStart );
        _ovl_En_TaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Ta/z_en_ta.o (.data)
            build/data/overlays/actors/z_en_ta.data.o (.data)
            build/data/overlays/actors/z_en_ta.reloc.o (.data)
        _ovl_En_TaSegmentDataEnd = .;
    _ovl_En_TaSegmentDataSize = ABSOLUTE( _ovl_En_TaSegmentDataEnd - _ovl_En_TaSegmentDataStart );
        _ovl_En_TaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Ta/z_en_ta.o (.rodata)
            build/data/overlays/actors/z_en_ta.data.o (.rodata)
            build/data/overlays/actors/z_en_ta.reloc.o (.rodata)
        _ovl_En_TaSegmentRoDataEnd = .;
    _ovl_En_TaSegmentRoDataSize = ABSOLUTE( _ovl_En_TaSegmentRoDataEnd - _ovl_En_TaSegmentRoDataStart );
        _ovl_En_TaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Ta/z_en_ta.o (.sdata)
            build/data/overlays/actors/z_en_ta.data.o (.sdata)
            build/data/overlays/actors/z_en_ta.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_TaSegmentSDataEnd = .;
        _ovl_En_TaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Ta/z_en_ta.o (.ovl)
            build/data/overlays/actors/z_en_ta.data.o (.ovl)
            build/data/overlays/actors/z_en_ta.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_TaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_TaSegmentOvlEnd - _ovl_En_TaSegmentTextStart );
    _ovl_En_TaSegmentRomEnd = _RomSize;

    ..ovl_En_Ta.bss ADDR(..ovl_En_Ta) + SIZEOF(..ovl_En_Ta) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_TaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Ta/z_en_ta.o (.sbss)
            build/data/overlays/actors/z_en_ta.data.o (.sbss)
            build/data/overlays/actors/z_en_ta.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Ta/z_en_ta.o (.scommon)
            build/data/overlays/actors/z_en_ta.data.o (.scommon)
            build/data/overlays/actors/z_en_ta.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Ta/z_en_ta.o (.bss)
            build/data/overlays/actors/z_en_ta.data.o (.bss)
            build/data/overlays/actors/z_en_ta.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Ta/z_en_ta.o (COMMON)
            build/data/overlays/actors/z_en_ta.data.o (COMMON)
            build/data/overlays/actors/z_en_ta.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_TaSegmentBssEnd = .;
        _ovl_En_TaSegmentEnd = .;
    }
    _ovl_En_TaSegmentBssSize = ABSOLUTE( _ovl_En_TaSegmentBssEnd - _ovl_En_TaSegmentBssStart );

    _ovl_En_Takara_ManSegmentRomStart = _RomSize;
    ..ovl_En_Takara_Man : AT(_RomSize)
    {
        _ovl_En_Takara_ManSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Takara_ManSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Takara_Man/z_en_takara_man.o (.text)
            build/src/overlays/actors/ovl_En_Takara_Man/ovl_En_Takara_Man_reloc.o (.text)
        _ovl_En_Takara_ManSegmentTextEnd = .;
    _ovl_En_Takara_ManSegmentTextSize = ABSOLUTE( _ovl_En_Takara_ManSegmentTextEnd - _ovl_En_Takara_ManSegmentTextStart );
        _ovl_En_Takara_ManSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Takara_Man/z_en_takara_man.o (.data)
            build/src/overlays/actors/ovl_En_Takara_Man/ovl_En_Takara_Man_reloc.o (.data)
        _ovl_En_Takara_ManSegmentDataEnd = .;
    _ovl_En_Takara_ManSegmentDataSize = ABSOLUTE( _ovl_En_Takara_ManSegmentDataEnd - _ovl_En_Takara_ManSegmentDataStart );
        _ovl_En_Takara_ManSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Takara_Man/z_en_takara_man.o (.rodata)
            build/src/overlays/actors/ovl_En_Takara_Man/ovl_En_Takara_Man_reloc.o (.rodata)
        _ovl_En_Takara_ManSegmentRoDataEnd = .;
    _ovl_En_Takara_ManSegmentRoDataSize = ABSOLUTE( _ovl_En_Takara_ManSegmentRoDataEnd - _ovl_En_Takara_ManSegmentRoDataStart );
        _ovl_En_Takara_ManSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Takara_Man/z_en_takara_man.o (.sdata)
            build/src/overlays/actors/ovl_En_Takara_Man/ovl_En_Takara_Man_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Takara_ManSegmentSDataEnd = .;
        _ovl_En_Takara_ManSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Takara_Man/z_en_takara_man.o (.ovl)
            build/src/overlays/actors/ovl_En_Takara_Man/ovl_En_Takara_Man_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Takara_ManSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Takara_ManSegmentOvlEnd - _ovl_En_Takara_ManSegmentTextStart );
    _ovl_En_Takara_ManSegmentRomEnd = _RomSize;

    ..ovl_En_Takara_Man.bss ADDR(..ovl_En_Takara_Man) + SIZEOF(..ovl_En_Takara_Man) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Takara_ManSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Takara_Man/z_en_takara_man.o (.sbss)
            build/src/overlays/actors/ovl_En_Takara_Man/ovl_En_Takara_Man_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Takara_Man/z_en_takara_man.o (.scommon)
            build/src/overlays/actors/ovl_En_Takara_Man/ovl_En_Takara_Man_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Takara_Man/z_en_takara_man.o (.bss)
            build/src/overlays/actors/ovl_En_Takara_Man/ovl_En_Takara_Man_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Takara_Man/z_en_takara_man.o (COMMON)
            build/src/overlays/actors/ovl_En_Takara_Man/ovl_En_Takara_Man_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Takara_ManSegmentBssEnd = .;
        _ovl_En_Takara_ManSegmentEnd = .;
    }
    _ovl_En_Takara_ManSegmentBssSize = ABSOLUTE( _ovl_En_Takara_ManSegmentBssEnd - _ovl_En_Takara_ManSegmentBssStart );

    _ovl_En_TanaSegmentRomStart = _RomSize;
    ..ovl_En_Tana : AT(_RomSize)
    {
        _ovl_En_TanaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_TanaSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Tana/z_en_tana.o (.text)
            build/src/overlays/actors/ovl_En_Tana/ovl_En_Tana_reloc.o (.text)
        _ovl_En_TanaSegmentTextEnd = .;
    _ovl_En_TanaSegmentTextSize = ABSOLUTE( _ovl_En_TanaSegmentTextEnd - _ovl_En_TanaSegmentTextStart );
        _ovl_En_TanaSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Tana/z_en_tana.o (.data)
            build/src/overlays/actors/ovl_En_Tana/ovl_En_Tana_reloc.o (.data)
        _ovl_En_TanaSegmentDataEnd = .;
    _ovl_En_TanaSegmentDataSize = ABSOLUTE( _ovl_En_TanaSegmentDataEnd - _ovl_En_TanaSegmentDataStart );
        _ovl_En_TanaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Tana/z_en_tana.o (.rodata)
            build/src/overlays/actors/ovl_En_Tana/ovl_En_Tana_reloc.o (.rodata)
        _ovl_En_TanaSegmentRoDataEnd = .;
    _ovl_En_TanaSegmentRoDataSize = ABSOLUTE( _ovl_En_TanaSegmentRoDataEnd - _ovl_En_TanaSegmentRoDataStart );
        _ovl_En_TanaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Tana/z_en_tana.o (.sdata)
            build/src/overlays/actors/ovl_En_Tana/ovl_En_Tana_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_TanaSegmentSDataEnd = .;
        _ovl_En_TanaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Tana/z_en_tana.o (.ovl)
            build/src/overlays/actors/ovl_En_Tana/ovl_En_Tana_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_TanaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_TanaSegmentOvlEnd - _ovl_En_TanaSegmentTextStart );
    _ovl_En_TanaSegmentRomEnd = _RomSize;

    ..ovl_En_Tana.bss ADDR(..ovl_En_Tana) + SIZEOF(..ovl_En_Tana) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_TanaSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Tana/z_en_tana.o (.sbss)
            build/src/overlays/actors/ovl_En_Tana/ovl_En_Tana_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Tana/z_en_tana.o (.scommon)
            build/src/overlays/actors/ovl_En_Tana/ovl_En_Tana_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Tana/z_en_tana.o (.bss)
            build/src/overlays/actors/ovl_En_Tana/ovl_En_Tana_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Tana/z_en_tana.o (COMMON)
            build/src/overlays/actors/ovl_En_Tana/ovl_En_Tana_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_TanaSegmentBssEnd = .;
        _ovl_En_TanaSegmentEnd = .;
    }
    _ovl_En_TanaSegmentBssSize = ABSOLUTE( _ovl_En_TanaSegmentBssEnd - _ovl_En_TanaSegmentBssStart );

    _ovl_En_TgSegmentRomStart = _RomSize;
    ..ovl_En_Tg : AT(_RomSize)
    {
        _ovl_En_TgSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_TgSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Tg/z_en_tg.o (.text)
            build/data/overlays/actors/z_en_tg.data.o (.text)
            build/data/overlays/actors/z_en_tg.reloc.o (.text)
        _ovl_En_TgSegmentTextEnd = .;
    _ovl_En_TgSegmentTextSize = ABSOLUTE( _ovl_En_TgSegmentTextEnd - _ovl_En_TgSegmentTextStart );
        _ovl_En_TgSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Tg/z_en_tg.o (.data)
            build/data/overlays/actors/z_en_tg.data.o (.data)
            build/data/overlays/actors/z_en_tg.reloc.o (.data)
        _ovl_En_TgSegmentDataEnd = .;
    _ovl_En_TgSegmentDataSize = ABSOLUTE( _ovl_En_TgSegmentDataEnd - _ovl_En_TgSegmentDataStart );
        _ovl_En_TgSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Tg/z_en_tg.o (.rodata)
            build/data/overlays/actors/z_en_tg.data.o (.rodata)
            build/data/overlays/actors/z_en_tg.reloc.o (.rodata)
        _ovl_En_TgSegmentRoDataEnd = .;
    _ovl_En_TgSegmentRoDataSize = ABSOLUTE( _ovl_En_TgSegmentRoDataEnd - _ovl_En_TgSegmentRoDataStart );
        _ovl_En_TgSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Tg/z_en_tg.o (.sdata)
            build/data/overlays/actors/z_en_tg.data.o (.sdata)
            build/data/overlays/actors/z_en_tg.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_TgSegmentSDataEnd = .;
        _ovl_En_TgSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Tg/z_en_tg.o (.ovl)
            build/data/overlays/actors/z_en_tg.data.o (.ovl)
            build/data/overlays/actors/z_en_tg.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_TgSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_TgSegmentOvlEnd - _ovl_En_TgSegmentTextStart );
    _ovl_En_TgSegmentRomEnd = _RomSize;

    ..ovl_En_Tg.bss ADDR(..ovl_En_Tg) + SIZEOF(..ovl_En_Tg) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_TgSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Tg/z_en_tg.o (.sbss)
            build/data/overlays/actors/z_en_tg.data.o (.sbss)
            build/data/overlays/actors/z_en_tg.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Tg/z_en_tg.o (.scommon)
            build/data/overlays/actors/z_en_tg.data.o (.scommon)
            build/data/overlays/actors/z_en_tg.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Tg/z_en_tg.o (.bss)
            build/data/overlays/actors/z_en_tg.data.o (.bss)
            build/data/overlays/actors/z_en_tg.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Tg/z_en_tg.o (COMMON)
            build/data/overlays/actors/z_en_tg.data.o (COMMON)
            build/data/overlays/actors/z_en_tg.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_TgSegmentBssEnd = .;
        _ovl_En_TgSegmentEnd = .;
    }
    _ovl_En_TgSegmentBssSize = ABSOLUTE( _ovl_En_TgSegmentBssEnd - _ovl_En_TgSegmentBssStart );

    _ovl_En_TiteSegmentRomStart = _RomSize;
    ..ovl_En_Tite : AT(_RomSize)
    {
        _ovl_En_TiteSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_TiteSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Tite/z_en_tite.o (.text)
            build/data/overlays/actors/z_en_tite.data.o (.text)
            build/data/overlays/actors/z_en_tite.reloc.o (.text)
        _ovl_En_TiteSegmentTextEnd = .;
    _ovl_En_TiteSegmentTextSize = ABSOLUTE( _ovl_En_TiteSegmentTextEnd - _ovl_En_TiteSegmentTextStart );
        _ovl_En_TiteSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Tite/z_en_tite.o (.data)
            build/data/overlays/actors/z_en_tite.data.o (.data)
            build/data/overlays/actors/z_en_tite.reloc.o (.data)
        _ovl_En_TiteSegmentDataEnd = .;
    _ovl_En_TiteSegmentDataSize = ABSOLUTE( _ovl_En_TiteSegmentDataEnd - _ovl_En_TiteSegmentDataStart );
        _ovl_En_TiteSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Tite/z_en_tite.o (.rodata)
            build/data/overlays/actors/z_en_tite.data.o (.rodata)
            build/data/overlays/actors/z_en_tite.reloc.o (.rodata)
        _ovl_En_TiteSegmentRoDataEnd = .;
    _ovl_En_TiteSegmentRoDataSize = ABSOLUTE( _ovl_En_TiteSegmentRoDataEnd - _ovl_En_TiteSegmentRoDataStart );
        _ovl_En_TiteSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Tite/z_en_tite.o (.sdata)
            build/data/overlays/actors/z_en_tite.data.o (.sdata)
            build/data/overlays/actors/z_en_tite.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_TiteSegmentSDataEnd = .;
        _ovl_En_TiteSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Tite/z_en_tite.o (.ovl)
            build/data/overlays/actors/z_en_tite.data.o (.ovl)
            build/data/overlays/actors/z_en_tite.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_TiteSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_TiteSegmentOvlEnd - _ovl_En_TiteSegmentTextStart );
    _ovl_En_TiteSegmentRomEnd = _RomSize;

    ..ovl_En_Tite.bss ADDR(..ovl_En_Tite) + SIZEOF(..ovl_En_Tite) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_TiteSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Tite/z_en_tite.o (.sbss)
            build/data/overlays/actors/z_en_tite.data.o (.sbss)
            build/data/overlays/actors/z_en_tite.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Tite/z_en_tite.o (.scommon)
            build/data/overlays/actors/z_en_tite.data.o (.scommon)
            build/data/overlays/actors/z_en_tite.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Tite/z_en_tite.o (.bss)
            build/data/overlays/actors/z_en_tite.data.o (.bss)
            build/data/overlays/actors/z_en_tite.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Tite/z_en_tite.o (COMMON)
            build/data/overlays/actors/z_en_tite.data.o (COMMON)
            build/data/overlays/actors/z_en_tite.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_TiteSegmentBssEnd = .;
        _ovl_En_TiteSegmentEnd = .;
    }
    _ovl_En_TiteSegmentBssSize = ABSOLUTE( _ovl_En_TiteSegmentBssEnd - _ovl_En_TiteSegmentBssStart );

    _ovl_En_TkSegmentRomStart = _RomSize;
    ..ovl_En_Tk : AT(_RomSize)
    {
        _ovl_En_TkSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_TkSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Tk/z_en_tk.o (.text)
            build/src/overlays/actors/ovl_En_Tk/ovl_En_Tk_reloc.o (.text)
        _ovl_En_TkSegmentTextEnd = .;
    _ovl_En_TkSegmentTextSize = ABSOLUTE( _ovl_En_TkSegmentTextEnd - _ovl_En_TkSegmentTextStart );
        _ovl_En_TkSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Tk/z_en_tk.o (.data)
            build/src/overlays/actors/ovl_En_Tk/ovl_En_Tk_reloc.o (.data)
        _ovl_En_TkSegmentDataEnd = .;
    _ovl_En_TkSegmentDataSize = ABSOLUTE( _ovl_En_TkSegmentDataEnd - _ovl_En_TkSegmentDataStart );
        _ovl_En_TkSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Tk/z_en_tk.o (.rodata)
            build/src/overlays/actors/ovl_En_Tk/ovl_En_Tk_reloc.o (.rodata)
        _ovl_En_TkSegmentRoDataEnd = .;
    _ovl_En_TkSegmentRoDataSize = ABSOLUTE( _ovl_En_TkSegmentRoDataEnd - _ovl_En_TkSegmentRoDataStart );
        _ovl_En_TkSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Tk/z_en_tk.o (.sdata)
            build/src/overlays/actors/ovl_En_Tk/ovl_En_Tk_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_TkSegmentSDataEnd = .;
        _ovl_En_TkSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Tk/z_en_tk.o (.ovl)
            build/src/overlays/actors/ovl_En_Tk/ovl_En_Tk_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_TkSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_TkSegmentOvlEnd - _ovl_En_TkSegmentTextStart );
    _ovl_En_TkSegmentRomEnd = _RomSize;

    ..ovl_En_Tk.bss ADDR(..ovl_En_Tk) + SIZEOF(..ovl_En_Tk) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_TkSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Tk/z_en_tk.o (.sbss)
            build/src/overlays/actors/ovl_En_Tk/ovl_En_Tk_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Tk/z_en_tk.o (.scommon)
            build/src/overlays/actors/ovl_En_Tk/ovl_En_Tk_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Tk/z_en_tk.o (.bss)
            build/src/overlays/actors/ovl_En_Tk/ovl_En_Tk_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Tk/z_en_tk.o (COMMON)
            build/src/overlays/actors/ovl_En_Tk/ovl_En_Tk_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_TkSegmentBssEnd = .;
        _ovl_En_TkSegmentEnd = .;
    }
    _ovl_En_TkSegmentBssSize = ABSOLUTE( _ovl_En_TkSegmentBssEnd - _ovl_En_TkSegmentBssStart );

    _ovl_En_TorchSegmentRomStart = _RomSize;
    ..ovl_En_Torch : AT(_RomSize)
    {
        _ovl_En_TorchSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_TorchSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Torch/z_en_torch.o (.text)
            build/src/overlays/actors/ovl_En_Torch/ovl_En_Torch_reloc.o (.text)
        _ovl_En_TorchSegmentTextEnd = .;
    _ovl_En_TorchSegmentTextSize = ABSOLUTE( _ovl_En_TorchSegmentTextEnd - _ovl_En_TorchSegmentTextStart );
        _ovl_En_TorchSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Torch/z_en_torch.o (.data)
            build/src/overlays/actors/ovl_En_Torch/ovl_En_Torch_reloc.o (.data)
        _ovl_En_TorchSegmentDataEnd = .;
    _ovl_En_TorchSegmentDataSize = ABSOLUTE( _ovl_En_TorchSegmentDataEnd - _ovl_En_TorchSegmentDataStart );
        _ovl_En_TorchSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Torch/z_en_torch.o (.rodata)
            build/src/overlays/actors/ovl_En_Torch/ovl_En_Torch_reloc.o (.rodata)
        _ovl_En_TorchSegmentRoDataEnd = .;
    _ovl_En_TorchSegmentRoDataSize = ABSOLUTE( _ovl_En_TorchSegmentRoDataEnd - _ovl_En_TorchSegmentRoDataStart );
        _ovl_En_TorchSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Torch/z_en_torch.o (.sdata)
            build/src/overlays/actors/ovl_En_Torch/ovl_En_Torch_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_TorchSegmentSDataEnd = .;
        _ovl_En_TorchSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Torch/z_en_torch.o (.ovl)
            build/src/overlays/actors/ovl_En_Torch/ovl_En_Torch_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_TorchSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_TorchSegmentOvlEnd - _ovl_En_TorchSegmentTextStart );
    _ovl_En_TorchSegmentRomEnd = _RomSize;

    ..ovl_En_Torch.bss ADDR(..ovl_En_Torch) + SIZEOF(..ovl_En_Torch) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_TorchSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Torch/z_en_torch.o (.sbss)
            build/src/overlays/actors/ovl_En_Torch/ovl_En_Torch_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Torch/z_en_torch.o (.scommon)
            build/src/overlays/actors/ovl_En_Torch/ovl_En_Torch_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Torch/z_en_torch.o (.bss)
            build/src/overlays/actors/ovl_En_Torch/ovl_En_Torch_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Torch/z_en_torch.o (COMMON)
            build/src/overlays/actors/ovl_En_Torch/ovl_En_Torch_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_TorchSegmentBssEnd = .;
        _ovl_En_TorchSegmentEnd = .;
    }
    _ovl_En_TorchSegmentBssSize = ABSOLUTE( _ovl_En_TorchSegmentBssEnd - _ovl_En_TorchSegmentBssStart );

    _ovl_En_Torch2SegmentRomStart = _RomSize;
    ..ovl_En_Torch2 : AT(_RomSize)
    {
        _ovl_En_Torch2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Torch2SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Torch2/z_en_torch2.o (.text)
            build/data/overlays/actors/z_en_torch2.data.o (.text)
            build/data/overlays/actors/z_en_torch2.bss.o (.text)
            build/data/overlays/actors/z_en_torch2.reloc.o (.text)
        _ovl_En_Torch2SegmentTextEnd = .;
    _ovl_En_Torch2SegmentTextSize = ABSOLUTE( _ovl_En_Torch2SegmentTextEnd - _ovl_En_Torch2SegmentTextStart );
        _ovl_En_Torch2SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Torch2/z_en_torch2.o (.data)
            build/data/overlays/actors/z_en_torch2.data.o (.data)
            build/data/overlays/actors/z_en_torch2.bss.o (.data)
            build/data/overlays/actors/z_en_torch2.reloc.o (.data)
        _ovl_En_Torch2SegmentDataEnd = .;
    _ovl_En_Torch2SegmentDataSize = ABSOLUTE( _ovl_En_Torch2SegmentDataEnd - _ovl_En_Torch2SegmentDataStart );
        _ovl_En_Torch2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Torch2/z_en_torch2.o (.rodata)
            build/data/overlays/actors/z_en_torch2.data.o (.rodata)
            build/data/overlays/actors/z_en_torch2.bss.o (.rodata)
            build/data/overlays/actors/z_en_torch2.reloc.o (.rodata)
        _ovl_En_Torch2SegmentRoDataEnd = .;
    _ovl_En_Torch2SegmentRoDataSize = ABSOLUTE( _ovl_En_Torch2SegmentRoDataEnd - _ovl_En_Torch2SegmentRoDataStart );
        _ovl_En_Torch2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Torch2/z_en_torch2.o (.sdata)
            build/data/overlays/actors/z_en_torch2.data.o (.sdata)
            build/data/overlays/actors/z_en_torch2.bss.o (.sdata)
            build/data/overlays/actors/z_en_torch2.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Torch2SegmentSDataEnd = .;
        _ovl_En_Torch2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Torch2/z_en_torch2.o (.ovl)
            build/data/overlays/actors/z_en_torch2.data.o (.ovl)
            build/data/overlays/actors/z_en_torch2.bss.o (.ovl)
            build/data/overlays/actors/z_en_torch2.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Torch2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Torch2SegmentOvlEnd - _ovl_En_Torch2SegmentTextStart );
    _ovl_En_Torch2SegmentRomEnd = _RomSize;

    ..ovl_En_Torch2.bss ADDR(..ovl_En_Torch2) + SIZEOF(..ovl_En_Torch2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Torch2SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Torch2/z_en_torch2.o (.sbss)
            build/data/overlays/actors/z_en_torch2.data.o (.sbss)
            build/data/overlays/actors/z_en_torch2.bss.o (.sbss)
            build/data/overlays/actors/z_en_torch2.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Torch2/z_en_torch2.o (.scommon)
            build/data/overlays/actors/z_en_torch2.data.o (.scommon)
            build/data/overlays/actors/z_en_torch2.bss.o (.scommon)
            build/data/overlays/actors/z_en_torch2.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Torch2/z_en_torch2.o (.bss)
            build/data/overlays/actors/z_en_torch2.data.o (.bss)
            build/data/overlays/actors/z_en_torch2.bss.o (.bss)
            build/data/overlays/actors/z_en_torch2.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Torch2/z_en_torch2.o (COMMON)
            build/data/overlays/actors/z_en_torch2.data.o (COMMON)
            build/data/overlays/actors/z_en_torch2.bss.o (COMMON)
            build/data/overlays/actors/z_en_torch2.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Torch2SegmentBssEnd = .;
        _ovl_En_Torch2SegmentEnd = .;
    }
    _ovl_En_Torch2SegmentBssSize = ABSOLUTE( _ovl_En_Torch2SegmentBssEnd - _ovl_En_Torch2SegmentBssStart );

    _ovl_En_ToryoSegmentRomStart = _RomSize;
    ..ovl_En_Toryo : AT(_RomSize)
    {
        _ovl_En_ToryoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_ToryoSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Toryo/z_en_toryo.o (.text)
            build/data/overlays/actors/z_en_toryo.data.o (.text)
            build/data/overlays/actors/z_en_toryo.reloc.o (.text)
        _ovl_En_ToryoSegmentTextEnd = .;
    _ovl_En_ToryoSegmentTextSize = ABSOLUTE( _ovl_En_ToryoSegmentTextEnd - _ovl_En_ToryoSegmentTextStart );
        _ovl_En_ToryoSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Toryo/z_en_toryo.o (.data)
            build/data/overlays/actors/z_en_toryo.data.o (.data)
            build/data/overlays/actors/z_en_toryo.reloc.o (.data)
        _ovl_En_ToryoSegmentDataEnd = .;
    _ovl_En_ToryoSegmentDataSize = ABSOLUTE( _ovl_En_ToryoSegmentDataEnd - _ovl_En_ToryoSegmentDataStart );
        _ovl_En_ToryoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Toryo/z_en_toryo.o (.rodata)
            build/data/overlays/actors/z_en_toryo.data.o (.rodata)
            build/data/overlays/actors/z_en_toryo.reloc.o (.rodata)
        _ovl_En_ToryoSegmentRoDataEnd = .;
    _ovl_En_ToryoSegmentRoDataSize = ABSOLUTE( _ovl_En_ToryoSegmentRoDataEnd - _ovl_En_ToryoSegmentRoDataStart );
        _ovl_En_ToryoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Toryo/z_en_toryo.o (.sdata)
            build/data/overlays/actors/z_en_toryo.data.o (.sdata)
            build/data/overlays/actors/z_en_toryo.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_ToryoSegmentSDataEnd = .;
        _ovl_En_ToryoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Toryo/z_en_toryo.o (.ovl)
            build/data/overlays/actors/z_en_toryo.data.o (.ovl)
            build/data/overlays/actors/z_en_toryo.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_ToryoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_ToryoSegmentOvlEnd - _ovl_En_ToryoSegmentTextStart );
    _ovl_En_ToryoSegmentRomEnd = _RomSize;

    ..ovl_En_Toryo.bss ADDR(..ovl_En_Toryo) + SIZEOF(..ovl_En_Toryo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_ToryoSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Toryo/z_en_toryo.o (.sbss)
            build/data/overlays/actors/z_en_toryo.data.o (.sbss)
            build/data/overlays/actors/z_en_toryo.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Toryo/z_en_toryo.o (.scommon)
            build/data/overlays/actors/z_en_toryo.data.o (.scommon)
            build/data/overlays/actors/z_en_toryo.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Toryo/z_en_toryo.o (.bss)
            build/data/overlays/actors/z_en_toryo.data.o (.bss)
            build/data/overlays/actors/z_en_toryo.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Toryo/z_en_toryo.o (COMMON)
            build/data/overlays/actors/z_en_toryo.data.o (COMMON)
            build/data/overlays/actors/z_en_toryo.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_ToryoSegmentBssEnd = .;
        _ovl_En_ToryoSegmentEnd = .;
    }
    _ovl_En_ToryoSegmentBssSize = ABSOLUTE( _ovl_En_ToryoSegmentBssEnd - _ovl_En_ToryoSegmentBssStart );

    _ovl_En_TpSegmentRomStart = _RomSize;
    ..ovl_En_Tp : AT(_RomSize)
    {
        _ovl_En_TpSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_TpSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Tp/z_en_tp.o (.text)
            build/data/overlays/actors/z_en_tp.data.o (.text)
            build/data/overlays/actors/z_en_tp.reloc.o (.text)
        _ovl_En_TpSegmentTextEnd = .;
    _ovl_En_TpSegmentTextSize = ABSOLUTE( _ovl_En_TpSegmentTextEnd - _ovl_En_TpSegmentTextStart );
        _ovl_En_TpSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Tp/z_en_tp.o (.data)
            build/data/overlays/actors/z_en_tp.data.o (.data)
            build/data/overlays/actors/z_en_tp.reloc.o (.data)
        _ovl_En_TpSegmentDataEnd = .;
    _ovl_En_TpSegmentDataSize = ABSOLUTE( _ovl_En_TpSegmentDataEnd - _ovl_En_TpSegmentDataStart );
        _ovl_En_TpSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Tp/z_en_tp.o (.rodata)
            build/data/overlays/actors/z_en_tp.data.o (.rodata)
            build/data/overlays/actors/z_en_tp.reloc.o (.rodata)
        _ovl_En_TpSegmentRoDataEnd = .;
    _ovl_En_TpSegmentRoDataSize = ABSOLUTE( _ovl_En_TpSegmentRoDataEnd - _ovl_En_TpSegmentRoDataStart );
        _ovl_En_TpSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Tp/z_en_tp.o (.sdata)
            build/data/overlays/actors/z_en_tp.data.o (.sdata)
            build/data/overlays/actors/z_en_tp.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_TpSegmentSDataEnd = .;
        _ovl_En_TpSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Tp/z_en_tp.o (.ovl)
            build/data/overlays/actors/z_en_tp.data.o (.ovl)
            build/data/overlays/actors/z_en_tp.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_TpSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_TpSegmentOvlEnd - _ovl_En_TpSegmentTextStart );
    _ovl_En_TpSegmentRomEnd = _RomSize;

    ..ovl_En_Tp.bss ADDR(..ovl_En_Tp) + SIZEOF(..ovl_En_Tp) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_TpSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Tp/z_en_tp.o (.sbss)
            build/data/overlays/actors/z_en_tp.data.o (.sbss)
            build/data/overlays/actors/z_en_tp.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Tp/z_en_tp.o (.scommon)
            build/data/overlays/actors/z_en_tp.data.o (.scommon)
            build/data/overlays/actors/z_en_tp.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Tp/z_en_tp.o (.bss)
            build/data/overlays/actors/z_en_tp.data.o (.bss)
            build/data/overlays/actors/z_en_tp.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Tp/z_en_tp.o (COMMON)
            build/data/overlays/actors/z_en_tp.data.o (COMMON)
            build/data/overlays/actors/z_en_tp.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_TpSegmentBssEnd = .;
        _ovl_En_TpSegmentEnd = .;
    }
    _ovl_En_TpSegmentBssSize = ABSOLUTE( _ovl_En_TpSegmentBssEnd - _ovl_En_TpSegmentBssStart );

    _ovl_En_TrSegmentRomStart = _RomSize;
    ..ovl_En_Tr : AT(_RomSize)
    {
        _ovl_En_TrSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_TrSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Tr/z_en_tr.o (.text)
            build/data/overlays/actors/z_en_tr.data.o (.text)
            build/data/overlays/actors/z_en_tr.reloc.o (.text)
        _ovl_En_TrSegmentTextEnd = .;
    _ovl_En_TrSegmentTextSize = ABSOLUTE( _ovl_En_TrSegmentTextEnd - _ovl_En_TrSegmentTextStart );
        _ovl_En_TrSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Tr/z_en_tr.o (.data)
            build/data/overlays/actors/z_en_tr.data.o (.data)
            build/data/overlays/actors/z_en_tr.reloc.o (.data)
        _ovl_En_TrSegmentDataEnd = .;
    _ovl_En_TrSegmentDataSize = ABSOLUTE( _ovl_En_TrSegmentDataEnd - _ovl_En_TrSegmentDataStart );
        _ovl_En_TrSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Tr/z_en_tr.o (.rodata)
            build/data/overlays/actors/z_en_tr.data.o (.rodata)
            build/data/overlays/actors/z_en_tr.reloc.o (.rodata)
        _ovl_En_TrSegmentRoDataEnd = .;
    _ovl_En_TrSegmentRoDataSize = ABSOLUTE( _ovl_En_TrSegmentRoDataEnd - _ovl_En_TrSegmentRoDataStart );
        _ovl_En_TrSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Tr/z_en_tr.o (.sdata)
            build/data/overlays/actors/z_en_tr.data.o (.sdata)
            build/data/overlays/actors/z_en_tr.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_TrSegmentSDataEnd = .;
        _ovl_En_TrSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Tr/z_en_tr.o (.ovl)
            build/data/overlays/actors/z_en_tr.data.o (.ovl)
            build/data/overlays/actors/z_en_tr.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_TrSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_TrSegmentOvlEnd - _ovl_En_TrSegmentTextStart );
    _ovl_En_TrSegmentRomEnd = _RomSize;

    ..ovl_En_Tr.bss ADDR(..ovl_En_Tr) + SIZEOF(..ovl_En_Tr) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_TrSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Tr/z_en_tr.o (.sbss)
            build/data/overlays/actors/z_en_tr.data.o (.sbss)
            build/data/overlays/actors/z_en_tr.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Tr/z_en_tr.o (.scommon)
            build/data/overlays/actors/z_en_tr.data.o (.scommon)
            build/data/overlays/actors/z_en_tr.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Tr/z_en_tr.o (.bss)
            build/data/overlays/actors/z_en_tr.data.o (.bss)
            build/data/overlays/actors/z_en_tr.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Tr/z_en_tr.o (COMMON)
            build/data/overlays/actors/z_en_tr.data.o (COMMON)
            build/data/overlays/actors/z_en_tr.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_TrSegmentBssEnd = .;
        _ovl_En_TrSegmentEnd = .;
    }
    _ovl_En_TrSegmentBssSize = ABSOLUTE( _ovl_En_TrSegmentBssEnd - _ovl_En_TrSegmentBssStart );

    _ovl_En_TrapSegmentRomStart = _RomSize;
    ..ovl_En_Trap : AT(_RomSize)
    {
        _ovl_En_TrapSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_TrapSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Trap/z_en_trap.o (.text)
            build/data/overlays/actors/z_en_trap.data.o (.text)
            build/data/overlays/actors/z_en_trap.reloc.o (.text)
        _ovl_En_TrapSegmentTextEnd = .;
    _ovl_En_TrapSegmentTextSize = ABSOLUTE( _ovl_En_TrapSegmentTextEnd - _ovl_En_TrapSegmentTextStart );
        _ovl_En_TrapSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Trap/z_en_trap.o (.data)
            build/data/overlays/actors/z_en_trap.data.o (.data)
            build/data/overlays/actors/z_en_trap.reloc.o (.data)
        _ovl_En_TrapSegmentDataEnd = .;
    _ovl_En_TrapSegmentDataSize = ABSOLUTE( _ovl_En_TrapSegmentDataEnd - _ovl_En_TrapSegmentDataStart );
        _ovl_En_TrapSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Trap/z_en_trap.o (.rodata)
            build/data/overlays/actors/z_en_trap.data.o (.rodata)
            build/data/overlays/actors/z_en_trap.reloc.o (.rodata)
        _ovl_En_TrapSegmentRoDataEnd = .;
    _ovl_En_TrapSegmentRoDataSize = ABSOLUTE( _ovl_En_TrapSegmentRoDataEnd - _ovl_En_TrapSegmentRoDataStart );
        _ovl_En_TrapSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Trap/z_en_trap.o (.sdata)
            build/data/overlays/actors/z_en_trap.data.o (.sdata)
            build/data/overlays/actors/z_en_trap.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_TrapSegmentSDataEnd = .;
        _ovl_En_TrapSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Trap/z_en_trap.o (.ovl)
            build/data/overlays/actors/z_en_trap.data.o (.ovl)
            build/data/overlays/actors/z_en_trap.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_TrapSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_TrapSegmentOvlEnd - _ovl_En_TrapSegmentTextStart );
    _ovl_En_TrapSegmentRomEnd = _RomSize;

    ..ovl_En_Trap.bss ADDR(..ovl_En_Trap) + SIZEOF(..ovl_En_Trap) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_TrapSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Trap/z_en_trap.o (.sbss)
            build/data/overlays/actors/z_en_trap.data.o (.sbss)
            build/data/overlays/actors/z_en_trap.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Trap/z_en_trap.o (.scommon)
            build/data/overlays/actors/z_en_trap.data.o (.scommon)
            build/data/overlays/actors/z_en_trap.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Trap/z_en_trap.o (.bss)
            build/data/overlays/actors/z_en_trap.data.o (.bss)
            build/data/overlays/actors/z_en_trap.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Trap/z_en_trap.o (COMMON)
            build/data/overlays/actors/z_en_trap.data.o (COMMON)
            build/data/overlays/actors/z_en_trap.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_TrapSegmentBssEnd = .;
        _ovl_En_TrapSegmentEnd = .;
    }
    _ovl_En_TrapSegmentBssSize = ABSOLUTE( _ovl_En_TrapSegmentBssEnd - _ovl_En_TrapSegmentBssStart );

    _ovl_En_Tubo_TrapSegmentRomStart = _RomSize;
    ..ovl_En_Tubo_Trap : AT(_RomSize)
    {
        _ovl_En_Tubo_TrapSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Tubo_TrapSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Tubo_Trap/z_en_tubo_trap.o (.text)
            build/data/overlays/actors/z_en_tubo_trap.reloc.o (.text)
        _ovl_En_Tubo_TrapSegmentTextEnd = .;
    _ovl_En_Tubo_TrapSegmentTextSize = ABSOLUTE( _ovl_En_Tubo_TrapSegmentTextEnd - _ovl_En_Tubo_TrapSegmentTextStart );
        _ovl_En_Tubo_TrapSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Tubo_Trap/z_en_tubo_trap.o (.data)
            build/data/overlays/actors/z_en_tubo_trap.reloc.o (.data)
        _ovl_En_Tubo_TrapSegmentDataEnd = .;
    _ovl_En_Tubo_TrapSegmentDataSize = ABSOLUTE( _ovl_En_Tubo_TrapSegmentDataEnd - _ovl_En_Tubo_TrapSegmentDataStart );
        _ovl_En_Tubo_TrapSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Tubo_Trap/z_en_tubo_trap.o (.rodata)
            build/data/overlays/actors/z_en_tubo_trap.reloc.o (.rodata)
        _ovl_En_Tubo_TrapSegmentRoDataEnd = .;
    _ovl_En_Tubo_TrapSegmentRoDataSize = ABSOLUTE( _ovl_En_Tubo_TrapSegmentRoDataEnd - _ovl_En_Tubo_TrapSegmentRoDataStart );
        _ovl_En_Tubo_TrapSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Tubo_Trap/z_en_tubo_trap.o (.sdata)
            build/data/overlays/actors/z_en_tubo_trap.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Tubo_TrapSegmentSDataEnd = .;
        _ovl_En_Tubo_TrapSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Tubo_Trap/z_en_tubo_trap.o (.ovl)
            build/data/overlays/actors/z_en_tubo_trap.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Tubo_TrapSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Tubo_TrapSegmentOvlEnd - _ovl_En_Tubo_TrapSegmentTextStart );
    _ovl_En_Tubo_TrapSegmentRomEnd = _RomSize;

    ..ovl_En_Tubo_Trap.bss ADDR(..ovl_En_Tubo_Trap) + SIZEOF(..ovl_En_Tubo_Trap) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Tubo_TrapSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Tubo_Trap/z_en_tubo_trap.o (.sbss)
            build/data/overlays/actors/z_en_tubo_trap.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Tubo_Trap/z_en_tubo_trap.o (.scommon)
            build/data/overlays/actors/z_en_tubo_trap.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Tubo_Trap/z_en_tubo_trap.o (.bss)
            build/data/overlays/actors/z_en_tubo_trap.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Tubo_Trap/z_en_tubo_trap.o (COMMON)
            build/data/overlays/actors/z_en_tubo_trap.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Tubo_TrapSegmentBssEnd = .;
        _ovl_En_Tubo_TrapSegmentEnd = .;
    }
    _ovl_En_Tubo_TrapSegmentBssSize = ABSOLUTE( _ovl_En_Tubo_TrapSegmentBssEnd - _ovl_En_Tubo_TrapSegmentBssStart );

    _ovl_En_ValiSegmentRomStart = _RomSize;
    ..ovl_En_Vali : AT(_RomSize)
    {
        _ovl_En_ValiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_ValiSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Vali/z_en_vali.o (.text)
            build/data/overlays/actors/z_en_vali.data.o (.text)
            build/data/overlays/actors/z_en_vali.reloc.o (.text)
        _ovl_En_ValiSegmentTextEnd = .;
    _ovl_En_ValiSegmentTextSize = ABSOLUTE( _ovl_En_ValiSegmentTextEnd - _ovl_En_ValiSegmentTextStart );
        _ovl_En_ValiSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Vali/z_en_vali.o (.data)
            build/data/overlays/actors/z_en_vali.data.o (.data)
            build/data/overlays/actors/z_en_vali.reloc.o (.data)
        _ovl_En_ValiSegmentDataEnd = .;
    _ovl_En_ValiSegmentDataSize = ABSOLUTE( _ovl_En_ValiSegmentDataEnd - _ovl_En_ValiSegmentDataStart );
        _ovl_En_ValiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Vali/z_en_vali.o (.rodata)
            build/data/overlays/actors/z_en_vali.data.o (.rodata)
            build/data/overlays/actors/z_en_vali.reloc.o (.rodata)
        _ovl_En_ValiSegmentRoDataEnd = .;
    _ovl_En_ValiSegmentRoDataSize = ABSOLUTE( _ovl_En_ValiSegmentRoDataEnd - _ovl_En_ValiSegmentRoDataStart );
        _ovl_En_ValiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Vali/z_en_vali.o (.sdata)
            build/data/overlays/actors/z_en_vali.data.o (.sdata)
            build/data/overlays/actors/z_en_vali.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_ValiSegmentSDataEnd = .;
        _ovl_En_ValiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Vali/z_en_vali.o (.ovl)
            build/data/overlays/actors/z_en_vali.data.o (.ovl)
            build/data/overlays/actors/z_en_vali.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_ValiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_ValiSegmentOvlEnd - _ovl_En_ValiSegmentTextStart );
    _ovl_En_ValiSegmentRomEnd = _RomSize;

    ..ovl_En_Vali.bss ADDR(..ovl_En_Vali) + SIZEOF(..ovl_En_Vali) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_ValiSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Vali/z_en_vali.o (.sbss)
            build/data/overlays/actors/z_en_vali.data.o (.sbss)
            build/data/overlays/actors/z_en_vali.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Vali/z_en_vali.o (.scommon)
            build/data/overlays/actors/z_en_vali.data.o (.scommon)
            build/data/overlays/actors/z_en_vali.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Vali/z_en_vali.o (.bss)
            build/data/overlays/actors/z_en_vali.data.o (.bss)
            build/data/overlays/actors/z_en_vali.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Vali/z_en_vali.o (COMMON)
            build/data/overlays/actors/z_en_vali.data.o (COMMON)
            build/data/overlays/actors/z_en_vali.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_ValiSegmentBssEnd = .;
        _ovl_En_ValiSegmentEnd = .;
    }
    _ovl_En_ValiSegmentBssSize = ABSOLUTE( _ovl_En_ValiSegmentBssEnd - _ovl_En_ValiSegmentBssStart );

    _ovl_En_VaseSegmentRomStart = _RomSize;
    ..ovl_En_Vase : AT(_RomSize)
    {
        _ovl_En_VaseSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_VaseSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Vase/z_en_vase.o (.text)
            build/src/overlays/actors/ovl_En_Vase/ovl_En_Vase_reloc.o (.text)
        _ovl_En_VaseSegmentTextEnd = .;
    _ovl_En_VaseSegmentTextSize = ABSOLUTE( _ovl_En_VaseSegmentTextEnd - _ovl_En_VaseSegmentTextStart );
        _ovl_En_VaseSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Vase/z_en_vase.o (.data)
            build/src/overlays/actors/ovl_En_Vase/ovl_En_Vase_reloc.o (.data)
        _ovl_En_VaseSegmentDataEnd = .;
    _ovl_En_VaseSegmentDataSize = ABSOLUTE( _ovl_En_VaseSegmentDataEnd - _ovl_En_VaseSegmentDataStart );
        _ovl_En_VaseSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Vase/z_en_vase.o (.rodata)
            build/src/overlays/actors/ovl_En_Vase/ovl_En_Vase_reloc.o (.rodata)
        _ovl_En_VaseSegmentRoDataEnd = .;
    _ovl_En_VaseSegmentRoDataSize = ABSOLUTE( _ovl_En_VaseSegmentRoDataEnd - _ovl_En_VaseSegmentRoDataStart );
        _ovl_En_VaseSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Vase/z_en_vase.o (.sdata)
            build/src/overlays/actors/ovl_En_Vase/ovl_En_Vase_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_VaseSegmentSDataEnd = .;
        _ovl_En_VaseSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Vase/z_en_vase.o (.ovl)
            build/src/overlays/actors/ovl_En_Vase/ovl_En_Vase_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_VaseSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_VaseSegmentOvlEnd - _ovl_En_VaseSegmentTextStart );
    _ovl_En_VaseSegmentRomEnd = _RomSize;

    ..ovl_En_Vase.bss ADDR(..ovl_En_Vase) + SIZEOF(..ovl_En_Vase) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_VaseSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Vase/z_en_vase.o (.sbss)
            build/src/overlays/actors/ovl_En_Vase/ovl_En_Vase_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Vase/z_en_vase.o (.scommon)
            build/src/overlays/actors/ovl_En_Vase/ovl_En_Vase_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Vase/z_en_vase.o (.bss)
            build/src/overlays/actors/ovl_En_Vase/ovl_En_Vase_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Vase/z_en_vase.o (COMMON)
            build/src/overlays/actors/ovl_En_Vase/ovl_En_Vase_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_VaseSegmentBssEnd = .;
        _ovl_En_VaseSegmentEnd = .;
    }
    _ovl_En_VaseSegmentBssSize = ABSOLUTE( _ovl_En_VaseSegmentBssEnd - _ovl_En_VaseSegmentBssStart );

    _ovl_En_Vb_BallSegmentRomStart = _RomSize;
    ..ovl_En_Vb_Ball : AT(_RomSize)
    {
        _ovl_En_Vb_BallSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Vb_BallSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Vb_Ball/z_en_vb_ball.o (.text)
            build/data/overlays/actors/z_en_vb_ball.data.o (.text)
            build/data/overlays/actors/z_en_vb_ball.reloc.o (.text)
        _ovl_En_Vb_BallSegmentTextEnd = .;
    _ovl_En_Vb_BallSegmentTextSize = ABSOLUTE( _ovl_En_Vb_BallSegmentTextEnd - _ovl_En_Vb_BallSegmentTextStart );
        _ovl_En_Vb_BallSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Vb_Ball/z_en_vb_ball.o (.data)
            build/data/overlays/actors/z_en_vb_ball.data.o (.data)
            build/data/overlays/actors/z_en_vb_ball.reloc.o (.data)
        _ovl_En_Vb_BallSegmentDataEnd = .;
    _ovl_En_Vb_BallSegmentDataSize = ABSOLUTE( _ovl_En_Vb_BallSegmentDataEnd - _ovl_En_Vb_BallSegmentDataStart );
        _ovl_En_Vb_BallSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Vb_Ball/z_en_vb_ball.o (.rodata)
            build/data/overlays/actors/z_en_vb_ball.data.o (.rodata)
            build/data/overlays/actors/z_en_vb_ball.reloc.o (.rodata)
        _ovl_En_Vb_BallSegmentRoDataEnd = .;
    _ovl_En_Vb_BallSegmentRoDataSize = ABSOLUTE( _ovl_En_Vb_BallSegmentRoDataEnd - _ovl_En_Vb_BallSegmentRoDataStart );
        _ovl_En_Vb_BallSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Vb_Ball/z_en_vb_ball.o (.sdata)
            build/data/overlays/actors/z_en_vb_ball.data.o (.sdata)
            build/data/overlays/actors/z_en_vb_ball.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Vb_BallSegmentSDataEnd = .;
        _ovl_En_Vb_BallSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Vb_Ball/z_en_vb_ball.o (.ovl)
            build/data/overlays/actors/z_en_vb_ball.data.o (.ovl)
            build/data/overlays/actors/z_en_vb_ball.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Vb_BallSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Vb_BallSegmentOvlEnd - _ovl_En_Vb_BallSegmentTextStart );
    _ovl_En_Vb_BallSegmentRomEnd = _RomSize;

    ..ovl_En_Vb_Ball.bss ADDR(..ovl_En_Vb_Ball) + SIZEOF(..ovl_En_Vb_Ball) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Vb_BallSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Vb_Ball/z_en_vb_ball.o (.sbss)
            build/data/overlays/actors/z_en_vb_ball.data.o (.sbss)
            build/data/overlays/actors/z_en_vb_ball.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Vb_Ball/z_en_vb_ball.o (.scommon)
            build/data/overlays/actors/z_en_vb_ball.data.o (.scommon)
            build/data/overlays/actors/z_en_vb_ball.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Vb_Ball/z_en_vb_ball.o (.bss)
            build/data/overlays/actors/z_en_vb_ball.data.o (.bss)
            build/data/overlays/actors/z_en_vb_ball.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Vb_Ball/z_en_vb_ball.o (COMMON)
            build/data/overlays/actors/z_en_vb_ball.data.o (COMMON)
            build/data/overlays/actors/z_en_vb_ball.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Vb_BallSegmentBssEnd = .;
        _ovl_En_Vb_BallSegmentEnd = .;
    }
    _ovl_En_Vb_BallSegmentBssSize = ABSOLUTE( _ovl_En_Vb_BallSegmentBssEnd - _ovl_En_Vb_BallSegmentBssStart );

    _ovl_En_ViewerSegmentRomStart = _RomSize;
    ..ovl_En_Viewer : AT(_RomSize)
    {
        _ovl_En_ViewerSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_ViewerSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Viewer/z_en_viewer.o (.text)
            build/data/overlays/actors/z_en_viewer.data.o (.text)
            build/data/overlays/actors/z_en_viewer.bss.o (.text)
            build/data/overlays/actors/z_en_viewer.reloc.o (.text)
        _ovl_En_ViewerSegmentTextEnd = .;
    _ovl_En_ViewerSegmentTextSize = ABSOLUTE( _ovl_En_ViewerSegmentTextEnd - _ovl_En_ViewerSegmentTextStart );
        _ovl_En_ViewerSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Viewer/z_en_viewer.o (.data)
            build/data/overlays/actors/z_en_viewer.data.o (.data)
            build/data/overlays/actors/z_en_viewer.bss.o (.data)
            build/data/overlays/actors/z_en_viewer.reloc.o (.data)
        _ovl_En_ViewerSegmentDataEnd = .;
    _ovl_En_ViewerSegmentDataSize = ABSOLUTE( _ovl_En_ViewerSegmentDataEnd - _ovl_En_ViewerSegmentDataStart );
        _ovl_En_ViewerSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Viewer/z_en_viewer.o (.rodata)
            build/data/overlays/actors/z_en_viewer.data.o (.rodata)
            build/data/overlays/actors/z_en_viewer.bss.o (.rodata)
            build/data/overlays/actors/z_en_viewer.reloc.o (.rodata)
        _ovl_En_ViewerSegmentRoDataEnd = .;
    _ovl_En_ViewerSegmentRoDataSize = ABSOLUTE( _ovl_En_ViewerSegmentRoDataEnd - _ovl_En_ViewerSegmentRoDataStart );
        _ovl_En_ViewerSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Viewer/z_en_viewer.o (.sdata)
            build/data/overlays/actors/z_en_viewer.data.o (.sdata)
            build/data/overlays/actors/z_en_viewer.bss.o (.sdata)
            build/data/overlays/actors/z_en_viewer.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_ViewerSegmentSDataEnd = .;
        _ovl_En_ViewerSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Viewer/z_en_viewer.o (.ovl)
            build/data/overlays/actors/z_en_viewer.data.o (.ovl)
            build/data/overlays/actors/z_en_viewer.bss.o (.ovl)
            build/data/overlays/actors/z_en_viewer.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_ViewerSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_ViewerSegmentOvlEnd - _ovl_En_ViewerSegmentTextStart );
    _ovl_En_ViewerSegmentRomEnd = _RomSize;

    ..ovl_En_Viewer.bss ADDR(..ovl_En_Viewer) + SIZEOF(..ovl_En_Viewer) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_ViewerSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Viewer/z_en_viewer.o (.sbss)
            build/data/overlays/actors/z_en_viewer.data.o (.sbss)
            build/data/overlays/actors/z_en_viewer.bss.o (.sbss)
            build/data/overlays/actors/z_en_viewer.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Viewer/z_en_viewer.o (.scommon)
            build/data/overlays/actors/z_en_viewer.data.o (.scommon)
            build/data/overlays/actors/z_en_viewer.bss.o (.scommon)
            build/data/overlays/actors/z_en_viewer.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Viewer/z_en_viewer.o (.bss)
            build/data/overlays/actors/z_en_viewer.data.o (.bss)
            build/data/overlays/actors/z_en_viewer.bss.o (.bss)
            build/data/overlays/actors/z_en_viewer.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Viewer/z_en_viewer.o (COMMON)
            build/data/overlays/actors/z_en_viewer.data.o (COMMON)
            build/data/overlays/actors/z_en_viewer.bss.o (COMMON)
            build/data/overlays/actors/z_en_viewer.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_ViewerSegmentBssEnd = .;
        _ovl_En_ViewerSegmentEnd = .;
    }
    _ovl_En_ViewerSegmentBssSize = ABSOLUTE( _ovl_En_ViewerSegmentBssEnd - _ovl_En_ViewerSegmentBssStart );

    _ovl_En_VmSegmentRomStart = _RomSize;
    ..ovl_En_Vm : AT(_RomSize)
    {
        _ovl_En_VmSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_VmSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Vm/z_en_vm.o (.text)
            build/data/overlays/actors/z_en_vm.data.o (.text)
            build/data/overlays/actors/z_en_vm.reloc.o (.text)
        _ovl_En_VmSegmentTextEnd = .;
    _ovl_En_VmSegmentTextSize = ABSOLUTE( _ovl_En_VmSegmentTextEnd - _ovl_En_VmSegmentTextStart );
        _ovl_En_VmSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Vm/z_en_vm.o (.data)
            build/data/overlays/actors/z_en_vm.data.o (.data)
            build/data/overlays/actors/z_en_vm.reloc.o (.data)
        _ovl_En_VmSegmentDataEnd = .;
    _ovl_En_VmSegmentDataSize = ABSOLUTE( _ovl_En_VmSegmentDataEnd - _ovl_En_VmSegmentDataStart );
        _ovl_En_VmSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Vm/z_en_vm.o (.rodata)
            build/data/overlays/actors/z_en_vm.data.o (.rodata)
            build/data/overlays/actors/z_en_vm.reloc.o (.rodata)
        _ovl_En_VmSegmentRoDataEnd = .;
    _ovl_En_VmSegmentRoDataSize = ABSOLUTE( _ovl_En_VmSegmentRoDataEnd - _ovl_En_VmSegmentRoDataStart );
        _ovl_En_VmSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Vm/z_en_vm.o (.sdata)
            build/data/overlays/actors/z_en_vm.data.o (.sdata)
            build/data/overlays/actors/z_en_vm.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_VmSegmentSDataEnd = .;
        _ovl_En_VmSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Vm/z_en_vm.o (.ovl)
            build/data/overlays/actors/z_en_vm.data.o (.ovl)
            build/data/overlays/actors/z_en_vm.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_VmSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_VmSegmentOvlEnd - _ovl_En_VmSegmentTextStart );
    _ovl_En_VmSegmentRomEnd = _RomSize;

    ..ovl_En_Vm.bss ADDR(..ovl_En_Vm) + SIZEOF(..ovl_En_Vm) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_VmSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Vm/z_en_vm.o (.sbss)
            build/data/overlays/actors/z_en_vm.data.o (.sbss)
            build/data/overlays/actors/z_en_vm.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Vm/z_en_vm.o (.scommon)
            build/data/overlays/actors/z_en_vm.data.o (.scommon)
            build/data/overlays/actors/z_en_vm.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Vm/z_en_vm.o (.bss)
            build/data/overlays/actors/z_en_vm.data.o (.bss)
            build/data/overlays/actors/z_en_vm.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Vm/z_en_vm.o (COMMON)
            build/data/overlays/actors/z_en_vm.data.o (COMMON)
            build/data/overlays/actors/z_en_vm.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_VmSegmentBssEnd = .;
        _ovl_En_VmSegmentEnd = .;
    }
    _ovl_En_VmSegmentBssSize = ABSOLUTE( _ovl_En_VmSegmentBssEnd - _ovl_En_VmSegmentBssStart );

    _ovl_En_Wall_TuboSegmentRomStart = _RomSize;
    ..ovl_En_Wall_Tubo : AT(_RomSize)
    {
        _ovl_En_Wall_TuboSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Wall_TuboSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Wall_Tubo/z_en_wall_tubo.o (.text)
            build/data/overlays/actors/z_en_wall_tubo.data.o (.text)
            build/data/overlays/actors/z_en_wall_tubo.reloc.o (.text)
        _ovl_En_Wall_TuboSegmentTextEnd = .;
    _ovl_En_Wall_TuboSegmentTextSize = ABSOLUTE( _ovl_En_Wall_TuboSegmentTextEnd - _ovl_En_Wall_TuboSegmentTextStart );
        _ovl_En_Wall_TuboSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Wall_Tubo/z_en_wall_tubo.o (.data)
            build/data/overlays/actors/z_en_wall_tubo.data.o (.data)
            build/data/overlays/actors/z_en_wall_tubo.reloc.o (.data)
        _ovl_En_Wall_TuboSegmentDataEnd = .;
    _ovl_En_Wall_TuboSegmentDataSize = ABSOLUTE( _ovl_En_Wall_TuboSegmentDataEnd - _ovl_En_Wall_TuboSegmentDataStart );
        _ovl_En_Wall_TuboSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Wall_Tubo/z_en_wall_tubo.o (.rodata)
            build/data/overlays/actors/z_en_wall_tubo.data.o (.rodata)
            build/data/overlays/actors/z_en_wall_tubo.reloc.o (.rodata)
        _ovl_En_Wall_TuboSegmentRoDataEnd = .;
    _ovl_En_Wall_TuboSegmentRoDataSize = ABSOLUTE( _ovl_En_Wall_TuboSegmentRoDataEnd - _ovl_En_Wall_TuboSegmentRoDataStart );
        _ovl_En_Wall_TuboSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Wall_Tubo/z_en_wall_tubo.o (.sdata)
            build/data/overlays/actors/z_en_wall_tubo.data.o (.sdata)
            build/data/overlays/actors/z_en_wall_tubo.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Wall_TuboSegmentSDataEnd = .;
        _ovl_En_Wall_TuboSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Wall_Tubo/z_en_wall_tubo.o (.ovl)
            build/data/overlays/actors/z_en_wall_tubo.data.o (.ovl)
            build/data/overlays/actors/z_en_wall_tubo.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Wall_TuboSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Wall_TuboSegmentOvlEnd - _ovl_En_Wall_TuboSegmentTextStart );
    _ovl_En_Wall_TuboSegmentRomEnd = _RomSize;

    ..ovl_En_Wall_Tubo.bss ADDR(..ovl_En_Wall_Tubo) + SIZEOF(..ovl_En_Wall_Tubo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Wall_TuboSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Wall_Tubo/z_en_wall_tubo.o (.sbss)
            build/data/overlays/actors/z_en_wall_tubo.data.o (.sbss)
            build/data/overlays/actors/z_en_wall_tubo.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Wall_Tubo/z_en_wall_tubo.o (.scommon)
            build/data/overlays/actors/z_en_wall_tubo.data.o (.scommon)
            build/data/overlays/actors/z_en_wall_tubo.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Wall_Tubo/z_en_wall_tubo.o (.bss)
            build/data/overlays/actors/z_en_wall_tubo.data.o (.bss)
            build/data/overlays/actors/z_en_wall_tubo.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Wall_Tubo/z_en_wall_tubo.o (COMMON)
            build/data/overlays/actors/z_en_wall_tubo.data.o (COMMON)
            build/data/overlays/actors/z_en_wall_tubo.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Wall_TuboSegmentBssEnd = .;
        _ovl_En_Wall_TuboSegmentEnd = .;
    }
    _ovl_En_Wall_TuboSegmentBssSize = ABSOLUTE( _ovl_En_Wall_TuboSegmentBssEnd - _ovl_En_Wall_TuboSegmentBssStart );

    _ovl_En_WallmasSegmentRomStart = _RomSize;
    ..ovl_En_Wallmas : AT(_RomSize)
    {
        _ovl_En_WallmasSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_WallmasSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Wallmas/z_en_wallmas.o (.text)
            build/src/overlays/actors/ovl_En_Wallmas/ovl_En_Wallmas_reloc.o (.text)
        _ovl_En_WallmasSegmentTextEnd = .;
    _ovl_En_WallmasSegmentTextSize = ABSOLUTE( _ovl_En_WallmasSegmentTextEnd - _ovl_En_WallmasSegmentTextStart );
        _ovl_En_WallmasSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Wallmas/z_en_wallmas.o (.data)
            build/src/overlays/actors/ovl_En_Wallmas/ovl_En_Wallmas_reloc.o (.data)
        _ovl_En_WallmasSegmentDataEnd = .;
    _ovl_En_WallmasSegmentDataSize = ABSOLUTE( _ovl_En_WallmasSegmentDataEnd - _ovl_En_WallmasSegmentDataStart );
        _ovl_En_WallmasSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Wallmas/z_en_wallmas.o (.rodata)
            build/src/overlays/actors/ovl_En_Wallmas/ovl_En_Wallmas_reloc.o (.rodata)
        _ovl_En_WallmasSegmentRoDataEnd = .;
    _ovl_En_WallmasSegmentRoDataSize = ABSOLUTE( _ovl_En_WallmasSegmentRoDataEnd - _ovl_En_WallmasSegmentRoDataStart );
        _ovl_En_WallmasSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Wallmas/z_en_wallmas.o (.sdata)
            build/src/overlays/actors/ovl_En_Wallmas/ovl_En_Wallmas_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_WallmasSegmentSDataEnd = .;
        _ovl_En_WallmasSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Wallmas/z_en_wallmas.o (.ovl)
            build/src/overlays/actors/ovl_En_Wallmas/ovl_En_Wallmas_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_WallmasSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_WallmasSegmentOvlEnd - _ovl_En_WallmasSegmentTextStart );
    _ovl_En_WallmasSegmentRomEnd = _RomSize;

    ..ovl_En_Wallmas.bss ADDR(..ovl_En_Wallmas) + SIZEOF(..ovl_En_Wallmas) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_WallmasSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Wallmas/z_en_wallmas.o (.sbss)
            build/src/overlays/actors/ovl_En_Wallmas/ovl_En_Wallmas_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Wallmas/z_en_wallmas.o (.scommon)
            build/src/overlays/actors/ovl_En_Wallmas/ovl_En_Wallmas_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Wallmas/z_en_wallmas.o (.bss)
            build/src/overlays/actors/ovl_En_Wallmas/ovl_En_Wallmas_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Wallmas/z_en_wallmas.o (COMMON)
            build/src/overlays/actors/ovl_En_Wallmas/ovl_En_Wallmas_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_WallmasSegmentBssEnd = .;
        _ovl_En_WallmasSegmentEnd = .;
    }
    _ovl_En_WallmasSegmentBssSize = ABSOLUTE( _ovl_En_WallmasSegmentBssEnd - _ovl_En_WallmasSegmentBssStart );

    _ovl_En_Weather_TagSegmentRomStart = _RomSize;
    ..ovl_En_Weather_Tag : AT(_RomSize)
    {
        _ovl_En_Weather_TagSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Weather_TagSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Weather_Tag/z_en_weather_tag.o (.text)
            build/src/overlays/actors/ovl_En_Weather_Tag/ovl_En_Weather_Tag_reloc.o (.text)
        _ovl_En_Weather_TagSegmentTextEnd = .;
    _ovl_En_Weather_TagSegmentTextSize = ABSOLUTE( _ovl_En_Weather_TagSegmentTextEnd - _ovl_En_Weather_TagSegmentTextStart );
        _ovl_En_Weather_TagSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Weather_Tag/z_en_weather_tag.o (.data)
            build/src/overlays/actors/ovl_En_Weather_Tag/ovl_En_Weather_Tag_reloc.o (.data)
        _ovl_En_Weather_TagSegmentDataEnd = .;
    _ovl_En_Weather_TagSegmentDataSize = ABSOLUTE( _ovl_En_Weather_TagSegmentDataEnd - _ovl_En_Weather_TagSegmentDataStart );
        _ovl_En_Weather_TagSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Weather_Tag/z_en_weather_tag.o (.rodata)
            build/src/overlays/actors/ovl_En_Weather_Tag/ovl_En_Weather_Tag_reloc.o (.rodata)
        _ovl_En_Weather_TagSegmentRoDataEnd = .;
    _ovl_En_Weather_TagSegmentRoDataSize = ABSOLUTE( _ovl_En_Weather_TagSegmentRoDataEnd - _ovl_En_Weather_TagSegmentRoDataStart );
        _ovl_En_Weather_TagSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Weather_Tag/z_en_weather_tag.o (.sdata)
            build/src/overlays/actors/ovl_En_Weather_Tag/ovl_En_Weather_Tag_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Weather_TagSegmentSDataEnd = .;
        _ovl_En_Weather_TagSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Weather_Tag/z_en_weather_tag.o (.ovl)
            build/src/overlays/actors/ovl_En_Weather_Tag/ovl_En_Weather_Tag_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Weather_TagSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Weather_TagSegmentOvlEnd - _ovl_En_Weather_TagSegmentTextStart );
    _ovl_En_Weather_TagSegmentRomEnd = _RomSize;

    ..ovl_En_Weather_Tag.bss ADDR(..ovl_En_Weather_Tag) + SIZEOF(..ovl_En_Weather_Tag) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Weather_TagSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Weather_Tag/z_en_weather_tag.o (.sbss)
            build/src/overlays/actors/ovl_En_Weather_Tag/ovl_En_Weather_Tag_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Weather_Tag/z_en_weather_tag.o (.scommon)
            build/src/overlays/actors/ovl_En_Weather_Tag/ovl_En_Weather_Tag_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Weather_Tag/z_en_weather_tag.o (.bss)
            build/src/overlays/actors/ovl_En_Weather_Tag/ovl_En_Weather_Tag_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Weather_Tag/z_en_weather_tag.o (COMMON)
            build/src/overlays/actors/ovl_En_Weather_Tag/ovl_En_Weather_Tag_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Weather_TagSegmentBssEnd = .;
        _ovl_En_Weather_TagSegmentEnd = .;
    }
    _ovl_En_Weather_TagSegmentBssSize = ABSOLUTE( _ovl_En_Weather_TagSegmentBssEnd - _ovl_En_Weather_TagSegmentBssStart );

    _ovl_En_WeiyerSegmentRomStart = _RomSize;
    ..ovl_En_Weiyer : AT(_RomSize)
    {
        _ovl_En_WeiyerSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_WeiyerSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Weiyer/z_en_weiyer.o (.text)
            build/data/overlays/actors/z_en_weiyer.data.o (.text)
            build/data/overlays/actors/z_en_weiyer.reloc.o (.text)
        _ovl_En_WeiyerSegmentTextEnd = .;
    _ovl_En_WeiyerSegmentTextSize = ABSOLUTE( _ovl_En_WeiyerSegmentTextEnd - _ovl_En_WeiyerSegmentTextStart );
        _ovl_En_WeiyerSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Weiyer/z_en_weiyer.o (.data)
            build/data/overlays/actors/z_en_weiyer.data.o (.data)
            build/data/overlays/actors/z_en_weiyer.reloc.o (.data)
        _ovl_En_WeiyerSegmentDataEnd = .;
    _ovl_En_WeiyerSegmentDataSize = ABSOLUTE( _ovl_En_WeiyerSegmentDataEnd - _ovl_En_WeiyerSegmentDataStart );
        _ovl_En_WeiyerSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Weiyer/z_en_weiyer.o (.rodata)
            build/data/overlays/actors/z_en_weiyer.data.o (.rodata)
            build/data/overlays/actors/z_en_weiyer.reloc.o (.rodata)
        _ovl_En_WeiyerSegmentRoDataEnd = .;
    _ovl_En_WeiyerSegmentRoDataSize = ABSOLUTE( _ovl_En_WeiyerSegmentRoDataEnd - _ovl_En_WeiyerSegmentRoDataStart );
        _ovl_En_WeiyerSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Weiyer/z_en_weiyer.o (.sdata)
            build/data/overlays/actors/z_en_weiyer.data.o (.sdata)
            build/data/overlays/actors/z_en_weiyer.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_WeiyerSegmentSDataEnd = .;
        _ovl_En_WeiyerSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Weiyer/z_en_weiyer.o (.ovl)
            build/data/overlays/actors/z_en_weiyer.data.o (.ovl)
            build/data/overlays/actors/z_en_weiyer.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_WeiyerSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_WeiyerSegmentOvlEnd - _ovl_En_WeiyerSegmentTextStart );
    _ovl_En_WeiyerSegmentRomEnd = _RomSize;

    ..ovl_En_Weiyer.bss ADDR(..ovl_En_Weiyer) + SIZEOF(..ovl_En_Weiyer) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_WeiyerSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Weiyer/z_en_weiyer.o (.sbss)
            build/data/overlays/actors/z_en_weiyer.data.o (.sbss)
            build/data/overlays/actors/z_en_weiyer.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Weiyer/z_en_weiyer.o (.scommon)
            build/data/overlays/actors/z_en_weiyer.data.o (.scommon)
            build/data/overlays/actors/z_en_weiyer.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Weiyer/z_en_weiyer.o (.bss)
            build/data/overlays/actors/z_en_weiyer.data.o (.bss)
            build/data/overlays/actors/z_en_weiyer.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Weiyer/z_en_weiyer.o (COMMON)
            build/data/overlays/actors/z_en_weiyer.data.o (COMMON)
            build/data/overlays/actors/z_en_weiyer.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_WeiyerSegmentBssEnd = .;
        _ovl_En_WeiyerSegmentEnd = .;
    }
    _ovl_En_WeiyerSegmentBssSize = ABSOLUTE( _ovl_En_WeiyerSegmentBssEnd - _ovl_En_WeiyerSegmentBssStart );

    _ovl_En_WfSegmentRomStart = _RomSize;
    ..ovl_En_Wf : AT(_RomSize)
    {
        _ovl_En_WfSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_WfSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Wf/z_en_wf.o (.text)
            build/data/overlays/actors/z_en_wf.data.o (.text)
            build/data/overlays/actors/z_en_wf.reloc.o (.text)
        _ovl_En_WfSegmentTextEnd = .;
    _ovl_En_WfSegmentTextSize = ABSOLUTE( _ovl_En_WfSegmentTextEnd - _ovl_En_WfSegmentTextStart );
        _ovl_En_WfSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Wf/z_en_wf.o (.data)
            build/data/overlays/actors/z_en_wf.data.o (.data)
            build/data/overlays/actors/z_en_wf.reloc.o (.data)
        _ovl_En_WfSegmentDataEnd = .;
    _ovl_En_WfSegmentDataSize = ABSOLUTE( _ovl_En_WfSegmentDataEnd - _ovl_En_WfSegmentDataStart );
        _ovl_En_WfSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Wf/z_en_wf.o (.rodata)
            build/data/overlays/actors/z_en_wf.data.o (.rodata)
            build/data/overlays/actors/z_en_wf.reloc.o (.rodata)
        _ovl_En_WfSegmentRoDataEnd = .;
    _ovl_En_WfSegmentRoDataSize = ABSOLUTE( _ovl_En_WfSegmentRoDataEnd - _ovl_En_WfSegmentRoDataStart );
        _ovl_En_WfSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Wf/z_en_wf.o (.sdata)
            build/data/overlays/actors/z_en_wf.data.o (.sdata)
            build/data/overlays/actors/z_en_wf.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_WfSegmentSDataEnd = .;
        _ovl_En_WfSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Wf/z_en_wf.o (.ovl)
            build/data/overlays/actors/z_en_wf.data.o (.ovl)
            build/data/overlays/actors/z_en_wf.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_WfSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_WfSegmentOvlEnd - _ovl_En_WfSegmentTextStart );
    _ovl_En_WfSegmentRomEnd = _RomSize;

    ..ovl_En_Wf.bss ADDR(..ovl_En_Wf) + SIZEOF(..ovl_En_Wf) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_WfSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Wf/z_en_wf.o (.sbss)
            build/data/overlays/actors/z_en_wf.data.o (.sbss)
            build/data/overlays/actors/z_en_wf.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Wf/z_en_wf.o (.scommon)
            build/data/overlays/actors/z_en_wf.data.o (.scommon)
            build/data/overlays/actors/z_en_wf.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Wf/z_en_wf.o (.bss)
            build/data/overlays/actors/z_en_wf.data.o (.bss)
            build/data/overlays/actors/z_en_wf.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Wf/z_en_wf.o (COMMON)
            build/data/overlays/actors/z_en_wf.data.o (COMMON)
            build/data/overlays/actors/z_en_wf.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_WfSegmentBssEnd = .;
        _ovl_En_WfSegmentEnd = .;
    }
    _ovl_En_WfSegmentBssSize = ABSOLUTE( _ovl_En_WfSegmentBssEnd - _ovl_En_WfSegmentBssStart );

    _ovl_En_Wonder_ItemSegmentRomStart = _RomSize;
    ..ovl_En_Wonder_Item : AT(_RomSize)
    {
        _ovl_En_Wonder_ItemSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Wonder_ItemSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Item/z_en_wonder_item.o (.text)
            build/data/overlays/actors/z_en_wonder_item.data.o (.text)
            build/data/overlays/actors/z_en_wonder_item.bss.o (.text)
            build/data/overlays/actors/z_en_wonder_item.reloc.o (.text)
        _ovl_En_Wonder_ItemSegmentTextEnd = .;
    _ovl_En_Wonder_ItemSegmentTextSize = ABSOLUTE( _ovl_En_Wonder_ItemSegmentTextEnd - _ovl_En_Wonder_ItemSegmentTextStart );
        _ovl_En_Wonder_ItemSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Item/z_en_wonder_item.o (.data)
            build/data/overlays/actors/z_en_wonder_item.data.o (.data)
            build/data/overlays/actors/z_en_wonder_item.bss.o (.data)
            build/data/overlays/actors/z_en_wonder_item.reloc.o (.data)
        _ovl_En_Wonder_ItemSegmentDataEnd = .;
    _ovl_En_Wonder_ItemSegmentDataSize = ABSOLUTE( _ovl_En_Wonder_ItemSegmentDataEnd - _ovl_En_Wonder_ItemSegmentDataStart );
        _ovl_En_Wonder_ItemSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Item/z_en_wonder_item.o (.rodata)
            build/data/overlays/actors/z_en_wonder_item.data.o (.rodata)
            build/data/overlays/actors/z_en_wonder_item.bss.o (.rodata)
            build/data/overlays/actors/z_en_wonder_item.reloc.o (.rodata)
        _ovl_En_Wonder_ItemSegmentRoDataEnd = .;
    _ovl_En_Wonder_ItemSegmentRoDataSize = ABSOLUTE( _ovl_En_Wonder_ItemSegmentRoDataEnd - _ovl_En_Wonder_ItemSegmentRoDataStart );
        _ovl_En_Wonder_ItemSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Item/z_en_wonder_item.o (.sdata)
            build/data/overlays/actors/z_en_wonder_item.data.o (.sdata)
            build/data/overlays/actors/z_en_wonder_item.bss.o (.sdata)
            build/data/overlays/actors/z_en_wonder_item.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Wonder_ItemSegmentSDataEnd = .;
        _ovl_En_Wonder_ItemSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Item/z_en_wonder_item.o (.ovl)
            build/data/overlays/actors/z_en_wonder_item.data.o (.ovl)
            build/data/overlays/actors/z_en_wonder_item.bss.o (.ovl)
            build/data/overlays/actors/z_en_wonder_item.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Wonder_ItemSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Wonder_ItemSegmentOvlEnd - _ovl_En_Wonder_ItemSegmentTextStart );
    _ovl_En_Wonder_ItemSegmentRomEnd = _RomSize;

    ..ovl_En_Wonder_Item.bss ADDR(..ovl_En_Wonder_Item) + SIZEOF(..ovl_En_Wonder_Item) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Wonder_ItemSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Item/z_en_wonder_item.o (.sbss)
            build/data/overlays/actors/z_en_wonder_item.data.o (.sbss)
            build/data/overlays/actors/z_en_wonder_item.bss.o (.sbss)
            build/data/overlays/actors/z_en_wonder_item.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Wonder_Item/z_en_wonder_item.o (.scommon)
            build/data/overlays/actors/z_en_wonder_item.data.o (.scommon)
            build/data/overlays/actors/z_en_wonder_item.bss.o (.scommon)
            build/data/overlays/actors/z_en_wonder_item.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Wonder_Item/z_en_wonder_item.o (.bss)
            build/data/overlays/actors/z_en_wonder_item.data.o (.bss)
            build/data/overlays/actors/z_en_wonder_item.bss.o (.bss)
            build/data/overlays/actors/z_en_wonder_item.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Wonder_Item/z_en_wonder_item.o (COMMON)
            build/data/overlays/actors/z_en_wonder_item.data.o (COMMON)
            build/data/overlays/actors/z_en_wonder_item.bss.o (COMMON)
            build/data/overlays/actors/z_en_wonder_item.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Wonder_ItemSegmentBssEnd = .;
        _ovl_En_Wonder_ItemSegmentEnd = .;
    }
    _ovl_En_Wonder_ItemSegmentBssSize = ABSOLUTE( _ovl_En_Wonder_ItemSegmentBssEnd - _ovl_En_Wonder_ItemSegmentBssStart );

    _ovl_En_Wonder_TalkSegmentRomStart = _RomSize;
    ..ovl_En_Wonder_Talk : AT(_RomSize)
    {
        _ovl_En_Wonder_TalkSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Wonder_TalkSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Talk/z_en_wonder_talk.o (.text)
            build/src/overlays/actors/ovl_En_Wonder_Talk/ovl_En_Wonder_Talk_reloc.o (.text)
        _ovl_En_Wonder_TalkSegmentTextEnd = .;
    _ovl_En_Wonder_TalkSegmentTextSize = ABSOLUTE( _ovl_En_Wonder_TalkSegmentTextEnd - _ovl_En_Wonder_TalkSegmentTextStart );
        _ovl_En_Wonder_TalkSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Talk/z_en_wonder_talk.o (.data)
            build/src/overlays/actors/ovl_En_Wonder_Talk/ovl_En_Wonder_Talk_reloc.o (.data)
        _ovl_En_Wonder_TalkSegmentDataEnd = .;
    _ovl_En_Wonder_TalkSegmentDataSize = ABSOLUTE( _ovl_En_Wonder_TalkSegmentDataEnd - _ovl_En_Wonder_TalkSegmentDataStart );
        _ovl_En_Wonder_TalkSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Talk/z_en_wonder_talk.o (.rodata)
            build/src/overlays/actors/ovl_En_Wonder_Talk/ovl_En_Wonder_Talk_reloc.o (.rodata)
        _ovl_En_Wonder_TalkSegmentRoDataEnd = .;
    _ovl_En_Wonder_TalkSegmentRoDataSize = ABSOLUTE( _ovl_En_Wonder_TalkSegmentRoDataEnd - _ovl_En_Wonder_TalkSegmentRoDataStart );
        _ovl_En_Wonder_TalkSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Talk/z_en_wonder_talk.o (.sdata)
            build/src/overlays/actors/ovl_En_Wonder_Talk/ovl_En_Wonder_Talk_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Wonder_TalkSegmentSDataEnd = .;
        _ovl_En_Wonder_TalkSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Talk/z_en_wonder_talk.o (.ovl)
            build/src/overlays/actors/ovl_En_Wonder_Talk/ovl_En_Wonder_Talk_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Wonder_TalkSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Wonder_TalkSegmentOvlEnd - _ovl_En_Wonder_TalkSegmentTextStart );
    _ovl_En_Wonder_TalkSegmentRomEnd = _RomSize;

    ..ovl_En_Wonder_Talk.bss ADDR(..ovl_En_Wonder_Talk) + SIZEOF(..ovl_En_Wonder_Talk) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Wonder_TalkSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Talk/z_en_wonder_talk.o (.sbss)
            build/src/overlays/actors/ovl_En_Wonder_Talk/ovl_En_Wonder_Talk_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Wonder_Talk/z_en_wonder_talk.o (.scommon)
            build/src/overlays/actors/ovl_En_Wonder_Talk/ovl_En_Wonder_Talk_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Wonder_Talk/z_en_wonder_talk.o (.bss)
            build/src/overlays/actors/ovl_En_Wonder_Talk/ovl_En_Wonder_Talk_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Wonder_Talk/z_en_wonder_talk.o (COMMON)
            build/src/overlays/actors/ovl_En_Wonder_Talk/ovl_En_Wonder_Talk_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Wonder_TalkSegmentBssEnd = .;
        _ovl_En_Wonder_TalkSegmentEnd = .;
    }
    _ovl_En_Wonder_TalkSegmentBssSize = ABSOLUTE( _ovl_En_Wonder_TalkSegmentBssEnd - _ovl_En_Wonder_TalkSegmentBssStart );

    _ovl_En_Wonder_Talk2SegmentRomStart = _RomSize;
    ..ovl_En_Wonder_Talk2 : AT(_RomSize)
    {
        _ovl_En_Wonder_Talk2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Wonder_Talk2SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Talk2/z_en_wonder_talk2.o (.text)
            build/src/overlays/actors/ovl_En_Wonder_Talk2/ovl_En_Wonder_Talk2_reloc.o (.text)
        _ovl_En_Wonder_Talk2SegmentTextEnd = .;
    _ovl_En_Wonder_Talk2SegmentTextSize = ABSOLUTE( _ovl_En_Wonder_Talk2SegmentTextEnd - _ovl_En_Wonder_Talk2SegmentTextStart );
        _ovl_En_Wonder_Talk2SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Talk2/z_en_wonder_talk2.o (.data)
            build/src/overlays/actors/ovl_En_Wonder_Talk2/ovl_En_Wonder_Talk2_reloc.o (.data)
        _ovl_En_Wonder_Talk2SegmentDataEnd = .;
    _ovl_En_Wonder_Talk2SegmentDataSize = ABSOLUTE( _ovl_En_Wonder_Talk2SegmentDataEnd - _ovl_En_Wonder_Talk2SegmentDataStart );
        _ovl_En_Wonder_Talk2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Talk2/z_en_wonder_talk2.o (.rodata)
            build/src/overlays/actors/ovl_En_Wonder_Talk2/ovl_En_Wonder_Talk2_reloc.o (.rodata)
        _ovl_En_Wonder_Talk2SegmentRoDataEnd = .;
    _ovl_En_Wonder_Talk2SegmentRoDataSize = ABSOLUTE( _ovl_En_Wonder_Talk2SegmentRoDataEnd - _ovl_En_Wonder_Talk2SegmentRoDataStart );
        _ovl_En_Wonder_Talk2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Talk2/z_en_wonder_talk2.o (.sdata)
            build/src/overlays/actors/ovl_En_Wonder_Talk2/ovl_En_Wonder_Talk2_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Wonder_Talk2SegmentSDataEnd = .;
        _ovl_En_Wonder_Talk2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Talk2/z_en_wonder_talk2.o (.ovl)
            build/src/overlays/actors/ovl_En_Wonder_Talk2/ovl_En_Wonder_Talk2_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Wonder_Talk2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Wonder_Talk2SegmentOvlEnd - _ovl_En_Wonder_Talk2SegmentTextStart );
    _ovl_En_Wonder_Talk2SegmentRomEnd = _RomSize;

    ..ovl_En_Wonder_Talk2.bss ADDR(..ovl_En_Wonder_Talk2) + SIZEOF(..ovl_En_Wonder_Talk2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Wonder_Talk2SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Wonder_Talk2/z_en_wonder_talk2.o (.sbss)
            build/src/overlays/actors/ovl_En_Wonder_Talk2/ovl_En_Wonder_Talk2_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Wonder_Talk2/z_en_wonder_talk2.o (.scommon)
            build/src/overlays/actors/ovl_En_Wonder_Talk2/ovl_En_Wonder_Talk2_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Wonder_Talk2/z_en_wonder_talk2.o (.bss)
            build/src/overlays/actors/ovl_En_Wonder_Talk2/ovl_En_Wonder_Talk2_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Wonder_Talk2/z_en_wonder_talk2.o (COMMON)
            build/src/overlays/actors/ovl_En_Wonder_Talk2/ovl_En_Wonder_Talk2_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Wonder_Talk2SegmentBssEnd = .;
        _ovl_En_Wonder_Talk2SegmentEnd = .;
    }
    _ovl_En_Wonder_Talk2SegmentBssSize = ABSOLUTE( _ovl_En_Wonder_Talk2SegmentBssEnd - _ovl_En_Wonder_Talk2SegmentBssStart );

    _ovl_En_Wood02SegmentRomStart = _RomSize;
    ..ovl_En_Wood02 : AT(_RomSize)
    {
        _ovl_En_Wood02SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Wood02SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Wood02/z_en_wood02.o (.text)
            build/data/overlays/actors/z_en_wood02.data.o (.text)
            build/data/overlays/actors/z_en_wood02.bss.o (.text)
            build/data/overlays/actors/z_en_wood02.reloc.o (.text)
        _ovl_En_Wood02SegmentTextEnd = .;
    _ovl_En_Wood02SegmentTextSize = ABSOLUTE( _ovl_En_Wood02SegmentTextEnd - _ovl_En_Wood02SegmentTextStart );
        _ovl_En_Wood02SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Wood02/z_en_wood02.o (.data)
            build/data/overlays/actors/z_en_wood02.data.o (.data)
            build/data/overlays/actors/z_en_wood02.bss.o (.data)
            build/data/overlays/actors/z_en_wood02.reloc.o (.data)
        _ovl_En_Wood02SegmentDataEnd = .;
    _ovl_En_Wood02SegmentDataSize = ABSOLUTE( _ovl_En_Wood02SegmentDataEnd - _ovl_En_Wood02SegmentDataStart );
        _ovl_En_Wood02SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Wood02/z_en_wood02.o (.rodata)
            build/data/overlays/actors/z_en_wood02.data.o (.rodata)
            build/data/overlays/actors/z_en_wood02.bss.o (.rodata)
            build/data/overlays/actors/z_en_wood02.reloc.o (.rodata)
        _ovl_En_Wood02SegmentRoDataEnd = .;
    _ovl_En_Wood02SegmentRoDataSize = ABSOLUTE( _ovl_En_Wood02SegmentRoDataEnd - _ovl_En_Wood02SegmentRoDataStart );
        _ovl_En_Wood02SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Wood02/z_en_wood02.o (.sdata)
            build/data/overlays/actors/z_en_wood02.data.o (.sdata)
            build/data/overlays/actors/z_en_wood02.bss.o (.sdata)
            build/data/overlays/actors/z_en_wood02.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Wood02SegmentSDataEnd = .;
        _ovl_En_Wood02SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Wood02/z_en_wood02.o (.ovl)
            build/data/overlays/actors/z_en_wood02.data.o (.ovl)
            build/data/overlays/actors/z_en_wood02.bss.o (.ovl)
            build/data/overlays/actors/z_en_wood02.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Wood02SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Wood02SegmentOvlEnd - _ovl_En_Wood02SegmentTextStart );
    _ovl_En_Wood02SegmentRomEnd = _RomSize;

    ..ovl_En_Wood02.bss ADDR(..ovl_En_Wood02) + SIZEOF(..ovl_En_Wood02) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Wood02SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Wood02/z_en_wood02.o (.sbss)
            build/data/overlays/actors/z_en_wood02.data.o (.sbss)
            build/data/overlays/actors/z_en_wood02.bss.o (.sbss)
            build/data/overlays/actors/z_en_wood02.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Wood02/z_en_wood02.o (.scommon)
            build/data/overlays/actors/z_en_wood02.data.o (.scommon)
            build/data/overlays/actors/z_en_wood02.bss.o (.scommon)
            build/data/overlays/actors/z_en_wood02.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Wood02/z_en_wood02.o (.bss)
            build/data/overlays/actors/z_en_wood02.data.o (.bss)
            build/data/overlays/actors/z_en_wood02.bss.o (.bss)
            build/data/overlays/actors/z_en_wood02.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Wood02/z_en_wood02.o (COMMON)
            build/data/overlays/actors/z_en_wood02.data.o (COMMON)
            build/data/overlays/actors/z_en_wood02.bss.o (COMMON)
            build/data/overlays/actors/z_en_wood02.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Wood02SegmentBssEnd = .;
        _ovl_En_Wood02SegmentEnd = .;
    }
    _ovl_En_Wood02SegmentBssSize = ABSOLUTE( _ovl_En_Wood02SegmentBssEnd - _ovl_En_Wood02SegmentBssStart );

    _ovl_En_XcSegmentRomStart = _RomSize;
    ..ovl_En_Xc : AT(_RomSize)
    {
        _ovl_En_XcSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_XcSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Xc/z_en_xc.o (.text)
            build/data/overlays/actors/z_en_xc.data.o (.text)
            build/data/overlays/actors/z_en_xc.bss.o (.text)
            build/data/overlays/actors/z_en_xc.reloc.o (.text)
        _ovl_En_XcSegmentTextEnd = .;
    _ovl_En_XcSegmentTextSize = ABSOLUTE( _ovl_En_XcSegmentTextEnd - _ovl_En_XcSegmentTextStart );
        _ovl_En_XcSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Xc/z_en_xc.o (.data)
            build/data/overlays/actors/z_en_xc.data.o (.data)
            build/data/overlays/actors/z_en_xc.bss.o (.data)
            build/data/overlays/actors/z_en_xc.reloc.o (.data)
        _ovl_En_XcSegmentDataEnd = .;
    _ovl_En_XcSegmentDataSize = ABSOLUTE( _ovl_En_XcSegmentDataEnd - _ovl_En_XcSegmentDataStart );
        _ovl_En_XcSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Xc/z_en_xc.o (.rodata)
            build/data/overlays/actors/z_en_xc.data.o (.rodata)
            build/data/overlays/actors/z_en_xc.bss.o (.rodata)
            build/data/overlays/actors/z_en_xc.reloc.o (.rodata)
        _ovl_En_XcSegmentRoDataEnd = .;
    _ovl_En_XcSegmentRoDataSize = ABSOLUTE( _ovl_En_XcSegmentRoDataEnd - _ovl_En_XcSegmentRoDataStart );
        _ovl_En_XcSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Xc/z_en_xc.o (.sdata)
            build/data/overlays/actors/z_en_xc.data.o (.sdata)
            build/data/overlays/actors/z_en_xc.bss.o (.sdata)
            build/data/overlays/actors/z_en_xc.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_XcSegmentSDataEnd = .;
        _ovl_En_XcSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Xc/z_en_xc.o (.ovl)
            build/data/overlays/actors/z_en_xc.data.o (.ovl)
            build/data/overlays/actors/z_en_xc.bss.o (.ovl)
            build/data/overlays/actors/z_en_xc.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_XcSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_XcSegmentOvlEnd - _ovl_En_XcSegmentTextStart );
    _ovl_En_XcSegmentRomEnd = _RomSize;

    ..ovl_En_Xc.bss ADDR(..ovl_En_Xc) + SIZEOF(..ovl_En_Xc) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_XcSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Xc/z_en_xc.o (.sbss)
            build/data/overlays/actors/z_en_xc.data.o (.sbss)
            build/data/overlays/actors/z_en_xc.bss.o (.sbss)
            build/data/overlays/actors/z_en_xc.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Xc/z_en_xc.o (.scommon)
            build/data/overlays/actors/z_en_xc.data.o (.scommon)
            build/data/overlays/actors/z_en_xc.bss.o (.scommon)
            build/data/overlays/actors/z_en_xc.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Xc/z_en_xc.o (.bss)
            build/data/overlays/actors/z_en_xc.data.o (.bss)
            build/data/overlays/actors/z_en_xc.bss.o (.bss)
            build/data/overlays/actors/z_en_xc.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Xc/z_en_xc.o (COMMON)
            build/data/overlays/actors/z_en_xc.data.o (COMMON)
            build/data/overlays/actors/z_en_xc.bss.o (COMMON)
            build/data/overlays/actors/z_en_xc.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_XcSegmentBssEnd = .;
        _ovl_En_XcSegmentEnd = .;
    }
    _ovl_En_XcSegmentBssSize = ABSOLUTE( _ovl_En_XcSegmentBssEnd - _ovl_En_XcSegmentBssStart );

    _ovl_En_Yabusame_MarkSegmentRomStart = _RomSize;
    ..ovl_En_Yabusame_Mark : AT(_RomSize)
    {
        _ovl_En_Yabusame_MarkSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Yabusame_MarkSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Yabusame_Mark/z_en_yabusame_mark.o (.text)
            build/data/overlays/actors/z_en_yabusame_mark.data.o (.text)
            build/data/overlays/actors/z_en_yabusame_mark.reloc.o (.text)
        _ovl_En_Yabusame_MarkSegmentTextEnd = .;
    _ovl_En_Yabusame_MarkSegmentTextSize = ABSOLUTE( _ovl_En_Yabusame_MarkSegmentTextEnd - _ovl_En_Yabusame_MarkSegmentTextStart );
        _ovl_En_Yabusame_MarkSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Yabusame_Mark/z_en_yabusame_mark.o (.data)
            build/data/overlays/actors/z_en_yabusame_mark.data.o (.data)
            build/data/overlays/actors/z_en_yabusame_mark.reloc.o (.data)
        _ovl_En_Yabusame_MarkSegmentDataEnd = .;
    _ovl_En_Yabusame_MarkSegmentDataSize = ABSOLUTE( _ovl_En_Yabusame_MarkSegmentDataEnd - _ovl_En_Yabusame_MarkSegmentDataStart );
        _ovl_En_Yabusame_MarkSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Yabusame_Mark/z_en_yabusame_mark.o (.rodata)
            build/data/overlays/actors/z_en_yabusame_mark.data.o (.rodata)
            build/data/overlays/actors/z_en_yabusame_mark.reloc.o (.rodata)
        _ovl_En_Yabusame_MarkSegmentRoDataEnd = .;
    _ovl_En_Yabusame_MarkSegmentRoDataSize = ABSOLUTE( _ovl_En_Yabusame_MarkSegmentRoDataEnd - _ovl_En_Yabusame_MarkSegmentRoDataStart );
        _ovl_En_Yabusame_MarkSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Yabusame_Mark/z_en_yabusame_mark.o (.sdata)
            build/data/overlays/actors/z_en_yabusame_mark.data.o (.sdata)
            build/data/overlays/actors/z_en_yabusame_mark.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Yabusame_MarkSegmentSDataEnd = .;
        _ovl_En_Yabusame_MarkSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Yabusame_Mark/z_en_yabusame_mark.o (.ovl)
            build/data/overlays/actors/z_en_yabusame_mark.data.o (.ovl)
            build/data/overlays/actors/z_en_yabusame_mark.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Yabusame_MarkSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Yabusame_MarkSegmentOvlEnd - _ovl_En_Yabusame_MarkSegmentTextStart );
    _ovl_En_Yabusame_MarkSegmentRomEnd = _RomSize;

    ..ovl_En_Yabusame_Mark.bss ADDR(..ovl_En_Yabusame_Mark) + SIZEOF(..ovl_En_Yabusame_Mark) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Yabusame_MarkSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Yabusame_Mark/z_en_yabusame_mark.o (.sbss)
            build/data/overlays/actors/z_en_yabusame_mark.data.o (.sbss)
            build/data/overlays/actors/z_en_yabusame_mark.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Yabusame_Mark/z_en_yabusame_mark.o (.scommon)
            build/data/overlays/actors/z_en_yabusame_mark.data.o (.scommon)
            build/data/overlays/actors/z_en_yabusame_mark.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Yabusame_Mark/z_en_yabusame_mark.o (.bss)
            build/data/overlays/actors/z_en_yabusame_mark.data.o (.bss)
            build/data/overlays/actors/z_en_yabusame_mark.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Yabusame_Mark/z_en_yabusame_mark.o (COMMON)
            build/data/overlays/actors/z_en_yabusame_mark.data.o (COMMON)
            build/data/overlays/actors/z_en_yabusame_mark.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Yabusame_MarkSegmentBssEnd = .;
        _ovl_En_Yabusame_MarkSegmentEnd = .;
    }
    _ovl_En_Yabusame_MarkSegmentBssSize = ABSOLUTE( _ovl_En_Yabusame_MarkSegmentBssEnd - _ovl_En_Yabusame_MarkSegmentBssStart );

    _ovl_En_YukabyunSegmentRomStart = _RomSize;
    ..ovl_En_Yukabyun : AT(_RomSize)
    {
        _ovl_En_YukabyunSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_YukabyunSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Yukabyun/z_en_yukabyun.o (.text)
            build/src/overlays/actors/ovl_En_Yukabyun/ovl_En_Yukabyun_reloc.o (.text)
        _ovl_En_YukabyunSegmentTextEnd = .;
    _ovl_En_YukabyunSegmentTextSize = ABSOLUTE( _ovl_En_YukabyunSegmentTextEnd - _ovl_En_YukabyunSegmentTextStart );
        _ovl_En_YukabyunSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Yukabyun/z_en_yukabyun.o (.data)
            build/src/overlays/actors/ovl_En_Yukabyun/ovl_En_Yukabyun_reloc.o (.data)
        _ovl_En_YukabyunSegmentDataEnd = .;
    _ovl_En_YukabyunSegmentDataSize = ABSOLUTE( _ovl_En_YukabyunSegmentDataEnd - _ovl_En_YukabyunSegmentDataStart );
        _ovl_En_YukabyunSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Yukabyun/z_en_yukabyun.o (.rodata)
            build/src/overlays/actors/ovl_En_Yukabyun/ovl_En_Yukabyun_reloc.o (.rodata)
        _ovl_En_YukabyunSegmentRoDataEnd = .;
    _ovl_En_YukabyunSegmentRoDataSize = ABSOLUTE( _ovl_En_YukabyunSegmentRoDataEnd - _ovl_En_YukabyunSegmentRoDataStart );
        _ovl_En_YukabyunSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Yukabyun/z_en_yukabyun.o (.sdata)
            build/src/overlays/actors/ovl_En_Yukabyun/ovl_En_Yukabyun_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_YukabyunSegmentSDataEnd = .;
        _ovl_En_YukabyunSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Yukabyun/z_en_yukabyun.o (.ovl)
            build/src/overlays/actors/ovl_En_Yukabyun/ovl_En_Yukabyun_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_YukabyunSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_YukabyunSegmentOvlEnd - _ovl_En_YukabyunSegmentTextStart );
    _ovl_En_YukabyunSegmentRomEnd = _RomSize;

    ..ovl_En_Yukabyun.bss ADDR(..ovl_En_Yukabyun) + SIZEOF(..ovl_En_Yukabyun) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_YukabyunSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Yukabyun/z_en_yukabyun.o (.sbss)
            build/src/overlays/actors/ovl_En_Yukabyun/ovl_En_Yukabyun_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Yukabyun/z_en_yukabyun.o (.scommon)
            build/src/overlays/actors/ovl_En_Yukabyun/ovl_En_Yukabyun_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Yukabyun/z_en_yukabyun.o (.bss)
            build/src/overlays/actors/ovl_En_Yukabyun/ovl_En_Yukabyun_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Yukabyun/z_en_yukabyun.o (COMMON)
            build/src/overlays/actors/ovl_En_Yukabyun/ovl_En_Yukabyun_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_YukabyunSegmentBssEnd = .;
        _ovl_En_YukabyunSegmentEnd = .;
    }
    _ovl_En_YukabyunSegmentBssSize = ABSOLUTE( _ovl_En_YukabyunSegmentBssEnd - _ovl_En_YukabyunSegmentBssStart );

    _ovl_En_ZfSegmentRomStart = _RomSize;
    ..ovl_En_Zf : AT(_RomSize)
    {
        _ovl_En_ZfSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_ZfSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Zf/z_en_zf.o (.text)
            build/data/overlays/actors/z_en_zf.data.o (.text)
            build/data/overlays/actors/z_en_zf.bss.o (.text)
            build/data/overlays/actors/z_en_zf.reloc.o (.text)
        _ovl_En_ZfSegmentTextEnd = .;
    _ovl_En_ZfSegmentTextSize = ABSOLUTE( _ovl_En_ZfSegmentTextEnd - _ovl_En_ZfSegmentTextStart );
        _ovl_En_ZfSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Zf/z_en_zf.o (.data)
            build/data/overlays/actors/z_en_zf.data.o (.data)
            build/data/overlays/actors/z_en_zf.bss.o (.data)
            build/data/overlays/actors/z_en_zf.reloc.o (.data)
        _ovl_En_ZfSegmentDataEnd = .;
    _ovl_En_ZfSegmentDataSize = ABSOLUTE( _ovl_En_ZfSegmentDataEnd - _ovl_En_ZfSegmentDataStart );
        _ovl_En_ZfSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Zf/z_en_zf.o (.rodata)
            build/data/overlays/actors/z_en_zf.data.o (.rodata)
            build/data/overlays/actors/z_en_zf.bss.o (.rodata)
            build/data/overlays/actors/z_en_zf.reloc.o (.rodata)
        _ovl_En_ZfSegmentRoDataEnd = .;
    _ovl_En_ZfSegmentRoDataSize = ABSOLUTE( _ovl_En_ZfSegmentRoDataEnd - _ovl_En_ZfSegmentRoDataStart );
        _ovl_En_ZfSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Zf/z_en_zf.o (.sdata)
            build/data/overlays/actors/z_en_zf.data.o (.sdata)
            build/data/overlays/actors/z_en_zf.bss.o (.sdata)
            build/data/overlays/actors/z_en_zf.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_ZfSegmentSDataEnd = .;
        _ovl_En_ZfSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Zf/z_en_zf.o (.ovl)
            build/data/overlays/actors/z_en_zf.data.o (.ovl)
            build/data/overlays/actors/z_en_zf.bss.o (.ovl)
            build/data/overlays/actors/z_en_zf.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_ZfSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_ZfSegmentOvlEnd - _ovl_En_ZfSegmentTextStart );
    _ovl_En_ZfSegmentRomEnd = _RomSize;

    ..ovl_En_Zf.bss ADDR(..ovl_En_Zf) + SIZEOF(..ovl_En_Zf) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_ZfSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Zf/z_en_zf.o (.sbss)
            build/data/overlays/actors/z_en_zf.data.o (.sbss)
            build/data/overlays/actors/z_en_zf.bss.o (.sbss)
            build/data/overlays/actors/z_en_zf.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Zf/z_en_zf.o (.scommon)
            build/data/overlays/actors/z_en_zf.data.o (.scommon)
            build/data/overlays/actors/z_en_zf.bss.o (.scommon)
            build/data/overlays/actors/z_en_zf.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Zf/z_en_zf.o (.bss)
            build/data/overlays/actors/z_en_zf.data.o (.bss)
            build/data/overlays/actors/z_en_zf.bss.o (.bss)
            build/data/overlays/actors/z_en_zf.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Zf/z_en_zf.o (COMMON)
            build/data/overlays/actors/z_en_zf.data.o (COMMON)
            build/data/overlays/actors/z_en_zf.bss.o (COMMON)
            build/data/overlays/actors/z_en_zf.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_ZfSegmentBssEnd = .;
        _ovl_En_ZfSegmentEnd = .;
    }
    _ovl_En_ZfSegmentBssSize = ABSOLUTE( _ovl_En_ZfSegmentBssEnd - _ovl_En_ZfSegmentBssStart );

    _ovl_En_Zl1SegmentRomStart = _RomSize;
    ..ovl_En_Zl1 : AT(_RomSize)
    {
        _ovl_En_Zl1SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Zl1SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Zl1/z_en_zl1.o (.text)
            build/src/overlays/actors/ovl_En_Zl1/ovl_En_Zl1_reloc.o (.text)
        _ovl_En_Zl1SegmentTextEnd = .;
    _ovl_En_Zl1SegmentTextSize = ABSOLUTE( _ovl_En_Zl1SegmentTextEnd - _ovl_En_Zl1SegmentTextStart );
        _ovl_En_Zl1SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Zl1/z_en_zl1.o (.data)
            build/src/overlays/actors/ovl_En_Zl1/ovl_En_Zl1_reloc.o (.data)
        _ovl_En_Zl1SegmentDataEnd = .;
    _ovl_En_Zl1SegmentDataSize = ABSOLUTE( _ovl_En_Zl1SegmentDataEnd - _ovl_En_Zl1SegmentDataStart );
        _ovl_En_Zl1SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Zl1/z_en_zl1.o (.rodata)
            build/src/overlays/actors/ovl_En_Zl1/ovl_En_Zl1_reloc.o (.rodata)
        _ovl_En_Zl1SegmentRoDataEnd = .;
    _ovl_En_Zl1SegmentRoDataSize = ABSOLUTE( _ovl_En_Zl1SegmentRoDataEnd - _ovl_En_Zl1SegmentRoDataStart );
        _ovl_En_Zl1SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Zl1/z_en_zl1.o (.sdata)
            build/src/overlays/actors/ovl_En_Zl1/ovl_En_Zl1_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Zl1SegmentSDataEnd = .;
        _ovl_En_Zl1SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Zl1/z_en_zl1.o (.ovl)
            build/src/overlays/actors/ovl_En_Zl1/ovl_En_Zl1_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Zl1SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Zl1SegmentOvlEnd - _ovl_En_Zl1SegmentTextStart );
    _ovl_En_Zl1SegmentRomEnd = _RomSize;

    ..ovl_En_Zl1.bss ADDR(..ovl_En_Zl1) + SIZEOF(..ovl_En_Zl1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Zl1SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Zl1/z_en_zl1.o (.sbss)
            build/src/overlays/actors/ovl_En_Zl1/ovl_En_Zl1_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Zl1/z_en_zl1.o (.scommon)
            build/src/overlays/actors/ovl_En_Zl1/ovl_En_Zl1_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Zl1/z_en_zl1.o (.bss)
            build/src/overlays/actors/ovl_En_Zl1/ovl_En_Zl1_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Zl1/z_en_zl1.o (COMMON)
            build/src/overlays/actors/ovl_En_Zl1/ovl_En_Zl1_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Zl1SegmentBssEnd = .;
        _ovl_En_Zl1SegmentEnd = .;
    }
    _ovl_En_Zl1SegmentBssSize = ABSOLUTE( _ovl_En_Zl1SegmentBssEnd - _ovl_En_Zl1SegmentBssStart );

    _ovl_En_Zl2SegmentRomStart = _RomSize;
    ..ovl_En_Zl2 : AT(_RomSize)
    {
        _ovl_En_Zl2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Zl2SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Zl2/z_en_zl2.o (.text)
            build/src/overlays/actors/ovl_En_Zl2/ovl_En_Zl2_reloc.o (.text)
        _ovl_En_Zl2SegmentTextEnd = .;
    _ovl_En_Zl2SegmentTextSize = ABSOLUTE( _ovl_En_Zl2SegmentTextEnd - _ovl_En_Zl2SegmentTextStart );
        _ovl_En_Zl2SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Zl2/z_en_zl2.o (.data)
            build/src/overlays/actors/ovl_En_Zl2/ovl_En_Zl2_reloc.o (.data)
        _ovl_En_Zl2SegmentDataEnd = .;
    _ovl_En_Zl2SegmentDataSize = ABSOLUTE( _ovl_En_Zl2SegmentDataEnd - _ovl_En_Zl2SegmentDataStart );
        _ovl_En_Zl2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Zl2/z_en_zl2.o (.rodata)
            build/src/overlays/actors/ovl_En_Zl2/ovl_En_Zl2_reloc.o (.rodata)
        _ovl_En_Zl2SegmentRoDataEnd = .;
    _ovl_En_Zl2SegmentRoDataSize = ABSOLUTE( _ovl_En_Zl2SegmentRoDataEnd - _ovl_En_Zl2SegmentRoDataStart );
        _ovl_En_Zl2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Zl2/z_en_zl2.o (.sdata)
            build/src/overlays/actors/ovl_En_Zl2/ovl_En_Zl2_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Zl2SegmentSDataEnd = .;
        _ovl_En_Zl2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Zl2/z_en_zl2.o (.ovl)
            build/src/overlays/actors/ovl_En_Zl2/ovl_En_Zl2_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Zl2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Zl2SegmentOvlEnd - _ovl_En_Zl2SegmentTextStart );
    _ovl_En_Zl2SegmentRomEnd = _RomSize;

    ..ovl_En_Zl2.bss ADDR(..ovl_En_Zl2) + SIZEOF(..ovl_En_Zl2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Zl2SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Zl2/z_en_zl2.o (.sbss)
            build/src/overlays/actors/ovl_En_Zl2/ovl_En_Zl2_reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Zl2/z_en_zl2.o (.scommon)
            build/src/overlays/actors/ovl_En_Zl2/ovl_En_Zl2_reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Zl2/z_en_zl2.o (.bss)
            build/src/overlays/actors/ovl_En_Zl2/ovl_En_Zl2_reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Zl2/z_en_zl2.o (COMMON)
            build/src/overlays/actors/ovl_En_Zl2/ovl_En_Zl2_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Zl2SegmentBssEnd = .;
        _ovl_En_Zl2SegmentEnd = .;
    }
    _ovl_En_Zl2SegmentBssSize = ABSOLUTE( _ovl_En_Zl2SegmentBssEnd - _ovl_En_Zl2SegmentBssStart );

    _ovl_En_Zl3SegmentRomStart = _RomSize;
    ..ovl_En_Zl3 : AT(_RomSize)
    {
        _ovl_En_Zl3SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Zl3SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Zl3/z_en_zl3.o (.text)
            build/data/overlays/actors/z_en_zl3.data.o (.text)
            build/data/overlays/actors/z_en_zl3.reloc.o (.text)
        _ovl_En_Zl3SegmentTextEnd = .;
    _ovl_En_Zl3SegmentTextSize = ABSOLUTE( _ovl_En_Zl3SegmentTextEnd - _ovl_En_Zl3SegmentTextStart );
        _ovl_En_Zl3SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Zl3/z_en_zl3.o (.data)
            build/data/overlays/actors/z_en_zl3.data.o (.data)
            build/data/overlays/actors/z_en_zl3.reloc.o (.data)
        _ovl_En_Zl3SegmentDataEnd = .;
    _ovl_En_Zl3SegmentDataSize = ABSOLUTE( _ovl_En_Zl3SegmentDataEnd - _ovl_En_Zl3SegmentDataStart );
        _ovl_En_Zl3SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Zl3/z_en_zl3.o (.rodata)
            build/data/overlays/actors/z_en_zl3.data.o (.rodata)
            build/data/overlays/actors/z_en_zl3.reloc.o (.rodata)
        _ovl_En_Zl3SegmentRoDataEnd = .;
    _ovl_En_Zl3SegmentRoDataSize = ABSOLUTE( _ovl_En_Zl3SegmentRoDataEnd - _ovl_En_Zl3SegmentRoDataStart );
        _ovl_En_Zl3SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Zl3/z_en_zl3.o (.sdata)
            build/data/overlays/actors/z_en_zl3.data.o (.sdata)
            build/data/overlays/actors/z_en_zl3.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Zl3SegmentSDataEnd = .;
        _ovl_En_Zl3SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Zl3/z_en_zl3.o (.ovl)
            build/data/overlays/actors/z_en_zl3.data.o (.ovl)
            build/data/overlays/actors/z_en_zl3.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Zl3SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Zl3SegmentOvlEnd - _ovl_En_Zl3SegmentTextStart );
    _ovl_En_Zl3SegmentRomEnd = _RomSize;

    ..ovl_En_Zl3.bss ADDR(..ovl_En_Zl3) + SIZEOF(..ovl_En_Zl3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Zl3SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Zl3/z_en_zl3.o (.sbss)
            build/data/overlays/actors/z_en_zl3.data.o (.sbss)
            build/data/overlays/actors/z_en_zl3.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Zl3/z_en_zl3.o (.scommon)
            build/data/overlays/actors/z_en_zl3.data.o (.scommon)
            build/data/overlays/actors/z_en_zl3.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Zl3/z_en_zl3.o (.bss)
            build/data/overlays/actors/z_en_zl3.data.o (.bss)
            build/data/overlays/actors/z_en_zl3.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Zl3/z_en_zl3.o (COMMON)
            build/data/overlays/actors/z_en_zl3.data.o (COMMON)
            build/data/overlays/actors/z_en_zl3.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Zl3SegmentBssEnd = .;
        _ovl_En_Zl3SegmentEnd = .;
    }
    _ovl_En_Zl3SegmentBssSize = ABSOLUTE( _ovl_En_Zl3SegmentBssEnd - _ovl_En_Zl3SegmentBssStart );

    _ovl_En_Zl4SegmentRomStart = _RomSize;
    ..ovl_En_Zl4 : AT(_RomSize)
    {
        _ovl_En_Zl4SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_Zl4SegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Zl4/z_en_zl4.o (.text)
            build/data/overlays/actors/z_en_zl4.data.o (.text)
            build/data/overlays/actors/z_en_zl4.reloc.o (.text)
        _ovl_En_Zl4SegmentTextEnd = .;
    _ovl_En_Zl4SegmentTextSize = ABSOLUTE( _ovl_En_Zl4SegmentTextEnd - _ovl_En_Zl4SegmentTextStart );
        _ovl_En_Zl4SegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Zl4/z_en_zl4.o (.data)
            build/data/overlays/actors/z_en_zl4.data.o (.data)
            build/data/overlays/actors/z_en_zl4.reloc.o (.data)
        _ovl_En_Zl4SegmentDataEnd = .;
    _ovl_En_Zl4SegmentDataSize = ABSOLUTE( _ovl_En_Zl4SegmentDataEnd - _ovl_En_Zl4SegmentDataStart );
        _ovl_En_Zl4SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Zl4/z_en_zl4.o (.rodata)
            build/data/overlays/actors/z_en_zl4.data.o (.rodata)
            build/data/overlays/actors/z_en_zl4.reloc.o (.rodata)
        _ovl_En_Zl4SegmentRoDataEnd = .;
    _ovl_En_Zl4SegmentRoDataSize = ABSOLUTE( _ovl_En_Zl4SegmentRoDataEnd - _ovl_En_Zl4SegmentRoDataStart );
        _ovl_En_Zl4SegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Zl4/z_en_zl4.o (.sdata)
            build/data/overlays/actors/z_en_zl4.data.o (.sdata)
            build/data/overlays/actors/z_en_zl4.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_Zl4SegmentSDataEnd = .;
        _ovl_En_Zl4SegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Zl4/z_en_zl4.o (.ovl)
            build/data/overlays/actors/z_en_zl4.data.o (.ovl)
            build/data/overlays/actors/z_en_zl4.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_Zl4SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_Zl4SegmentOvlEnd - _ovl_En_Zl4SegmentTextStart );
    _ovl_En_Zl4SegmentRomEnd = _RomSize;

    ..ovl_En_Zl4.bss ADDR(..ovl_En_Zl4) + SIZEOF(..ovl_En_Zl4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_Zl4SegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Zl4/z_en_zl4.o (.sbss)
            build/data/overlays/actors/z_en_zl4.data.o (.sbss)
            build/data/overlays/actors/z_en_zl4.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Zl4/z_en_zl4.o (.scommon)
            build/data/overlays/actors/z_en_zl4.data.o (.scommon)
            build/data/overlays/actors/z_en_zl4.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Zl4/z_en_zl4.o (.bss)
            build/data/overlays/actors/z_en_zl4.data.o (.bss)
            build/data/overlays/actors/z_en_zl4.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Zl4/z_en_zl4.o (COMMON)
            build/data/overlays/actors/z_en_zl4.data.o (COMMON)
            build/data/overlays/actors/z_en_zl4.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_Zl4SegmentBssEnd = .;
        _ovl_En_Zl4SegmentEnd = .;
    }
    _ovl_En_Zl4SegmentBssSize = ABSOLUTE( _ovl_En_Zl4SegmentBssEnd - _ovl_En_Zl4SegmentBssStart );

    _ovl_En_ZoSegmentRomStart = _RomSize;
    ..ovl_En_Zo : AT(_RomSize)
    {
        _ovl_En_ZoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_ZoSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_Zo/z_en_zo.o (.text)
            build/data/overlays/actors/z_en_zo.data.o (.text)
            build/data/overlays/actors/z_en_zo.reloc.o (.text)
        _ovl_En_ZoSegmentTextEnd = .;
    _ovl_En_ZoSegmentTextSize = ABSOLUTE( _ovl_En_ZoSegmentTextEnd - _ovl_En_ZoSegmentTextStart );
        _ovl_En_ZoSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_Zo/z_en_zo.o (.data)
            build/data/overlays/actors/z_en_zo.data.o (.data)
            build/data/overlays/actors/z_en_zo.reloc.o (.data)
        _ovl_En_ZoSegmentDataEnd = .;
    _ovl_En_ZoSegmentDataSize = ABSOLUTE( _ovl_En_ZoSegmentDataEnd - _ovl_En_ZoSegmentDataStart );
        _ovl_En_ZoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_Zo/z_en_zo.o (.rodata)
            build/data/overlays/actors/z_en_zo.data.o (.rodata)
            build/data/overlays/actors/z_en_zo.reloc.o (.rodata)
        _ovl_En_ZoSegmentRoDataEnd = .;
    _ovl_En_ZoSegmentRoDataSize = ABSOLUTE( _ovl_En_ZoSegmentRoDataEnd - _ovl_En_ZoSegmentRoDataStart );
        _ovl_En_ZoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_Zo/z_en_zo.o (.sdata)
            build/data/overlays/actors/z_en_zo.data.o (.sdata)
            build/data/overlays/actors/z_en_zo.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_ZoSegmentSDataEnd = .;
        _ovl_En_ZoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_Zo/z_en_zo.o (.ovl)
            build/data/overlays/actors/z_en_zo.data.o (.ovl)
            build/data/overlays/actors/z_en_zo.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_ZoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_ZoSegmentOvlEnd - _ovl_En_ZoSegmentTextStart );
    _ovl_En_ZoSegmentRomEnd = _RomSize;

    ..ovl_En_Zo.bss ADDR(..ovl_En_Zo) + SIZEOF(..ovl_En_Zo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_ZoSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_Zo/z_en_zo.o (.sbss)
            build/data/overlays/actors/z_en_zo.data.o (.sbss)
            build/data/overlays/actors/z_en_zo.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_Zo/z_en_zo.o (.scommon)
            build/data/overlays/actors/z_en_zo.data.o (.scommon)
            build/data/overlays/actors/z_en_zo.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_Zo/z_en_zo.o (.bss)
            build/data/overlays/actors/z_en_zo.data.o (.bss)
            build/data/overlays/actors/z_en_zo.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_Zo/z_en_zo.o (COMMON)
            build/data/overlays/actors/z_en_zo.data.o (COMMON)
            build/data/overlays/actors/z_en_zo.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_ZoSegmentBssEnd = .;
        _ovl_En_ZoSegmentEnd = .;
    }
    _ovl_En_ZoSegmentBssSize = ABSOLUTE( _ovl_En_ZoSegmentBssEnd - _ovl_En_ZoSegmentBssStart );

    _ovl_En_fHGSegmentRomStart = _RomSize;
    ..ovl_En_fHG : AT(_RomSize)
    {
        _ovl_En_fHGSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_En_fHGSegmentTextStart = .;
            build/src/overlays/actors/ovl_En_fHG/z_en_fhg.o (.text)
            build/data/overlays/actors/z_en_fhg.data.o (.text)
            build/data/overlays/actors/z_en_fhg.reloc.o (.text)
        _ovl_En_fHGSegmentTextEnd = .;
    _ovl_En_fHGSegmentTextSize = ABSOLUTE( _ovl_En_fHGSegmentTextEnd - _ovl_En_fHGSegmentTextStart );
        _ovl_En_fHGSegmentDataStart = .;
            build/src/overlays/actors/ovl_En_fHG/z_en_fhg.o (.data)
            build/data/overlays/actors/z_en_fhg.data.o (.data)
            build/data/overlays/actors/z_en_fhg.reloc.o (.data)
        _ovl_En_fHGSegmentDataEnd = .;
    _ovl_En_fHGSegmentDataSize = ABSOLUTE( _ovl_En_fHGSegmentDataEnd - _ovl_En_fHGSegmentDataStart );
        _ovl_En_fHGSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_En_fHG/z_en_fhg.o (.rodata)
            build/data/overlays/actors/z_en_fhg.data.o (.rodata)
            build/data/overlays/actors/z_en_fhg.reloc.o (.rodata)
        _ovl_En_fHGSegmentRoDataEnd = .;
    _ovl_En_fHGSegmentRoDataSize = ABSOLUTE( _ovl_En_fHGSegmentRoDataEnd - _ovl_En_fHGSegmentRoDataStart );
        _ovl_En_fHGSegmentSDataStart = .;
            build/src/overlays/actors/ovl_En_fHG/z_en_fhg.o (.sdata)
            build/data/overlays/actors/z_en_fhg.data.o (.sdata)
            build/data/overlays/actors/z_en_fhg.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_En_fHGSegmentSDataEnd = .;
        _ovl_En_fHGSegmentOvlStart = .;
            build/src/overlays/actors/ovl_En_fHG/z_en_fhg.o (.ovl)
            build/data/overlays/actors/z_en_fhg.data.o (.ovl)
            build/data/overlays/actors/z_en_fhg.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_En_fHGSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_En_fHGSegmentOvlEnd - _ovl_En_fHGSegmentTextStart );
    _ovl_En_fHGSegmentRomEnd = _RomSize;

    ..ovl_En_fHG.bss ADDR(..ovl_En_fHG) + SIZEOF(..ovl_En_fHG) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_En_fHGSegmentBssStart = .;
            build/src/overlays/actors/ovl_En_fHG/z_en_fhg.o (.sbss)
            build/data/overlays/actors/z_en_fhg.data.o (.sbss)
            build/data/overlays/actors/z_en_fhg.reloc.o (.sbss)
            build/src/overlays/actors/ovl_En_fHG/z_en_fhg.o (.scommon)
            build/data/overlays/actors/z_en_fhg.data.o (.scommon)
            build/data/overlays/actors/z_en_fhg.reloc.o (.scommon)
            build/src/overlays/actors/ovl_En_fHG/z_en_fhg.o (.bss)
            build/data/overlays/actors/z_en_fhg.data.o (.bss)
            build/data/overlays/actors/z_en_fhg.reloc.o (.bss)
            build/src/overlays/actors/ovl_En_fHG/z_en_fhg.o (COMMON)
            build/data/overlays/actors/z_en_fhg.data.o (COMMON)
            build/data/overlays/actors/z_en_fhg.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_En_fHGSegmentBssEnd = .;
        _ovl_En_fHGSegmentEnd = .;
    }
    _ovl_En_fHGSegmentBssSize = ABSOLUTE( _ovl_En_fHGSegmentBssEnd - _ovl_En_fHGSegmentBssStart );

    _ovl_End_TitleSegmentRomStart = _RomSize;
    ..ovl_End_Title : AT(_RomSize)
    {
        _ovl_End_TitleSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_End_TitleSegmentTextStart = .;
            build/src/overlays/actors/ovl_End_Title/z_end_title.o (.text)
            build/src/overlays/actors/ovl_End_Title/ovl_End_Title_reloc.o (.text)
        _ovl_End_TitleSegmentTextEnd = .;
    _ovl_End_TitleSegmentTextSize = ABSOLUTE( _ovl_End_TitleSegmentTextEnd - _ovl_End_TitleSegmentTextStart );
        _ovl_End_TitleSegmentDataStart = .;
            build/src/overlays/actors/ovl_End_Title/z_end_title.o (.data)
            build/src/overlays/actors/ovl_End_Title/ovl_End_Title_reloc.o (.data)
        _ovl_End_TitleSegmentDataEnd = .;
    _ovl_End_TitleSegmentDataSize = ABSOLUTE( _ovl_End_TitleSegmentDataEnd - _ovl_End_TitleSegmentDataStart );
        _ovl_End_TitleSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_End_Title/z_end_title.o (.rodata)
            build/src/overlays/actors/ovl_End_Title/ovl_End_Title_reloc.o (.rodata)
        _ovl_End_TitleSegmentRoDataEnd = .;
    _ovl_End_TitleSegmentRoDataSize = ABSOLUTE( _ovl_End_TitleSegmentRoDataEnd - _ovl_End_TitleSegmentRoDataStart );
        _ovl_End_TitleSegmentSDataStart = .;
            build/src/overlays/actors/ovl_End_Title/z_end_title.o (.sdata)
            build/src/overlays/actors/ovl_End_Title/ovl_End_Title_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_End_TitleSegmentSDataEnd = .;
        _ovl_End_TitleSegmentOvlStart = .;
            build/src/overlays/actors/ovl_End_Title/z_end_title.o (.ovl)
            build/src/overlays/actors/ovl_End_Title/ovl_End_Title_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_End_TitleSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_End_TitleSegmentOvlEnd - _ovl_End_TitleSegmentTextStart );
    _ovl_End_TitleSegmentRomEnd = _RomSize;

    ..ovl_End_Title.bss ADDR(..ovl_End_Title) + SIZEOF(..ovl_End_Title) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_End_TitleSegmentBssStart = .;
            build/src/overlays/actors/ovl_End_Title/z_end_title.o (.sbss)
            build/src/overlays/actors/ovl_End_Title/ovl_End_Title_reloc.o (.sbss)
            build/src/overlays/actors/ovl_End_Title/z_end_title.o (.scommon)
            build/src/overlays/actors/ovl_End_Title/ovl_End_Title_reloc.o (.scommon)
            build/src/overlays/actors/ovl_End_Title/z_end_title.o (.bss)
            build/src/overlays/actors/ovl_End_Title/ovl_End_Title_reloc.o (.bss)
            build/src/overlays/actors/ovl_End_Title/z_end_title.o (COMMON)
            build/src/overlays/actors/ovl_End_Title/ovl_End_Title_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_End_TitleSegmentBssEnd = .;
        _ovl_End_TitleSegmentEnd = .;
    }
    _ovl_End_TitleSegmentBssSize = ABSOLUTE( _ovl_End_TitleSegmentBssEnd - _ovl_End_TitleSegmentBssStart );

    _ovl_FishingSegmentRomStart = _RomSize;
    ..ovl_Fishing : AT(_RomSize)
    {
        _ovl_FishingSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_FishingSegmentTextStart = .;
            build/src/overlays/actors/ovl_Fishing/z_fishing.o (.text)
            build/data/overlays/actors/z_fishing.data.o (.text)
            build/data/overlays/actors/z_fishing.bss.o (.text)
            build/data/overlays/actors/z_fishing.reloc.o (.text)
        _ovl_FishingSegmentTextEnd = .;
    _ovl_FishingSegmentTextSize = ABSOLUTE( _ovl_FishingSegmentTextEnd - _ovl_FishingSegmentTextStart );
        _ovl_FishingSegmentDataStart = .;
            build/src/overlays/actors/ovl_Fishing/z_fishing.o (.data)
            build/data/overlays/actors/z_fishing.data.o (.data)
            build/data/overlays/actors/z_fishing.bss.o (.data)
            build/data/overlays/actors/z_fishing.reloc.o (.data)
        _ovl_FishingSegmentDataEnd = .;
    _ovl_FishingSegmentDataSize = ABSOLUTE( _ovl_FishingSegmentDataEnd - _ovl_FishingSegmentDataStart );
        _ovl_FishingSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Fishing/z_fishing.o (.rodata)
            build/data/overlays/actors/z_fishing.data.o (.rodata)
            build/data/overlays/actors/z_fishing.bss.o (.rodata)
            build/data/overlays/actors/z_fishing.reloc.o (.rodata)
        _ovl_FishingSegmentRoDataEnd = .;
    _ovl_FishingSegmentRoDataSize = ABSOLUTE( _ovl_FishingSegmentRoDataEnd - _ovl_FishingSegmentRoDataStart );
        _ovl_FishingSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Fishing/z_fishing.o (.sdata)
            build/data/overlays/actors/z_fishing.data.o (.sdata)
            build/data/overlays/actors/z_fishing.bss.o (.sdata)
            build/data/overlays/actors/z_fishing.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_FishingSegmentSDataEnd = .;
        _ovl_FishingSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Fishing/z_fishing.o (.ovl)
            build/data/overlays/actors/z_fishing.data.o (.ovl)
            build/data/overlays/actors/z_fishing.bss.o (.ovl)
            build/data/overlays/actors/z_fishing.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_FishingSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_FishingSegmentOvlEnd - _ovl_FishingSegmentTextStart );
    _ovl_FishingSegmentRomEnd = _RomSize;

    ..ovl_Fishing.bss ADDR(..ovl_Fishing) + SIZEOF(..ovl_Fishing) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_FishingSegmentBssStart = .;
            build/src/overlays/actors/ovl_Fishing/z_fishing.o (.sbss)
            build/data/overlays/actors/z_fishing.data.o (.sbss)
            build/data/overlays/actors/z_fishing.bss.o (.sbss)
            build/data/overlays/actors/z_fishing.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Fishing/z_fishing.o (.scommon)
            build/data/overlays/actors/z_fishing.data.o (.scommon)
            build/data/overlays/actors/z_fishing.bss.o (.scommon)
            build/data/overlays/actors/z_fishing.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Fishing/z_fishing.o (.bss)
            build/data/overlays/actors/z_fishing.data.o (.bss)
            build/data/overlays/actors/z_fishing.bss.o (.bss)
            build/data/overlays/actors/z_fishing.reloc.o (.bss)
            build/src/overlays/actors/ovl_Fishing/z_fishing.o (COMMON)
            build/data/overlays/actors/z_fishing.data.o (COMMON)
            build/data/overlays/actors/z_fishing.bss.o (COMMON)
            build/data/overlays/actors/z_fishing.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_FishingSegmentBssEnd = .;
        _ovl_FishingSegmentEnd = .;
    }
    _ovl_FishingSegmentBssSize = ABSOLUTE( _ovl_FishingSegmentBssEnd - _ovl_FishingSegmentBssStart );

    _ovl_Item_B_HeartSegmentRomStart = _RomSize;
    ..ovl_Item_B_Heart : AT(_RomSize)
    {
        _ovl_Item_B_HeartSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Item_B_HeartSegmentTextStart = .;
            build/src/overlays/actors/ovl_Item_B_Heart/z_item_b_heart.o (.text)
            build/src/overlays/actors/ovl_Item_B_Heart/ovl_Item_B_Heart_reloc.o (.text)
        _ovl_Item_B_HeartSegmentTextEnd = .;
    _ovl_Item_B_HeartSegmentTextSize = ABSOLUTE( _ovl_Item_B_HeartSegmentTextEnd - _ovl_Item_B_HeartSegmentTextStart );
        _ovl_Item_B_HeartSegmentDataStart = .;
            build/src/overlays/actors/ovl_Item_B_Heart/z_item_b_heart.o (.data)
            build/src/overlays/actors/ovl_Item_B_Heart/ovl_Item_B_Heart_reloc.o (.data)
        _ovl_Item_B_HeartSegmentDataEnd = .;
    _ovl_Item_B_HeartSegmentDataSize = ABSOLUTE( _ovl_Item_B_HeartSegmentDataEnd - _ovl_Item_B_HeartSegmentDataStart );
        _ovl_Item_B_HeartSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Item_B_Heart/z_item_b_heart.o (.rodata)
            build/src/overlays/actors/ovl_Item_B_Heart/ovl_Item_B_Heart_reloc.o (.rodata)
        _ovl_Item_B_HeartSegmentRoDataEnd = .;
    _ovl_Item_B_HeartSegmentRoDataSize = ABSOLUTE( _ovl_Item_B_HeartSegmentRoDataEnd - _ovl_Item_B_HeartSegmentRoDataStart );
        _ovl_Item_B_HeartSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Item_B_Heart/z_item_b_heart.o (.sdata)
            build/src/overlays/actors/ovl_Item_B_Heart/ovl_Item_B_Heart_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Item_B_HeartSegmentSDataEnd = .;
        _ovl_Item_B_HeartSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Item_B_Heart/z_item_b_heart.o (.ovl)
            build/src/overlays/actors/ovl_Item_B_Heart/ovl_Item_B_Heart_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Item_B_HeartSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Item_B_HeartSegmentOvlEnd - _ovl_Item_B_HeartSegmentTextStart );
    _ovl_Item_B_HeartSegmentRomEnd = _RomSize;

    ..ovl_Item_B_Heart.bss ADDR(..ovl_Item_B_Heart) + SIZEOF(..ovl_Item_B_Heart) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Item_B_HeartSegmentBssStart = .;
            build/src/overlays/actors/ovl_Item_B_Heart/z_item_b_heart.o (.sbss)
            build/src/overlays/actors/ovl_Item_B_Heart/ovl_Item_B_Heart_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Item_B_Heart/z_item_b_heart.o (.scommon)
            build/src/overlays/actors/ovl_Item_B_Heart/ovl_Item_B_Heart_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Item_B_Heart/z_item_b_heart.o (.bss)
            build/src/overlays/actors/ovl_Item_B_Heart/ovl_Item_B_Heart_reloc.o (.bss)
            build/src/overlays/actors/ovl_Item_B_Heart/z_item_b_heart.o (COMMON)
            build/src/overlays/actors/ovl_Item_B_Heart/ovl_Item_B_Heart_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Item_B_HeartSegmentBssEnd = .;
        _ovl_Item_B_HeartSegmentEnd = .;
    }
    _ovl_Item_B_HeartSegmentBssSize = ABSOLUTE( _ovl_Item_B_HeartSegmentBssEnd - _ovl_Item_B_HeartSegmentBssStart );

    _ovl_Item_EtceteraSegmentRomStart = _RomSize;
    ..ovl_Item_Etcetera : AT(_RomSize)
    {
        _ovl_Item_EtceteraSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Item_EtceteraSegmentTextStart = .;
            build/src/overlays/actors/ovl_Item_Etcetera/z_item_etcetera.o (.text)
            build/src/overlays/actors/ovl_Item_Etcetera/ovl_Item_Etcetera_reloc.o (.text)
        _ovl_Item_EtceteraSegmentTextEnd = .;
    _ovl_Item_EtceteraSegmentTextSize = ABSOLUTE( _ovl_Item_EtceteraSegmentTextEnd - _ovl_Item_EtceteraSegmentTextStart );
        _ovl_Item_EtceteraSegmentDataStart = .;
            build/src/overlays/actors/ovl_Item_Etcetera/z_item_etcetera.o (.data)
            build/src/overlays/actors/ovl_Item_Etcetera/ovl_Item_Etcetera_reloc.o (.data)
        _ovl_Item_EtceteraSegmentDataEnd = .;
    _ovl_Item_EtceteraSegmentDataSize = ABSOLUTE( _ovl_Item_EtceteraSegmentDataEnd - _ovl_Item_EtceteraSegmentDataStart );
        _ovl_Item_EtceteraSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Item_Etcetera/z_item_etcetera.o (.rodata)
            build/src/overlays/actors/ovl_Item_Etcetera/ovl_Item_Etcetera_reloc.o (.rodata)
        _ovl_Item_EtceteraSegmentRoDataEnd = .;
    _ovl_Item_EtceteraSegmentRoDataSize = ABSOLUTE( _ovl_Item_EtceteraSegmentRoDataEnd - _ovl_Item_EtceteraSegmentRoDataStart );
        _ovl_Item_EtceteraSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Item_Etcetera/z_item_etcetera.o (.sdata)
            build/src/overlays/actors/ovl_Item_Etcetera/ovl_Item_Etcetera_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Item_EtceteraSegmentSDataEnd = .;
        _ovl_Item_EtceteraSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Item_Etcetera/z_item_etcetera.o (.ovl)
            build/src/overlays/actors/ovl_Item_Etcetera/ovl_Item_Etcetera_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Item_EtceteraSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Item_EtceteraSegmentOvlEnd - _ovl_Item_EtceteraSegmentTextStart );
    _ovl_Item_EtceteraSegmentRomEnd = _RomSize;

    ..ovl_Item_Etcetera.bss ADDR(..ovl_Item_Etcetera) + SIZEOF(..ovl_Item_Etcetera) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Item_EtceteraSegmentBssStart = .;
            build/src/overlays/actors/ovl_Item_Etcetera/z_item_etcetera.o (.sbss)
            build/src/overlays/actors/ovl_Item_Etcetera/ovl_Item_Etcetera_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Item_Etcetera/z_item_etcetera.o (.scommon)
            build/src/overlays/actors/ovl_Item_Etcetera/ovl_Item_Etcetera_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Item_Etcetera/z_item_etcetera.o (.bss)
            build/src/overlays/actors/ovl_Item_Etcetera/ovl_Item_Etcetera_reloc.o (.bss)
            build/src/overlays/actors/ovl_Item_Etcetera/z_item_etcetera.o (COMMON)
            build/src/overlays/actors/ovl_Item_Etcetera/ovl_Item_Etcetera_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Item_EtceteraSegmentBssEnd = .;
        _ovl_Item_EtceteraSegmentEnd = .;
    }
    _ovl_Item_EtceteraSegmentBssSize = ABSOLUTE( _ovl_Item_EtceteraSegmentBssEnd - _ovl_Item_EtceteraSegmentBssStart );

    _ovl_Item_InboxSegmentRomStart = _RomSize;
    ..ovl_Item_Inbox : AT(_RomSize)
    {
        _ovl_Item_InboxSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Item_InboxSegmentTextStart = .;
            build/src/overlays/actors/ovl_Item_Inbox/z_item_inbox.o (.text)
            build/src/overlays/actors/ovl_Item_Inbox/ovl_Item_Inbox_reloc.o (.text)
        _ovl_Item_InboxSegmentTextEnd = .;
    _ovl_Item_InboxSegmentTextSize = ABSOLUTE( _ovl_Item_InboxSegmentTextEnd - _ovl_Item_InboxSegmentTextStart );
        _ovl_Item_InboxSegmentDataStart = .;
            build/src/overlays/actors/ovl_Item_Inbox/z_item_inbox.o (.data)
            build/src/overlays/actors/ovl_Item_Inbox/ovl_Item_Inbox_reloc.o (.data)
        _ovl_Item_InboxSegmentDataEnd = .;
    _ovl_Item_InboxSegmentDataSize = ABSOLUTE( _ovl_Item_InboxSegmentDataEnd - _ovl_Item_InboxSegmentDataStart );
        _ovl_Item_InboxSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Item_Inbox/z_item_inbox.o (.rodata)
            build/src/overlays/actors/ovl_Item_Inbox/ovl_Item_Inbox_reloc.o (.rodata)
        _ovl_Item_InboxSegmentRoDataEnd = .;
    _ovl_Item_InboxSegmentRoDataSize = ABSOLUTE( _ovl_Item_InboxSegmentRoDataEnd - _ovl_Item_InboxSegmentRoDataStart );
        _ovl_Item_InboxSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Item_Inbox/z_item_inbox.o (.sdata)
            build/src/overlays/actors/ovl_Item_Inbox/ovl_Item_Inbox_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Item_InboxSegmentSDataEnd = .;
        _ovl_Item_InboxSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Item_Inbox/z_item_inbox.o (.ovl)
            build/src/overlays/actors/ovl_Item_Inbox/ovl_Item_Inbox_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Item_InboxSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Item_InboxSegmentOvlEnd - _ovl_Item_InboxSegmentTextStart );
    _ovl_Item_InboxSegmentRomEnd = _RomSize;

    ..ovl_Item_Inbox.bss ADDR(..ovl_Item_Inbox) + SIZEOF(..ovl_Item_Inbox) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Item_InboxSegmentBssStart = .;
            build/src/overlays/actors/ovl_Item_Inbox/z_item_inbox.o (.sbss)
            build/src/overlays/actors/ovl_Item_Inbox/ovl_Item_Inbox_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Item_Inbox/z_item_inbox.o (.scommon)
            build/src/overlays/actors/ovl_Item_Inbox/ovl_Item_Inbox_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Item_Inbox/z_item_inbox.o (.bss)
            build/src/overlays/actors/ovl_Item_Inbox/ovl_Item_Inbox_reloc.o (.bss)
            build/src/overlays/actors/ovl_Item_Inbox/z_item_inbox.o (COMMON)
            build/src/overlays/actors/ovl_Item_Inbox/ovl_Item_Inbox_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Item_InboxSegmentBssEnd = .;
        _ovl_Item_InboxSegmentEnd = .;
    }
    _ovl_Item_InboxSegmentBssSize = ABSOLUTE( _ovl_Item_InboxSegmentBssEnd - _ovl_Item_InboxSegmentBssStart );

    _ovl_Item_OcarinaSegmentRomStart = _RomSize;
    ..ovl_Item_Ocarina : AT(_RomSize)
    {
        _ovl_Item_OcarinaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Item_OcarinaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Item_Ocarina/z_item_ocarina.o (.text)
            build/src/overlays/actors/ovl_Item_Ocarina/ovl_Item_Ocarina_reloc.o (.text)
        _ovl_Item_OcarinaSegmentTextEnd = .;
    _ovl_Item_OcarinaSegmentTextSize = ABSOLUTE( _ovl_Item_OcarinaSegmentTextEnd - _ovl_Item_OcarinaSegmentTextStart );
        _ovl_Item_OcarinaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Item_Ocarina/z_item_ocarina.o (.data)
            build/src/overlays/actors/ovl_Item_Ocarina/ovl_Item_Ocarina_reloc.o (.data)
        _ovl_Item_OcarinaSegmentDataEnd = .;
    _ovl_Item_OcarinaSegmentDataSize = ABSOLUTE( _ovl_Item_OcarinaSegmentDataEnd - _ovl_Item_OcarinaSegmentDataStart );
        _ovl_Item_OcarinaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Item_Ocarina/z_item_ocarina.o (.rodata)
            build/src/overlays/actors/ovl_Item_Ocarina/ovl_Item_Ocarina_reloc.o (.rodata)
        _ovl_Item_OcarinaSegmentRoDataEnd = .;
    _ovl_Item_OcarinaSegmentRoDataSize = ABSOLUTE( _ovl_Item_OcarinaSegmentRoDataEnd - _ovl_Item_OcarinaSegmentRoDataStart );
        _ovl_Item_OcarinaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Item_Ocarina/z_item_ocarina.o (.sdata)
            build/src/overlays/actors/ovl_Item_Ocarina/ovl_Item_Ocarina_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Item_OcarinaSegmentSDataEnd = .;
        _ovl_Item_OcarinaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Item_Ocarina/z_item_ocarina.o (.ovl)
            build/src/overlays/actors/ovl_Item_Ocarina/ovl_Item_Ocarina_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Item_OcarinaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Item_OcarinaSegmentOvlEnd - _ovl_Item_OcarinaSegmentTextStart );
    _ovl_Item_OcarinaSegmentRomEnd = _RomSize;

    ..ovl_Item_Ocarina.bss ADDR(..ovl_Item_Ocarina) + SIZEOF(..ovl_Item_Ocarina) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Item_OcarinaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Item_Ocarina/z_item_ocarina.o (.sbss)
            build/src/overlays/actors/ovl_Item_Ocarina/ovl_Item_Ocarina_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Item_Ocarina/z_item_ocarina.o (.scommon)
            build/src/overlays/actors/ovl_Item_Ocarina/ovl_Item_Ocarina_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Item_Ocarina/z_item_ocarina.o (.bss)
            build/src/overlays/actors/ovl_Item_Ocarina/ovl_Item_Ocarina_reloc.o (.bss)
            build/src/overlays/actors/ovl_Item_Ocarina/z_item_ocarina.o (COMMON)
            build/src/overlays/actors/ovl_Item_Ocarina/ovl_Item_Ocarina_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Item_OcarinaSegmentBssEnd = .;
        _ovl_Item_OcarinaSegmentEnd = .;
    }
    _ovl_Item_OcarinaSegmentBssSize = ABSOLUTE( _ovl_Item_OcarinaSegmentBssEnd - _ovl_Item_OcarinaSegmentBssStart );

    _ovl_Item_ShieldSegmentRomStart = _RomSize;
    ..ovl_Item_Shield : AT(_RomSize)
    {
        _ovl_Item_ShieldSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Item_ShieldSegmentTextStart = .;
            build/src/overlays/actors/ovl_Item_Shield/z_item_shield.o (.text)
            build/data/overlays/actors/z_item_shield.data.o (.text)
            build/data/overlays/actors/z_item_shield.reloc.o (.text)
        _ovl_Item_ShieldSegmentTextEnd = .;
    _ovl_Item_ShieldSegmentTextSize = ABSOLUTE( _ovl_Item_ShieldSegmentTextEnd - _ovl_Item_ShieldSegmentTextStart );
        _ovl_Item_ShieldSegmentDataStart = .;
            build/src/overlays/actors/ovl_Item_Shield/z_item_shield.o (.data)
            build/data/overlays/actors/z_item_shield.data.o (.data)
            build/data/overlays/actors/z_item_shield.reloc.o (.data)
        _ovl_Item_ShieldSegmentDataEnd = .;
    _ovl_Item_ShieldSegmentDataSize = ABSOLUTE( _ovl_Item_ShieldSegmentDataEnd - _ovl_Item_ShieldSegmentDataStart );
        _ovl_Item_ShieldSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Item_Shield/z_item_shield.o (.rodata)
            build/data/overlays/actors/z_item_shield.data.o (.rodata)
            build/data/overlays/actors/z_item_shield.reloc.o (.rodata)
        _ovl_Item_ShieldSegmentRoDataEnd = .;
    _ovl_Item_ShieldSegmentRoDataSize = ABSOLUTE( _ovl_Item_ShieldSegmentRoDataEnd - _ovl_Item_ShieldSegmentRoDataStart );
        _ovl_Item_ShieldSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Item_Shield/z_item_shield.o (.sdata)
            build/data/overlays/actors/z_item_shield.data.o (.sdata)
            build/data/overlays/actors/z_item_shield.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Item_ShieldSegmentSDataEnd = .;
        _ovl_Item_ShieldSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Item_Shield/z_item_shield.o (.ovl)
            build/data/overlays/actors/z_item_shield.data.o (.ovl)
            build/data/overlays/actors/z_item_shield.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Item_ShieldSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Item_ShieldSegmentOvlEnd - _ovl_Item_ShieldSegmentTextStart );
    _ovl_Item_ShieldSegmentRomEnd = _RomSize;

    ..ovl_Item_Shield.bss ADDR(..ovl_Item_Shield) + SIZEOF(..ovl_Item_Shield) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Item_ShieldSegmentBssStart = .;
            build/src/overlays/actors/ovl_Item_Shield/z_item_shield.o (.sbss)
            build/data/overlays/actors/z_item_shield.data.o (.sbss)
            build/data/overlays/actors/z_item_shield.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Item_Shield/z_item_shield.o (.scommon)
            build/data/overlays/actors/z_item_shield.data.o (.scommon)
            build/data/overlays/actors/z_item_shield.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Item_Shield/z_item_shield.o (.bss)
            build/data/overlays/actors/z_item_shield.data.o (.bss)
            build/data/overlays/actors/z_item_shield.reloc.o (.bss)
            build/src/overlays/actors/ovl_Item_Shield/z_item_shield.o (COMMON)
            build/data/overlays/actors/z_item_shield.data.o (COMMON)
            build/data/overlays/actors/z_item_shield.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Item_ShieldSegmentBssEnd = .;
        _ovl_Item_ShieldSegmentEnd = .;
    }
    _ovl_Item_ShieldSegmentBssSize = ABSOLUTE( _ovl_Item_ShieldSegmentBssEnd - _ovl_Item_ShieldSegmentBssStart );

    _ovl_Magic_DarkSegmentRomStart = _RomSize;
    ..ovl_Magic_Dark : AT(_RomSize)
    {
        _ovl_Magic_DarkSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Magic_DarkSegmentTextStart = .;
            build/src/overlays/actors/ovl_Magic_Dark/z_magic_dark.o (.text)
            build/data/overlays/actors/z_magic_dark.data.o (.text)
            build/data/overlays/actors/z_magic_dark.reloc.o (.text)
        _ovl_Magic_DarkSegmentTextEnd = .;
    _ovl_Magic_DarkSegmentTextSize = ABSOLUTE( _ovl_Magic_DarkSegmentTextEnd - _ovl_Magic_DarkSegmentTextStart );
        _ovl_Magic_DarkSegmentDataStart = .;
            build/src/overlays/actors/ovl_Magic_Dark/z_magic_dark.o (.data)
            build/data/overlays/actors/z_magic_dark.data.o (.data)
            build/data/overlays/actors/z_magic_dark.reloc.o (.data)
        _ovl_Magic_DarkSegmentDataEnd = .;
    _ovl_Magic_DarkSegmentDataSize = ABSOLUTE( _ovl_Magic_DarkSegmentDataEnd - _ovl_Magic_DarkSegmentDataStart );
        _ovl_Magic_DarkSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Magic_Dark/z_magic_dark.o (.rodata)
            build/data/overlays/actors/z_magic_dark.data.o (.rodata)
            build/data/overlays/actors/z_magic_dark.reloc.o (.rodata)
        _ovl_Magic_DarkSegmentRoDataEnd = .;
    _ovl_Magic_DarkSegmentRoDataSize = ABSOLUTE( _ovl_Magic_DarkSegmentRoDataEnd - _ovl_Magic_DarkSegmentRoDataStart );
        _ovl_Magic_DarkSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Magic_Dark/z_magic_dark.o (.sdata)
            build/data/overlays/actors/z_magic_dark.data.o (.sdata)
            build/data/overlays/actors/z_magic_dark.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Magic_DarkSegmentSDataEnd = .;
        _ovl_Magic_DarkSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Magic_Dark/z_magic_dark.o (.ovl)
            build/data/overlays/actors/z_magic_dark.data.o (.ovl)
            build/data/overlays/actors/z_magic_dark.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Magic_DarkSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Magic_DarkSegmentOvlEnd - _ovl_Magic_DarkSegmentTextStart );
    _ovl_Magic_DarkSegmentRomEnd = _RomSize;

    ..ovl_Magic_Dark.bss ADDR(..ovl_Magic_Dark) + SIZEOF(..ovl_Magic_Dark) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Magic_DarkSegmentBssStart = .;
            build/src/overlays/actors/ovl_Magic_Dark/z_magic_dark.o (.sbss)
            build/data/overlays/actors/z_magic_dark.data.o (.sbss)
            build/data/overlays/actors/z_magic_dark.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Magic_Dark/z_magic_dark.o (.scommon)
            build/data/overlays/actors/z_magic_dark.data.o (.scommon)
            build/data/overlays/actors/z_magic_dark.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Magic_Dark/z_magic_dark.o (.bss)
            build/data/overlays/actors/z_magic_dark.data.o (.bss)
            build/data/overlays/actors/z_magic_dark.reloc.o (.bss)
            build/src/overlays/actors/ovl_Magic_Dark/z_magic_dark.o (COMMON)
            build/data/overlays/actors/z_magic_dark.data.o (COMMON)
            build/data/overlays/actors/z_magic_dark.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Magic_DarkSegmentBssEnd = .;
        _ovl_Magic_DarkSegmentEnd = .;
    }
    _ovl_Magic_DarkSegmentBssSize = ABSOLUTE( _ovl_Magic_DarkSegmentBssEnd - _ovl_Magic_DarkSegmentBssStart );

    _ovl_Magic_FireSegmentRomStart = _RomSize;
    ..ovl_Magic_Fire : AT(_RomSize)
    {
        _ovl_Magic_FireSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Magic_FireSegmentTextStart = .;
            build/src/overlays/actors/ovl_Magic_Fire/z_magic_fire.o (.text)
            build/data/overlays/actors/z_magic_fire.data.o (.text)
            build/data/overlays/actors/z_magic_fire.reloc.o (.text)
        _ovl_Magic_FireSegmentTextEnd = .;
    _ovl_Magic_FireSegmentTextSize = ABSOLUTE( _ovl_Magic_FireSegmentTextEnd - _ovl_Magic_FireSegmentTextStart );
        _ovl_Magic_FireSegmentDataStart = .;
            build/src/overlays/actors/ovl_Magic_Fire/z_magic_fire.o (.data)
            build/data/overlays/actors/z_magic_fire.data.o (.data)
            build/data/overlays/actors/z_magic_fire.reloc.o (.data)
        _ovl_Magic_FireSegmentDataEnd = .;
    _ovl_Magic_FireSegmentDataSize = ABSOLUTE( _ovl_Magic_FireSegmentDataEnd - _ovl_Magic_FireSegmentDataStart );
        _ovl_Magic_FireSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Magic_Fire/z_magic_fire.o (.rodata)
            build/data/overlays/actors/z_magic_fire.data.o (.rodata)
            build/data/overlays/actors/z_magic_fire.reloc.o (.rodata)
        _ovl_Magic_FireSegmentRoDataEnd = .;
    _ovl_Magic_FireSegmentRoDataSize = ABSOLUTE( _ovl_Magic_FireSegmentRoDataEnd - _ovl_Magic_FireSegmentRoDataStart );
        _ovl_Magic_FireSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Magic_Fire/z_magic_fire.o (.sdata)
            build/data/overlays/actors/z_magic_fire.data.o (.sdata)
            build/data/overlays/actors/z_magic_fire.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Magic_FireSegmentSDataEnd = .;
        _ovl_Magic_FireSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Magic_Fire/z_magic_fire.o (.ovl)
            build/data/overlays/actors/z_magic_fire.data.o (.ovl)
            build/data/overlays/actors/z_magic_fire.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Magic_FireSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Magic_FireSegmentOvlEnd - _ovl_Magic_FireSegmentTextStart );
    _ovl_Magic_FireSegmentRomEnd = _RomSize;

    ..ovl_Magic_Fire.bss ADDR(..ovl_Magic_Fire) + SIZEOF(..ovl_Magic_Fire) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Magic_FireSegmentBssStart = .;
            build/src/overlays/actors/ovl_Magic_Fire/z_magic_fire.o (.sbss)
            build/data/overlays/actors/z_magic_fire.data.o (.sbss)
            build/data/overlays/actors/z_magic_fire.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Magic_Fire/z_magic_fire.o (.scommon)
            build/data/overlays/actors/z_magic_fire.data.o (.scommon)
            build/data/overlays/actors/z_magic_fire.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Magic_Fire/z_magic_fire.o (.bss)
            build/data/overlays/actors/z_magic_fire.data.o (.bss)
            build/data/overlays/actors/z_magic_fire.reloc.o (.bss)
            build/src/overlays/actors/ovl_Magic_Fire/z_magic_fire.o (COMMON)
            build/data/overlays/actors/z_magic_fire.data.o (COMMON)
            build/data/overlays/actors/z_magic_fire.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Magic_FireSegmentBssEnd = .;
        _ovl_Magic_FireSegmentEnd = .;
    }
    _ovl_Magic_FireSegmentBssSize = ABSOLUTE( _ovl_Magic_FireSegmentBssEnd - _ovl_Magic_FireSegmentBssStart );

    _ovl_Magic_WindSegmentRomStart = _RomSize;
    ..ovl_Magic_Wind : AT(_RomSize)
    {
        _ovl_Magic_WindSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Magic_WindSegmentTextStart = .;
            build/src/overlays/actors/ovl_Magic_Wind/z_magic_wind.o (.text)
            build/src/overlays/actors/ovl_Magic_Wind/ovl_Magic_Wind_reloc.o (.text)
        _ovl_Magic_WindSegmentTextEnd = .;
    _ovl_Magic_WindSegmentTextSize = ABSOLUTE( _ovl_Magic_WindSegmentTextEnd - _ovl_Magic_WindSegmentTextStart );
        _ovl_Magic_WindSegmentDataStart = .;
            build/src/overlays/actors/ovl_Magic_Wind/z_magic_wind.o (.data)
            build/src/overlays/actors/ovl_Magic_Wind/ovl_Magic_Wind_reloc.o (.data)
        _ovl_Magic_WindSegmentDataEnd = .;
    _ovl_Magic_WindSegmentDataSize = ABSOLUTE( _ovl_Magic_WindSegmentDataEnd - _ovl_Magic_WindSegmentDataStart );
        _ovl_Magic_WindSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Magic_Wind/z_magic_wind.o (.rodata)
            build/src/overlays/actors/ovl_Magic_Wind/ovl_Magic_Wind_reloc.o (.rodata)
        _ovl_Magic_WindSegmentRoDataEnd = .;
    _ovl_Magic_WindSegmentRoDataSize = ABSOLUTE( _ovl_Magic_WindSegmentRoDataEnd - _ovl_Magic_WindSegmentRoDataStart );
        _ovl_Magic_WindSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Magic_Wind/z_magic_wind.o (.sdata)
            build/src/overlays/actors/ovl_Magic_Wind/ovl_Magic_Wind_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Magic_WindSegmentSDataEnd = .;
        _ovl_Magic_WindSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Magic_Wind/z_magic_wind.o (.ovl)
            build/src/overlays/actors/ovl_Magic_Wind/ovl_Magic_Wind_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Magic_WindSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Magic_WindSegmentOvlEnd - _ovl_Magic_WindSegmentTextStart );
    _ovl_Magic_WindSegmentRomEnd = _RomSize;

    ..ovl_Magic_Wind.bss ADDR(..ovl_Magic_Wind) + SIZEOF(..ovl_Magic_Wind) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Magic_WindSegmentBssStart = .;
            build/src/overlays/actors/ovl_Magic_Wind/z_magic_wind.o (.sbss)
            build/src/overlays/actors/ovl_Magic_Wind/ovl_Magic_Wind_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Magic_Wind/z_magic_wind.o (.scommon)
            build/src/overlays/actors/ovl_Magic_Wind/ovl_Magic_Wind_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Magic_Wind/z_magic_wind.o (.bss)
            build/src/overlays/actors/ovl_Magic_Wind/ovl_Magic_Wind_reloc.o (.bss)
            build/src/overlays/actors/ovl_Magic_Wind/z_magic_wind.o (COMMON)
            build/src/overlays/actors/ovl_Magic_Wind/ovl_Magic_Wind_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Magic_WindSegmentBssEnd = .;
        _ovl_Magic_WindSegmentEnd = .;
    }
    _ovl_Magic_WindSegmentBssSize = ABSOLUTE( _ovl_Magic_WindSegmentBssEnd - _ovl_Magic_WindSegmentBssStart );

    _ovl_Mir_RaySegmentRomStart = _RomSize;
    ..ovl_Mir_Ray : AT(_RomSize)
    {
        _ovl_Mir_RaySegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Mir_RaySegmentTextStart = .;
            build/src/overlays/actors/ovl_Mir_Ray/z_mir_ray.o (.text)
            build/data/overlays/actors/z_mir_ray.data.o (.text)
            build/data/overlays/actors/z_mir_ray.reloc.o (.text)
        _ovl_Mir_RaySegmentTextEnd = .;
    _ovl_Mir_RaySegmentTextSize = ABSOLUTE( _ovl_Mir_RaySegmentTextEnd - _ovl_Mir_RaySegmentTextStart );
        _ovl_Mir_RaySegmentDataStart = .;
            build/src/overlays/actors/ovl_Mir_Ray/z_mir_ray.o (.data)
            build/data/overlays/actors/z_mir_ray.data.o (.data)
            build/data/overlays/actors/z_mir_ray.reloc.o (.data)
        _ovl_Mir_RaySegmentDataEnd = .;
    _ovl_Mir_RaySegmentDataSize = ABSOLUTE( _ovl_Mir_RaySegmentDataEnd - _ovl_Mir_RaySegmentDataStart );
        _ovl_Mir_RaySegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Mir_Ray/z_mir_ray.o (.rodata)
            build/data/overlays/actors/z_mir_ray.data.o (.rodata)
            build/data/overlays/actors/z_mir_ray.reloc.o (.rodata)
        _ovl_Mir_RaySegmentRoDataEnd = .;
    _ovl_Mir_RaySegmentRoDataSize = ABSOLUTE( _ovl_Mir_RaySegmentRoDataEnd - _ovl_Mir_RaySegmentRoDataStart );
        _ovl_Mir_RaySegmentSDataStart = .;
            build/src/overlays/actors/ovl_Mir_Ray/z_mir_ray.o (.sdata)
            build/data/overlays/actors/z_mir_ray.data.o (.sdata)
            build/data/overlays/actors/z_mir_ray.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Mir_RaySegmentSDataEnd = .;
        _ovl_Mir_RaySegmentOvlStart = .;
            build/src/overlays/actors/ovl_Mir_Ray/z_mir_ray.o (.ovl)
            build/data/overlays/actors/z_mir_ray.data.o (.ovl)
            build/data/overlays/actors/z_mir_ray.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Mir_RaySegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Mir_RaySegmentOvlEnd - _ovl_Mir_RaySegmentTextStart );
    _ovl_Mir_RaySegmentRomEnd = _RomSize;

    ..ovl_Mir_Ray.bss ADDR(..ovl_Mir_Ray) + SIZEOF(..ovl_Mir_Ray) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Mir_RaySegmentBssStart = .;
            build/src/overlays/actors/ovl_Mir_Ray/z_mir_ray.o (.sbss)
            build/data/overlays/actors/z_mir_ray.data.o (.sbss)
            build/data/overlays/actors/z_mir_ray.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Mir_Ray/z_mir_ray.o (.scommon)
            build/data/overlays/actors/z_mir_ray.data.o (.scommon)
            build/data/overlays/actors/z_mir_ray.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Mir_Ray/z_mir_ray.o (.bss)
            build/data/overlays/actors/z_mir_ray.data.o (.bss)
            build/data/overlays/actors/z_mir_ray.reloc.o (.bss)
            build/src/overlays/actors/ovl_Mir_Ray/z_mir_ray.o (COMMON)
            build/data/overlays/actors/z_mir_ray.data.o (COMMON)
            build/data/overlays/actors/z_mir_ray.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Mir_RaySegmentBssEnd = .;
        _ovl_Mir_RaySegmentEnd = .;
    }
    _ovl_Mir_RaySegmentBssSize = ABSOLUTE( _ovl_Mir_RaySegmentBssEnd - _ovl_Mir_RaySegmentBssStart );

    _ovl_Obj_BeanSegmentRomStart = _RomSize;
    ..ovl_Obj_Bean : AT(_RomSize)
    {
        _ovl_Obj_BeanSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_BeanSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Bean/z_obj_bean.o (.text)
            build/data/overlays/actors/z_obj_bean.data.o (.text)
            build/data/overlays/actors/z_obj_bean.reloc.o (.text)
        _ovl_Obj_BeanSegmentTextEnd = .;
    _ovl_Obj_BeanSegmentTextSize = ABSOLUTE( _ovl_Obj_BeanSegmentTextEnd - _ovl_Obj_BeanSegmentTextStart );
        _ovl_Obj_BeanSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Bean/z_obj_bean.o (.data)
            build/data/overlays/actors/z_obj_bean.data.o (.data)
            build/data/overlays/actors/z_obj_bean.reloc.o (.data)
        _ovl_Obj_BeanSegmentDataEnd = .;
    _ovl_Obj_BeanSegmentDataSize = ABSOLUTE( _ovl_Obj_BeanSegmentDataEnd - _ovl_Obj_BeanSegmentDataStart );
        _ovl_Obj_BeanSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Bean/z_obj_bean.o (.rodata)
            build/data/overlays/actors/z_obj_bean.data.o (.rodata)
            build/data/overlays/actors/z_obj_bean.reloc.o (.rodata)
        _ovl_Obj_BeanSegmentRoDataEnd = .;
    _ovl_Obj_BeanSegmentRoDataSize = ABSOLUTE( _ovl_Obj_BeanSegmentRoDataEnd - _ovl_Obj_BeanSegmentRoDataStart );
        _ovl_Obj_BeanSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Bean/z_obj_bean.o (.sdata)
            build/data/overlays/actors/z_obj_bean.data.o (.sdata)
            build/data/overlays/actors/z_obj_bean.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_BeanSegmentSDataEnd = .;
        _ovl_Obj_BeanSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Bean/z_obj_bean.o (.ovl)
            build/data/overlays/actors/z_obj_bean.data.o (.ovl)
            build/data/overlays/actors/z_obj_bean.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_BeanSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_BeanSegmentOvlEnd - _ovl_Obj_BeanSegmentTextStart );
    _ovl_Obj_BeanSegmentRomEnd = _RomSize;

    ..ovl_Obj_Bean.bss ADDR(..ovl_Obj_Bean) + SIZEOF(..ovl_Obj_Bean) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_BeanSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Bean/z_obj_bean.o (.sbss)
            build/data/overlays/actors/z_obj_bean.data.o (.sbss)
            build/data/overlays/actors/z_obj_bean.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Bean/z_obj_bean.o (.scommon)
            build/data/overlays/actors/z_obj_bean.data.o (.scommon)
            build/data/overlays/actors/z_obj_bean.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Bean/z_obj_bean.o (.bss)
            build/data/overlays/actors/z_obj_bean.data.o (.bss)
            build/data/overlays/actors/z_obj_bean.reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Bean/z_obj_bean.o (COMMON)
            build/data/overlays/actors/z_obj_bean.data.o (COMMON)
            build/data/overlays/actors/z_obj_bean.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_BeanSegmentBssEnd = .;
        _ovl_Obj_BeanSegmentEnd = .;
    }
    _ovl_Obj_BeanSegmentBssSize = ABSOLUTE( _ovl_Obj_BeanSegmentBssEnd - _ovl_Obj_BeanSegmentBssStart );

    _ovl_Obj_BlockstopSegmentRomStart = _RomSize;
    ..ovl_Obj_Blockstop : AT(_RomSize)
    {
        _ovl_Obj_BlockstopSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_BlockstopSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Blockstop/z_obj_blockstop.o (.text)
            build/src/overlays/actors/ovl_Obj_Blockstop/ovl_Obj_Blockstop_reloc.o (.text)
        _ovl_Obj_BlockstopSegmentTextEnd = .;
    _ovl_Obj_BlockstopSegmentTextSize = ABSOLUTE( _ovl_Obj_BlockstopSegmentTextEnd - _ovl_Obj_BlockstopSegmentTextStart );
        _ovl_Obj_BlockstopSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Blockstop/z_obj_blockstop.o (.data)
            build/src/overlays/actors/ovl_Obj_Blockstop/ovl_Obj_Blockstop_reloc.o (.data)
        _ovl_Obj_BlockstopSegmentDataEnd = .;
    _ovl_Obj_BlockstopSegmentDataSize = ABSOLUTE( _ovl_Obj_BlockstopSegmentDataEnd - _ovl_Obj_BlockstopSegmentDataStart );
        _ovl_Obj_BlockstopSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Blockstop/z_obj_blockstop.o (.rodata)
            build/src/overlays/actors/ovl_Obj_Blockstop/ovl_Obj_Blockstop_reloc.o (.rodata)
        _ovl_Obj_BlockstopSegmentRoDataEnd = .;
    _ovl_Obj_BlockstopSegmentRoDataSize = ABSOLUTE( _ovl_Obj_BlockstopSegmentRoDataEnd - _ovl_Obj_BlockstopSegmentRoDataStart );
        _ovl_Obj_BlockstopSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Blockstop/z_obj_blockstop.o (.sdata)
            build/src/overlays/actors/ovl_Obj_Blockstop/ovl_Obj_Blockstop_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_BlockstopSegmentSDataEnd = .;
        _ovl_Obj_BlockstopSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Blockstop/z_obj_blockstop.o (.ovl)
            build/src/overlays/actors/ovl_Obj_Blockstop/ovl_Obj_Blockstop_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_BlockstopSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_BlockstopSegmentOvlEnd - _ovl_Obj_BlockstopSegmentTextStart );
    _ovl_Obj_BlockstopSegmentRomEnd = _RomSize;

    ..ovl_Obj_Blockstop.bss ADDR(..ovl_Obj_Blockstop) + SIZEOF(..ovl_Obj_Blockstop) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_BlockstopSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Blockstop/z_obj_blockstop.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Blockstop/ovl_Obj_Blockstop_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Blockstop/z_obj_blockstop.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Blockstop/ovl_Obj_Blockstop_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Blockstop/z_obj_blockstop.o (.bss)
            build/src/overlays/actors/ovl_Obj_Blockstop/ovl_Obj_Blockstop_reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Blockstop/z_obj_blockstop.o (COMMON)
            build/src/overlays/actors/ovl_Obj_Blockstop/ovl_Obj_Blockstop_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_BlockstopSegmentBssEnd = .;
        _ovl_Obj_BlockstopSegmentEnd = .;
    }
    _ovl_Obj_BlockstopSegmentBssSize = ABSOLUTE( _ovl_Obj_BlockstopSegmentBssEnd - _ovl_Obj_BlockstopSegmentBssStart );

    _ovl_Obj_BombiwaSegmentRomStart = _RomSize;
    ..ovl_Obj_Bombiwa : AT(_RomSize)
    {
        _ovl_Obj_BombiwaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_BombiwaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Bombiwa/z_obj_bombiwa.o (.text)
            build/src/overlays/actors/ovl_Obj_Bombiwa/ovl_Obj_Bombiwa_reloc.o (.text)
        _ovl_Obj_BombiwaSegmentTextEnd = .;
    _ovl_Obj_BombiwaSegmentTextSize = ABSOLUTE( _ovl_Obj_BombiwaSegmentTextEnd - _ovl_Obj_BombiwaSegmentTextStart );
        _ovl_Obj_BombiwaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Bombiwa/z_obj_bombiwa.o (.data)
            build/src/overlays/actors/ovl_Obj_Bombiwa/ovl_Obj_Bombiwa_reloc.o (.data)
        _ovl_Obj_BombiwaSegmentDataEnd = .;
    _ovl_Obj_BombiwaSegmentDataSize = ABSOLUTE( _ovl_Obj_BombiwaSegmentDataEnd - _ovl_Obj_BombiwaSegmentDataStart );
        _ovl_Obj_BombiwaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Bombiwa/z_obj_bombiwa.o (.rodata)
            build/src/overlays/actors/ovl_Obj_Bombiwa/ovl_Obj_Bombiwa_reloc.o (.rodata)
        _ovl_Obj_BombiwaSegmentRoDataEnd = .;
    _ovl_Obj_BombiwaSegmentRoDataSize = ABSOLUTE( _ovl_Obj_BombiwaSegmentRoDataEnd - _ovl_Obj_BombiwaSegmentRoDataStart );
        _ovl_Obj_BombiwaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Bombiwa/z_obj_bombiwa.o (.sdata)
            build/src/overlays/actors/ovl_Obj_Bombiwa/ovl_Obj_Bombiwa_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_BombiwaSegmentSDataEnd = .;
        _ovl_Obj_BombiwaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Bombiwa/z_obj_bombiwa.o (.ovl)
            build/src/overlays/actors/ovl_Obj_Bombiwa/ovl_Obj_Bombiwa_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_BombiwaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_BombiwaSegmentOvlEnd - _ovl_Obj_BombiwaSegmentTextStart );
    _ovl_Obj_BombiwaSegmentRomEnd = _RomSize;

    ..ovl_Obj_Bombiwa.bss ADDR(..ovl_Obj_Bombiwa) + SIZEOF(..ovl_Obj_Bombiwa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_BombiwaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Bombiwa/z_obj_bombiwa.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Bombiwa/ovl_Obj_Bombiwa_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Bombiwa/z_obj_bombiwa.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Bombiwa/ovl_Obj_Bombiwa_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Bombiwa/z_obj_bombiwa.o (.bss)
            build/src/overlays/actors/ovl_Obj_Bombiwa/ovl_Obj_Bombiwa_reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Bombiwa/z_obj_bombiwa.o (COMMON)
            build/src/overlays/actors/ovl_Obj_Bombiwa/ovl_Obj_Bombiwa_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_BombiwaSegmentBssEnd = .;
        _ovl_Obj_BombiwaSegmentEnd = .;
    }
    _ovl_Obj_BombiwaSegmentBssSize = ABSOLUTE( _ovl_Obj_BombiwaSegmentBssEnd - _ovl_Obj_BombiwaSegmentBssStart );

    _ovl_Obj_CombSegmentRomStart = _RomSize;
    ..ovl_Obj_Comb : AT(_RomSize)
    {
        _ovl_Obj_CombSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_CombSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Comb/z_obj_comb.o (.text)
            build/src/overlays/actors/ovl_Obj_Comb/ovl_Obj_Comb_reloc.o (.text)
        _ovl_Obj_CombSegmentTextEnd = .;
    _ovl_Obj_CombSegmentTextSize = ABSOLUTE( _ovl_Obj_CombSegmentTextEnd - _ovl_Obj_CombSegmentTextStart );
        _ovl_Obj_CombSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Comb/z_obj_comb.o (.data)
            build/src/overlays/actors/ovl_Obj_Comb/ovl_Obj_Comb_reloc.o (.data)
        _ovl_Obj_CombSegmentDataEnd = .;
    _ovl_Obj_CombSegmentDataSize = ABSOLUTE( _ovl_Obj_CombSegmentDataEnd - _ovl_Obj_CombSegmentDataStart );
        _ovl_Obj_CombSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Comb/z_obj_comb.o (.rodata)
            build/src/overlays/actors/ovl_Obj_Comb/ovl_Obj_Comb_reloc.o (.rodata)
        _ovl_Obj_CombSegmentRoDataEnd = .;
    _ovl_Obj_CombSegmentRoDataSize = ABSOLUTE( _ovl_Obj_CombSegmentRoDataEnd - _ovl_Obj_CombSegmentRoDataStart );
        _ovl_Obj_CombSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Comb/z_obj_comb.o (.sdata)
            build/src/overlays/actors/ovl_Obj_Comb/ovl_Obj_Comb_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_CombSegmentSDataEnd = .;
        _ovl_Obj_CombSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Comb/z_obj_comb.o (.ovl)
            build/src/overlays/actors/ovl_Obj_Comb/ovl_Obj_Comb_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_CombSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_CombSegmentOvlEnd - _ovl_Obj_CombSegmentTextStart );
    _ovl_Obj_CombSegmentRomEnd = _RomSize;

    ..ovl_Obj_Comb.bss ADDR(..ovl_Obj_Comb) + SIZEOF(..ovl_Obj_Comb) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_CombSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Comb/z_obj_comb.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Comb/ovl_Obj_Comb_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Comb/z_obj_comb.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Comb/ovl_Obj_Comb_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Comb/z_obj_comb.o (.bss)
            build/src/overlays/actors/ovl_Obj_Comb/ovl_Obj_Comb_reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Comb/z_obj_comb.o (COMMON)
            build/src/overlays/actors/ovl_Obj_Comb/ovl_Obj_Comb_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_CombSegmentBssEnd = .;
        _ovl_Obj_CombSegmentEnd = .;
    }
    _ovl_Obj_CombSegmentBssSize = ABSOLUTE( _ovl_Obj_CombSegmentBssEnd - _ovl_Obj_CombSegmentBssStart );

    _ovl_Obj_DekujrSegmentRomStart = _RomSize;
    ..ovl_Obj_Dekujr : AT(_RomSize)
    {
        _ovl_Obj_DekujrSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_DekujrSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Dekujr/z_obj_dekujr.o (.text)
            build/src/overlays/actors/ovl_Obj_Dekujr/ovl_Obj_Dekujr_reloc.o (.text)
        _ovl_Obj_DekujrSegmentTextEnd = .;
    _ovl_Obj_DekujrSegmentTextSize = ABSOLUTE( _ovl_Obj_DekujrSegmentTextEnd - _ovl_Obj_DekujrSegmentTextStart );
        _ovl_Obj_DekujrSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Dekujr/z_obj_dekujr.o (.data)
            build/src/overlays/actors/ovl_Obj_Dekujr/ovl_Obj_Dekujr_reloc.o (.data)
        _ovl_Obj_DekujrSegmentDataEnd = .;
    _ovl_Obj_DekujrSegmentDataSize = ABSOLUTE( _ovl_Obj_DekujrSegmentDataEnd - _ovl_Obj_DekujrSegmentDataStart );
        _ovl_Obj_DekujrSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Dekujr/z_obj_dekujr.o (.rodata)
            build/src/overlays/actors/ovl_Obj_Dekujr/ovl_Obj_Dekujr_reloc.o (.rodata)
        _ovl_Obj_DekujrSegmentRoDataEnd = .;
    _ovl_Obj_DekujrSegmentRoDataSize = ABSOLUTE( _ovl_Obj_DekujrSegmentRoDataEnd - _ovl_Obj_DekujrSegmentRoDataStart );
        _ovl_Obj_DekujrSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Dekujr/z_obj_dekujr.o (.sdata)
            build/src/overlays/actors/ovl_Obj_Dekujr/ovl_Obj_Dekujr_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_DekujrSegmentSDataEnd = .;
        _ovl_Obj_DekujrSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Dekujr/z_obj_dekujr.o (.ovl)
            build/src/overlays/actors/ovl_Obj_Dekujr/ovl_Obj_Dekujr_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_DekujrSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_DekujrSegmentOvlEnd - _ovl_Obj_DekujrSegmentTextStart );
    _ovl_Obj_DekujrSegmentRomEnd = _RomSize;

    ..ovl_Obj_Dekujr.bss ADDR(..ovl_Obj_Dekujr) + SIZEOF(..ovl_Obj_Dekujr) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_DekujrSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Dekujr/z_obj_dekujr.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Dekujr/ovl_Obj_Dekujr_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Dekujr/z_obj_dekujr.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Dekujr/ovl_Obj_Dekujr_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Dekujr/z_obj_dekujr.o (.bss)
            build/src/overlays/actors/ovl_Obj_Dekujr/ovl_Obj_Dekujr_reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Dekujr/z_obj_dekujr.o (COMMON)
            build/src/overlays/actors/ovl_Obj_Dekujr/ovl_Obj_Dekujr_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_DekujrSegmentBssEnd = .;
        _ovl_Obj_DekujrSegmentEnd = .;
    }
    _ovl_Obj_DekujrSegmentBssSize = ABSOLUTE( _ovl_Obj_DekujrSegmentBssEnd - _ovl_Obj_DekujrSegmentBssStart );

    _ovl_Obj_ElevatorSegmentRomStart = _RomSize;
    ..ovl_Obj_Elevator : AT(_RomSize)
    {
        _ovl_Obj_ElevatorSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_ElevatorSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Elevator/z_obj_elevator.o (.text)
            build/src/overlays/actors/ovl_Obj_Elevator/ovl_Obj_Elevator_reloc.o (.text)
        _ovl_Obj_ElevatorSegmentTextEnd = .;
    _ovl_Obj_ElevatorSegmentTextSize = ABSOLUTE( _ovl_Obj_ElevatorSegmentTextEnd - _ovl_Obj_ElevatorSegmentTextStart );
        _ovl_Obj_ElevatorSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Elevator/z_obj_elevator.o (.data)
            build/src/overlays/actors/ovl_Obj_Elevator/ovl_Obj_Elevator_reloc.o (.data)
        _ovl_Obj_ElevatorSegmentDataEnd = .;
    _ovl_Obj_ElevatorSegmentDataSize = ABSOLUTE( _ovl_Obj_ElevatorSegmentDataEnd - _ovl_Obj_ElevatorSegmentDataStart );
        _ovl_Obj_ElevatorSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Elevator/z_obj_elevator.o (.rodata)
            build/src/overlays/actors/ovl_Obj_Elevator/ovl_Obj_Elevator_reloc.o (.rodata)
        _ovl_Obj_ElevatorSegmentRoDataEnd = .;
    _ovl_Obj_ElevatorSegmentRoDataSize = ABSOLUTE( _ovl_Obj_ElevatorSegmentRoDataEnd - _ovl_Obj_ElevatorSegmentRoDataStart );
        _ovl_Obj_ElevatorSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Elevator/z_obj_elevator.o (.sdata)
            build/src/overlays/actors/ovl_Obj_Elevator/ovl_Obj_Elevator_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_ElevatorSegmentSDataEnd = .;
        _ovl_Obj_ElevatorSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Elevator/z_obj_elevator.o (.ovl)
            build/src/overlays/actors/ovl_Obj_Elevator/ovl_Obj_Elevator_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_ElevatorSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_ElevatorSegmentOvlEnd - _ovl_Obj_ElevatorSegmentTextStart );
    _ovl_Obj_ElevatorSegmentRomEnd = _RomSize;

    ..ovl_Obj_Elevator.bss ADDR(..ovl_Obj_Elevator) + SIZEOF(..ovl_Obj_Elevator) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_ElevatorSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Elevator/z_obj_elevator.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Elevator/ovl_Obj_Elevator_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Elevator/z_obj_elevator.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Elevator/ovl_Obj_Elevator_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Elevator/z_obj_elevator.o (.bss)
            build/src/overlays/actors/ovl_Obj_Elevator/ovl_Obj_Elevator_reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Elevator/z_obj_elevator.o (COMMON)
            build/src/overlays/actors/ovl_Obj_Elevator/ovl_Obj_Elevator_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_ElevatorSegmentBssEnd = .;
        _ovl_Obj_ElevatorSegmentEnd = .;
    }
    _ovl_Obj_ElevatorSegmentBssSize = ABSOLUTE( _ovl_Obj_ElevatorSegmentBssEnd - _ovl_Obj_ElevatorSegmentBssStart );

    _ovl_Obj_HamishiSegmentRomStart = _RomSize;
    ..ovl_Obj_Hamishi : AT(_RomSize)
    {
        _ovl_Obj_HamishiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_HamishiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Hamishi/z_obj_hamishi.o (.text)
            build/data/overlays/actors/z_obj_hamishi.data.o (.text)
            build/data/overlays/actors/z_obj_hamishi.reloc.o (.text)
        _ovl_Obj_HamishiSegmentTextEnd = .;
    _ovl_Obj_HamishiSegmentTextSize = ABSOLUTE( _ovl_Obj_HamishiSegmentTextEnd - _ovl_Obj_HamishiSegmentTextStart );
        _ovl_Obj_HamishiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Hamishi/z_obj_hamishi.o (.data)
            build/data/overlays/actors/z_obj_hamishi.data.o (.data)
            build/data/overlays/actors/z_obj_hamishi.reloc.o (.data)
        _ovl_Obj_HamishiSegmentDataEnd = .;
    _ovl_Obj_HamishiSegmentDataSize = ABSOLUTE( _ovl_Obj_HamishiSegmentDataEnd - _ovl_Obj_HamishiSegmentDataStart );
        _ovl_Obj_HamishiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Hamishi/z_obj_hamishi.o (.rodata)
            build/data/overlays/actors/z_obj_hamishi.data.o (.rodata)
            build/data/overlays/actors/z_obj_hamishi.reloc.o (.rodata)
        _ovl_Obj_HamishiSegmentRoDataEnd = .;
    _ovl_Obj_HamishiSegmentRoDataSize = ABSOLUTE( _ovl_Obj_HamishiSegmentRoDataEnd - _ovl_Obj_HamishiSegmentRoDataStart );
        _ovl_Obj_HamishiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Hamishi/z_obj_hamishi.o (.sdata)
            build/data/overlays/actors/z_obj_hamishi.data.o (.sdata)
            build/data/overlays/actors/z_obj_hamishi.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_HamishiSegmentSDataEnd = .;
        _ovl_Obj_HamishiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Hamishi/z_obj_hamishi.o (.ovl)
            build/data/overlays/actors/z_obj_hamishi.data.o (.ovl)
            build/data/overlays/actors/z_obj_hamishi.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_HamishiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_HamishiSegmentOvlEnd - _ovl_Obj_HamishiSegmentTextStart );
    _ovl_Obj_HamishiSegmentRomEnd = _RomSize;

    ..ovl_Obj_Hamishi.bss ADDR(..ovl_Obj_Hamishi) + SIZEOF(..ovl_Obj_Hamishi) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_HamishiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Hamishi/z_obj_hamishi.o (.sbss)
            build/data/overlays/actors/z_obj_hamishi.data.o (.sbss)
            build/data/overlays/actors/z_obj_hamishi.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Hamishi/z_obj_hamishi.o (.scommon)
            build/data/overlays/actors/z_obj_hamishi.data.o (.scommon)
            build/data/overlays/actors/z_obj_hamishi.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Hamishi/z_obj_hamishi.o (.bss)
            build/data/overlays/actors/z_obj_hamishi.data.o (.bss)
            build/data/overlays/actors/z_obj_hamishi.reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Hamishi/z_obj_hamishi.o (COMMON)
            build/data/overlays/actors/z_obj_hamishi.data.o (COMMON)
            build/data/overlays/actors/z_obj_hamishi.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_HamishiSegmentBssEnd = .;
        _ovl_Obj_HamishiSegmentEnd = .;
    }
    _ovl_Obj_HamishiSegmentBssSize = ABSOLUTE( _ovl_Obj_HamishiSegmentBssEnd - _ovl_Obj_HamishiSegmentBssStart );

    _ovl_Obj_HanaSegmentRomStart = _RomSize;
    ..ovl_Obj_Hana : AT(_RomSize)
    {
        _ovl_Obj_HanaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_HanaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Hana/z_obj_hana.o (.text)
            build/src/overlays/actors/ovl_Obj_Hana/ovl_Obj_Hana_reloc.o (.text)
        _ovl_Obj_HanaSegmentTextEnd = .;
    _ovl_Obj_HanaSegmentTextSize = ABSOLUTE( _ovl_Obj_HanaSegmentTextEnd - _ovl_Obj_HanaSegmentTextStart );
        _ovl_Obj_HanaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Hana/z_obj_hana.o (.data)
            build/src/overlays/actors/ovl_Obj_Hana/ovl_Obj_Hana_reloc.o (.data)
        _ovl_Obj_HanaSegmentDataEnd = .;
    _ovl_Obj_HanaSegmentDataSize = ABSOLUTE( _ovl_Obj_HanaSegmentDataEnd - _ovl_Obj_HanaSegmentDataStart );
        _ovl_Obj_HanaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Hana/z_obj_hana.o (.rodata)
            build/src/overlays/actors/ovl_Obj_Hana/ovl_Obj_Hana_reloc.o (.rodata)
        _ovl_Obj_HanaSegmentRoDataEnd = .;
    _ovl_Obj_HanaSegmentRoDataSize = ABSOLUTE( _ovl_Obj_HanaSegmentRoDataEnd - _ovl_Obj_HanaSegmentRoDataStart );
        _ovl_Obj_HanaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Hana/z_obj_hana.o (.sdata)
            build/src/overlays/actors/ovl_Obj_Hana/ovl_Obj_Hana_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_HanaSegmentSDataEnd = .;
        _ovl_Obj_HanaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Hana/z_obj_hana.o (.ovl)
            build/src/overlays/actors/ovl_Obj_Hana/ovl_Obj_Hana_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_HanaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_HanaSegmentOvlEnd - _ovl_Obj_HanaSegmentTextStart );
    _ovl_Obj_HanaSegmentRomEnd = _RomSize;

    ..ovl_Obj_Hana.bss ADDR(..ovl_Obj_Hana) + SIZEOF(..ovl_Obj_Hana) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_HanaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Hana/z_obj_hana.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Hana/ovl_Obj_Hana_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Hana/z_obj_hana.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Hana/ovl_Obj_Hana_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Hana/z_obj_hana.o (.bss)
            build/src/overlays/actors/ovl_Obj_Hana/ovl_Obj_Hana_reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Hana/z_obj_hana.o (COMMON)
            build/src/overlays/actors/ovl_Obj_Hana/ovl_Obj_Hana_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_HanaSegmentBssEnd = .;
        _ovl_Obj_HanaSegmentEnd = .;
    }
    _ovl_Obj_HanaSegmentBssSize = ABSOLUTE( _ovl_Obj_HanaSegmentBssEnd - _ovl_Obj_HanaSegmentBssStart );

    _ovl_Obj_HsblockSegmentRomStart = _RomSize;
    ..ovl_Obj_Hsblock : AT(_RomSize)
    {
        _ovl_Obj_HsblockSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_HsblockSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Hsblock/z_obj_hsblock.o (.text)
            build/src/overlays/actors/ovl_Obj_Hsblock/ovl_Obj_Hsblock_reloc.o (.text)
        _ovl_Obj_HsblockSegmentTextEnd = .;
    _ovl_Obj_HsblockSegmentTextSize = ABSOLUTE( _ovl_Obj_HsblockSegmentTextEnd - _ovl_Obj_HsblockSegmentTextStart );
        _ovl_Obj_HsblockSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Hsblock/z_obj_hsblock.o (.data)
            build/src/overlays/actors/ovl_Obj_Hsblock/ovl_Obj_Hsblock_reloc.o (.data)
        _ovl_Obj_HsblockSegmentDataEnd = .;
    _ovl_Obj_HsblockSegmentDataSize = ABSOLUTE( _ovl_Obj_HsblockSegmentDataEnd - _ovl_Obj_HsblockSegmentDataStart );
        _ovl_Obj_HsblockSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Hsblock/z_obj_hsblock.o (.rodata)
            build/src/overlays/actors/ovl_Obj_Hsblock/ovl_Obj_Hsblock_reloc.o (.rodata)
        _ovl_Obj_HsblockSegmentRoDataEnd = .;
    _ovl_Obj_HsblockSegmentRoDataSize = ABSOLUTE( _ovl_Obj_HsblockSegmentRoDataEnd - _ovl_Obj_HsblockSegmentRoDataStart );
        _ovl_Obj_HsblockSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Hsblock/z_obj_hsblock.o (.sdata)
            build/src/overlays/actors/ovl_Obj_Hsblock/ovl_Obj_Hsblock_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_HsblockSegmentSDataEnd = .;
        _ovl_Obj_HsblockSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Hsblock/z_obj_hsblock.o (.ovl)
            build/src/overlays/actors/ovl_Obj_Hsblock/ovl_Obj_Hsblock_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_HsblockSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_HsblockSegmentOvlEnd - _ovl_Obj_HsblockSegmentTextStart );
    _ovl_Obj_HsblockSegmentRomEnd = _RomSize;

    ..ovl_Obj_Hsblock.bss ADDR(..ovl_Obj_Hsblock) + SIZEOF(..ovl_Obj_Hsblock) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_HsblockSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Hsblock/z_obj_hsblock.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Hsblock/ovl_Obj_Hsblock_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Hsblock/z_obj_hsblock.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Hsblock/ovl_Obj_Hsblock_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Hsblock/z_obj_hsblock.o (.bss)
            build/src/overlays/actors/ovl_Obj_Hsblock/ovl_Obj_Hsblock_reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Hsblock/z_obj_hsblock.o (COMMON)
            build/src/overlays/actors/ovl_Obj_Hsblock/ovl_Obj_Hsblock_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_HsblockSegmentBssEnd = .;
        _ovl_Obj_HsblockSegmentEnd = .;
    }
    _ovl_Obj_HsblockSegmentBssSize = ABSOLUTE( _ovl_Obj_HsblockSegmentBssEnd - _ovl_Obj_HsblockSegmentBssStart );

    _ovl_Obj_Ice_PolySegmentRomStart = _RomSize;
    ..ovl_Obj_Ice_Poly : AT(_RomSize)
    {
        _ovl_Obj_Ice_PolySegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_Ice_PolySegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Ice_Poly/z_obj_ice_poly.o (.text)
            build/data/overlays/actors/z_obj_ice_poly.data.o (.text)
            build/data/overlays/actors/z_obj_ice_poly.reloc.o (.text)
        _ovl_Obj_Ice_PolySegmentTextEnd = .;
    _ovl_Obj_Ice_PolySegmentTextSize = ABSOLUTE( _ovl_Obj_Ice_PolySegmentTextEnd - _ovl_Obj_Ice_PolySegmentTextStart );
        _ovl_Obj_Ice_PolySegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Ice_Poly/z_obj_ice_poly.o (.data)
            build/data/overlays/actors/z_obj_ice_poly.data.o (.data)
            build/data/overlays/actors/z_obj_ice_poly.reloc.o (.data)
        _ovl_Obj_Ice_PolySegmentDataEnd = .;
    _ovl_Obj_Ice_PolySegmentDataSize = ABSOLUTE( _ovl_Obj_Ice_PolySegmentDataEnd - _ovl_Obj_Ice_PolySegmentDataStart );
        _ovl_Obj_Ice_PolySegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Ice_Poly/z_obj_ice_poly.o (.rodata)
            build/data/overlays/actors/z_obj_ice_poly.data.o (.rodata)
            build/data/overlays/actors/z_obj_ice_poly.reloc.o (.rodata)
        _ovl_Obj_Ice_PolySegmentRoDataEnd = .;
    _ovl_Obj_Ice_PolySegmentRoDataSize = ABSOLUTE( _ovl_Obj_Ice_PolySegmentRoDataEnd - _ovl_Obj_Ice_PolySegmentRoDataStart );
        _ovl_Obj_Ice_PolySegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Ice_Poly/z_obj_ice_poly.o (.sdata)
            build/data/overlays/actors/z_obj_ice_poly.data.o (.sdata)
            build/data/overlays/actors/z_obj_ice_poly.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_Ice_PolySegmentSDataEnd = .;
        _ovl_Obj_Ice_PolySegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Ice_Poly/z_obj_ice_poly.o (.ovl)
            build/data/overlays/actors/z_obj_ice_poly.data.o (.ovl)
            build/data/overlays/actors/z_obj_ice_poly.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_Ice_PolySegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_Ice_PolySegmentOvlEnd - _ovl_Obj_Ice_PolySegmentTextStart );
    _ovl_Obj_Ice_PolySegmentRomEnd = _RomSize;

    ..ovl_Obj_Ice_Poly.bss ADDR(..ovl_Obj_Ice_Poly) + SIZEOF(..ovl_Obj_Ice_Poly) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_Ice_PolySegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Ice_Poly/z_obj_ice_poly.o (.sbss)
            build/data/overlays/actors/z_obj_ice_poly.data.o (.sbss)
            build/data/overlays/actors/z_obj_ice_poly.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Ice_Poly/z_obj_ice_poly.o (.scommon)
            build/data/overlays/actors/z_obj_ice_poly.data.o (.scommon)
            build/data/overlays/actors/z_obj_ice_poly.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Ice_Poly/z_obj_ice_poly.o (.bss)
            build/data/overlays/actors/z_obj_ice_poly.data.o (.bss)
            build/data/overlays/actors/z_obj_ice_poly.reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Ice_Poly/z_obj_ice_poly.o (COMMON)
            build/data/overlays/actors/z_obj_ice_poly.data.o (COMMON)
            build/data/overlays/actors/z_obj_ice_poly.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_Ice_PolySegmentBssEnd = .;
        _ovl_Obj_Ice_PolySegmentEnd = .;
    }
    _ovl_Obj_Ice_PolySegmentBssSize = ABSOLUTE( _ovl_Obj_Ice_PolySegmentBssEnd - _ovl_Obj_Ice_PolySegmentBssStart );

    _ovl_Obj_KibakoSegmentRomStart = _RomSize;
    ..ovl_Obj_Kibako : AT(_RomSize)
    {
        _ovl_Obj_KibakoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_KibakoSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Kibako/z_obj_kibako.o (.text)
            build/src/overlays/actors/ovl_Obj_Kibako/ovl_Obj_Kibako_reloc.o (.text)
        _ovl_Obj_KibakoSegmentTextEnd = .;
    _ovl_Obj_KibakoSegmentTextSize = ABSOLUTE( _ovl_Obj_KibakoSegmentTextEnd - _ovl_Obj_KibakoSegmentTextStart );
        _ovl_Obj_KibakoSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Kibako/z_obj_kibako.o (.data)
            build/src/overlays/actors/ovl_Obj_Kibako/ovl_Obj_Kibako_reloc.o (.data)
        _ovl_Obj_KibakoSegmentDataEnd = .;
    _ovl_Obj_KibakoSegmentDataSize = ABSOLUTE( _ovl_Obj_KibakoSegmentDataEnd - _ovl_Obj_KibakoSegmentDataStart );
        _ovl_Obj_KibakoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Kibako/z_obj_kibako.o (.rodata)
            build/src/overlays/actors/ovl_Obj_Kibako/ovl_Obj_Kibako_reloc.o (.rodata)
        _ovl_Obj_KibakoSegmentRoDataEnd = .;
    _ovl_Obj_KibakoSegmentRoDataSize = ABSOLUTE( _ovl_Obj_KibakoSegmentRoDataEnd - _ovl_Obj_KibakoSegmentRoDataStart );
        _ovl_Obj_KibakoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Kibako/z_obj_kibako.o (.sdata)
            build/src/overlays/actors/ovl_Obj_Kibako/ovl_Obj_Kibako_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_KibakoSegmentSDataEnd = .;
        _ovl_Obj_KibakoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Kibako/z_obj_kibako.o (.ovl)
            build/src/overlays/actors/ovl_Obj_Kibako/ovl_Obj_Kibako_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_KibakoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_KibakoSegmentOvlEnd - _ovl_Obj_KibakoSegmentTextStart );
    _ovl_Obj_KibakoSegmentRomEnd = _RomSize;

    ..ovl_Obj_Kibako.bss ADDR(..ovl_Obj_Kibako) + SIZEOF(..ovl_Obj_Kibako) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_KibakoSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Kibako/z_obj_kibako.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Kibako/ovl_Obj_Kibako_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Kibako/z_obj_kibako.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Kibako/ovl_Obj_Kibako_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Kibako/z_obj_kibako.o (.bss)
            build/src/overlays/actors/ovl_Obj_Kibako/ovl_Obj_Kibako_reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Kibako/z_obj_kibako.o (COMMON)
            build/src/overlays/actors/ovl_Obj_Kibako/ovl_Obj_Kibako_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_KibakoSegmentBssEnd = .;
        _ovl_Obj_KibakoSegmentEnd = .;
    }
    _ovl_Obj_KibakoSegmentBssSize = ABSOLUTE( _ovl_Obj_KibakoSegmentBssEnd - _ovl_Obj_KibakoSegmentBssStart );

    _ovl_Obj_Kibako2SegmentRomStart = _RomSize;
    ..ovl_Obj_Kibako2 : AT(_RomSize)
    {
        _ovl_Obj_Kibako2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_Kibako2SegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Kibako2/z_obj_kibako2.o (.text)
            build/data/overlays/actors/z_obj_kibako2.data.o (.text)
            build/data/overlays/actors/z_obj_kibako2.reloc.o (.text)
        _ovl_Obj_Kibako2SegmentTextEnd = .;
    _ovl_Obj_Kibako2SegmentTextSize = ABSOLUTE( _ovl_Obj_Kibako2SegmentTextEnd - _ovl_Obj_Kibako2SegmentTextStart );
        _ovl_Obj_Kibako2SegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Kibako2/z_obj_kibako2.o (.data)
            build/data/overlays/actors/z_obj_kibako2.data.o (.data)
            build/data/overlays/actors/z_obj_kibako2.reloc.o (.data)
        _ovl_Obj_Kibako2SegmentDataEnd = .;
    _ovl_Obj_Kibako2SegmentDataSize = ABSOLUTE( _ovl_Obj_Kibako2SegmentDataEnd - _ovl_Obj_Kibako2SegmentDataStart );
        _ovl_Obj_Kibako2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Kibako2/z_obj_kibako2.o (.rodata)
            build/data/overlays/actors/z_obj_kibako2.data.o (.rodata)
            build/data/overlays/actors/z_obj_kibako2.reloc.o (.rodata)
        _ovl_Obj_Kibako2SegmentRoDataEnd = .;
    _ovl_Obj_Kibako2SegmentRoDataSize = ABSOLUTE( _ovl_Obj_Kibako2SegmentRoDataEnd - _ovl_Obj_Kibako2SegmentRoDataStart );
        _ovl_Obj_Kibako2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Kibako2/z_obj_kibako2.o (.sdata)
            build/data/overlays/actors/z_obj_kibako2.data.o (.sdata)
            build/data/overlays/actors/z_obj_kibako2.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_Kibako2SegmentSDataEnd = .;
        _ovl_Obj_Kibako2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Kibako2/z_obj_kibako2.o (.ovl)
            build/data/overlays/actors/z_obj_kibako2.data.o (.ovl)
            build/data/overlays/actors/z_obj_kibako2.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_Kibako2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_Kibako2SegmentOvlEnd - _ovl_Obj_Kibako2SegmentTextStart );
    _ovl_Obj_Kibako2SegmentRomEnd = _RomSize;

    ..ovl_Obj_Kibako2.bss ADDR(..ovl_Obj_Kibako2) + SIZEOF(..ovl_Obj_Kibako2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_Kibako2SegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Kibako2/z_obj_kibako2.o (.sbss)
            build/data/overlays/actors/z_obj_kibako2.data.o (.sbss)
            build/data/overlays/actors/z_obj_kibako2.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Kibako2/z_obj_kibako2.o (.scommon)
            build/data/overlays/actors/z_obj_kibako2.data.o (.scommon)
            build/data/overlays/actors/z_obj_kibako2.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Kibako2/z_obj_kibako2.o (.bss)
            build/data/overlays/actors/z_obj_kibako2.data.o (.bss)
            build/data/overlays/actors/z_obj_kibako2.reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Kibako2/z_obj_kibako2.o (COMMON)
            build/data/overlays/actors/z_obj_kibako2.data.o (COMMON)
            build/data/overlays/actors/z_obj_kibako2.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_Kibako2SegmentBssEnd = .;
        _ovl_Obj_Kibako2SegmentEnd = .;
    }
    _ovl_Obj_Kibako2SegmentBssSize = ABSOLUTE( _ovl_Obj_Kibako2SegmentBssEnd - _ovl_Obj_Kibako2SegmentBssStart );

    _ovl_Obj_LiftSegmentRomStart = _RomSize;
    ..ovl_Obj_Lift : AT(_RomSize)
    {
        _ovl_Obj_LiftSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_LiftSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Lift/z_obj_lift.o (.text)
            build/data/overlays/actors/z_obj_lift.data.o (.text)
            build/data/overlays/actors/z_obj_lift.reloc.o (.text)
        _ovl_Obj_LiftSegmentTextEnd = .;
    _ovl_Obj_LiftSegmentTextSize = ABSOLUTE( _ovl_Obj_LiftSegmentTextEnd - _ovl_Obj_LiftSegmentTextStart );
        _ovl_Obj_LiftSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Lift/z_obj_lift.o (.data)
            build/data/overlays/actors/z_obj_lift.data.o (.data)
            build/data/overlays/actors/z_obj_lift.reloc.o (.data)
        _ovl_Obj_LiftSegmentDataEnd = .;
    _ovl_Obj_LiftSegmentDataSize = ABSOLUTE( _ovl_Obj_LiftSegmentDataEnd - _ovl_Obj_LiftSegmentDataStart );
        _ovl_Obj_LiftSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Lift/z_obj_lift.o (.rodata)
            build/data/overlays/actors/z_obj_lift.data.o (.rodata)
            build/data/overlays/actors/z_obj_lift.reloc.o (.rodata)
        _ovl_Obj_LiftSegmentRoDataEnd = .;
    _ovl_Obj_LiftSegmentRoDataSize = ABSOLUTE( _ovl_Obj_LiftSegmentRoDataEnd - _ovl_Obj_LiftSegmentRoDataStart );
        _ovl_Obj_LiftSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Lift/z_obj_lift.o (.sdata)
            build/data/overlays/actors/z_obj_lift.data.o (.sdata)
            build/data/overlays/actors/z_obj_lift.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_LiftSegmentSDataEnd = .;
        _ovl_Obj_LiftSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Lift/z_obj_lift.o (.ovl)
            build/data/overlays/actors/z_obj_lift.data.o (.ovl)
            build/data/overlays/actors/z_obj_lift.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_LiftSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_LiftSegmentOvlEnd - _ovl_Obj_LiftSegmentTextStart );
    _ovl_Obj_LiftSegmentRomEnd = _RomSize;

    ..ovl_Obj_Lift.bss ADDR(..ovl_Obj_Lift) + SIZEOF(..ovl_Obj_Lift) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_LiftSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Lift/z_obj_lift.o (.sbss)
            build/data/overlays/actors/z_obj_lift.data.o (.sbss)
            build/data/overlays/actors/z_obj_lift.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Lift/z_obj_lift.o (.scommon)
            build/data/overlays/actors/z_obj_lift.data.o (.scommon)
            build/data/overlays/actors/z_obj_lift.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Lift/z_obj_lift.o (.bss)
            build/data/overlays/actors/z_obj_lift.data.o (.bss)
            build/data/overlays/actors/z_obj_lift.reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Lift/z_obj_lift.o (COMMON)
            build/data/overlays/actors/z_obj_lift.data.o (COMMON)
            build/data/overlays/actors/z_obj_lift.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_LiftSegmentBssEnd = .;
        _ovl_Obj_LiftSegmentEnd = .;
    }
    _ovl_Obj_LiftSegmentBssSize = ABSOLUTE( _ovl_Obj_LiftSegmentBssEnd - _ovl_Obj_LiftSegmentBssStart );

    _ovl_Obj_LightswitchSegmentRomStart = _RomSize;
    ..ovl_Obj_Lightswitch : AT(_RomSize)
    {
        _ovl_Obj_LightswitchSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_LightswitchSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Lightswitch/z_obj_lightswitch.o (.text)
            build/src/overlays/actors/ovl_Obj_Lightswitch/ovl_Obj_Lightswitch_reloc.o (.text)
        _ovl_Obj_LightswitchSegmentTextEnd = .;
    _ovl_Obj_LightswitchSegmentTextSize = ABSOLUTE( _ovl_Obj_LightswitchSegmentTextEnd - _ovl_Obj_LightswitchSegmentTextStart );
        _ovl_Obj_LightswitchSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Lightswitch/z_obj_lightswitch.o (.data)
            build/src/overlays/actors/ovl_Obj_Lightswitch/ovl_Obj_Lightswitch_reloc.o (.data)
        _ovl_Obj_LightswitchSegmentDataEnd = .;
    _ovl_Obj_LightswitchSegmentDataSize = ABSOLUTE( _ovl_Obj_LightswitchSegmentDataEnd - _ovl_Obj_LightswitchSegmentDataStart );
        _ovl_Obj_LightswitchSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Lightswitch/z_obj_lightswitch.o (.rodata)
            build/src/overlays/actors/ovl_Obj_Lightswitch/ovl_Obj_Lightswitch_reloc.o (.rodata)
        _ovl_Obj_LightswitchSegmentRoDataEnd = .;
    _ovl_Obj_LightswitchSegmentRoDataSize = ABSOLUTE( _ovl_Obj_LightswitchSegmentRoDataEnd - _ovl_Obj_LightswitchSegmentRoDataStart );
        _ovl_Obj_LightswitchSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Lightswitch/z_obj_lightswitch.o (.sdata)
            build/src/overlays/actors/ovl_Obj_Lightswitch/ovl_Obj_Lightswitch_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_LightswitchSegmentSDataEnd = .;
        _ovl_Obj_LightswitchSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Lightswitch/z_obj_lightswitch.o (.ovl)
            build/src/overlays/actors/ovl_Obj_Lightswitch/ovl_Obj_Lightswitch_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_LightswitchSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_LightswitchSegmentOvlEnd - _ovl_Obj_LightswitchSegmentTextStart );
    _ovl_Obj_LightswitchSegmentRomEnd = _RomSize;

    ..ovl_Obj_Lightswitch.bss ADDR(..ovl_Obj_Lightswitch) + SIZEOF(..ovl_Obj_Lightswitch) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_LightswitchSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Lightswitch/z_obj_lightswitch.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Lightswitch/ovl_Obj_Lightswitch_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Lightswitch/z_obj_lightswitch.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Lightswitch/ovl_Obj_Lightswitch_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Lightswitch/z_obj_lightswitch.o (.bss)
            build/src/overlays/actors/ovl_Obj_Lightswitch/ovl_Obj_Lightswitch_reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Lightswitch/z_obj_lightswitch.o (COMMON)
            build/src/overlays/actors/ovl_Obj_Lightswitch/ovl_Obj_Lightswitch_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_LightswitchSegmentBssEnd = .;
        _ovl_Obj_LightswitchSegmentEnd = .;
    }
    _ovl_Obj_LightswitchSegmentBssSize = ABSOLUTE( _ovl_Obj_LightswitchSegmentBssEnd - _ovl_Obj_LightswitchSegmentBssStart );

    _ovl_Obj_MakekinsutaSegmentRomStart = _RomSize;
    ..ovl_Obj_Makekinsuta : AT(_RomSize)
    {
        _ovl_Obj_MakekinsutaSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_MakekinsutaSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Makekinsuta/z_obj_makekinsuta.o (.text)
            build/src/overlays/actors/ovl_Obj_Makekinsuta/ovl_Obj_Makekinsuta_reloc.o (.text)
        _ovl_Obj_MakekinsutaSegmentTextEnd = .;
    _ovl_Obj_MakekinsutaSegmentTextSize = ABSOLUTE( _ovl_Obj_MakekinsutaSegmentTextEnd - _ovl_Obj_MakekinsutaSegmentTextStart );
        _ovl_Obj_MakekinsutaSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Makekinsuta/z_obj_makekinsuta.o (.data)
            build/src/overlays/actors/ovl_Obj_Makekinsuta/ovl_Obj_Makekinsuta_reloc.o (.data)
        _ovl_Obj_MakekinsutaSegmentDataEnd = .;
    _ovl_Obj_MakekinsutaSegmentDataSize = ABSOLUTE( _ovl_Obj_MakekinsutaSegmentDataEnd - _ovl_Obj_MakekinsutaSegmentDataStart );
        _ovl_Obj_MakekinsutaSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Makekinsuta/z_obj_makekinsuta.o (.rodata)
            build/src/overlays/actors/ovl_Obj_Makekinsuta/ovl_Obj_Makekinsuta_reloc.o (.rodata)
        _ovl_Obj_MakekinsutaSegmentRoDataEnd = .;
    _ovl_Obj_MakekinsutaSegmentRoDataSize = ABSOLUTE( _ovl_Obj_MakekinsutaSegmentRoDataEnd - _ovl_Obj_MakekinsutaSegmentRoDataStart );
        _ovl_Obj_MakekinsutaSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Makekinsuta/z_obj_makekinsuta.o (.sdata)
            build/src/overlays/actors/ovl_Obj_Makekinsuta/ovl_Obj_Makekinsuta_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_MakekinsutaSegmentSDataEnd = .;
        _ovl_Obj_MakekinsutaSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Makekinsuta/z_obj_makekinsuta.o (.ovl)
            build/src/overlays/actors/ovl_Obj_Makekinsuta/ovl_Obj_Makekinsuta_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_MakekinsutaSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_MakekinsutaSegmentOvlEnd - _ovl_Obj_MakekinsutaSegmentTextStart );
    _ovl_Obj_MakekinsutaSegmentRomEnd = _RomSize;

    ..ovl_Obj_Makekinsuta.bss ADDR(..ovl_Obj_Makekinsuta) + SIZEOF(..ovl_Obj_Makekinsuta) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_MakekinsutaSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Makekinsuta/z_obj_makekinsuta.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Makekinsuta/ovl_Obj_Makekinsuta_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Makekinsuta/z_obj_makekinsuta.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Makekinsuta/ovl_Obj_Makekinsuta_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Makekinsuta/z_obj_makekinsuta.o (.bss)
            build/src/overlays/actors/ovl_Obj_Makekinsuta/ovl_Obj_Makekinsuta_reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Makekinsuta/z_obj_makekinsuta.o (COMMON)
            build/src/overlays/actors/ovl_Obj_Makekinsuta/ovl_Obj_Makekinsuta_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_MakekinsutaSegmentBssEnd = .;
        _ovl_Obj_MakekinsutaSegmentEnd = .;
    }
    _ovl_Obj_MakekinsutaSegmentBssSize = ABSOLUTE( _ovl_Obj_MakekinsutaSegmentBssEnd - _ovl_Obj_MakekinsutaSegmentBssStart );

    _ovl_Obj_MakeoshihikiSegmentRomStart = _RomSize;
    ..ovl_Obj_Makeoshihiki : AT(_RomSize)
    {
        _ovl_Obj_MakeoshihikiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_MakeoshihikiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/z_obj_makeoshihiki.o (.text)
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/ovl_Obj_Makeoshihiki_reloc.o (.text)
        _ovl_Obj_MakeoshihikiSegmentTextEnd = .;
    _ovl_Obj_MakeoshihikiSegmentTextSize = ABSOLUTE( _ovl_Obj_MakeoshihikiSegmentTextEnd - _ovl_Obj_MakeoshihikiSegmentTextStart );
        _ovl_Obj_MakeoshihikiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/z_obj_makeoshihiki.o (.data)
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/ovl_Obj_Makeoshihiki_reloc.o (.data)
        _ovl_Obj_MakeoshihikiSegmentDataEnd = .;
    _ovl_Obj_MakeoshihikiSegmentDataSize = ABSOLUTE( _ovl_Obj_MakeoshihikiSegmentDataEnd - _ovl_Obj_MakeoshihikiSegmentDataStart );
        _ovl_Obj_MakeoshihikiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/z_obj_makeoshihiki.o (.rodata)
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/ovl_Obj_Makeoshihiki_reloc.o (.rodata)
        _ovl_Obj_MakeoshihikiSegmentRoDataEnd = .;
    _ovl_Obj_MakeoshihikiSegmentRoDataSize = ABSOLUTE( _ovl_Obj_MakeoshihikiSegmentRoDataEnd - _ovl_Obj_MakeoshihikiSegmentRoDataStart );
        _ovl_Obj_MakeoshihikiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/z_obj_makeoshihiki.o (.sdata)
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/ovl_Obj_Makeoshihiki_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_MakeoshihikiSegmentSDataEnd = .;
        _ovl_Obj_MakeoshihikiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/z_obj_makeoshihiki.o (.ovl)
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/ovl_Obj_Makeoshihiki_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_MakeoshihikiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_MakeoshihikiSegmentOvlEnd - _ovl_Obj_MakeoshihikiSegmentTextStart );
    _ovl_Obj_MakeoshihikiSegmentRomEnd = _RomSize;

    ..ovl_Obj_Makeoshihiki.bss ADDR(..ovl_Obj_Makeoshihiki) + SIZEOF(..ovl_Obj_Makeoshihiki) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_MakeoshihikiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/z_obj_makeoshihiki.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/ovl_Obj_Makeoshihiki_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/z_obj_makeoshihiki.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/ovl_Obj_Makeoshihiki_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/z_obj_makeoshihiki.o (.bss)
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/ovl_Obj_Makeoshihiki_reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/z_obj_makeoshihiki.o (COMMON)
            build/src/overlays/actors/ovl_Obj_Makeoshihiki/ovl_Obj_Makeoshihiki_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_MakeoshihikiSegmentBssEnd = .;
        _ovl_Obj_MakeoshihikiSegmentEnd = .;
    }
    _ovl_Obj_MakeoshihikiSegmentBssSize = ABSOLUTE( _ovl_Obj_MakeoshihikiSegmentBssEnd - _ovl_Obj_MakeoshihikiSegmentBssStart );

    _ovl_Obj_MureSegmentRomStart = _RomSize;
    ..ovl_Obj_Mure : AT(_RomSize)
    {
        _ovl_Obj_MureSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_MureSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Mure/z_obj_mure.o (.text)
            build/data/overlays/actors/z_obj_mure.data.o (.text)
            build/data/overlays/actors/z_obj_mure.reloc.o (.text)
        _ovl_Obj_MureSegmentTextEnd = .;
    _ovl_Obj_MureSegmentTextSize = ABSOLUTE( _ovl_Obj_MureSegmentTextEnd - _ovl_Obj_MureSegmentTextStart );
        _ovl_Obj_MureSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Mure/z_obj_mure.o (.data)
            build/data/overlays/actors/z_obj_mure.data.o (.data)
            build/data/overlays/actors/z_obj_mure.reloc.o (.data)
        _ovl_Obj_MureSegmentDataEnd = .;
    _ovl_Obj_MureSegmentDataSize = ABSOLUTE( _ovl_Obj_MureSegmentDataEnd - _ovl_Obj_MureSegmentDataStart );
        _ovl_Obj_MureSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Mure/z_obj_mure.o (.rodata)
            build/data/overlays/actors/z_obj_mure.data.o (.rodata)
            build/data/overlays/actors/z_obj_mure.reloc.o (.rodata)
        _ovl_Obj_MureSegmentRoDataEnd = .;
    _ovl_Obj_MureSegmentRoDataSize = ABSOLUTE( _ovl_Obj_MureSegmentRoDataEnd - _ovl_Obj_MureSegmentRoDataStart );
        _ovl_Obj_MureSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Mure/z_obj_mure.o (.sdata)
            build/data/overlays/actors/z_obj_mure.data.o (.sdata)
            build/data/overlays/actors/z_obj_mure.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_MureSegmentSDataEnd = .;
        _ovl_Obj_MureSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Mure/z_obj_mure.o (.ovl)
            build/data/overlays/actors/z_obj_mure.data.o (.ovl)
            build/data/overlays/actors/z_obj_mure.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_MureSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_MureSegmentOvlEnd - _ovl_Obj_MureSegmentTextStart );
    _ovl_Obj_MureSegmentRomEnd = _RomSize;

    ..ovl_Obj_Mure.bss ADDR(..ovl_Obj_Mure) + SIZEOF(..ovl_Obj_Mure) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_MureSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Mure/z_obj_mure.o (.sbss)
            build/data/overlays/actors/z_obj_mure.data.o (.sbss)
            build/data/overlays/actors/z_obj_mure.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Mure/z_obj_mure.o (.scommon)
            build/data/overlays/actors/z_obj_mure.data.o (.scommon)
            build/data/overlays/actors/z_obj_mure.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Mure/z_obj_mure.o (.bss)
            build/data/overlays/actors/z_obj_mure.data.o (.bss)
            build/data/overlays/actors/z_obj_mure.reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Mure/z_obj_mure.o (COMMON)
            build/data/overlays/actors/z_obj_mure.data.o (COMMON)
            build/data/overlays/actors/z_obj_mure.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_MureSegmentBssEnd = .;
        _ovl_Obj_MureSegmentEnd = .;
    }
    _ovl_Obj_MureSegmentBssSize = ABSOLUTE( _ovl_Obj_MureSegmentBssEnd - _ovl_Obj_MureSegmentBssStart );

    _ovl_Obj_Mure2SegmentRomStart = _RomSize;
    ..ovl_Obj_Mure2 : AT(_RomSize)
    {
        _ovl_Obj_Mure2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_Mure2SegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Mure2/z_obj_mure2.o (.text)
            build/data/overlays/actors/z_obj_mure2.data.o (.text)
            build/data/overlays/actors/z_obj_mure2.reloc.o (.text)
        _ovl_Obj_Mure2SegmentTextEnd = .;
    _ovl_Obj_Mure2SegmentTextSize = ABSOLUTE( _ovl_Obj_Mure2SegmentTextEnd - _ovl_Obj_Mure2SegmentTextStart );
        _ovl_Obj_Mure2SegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Mure2/z_obj_mure2.o (.data)
            build/data/overlays/actors/z_obj_mure2.data.o (.data)
            build/data/overlays/actors/z_obj_mure2.reloc.o (.data)
        _ovl_Obj_Mure2SegmentDataEnd = .;
    _ovl_Obj_Mure2SegmentDataSize = ABSOLUTE( _ovl_Obj_Mure2SegmentDataEnd - _ovl_Obj_Mure2SegmentDataStart );
        _ovl_Obj_Mure2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Mure2/z_obj_mure2.o (.rodata)
            build/data/overlays/actors/z_obj_mure2.data.o (.rodata)
            build/data/overlays/actors/z_obj_mure2.reloc.o (.rodata)
        _ovl_Obj_Mure2SegmentRoDataEnd = .;
    _ovl_Obj_Mure2SegmentRoDataSize = ABSOLUTE( _ovl_Obj_Mure2SegmentRoDataEnd - _ovl_Obj_Mure2SegmentRoDataStart );
        _ovl_Obj_Mure2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Mure2/z_obj_mure2.o (.sdata)
            build/data/overlays/actors/z_obj_mure2.data.o (.sdata)
            build/data/overlays/actors/z_obj_mure2.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_Mure2SegmentSDataEnd = .;
        _ovl_Obj_Mure2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Mure2/z_obj_mure2.o (.ovl)
            build/data/overlays/actors/z_obj_mure2.data.o (.ovl)
            build/data/overlays/actors/z_obj_mure2.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_Mure2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_Mure2SegmentOvlEnd - _ovl_Obj_Mure2SegmentTextStart );
    _ovl_Obj_Mure2SegmentRomEnd = _RomSize;

    ..ovl_Obj_Mure2.bss ADDR(..ovl_Obj_Mure2) + SIZEOF(..ovl_Obj_Mure2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_Mure2SegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Mure2/z_obj_mure2.o (.sbss)
            build/data/overlays/actors/z_obj_mure2.data.o (.sbss)
            build/data/overlays/actors/z_obj_mure2.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Mure2/z_obj_mure2.o (.scommon)
            build/data/overlays/actors/z_obj_mure2.data.o (.scommon)
            build/data/overlays/actors/z_obj_mure2.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Mure2/z_obj_mure2.o (.bss)
            build/data/overlays/actors/z_obj_mure2.data.o (.bss)
            build/data/overlays/actors/z_obj_mure2.reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Mure2/z_obj_mure2.o (COMMON)
            build/data/overlays/actors/z_obj_mure2.data.o (COMMON)
            build/data/overlays/actors/z_obj_mure2.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_Mure2SegmentBssEnd = .;
        _ovl_Obj_Mure2SegmentEnd = .;
    }
    _ovl_Obj_Mure2SegmentBssSize = ABSOLUTE( _ovl_Obj_Mure2SegmentBssEnd - _ovl_Obj_Mure2SegmentBssStart );

    _ovl_Obj_Mure3SegmentRomStart = _RomSize;
    ..ovl_Obj_Mure3 : AT(_RomSize)
    {
        _ovl_Obj_Mure3SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_Mure3SegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Mure3/z_obj_mure3.o (.text)
            build/data/overlays/actors/z_obj_mure3.data.o (.text)
            build/data/overlays/actors/z_obj_mure3.reloc.o (.text)
        _ovl_Obj_Mure3SegmentTextEnd = .;
    _ovl_Obj_Mure3SegmentTextSize = ABSOLUTE( _ovl_Obj_Mure3SegmentTextEnd - _ovl_Obj_Mure3SegmentTextStart );
        _ovl_Obj_Mure3SegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Mure3/z_obj_mure3.o (.data)
            build/data/overlays/actors/z_obj_mure3.data.o (.data)
            build/data/overlays/actors/z_obj_mure3.reloc.o (.data)
        _ovl_Obj_Mure3SegmentDataEnd = .;
    _ovl_Obj_Mure3SegmentDataSize = ABSOLUTE( _ovl_Obj_Mure3SegmentDataEnd - _ovl_Obj_Mure3SegmentDataStart );
        _ovl_Obj_Mure3SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Mure3/z_obj_mure3.o (.rodata)
            build/data/overlays/actors/z_obj_mure3.data.o (.rodata)
            build/data/overlays/actors/z_obj_mure3.reloc.o (.rodata)
        _ovl_Obj_Mure3SegmentRoDataEnd = .;
    _ovl_Obj_Mure3SegmentRoDataSize = ABSOLUTE( _ovl_Obj_Mure3SegmentRoDataEnd - _ovl_Obj_Mure3SegmentRoDataStart );
        _ovl_Obj_Mure3SegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Mure3/z_obj_mure3.o (.sdata)
            build/data/overlays/actors/z_obj_mure3.data.o (.sdata)
            build/data/overlays/actors/z_obj_mure3.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_Mure3SegmentSDataEnd = .;
        _ovl_Obj_Mure3SegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Mure3/z_obj_mure3.o (.ovl)
            build/data/overlays/actors/z_obj_mure3.data.o (.ovl)
            build/data/overlays/actors/z_obj_mure3.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_Mure3SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_Mure3SegmentOvlEnd - _ovl_Obj_Mure3SegmentTextStart );
    _ovl_Obj_Mure3SegmentRomEnd = _RomSize;

    ..ovl_Obj_Mure3.bss ADDR(..ovl_Obj_Mure3) + SIZEOF(..ovl_Obj_Mure3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_Mure3SegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Mure3/z_obj_mure3.o (.sbss)
            build/data/overlays/actors/z_obj_mure3.data.o (.sbss)
            build/data/overlays/actors/z_obj_mure3.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Mure3/z_obj_mure3.o (.scommon)
            build/data/overlays/actors/z_obj_mure3.data.o (.scommon)
            build/data/overlays/actors/z_obj_mure3.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Mure3/z_obj_mure3.o (.bss)
            build/data/overlays/actors/z_obj_mure3.data.o (.bss)
            build/data/overlays/actors/z_obj_mure3.reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Mure3/z_obj_mure3.o (COMMON)
            build/data/overlays/actors/z_obj_mure3.data.o (COMMON)
            build/data/overlays/actors/z_obj_mure3.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_Mure3SegmentBssEnd = .;
        _ovl_Obj_Mure3SegmentEnd = .;
    }
    _ovl_Obj_Mure3SegmentBssSize = ABSOLUTE( _ovl_Obj_Mure3SegmentBssEnd - _ovl_Obj_Mure3SegmentBssStart );

    _ovl_Obj_OshihikiSegmentRomStart = _RomSize;
    ..ovl_Obj_Oshihiki : AT(_RomSize)
    {
        _ovl_Obj_OshihikiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_OshihikiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Oshihiki/z_obj_oshihiki.o (.text)
            build/data/overlays/actors/z_obj_oshihiki.data.o (.text)
            build/data/overlays/actors/z_obj_oshihiki.reloc.o (.text)
        _ovl_Obj_OshihikiSegmentTextEnd = .;
    _ovl_Obj_OshihikiSegmentTextSize = ABSOLUTE( _ovl_Obj_OshihikiSegmentTextEnd - _ovl_Obj_OshihikiSegmentTextStart );
        _ovl_Obj_OshihikiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Oshihiki/z_obj_oshihiki.o (.data)
            build/data/overlays/actors/z_obj_oshihiki.data.o (.data)
            build/data/overlays/actors/z_obj_oshihiki.reloc.o (.data)
        _ovl_Obj_OshihikiSegmentDataEnd = .;
    _ovl_Obj_OshihikiSegmentDataSize = ABSOLUTE( _ovl_Obj_OshihikiSegmentDataEnd - _ovl_Obj_OshihikiSegmentDataStart );
        _ovl_Obj_OshihikiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Oshihiki/z_obj_oshihiki.o (.rodata)
            build/data/overlays/actors/z_obj_oshihiki.data.o (.rodata)
            build/data/overlays/actors/z_obj_oshihiki.reloc.o (.rodata)
        _ovl_Obj_OshihikiSegmentRoDataEnd = .;
    _ovl_Obj_OshihikiSegmentRoDataSize = ABSOLUTE( _ovl_Obj_OshihikiSegmentRoDataEnd - _ovl_Obj_OshihikiSegmentRoDataStart );
        _ovl_Obj_OshihikiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Oshihiki/z_obj_oshihiki.o (.sdata)
            build/data/overlays/actors/z_obj_oshihiki.data.o (.sdata)
            build/data/overlays/actors/z_obj_oshihiki.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_OshihikiSegmentSDataEnd = .;
        _ovl_Obj_OshihikiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Oshihiki/z_obj_oshihiki.o (.ovl)
            build/data/overlays/actors/z_obj_oshihiki.data.o (.ovl)
            build/data/overlays/actors/z_obj_oshihiki.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_OshihikiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_OshihikiSegmentOvlEnd - _ovl_Obj_OshihikiSegmentTextStart );
    _ovl_Obj_OshihikiSegmentRomEnd = _RomSize;

    ..ovl_Obj_Oshihiki.bss ADDR(..ovl_Obj_Oshihiki) + SIZEOF(..ovl_Obj_Oshihiki) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_OshihikiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Oshihiki/z_obj_oshihiki.o (.sbss)
            build/data/overlays/actors/z_obj_oshihiki.data.o (.sbss)
            build/data/overlays/actors/z_obj_oshihiki.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Oshihiki/z_obj_oshihiki.o (.scommon)
            build/data/overlays/actors/z_obj_oshihiki.data.o (.scommon)
            build/data/overlays/actors/z_obj_oshihiki.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Oshihiki/z_obj_oshihiki.o (.bss)
            build/data/overlays/actors/z_obj_oshihiki.data.o (.bss)
            build/data/overlays/actors/z_obj_oshihiki.reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Oshihiki/z_obj_oshihiki.o (COMMON)
            build/data/overlays/actors/z_obj_oshihiki.data.o (COMMON)
            build/data/overlays/actors/z_obj_oshihiki.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_OshihikiSegmentBssEnd = .;
        _ovl_Obj_OshihikiSegmentEnd = .;
    }
    _ovl_Obj_OshihikiSegmentBssSize = ABSOLUTE( _ovl_Obj_OshihikiSegmentBssEnd - _ovl_Obj_OshihikiSegmentBssStart );

    _ovl_Obj_RoomtimerSegmentRomStart = _RomSize;
    ..ovl_Obj_Roomtimer : AT(_RomSize)
    {
        _ovl_Obj_RoomtimerSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_RoomtimerSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Roomtimer/z_obj_roomtimer.o (.text)
            build/src/overlays/actors/ovl_Obj_Roomtimer/ovl_Obj_Roomtimer_reloc.o (.text)
        _ovl_Obj_RoomtimerSegmentTextEnd = .;
    _ovl_Obj_RoomtimerSegmentTextSize = ABSOLUTE( _ovl_Obj_RoomtimerSegmentTextEnd - _ovl_Obj_RoomtimerSegmentTextStart );
        _ovl_Obj_RoomtimerSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Roomtimer/z_obj_roomtimer.o (.data)
            build/src/overlays/actors/ovl_Obj_Roomtimer/ovl_Obj_Roomtimer_reloc.o (.data)
        _ovl_Obj_RoomtimerSegmentDataEnd = .;
    _ovl_Obj_RoomtimerSegmentDataSize = ABSOLUTE( _ovl_Obj_RoomtimerSegmentDataEnd - _ovl_Obj_RoomtimerSegmentDataStart );
        _ovl_Obj_RoomtimerSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Roomtimer/z_obj_roomtimer.o (.rodata)
            build/src/overlays/actors/ovl_Obj_Roomtimer/ovl_Obj_Roomtimer_reloc.o (.rodata)
        _ovl_Obj_RoomtimerSegmentRoDataEnd = .;
    _ovl_Obj_RoomtimerSegmentRoDataSize = ABSOLUTE( _ovl_Obj_RoomtimerSegmentRoDataEnd - _ovl_Obj_RoomtimerSegmentRoDataStart );
        _ovl_Obj_RoomtimerSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Roomtimer/z_obj_roomtimer.o (.sdata)
            build/src/overlays/actors/ovl_Obj_Roomtimer/ovl_Obj_Roomtimer_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_RoomtimerSegmentSDataEnd = .;
        _ovl_Obj_RoomtimerSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Roomtimer/z_obj_roomtimer.o (.ovl)
            build/src/overlays/actors/ovl_Obj_Roomtimer/ovl_Obj_Roomtimer_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_RoomtimerSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_RoomtimerSegmentOvlEnd - _ovl_Obj_RoomtimerSegmentTextStart );
    _ovl_Obj_RoomtimerSegmentRomEnd = _RomSize;

    ..ovl_Obj_Roomtimer.bss ADDR(..ovl_Obj_Roomtimer) + SIZEOF(..ovl_Obj_Roomtimer) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_RoomtimerSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Roomtimer/z_obj_roomtimer.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Roomtimer/ovl_Obj_Roomtimer_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Roomtimer/z_obj_roomtimer.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Roomtimer/ovl_Obj_Roomtimer_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Roomtimer/z_obj_roomtimer.o (.bss)
            build/src/overlays/actors/ovl_Obj_Roomtimer/ovl_Obj_Roomtimer_reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Roomtimer/z_obj_roomtimer.o (COMMON)
            build/src/overlays/actors/ovl_Obj_Roomtimer/ovl_Obj_Roomtimer_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_RoomtimerSegmentBssEnd = .;
        _ovl_Obj_RoomtimerSegmentEnd = .;
    }
    _ovl_Obj_RoomtimerSegmentBssSize = ABSOLUTE( _ovl_Obj_RoomtimerSegmentBssEnd - _ovl_Obj_RoomtimerSegmentBssStart );

    _ovl_Obj_SwitchSegmentRomStart = _RomSize;
    ..ovl_Obj_Switch : AT(_RomSize)
    {
        _ovl_Obj_SwitchSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_SwitchSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Switch/z_obj_switch.o (.text)
            build/data/overlays/actors/z_obj_switch.data.o (.text)
            build/data/overlays/actors/z_obj_switch.reloc.o (.text)
        _ovl_Obj_SwitchSegmentTextEnd = .;
    _ovl_Obj_SwitchSegmentTextSize = ABSOLUTE( _ovl_Obj_SwitchSegmentTextEnd - _ovl_Obj_SwitchSegmentTextStart );
        _ovl_Obj_SwitchSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Switch/z_obj_switch.o (.data)
            build/data/overlays/actors/z_obj_switch.data.o (.data)
            build/data/overlays/actors/z_obj_switch.reloc.o (.data)
        _ovl_Obj_SwitchSegmentDataEnd = .;
    _ovl_Obj_SwitchSegmentDataSize = ABSOLUTE( _ovl_Obj_SwitchSegmentDataEnd - _ovl_Obj_SwitchSegmentDataStart );
        _ovl_Obj_SwitchSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Switch/z_obj_switch.o (.rodata)
            build/data/overlays/actors/z_obj_switch.data.o (.rodata)
            build/data/overlays/actors/z_obj_switch.reloc.o (.rodata)
        _ovl_Obj_SwitchSegmentRoDataEnd = .;
    _ovl_Obj_SwitchSegmentRoDataSize = ABSOLUTE( _ovl_Obj_SwitchSegmentRoDataEnd - _ovl_Obj_SwitchSegmentRoDataStart );
        _ovl_Obj_SwitchSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Switch/z_obj_switch.o (.sdata)
            build/data/overlays/actors/z_obj_switch.data.o (.sdata)
            build/data/overlays/actors/z_obj_switch.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_SwitchSegmentSDataEnd = .;
        _ovl_Obj_SwitchSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Switch/z_obj_switch.o (.ovl)
            build/data/overlays/actors/z_obj_switch.data.o (.ovl)
            build/data/overlays/actors/z_obj_switch.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_SwitchSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_SwitchSegmentOvlEnd - _ovl_Obj_SwitchSegmentTextStart );
    _ovl_Obj_SwitchSegmentRomEnd = _RomSize;

    ..ovl_Obj_Switch.bss ADDR(..ovl_Obj_Switch) + SIZEOF(..ovl_Obj_Switch) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_SwitchSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Switch/z_obj_switch.o (.sbss)
            build/data/overlays/actors/z_obj_switch.data.o (.sbss)
            build/data/overlays/actors/z_obj_switch.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Switch/z_obj_switch.o (.scommon)
            build/data/overlays/actors/z_obj_switch.data.o (.scommon)
            build/data/overlays/actors/z_obj_switch.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Switch/z_obj_switch.o (.bss)
            build/data/overlays/actors/z_obj_switch.data.o (.bss)
            build/data/overlays/actors/z_obj_switch.reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Switch/z_obj_switch.o (COMMON)
            build/data/overlays/actors/z_obj_switch.data.o (COMMON)
            build/data/overlays/actors/z_obj_switch.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_SwitchSegmentBssEnd = .;
        _ovl_Obj_SwitchSegmentEnd = .;
    }
    _ovl_Obj_SwitchSegmentBssSize = ABSOLUTE( _ovl_Obj_SwitchSegmentBssEnd - _ovl_Obj_SwitchSegmentBssStart );

    _ovl_Obj_SyokudaiSegmentRomStart = _RomSize;
    ..ovl_Obj_Syokudai : AT(_RomSize)
    {
        _ovl_Obj_SyokudaiSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_SyokudaiSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Syokudai/z_obj_syokudai.o (.text)
            build/src/overlays/actors/ovl_Obj_Syokudai/ovl_Obj_Syokudai_reloc.o (.text)
        _ovl_Obj_SyokudaiSegmentTextEnd = .;
    _ovl_Obj_SyokudaiSegmentTextSize = ABSOLUTE( _ovl_Obj_SyokudaiSegmentTextEnd - _ovl_Obj_SyokudaiSegmentTextStart );
        _ovl_Obj_SyokudaiSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Syokudai/z_obj_syokudai.o (.data)
            build/src/overlays/actors/ovl_Obj_Syokudai/ovl_Obj_Syokudai_reloc.o (.data)
        _ovl_Obj_SyokudaiSegmentDataEnd = .;
    _ovl_Obj_SyokudaiSegmentDataSize = ABSOLUTE( _ovl_Obj_SyokudaiSegmentDataEnd - _ovl_Obj_SyokudaiSegmentDataStart );
        _ovl_Obj_SyokudaiSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Syokudai/z_obj_syokudai.o (.rodata)
            build/src/overlays/actors/ovl_Obj_Syokudai/ovl_Obj_Syokudai_reloc.o (.rodata)
        _ovl_Obj_SyokudaiSegmentRoDataEnd = .;
    _ovl_Obj_SyokudaiSegmentRoDataSize = ABSOLUTE( _ovl_Obj_SyokudaiSegmentRoDataEnd - _ovl_Obj_SyokudaiSegmentRoDataStart );
        _ovl_Obj_SyokudaiSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Syokudai/z_obj_syokudai.o (.sdata)
            build/src/overlays/actors/ovl_Obj_Syokudai/ovl_Obj_Syokudai_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_SyokudaiSegmentSDataEnd = .;
        _ovl_Obj_SyokudaiSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Syokudai/z_obj_syokudai.o (.ovl)
            build/src/overlays/actors/ovl_Obj_Syokudai/ovl_Obj_Syokudai_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_SyokudaiSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_SyokudaiSegmentOvlEnd - _ovl_Obj_SyokudaiSegmentTextStart );
    _ovl_Obj_SyokudaiSegmentRomEnd = _RomSize;

    ..ovl_Obj_Syokudai.bss ADDR(..ovl_Obj_Syokudai) + SIZEOF(..ovl_Obj_Syokudai) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_SyokudaiSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Syokudai/z_obj_syokudai.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Syokudai/ovl_Obj_Syokudai_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Syokudai/z_obj_syokudai.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Syokudai/ovl_Obj_Syokudai_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Syokudai/z_obj_syokudai.o (.bss)
            build/src/overlays/actors/ovl_Obj_Syokudai/ovl_Obj_Syokudai_reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Syokudai/z_obj_syokudai.o (COMMON)
            build/src/overlays/actors/ovl_Obj_Syokudai/ovl_Obj_Syokudai_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_SyokudaiSegmentBssEnd = .;
        _ovl_Obj_SyokudaiSegmentEnd = .;
    }
    _ovl_Obj_SyokudaiSegmentBssSize = ABSOLUTE( _ovl_Obj_SyokudaiSegmentBssEnd - _ovl_Obj_SyokudaiSegmentBssStart );

    _ovl_Obj_TimeblockSegmentRomStart = _RomSize;
    ..ovl_Obj_Timeblock : AT(_RomSize)
    {
        _ovl_Obj_TimeblockSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_TimeblockSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Timeblock/z_obj_timeblock.o (.text)
            build/data/overlays/actors/z_obj_timeblock.data.o (.text)
            build/data/overlays/actors/z_obj_timeblock.reloc.o (.text)
        _ovl_Obj_TimeblockSegmentTextEnd = .;
    _ovl_Obj_TimeblockSegmentTextSize = ABSOLUTE( _ovl_Obj_TimeblockSegmentTextEnd - _ovl_Obj_TimeblockSegmentTextStart );
        _ovl_Obj_TimeblockSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Timeblock/z_obj_timeblock.o (.data)
            build/data/overlays/actors/z_obj_timeblock.data.o (.data)
            build/data/overlays/actors/z_obj_timeblock.reloc.o (.data)
        _ovl_Obj_TimeblockSegmentDataEnd = .;
    _ovl_Obj_TimeblockSegmentDataSize = ABSOLUTE( _ovl_Obj_TimeblockSegmentDataEnd - _ovl_Obj_TimeblockSegmentDataStart );
        _ovl_Obj_TimeblockSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Timeblock/z_obj_timeblock.o (.rodata)
            build/data/overlays/actors/z_obj_timeblock.data.o (.rodata)
            build/data/overlays/actors/z_obj_timeblock.reloc.o (.rodata)
        _ovl_Obj_TimeblockSegmentRoDataEnd = .;
    _ovl_Obj_TimeblockSegmentRoDataSize = ABSOLUTE( _ovl_Obj_TimeblockSegmentRoDataEnd - _ovl_Obj_TimeblockSegmentRoDataStart );
        _ovl_Obj_TimeblockSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Timeblock/z_obj_timeblock.o (.sdata)
            build/data/overlays/actors/z_obj_timeblock.data.o (.sdata)
            build/data/overlays/actors/z_obj_timeblock.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_TimeblockSegmentSDataEnd = .;
        _ovl_Obj_TimeblockSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Timeblock/z_obj_timeblock.o (.ovl)
            build/data/overlays/actors/z_obj_timeblock.data.o (.ovl)
            build/data/overlays/actors/z_obj_timeblock.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_TimeblockSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_TimeblockSegmentOvlEnd - _ovl_Obj_TimeblockSegmentTextStart );
    _ovl_Obj_TimeblockSegmentRomEnd = _RomSize;

    ..ovl_Obj_Timeblock.bss ADDR(..ovl_Obj_Timeblock) + SIZEOF(..ovl_Obj_Timeblock) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_TimeblockSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Timeblock/z_obj_timeblock.o (.sbss)
            build/data/overlays/actors/z_obj_timeblock.data.o (.sbss)
            build/data/overlays/actors/z_obj_timeblock.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Timeblock/z_obj_timeblock.o (.scommon)
            build/data/overlays/actors/z_obj_timeblock.data.o (.scommon)
            build/data/overlays/actors/z_obj_timeblock.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Timeblock/z_obj_timeblock.o (.bss)
            build/data/overlays/actors/z_obj_timeblock.data.o (.bss)
            build/data/overlays/actors/z_obj_timeblock.reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Timeblock/z_obj_timeblock.o (COMMON)
            build/data/overlays/actors/z_obj_timeblock.data.o (COMMON)
            build/data/overlays/actors/z_obj_timeblock.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_TimeblockSegmentBssEnd = .;
        _ovl_Obj_TimeblockSegmentEnd = .;
    }
    _ovl_Obj_TimeblockSegmentBssSize = ABSOLUTE( _ovl_Obj_TimeblockSegmentBssEnd - _ovl_Obj_TimeblockSegmentBssStart );

    _ovl_Obj_TsuboSegmentRomStart = _RomSize;
    ..ovl_Obj_Tsubo : AT(_RomSize)
    {
        _ovl_Obj_TsuboSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_TsuboSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Tsubo/z_obj_tsubo.o (.text)
            build/data/overlays/actors/z_obj_tsubo.data.o (.text)
            build/data/overlays/actors/z_obj_tsubo.reloc.o (.text)
        _ovl_Obj_TsuboSegmentTextEnd = .;
    _ovl_Obj_TsuboSegmentTextSize = ABSOLUTE( _ovl_Obj_TsuboSegmentTextEnd - _ovl_Obj_TsuboSegmentTextStart );
        _ovl_Obj_TsuboSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Tsubo/z_obj_tsubo.o (.data)
            build/data/overlays/actors/z_obj_tsubo.data.o (.data)
            build/data/overlays/actors/z_obj_tsubo.reloc.o (.data)
        _ovl_Obj_TsuboSegmentDataEnd = .;
    _ovl_Obj_TsuboSegmentDataSize = ABSOLUTE( _ovl_Obj_TsuboSegmentDataEnd - _ovl_Obj_TsuboSegmentDataStart );
        _ovl_Obj_TsuboSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Tsubo/z_obj_tsubo.o (.rodata)
            build/data/overlays/actors/z_obj_tsubo.data.o (.rodata)
            build/data/overlays/actors/z_obj_tsubo.reloc.o (.rodata)
        _ovl_Obj_TsuboSegmentRoDataEnd = .;
    _ovl_Obj_TsuboSegmentRoDataSize = ABSOLUTE( _ovl_Obj_TsuboSegmentRoDataEnd - _ovl_Obj_TsuboSegmentRoDataStart );
        _ovl_Obj_TsuboSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Tsubo/z_obj_tsubo.o (.sdata)
            build/data/overlays/actors/z_obj_tsubo.data.o (.sdata)
            build/data/overlays/actors/z_obj_tsubo.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_TsuboSegmentSDataEnd = .;
        _ovl_Obj_TsuboSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Tsubo/z_obj_tsubo.o (.ovl)
            build/data/overlays/actors/z_obj_tsubo.data.o (.ovl)
            build/data/overlays/actors/z_obj_tsubo.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_TsuboSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_TsuboSegmentOvlEnd - _ovl_Obj_TsuboSegmentTextStart );
    _ovl_Obj_TsuboSegmentRomEnd = _RomSize;

    ..ovl_Obj_Tsubo.bss ADDR(..ovl_Obj_Tsubo) + SIZEOF(..ovl_Obj_Tsubo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_TsuboSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Tsubo/z_obj_tsubo.o (.sbss)
            build/data/overlays/actors/z_obj_tsubo.data.o (.sbss)
            build/data/overlays/actors/z_obj_tsubo.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Tsubo/z_obj_tsubo.o (.scommon)
            build/data/overlays/actors/z_obj_tsubo.data.o (.scommon)
            build/data/overlays/actors/z_obj_tsubo.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Tsubo/z_obj_tsubo.o (.bss)
            build/data/overlays/actors/z_obj_tsubo.data.o (.bss)
            build/data/overlays/actors/z_obj_tsubo.reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Tsubo/z_obj_tsubo.o (COMMON)
            build/data/overlays/actors/z_obj_tsubo.data.o (COMMON)
            build/data/overlays/actors/z_obj_tsubo.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_TsuboSegmentBssEnd = .;
        _ovl_Obj_TsuboSegmentEnd = .;
    }
    _ovl_Obj_TsuboSegmentBssSize = ABSOLUTE( _ovl_Obj_TsuboSegmentBssEnd - _ovl_Obj_TsuboSegmentBssStart );

    _ovl_Obj_Warp2blockSegmentRomStart = _RomSize;
    ..ovl_Obj_Warp2block : AT(_RomSize)
    {
        _ovl_Obj_Warp2blockSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Obj_Warp2blockSegmentTextStart = .;
            build/src/overlays/actors/ovl_Obj_Warp2block/z_obj_warp2block.o (.text)
            build/data/overlays/actors/z_obj_warp2block.data.o (.text)
            build/data/overlays/actors/z_obj_warp2block.reloc.o (.text)
        _ovl_Obj_Warp2blockSegmentTextEnd = .;
    _ovl_Obj_Warp2blockSegmentTextSize = ABSOLUTE( _ovl_Obj_Warp2blockSegmentTextEnd - _ovl_Obj_Warp2blockSegmentTextStart );
        _ovl_Obj_Warp2blockSegmentDataStart = .;
            build/src/overlays/actors/ovl_Obj_Warp2block/z_obj_warp2block.o (.data)
            build/data/overlays/actors/z_obj_warp2block.data.o (.data)
            build/data/overlays/actors/z_obj_warp2block.reloc.o (.data)
        _ovl_Obj_Warp2blockSegmentDataEnd = .;
    _ovl_Obj_Warp2blockSegmentDataSize = ABSOLUTE( _ovl_Obj_Warp2blockSegmentDataEnd - _ovl_Obj_Warp2blockSegmentDataStart );
        _ovl_Obj_Warp2blockSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Obj_Warp2block/z_obj_warp2block.o (.rodata)
            build/data/overlays/actors/z_obj_warp2block.data.o (.rodata)
            build/data/overlays/actors/z_obj_warp2block.reloc.o (.rodata)
        _ovl_Obj_Warp2blockSegmentRoDataEnd = .;
    _ovl_Obj_Warp2blockSegmentRoDataSize = ABSOLUTE( _ovl_Obj_Warp2blockSegmentRoDataEnd - _ovl_Obj_Warp2blockSegmentRoDataStart );
        _ovl_Obj_Warp2blockSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Obj_Warp2block/z_obj_warp2block.o (.sdata)
            build/data/overlays/actors/z_obj_warp2block.data.o (.sdata)
            build/data/overlays/actors/z_obj_warp2block.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Obj_Warp2blockSegmentSDataEnd = .;
        _ovl_Obj_Warp2blockSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Obj_Warp2block/z_obj_warp2block.o (.ovl)
            build/data/overlays/actors/z_obj_warp2block.data.o (.ovl)
            build/data/overlays/actors/z_obj_warp2block.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Obj_Warp2blockSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Obj_Warp2blockSegmentOvlEnd - _ovl_Obj_Warp2blockSegmentTextStart );
    _ovl_Obj_Warp2blockSegmentRomEnd = _RomSize;

    ..ovl_Obj_Warp2block.bss ADDR(..ovl_Obj_Warp2block) + SIZEOF(..ovl_Obj_Warp2block) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Obj_Warp2blockSegmentBssStart = .;
            build/src/overlays/actors/ovl_Obj_Warp2block/z_obj_warp2block.o (.sbss)
            build/data/overlays/actors/z_obj_warp2block.data.o (.sbss)
            build/data/overlays/actors/z_obj_warp2block.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Obj_Warp2block/z_obj_warp2block.o (.scommon)
            build/data/overlays/actors/z_obj_warp2block.data.o (.scommon)
            build/data/overlays/actors/z_obj_warp2block.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Obj_Warp2block/z_obj_warp2block.o (.bss)
            build/data/overlays/actors/z_obj_warp2block.data.o (.bss)
            build/data/overlays/actors/z_obj_warp2block.reloc.o (.bss)
            build/src/overlays/actors/ovl_Obj_Warp2block/z_obj_warp2block.o (COMMON)
            build/data/overlays/actors/z_obj_warp2block.data.o (COMMON)
            build/data/overlays/actors/z_obj_warp2block.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Obj_Warp2blockSegmentBssEnd = .;
        _ovl_Obj_Warp2blockSegmentEnd = .;
    }
    _ovl_Obj_Warp2blockSegmentBssSize = ABSOLUTE( _ovl_Obj_Warp2blockSegmentBssEnd - _ovl_Obj_Warp2blockSegmentBssStart );

    _ovl_Object_KankyoSegmentRomStart = _RomSize;
    ..ovl_Object_Kankyo : AT(_RomSize)
    {
        _ovl_Object_KankyoSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Object_KankyoSegmentTextStart = .;
            build/src/overlays/actors/ovl_Object_Kankyo/z_object_kankyo.o (.text)
            build/data/overlays/actors/z_object_kankyo.data.o (.text)
            build/data/overlays/actors/z_object_kankyo.reloc.o (.text)
        _ovl_Object_KankyoSegmentTextEnd = .;
    _ovl_Object_KankyoSegmentTextSize = ABSOLUTE( _ovl_Object_KankyoSegmentTextEnd - _ovl_Object_KankyoSegmentTextStart );
        _ovl_Object_KankyoSegmentDataStart = .;
            build/src/overlays/actors/ovl_Object_Kankyo/z_object_kankyo.o (.data)
            build/data/overlays/actors/z_object_kankyo.data.o (.data)
            build/data/overlays/actors/z_object_kankyo.reloc.o (.data)
        _ovl_Object_KankyoSegmentDataEnd = .;
    _ovl_Object_KankyoSegmentDataSize = ABSOLUTE( _ovl_Object_KankyoSegmentDataEnd - _ovl_Object_KankyoSegmentDataStart );
        _ovl_Object_KankyoSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Object_Kankyo/z_object_kankyo.o (.rodata)
            build/data/overlays/actors/z_object_kankyo.data.o (.rodata)
            build/data/overlays/actors/z_object_kankyo.reloc.o (.rodata)
        _ovl_Object_KankyoSegmentRoDataEnd = .;
    _ovl_Object_KankyoSegmentRoDataSize = ABSOLUTE( _ovl_Object_KankyoSegmentRoDataEnd - _ovl_Object_KankyoSegmentRoDataStart );
        _ovl_Object_KankyoSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Object_Kankyo/z_object_kankyo.o (.sdata)
            build/data/overlays/actors/z_object_kankyo.data.o (.sdata)
            build/data/overlays/actors/z_object_kankyo.reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Object_KankyoSegmentSDataEnd = .;
        _ovl_Object_KankyoSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Object_Kankyo/z_object_kankyo.o (.ovl)
            build/data/overlays/actors/z_object_kankyo.data.o (.ovl)
            build/data/overlays/actors/z_object_kankyo.reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Object_KankyoSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Object_KankyoSegmentOvlEnd - _ovl_Object_KankyoSegmentTextStart );
    _ovl_Object_KankyoSegmentRomEnd = _RomSize;

    ..ovl_Object_Kankyo.bss ADDR(..ovl_Object_Kankyo) + SIZEOF(..ovl_Object_Kankyo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Object_KankyoSegmentBssStart = .;
            build/src/overlays/actors/ovl_Object_Kankyo/z_object_kankyo.o (.sbss)
            build/data/overlays/actors/z_object_kankyo.data.o (.sbss)
            build/data/overlays/actors/z_object_kankyo.reloc.o (.sbss)
            build/src/overlays/actors/ovl_Object_Kankyo/z_object_kankyo.o (.scommon)
            build/data/overlays/actors/z_object_kankyo.data.o (.scommon)
            build/data/overlays/actors/z_object_kankyo.reloc.o (.scommon)
            build/src/overlays/actors/ovl_Object_Kankyo/z_object_kankyo.o (.bss)
            build/data/overlays/actors/z_object_kankyo.data.o (.bss)
            build/data/overlays/actors/z_object_kankyo.reloc.o (.bss)
            build/src/overlays/actors/ovl_Object_Kankyo/z_object_kankyo.o (COMMON)
            build/data/overlays/actors/z_object_kankyo.data.o (COMMON)
            build/data/overlays/actors/z_object_kankyo.reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Object_KankyoSegmentBssEnd = .;
        _ovl_Object_KankyoSegmentEnd = .;
    }
    _ovl_Object_KankyoSegmentBssSize = ABSOLUTE( _ovl_Object_KankyoSegmentBssEnd - _ovl_Object_KankyoSegmentBssStart );

    _ovl_Oceff_SpotSegmentRomStart = _RomSize;
    ..ovl_Oceff_Spot : AT(_RomSize)
    {
        _ovl_Oceff_SpotSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Oceff_SpotSegmentTextStart = .;
            build/src/overlays/actors/ovl_Oceff_Spot/z_oceff_spot.o (.text)
            build/src/overlays/actors/ovl_Oceff_Spot/ovl_Oceff_Spot_reloc.o (.text)
        _ovl_Oceff_SpotSegmentTextEnd = .;
    _ovl_Oceff_SpotSegmentTextSize = ABSOLUTE( _ovl_Oceff_SpotSegmentTextEnd - _ovl_Oceff_SpotSegmentTextStart );
        _ovl_Oceff_SpotSegmentDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Spot/z_oceff_spot.o (.data)
            build/src/overlays/actors/ovl_Oceff_Spot/ovl_Oceff_Spot_reloc.o (.data)
        _ovl_Oceff_SpotSegmentDataEnd = .;
    _ovl_Oceff_SpotSegmentDataSize = ABSOLUTE( _ovl_Oceff_SpotSegmentDataEnd - _ovl_Oceff_SpotSegmentDataStart );
        _ovl_Oceff_SpotSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Spot/z_oceff_spot.o (.rodata)
            build/src/overlays/actors/ovl_Oceff_Spot/ovl_Oceff_Spot_reloc.o (.rodata)
        _ovl_Oceff_SpotSegmentRoDataEnd = .;
    _ovl_Oceff_SpotSegmentRoDataSize = ABSOLUTE( _ovl_Oceff_SpotSegmentRoDataEnd - _ovl_Oceff_SpotSegmentRoDataStart );
        _ovl_Oceff_SpotSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Spot/z_oceff_spot.o (.sdata)
            build/src/overlays/actors/ovl_Oceff_Spot/ovl_Oceff_Spot_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Oceff_SpotSegmentSDataEnd = .;
        _ovl_Oceff_SpotSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Oceff_Spot/z_oceff_spot.o (.ovl)
            build/src/overlays/actors/ovl_Oceff_Spot/ovl_Oceff_Spot_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Oceff_SpotSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Oceff_SpotSegmentOvlEnd - _ovl_Oceff_SpotSegmentTextStart );
    _ovl_Oceff_SpotSegmentRomEnd = _RomSize;

    ..ovl_Oceff_Spot.bss ADDR(..ovl_Oceff_Spot) + SIZEOF(..ovl_Oceff_Spot) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Oceff_SpotSegmentBssStart = .;
            build/src/overlays/actors/ovl_Oceff_Spot/z_oceff_spot.o (.sbss)
            build/src/overlays/actors/ovl_Oceff_Spot/ovl_Oceff_Spot_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Oceff_Spot/z_oceff_spot.o (.scommon)
            build/src/overlays/actors/ovl_Oceff_Spot/ovl_Oceff_Spot_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Oceff_Spot/z_oceff_spot.o (.bss)
            build/src/overlays/actors/ovl_Oceff_Spot/ovl_Oceff_Spot_reloc.o (.bss)
            build/src/overlays/actors/ovl_Oceff_Spot/z_oceff_spot.o (COMMON)
            build/src/overlays/actors/ovl_Oceff_Spot/ovl_Oceff_Spot_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Oceff_SpotSegmentBssEnd = .;
        _ovl_Oceff_SpotSegmentEnd = .;
    }
    _ovl_Oceff_SpotSegmentBssSize = ABSOLUTE( _ovl_Oceff_SpotSegmentBssEnd - _ovl_Oceff_SpotSegmentBssStart );

    _ovl_Oceff_StormSegmentRomStart = _RomSize;
    ..ovl_Oceff_Storm : AT(_RomSize)
    {
        _ovl_Oceff_StormSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Oceff_StormSegmentTextStart = .;
            build/src/overlays/actors/ovl_Oceff_Storm/z_oceff_storm.o (.text)
            build/src/overlays/actors/ovl_Oceff_Storm/ovl_Oceff_Storm_reloc.o (.text)
        _ovl_Oceff_StormSegmentTextEnd = .;
    _ovl_Oceff_StormSegmentTextSize = ABSOLUTE( _ovl_Oceff_StormSegmentTextEnd - _ovl_Oceff_StormSegmentTextStart );
        _ovl_Oceff_StormSegmentDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Storm/z_oceff_storm.o (.data)
            build/src/overlays/actors/ovl_Oceff_Storm/ovl_Oceff_Storm_reloc.o (.data)
        _ovl_Oceff_StormSegmentDataEnd = .;
    _ovl_Oceff_StormSegmentDataSize = ABSOLUTE( _ovl_Oceff_StormSegmentDataEnd - _ovl_Oceff_StormSegmentDataStart );
        _ovl_Oceff_StormSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Storm/z_oceff_storm.o (.rodata)
            build/src/overlays/actors/ovl_Oceff_Storm/ovl_Oceff_Storm_reloc.o (.rodata)
        _ovl_Oceff_StormSegmentRoDataEnd = .;
    _ovl_Oceff_StormSegmentRoDataSize = ABSOLUTE( _ovl_Oceff_StormSegmentRoDataEnd - _ovl_Oceff_StormSegmentRoDataStart );
        _ovl_Oceff_StormSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Storm/z_oceff_storm.o (.sdata)
            build/src/overlays/actors/ovl_Oceff_Storm/ovl_Oceff_Storm_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Oceff_StormSegmentSDataEnd = .;
        _ovl_Oceff_StormSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Oceff_Storm/z_oceff_storm.o (.ovl)
            build/src/overlays/actors/ovl_Oceff_Storm/ovl_Oceff_Storm_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Oceff_StormSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Oceff_StormSegmentOvlEnd - _ovl_Oceff_StormSegmentTextStart );
    _ovl_Oceff_StormSegmentRomEnd = _RomSize;

    ..ovl_Oceff_Storm.bss ADDR(..ovl_Oceff_Storm) + SIZEOF(..ovl_Oceff_Storm) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Oceff_StormSegmentBssStart = .;
            build/src/overlays/actors/ovl_Oceff_Storm/z_oceff_storm.o (.sbss)
            build/src/overlays/actors/ovl_Oceff_Storm/ovl_Oceff_Storm_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Oceff_Storm/z_oceff_storm.o (.scommon)
            build/src/overlays/actors/ovl_Oceff_Storm/ovl_Oceff_Storm_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Oceff_Storm/z_oceff_storm.o (.bss)
            build/src/overlays/actors/ovl_Oceff_Storm/ovl_Oceff_Storm_reloc.o (.bss)
            build/src/overlays/actors/ovl_Oceff_Storm/z_oceff_storm.o (COMMON)
            build/src/overlays/actors/ovl_Oceff_Storm/ovl_Oceff_Storm_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Oceff_StormSegmentBssEnd = .;
        _ovl_Oceff_StormSegmentEnd = .;
    }
    _ovl_Oceff_StormSegmentBssSize = ABSOLUTE( _ovl_Oceff_StormSegmentBssEnd - _ovl_Oceff_StormSegmentBssStart );

    _ovl_Oceff_WipeSegmentRomStart = _RomSize;
    ..ovl_Oceff_Wipe : AT(_RomSize)
    {
        _ovl_Oceff_WipeSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Oceff_WipeSegmentTextStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe/z_oceff_wipe.o (.text)
            build/src/overlays/actors/ovl_Oceff_Wipe/ovl_Oceff_Wipe_reloc.o (.text)
        _ovl_Oceff_WipeSegmentTextEnd = .;
    _ovl_Oceff_WipeSegmentTextSize = ABSOLUTE( _ovl_Oceff_WipeSegmentTextEnd - _ovl_Oceff_WipeSegmentTextStart );
        _ovl_Oceff_WipeSegmentDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe/z_oceff_wipe.o (.data)
            build/src/overlays/actors/ovl_Oceff_Wipe/ovl_Oceff_Wipe_reloc.o (.data)
        _ovl_Oceff_WipeSegmentDataEnd = .;
    _ovl_Oceff_WipeSegmentDataSize = ABSOLUTE( _ovl_Oceff_WipeSegmentDataEnd - _ovl_Oceff_WipeSegmentDataStart );
        _ovl_Oceff_WipeSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe/z_oceff_wipe.o (.rodata)
            build/src/overlays/actors/ovl_Oceff_Wipe/ovl_Oceff_Wipe_reloc.o (.rodata)
        _ovl_Oceff_WipeSegmentRoDataEnd = .;
    _ovl_Oceff_WipeSegmentRoDataSize = ABSOLUTE( _ovl_Oceff_WipeSegmentRoDataEnd - _ovl_Oceff_WipeSegmentRoDataStart );
        _ovl_Oceff_WipeSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe/z_oceff_wipe.o (.sdata)
            build/src/overlays/actors/ovl_Oceff_Wipe/ovl_Oceff_Wipe_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Oceff_WipeSegmentSDataEnd = .;
        _ovl_Oceff_WipeSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe/z_oceff_wipe.o (.ovl)
            build/src/overlays/actors/ovl_Oceff_Wipe/ovl_Oceff_Wipe_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Oceff_WipeSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Oceff_WipeSegmentOvlEnd - _ovl_Oceff_WipeSegmentTextStart );
    _ovl_Oceff_WipeSegmentRomEnd = _RomSize;

    ..ovl_Oceff_Wipe.bss ADDR(..ovl_Oceff_Wipe) + SIZEOF(..ovl_Oceff_Wipe) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Oceff_WipeSegmentBssStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe/z_oceff_wipe.o (.sbss)
            build/src/overlays/actors/ovl_Oceff_Wipe/ovl_Oceff_Wipe_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Oceff_Wipe/z_oceff_wipe.o (.scommon)
            build/src/overlays/actors/ovl_Oceff_Wipe/ovl_Oceff_Wipe_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Oceff_Wipe/z_oceff_wipe.o (.bss)
            build/src/overlays/actors/ovl_Oceff_Wipe/ovl_Oceff_Wipe_reloc.o (.bss)
            build/src/overlays/actors/ovl_Oceff_Wipe/z_oceff_wipe.o (COMMON)
            build/src/overlays/actors/ovl_Oceff_Wipe/ovl_Oceff_Wipe_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Oceff_WipeSegmentBssEnd = .;
        _ovl_Oceff_WipeSegmentEnd = .;
    }
    _ovl_Oceff_WipeSegmentBssSize = ABSOLUTE( _ovl_Oceff_WipeSegmentBssEnd - _ovl_Oceff_WipeSegmentBssStart );

    _ovl_Oceff_Wipe2SegmentRomStart = _RomSize;
    ..ovl_Oceff_Wipe2 : AT(_RomSize)
    {
        _ovl_Oceff_Wipe2SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe2SegmentTextStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe2/z_oceff_wipe2.o (.text)
            build/src/overlays/actors/ovl_Oceff_Wipe2/ovl_Oceff_Wipe2_reloc.o (.text)
        _ovl_Oceff_Wipe2SegmentTextEnd = .;
    _ovl_Oceff_Wipe2SegmentTextSize = ABSOLUTE( _ovl_Oceff_Wipe2SegmentTextEnd - _ovl_Oceff_Wipe2SegmentTextStart );
        _ovl_Oceff_Wipe2SegmentDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe2/z_oceff_wipe2.o (.data)
            build/src/overlays/actors/ovl_Oceff_Wipe2/ovl_Oceff_Wipe2_reloc.o (.data)
        _ovl_Oceff_Wipe2SegmentDataEnd = .;
    _ovl_Oceff_Wipe2SegmentDataSize = ABSOLUTE( _ovl_Oceff_Wipe2SegmentDataEnd - _ovl_Oceff_Wipe2SegmentDataStart );
        _ovl_Oceff_Wipe2SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe2/z_oceff_wipe2.o (.rodata)
            build/src/overlays/actors/ovl_Oceff_Wipe2/ovl_Oceff_Wipe2_reloc.o (.rodata)
        _ovl_Oceff_Wipe2SegmentRoDataEnd = .;
    _ovl_Oceff_Wipe2SegmentRoDataSize = ABSOLUTE( _ovl_Oceff_Wipe2SegmentRoDataEnd - _ovl_Oceff_Wipe2SegmentRoDataStart );
        _ovl_Oceff_Wipe2SegmentSDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe2/z_oceff_wipe2.o (.sdata)
            build/src/overlays/actors/ovl_Oceff_Wipe2/ovl_Oceff_Wipe2_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe2SegmentSDataEnd = .;
        _ovl_Oceff_Wipe2SegmentOvlStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe2/z_oceff_wipe2.o (.ovl)
            build/src/overlays/actors/ovl_Oceff_Wipe2/ovl_Oceff_Wipe2_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe2SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Oceff_Wipe2SegmentOvlEnd - _ovl_Oceff_Wipe2SegmentTextStart );
    _ovl_Oceff_Wipe2SegmentRomEnd = _RomSize;

    ..ovl_Oceff_Wipe2.bss ADDR(..ovl_Oceff_Wipe2) + SIZEOF(..ovl_Oceff_Wipe2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe2SegmentBssStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe2/z_oceff_wipe2.o (.sbss)
            build/src/overlays/actors/ovl_Oceff_Wipe2/ovl_Oceff_Wipe2_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Oceff_Wipe2/z_oceff_wipe2.o (.scommon)
            build/src/overlays/actors/ovl_Oceff_Wipe2/ovl_Oceff_Wipe2_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Oceff_Wipe2/z_oceff_wipe2.o (.bss)
            build/src/overlays/actors/ovl_Oceff_Wipe2/ovl_Oceff_Wipe2_reloc.o (.bss)
            build/src/overlays/actors/ovl_Oceff_Wipe2/z_oceff_wipe2.o (COMMON)
            build/src/overlays/actors/ovl_Oceff_Wipe2/ovl_Oceff_Wipe2_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe2SegmentBssEnd = .;
        _ovl_Oceff_Wipe2SegmentEnd = .;
    }
    _ovl_Oceff_Wipe2SegmentBssSize = ABSOLUTE( _ovl_Oceff_Wipe2SegmentBssEnd - _ovl_Oceff_Wipe2SegmentBssStart );

    _ovl_Oceff_Wipe3SegmentRomStart = _RomSize;
    ..ovl_Oceff_Wipe3 : AT(_RomSize)
    {
        _ovl_Oceff_Wipe3SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe3SegmentTextStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe3/z_oceff_wipe3.o (.text)
            build/src/overlays/actors/ovl_Oceff_Wipe3/ovl_Oceff_Wipe3_reloc.o (.text)
        _ovl_Oceff_Wipe3SegmentTextEnd = .;
    _ovl_Oceff_Wipe3SegmentTextSize = ABSOLUTE( _ovl_Oceff_Wipe3SegmentTextEnd - _ovl_Oceff_Wipe3SegmentTextStart );
        _ovl_Oceff_Wipe3SegmentDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe3/z_oceff_wipe3.o (.data)
            build/src/overlays/actors/ovl_Oceff_Wipe3/ovl_Oceff_Wipe3_reloc.o (.data)
        _ovl_Oceff_Wipe3SegmentDataEnd = .;
    _ovl_Oceff_Wipe3SegmentDataSize = ABSOLUTE( _ovl_Oceff_Wipe3SegmentDataEnd - _ovl_Oceff_Wipe3SegmentDataStart );
        _ovl_Oceff_Wipe3SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe3/z_oceff_wipe3.o (.rodata)
            build/src/overlays/actors/ovl_Oceff_Wipe3/ovl_Oceff_Wipe3_reloc.o (.rodata)
        _ovl_Oceff_Wipe3SegmentRoDataEnd = .;
    _ovl_Oceff_Wipe3SegmentRoDataSize = ABSOLUTE( _ovl_Oceff_Wipe3SegmentRoDataEnd - _ovl_Oceff_Wipe3SegmentRoDataStart );
        _ovl_Oceff_Wipe3SegmentSDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe3/z_oceff_wipe3.o (.sdata)
            build/src/overlays/actors/ovl_Oceff_Wipe3/ovl_Oceff_Wipe3_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe3SegmentSDataEnd = .;
        _ovl_Oceff_Wipe3SegmentOvlStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe3/z_oceff_wipe3.o (.ovl)
            build/src/overlays/actors/ovl_Oceff_Wipe3/ovl_Oceff_Wipe3_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe3SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Oceff_Wipe3SegmentOvlEnd - _ovl_Oceff_Wipe3SegmentTextStart );
    _ovl_Oceff_Wipe3SegmentRomEnd = _RomSize;

    ..ovl_Oceff_Wipe3.bss ADDR(..ovl_Oceff_Wipe3) + SIZEOF(..ovl_Oceff_Wipe3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe3SegmentBssStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe3/z_oceff_wipe3.o (.sbss)
            build/src/overlays/actors/ovl_Oceff_Wipe3/ovl_Oceff_Wipe3_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Oceff_Wipe3/z_oceff_wipe3.o (.scommon)
            build/src/overlays/actors/ovl_Oceff_Wipe3/ovl_Oceff_Wipe3_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Oceff_Wipe3/z_oceff_wipe3.o (.bss)
            build/src/overlays/actors/ovl_Oceff_Wipe3/ovl_Oceff_Wipe3_reloc.o (.bss)
            build/src/overlays/actors/ovl_Oceff_Wipe3/z_oceff_wipe3.o (COMMON)
            build/src/overlays/actors/ovl_Oceff_Wipe3/ovl_Oceff_Wipe3_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe3SegmentBssEnd = .;
        _ovl_Oceff_Wipe3SegmentEnd = .;
    }
    _ovl_Oceff_Wipe3SegmentBssSize = ABSOLUTE( _ovl_Oceff_Wipe3SegmentBssEnd - _ovl_Oceff_Wipe3SegmentBssStart );

    _ovl_Oceff_Wipe4SegmentRomStart = _RomSize;
    ..ovl_Oceff_Wipe4 : AT(_RomSize)
    {
        _ovl_Oceff_Wipe4SegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe4SegmentTextStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe4/z_oceff_wipe4.o (.text)
            build/src/overlays/actors/ovl_Oceff_Wipe4/ovl_Oceff_Wipe4_reloc.o (.text)
        _ovl_Oceff_Wipe4SegmentTextEnd = .;
    _ovl_Oceff_Wipe4SegmentTextSize = ABSOLUTE( _ovl_Oceff_Wipe4SegmentTextEnd - _ovl_Oceff_Wipe4SegmentTextStart );
        _ovl_Oceff_Wipe4SegmentDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe4/z_oceff_wipe4.o (.data)
            build/src/overlays/actors/ovl_Oceff_Wipe4/ovl_Oceff_Wipe4_reloc.o (.data)
        _ovl_Oceff_Wipe4SegmentDataEnd = .;
    _ovl_Oceff_Wipe4SegmentDataSize = ABSOLUTE( _ovl_Oceff_Wipe4SegmentDataEnd - _ovl_Oceff_Wipe4SegmentDataStart );
        _ovl_Oceff_Wipe4SegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe4/z_oceff_wipe4.o (.rodata)
            build/src/overlays/actors/ovl_Oceff_Wipe4/ovl_Oceff_Wipe4_reloc.o (.rodata)
        _ovl_Oceff_Wipe4SegmentRoDataEnd = .;
    _ovl_Oceff_Wipe4SegmentRoDataSize = ABSOLUTE( _ovl_Oceff_Wipe4SegmentRoDataEnd - _ovl_Oceff_Wipe4SegmentRoDataStart );
        _ovl_Oceff_Wipe4SegmentSDataStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe4/z_oceff_wipe4.o (.sdata)
            build/src/overlays/actors/ovl_Oceff_Wipe4/ovl_Oceff_Wipe4_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe4SegmentSDataEnd = .;
        _ovl_Oceff_Wipe4SegmentOvlStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe4/z_oceff_wipe4.o (.ovl)
            build/src/overlays/actors/ovl_Oceff_Wipe4/ovl_Oceff_Wipe4_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe4SegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Oceff_Wipe4SegmentOvlEnd - _ovl_Oceff_Wipe4SegmentTextStart );
    _ovl_Oceff_Wipe4SegmentRomEnd = _RomSize;

    ..ovl_Oceff_Wipe4.bss ADDR(..ovl_Oceff_Wipe4) + SIZEOF(..ovl_Oceff_Wipe4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe4SegmentBssStart = .;
            build/src/overlays/actors/ovl_Oceff_Wipe4/z_oceff_wipe4.o (.sbss)
            build/src/overlays/actors/ovl_Oceff_Wipe4/ovl_Oceff_Wipe4_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Oceff_Wipe4/z_oceff_wipe4.o (.scommon)
            build/src/overlays/actors/ovl_Oceff_Wipe4/ovl_Oceff_Wipe4_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Oceff_Wipe4/z_oceff_wipe4.o (.bss)
            build/src/overlays/actors/ovl_Oceff_Wipe4/ovl_Oceff_Wipe4_reloc.o (.bss)
            build/src/overlays/actors/ovl_Oceff_Wipe4/z_oceff_wipe4.o (COMMON)
            build/src/overlays/actors/ovl_Oceff_Wipe4/ovl_Oceff_Wipe4_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Oceff_Wipe4SegmentBssEnd = .;
        _ovl_Oceff_Wipe4SegmentEnd = .;
    }
    _ovl_Oceff_Wipe4SegmentBssSize = ABSOLUTE( _ovl_Oceff_Wipe4SegmentBssEnd - _ovl_Oceff_Wipe4SegmentBssStart );

    _ovl_Shot_SunSegmentRomStart = _RomSize;
    ..ovl_Shot_Sun : AT(_RomSize)
    {
        _ovl_Shot_SunSegmentStart = .;
        . = ALIGN(0x10);
        _ovl_Shot_SunSegmentTextStart = .;
            build/src/overlays/actors/ovl_Shot_Sun/z_shot_sun.o (.text)
            build/src/overlays/actors/ovl_Shot_Sun/ovl_Shot_Sun_reloc.o (.text)
        _ovl_Shot_SunSegmentTextEnd = .;
    _ovl_Shot_SunSegmentTextSize = ABSOLUTE( _ovl_Shot_SunSegmentTextEnd - _ovl_Shot_SunSegmentTextStart );
        _ovl_Shot_SunSegmentDataStart = .;
            build/src/overlays/actors/ovl_Shot_Sun/z_shot_sun.o (.data)
            build/src/overlays/actors/ovl_Shot_Sun/ovl_Shot_Sun_reloc.o (.data)
        _ovl_Shot_SunSegmentDataEnd = .;
    _ovl_Shot_SunSegmentDataSize = ABSOLUTE( _ovl_Shot_SunSegmentDataEnd - _ovl_Shot_SunSegmentDataStart );
        _ovl_Shot_SunSegmentRoDataStart = .;
            build/src/overlays/actors/ovl_Shot_Sun/z_shot_sun.o (.rodata)
            build/src/overlays/actors/ovl_Shot_Sun/ovl_Shot_Sun_reloc.o (.rodata)
        _ovl_Shot_SunSegmentRoDataEnd = .;
    _ovl_Shot_SunSegmentRoDataSize = ABSOLUTE( _ovl_Shot_SunSegmentRoDataEnd - _ovl_Shot_SunSegmentRoDataStart );
        _ovl_Shot_SunSegmentSDataStart = .;
            build/src/overlays/actors/ovl_Shot_Sun/z_shot_sun.o (.sdata)
            build/src/overlays/actors/ovl_Shot_Sun/ovl_Shot_Sun_reloc.o (.sdata)
        . = ALIGN(0x10);
        _ovl_Shot_SunSegmentSDataEnd = .;
        _ovl_Shot_SunSegmentOvlStart = .;
            build/src/overlays/actors/ovl_Shot_Sun/z_shot_sun.o (.ovl)
            build/src/overlays/actors/ovl_Shot_Sun/ovl_Shot_Sun_reloc.o (.ovl)
        . = ALIGN(0x10);
        _ovl_Shot_SunSegmentOvlEnd = .;
    }
    _RomSize += ( _ovl_Shot_SunSegmentOvlEnd - _ovl_Shot_SunSegmentTextStart );
    _ovl_Shot_SunSegmentRomEnd = _RomSize;

    ..ovl_Shot_Sun.bss ADDR(..ovl_Shot_Sun) + SIZEOF(..ovl_Shot_Sun) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ovl_Shot_SunSegmentBssStart = .;
            build/src/overlays/actors/ovl_Shot_Sun/z_shot_sun.o (.sbss)
            build/src/overlays/actors/ovl_Shot_Sun/ovl_Shot_Sun_reloc.o (.sbss)
            build/src/overlays/actors/ovl_Shot_Sun/z_shot_sun.o (.scommon)
            build/src/overlays/actors/ovl_Shot_Sun/ovl_Shot_Sun_reloc.o (.scommon)
            build/src/overlays/actors/ovl_Shot_Sun/z_shot_sun.o (.bss)
            build/src/overlays/actors/ovl_Shot_Sun/ovl_Shot_Sun_reloc.o (.bss)
            build/src/overlays/actors/ovl_Shot_Sun/z_shot_sun.o (COMMON)
            build/src/overlays/actors/ovl_Shot_Sun/ovl_Shot_Sun_reloc.o (COMMON)
        . = ALIGN(0x10);
        _ovl_Shot_SunSegmentBssEnd = .;
        _ovl_Shot_SunSegmentEnd = .;
    }
    _ovl_Shot_SunSegmentBssSize = ABSOLUTE( _ovl_Shot_SunSegmentBssEnd - _ovl_Shot_SunSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _gameplay_keepSegmentRomStart = _RomSize;
    ..gameplay_keep : AT(_RomSize)
    {
        _gameplay_keepSegmentStart = .;
        . = ALIGN(0x10);
        _gameplay_keepSegmentTextStart = .;
            build/baserom/gameplay_keep.o (.text)
        _gameplay_keepSegmentTextEnd = .;
    _gameplay_keepSegmentTextSize = ABSOLUTE( _gameplay_keepSegmentTextEnd - _gameplay_keepSegmentTextStart );
        _gameplay_keepSegmentDataStart = .;
            build/baserom/gameplay_keep.o (.data)
        _gameplay_keepSegmentDataEnd = .;
    _gameplay_keepSegmentDataSize = ABSOLUTE( _gameplay_keepSegmentDataEnd - _gameplay_keepSegmentDataStart );
        _gameplay_keepSegmentRoDataStart = .;
            build/baserom/gameplay_keep.o (.rodata)
        _gameplay_keepSegmentRoDataEnd = .;
    _gameplay_keepSegmentRoDataSize = ABSOLUTE( _gameplay_keepSegmentRoDataEnd - _gameplay_keepSegmentRoDataStart );
        _gameplay_keepSegmentSDataStart = .;
            build/baserom/gameplay_keep.o (.sdata)
        . = ALIGN(0x10);
        _gameplay_keepSegmentSDataEnd = .;
        _gameplay_keepSegmentOvlStart = .;
            build/baserom/gameplay_keep.o (.ovl)
        . = ALIGN(0x10);
        _gameplay_keepSegmentOvlEnd = .;
    }
    _RomSize += ( _gameplay_keepSegmentOvlEnd - _gameplay_keepSegmentTextStart );
    _gameplay_keepSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..gameplay_keep.bss ADDR(..gameplay_keep) + SIZEOF(..gameplay_keep) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _gameplay_keepSegmentBssStart = .;
            build/baserom/gameplay_keep.o (.sbss)
            build/baserom/gameplay_keep.o (.scommon)
            build/baserom/gameplay_keep.o (.bss)
            build/baserom/gameplay_keep.o (COMMON)
        . = ALIGN(0x10);
        _gameplay_keepSegmentBssEnd = .;
        _gameplay_keepSegmentEnd = .;
    }
    _gameplay_keepSegmentBssSize = ABSOLUTE( _gameplay_keepSegmentBssEnd - _gameplay_keepSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _gameplay_field_keepSegmentRomStart = _RomSize;
    ..gameplay_field_keep : AT(_RomSize)
    {
        _gameplay_field_keepSegmentStart = .;
        . = ALIGN(0x10);
        _gameplay_field_keepSegmentTextStart = .;
            build/baserom/gameplay_field_keep.o (.text)
        _gameplay_field_keepSegmentTextEnd = .;
    _gameplay_field_keepSegmentTextSize = ABSOLUTE( _gameplay_field_keepSegmentTextEnd - _gameplay_field_keepSegmentTextStart );
        _gameplay_field_keepSegmentDataStart = .;
            build/baserom/gameplay_field_keep.o (.data)
        _gameplay_field_keepSegmentDataEnd = .;
    _gameplay_field_keepSegmentDataSize = ABSOLUTE( _gameplay_field_keepSegmentDataEnd - _gameplay_field_keepSegmentDataStart );
        _gameplay_field_keepSegmentRoDataStart = .;
            build/baserom/gameplay_field_keep.o (.rodata)
        _gameplay_field_keepSegmentRoDataEnd = .;
    _gameplay_field_keepSegmentRoDataSize = ABSOLUTE( _gameplay_field_keepSegmentRoDataEnd - _gameplay_field_keepSegmentRoDataStart );
        _gameplay_field_keepSegmentSDataStart = .;
            build/baserom/gameplay_field_keep.o (.sdata)
        . = ALIGN(0x10);
        _gameplay_field_keepSegmentSDataEnd = .;
        _gameplay_field_keepSegmentOvlStart = .;
            build/baserom/gameplay_field_keep.o (.ovl)
        . = ALIGN(0x10);
        _gameplay_field_keepSegmentOvlEnd = .;
    }
    _RomSize += ( _gameplay_field_keepSegmentOvlEnd - _gameplay_field_keepSegmentTextStart );
    _gameplay_field_keepSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..gameplay_field_keep.bss ADDR(..gameplay_field_keep) + SIZEOF(..gameplay_field_keep) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _gameplay_field_keepSegmentBssStart = .;
            build/baserom/gameplay_field_keep.o (.sbss)
            build/baserom/gameplay_field_keep.o (.scommon)
            build/baserom/gameplay_field_keep.o (.bss)
            build/baserom/gameplay_field_keep.o (COMMON)
        . = ALIGN(0x10);
        _gameplay_field_keepSegmentBssEnd = .;
        _gameplay_field_keepSegmentEnd = .;
    }
    _gameplay_field_keepSegmentBssSize = ABSOLUTE( _gameplay_field_keepSegmentBssEnd - _gameplay_field_keepSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _gameplay_dangeon_keepSegmentRomStart = _RomSize;
    ..gameplay_dangeon_keep : AT(_RomSize)
    {
        _gameplay_dangeon_keepSegmentStart = .;
        . = ALIGN(0x10);
        _gameplay_dangeon_keepSegmentTextStart = .;
            build/baserom/gameplay_dangeon_keep.o (.text)
        _gameplay_dangeon_keepSegmentTextEnd = .;
    _gameplay_dangeon_keepSegmentTextSize = ABSOLUTE( _gameplay_dangeon_keepSegmentTextEnd - _gameplay_dangeon_keepSegmentTextStart );
        _gameplay_dangeon_keepSegmentDataStart = .;
            build/baserom/gameplay_dangeon_keep.o (.data)
        _gameplay_dangeon_keepSegmentDataEnd = .;
    _gameplay_dangeon_keepSegmentDataSize = ABSOLUTE( _gameplay_dangeon_keepSegmentDataEnd - _gameplay_dangeon_keepSegmentDataStart );
        _gameplay_dangeon_keepSegmentRoDataStart = .;
            build/baserom/gameplay_dangeon_keep.o (.rodata)
        _gameplay_dangeon_keepSegmentRoDataEnd = .;
    _gameplay_dangeon_keepSegmentRoDataSize = ABSOLUTE( _gameplay_dangeon_keepSegmentRoDataEnd - _gameplay_dangeon_keepSegmentRoDataStart );
        _gameplay_dangeon_keepSegmentSDataStart = .;
            build/baserom/gameplay_dangeon_keep.o (.sdata)
        . = ALIGN(0x10);
        _gameplay_dangeon_keepSegmentSDataEnd = .;
        _gameplay_dangeon_keepSegmentOvlStart = .;
            build/baserom/gameplay_dangeon_keep.o (.ovl)
        . = ALIGN(0x10);
        _gameplay_dangeon_keepSegmentOvlEnd = .;
    }
    _RomSize += ( _gameplay_dangeon_keepSegmentOvlEnd - _gameplay_dangeon_keepSegmentTextStart );
    _gameplay_dangeon_keepSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..gameplay_dangeon_keep.bss ADDR(..gameplay_dangeon_keep) + SIZEOF(..gameplay_dangeon_keep) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _gameplay_dangeon_keepSegmentBssStart = .;
            build/baserom/gameplay_dangeon_keep.o (.sbss)
            build/baserom/gameplay_dangeon_keep.o (.scommon)
            build/baserom/gameplay_dangeon_keep.o (.bss)
            build/baserom/gameplay_dangeon_keep.o (COMMON)
        . = ALIGN(0x10);
        _gameplay_dangeon_keepSegmentBssEnd = .;
        _gameplay_dangeon_keepSegmentEnd = .;
    }
    _gameplay_dangeon_keepSegmentBssSize = ABSOLUTE( _gameplay_dangeon_keepSegmentBssEnd - _gameplay_dangeon_keepSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _gameplay_object_exchange_staticSegmentRomStart = _RomSize;
    ..gameplay_object_exchange_static : AT(_RomSize)
    {
        _gameplay_object_exchange_staticSegmentStart = .;
        . = ALIGN(0x10);
        _gameplay_object_exchange_staticSegmentTextStart = .;
            build/baserom/gameplay_object_exchange_static.o (.text)
        _gameplay_object_exchange_staticSegmentTextEnd = .;
    _gameplay_object_exchange_staticSegmentTextSize = ABSOLUTE( _gameplay_object_exchange_staticSegmentTextEnd - _gameplay_object_exchange_staticSegmentTextStart );
        _gameplay_object_exchange_staticSegmentDataStart = .;
            build/baserom/gameplay_object_exchange_static.o (.data)
        _gameplay_object_exchange_staticSegmentDataEnd = .;
    _gameplay_object_exchange_staticSegmentDataSize = ABSOLUTE( _gameplay_object_exchange_staticSegmentDataEnd - _gameplay_object_exchange_staticSegmentDataStart );
        _gameplay_object_exchange_staticSegmentRoDataStart = .;
            build/baserom/gameplay_object_exchange_static.o (.rodata)
        _gameplay_object_exchange_staticSegmentRoDataEnd = .;
    _gameplay_object_exchange_staticSegmentRoDataSize = ABSOLUTE( _gameplay_object_exchange_staticSegmentRoDataEnd - _gameplay_object_exchange_staticSegmentRoDataStart );
        _gameplay_object_exchange_staticSegmentSDataStart = .;
            build/baserom/gameplay_object_exchange_static.o (.sdata)
        . = ALIGN(0x10);
        _gameplay_object_exchange_staticSegmentSDataEnd = .;
        _gameplay_object_exchange_staticSegmentOvlStart = .;
            build/baserom/gameplay_object_exchange_static.o (.ovl)
        . = ALIGN(0x10);
        _gameplay_object_exchange_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _gameplay_object_exchange_staticSegmentOvlEnd - _gameplay_object_exchange_staticSegmentTextStart );
    _gameplay_object_exchange_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..gameplay_object_exchange_static.bss ADDR(..gameplay_object_exchange_static) + SIZEOF(..gameplay_object_exchange_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _gameplay_object_exchange_staticSegmentBssStart = .;
            build/baserom/gameplay_object_exchange_static.o (.sbss)
            build/baserom/gameplay_object_exchange_static.o (.scommon)
            build/baserom/gameplay_object_exchange_static.o (.bss)
            build/baserom/gameplay_object_exchange_static.o (COMMON)
        . = ALIGN(0x10);
        _gameplay_object_exchange_staticSegmentBssEnd = .;
        _gameplay_object_exchange_staticSegmentEnd = .;
    }
    _gameplay_object_exchange_staticSegmentBssSize = ABSOLUTE( _gameplay_object_exchange_staticSegmentBssEnd - _gameplay_object_exchange_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_link_boySegmentRomStart = _RomSize;
    ..object_link_boy : AT(_RomSize)
    {
        _object_link_boySegmentStart = .;
        . = ALIGN(0x10);
        _object_link_boySegmentTextStart = .;
            build/baserom/object_link_boy.o (.text)
        _object_link_boySegmentTextEnd = .;
    _object_link_boySegmentTextSize = ABSOLUTE( _object_link_boySegmentTextEnd - _object_link_boySegmentTextStart );
        _object_link_boySegmentDataStart = .;
            build/baserom/object_link_boy.o (.data)
        _object_link_boySegmentDataEnd = .;
    _object_link_boySegmentDataSize = ABSOLUTE( _object_link_boySegmentDataEnd - _object_link_boySegmentDataStart );
        _object_link_boySegmentRoDataStart = .;
            build/baserom/object_link_boy.o (.rodata)
        _object_link_boySegmentRoDataEnd = .;
    _object_link_boySegmentRoDataSize = ABSOLUTE( _object_link_boySegmentRoDataEnd - _object_link_boySegmentRoDataStart );
        _object_link_boySegmentSDataStart = .;
            build/baserom/object_link_boy.o (.sdata)
        . = ALIGN(0x10);
        _object_link_boySegmentSDataEnd = .;
        _object_link_boySegmentOvlStart = .;
            build/baserom/object_link_boy.o (.ovl)
        . = ALIGN(0x10);
        _object_link_boySegmentOvlEnd = .;
    }
    _RomSize += ( _object_link_boySegmentOvlEnd - _object_link_boySegmentTextStart );
    _object_link_boySegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_link_boy.bss ADDR(..object_link_boy) + SIZEOF(..object_link_boy) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_link_boySegmentBssStart = .;
            build/baserom/object_link_boy.o (.sbss)
            build/baserom/object_link_boy.o (.scommon)
            build/baserom/object_link_boy.o (.bss)
            build/baserom/object_link_boy.o (COMMON)
        . = ALIGN(0x10);
        _object_link_boySegmentBssEnd = .;
        _object_link_boySegmentEnd = .;
    }
    _object_link_boySegmentBssSize = ABSOLUTE( _object_link_boySegmentBssEnd - _object_link_boySegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_link_childSegmentRomStart = _RomSize;
    ..object_link_child : AT(_RomSize)
    {
        _object_link_childSegmentStart = .;
        . = ALIGN(0x10);
        _object_link_childSegmentTextStart = .;
            build/baserom/object_link_child.o (.text)
        _object_link_childSegmentTextEnd = .;
    _object_link_childSegmentTextSize = ABSOLUTE( _object_link_childSegmentTextEnd - _object_link_childSegmentTextStart );
        _object_link_childSegmentDataStart = .;
            build/baserom/object_link_child.o (.data)
        _object_link_childSegmentDataEnd = .;
    _object_link_childSegmentDataSize = ABSOLUTE( _object_link_childSegmentDataEnd - _object_link_childSegmentDataStart );
        _object_link_childSegmentRoDataStart = .;
            build/baserom/object_link_child.o (.rodata)
        _object_link_childSegmentRoDataEnd = .;
    _object_link_childSegmentRoDataSize = ABSOLUTE( _object_link_childSegmentRoDataEnd - _object_link_childSegmentRoDataStart );
        _object_link_childSegmentSDataStart = .;
            build/baserom/object_link_child.o (.sdata)
        . = ALIGN(0x10);
        _object_link_childSegmentSDataEnd = .;
        _object_link_childSegmentOvlStart = .;
            build/baserom/object_link_child.o (.ovl)
        . = ALIGN(0x10);
        _object_link_childSegmentOvlEnd = .;
    }
    _RomSize += ( _object_link_childSegmentOvlEnd - _object_link_childSegmentTextStart );
    _object_link_childSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_link_child.bss ADDR(..object_link_child) + SIZEOF(..object_link_child) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_link_childSegmentBssStart = .;
            build/baserom/object_link_child.o (.sbss)
            build/baserom/object_link_child.o (.scommon)
            build/baserom/object_link_child.o (.bss)
            build/baserom/object_link_child.o (COMMON)
        . = ALIGN(0x10);
        _object_link_childSegmentBssEnd = .;
        _object_link_childSegmentEnd = .;
    }
    _object_link_childSegmentBssSize = ABSOLUTE( _object_link_childSegmentBssEnd - _object_link_childSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_boxSegmentRomStart = _RomSize;
    ..object_box : AT(_RomSize)
    {
        _object_boxSegmentStart = .;
        . = ALIGN(0x10);
        _object_boxSegmentTextStart = .;
            build/baserom/object_box.o (.text)
        _object_boxSegmentTextEnd = .;
    _object_boxSegmentTextSize = ABSOLUTE( _object_boxSegmentTextEnd - _object_boxSegmentTextStart );
        _object_boxSegmentDataStart = .;
            build/baserom/object_box.o (.data)
        _object_boxSegmentDataEnd = .;
    _object_boxSegmentDataSize = ABSOLUTE( _object_boxSegmentDataEnd - _object_boxSegmentDataStart );
        _object_boxSegmentRoDataStart = .;
            build/baserom/object_box.o (.rodata)
        _object_boxSegmentRoDataEnd = .;
    _object_boxSegmentRoDataSize = ABSOLUTE( _object_boxSegmentRoDataEnd - _object_boxSegmentRoDataStart );
        _object_boxSegmentSDataStart = .;
            build/baserom/object_box.o (.sdata)
        . = ALIGN(0x10);
        _object_boxSegmentSDataEnd = .;
        _object_boxSegmentOvlStart = .;
            build/baserom/object_box.o (.ovl)
        . = ALIGN(0x10);
        _object_boxSegmentOvlEnd = .;
    }
    _RomSize += ( _object_boxSegmentOvlEnd - _object_boxSegmentTextStart );
    _object_boxSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_box.bss ADDR(..object_box) + SIZEOF(..object_box) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_boxSegmentBssStart = .;
            build/baserom/object_box.o (.sbss)
            build/baserom/object_box.o (.scommon)
            build/baserom/object_box.o (.bss)
            build/baserom/object_box.o (COMMON)
        . = ALIGN(0x10);
        _object_boxSegmentBssEnd = .;
        _object_boxSegmentEnd = .;
    }
    _object_boxSegmentBssSize = ABSOLUTE( _object_boxSegmentBssEnd - _object_boxSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_humanSegmentRomStart = _RomSize;
    ..object_human : AT(_RomSize)
    {
        _object_humanSegmentStart = .;
        . = ALIGN(0x10);
        _object_humanSegmentTextStart = .;
            build/baserom/object_human.o (.text)
        _object_humanSegmentTextEnd = .;
    _object_humanSegmentTextSize = ABSOLUTE( _object_humanSegmentTextEnd - _object_humanSegmentTextStart );
        _object_humanSegmentDataStart = .;
            build/baserom/object_human.o (.data)
        _object_humanSegmentDataEnd = .;
    _object_humanSegmentDataSize = ABSOLUTE( _object_humanSegmentDataEnd - _object_humanSegmentDataStart );
        _object_humanSegmentRoDataStart = .;
            build/baserom/object_human.o (.rodata)
        _object_humanSegmentRoDataEnd = .;
    _object_humanSegmentRoDataSize = ABSOLUTE( _object_humanSegmentRoDataEnd - _object_humanSegmentRoDataStart );
        _object_humanSegmentSDataStart = .;
            build/baserom/object_human.o (.sdata)
        . = ALIGN(0x10);
        _object_humanSegmentSDataEnd = .;
        _object_humanSegmentOvlStart = .;
            build/baserom/object_human.o (.ovl)
        . = ALIGN(0x10);
        _object_humanSegmentOvlEnd = .;
    }
    _RomSize += ( _object_humanSegmentOvlEnd - _object_humanSegmentTextStart );
    _object_humanSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_human.bss ADDR(..object_human) + SIZEOF(..object_human) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_humanSegmentBssStart = .;
            build/baserom/object_human.o (.sbss)
            build/baserom/object_human.o (.scommon)
            build/baserom/object_human.o (.bss)
            build/baserom/object_human.o (COMMON)
        . = ALIGN(0x10);
        _object_humanSegmentBssEnd = .;
        _object_humanSegmentEnd = .;
    }
    _object_humanSegmentBssSize = ABSOLUTE( _object_humanSegmentBssEnd - _object_humanSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_okutaSegmentRomStart = _RomSize;
    ..object_okuta : AT(_RomSize)
    {
        _object_okutaSegmentStart = .;
        . = ALIGN(0x10);
        _object_okutaSegmentTextStart = .;
            build/baserom/object_okuta.o (.text)
        _object_okutaSegmentTextEnd = .;
    _object_okutaSegmentTextSize = ABSOLUTE( _object_okutaSegmentTextEnd - _object_okutaSegmentTextStart );
        _object_okutaSegmentDataStart = .;
            build/baserom/object_okuta.o (.data)
        _object_okutaSegmentDataEnd = .;
    _object_okutaSegmentDataSize = ABSOLUTE( _object_okutaSegmentDataEnd - _object_okutaSegmentDataStart );
        _object_okutaSegmentRoDataStart = .;
            build/baserom/object_okuta.o (.rodata)
        _object_okutaSegmentRoDataEnd = .;
    _object_okutaSegmentRoDataSize = ABSOLUTE( _object_okutaSegmentRoDataEnd - _object_okutaSegmentRoDataStart );
        _object_okutaSegmentSDataStart = .;
            build/baserom/object_okuta.o (.sdata)
        . = ALIGN(0x10);
        _object_okutaSegmentSDataEnd = .;
        _object_okutaSegmentOvlStart = .;
            build/baserom/object_okuta.o (.ovl)
        . = ALIGN(0x10);
        _object_okutaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_okutaSegmentOvlEnd - _object_okutaSegmentTextStart );
    _object_okutaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_okuta.bss ADDR(..object_okuta) + SIZEOF(..object_okuta) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_okutaSegmentBssStart = .;
            build/baserom/object_okuta.o (.sbss)
            build/baserom/object_okuta.o (.scommon)
            build/baserom/object_okuta.o (.bss)
            build/baserom/object_okuta.o (COMMON)
        . = ALIGN(0x10);
        _object_okutaSegmentBssEnd = .;
        _object_okutaSegmentEnd = .;
    }
    _object_okutaSegmentBssSize = ABSOLUTE( _object_okutaSegmentBssEnd - _object_okutaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_pohSegmentRomStart = _RomSize;
    ..object_poh : AT(_RomSize)
    {
        _object_pohSegmentStart = .;
        . = ALIGN(0x10);
        _object_pohSegmentTextStart = .;
            build/baserom/object_poh.o (.text)
        _object_pohSegmentTextEnd = .;
    _object_pohSegmentTextSize = ABSOLUTE( _object_pohSegmentTextEnd - _object_pohSegmentTextStart );
        _object_pohSegmentDataStart = .;
            build/baserom/object_poh.o (.data)
        _object_pohSegmentDataEnd = .;
    _object_pohSegmentDataSize = ABSOLUTE( _object_pohSegmentDataEnd - _object_pohSegmentDataStart );
        _object_pohSegmentRoDataStart = .;
            build/baserom/object_poh.o (.rodata)
        _object_pohSegmentRoDataEnd = .;
    _object_pohSegmentRoDataSize = ABSOLUTE( _object_pohSegmentRoDataEnd - _object_pohSegmentRoDataStart );
        _object_pohSegmentSDataStart = .;
            build/baserom/object_poh.o (.sdata)
        . = ALIGN(0x10);
        _object_pohSegmentSDataEnd = .;
        _object_pohSegmentOvlStart = .;
            build/baserom/object_poh.o (.ovl)
        . = ALIGN(0x10);
        _object_pohSegmentOvlEnd = .;
    }
    _RomSize += ( _object_pohSegmentOvlEnd - _object_pohSegmentTextStart );
    _object_pohSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_poh.bss ADDR(..object_poh) + SIZEOF(..object_poh) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_pohSegmentBssStart = .;
            build/baserom/object_poh.o (.sbss)
            build/baserom/object_poh.o (.scommon)
            build/baserom/object_poh.o (.bss)
            build/baserom/object_poh.o (COMMON)
        . = ALIGN(0x10);
        _object_pohSegmentBssEnd = .;
        _object_pohSegmentEnd = .;
    }
    _object_pohSegmentBssSize = ABSOLUTE( _object_pohSegmentBssEnd - _object_pohSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_wallmasterSegmentRomStart = _RomSize;
    ..object_wallmaster : AT(_RomSize)
    {
        _object_wallmasterSegmentStart = .;
        . = ALIGN(0x10);
        _object_wallmasterSegmentTextStart = .;
            build/baserom/object_wallmaster.o (.text)
        _object_wallmasterSegmentTextEnd = .;
    _object_wallmasterSegmentTextSize = ABSOLUTE( _object_wallmasterSegmentTextEnd - _object_wallmasterSegmentTextStart );
        _object_wallmasterSegmentDataStart = .;
            build/baserom/object_wallmaster.o (.data)
        _object_wallmasterSegmentDataEnd = .;
    _object_wallmasterSegmentDataSize = ABSOLUTE( _object_wallmasterSegmentDataEnd - _object_wallmasterSegmentDataStart );
        _object_wallmasterSegmentRoDataStart = .;
            build/baserom/object_wallmaster.o (.rodata)
        _object_wallmasterSegmentRoDataEnd = .;
    _object_wallmasterSegmentRoDataSize = ABSOLUTE( _object_wallmasterSegmentRoDataEnd - _object_wallmasterSegmentRoDataStart );
        _object_wallmasterSegmentSDataStart = .;
            build/baserom/object_wallmaster.o (.sdata)
        . = ALIGN(0x10);
        _object_wallmasterSegmentSDataEnd = .;
        _object_wallmasterSegmentOvlStart = .;
            build/baserom/object_wallmaster.o (.ovl)
        . = ALIGN(0x10);
        _object_wallmasterSegmentOvlEnd = .;
    }
    _RomSize += ( _object_wallmasterSegmentOvlEnd - _object_wallmasterSegmentTextStart );
    _object_wallmasterSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_wallmaster.bss ADDR(..object_wallmaster) + SIZEOF(..object_wallmaster) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_wallmasterSegmentBssStart = .;
            build/baserom/object_wallmaster.o (.sbss)
            build/baserom/object_wallmaster.o (.scommon)
            build/baserom/object_wallmaster.o (.bss)
            build/baserom/object_wallmaster.o (COMMON)
        . = ALIGN(0x10);
        _object_wallmasterSegmentBssEnd = .;
        _object_wallmasterSegmentEnd = .;
    }
    _object_wallmasterSegmentBssSize = ABSOLUTE( _object_wallmasterSegmentBssEnd - _object_wallmasterSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_dy_objSegmentRomStart = _RomSize;
    ..object_dy_obj : AT(_RomSize)
    {
        _object_dy_objSegmentStart = .;
        . = ALIGN(0x10);
        _object_dy_objSegmentTextStart = .;
            build/baserom/object_dy_obj.o (.text)
        _object_dy_objSegmentTextEnd = .;
    _object_dy_objSegmentTextSize = ABSOLUTE( _object_dy_objSegmentTextEnd - _object_dy_objSegmentTextStart );
        _object_dy_objSegmentDataStart = .;
            build/baserom/object_dy_obj.o (.data)
        _object_dy_objSegmentDataEnd = .;
    _object_dy_objSegmentDataSize = ABSOLUTE( _object_dy_objSegmentDataEnd - _object_dy_objSegmentDataStart );
        _object_dy_objSegmentRoDataStart = .;
            build/baserom/object_dy_obj.o (.rodata)
        _object_dy_objSegmentRoDataEnd = .;
    _object_dy_objSegmentRoDataSize = ABSOLUTE( _object_dy_objSegmentRoDataEnd - _object_dy_objSegmentRoDataStart );
        _object_dy_objSegmentSDataStart = .;
            build/baserom/object_dy_obj.o (.sdata)
        . = ALIGN(0x10);
        _object_dy_objSegmentSDataEnd = .;
        _object_dy_objSegmentOvlStart = .;
            build/baserom/object_dy_obj.o (.ovl)
        . = ALIGN(0x10);
        _object_dy_objSegmentOvlEnd = .;
    }
    _RomSize += ( _object_dy_objSegmentOvlEnd - _object_dy_objSegmentTextStart );
    _object_dy_objSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_dy_obj.bss ADDR(..object_dy_obj) + SIZEOF(..object_dy_obj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_dy_objSegmentBssStart = .;
            build/baserom/object_dy_obj.o (.sbss)
            build/baserom/object_dy_obj.o (.scommon)
            build/baserom/object_dy_obj.o (.bss)
            build/baserom/object_dy_obj.o (COMMON)
        . = ALIGN(0x10);
        _object_dy_objSegmentBssEnd = .;
        _object_dy_objSegmentEnd = .;
    }
    _object_dy_objSegmentBssSize = ABSOLUTE( _object_dy_objSegmentBssEnd - _object_dy_objSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_fireflySegmentRomStart = _RomSize;
    ..object_firefly : AT(_RomSize)
    {
        _object_fireflySegmentStart = .;
        . = ALIGN(0x10);
        _object_fireflySegmentTextStart = .;
            build/baserom/object_firefly.o (.text)
        _object_fireflySegmentTextEnd = .;
    _object_fireflySegmentTextSize = ABSOLUTE( _object_fireflySegmentTextEnd - _object_fireflySegmentTextStart );
        _object_fireflySegmentDataStart = .;
            build/baserom/object_firefly.o (.data)
        _object_fireflySegmentDataEnd = .;
    _object_fireflySegmentDataSize = ABSOLUTE( _object_fireflySegmentDataEnd - _object_fireflySegmentDataStart );
        _object_fireflySegmentRoDataStart = .;
            build/baserom/object_firefly.o (.rodata)
        _object_fireflySegmentRoDataEnd = .;
    _object_fireflySegmentRoDataSize = ABSOLUTE( _object_fireflySegmentRoDataEnd - _object_fireflySegmentRoDataStart );
        _object_fireflySegmentSDataStart = .;
            build/baserom/object_firefly.o (.sdata)
        . = ALIGN(0x10);
        _object_fireflySegmentSDataEnd = .;
        _object_fireflySegmentOvlStart = .;
            build/baserom/object_firefly.o (.ovl)
        . = ALIGN(0x10);
        _object_fireflySegmentOvlEnd = .;
    }
    _RomSize += ( _object_fireflySegmentOvlEnd - _object_fireflySegmentTextStart );
    _object_fireflySegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_firefly.bss ADDR(..object_firefly) + SIZEOF(..object_firefly) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_fireflySegmentBssStart = .;
            build/baserom/object_firefly.o (.sbss)
            build/baserom/object_firefly.o (.scommon)
            build/baserom/object_firefly.o (.bss)
            build/baserom/object_firefly.o (COMMON)
        . = ALIGN(0x10);
        _object_fireflySegmentBssEnd = .;
        _object_fireflySegmentEnd = .;
    }
    _object_fireflySegmentBssSize = ABSOLUTE( _object_fireflySegmentBssEnd - _object_fireflySegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_dodongoSegmentRomStart = _RomSize;
    ..object_dodongo : AT(_RomSize)
    {
        _object_dodongoSegmentStart = .;
        . = ALIGN(0x10);
        _object_dodongoSegmentTextStart = .;
            build/baserom/object_dodongo.o (.text)
        _object_dodongoSegmentTextEnd = .;
    _object_dodongoSegmentTextSize = ABSOLUTE( _object_dodongoSegmentTextEnd - _object_dodongoSegmentTextStart );
        _object_dodongoSegmentDataStart = .;
            build/baserom/object_dodongo.o (.data)
        _object_dodongoSegmentDataEnd = .;
    _object_dodongoSegmentDataSize = ABSOLUTE( _object_dodongoSegmentDataEnd - _object_dodongoSegmentDataStart );
        _object_dodongoSegmentRoDataStart = .;
            build/baserom/object_dodongo.o (.rodata)
        _object_dodongoSegmentRoDataEnd = .;
    _object_dodongoSegmentRoDataSize = ABSOLUTE( _object_dodongoSegmentRoDataEnd - _object_dodongoSegmentRoDataStart );
        _object_dodongoSegmentSDataStart = .;
            build/baserom/object_dodongo.o (.sdata)
        . = ALIGN(0x10);
        _object_dodongoSegmentSDataEnd = .;
        _object_dodongoSegmentOvlStart = .;
            build/baserom/object_dodongo.o (.ovl)
        . = ALIGN(0x10);
        _object_dodongoSegmentOvlEnd = .;
    }
    _RomSize += ( _object_dodongoSegmentOvlEnd - _object_dodongoSegmentTextStart );
    _object_dodongoSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_dodongo.bss ADDR(..object_dodongo) + SIZEOF(..object_dodongo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_dodongoSegmentBssStart = .;
            build/baserom/object_dodongo.o (.sbss)
            build/baserom/object_dodongo.o (.scommon)
            build/baserom/object_dodongo.o (.bss)
            build/baserom/object_dodongo.o (COMMON)
        . = ALIGN(0x10);
        _object_dodongoSegmentBssEnd = .;
        _object_dodongoSegmentEnd = .;
    }
    _object_dodongoSegmentBssSize = ABSOLUTE( _object_dodongoSegmentBssEnd - _object_dodongoSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_fireSegmentRomStart = _RomSize;
    ..object_fire : AT(_RomSize)
    {
        _object_fireSegmentStart = .;
        . = ALIGN(0x10);
        _object_fireSegmentTextStart = .;
            build/baserom/object_fire.o (.text)
        _object_fireSegmentTextEnd = .;
    _object_fireSegmentTextSize = ABSOLUTE( _object_fireSegmentTextEnd - _object_fireSegmentTextStart );
        _object_fireSegmentDataStart = .;
            build/baserom/object_fire.o (.data)
        _object_fireSegmentDataEnd = .;
    _object_fireSegmentDataSize = ABSOLUTE( _object_fireSegmentDataEnd - _object_fireSegmentDataStart );
        _object_fireSegmentRoDataStart = .;
            build/baserom/object_fire.o (.rodata)
        _object_fireSegmentRoDataEnd = .;
    _object_fireSegmentRoDataSize = ABSOLUTE( _object_fireSegmentRoDataEnd - _object_fireSegmentRoDataStart );
        _object_fireSegmentSDataStart = .;
            build/baserom/object_fire.o (.sdata)
        . = ALIGN(0x10);
        _object_fireSegmentSDataEnd = .;
        _object_fireSegmentOvlStart = .;
            build/baserom/object_fire.o (.ovl)
        . = ALIGN(0x10);
        _object_fireSegmentOvlEnd = .;
    }
    _RomSize += ( _object_fireSegmentOvlEnd - _object_fireSegmentTextStart );
    _object_fireSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_fire.bss ADDR(..object_fire) + SIZEOF(..object_fire) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_fireSegmentBssStart = .;
            build/baserom/object_fire.o (.sbss)
            build/baserom/object_fire.o (.scommon)
            build/baserom/object_fire.o (.bss)
            build/baserom/object_fire.o (COMMON)
        . = ALIGN(0x10);
        _object_fireSegmentBssEnd = .;
        _object_fireSegmentEnd = .;
    }
    _object_fireSegmentBssSize = ABSOLUTE( _object_fireSegmentBssEnd - _object_fireSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_niwSegmentRomStart = _RomSize;
    ..object_niw : AT(_RomSize)
    {
        _object_niwSegmentStart = .;
        . = ALIGN(0x10);
        _object_niwSegmentTextStart = .;
            build/baserom/object_niw.o (.text)
        _object_niwSegmentTextEnd = .;
    _object_niwSegmentTextSize = ABSOLUTE( _object_niwSegmentTextEnd - _object_niwSegmentTextStart );
        _object_niwSegmentDataStart = .;
            build/baserom/object_niw.o (.data)
        _object_niwSegmentDataEnd = .;
    _object_niwSegmentDataSize = ABSOLUTE( _object_niwSegmentDataEnd - _object_niwSegmentDataStart );
        _object_niwSegmentRoDataStart = .;
            build/baserom/object_niw.o (.rodata)
        _object_niwSegmentRoDataEnd = .;
    _object_niwSegmentRoDataSize = ABSOLUTE( _object_niwSegmentRoDataEnd - _object_niwSegmentRoDataStart );
        _object_niwSegmentSDataStart = .;
            build/baserom/object_niw.o (.sdata)
        . = ALIGN(0x10);
        _object_niwSegmentSDataEnd = .;
        _object_niwSegmentOvlStart = .;
            build/baserom/object_niw.o (.ovl)
        . = ALIGN(0x10);
        _object_niwSegmentOvlEnd = .;
    }
    _RomSize += ( _object_niwSegmentOvlEnd - _object_niwSegmentTextStart );
    _object_niwSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_niw.bss ADDR(..object_niw) + SIZEOF(..object_niw) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_niwSegmentBssStart = .;
            build/baserom/object_niw.o (.sbss)
            build/baserom/object_niw.o (.scommon)
            build/baserom/object_niw.o (.bss)
            build/baserom/object_niw.o (COMMON)
        . = ALIGN(0x10);
        _object_niwSegmentBssEnd = .;
        _object_niwSegmentEnd = .;
    }
    _object_niwSegmentBssSize = ABSOLUTE( _object_niwSegmentBssEnd - _object_niwSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_titeSegmentRomStart = _RomSize;
    ..object_tite : AT(_RomSize)
    {
        _object_titeSegmentStart = .;
        . = ALIGN(0x10);
        _object_titeSegmentTextStart = .;
            build/baserom/object_tite.o (.text)
        _object_titeSegmentTextEnd = .;
    _object_titeSegmentTextSize = ABSOLUTE( _object_titeSegmentTextEnd - _object_titeSegmentTextStart );
        _object_titeSegmentDataStart = .;
            build/baserom/object_tite.o (.data)
        _object_titeSegmentDataEnd = .;
    _object_titeSegmentDataSize = ABSOLUTE( _object_titeSegmentDataEnd - _object_titeSegmentDataStart );
        _object_titeSegmentRoDataStart = .;
            build/baserom/object_tite.o (.rodata)
        _object_titeSegmentRoDataEnd = .;
    _object_titeSegmentRoDataSize = ABSOLUTE( _object_titeSegmentRoDataEnd - _object_titeSegmentRoDataStart );
        _object_titeSegmentSDataStart = .;
            build/baserom/object_tite.o (.sdata)
        . = ALIGN(0x10);
        _object_titeSegmentSDataEnd = .;
        _object_titeSegmentOvlStart = .;
            build/baserom/object_tite.o (.ovl)
        . = ALIGN(0x10);
        _object_titeSegmentOvlEnd = .;
    }
    _RomSize += ( _object_titeSegmentOvlEnd - _object_titeSegmentTextStart );
    _object_titeSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_tite.bss ADDR(..object_tite) + SIZEOF(..object_tite) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_titeSegmentBssStart = .;
            build/baserom/object_tite.o (.sbss)
            build/baserom/object_tite.o (.scommon)
            build/baserom/object_tite.o (.bss)
            build/baserom/object_tite.o (COMMON)
        . = ALIGN(0x10);
        _object_titeSegmentBssEnd = .;
        _object_titeSegmentEnd = .;
    }
    _object_titeSegmentBssSize = ABSOLUTE( _object_titeSegmentBssEnd - _object_titeSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_reebaSegmentRomStart = _RomSize;
    ..object_reeba : AT(_RomSize)
    {
        _object_reebaSegmentStart = .;
        . = ALIGN(0x10);
        _object_reebaSegmentTextStart = .;
            build/baserom/object_reeba.o (.text)
        _object_reebaSegmentTextEnd = .;
    _object_reebaSegmentTextSize = ABSOLUTE( _object_reebaSegmentTextEnd - _object_reebaSegmentTextStart );
        _object_reebaSegmentDataStart = .;
            build/baserom/object_reeba.o (.data)
        _object_reebaSegmentDataEnd = .;
    _object_reebaSegmentDataSize = ABSOLUTE( _object_reebaSegmentDataEnd - _object_reebaSegmentDataStart );
        _object_reebaSegmentRoDataStart = .;
            build/baserom/object_reeba.o (.rodata)
        _object_reebaSegmentRoDataEnd = .;
    _object_reebaSegmentRoDataSize = ABSOLUTE( _object_reebaSegmentRoDataEnd - _object_reebaSegmentRoDataStart );
        _object_reebaSegmentSDataStart = .;
            build/baserom/object_reeba.o (.sdata)
        . = ALIGN(0x10);
        _object_reebaSegmentSDataEnd = .;
        _object_reebaSegmentOvlStart = .;
            build/baserom/object_reeba.o (.ovl)
        . = ALIGN(0x10);
        _object_reebaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_reebaSegmentOvlEnd - _object_reebaSegmentTextStart );
    _object_reebaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_reeba.bss ADDR(..object_reeba) + SIZEOF(..object_reeba) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_reebaSegmentBssStart = .;
            build/baserom/object_reeba.o (.sbss)
            build/baserom/object_reeba.o (.scommon)
            build/baserom/object_reeba.o (.bss)
            build/baserom/object_reeba.o (COMMON)
        . = ALIGN(0x10);
        _object_reebaSegmentBssEnd = .;
        _object_reebaSegmentEnd = .;
    }
    _object_reebaSegmentBssSize = ABSOLUTE( _object_reebaSegmentBssEnd - _object_reebaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_peehatSegmentRomStart = _RomSize;
    ..object_peehat : AT(_RomSize)
    {
        _object_peehatSegmentStart = .;
        . = ALIGN(0x10);
        _object_peehatSegmentTextStart = .;
            build/baserom/object_peehat.o (.text)
        _object_peehatSegmentTextEnd = .;
    _object_peehatSegmentTextSize = ABSOLUTE( _object_peehatSegmentTextEnd - _object_peehatSegmentTextStart );
        _object_peehatSegmentDataStart = .;
            build/baserom/object_peehat.o (.data)
        _object_peehatSegmentDataEnd = .;
    _object_peehatSegmentDataSize = ABSOLUTE( _object_peehatSegmentDataEnd - _object_peehatSegmentDataStart );
        _object_peehatSegmentRoDataStart = .;
            build/baserom/object_peehat.o (.rodata)
        _object_peehatSegmentRoDataEnd = .;
    _object_peehatSegmentRoDataSize = ABSOLUTE( _object_peehatSegmentRoDataEnd - _object_peehatSegmentRoDataStart );
        _object_peehatSegmentSDataStart = .;
            build/baserom/object_peehat.o (.sdata)
        . = ALIGN(0x10);
        _object_peehatSegmentSDataEnd = .;
        _object_peehatSegmentOvlStart = .;
            build/baserom/object_peehat.o (.ovl)
        . = ALIGN(0x10);
        _object_peehatSegmentOvlEnd = .;
    }
    _RomSize += ( _object_peehatSegmentOvlEnd - _object_peehatSegmentTextStart );
    _object_peehatSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_peehat.bss ADDR(..object_peehat) + SIZEOF(..object_peehat) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_peehatSegmentBssStart = .;
            build/baserom/object_peehat.o (.sbss)
            build/baserom/object_peehat.o (.scommon)
            build/baserom/object_peehat.o (.bss)
            build/baserom/object_peehat.o (COMMON)
        . = ALIGN(0x10);
        _object_peehatSegmentBssEnd = .;
        _object_peehatSegmentEnd = .;
    }
    _object_peehatSegmentBssSize = ABSOLUTE( _object_peehatSegmentBssEnd - _object_peehatSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_kingdodongoSegmentRomStart = _RomSize;
    ..object_kingdodongo : AT(_RomSize)
    {
        _object_kingdodongoSegmentStart = .;
        . = ALIGN(0x10);
        _object_kingdodongoSegmentTextStart = .;
            build/baserom/object_kingdodongo.o (.text)
        _object_kingdodongoSegmentTextEnd = .;
    _object_kingdodongoSegmentTextSize = ABSOLUTE( _object_kingdodongoSegmentTextEnd - _object_kingdodongoSegmentTextStart );
        _object_kingdodongoSegmentDataStart = .;
            build/baserom/object_kingdodongo.o (.data)
        _object_kingdodongoSegmentDataEnd = .;
    _object_kingdodongoSegmentDataSize = ABSOLUTE( _object_kingdodongoSegmentDataEnd - _object_kingdodongoSegmentDataStart );
        _object_kingdodongoSegmentRoDataStart = .;
            build/baserom/object_kingdodongo.o (.rodata)
        _object_kingdodongoSegmentRoDataEnd = .;
    _object_kingdodongoSegmentRoDataSize = ABSOLUTE( _object_kingdodongoSegmentRoDataEnd - _object_kingdodongoSegmentRoDataStart );
        _object_kingdodongoSegmentSDataStart = .;
            build/baserom/object_kingdodongo.o (.sdata)
        . = ALIGN(0x10);
        _object_kingdodongoSegmentSDataEnd = .;
        _object_kingdodongoSegmentOvlStart = .;
            build/baserom/object_kingdodongo.o (.ovl)
        . = ALIGN(0x10);
        _object_kingdodongoSegmentOvlEnd = .;
    }
    _RomSize += ( _object_kingdodongoSegmentOvlEnd - _object_kingdodongoSegmentTextStart );
    _object_kingdodongoSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_kingdodongo.bss ADDR(..object_kingdodongo) + SIZEOF(..object_kingdodongo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_kingdodongoSegmentBssStart = .;
            build/baserom/object_kingdodongo.o (.sbss)
            build/baserom/object_kingdodongo.o (.scommon)
            build/baserom/object_kingdodongo.o (.bss)
            build/baserom/object_kingdodongo.o (COMMON)
        . = ALIGN(0x10);
        _object_kingdodongoSegmentBssEnd = .;
        _object_kingdodongoSegmentEnd = .;
    }
    _object_kingdodongoSegmentBssSize = ABSOLUTE( _object_kingdodongoSegmentBssEnd - _object_kingdodongoSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_horseSegmentRomStart = _RomSize;
    ..object_horse : AT(_RomSize)
    {
        _object_horseSegmentStart = .;
        . = ALIGN(0x10);
        _object_horseSegmentTextStart = .;
            build/baserom/object_horse.o (.text)
        _object_horseSegmentTextEnd = .;
    _object_horseSegmentTextSize = ABSOLUTE( _object_horseSegmentTextEnd - _object_horseSegmentTextStart );
        _object_horseSegmentDataStart = .;
            build/baserom/object_horse.o (.data)
        _object_horseSegmentDataEnd = .;
    _object_horseSegmentDataSize = ABSOLUTE( _object_horseSegmentDataEnd - _object_horseSegmentDataStart );
        _object_horseSegmentRoDataStart = .;
            build/baserom/object_horse.o (.rodata)
        _object_horseSegmentRoDataEnd = .;
    _object_horseSegmentRoDataSize = ABSOLUTE( _object_horseSegmentRoDataEnd - _object_horseSegmentRoDataStart );
        _object_horseSegmentSDataStart = .;
            build/baserom/object_horse.o (.sdata)
        . = ALIGN(0x10);
        _object_horseSegmentSDataEnd = .;
        _object_horseSegmentOvlStart = .;
            build/baserom/object_horse.o (.ovl)
        . = ALIGN(0x10);
        _object_horseSegmentOvlEnd = .;
    }
    _RomSize += ( _object_horseSegmentOvlEnd - _object_horseSegmentTextStart );
    _object_horseSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_horse.bss ADDR(..object_horse) + SIZEOF(..object_horse) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_horseSegmentBssStart = .;
            build/baserom/object_horse.o (.sbss)
            build/baserom/object_horse.o (.scommon)
            build/baserom/object_horse.o (.bss)
            build/baserom/object_horse.o (COMMON)
        . = ALIGN(0x10);
        _object_horseSegmentBssEnd = .;
        _object_horseSegmentEnd = .;
    }
    _object_horseSegmentBssSize = ABSOLUTE( _object_horseSegmentBssEnd - _object_horseSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_zfSegmentRomStart = _RomSize;
    ..object_zf : AT(_RomSize)
    {
        _object_zfSegmentStart = .;
        . = ALIGN(0x10);
        _object_zfSegmentTextStart = .;
            build/baserom/object_zf.o (.text)
        _object_zfSegmentTextEnd = .;
    _object_zfSegmentTextSize = ABSOLUTE( _object_zfSegmentTextEnd - _object_zfSegmentTextStart );
        _object_zfSegmentDataStart = .;
            build/baserom/object_zf.o (.data)
        _object_zfSegmentDataEnd = .;
    _object_zfSegmentDataSize = ABSOLUTE( _object_zfSegmentDataEnd - _object_zfSegmentDataStart );
        _object_zfSegmentRoDataStart = .;
            build/baserom/object_zf.o (.rodata)
        _object_zfSegmentRoDataEnd = .;
    _object_zfSegmentRoDataSize = ABSOLUTE( _object_zfSegmentRoDataEnd - _object_zfSegmentRoDataStart );
        _object_zfSegmentSDataStart = .;
            build/baserom/object_zf.o (.sdata)
        . = ALIGN(0x10);
        _object_zfSegmentSDataEnd = .;
        _object_zfSegmentOvlStart = .;
            build/baserom/object_zf.o (.ovl)
        . = ALIGN(0x10);
        _object_zfSegmentOvlEnd = .;
    }
    _RomSize += ( _object_zfSegmentOvlEnd - _object_zfSegmentTextStart );
    _object_zfSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_zf.bss ADDR(..object_zf) + SIZEOF(..object_zf) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_zfSegmentBssStart = .;
            build/baserom/object_zf.o (.sbss)
            build/baserom/object_zf.o (.scommon)
            build/baserom/object_zf.o (.bss)
            build/baserom/object_zf.o (COMMON)
        . = ALIGN(0x10);
        _object_zfSegmentBssEnd = .;
        _object_zfSegmentEnd = .;
    }
    _object_zfSegmentBssSize = ABSOLUTE( _object_zfSegmentBssEnd - _object_zfSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gomaSegmentRomStart = _RomSize;
    ..object_goma : AT(_RomSize)
    {
        _object_gomaSegmentStart = .;
        . = ALIGN(0x10);
        _object_gomaSegmentTextStart = .;
            build/baserom/object_goma.o (.text)
        _object_gomaSegmentTextEnd = .;
    _object_gomaSegmentTextSize = ABSOLUTE( _object_gomaSegmentTextEnd - _object_gomaSegmentTextStart );
        _object_gomaSegmentDataStart = .;
            build/baserom/object_goma.o (.data)
        _object_gomaSegmentDataEnd = .;
    _object_gomaSegmentDataSize = ABSOLUTE( _object_gomaSegmentDataEnd - _object_gomaSegmentDataStart );
        _object_gomaSegmentRoDataStart = .;
            build/baserom/object_goma.o (.rodata)
        _object_gomaSegmentRoDataEnd = .;
    _object_gomaSegmentRoDataSize = ABSOLUTE( _object_gomaSegmentRoDataEnd - _object_gomaSegmentRoDataStart );
        _object_gomaSegmentSDataStart = .;
            build/baserom/object_goma.o (.sdata)
        . = ALIGN(0x10);
        _object_gomaSegmentSDataEnd = .;
        _object_gomaSegmentOvlStart = .;
            build/baserom/object_goma.o (.ovl)
        . = ALIGN(0x10);
        _object_gomaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gomaSegmentOvlEnd - _object_gomaSegmentTextStart );
    _object_gomaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_goma.bss ADDR(..object_goma) + SIZEOF(..object_goma) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gomaSegmentBssStart = .;
            build/baserom/object_goma.o (.sbss)
            build/baserom/object_goma.o (.scommon)
            build/baserom/object_goma.o (.bss)
            build/baserom/object_goma.o (COMMON)
        . = ALIGN(0x10);
        _object_gomaSegmentBssEnd = .;
        _object_gomaSegmentEnd = .;
    }
    _object_gomaSegmentBssSize = ABSOLUTE( _object_gomaSegmentBssEnd - _object_gomaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_zl1SegmentRomStart = _RomSize;
    ..object_zl1 : AT(_RomSize)
    {
        _object_zl1SegmentStart = .;
        . = ALIGN(0x10);
        _object_zl1SegmentTextStart = .;
            build/baserom/object_zl1.o (.text)
        _object_zl1SegmentTextEnd = .;
    _object_zl1SegmentTextSize = ABSOLUTE( _object_zl1SegmentTextEnd - _object_zl1SegmentTextStart );
        _object_zl1SegmentDataStart = .;
            build/baserom/object_zl1.o (.data)
        _object_zl1SegmentDataEnd = .;
    _object_zl1SegmentDataSize = ABSOLUTE( _object_zl1SegmentDataEnd - _object_zl1SegmentDataStart );
        _object_zl1SegmentRoDataStart = .;
            build/baserom/object_zl1.o (.rodata)
        _object_zl1SegmentRoDataEnd = .;
    _object_zl1SegmentRoDataSize = ABSOLUTE( _object_zl1SegmentRoDataEnd - _object_zl1SegmentRoDataStart );
        _object_zl1SegmentSDataStart = .;
            build/baserom/object_zl1.o (.sdata)
        . = ALIGN(0x10);
        _object_zl1SegmentSDataEnd = .;
        _object_zl1SegmentOvlStart = .;
            build/baserom/object_zl1.o (.ovl)
        . = ALIGN(0x10);
        _object_zl1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_zl1SegmentOvlEnd - _object_zl1SegmentTextStart );
    _object_zl1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_zl1.bss ADDR(..object_zl1) + SIZEOF(..object_zl1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_zl1SegmentBssStart = .;
            build/baserom/object_zl1.o (.sbss)
            build/baserom/object_zl1.o (.scommon)
            build/baserom/object_zl1.o (.bss)
            build/baserom/object_zl1.o (COMMON)
        . = ALIGN(0x10);
        _object_zl1SegmentBssEnd = .;
        _object_zl1SegmentEnd = .;
    }
    _object_zl1SegmentBssSize = ABSOLUTE( _object_zl1SegmentBssEnd - _object_zl1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_golSegmentRomStart = _RomSize;
    ..object_gol : AT(_RomSize)
    {
        _object_golSegmentStart = .;
        . = ALIGN(0x10);
        _object_golSegmentTextStart = .;
            build/baserom/object_gol.o (.text)
        _object_golSegmentTextEnd = .;
    _object_golSegmentTextSize = ABSOLUTE( _object_golSegmentTextEnd - _object_golSegmentTextStart );
        _object_golSegmentDataStart = .;
            build/baserom/object_gol.o (.data)
        _object_golSegmentDataEnd = .;
    _object_golSegmentDataSize = ABSOLUTE( _object_golSegmentDataEnd - _object_golSegmentDataStart );
        _object_golSegmentRoDataStart = .;
            build/baserom/object_gol.o (.rodata)
        _object_golSegmentRoDataEnd = .;
    _object_golSegmentRoDataSize = ABSOLUTE( _object_golSegmentRoDataEnd - _object_golSegmentRoDataStart );
        _object_golSegmentSDataStart = .;
            build/baserom/object_gol.o (.sdata)
        . = ALIGN(0x10);
        _object_golSegmentSDataEnd = .;
        _object_golSegmentOvlStart = .;
            build/baserom/object_gol.o (.ovl)
        . = ALIGN(0x10);
        _object_golSegmentOvlEnd = .;
    }
    _RomSize += ( _object_golSegmentOvlEnd - _object_golSegmentTextStart );
    _object_golSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gol.bss ADDR(..object_gol) + SIZEOF(..object_gol) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_golSegmentBssStart = .;
            build/baserom/object_gol.o (.sbss)
            build/baserom/object_gol.o (.scommon)
            build/baserom/object_gol.o (.bss)
            build/baserom/object_gol.o (COMMON)
        . = ALIGN(0x10);
        _object_golSegmentBssEnd = .;
        _object_golSegmentEnd = .;
    }
    _object_golSegmentBssSize = ABSOLUTE( _object_golSegmentBssEnd - _object_golSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bubbleSegmentRomStart = _RomSize;
    ..object_bubble : AT(_RomSize)
    {
        _object_bubbleSegmentStart = .;
        . = ALIGN(0x10);
        _object_bubbleSegmentTextStart = .;
            build/baserom/object_bubble.o (.text)
        _object_bubbleSegmentTextEnd = .;
    _object_bubbleSegmentTextSize = ABSOLUTE( _object_bubbleSegmentTextEnd - _object_bubbleSegmentTextStart );
        _object_bubbleSegmentDataStart = .;
            build/baserom/object_bubble.o (.data)
        _object_bubbleSegmentDataEnd = .;
    _object_bubbleSegmentDataSize = ABSOLUTE( _object_bubbleSegmentDataEnd - _object_bubbleSegmentDataStart );
        _object_bubbleSegmentRoDataStart = .;
            build/baserom/object_bubble.o (.rodata)
        _object_bubbleSegmentRoDataEnd = .;
    _object_bubbleSegmentRoDataSize = ABSOLUTE( _object_bubbleSegmentRoDataEnd - _object_bubbleSegmentRoDataStart );
        _object_bubbleSegmentSDataStart = .;
            build/baserom/object_bubble.o (.sdata)
        . = ALIGN(0x10);
        _object_bubbleSegmentSDataEnd = .;
        _object_bubbleSegmentOvlStart = .;
            build/baserom/object_bubble.o (.ovl)
        . = ALIGN(0x10);
        _object_bubbleSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bubbleSegmentOvlEnd - _object_bubbleSegmentTextStart );
    _object_bubbleSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bubble.bss ADDR(..object_bubble) + SIZEOF(..object_bubble) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bubbleSegmentBssStart = .;
            build/baserom/object_bubble.o (.sbss)
            build/baserom/object_bubble.o (.scommon)
            build/baserom/object_bubble.o (.bss)
            build/baserom/object_bubble.o (COMMON)
        . = ALIGN(0x10);
        _object_bubbleSegmentBssEnd = .;
        _object_bubbleSegmentEnd = .;
    }
    _object_bubbleSegmentBssSize = ABSOLUTE( _object_bubbleSegmentBssEnd - _object_bubbleSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_dodojrSegmentRomStart = _RomSize;
    ..object_dodojr : AT(_RomSize)
    {
        _object_dodojrSegmentStart = .;
        . = ALIGN(0x10);
        _object_dodojrSegmentTextStart = .;
            build/baserom/object_dodojr.o (.text)
        _object_dodojrSegmentTextEnd = .;
    _object_dodojrSegmentTextSize = ABSOLUTE( _object_dodojrSegmentTextEnd - _object_dodojrSegmentTextStart );
        _object_dodojrSegmentDataStart = .;
            build/baserom/object_dodojr.o (.data)
        _object_dodojrSegmentDataEnd = .;
    _object_dodojrSegmentDataSize = ABSOLUTE( _object_dodojrSegmentDataEnd - _object_dodojrSegmentDataStart );
        _object_dodojrSegmentRoDataStart = .;
            build/baserom/object_dodojr.o (.rodata)
        _object_dodojrSegmentRoDataEnd = .;
    _object_dodojrSegmentRoDataSize = ABSOLUTE( _object_dodojrSegmentRoDataEnd - _object_dodojrSegmentRoDataStart );
        _object_dodojrSegmentSDataStart = .;
            build/baserom/object_dodojr.o (.sdata)
        . = ALIGN(0x10);
        _object_dodojrSegmentSDataEnd = .;
        _object_dodojrSegmentOvlStart = .;
            build/baserom/object_dodojr.o (.ovl)
        . = ALIGN(0x10);
        _object_dodojrSegmentOvlEnd = .;
    }
    _RomSize += ( _object_dodojrSegmentOvlEnd - _object_dodojrSegmentTextStart );
    _object_dodojrSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_dodojr.bss ADDR(..object_dodojr) + SIZEOF(..object_dodojr) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_dodojrSegmentBssStart = .;
            build/baserom/object_dodojr.o (.sbss)
            build/baserom/object_dodojr.o (.scommon)
            build/baserom/object_dodojr.o (.bss)
            build/baserom/object_dodojr.o (COMMON)
        . = ALIGN(0x10);
        _object_dodojrSegmentBssEnd = .;
        _object_dodojrSegmentEnd = .;
    }
    _object_dodojrSegmentBssSize = ABSOLUTE( _object_dodojrSegmentBssEnd - _object_dodojrSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_torch2SegmentRomStart = _RomSize;
    ..object_torch2 : AT(_RomSize)
    {
        _object_torch2SegmentStart = .;
        . = ALIGN(0x10);
        _object_torch2SegmentTextStart = .;
            build/baserom/object_torch2.o (.text)
        _object_torch2SegmentTextEnd = .;
    _object_torch2SegmentTextSize = ABSOLUTE( _object_torch2SegmentTextEnd - _object_torch2SegmentTextStart );
        _object_torch2SegmentDataStart = .;
            build/baserom/object_torch2.o (.data)
        _object_torch2SegmentDataEnd = .;
    _object_torch2SegmentDataSize = ABSOLUTE( _object_torch2SegmentDataEnd - _object_torch2SegmentDataStart );
        _object_torch2SegmentRoDataStart = .;
            build/baserom/object_torch2.o (.rodata)
        _object_torch2SegmentRoDataEnd = .;
    _object_torch2SegmentRoDataSize = ABSOLUTE( _object_torch2SegmentRoDataEnd - _object_torch2SegmentRoDataStart );
        _object_torch2SegmentSDataStart = .;
            build/baserom/object_torch2.o (.sdata)
        . = ALIGN(0x10);
        _object_torch2SegmentSDataEnd = .;
        _object_torch2SegmentOvlStart = .;
            build/baserom/object_torch2.o (.ovl)
        . = ALIGN(0x10);
        _object_torch2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_torch2SegmentOvlEnd - _object_torch2SegmentTextStart );
    _object_torch2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_torch2.bss ADDR(..object_torch2) + SIZEOF(..object_torch2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_torch2SegmentBssStart = .;
            build/baserom/object_torch2.o (.sbss)
            build/baserom/object_torch2.o (.scommon)
            build/baserom/object_torch2.o (.bss)
            build/baserom/object_torch2.o (COMMON)
        . = ALIGN(0x10);
        _object_torch2SegmentBssEnd = .;
        _object_torch2SegmentEnd = .;
    }
    _object_torch2SegmentBssSize = ABSOLUTE( _object_torch2SegmentBssEnd - _object_torch2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_blSegmentRomStart = _RomSize;
    ..object_bl : AT(_RomSize)
    {
        _object_blSegmentStart = .;
        . = ALIGN(0x10);
        _object_blSegmentTextStart = .;
            build/baserom/object_bl.o (.text)
        _object_blSegmentTextEnd = .;
    _object_blSegmentTextSize = ABSOLUTE( _object_blSegmentTextEnd - _object_blSegmentTextStart );
        _object_blSegmentDataStart = .;
            build/baserom/object_bl.o (.data)
        _object_blSegmentDataEnd = .;
    _object_blSegmentDataSize = ABSOLUTE( _object_blSegmentDataEnd - _object_blSegmentDataStart );
        _object_blSegmentRoDataStart = .;
            build/baserom/object_bl.o (.rodata)
        _object_blSegmentRoDataEnd = .;
    _object_blSegmentRoDataSize = ABSOLUTE( _object_blSegmentRoDataEnd - _object_blSegmentRoDataStart );
        _object_blSegmentSDataStart = .;
            build/baserom/object_bl.o (.sdata)
        . = ALIGN(0x10);
        _object_blSegmentSDataEnd = .;
        _object_blSegmentOvlStart = .;
            build/baserom/object_bl.o (.ovl)
        . = ALIGN(0x10);
        _object_blSegmentOvlEnd = .;
    }
    _RomSize += ( _object_blSegmentOvlEnd - _object_blSegmentTextStart );
    _object_blSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bl.bss ADDR(..object_bl) + SIZEOF(..object_bl) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_blSegmentBssStart = .;
            build/baserom/object_bl.o (.sbss)
            build/baserom/object_bl.o (.scommon)
            build/baserom/object_bl.o (.bss)
            build/baserom/object_bl.o (COMMON)
        . = ALIGN(0x10);
        _object_blSegmentBssEnd = .;
        _object_blSegmentEnd = .;
    }
    _object_blSegmentBssSize = ABSOLUTE( _object_blSegmentBssEnd - _object_blSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_tpSegmentRomStart = _RomSize;
    ..object_tp : AT(_RomSize)
    {
        _object_tpSegmentStart = .;
        . = ALIGN(0x10);
        _object_tpSegmentTextStart = .;
            build/baserom/object_tp.o (.text)
        _object_tpSegmentTextEnd = .;
    _object_tpSegmentTextSize = ABSOLUTE( _object_tpSegmentTextEnd - _object_tpSegmentTextStart );
        _object_tpSegmentDataStart = .;
            build/baserom/object_tp.o (.data)
        _object_tpSegmentDataEnd = .;
    _object_tpSegmentDataSize = ABSOLUTE( _object_tpSegmentDataEnd - _object_tpSegmentDataStart );
        _object_tpSegmentRoDataStart = .;
            build/baserom/object_tp.o (.rodata)
        _object_tpSegmentRoDataEnd = .;
    _object_tpSegmentRoDataSize = ABSOLUTE( _object_tpSegmentRoDataEnd - _object_tpSegmentRoDataStart );
        _object_tpSegmentSDataStart = .;
            build/baserom/object_tp.o (.sdata)
        . = ALIGN(0x10);
        _object_tpSegmentSDataEnd = .;
        _object_tpSegmentOvlStart = .;
            build/baserom/object_tp.o (.ovl)
        . = ALIGN(0x10);
        _object_tpSegmentOvlEnd = .;
    }
    _RomSize += ( _object_tpSegmentOvlEnd - _object_tpSegmentTextStart );
    _object_tpSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_tp.bss ADDR(..object_tp) + SIZEOF(..object_tp) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_tpSegmentBssStart = .;
            build/baserom/object_tp.o (.sbss)
            build/baserom/object_tp.o (.scommon)
            build/baserom/object_tp.o (.bss)
            build/baserom/object_tp.o (COMMON)
        . = ALIGN(0x10);
        _object_tpSegmentBssEnd = .;
        _object_tpSegmentEnd = .;
    }
    _object_tpSegmentBssSize = ABSOLUTE( _object_tpSegmentBssEnd - _object_tpSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oA1SegmentRomStart = _RomSize;
    ..object_oA1 : AT(_RomSize)
    {
        _object_oA1SegmentStart = .;
        . = ALIGN(0x10);
        _object_oA1SegmentTextStart = .;
            build/baserom/object_oA1.o (.text)
        _object_oA1SegmentTextEnd = .;
    _object_oA1SegmentTextSize = ABSOLUTE( _object_oA1SegmentTextEnd - _object_oA1SegmentTextStart );
        _object_oA1SegmentDataStart = .;
            build/baserom/object_oA1.o (.data)
        _object_oA1SegmentDataEnd = .;
    _object_oA1SegmentDataSize = ABSOLUTE( _object_oA1SegmentDataEnd - _object_oA1SegmentDataStart );
        _object_oA1SegmentRoDataStart = .;
            build/baserom/object_oA1.o (.rodata)
        _object_oA1SegmentRoDataEnd = .;
    _object_oA1SegmentRoDataSize = ABSOLUTE( _object_oA1SegmentRoDataEnd - _object_oA1SegmentRoDataStart );
        _object_oA1SegmentSDataStart = .;
            build/baserom/object_oA1.o (.sdata)
        . = ALIGN(0x10);
        _object_oA1SegmentSDataEnd = .;
        _object_oA1SegmentOvlStart = .;
            build/baserom/object_oA1.o (.ovl)
        . = ALIGN(0x10);
        _object_oA1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oA1SegmentOvlEnd - _object_oA1SegmentTextStart );
    _object_oA1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oA1.bss ADDR(..object_oA1) + SIZEOF(..object_oA1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oA1SegmentBssStart = .;
            build/baserom/object_oA1.o (.sbss)
            build/baserom/object_oA1.o (.scommon)
            build/baserom/object_oA1.o (.bss)
            build/baserom/object_oA1.o (COMMON)
        . = ALIGN(0x10);
        _object_oA1SegmentBssEnd = .;
        _object_oA1SegmentEnd = .;
    }
    _object_oA1SegmentBssSize = ABSOLUTE( _object_oA1SegmentBssEnd - _object_oA1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_stSegmentRomStart = _RomSize;
    ..object_st : AT(_RomSize)
    {
        _object_stSegmentStart = .;
        . = ALIGN(0x10);
        _object_stSegmentTextStart = .;
            build/baserom/object_st.o (.text)
        _object_stSegmentTextEnd = .;
    _object_stSegmentTextSize = ABSOLUTE( _object_stSegmentTextEnd - _object_stSegmentTextStart );
        _object_stSegmentDataStart = .;
            build/baserom/object_st.o (.data)
        _object_stSegmentDataEnd = .;
    _object_stSegmentDataSize = ABSOLUTE( _object_stSegmentDataEnd - _object_stSegmentDataStart );
        _object_stSegmentRoDataStart = .;
            build/baserom/object_st.o (.rodata)
        _object_stSegmentRoDataEnd = .;
    _object_stSegmentRoDataSize = ABSOLUTE( _object_stSegmentRoDataEnd - _object_stSegmentRoDataStart );
        _object_stSegmentSDataStart = .;
            build/baserom/object_st.o (.sdata)
        . = ALIGN(0x10);
        _object_stSegmentSDataEnd = .;
        _object_stSegmentOvlStart = .;
            build/baserom/object_st.o (.ovl)
        . = ALIGN(0x10);
        _object_stSegmentOvlEnd = .;
    }
    _RomSize += ( _object_stSegmentOvlEnd - _object_stSegmentTextStart );
    _object_stSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_st.bss ADDR(..object_st) + SIZEOF(..object_st) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_stSegmentBssStart = .;
            build/baserom/object_st.o (.sbss)
            build/baserom/object_st.o (.scommon)
            build/baserom/object_st.o (.bss)
            build/baserom/object_st.o (COMMON)
        . = ALIGN(0x10);
        _object_stSegmentBssEnd = .;
        _object_stSegmentEnd = .;
    }
    _object_stSegmentBssSize = ABSOLUTE( _object_stSegmentBssEnd - _object_stSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bwSegmentRomStart = _RomSize;
    ..object_bw : AT(_RomSize)
    {
        _object_bwSegmentStart = .;
        . = ALIGN(0x10);
        _object_bwSegmentTextStart = .;
            build/baserom/object_bw.o (.text)
        _object_bwSegmentTextEnd = .;
    _object_bwSegmentTextSize = ABSOLUTE( _object_bwSegmentTextEnd - _object_bwSegmentTextStart );
        _object_bwSegmentDataStart = .;
            build/baserom/object_bw.o (.data)
        _object_bwSegmentDataEnd = .;
    _object_bwSegmentDataSize = ABSOLUTE( _object_bwSegmentDataEnd - _object_bwSegmentDataStart );
        _object_bwSegmentRoDataStart = .;
            build/baserom/object_bw.o (.rodata)
        _object_bwSegmentRoDataEnd = .;
    _object_bwSegmentRoDataSize = ABSOLUTE( _object_bwSegmentRoDataEnd - _object_bwSegmentRoDataStart );
        _object_bwSegmentSDataStart = .;
            build/baserom/object_bw.o (.sdata)
        . = ALIGN(0x10);
        _object_bwSegmentSDataEnd = .;
        _object_bwSegmentOvlStart = .;
            build/baserom/object_bw.o (.ovl)
        . = ALIGN(0x10);
        _object_bwSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bwSegmentOvlEnd - _object_bwSegmentTextStart );
    _object_bwSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bw.bss ADDR(..object_bw) + SIZEOF(..object_bw) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bwSegmentBssStart = .;
            build/baserom/object_bw.o (.sbss)
            build/baserom/object_bw.o (.scommon)
            build/baserom/object_bw.o (.bss)
            build/baserom/object_bw.o (COMMON)
        . = ALIGN(0x10);
        _object_bwSegmentBssEnd = .;
        _object_bwSegmentEnd = .;
    }
    _object_bwSegmentBssSize = ABSOLUTE( _object_bwSegmentBssEnd - _object_bwSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_eiSegmentRomStart = _RomSize;
    ..object_ei : AT(_RomSize)
    {
        _object_eiSegmentStart = .;
        . = ALIGN(0x10);
        _object_eiSegmentTextStart = .;
            build/baserom/object_ei.o (.text)
        _object_eiSegmentTextEnd = .;
    _object_eiSegmentTextSize = ABSOLUTE( _object_eiSegmentTextEnd - _object_eiSegmentTextStart );
        _object_eiSegmentDataStart = .;
            build/baserom/object_ei.o (.data)
        _object_eiSegmentDataEnd = .;
    _object_eiSegmentDataSize = ABSOLUTE( _object_eiSegmentDataEnd - _object_eiSegmentDataStart );
        _object_eiSegmentRoDataStart = .;
            build/baserom/object_ei.o (.rodata)
        _object_eiSegmentRoDataEnd = .;
    _object_eiSegmentRoDataSize = ABSOLUTE( _object_eiSegmentRoDataEnd - _object_eiSegmentRoDataStart );
        _object_eiSegmentSDataStart = .;
            build/baserom/object_ei.o (.sdata)
        . = ALIGN(0x10);
        _object_eiSegmentSDataEnd = .;
        _object_eiSegmentOvlStart = .;
            build/baserom/object_ei.o (.ovl)
        . = ALIGN(0x10);
        _object_eiSegmentOvlEnd = .;
    }
    _RomSize += ( _object_eiSegmentOvlEnd - _object_eiSegmentTextStart );
    _object_eiSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ei.bss ADDR(..object_ei) + SIZEOF(..object_ei) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_eiSegmentBssStart = .;
            build/baserom/object_ei.o (.sbss)
            build/baserom/object_ei.o (.scommon)
            build/baserom/object_ei.o (.bss)
            build/baserom/object_ei.o (COMMON)
        . = ALIGN(0x10);
        _object_eiSegmentBssEnd = .;
        _object_eiSegmentEnd = .;
    }
    _object_eiSegmentBssSize = ABSOLUTE( _object_eiSegmentBssEnd - _object_eiSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_horse_normalSegmentRomStart = _RomSize;
    ..object_horse_normal : AT(_RomSize)
    {
        _object_horse_normalSegmentStart = .;
        . = ALIGN(0x10);
        _object_horse_normalSegmentTextStart = .;
            build/baserom/object_horse_normal.o (.text)
        _object_horse_normalSegmentTextEnd = .;
    _object_horse_normalSegmentTextSize = ABSOLUTE( _object_horse_normalSegmentTextEnd - _object_horse_normalSegmentTextStart );
        _object_horse_normalSegmentDataStart = .;
            build/baserom/object_horse_normal.o (.data)
        _object_horse_normalSegmentDataEnd = .;
    _object_horse_normalSegmentDataSize = ABSOLUTE( _object_horse_normalSegmentDataEnd - _object_horse_normalSegmentDataStart );
        _object_horse_normalSegmentRoDataStart = .;
            build/baserom/object_horse_normal.o (.rodata)
        _object_horse_normalSegmentRoDataEnd = .;
    _object_horse_normalSegmentRoDataSize = ABSOLUTE( _object_horse_normalSegmentRoDataEnd - _object_horse_normalSegmentRoDataStart );
        _object_horse_normalSegmentSDataStart = .;
            build/baserom/object_horse_normal.o (.sdata)
        . = ALIGN(0x10);
        _object_horse_normalSegmentSDataEnd = .;
        _object_horse_normalSegmentOvlStart = .;
            build/baserom/object_horse_normal.o (.ovl)
        . = ALIGN(0x10);
        _object_horse_normalSegmentOvlEnd = .;
    }
    _RomSize += ( _object_horse_normalSegmentOvlEnd - _object_horse_normalSegmentTextStart );
    _object_horse_normalSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_horse_normal.bss ADDR(..object_horse_normal) + SIZEOF(..object_horse_normal) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_horse_normalSegmentBssStart = .;
            build/baserom/object_horse_normal.o (.sbss)
            build/baserom/object_horse_normal.o (.scommon)
            build/baserom/object_horse_normal.o (.bss)
            build/baserom/object_horse_normal.o (COMMON)
        . = ALIGN(0x10);
        _object_horse_normalSegmentBssEnd = .;
        _object_horse_normalSegmentEnd = .;
    }
    _object_horse_normalSegmentBssSize = ABSOLUTE( _object_horse_normalSegmentBssEnd - _object_horse_normalSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oB1SegmentRomStart = _RomSize;
    ..object_oB1 : AT(_RomSize)
    {
        _object_oB1SegmentStart = .;
        . = ALIGN(0x10);
        _object_oB1SegmentTextStart = .;
            build/baserom/object_oB1.o (.text)
        _object_oB1SegmentTextEnd = .;
    _object_oB1SegmentTextSize = ABSOLUTE( _object_oB1SegmentTextEnd - _object_oB1SegmentTextStart );
        _object_oB1SegmentDataStart = .;
            build/baserom/object_oB1.o (.data)
        _object_oB1SegmentDataEnd = .;
    _object_oB1SegmentDataSize = ABSOLUTE( _object_oB1SegmentDataEnd - _object_oB1SegmentDataStart );
        _object_oB1SegmentRoDataStart = .;
            build/baserom/object_oB1.o (.rodata)
        _object_oB1SegmentRoDataEnd = .;
    _object_oB1SegmentRoDataSize = ABSOLUTE( _object_oB1SegmentRoDataEnd - _object_oB1SegmentRoDataStart );
        _object_oB1SegmentSDataStart = .;
            build/baserom/object_oB1.o (.sdata)
        . = ALIGN(0x10);
        _object_oB1SegmentSDataEnd = .;
        _object_oB1SegmentOvlStart = .;
            build/baserom/object_oB1.o (.ovl)
        . = ALIGN(0x10);
        _object_oB1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oB1SegmentOvlEnd - _object_oB1SegmentTextStart );
    _object_oB1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oB1.bss ADDR(..object_oB1) + SIZEOF(..object_oB1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oB1SegmentBssStart = .;
            build/baserom/object_oB1.o (.sbss)
            build/baserom/object_oB1.o (.scommon)
            build/baserom/object_oB1.o (.bss)
            build/baserom/object_oB1.o (COMMON)
        . = ALIGN(0x10);
        _object_oB1SegmentBssEnd = .;
        _object_oB1SegmentEnd = .;
    }
    _object_oB1SegmentBssSize = ABSOLUTE( _object_oB1SegmentBssEnd - _object_oB1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_o_animeSegmentRomStart = _RomSize;
    ..object_o_anime : AT(_RomSize)
    {
        _object_o_animeSegmentStart = .;
        . = ALIGN(0x10);
        _object_o_animeSegmentTextStart = .;
            build/baserom/object_o_anime.o (.text)
        _object_o_animeSegmentTextEnd = .;
    _object_o_animeSegmentTextSize = ABSOLUTE( _object_o_animeSegmentTextEnd - _object_o_animeSegmentTextStart );
        _object_o_animeSegmentDataStart = .;
            build/baserom/object_o_anime.o (.data)
        _object_o_animeSegmentDataEnd = .;
    _object_o_animeSegmentDataSize = ABSOLUTE( _object_o_animeSegmentDataEnd - _object_o_animeSegmentDataStart );
        _object_o_animeSegmentRoDataStart = .;
            build/baserom/object_o_anime.o (.rodata)
        _object_o_animeSegmentRoDataEnd = .;
    _object_o_animeSegmentRoDataSize = ABSOLUTE( _object_o_animeSegmentRoDataEnd - _object_o_animeSegmentRoDataStart );
        _object_o_animeSegmentSDataStart = .;
            build/baserom/object_o_anime.o (.sdata)
        . = ALIGN(0x10);
        _object_o_animeSegmentSDataEnd = .;
        _object_o_animeSegmentOvlStart = .;
            build/baserom/object_o_anime.o (.ovl)
        . = ALIGN(0x10);
        _object_o_animeSegmentOvlEnd = .;
    }
    _RomSize += ( _object_o_animeSegmentOvlEnd - _object_o_animeSegmentTextStart );
    _object_o_animeSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_o_anime.bss ADDR(..object_o_anime) + SIZEOF(..object_o_anime) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_o_animeSegmentBssStart = .;
            build/baserom/object_o_anime.o (.sbss)
            build/baserom/object_o_anime.o (.scommon)
            build/baserom/object_o_anime.o (.bss)
            build/baserom/object_o_anime.o (COMMON)
        . = ALIGN(0x10);
        _object_o_animeSegmentBssEnd = .;
        _object_o_animeSegmentEnd = .;
    }
    _object_o_animeSegmentBssSize = ABSOLUTE( _object_o_animeSegmentBssEnd - _object_o_animeSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot04_objectsSegmentRomStart = _RomSize;
    ..object_spot04_objects : AT(_RomSize)
    {
        _object_spot04_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot04_objectsSegmentTextStart = .;
            build/baserom/object_spot04_objects.o (.text)
        _object_spot04_objectsSegmentTextEnd = .;
    _object_spot04_objectsSegmentTextSize = ABSOLUTE( _object_spot04_objectsSegmentTextEnd - _object_spot04_objectsSegmentTextStart );
        _object_spot04_objectsSegmentDataStart = .;
            build/baserom/object_spot04_objects.o (.data)
        _object_spot04_objectsSegmentDataEnd = .;
    _object_spot04_objectsSegmentDataSize = ABSOLUTE( _object_spot04_objectsSegmentDataEnd - _object_spot04_objectsSegmentDataStart );
        _object_spot04_objectsSegmentRoDataStart = .;
            build/baserom/object_spot04_objects.o (.rodata)
        _object_spot04_objectsSegmentRoDataEnd = .;
    _object_spot04_objectsSegmentRoDataSize = ABSOLUTE( _object_spot04_objectsSegmentRoDataEnd - _object_spot04_objectsSegmentRoDataStart );
        _object_spot04_objectsSegmentSDataStart = .;
            build/baserom/object_spot04_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_spot04_objectsSegmentSDataEnd = .;
        _object_spot04_objectsSegmentOvlStart = .;
            build/baserom/object_spot04_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_spot04_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot04_objectsSegmentOvlEnd - _object_spot04_objectsSegmentTextStart );
    _object_spot04_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot04_objects.bss ADDR(..object_spot04_objects) + SIZEOF(..object_spot04_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot04_objectsSegmentBssStart = .;
            build/baserom/object_spot04_objects.o (.sbss)
            build/baserom/object_spot04_objects.o (.scommon)
            build/baserom/object_spot04_objects.o (.bss)
            build/baserom/object_spot04_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_spot04_objectsSegmentBssEnd = .;
        _object_spot04_objectsSegmentEnd = .;
    }
    _object_spot04_objectsSegmentBssSize = ABSOLUTE( _object_spot04_objectsSegmentBssEnd - _object_spot04_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ddan_objectsSegmentRomStart = _RomSize;
    ..object_ddan_objects : AT(_RomSize)
    {
        _object_ddan_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_ddan_objectsSegmentTextStart = .;
            build/baserom/object_ddan_objects.o (.text)
        _object_ddan_objectsSegmentTextEnd = .;
    _object_ddan_objectsSegmentTextSize = ABSOLUTE( _object_ddan_objectsSegmentTextEnd - _object_ddan_objectsSegmentTextStart );
        _object_ddan_objectsSegmentDataStart = .;
            build/baserom/object_ddan_objects.o (.data)
        _object_ddan_objectsSegmentDataEnd = .;
    _object_ddan_objectsSegmentDataSize = ABSOLUTE( _object_ddan_objectsSegmentDataEnd - _object_ddan_objectsSegmentDataStart );
        _object_ddan_objectsSegmentRoDataStart = .;
            build/baserom/object_ddan_objects.o (.rodata)
        _object_ddan_objectsSegmentRoDataEnd = .;
    _object_ddan_objectsSegmentRoDataSize = ABSOLUTE( _object_ddan_objectsSegmentRoDataEnd - _object_ddan_objectsSegmentRoDataStart );
        _object_ddan_objectsSegmentSDataStart = .;
            build/baserom/object_ddan_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_ddan_objectsSegmentSDataEnd = .;
        _object_ddan_objectsSegmentOvlStart = .;
            build/baserom/object_ddan_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_ddan_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_ddan_objectsSegmentOvlEnd - _object_ddan_objectsSegmentTextStart );
    _object_ddan_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ddan_objects.bss ADDR(..object_ddan_objects) + SIZEOF(..object_ddan_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ddan_objectsSegmentBssStart = .;
            build/baserom/object_ddan_objects.o (.sbss)
            build/baserom/object_ddan_objects.o (.scommon)
            build/baserom/object_ddan_objects.o (.bss)
            build/baserom/object_ddan_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_ddan_objectsSegmentBssEnd = .;
        _object_ddan_objectsSegmentEnd = .;
    }
    _object_ddan_objectsSegmentBssSize = ABSOLUTE( _object_ddan_objectsSegmentBssEnd - _object_ddan_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_hidan_objectsSegmentRomStart = _RomSize;
    ..object_hidan_objects : AT(_RomSize)
    {
        _object_hidan_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_hidan_objectsSegmentTextStart = .;
            build/baserom/object_hidan_objects.o (.text)
        _object_hidan_objectsSegmentTextEnd = .;
    _object_hidan_objectsSegmentTextSize = ABSOLUTE( _object_hidan_objectsSegmentTextEnd - _object_hidan_objectsSegmentTextStart );
        _object_hidan_objectsSegmentDataStart = .;
            build/baserom/object_hidan_objects.o (.data)
        _object_hidan_objectsSegmentDataEnd = .;
    _object_hidan_objectsSegmentDataSize = ABSOLUTE( _object_hidan_objectsSegmentDataEnd - _object_hidan_objectsSegmentDataStart );
        _object_hidan_objectsSegmentRoDataStart = .;
            build/baserom/object_hidan_objects.o (.rodata)
        _object_hidan_objectsSegmentRoDataEnd = .;
    _object_hidan_objectsSegmentRoDataSize = ABSOLUTE( _object_hidan_objectsSegmentRoDataEnd - _object_hidan_objectsSegmentRoDataStart );
        _object_hidan_objectsSegmentSDataStart = .;
            build/baserom/object_hidan_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_hidan_objectsSegmentSDataEnd = .;
        _object_hidan_objectsSegmentOvlStart = .;
            build/baserom/object_hidan_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_hidan_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_hidan_objectsSegmentOvlEnd - _object_hidan_objectsSegmentTextStart );
    _object_hidan_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_hidan_objects.bss ADDR(..object_hidan_objects) + SIZEOF(..object_hidan_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_hidan_objectsSegmentBssStart = .;
            build/baserom/object_hidan_objects.o (.sbss)
            build/baserom/object_hidan_objects.o (.scommon)
            build/baserom/object_hidan_objects.o (.bss)
            build/baserom/object_hidan_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_hidan_objectsSegmentBssEnd = .;
        _object_hidan_objectsSegmentEnd = .;
    }
    _object_hidan_objectsSegmentBssSize = ABSOLUTE( _object_hidan_objectsSegmentBssEnd - _object_hidan_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_horse_ganonSegmentRomStart = _RomSize;
    ..object_horse_ganon : AT(_RomSize)
    {
        _object_horse_ganonSegmentStart = .;
        . = ALIGN(0x10);
        _object_horse_ganonSegmentTextStart = .;
            build/baserom/object_horse_ganon.o (.text)
        _object_horse_ganonSegmentTextEnd = .;
    _object_horse_ganonSegmentTextSize = ABSOLUTE( _object_horse_ganonSegmentTextEnd - _object_horse_ganonSegmentTextStart );
        _object_horse_ganonSegmentDataStart = .;
            build/baserom/object_horse_ganon.o (.data)
        _object_horse_ganonSegmentDataEnd = .;
    _object_horse_ganonSegmentDataSize = ABSOLUTE( _object_horse_ganonSegmentDataEnd - _object_horse_ganonSegmentDataStart );
        _object_horse_ganonSegmentRoDataStart = .;
            build/baserom/object_horse_ganon.o (.rodata)
        _object_horse_ganonSegmentRoDataEnd = .;
    _object_horse_ganonSegmentRoDataSize = ABSOLUTE( _object_horse_ganonSegmentRoDataEnd - _object_horse_ganonSegmentRoDataStart );
        _object_horse_ganonSegmentSDataStart = .;
            build/baserom/object_horse_ganon.o (.sdata)
        . = ALIGN(0x10);
        _object_horse_ganonSegmentSDataEnd = .;
        _object_horse_ganonSegmentOvlStart = .;
            build/baserom/object_horse_ganon.o (.ovl)
        . = ALIGN(0x10);
        _object_horse_ganonSegmentOvlEnd = .;
    }
    _RomSize += ( _object_horse_ganonSegmentOvlEnd - _object_horse_ganonSegmentTextStart );
    _object_horse_ganonSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_horse_ganon.bss ADDR(..object_horse_ganon) + SIZEOF(..object_horse_ganon) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_horse_ganonSegmentBssStart = .;
            build/baserom/object_horse_ganon.o (.sbss)
            build/baserom/object_horse_ganon.o (.scommon)
            build/baserom/object_horse_ganon.o (.bss)
            build/baserom/object_horse_ganon.o (COMMON)
        . = ALIGN(0x10);
        _object_horse_ganonSegmentBssEnd = .;
        _object_horse_ganonSegmentEnd = .;
    }
    _object_horse_ganonSegmentBssSize = ABSOLUTE( _object_horse_ganonSegmentBssEnd - _object_horse_ganonSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oA2SegmentRomStart = _RomSize;
    ..object_oA2 : AT(_RomSize)
    {
        _object_oA2SegmentStart = .;
        . = ALIGN(0x10);
        _object_oA2SegmentTextStart = .;
            build/baserom/object_oA2.o (.text)
        _object_oA2SegmentTextEnd = .;
    _object_oA2SegmentTextSize = ABSOLUTE( _object_oA2SegmentTextEnd - _object_oA2SegmentTextStart );
        _object_oA2SegmentDataStart = .;
            build/baserom/object_oA2.o (.data)
        _object_oA2SegmentDataEnd = .;
    _object_oA2SegmentDataSize = ABSOLUTE( _object_oA2SegmentDataEnd - _object_oA2SegmentDataStart );
        _object_oA2SegmentRoDataStart = .;
            build/baserom/object_oA2.o (.rodata)
        _object_oA2SegmentRoDataEnd = .;
    _object_oA2SegmentRoDataSize = ABSOLUTE( _object_oA2SegmentRoDataEnd - _object_oA2SegmentRoDataStart );
        _object_oA2SegmentSDataStart = .;
            build/baserom/object_oA2.o (.sdata)
        . = ALIGN(0x10);
        _object_oA2SegmentSDataEnd = .;
        _object_oA2SegmentOvlStart = .;
            build/baserom/object_oA2.o (.ovl)
        . = ALIGN(0x10);
        _object_oA2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oA2SegmentOvlEnd - _object_oA2SegmentTextStart );
    _object_oA2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oA2.bss ADDR(..object_oA2) + SIZEOF(..object_oA2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oA2SegmentBssStart = .;
            build/baserom/object_oA2.o (.sbss)
            build/baserom/object_oA2.o (.scommon)
            build/baserom/object_oA2.o (.bss)
            build/baserom/object_oA2.o (COMMON)
        . = ALIGN(0x10);
        _object_oA2SegmentBssEnd = .;
        _object_oA2SegmentEnd = .;
    }
    _object_oA2SegmentBssSize = ABSOLUTE( _object_oA2SegmentBssEnd - _object_oA2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot00_objectsSegmentRomStart = _RomSize;
    ..object_spot00_objects : AT(_RomSize)
    {
        _object_spot00_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot00_objectsSegmentTextStart = .;
            build/baserom/object_spot00_objects.o (.text)
        _object_spot00_objectsSegmentTextEnd = .;
    _object_spot00_objectsSegmentTextSize = ABSOLUTE( _object_spot00_objectsSegmentTextEnd - _object_spot00_objectsSegmentTextStart );
        _object_spot00_objectsSegmentDataStart = .;
            build/baserom/object_spot00_objects.o (.data)
        _object_spot00_objectsSegmentDataEnd = .;
    _object_spot00_objectsSegmentDataSize = ABSOLUTE( _object_spot00_objectsSegmentDataEnd - _object_spot00_objectsSegmentDataStart );
        _object_spot00_objectsSegmentRoDataStart = .;
            build/baserom/object_spot00_objects.o (.rodata)
        _object_spot00_objectsSegmentRoDataEnd = .;
    _object_spot00_objectsSegmentRoDataSize = ABSOLUTE( _object_spot00_objectsSegmentRoDataEnd - _object_spot00_objectsSegmentRoDataStart );
        _object_spot00_objectsSegmentSDataStart = .;
            build/baserom/object_spot00_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_spot00_objectsSegmentSDataEnd = .;
        _object_spot00_objectsSegmentOvlStart = .;
            build/baserom/object_spot00_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_spot00_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot00_objectsSegmentOvlEnd - _object_spot00_objectsSegmentTextStart );
    _object_spot00_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot00_objects.bss ADDR(..object_spot00_objects) + SIZEOF(..object_spot00_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot00_objectsSegmentBssStart = .;
            build/baserom/object_spot00_objects.o (.sbss)
            build/baserom/object_spot00_objects.o (.scommon)
            build/baserom/object_spot00_objects.o (.bss)
            build/baserom/object_spot00_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_spot00_objectsSegmentBssEnd = .;
        _object_spot00_objectsSegmentEnd = .;
    }
    _object_spot00_objectsSegmentBssSize = ABSOLUTE( _object_spot00_objectsSegmentBssEnd - _object_spot00_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mbSegmentRomStart = _RomSize;
    ..object_mb : AT(_RomSize)
    {
        _object_mbSegmentStart = .;
        . = ALIGN(0x10);
        _object_mbSegmentTextStart = .;
            build/baserom/object_mb.o (.text)
        _object_mbSegmentTextEnd = .;
    _object_mbSegmentTextSize = ABSOLUTE( _object_mbSegmentTextEnd - _object_mbSegmentTextStart );
        _object_mbSegmentDataStart = .;
            build/baserom/object_mb.o (.data)
        _object_mbSegmentDataEnd = .;
    _object_mbSegmentDataSize = ABSOLUTE( _object_mbSegmentDataEnd - _object_mbSegmentDataStart );
        _object_mbSegmentRoDataStart = .;
            build/baserom/object_mb.o (.rodata)
        _object_mbSegmentRoDataEnd = .;
    _object_mbSegmentRoDataSize = ABSOLUTE( _object_mbSegmentRoDataEnd - _object_mbSegmentRoDataStart );
        _object_mbSegmentSDataStart = .;
            build/baserom/object_mb.o (.sdata)
        . = ALIGN(0x10);
        _object_mbSegmentSDataEnd = .;
        _object_mbSegmentOvlStart = .;
            build/baserom/object_mb.o (.ovl)
        . = ALIGN(0x10);
        _object_mbSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mbSegmentOvlEnd - _object_mbSegmentTextStart );
    _object_mbSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mb.bss ADDR(..object_mb) + SIZEOF(..object_mb) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mbSegmentBssStart = .;
            build/baserom/object_mb.o (.sbss)
            build/baserom/object_mb.o (.scommon)
            build/baserom/object_mb.o (.bss)
            build/baserom/object_mb.o (COMMON)
        . = ALIGN(0x10);
        _object_mbSegmentBssEnd = .;
        _object_mbSegmentEnd = .;
    }
    _object_mbSegmentBssSize = ABSOLUTE( _object_mbSegmentBssEnd - _object_mbSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bombfSegmentRomStart = _RomSize;
    ..object_bombf : AT(_RomSize)
    {
        _object_bombfSegmentStart = .;
        . = ALIGN(0x10);
        _object_bombfSegmentTextStart = .;
            build/baserom/object_bombf.o (.text)
        _object_bombfSegmentTextEnd = .;
    _object_bombfSegmentTextSize = ABSOLUTE( _object_bombfSegmentTextEnd - _object_bombfSegmentTextStart );
        _object_bombfSegmentDataStart = .;
            build/baserom/object_bombf.o (.data)
        _object_bombfSegmentDataEnd = .;
    _object_bombfSegmentDataSize = ABSOLUTE( _object_bombfSegmentDataEnd - _object_bombfSegmentDataStart );
        _object_bombfSegmentRoDataStart = .;
            build/baserom/object_bombf.o (.rodata)
        _object_bombfSegmentRoDataEnd = .;
    _object_bombfSegmentRoDataSize = ABSOLUTE( _object_bombfSegmentRoDataEnd - _object_bombfSegmentRoDataStart );
        _object_bombfSegmentSDataStart = .;
            build/baserom/object_bombf.o (.sdata)
        . = ALIGN(0x10);
        _object_bombfSegmentSDataEnd = .;
        _object_bombfSegmentOvlStart = .;
            build/baserom/object_bombf.o (.ovl)
        . = ALIGN(0x10);
        _object_bombfSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bombfSegmentOvlEnd - _object_bombfSegmentTextStart );
    _object_bombfSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bombf.bss ADDR(..object_bombf) + SIZEOF(..object_bombf) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bombfSegmentBssStart = .;
            build/baserom/object_bombf.o (.sbss)
            build/baserom/object_bombf.o (.scommon)
            build/baserom/object_bombf.o (.bss)
            build/baserom/object_bombf.o (COMMON)
        . = ALIGN(0x10);
        _object_bombfSegmentBssEnd = .;
        _object_bombfSegmentEnd = .;
    }
    _object_bombfSegmentBssSize = ABSOLUTE( _object_bombfSegmentBssEnd - _object_bombfSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_sk2SegmentRomStart = _RomSize;
    ..object_sk2 : AT(_RomSize)
    {
        _object_sk2SegmentStart = .;
        . = ALIGN(0x10);
        _object_sk2SegmentTextStart = .;
            build/baserom/object_sk2.o (.text)
        _object_sk2SegmentTextEnd = .;
    _object_sk2SegmentTextSize = ABSOLUTE( _object_sk2SegmentTextEnd - _object_sk2SegmentTextStart );
        _object_sk2SegmentDataStart = .;
            build/baserom/object_sk2.o (.data)
        _object_sk2SegmentDataEnd = .;
    _object_sk2SegmentDataSize = ABSOLUTE( _object_sk2SegmentDataEnd - _object_sk2SegmentDataStart );
        _object_sk2SegmentRoDataStart = .;
            build/baserom/object_sk2.o (.rodata)
        _object_sk2SegmentRoDataEnd = .;
    _object_sk2SegmentRoDataSize = ABSOLUTE( _object_sk2SegmentRoDataEnd - _object_sk2SegmentRoDataStart );
        _object_sk2SegmentSDataStart = .;
            build/baserom/object_sk2.o (.sdata)
        . = ALIGN(0x10);
        _object_sk2SegmentSDataEnd = .;
        _object_sk2SegmentOvlStart = .;
            build/baserom/object_sk2.o (.ovl)
        . = ALIGN(0x10);
        _object_sk2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_sk2SegmentOvlEnd - _object_sk2SegmentTextStart );
    _object_sk2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_sk2.bss ADDR(..object_sk2) + SIZEOF(..object_sk2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_sk2SegmentBssStart = .;
            build/baserom/object_sk2.o (.sbss)
            build/baserom/object_sk2.o (.scommon)
            build/baserom/object_sk2.o (.bss)
            build/baserom/object_sk2.o (COMMON)
        . = ALIGN(0x10);
        _object_sk2SegmentBssEnd = .;
        _object_sk2SegmentEnd = .;
    }
    _object_sk2SegmentBssSize = ABSOLUTE( _object_sk2SegmentBssEnd - _object_sk2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE1SegmentRomStart = _RomSize;
    ..object_oE1 : AT(_RomSize)
    {
        _object_oE1SegmentStart = .;
        . = ALIGN(0x10);
        _object_oE1SegmentTextStart = .;
            build/baserom/object_oE1.o (.text)
        _object_oE1SegmentTextEnd = .;
    _object_oE1SegmentTextSize = ABSOLUTE( _object_oE1SegmentTextEnd - _object_oE1SegmentTextStart );
        _object_oE1SegmentDataStart = .;
            build/baserom/object_oE1.o (.data)
        _object_oE1SegmentDataEnd = .;
    _object_oE1SegmentDataSize = ABSOLUTE( _object_oE1SegmentDataEnd - _object_oE1SegmentDataStart );
        _object_oE1SegmentRoDataStart = .;
            build/baserom/object_oE1.o (.rodata)
        _object_oE1SegmentRoDataEnd = .;
    _object_oE1SegmentRoDataSize = ABSOLUTE( _object_oE1SegmentRoDataEnd - _object_oE1SegmentRoDataStart );
        _object_oE1SegmentSDataStart = .;
            build/baserom/object_oE1.o (.sdata)
        . = ALIGN(0x10);
        _object_oE1SegmentSDataEnd = .;
        _object_oE1SegmentOvlStart = .;
            build/baserom/object_oE1.o (.ovl)
        . = ALIGN(0x10);
        _object_oE1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE1SegmentOvlEnd - _object_oE1SegmentTextStart );
    _object_oE1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE1.bss ADDR(..object_oE1) + SIZEOF(..object_oE1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE1SegmentBssStart = .;
            build/baserom/object_oE1.o (.sbss)
            build/baserom/object_oE1.o (.scommon)
            build/baserom/object_oE1.o (.bss)
            build/baserom/object_oE1.o (COMMON)
        . = ALIGN(0x10);
        _object_oE1SegmentBssEnd = .;
        _object_oE1SegmentEnd = .;
    }
    _object_oE1SegmentBssSize = ABSOLUTE( _object_oE1SegmentBssEnd - _object_oE1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE_animeSegmentRomStart = _RomSize;
    ..object_oE_anime : AT(_RomSize)
    {
        _object_oE_animeSegmentStart = .;
        . = ALIGN(0x10);
        _object_oE_animeSegmentTextStart = .;
            build/baserom/object_oE_anime.o (.text)
        _object_oE_animeSegmentTextEnd = .;
    _object_oE_animeSegmentTextSize = ABSOLUTE( _object_oE_animeSegmentTextEnd - _object_oE_animeSegmentTextStart );
        _object_oE_animeSegmentDataStart = .;
            build/baserom/object_oE_anime.o (.data)
        _object_oE_animeSegmentDataEnd = .;
    _object_oE_animeSegmentDataSize = ABSOLUTE( _object_oE_animeSegmentDataEnd - _object_oE_animeSegmentDataStart );
        _object_oE_animeSegmentRoDataStart = .;
            build/baserom/object_oE_anime.o (.rodata)
        _object_oE_animeSegmentRoDataEnd = .;
    _object_oE_animeSegmentRoDataSize = ABSOLUTE( _object_oE_animeSegmentRoDataEnd - _object_oE_animeSegmentRoDataStart );
        _object_oE_animeSegmentSDataStart = .;
            build/baserom/object_oE_anime.o (.sdata)
        . = ALIGN(0x10);
        _object_oE_animeSegmentSDataEnd = .;
        _object_oE_animeSegmentOvlStart = .;
            build/baserom/object_oE_anime.o (.ovl)
        . = ALIGN(0x10);
        _object_oE_animeSegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE_animeSegmentOvlEnd - _object_oE_animeSegmentTextStart );
    _object_oE_animeSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE_anime.bss ADDR(..object_oE_anime) + SIZEOF(..object_oE_anime) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE_animeSegmentBssStart = .;
            build/baserom/object_oE_anime.o (.sbss)
            build/baserom/object_oE_anime.o (.scommon)
            build/baserom/object_oE_anime.o (.bss)
            build/baserom/object_oE_anime.o (COMMON)
        . = ALIGN(0x10);
        _object_oE_animeSegmentBssEnd = .;
        _object_oE_animeSegmentEnd = .;
    }
    _object_oE_animeSegmentBssSize = ABSOLUTE( _object_oE_animeSegmentBssEnd - _object_oE_animeSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE2SegmentRomStart = _RomSize;
    ..object_oE2 : AT(_RomSize)
    {
        _object_oE2SegmentStart = .;
        . = ALIGN(0x10);
        _object_oE2SegmentTextStart = .;
            build/baserom/object_oE2.o (.text)
        _object_oE2SegmentTextEnd = .;
    _object_oE2SegmentTextSize = ABSOLUTE( _object_oE2SegmentTextEnd - _object_oE2SegmentTextStart );
        _object_oE2SegmentDataStart = .;
            build/baserom/object_oE2.o (.data)
        _object_oE2SegmentDataEnd = .;
    _object_oE2SegmentDataSize = ABSOLUTE( _object_oE2SegmentDataEnd - _object_oE2SegmentDataStart );
        _object_oE2SegmentRoDataStart = .;
            build/baserom/object_oE2.o (.rodata)
        _object_oE2SegmentRoDataEnd = .;
    _object_oE2SegmentRoDataSize = ABSOLUTE( _object_oE2SegmentRoDataEnd - _object_oE2SegmentRoDataStart );
        _object_oE2SegmentSDataStart = .;
            build/baserom/object_oE2.o (.sdata)
        . = ALIGN(0x10);
        _object_oE2SegmentSDataEnd = .;
        _object_oE2SegmentOvlStart = .;
            build/baserom/object_oE2.o (.ovl)
        . = ALIGN(0x10);
        _object_oE2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE2SegmentOvlEnd - _object_oE2SegmentTextStart );
    _object_oE2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE2.bss ADDR(..object_oE2) + SIZEOF(..object_oE2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE2SegmentBssStart = .;
            build/baserom/object_oE2.o (.sbss)
            build/baserom/object_oE2.o (.scommon)
            build/baserom/object_oE2.o (.bss)
            build/baserom/object_oE2.o (COMMON)
        . = ALIGN(0x10);
        _object_oE2SegmentBssEnd = .;
        _object_oE2SegmentEnd = .;
    }
    _object_oE2SegmentBssSize = ABSOLUTE( _object_oE2SegmentBssEnd - _object_oE2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ydan_objectsSegmentRomStart = _RomSize;
    ..object_ydan_objects : AT(_RomSize)
    {
        _object_ydan_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_ydan_objectsSegmentTextStart = .;
            build/baserom/object_ydan_objects.o (.text)
        _object_ydan_objectsSegmentTextEnd = .;
    _object_ydan_objectsSegmentTextSize = ABSOLUTE( _object_ydan_objectsSegmentTextEnd - _object_ydan_objectsSegmentTextStart );
        _object_ydan_objectsSegmentDataStart = .;
            build/baserom/object_ydan_objects.o (.data)
        _object_ydan_objectsSegmentDataEnd = .;
    _object_ydan_objectsSegmentDataSize = ABSOLUTE( _object_ydan_objectsSegmentDataEnd - _object_ydan_objectsSegmentDataStart );
        _object_ydan_objectsSegmentRoDataStart = .;
            build/baserom/object_ydan_objects.o (.rodata)
        _object_ydan_objectsSegmentRoDataEnd = .;
    _object_ydan_objectsSegmentRoDataSize = ABSOLUTE( _object_ydan_objectsSegmentRoDataEnd - _object_ydan_objectsSegmentRoDataStart );
        _object_ydan_objectsSegmentSDataStart = .;
            build/baserom/object_ydan_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_ydan_objectsSegmentSDataEnd = .;
        _object_ydan_objectsSegmentOvlStart = .;
            build/baserom/object_ydan_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_ydan_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_ydan_objectsSegmentOvlEnd - _object_ydan_objectsSegmentTextStart );
    _object_ydan_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ydan_objects.bss ADDR(..object_ydan_objects) + SIZEOF(..object_ydan_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ydan_objectsSegmentBssStart = .;
            build/baserom/object_ydan_objects.o (.sbss)
            build/baserom/object_ydan_objects.o (.scommon)
            build/baserom/object_ydan_objects.o (.bss)
            build/baserom/object_ydan_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_ydan_objectsSegmentBssEnd = .;
        _object_ydan_objectsSegmentEnd = .;
    }
    _object_ydan_objectsSegmentBssSize = ABSOLUTE( _object_ydan_objectsSegmentBssEnd - _object_ydan_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gndSegmentRomStart = _RomSize;
    ..object_gnd : AT(_RomSize)
    {
        _object_gndSegmentStart = .;
        . = ALIGN(0x10);
        _object_gndSegmentTextStart = .;
            build/baserom/object_gnd.o (.text)
        _object_gndSegmentTextEnd = .;
    _object_gndSegmentTextSize = ABSOLUTE( _object_gndSegmentTextEnd - _object_gndSegmentTextStart );
        _object_gndSegmentDataStart = .;
            build/baserom/object_gnd.o (.data)
        _object_gndSegmentDataEnd = .;
    _object_gndSegmentDataSize = ABSOLUTE( _object_gndSegmentDataEnd - _object_gndSegmentDataStart );
        _object_gndSegmentRoDataStart = .;
            build/baserom/object_gnd.o (.rodata)
        _object_gndSegmentRoDataEnd = .;
    _object_gndSegmentRoDataSize = ABSOLUTE( _object_gndSegmentRoDataEnd - _object_gndSegmentRoDataStart );
        _object_gndSegmentSDataStart = .;
            build/baserom/object_gnd.o (.sdata)
        . = ALIGN(0x10);
        _object_gndSegmentSDataEnd = .;
        _object_gndSegmentOvlStart = .;
            build/baserom/object_gnd.o (.ovl)
        . = ALIGN(0x10);
        _object_gndSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gndSegmentOvlEnd - _object_gndSegmentTextStart );
    _object_gndSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gnd.bss ADDR(..object_gnd) + SIZEOF(..object_gnd) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gndSegmentBssStart = .;
            build/baserom/object_gnd.o (.sbss)
            build/baserom/object_gnd.o (.scommon)
            build/baserom/object_gnd.o (.bss)
            build/baserom/object_gnd.o (COMMON)
        . = ALIGN(0x10);
        _object_gndSegmentBssEnd = .;
        _object_gndSegmentEnd = .;
    }
    _object_gndSegmentBssSize = ABSOLUTE( _object_gndSegmentBssEnd - _object_gndSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_amSegmentRomStart = _RomSize;
    ..object_am : AT(_RomSize)
    {
        _object_amSegmentStart = .;
        . = ALIGN(0x10);
        _object_amSegmentTextStart = .;
            build/baserom/object_am.o (.text)
        _object_amSegmentTextEnd = .;
    _object_amSegmentTextSize = ABSOLUTE( _object_amSegmentTextEnd - _object_amSegmentTextStart );
        _object_amSegmentDataStart = .;
            build/baserom/object_am.o (.data)
        _object_amSegmentDataEnd = .;
    _object_amSegmentDataSize = ABSOLUTE( _object_amSegmentDataEnd - _object_amSegmentDataStart );
        _object_amSegmentRoDataStart = .;
            build/baserom/object_am.o (.rodata)
        _object_amSegmentRoDataEnd = .;
    _object_amSegmentRoDataSize = ABSOLUTE( _object_amSegmentRoDataEnd - _object_amSegmentRoDataStart );
        _object_amSegmentSDataStart = .;
            build/baserom/object_am.o (.sdata)
        . = ALIGN(0x10);
        _object_amSegmentSDataEnd = .;
        _object_amSegmentOvlStart = .;
            build/baserom/object_am.o (.ovl)
        . = ALIGN(0x10);
        _object_amSegmentOvlEnd = .;
    }
    _RomSize += ( _object_amSegmentOvlEnd - _object_amSegmentTextStart );
    _object_amSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_am.bss ADDR(..object_am) + SIZEOF(..object_am) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_amSegmentBssStart = .;
            build/baserom/object_am.o (.sbss)
            build/baserom/object_am.o (.scommon)
            build/baserom/object_am.o (.bss)
            build/baserom/object_am.o (COMMON)
        . = ALIGN(0x10);
        _object_amSegmentBssEnd = .;
        _object_amSegmentEnd = .;
    }
    _object_amSegmentBssSize = ABSOLUTE( _object_amSegmentBssEnd - _object_amSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_dekubabaSegmentRomStart = _RomSize;
    ..object_dekubaba : AT(_RomSize)
    {
        _object_dekubabaSegmentStart = .;
        . = ALIGN(0x10);
        _object_dekubabaSegmentTextStart = .;
            build/baserom/object_dekubaba.o (.text)
        _object_dekubabaSegmentTextEnd = .;
    _object_dekubabaSegmentTextSize = ABSOLUTE( _object_dekubabaSegmentTextEnd - _object_dekubabaSegmentTextStart );
        _object_dekubabaSegmentDataStart = .;
            build/baserom/object_dekubaba.o (.data)
        _object_dekubabaSegmentDataEnd = .;
    _object_dekubabaSegmentDataSize = ABSOLUTE( _object_dekubabaSegmentDataEnd - _object_dekubabaSegmentDataStart );
        _object_dekubabaSegmentRoDataStart = .;
            build/baserom/object_dekubaba.o (.rodata)
        _object_dekubabaSegmentRoDataEnd = .;
    _object_dekubabaSegmentRoDataSize = ABSOLUTE( _object_dekubabaSegmentRoDataEnd - _object_dekubabaSegmentRoDataStart );
        _object_dekubabaSegmentSDataStart = .;
            build/baserom/object_dekubaba.o (.sdata)
        . = ALIGN(0x10);
        _object_dekubabaSegmentSDataEnd = .;
        _object_dekubabaSegmentOvlStart = .;
            build/baserom/object_dekubaba.o (.ovl)
        . = ALIGN(0x10);
        _object_dekubabaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_dekubabaSegmentOvlEnd - _object_dekubabaSegmentTextStart );
    _object_dekubabaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_dekubaba.bss ADDR(..object_dekubaba) + SIZEOF(..object_dekubaba) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_dekubabaSegmentBssStart = .;
            build/baserom/object_dekubaba.o (.sbss)
            build/baserom/object_dekubaba.o (.scommon)
            build/baserom/object_dekubaba.o (.bss)
            build/baserom/object_dekubaba.o (COMMON)
        . = ALIGN(0x10);
        _object_dekubabaSegmentBssEnd = .;
        _object_dekubabaSegmentEnd = .;
    }
    _object_dekubabaSegmentBssSize = ABSOLUTE( _object_dekubabaSegmentBssEnd - _object_dekubabaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oA3SegmentRomStart = _RomSize;
    ..object_oA3 : AT(_RomSize)
    {
        _object_oA3SegmentStart = .;
        . = ALIGN(0x10);
        _object_oA3SegmentTextStart = .;
            build/baserom/object_oA3.o (.text)
        _object_oA3SegmentTextEnd = .;
    _object_oA3SegmentTextSize = ABSOLUTE( _object_oA3SegmentTextEnd - _object_oA3SegmentTextStart );
        _object_oA3SegmentDataStart = .;
            build/baserom/object_oA3.o (.data)
        _object_oA3SegmentDataEnd = .;
    _object_oA3SegmentDataSize = ABSOLUTE( _object_oA3SegmentDataEnd - _object_oA3SegmentDataStart );
        _object_oA3SegmentRoDataStart = .;
            build/baserom/object_oA3.o (.rodata)
        _object_oA3SegmentRoDataEnd = .;
    _object_oA3SegmentRoDataSize = ABSOLUTE( _object_oA3SegmentRoDataEnd - _object_oA3SegmentRoDataStart );
        _object_oA3SegmentSDataStart = .;
            build/baserom/object_oA3.o (.sdata)
        . = ALIGN(0x10);
        _object_oA3SegmentSDataEnd = .;
        _object_oA3SegmentOvlStart = .;
            build/baserom/object_oA3.o (.ovl)
        . = ALIGN(0x10);
        _object_oA3SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oA3SegmentOvlEnd - _object_oA3SegmentTextStart );
    _object_oA3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oA3.bss ADDR(..object_oA3) + SIZEOF(..object_oA3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oA3SegmentBssStart = .;
            build/baserom/object_oA3.o (.sbss)
            build/baserom/object_oA3.o (.scommon)
            build/baserom/object_oA3.o (.bss)
            build/baserom/object_oA3.o (COMMON)
        . = ALIGN(0x10);
        _object_oA3SegmentBssEnd = .;
        _object_oA3SegmentEnd = .;
    }
    _object_oA3SegmentBssSize = ABSOLUTE( _object_oA3SegmentBssEnd - _object_oA3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oA4SegmentRomStart = _RomSize;
    ..object_oA4 : AT(_RomSize)
    {
        _object_oA4SegmentStart = .;
        . = ALIGN(0x10);
        _object_oA4SegmentTextStart = .;
            build/baserom/object_oA4.o (.text)
        _object_oA4SegmentTextEnd = .;
    _object_oA4SegmentTextSize = ABSOLUTE( _object_oA4SegmentTextEnd - _object_oA4SegmentTextStart );
        _object_oA4SegmentDataStart = .;
            build/baserom/object_oA4.o (.data)
        _object_oA4SegmentDataEnd = .;
    _object_oA4SegmentDataSize = ABSOLUTE( _object_oA4SegmentDataEnd - _object_oA4SegmentDataStart );
        _object_oA4SegmentRoDataStart = .;
            build/baserom/object_oA4.o (.rodata)
        _object_oA4SegmentRoDataEnd = .;
    _object_oA4SegmentRoDataSize = ABSOLUTE( _object_oA4SegmentRoDataEnd - _object_oA4SegmentRoDataStart );
        _object_oA4SegmentSDataStart = .;
            build/baserom/object_oA4.o (.sdata)
        . = ALIGN(0x10);
        _object_oA4SegmentSDataEnd = .;
        _object_oA4SegmentOvlStart = .;
            build/baserom/object_oA4.o (.ovl)
        . = ALIGN(0x10);
        _object_oA4SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oA4SegmentOvlEnd - _object_oA4SegmentTextStart );
    _object_oA4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oA4.bss ADDR(..object_oA4) + SIZEOF(..object_oA4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oA4SegmentBssStart = .;
            build/baserom/object_oA4.o (.sbss)
            build/baserom/object_oA4.o (.scommon)
            build/baserom/object_oA4.o (.bss)
            build/baserom/object_oA4.o (COMMON)
        . = ALIGN(0x10);
        _object_oA4SegmentBssEnd = .;
        _object_oA4SegmentEnd = .;
    }
    _object_oA4SegmentBssSize = ABSOLUTE( _object_oA4SegmentBssEnd - _object_oA4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oA5SegmentRomStart = _RomSize;
    ..object_oA5 : AT(_RomSize)
    {
        _object_oA5SegmentStart = .;
        . = ALIGN(0x10);
        _object_oA5SegmentTextStart = .;
            build/baserom/object_oA5.o (.text)
        _object_oA5SegmentTextEnd = .;
    _object_oA5SegmentTextSize = ABSOLUTE( _object_oA5SegmentTextEnd - _object_oA5SegmentTextStart );
        _object_oA5SegmentDataStart = .;
            build/baserom/object_oA5.o (.data)
        _object_oA5SegmentDataEnd = .;
    _object_oA5SegmentDataSize = ABSOLUTE( _object_oA5SegmentDataEnd - _object_oA5SegmentDataStart );
        _object_oA5SegmentRoDataStart = .;
            build/baserom/object_oA5.o (.rodata)
        _object_oA5SegmentRoDataEnd = .;
    _object_oA5SegmentRoDataSize = ABSOLUTE( _object_oA5SegmentRoDataEnd - _object_oA5SegmentRoDataStart );
        _object_oA5SegmentSDataStart = .;
            build/baserom/object_oA5.o (.sdata)
        . = ALIGN(0x10);
        _object_oA5SegmentSDataEnd = .;
        _object_oA5SegmentOvlStart = .;
            build/baserom/object_oA5.o (.ovl)
        . = ALIGN(0x10);
        _object_oA5SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oA5SegmentOvlEnd - _object_oA5SegmentTextStart );
    _object_oA5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oA5.bss ADDR(..object_oA5) + SIZEOF(..object_oA5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oA5SegmentBssStart = .;
            build/baserom/object_oA5.o (.sbss)
            build/baserom/object_oA5.o (.scommon)
            build/baserom/object_oA5.o (.bss)
            build/baserom/object_oA5.o (COMMON)
        . = ALIGN(0x10);
        _object_oA5SegmentBssEnd = .;
        _object_oA5SegmentEnd = .;
    }
    _object_oA5SegmentBssSize = ABSOLUTE( _object_oA5SegmentBssEnd - _object_oA5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oA6SegmentRomStart = _RomSize;
    ..object_oA6 : AT(_RomSize)
    {
        _object_oA6SegmentStart = .;
        . = ALIGN(0x10);
        _object_oA6SegmentTextStart = .;
            build/baserom/object_oA6.o (.text)
        _object_oA6SegmentTextEnd = .;
    _object_oA6SegmentTextSize = ABSOLUTE( _object_oA6SegmentTextEnd - _object_oA6SegmentTextStart );
        _object_oA6SegmentDataStart = .;
            build/baserom/object_oA6.o (.data)
        _object_oA6SegmentDataEnd = .;
    _object_oA6SegmentDataSize = ABSOLUTE( _object_oA6SegmentDataEnd - _object_oA6SegmentDataStart );
        _object_oA6SegmentRoDataStart = .;
            build/baserom/object_oA6.o (.rodata)
        _object_oA6SegmentRoDataEnd = .;
    _object_oA6SegmentRoDataSize = ABSOLUTE( _object_oA6SegmentRoDataEnd - _object_oA6SegmentRoDataStart );
        _object_oA6SegmentSDataStart = .;
            build/baserom/object_oA6.o (.sdata)
        . = ALIGN(0x10);
        _object_oA6SegmentSDataEnd = .;
        _object_oA6SegmentOvlStart = .;
            build/baserom/object_oA6.o (.ovl)
        . = ALIGN(0x10);
        _object_oA6SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oA6SegmentOvlEnd - _object_oA6SegmentTextStart );
    _object_oA6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oA6.bss ADDR(..object_oA6) + SIZEOF(..object_oA6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oA6SegmentBssStart = .;
            build/baserom/object_oA6.o (.sbss)
            build/baserom/object_oA6.o (.scommon)
            build/baserom/object_oA6.o (.bss)
            build/baserom/object_oA6.o (COMMON)
        . = ALIGN(0x10);
        _object_oA6SegmentBssEnd = .;
        _object_oA6SegmentEnd = .;
    }
    _object_oA6SegmentBssSize = ABSOLUTE( _object_oA6SegmentBssEnd - _object_oA6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oA7SegmentRomStart = _RomSize;
    ..object_oA7 : AT(_RomSize)
    {
        _object_oA7SegmentStart = .;
        . = ALIGN(0x10);
        _object_oA7SegmentTextStart = .;
            build/baserom/object_oA7.o (.text)
        _object_oA7SegmentTextEnd = .;
    _object_oA7SegmentTextSize = ABSOLUTE( _object_oA7SegmentTextEnd - _object_oA7SegmentTextStart );
        _object_oA7SegmentDataStart = .;
            build/baserom/object_oA7.o (.data)
        _object_oA7SegmentDataEnd = .;
    _object_oA7SegmentDataSize = ABSOLUTE( _object_oA7SegmentDataEnd - _object_oA7SegmentDataStart );
        _object_oA7SegmentRoDataStart = .;
            build/baserom/object_oA7.o (.rodata)
        _object_oA7SegmentRoDataEnd = .;
    _object_oA7SegmentRoDataSize = ABSOLUTE( _object_oA7SegmentRoDataEnd - _object_oA7SegmentRoDataStart );
        _object_oA7SegmentSDataStart = .;
            build/baserom/object_oA7.o (.sdata)
        . = ALIGN(0x10);
        _object_oA7SegmentSDataEnd = .;
        _object_oA7SegmentOvlStart = .;
            build/baserom/object_oA7.o (.ovl)
        . = ALIGN(0x10);
        _object_oA7SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oA7SegmentOvlEnd - _object_oA7SegmentTextStart );
    _object_oA7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oA7.bss ADDR(..object_oA7) + SIZEOF(..object_oA7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oA7SegmentBssStart = .;
            build/baserom/object_oA7.o (.sbss)
            build/baserom/object_oA7.o (.scommon)
            build/baserom/object_oA7.o (.bss)
            build/baserom/object_oA7.o (COMMON)
        . = ALIGN(0x10);
        _object_oA7SegmentBssEnd = .;
        _object_oA7SegmentEnd = .;
    }
    _object_oA7SegmentBssSize = ABSOLUTE( _object_oA7SegmentBssEnd - _object_oA7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_jjSegmentRomStart = _RomSize;
    ..object_jj : AT(_RomSize)
    {
        _object_jjSegmentStart = .;
        . = ALIGN(0x10);
        _object_jjSegmentTextStart = .;
            build/baserom/object_jj.o (.text)
        _object_jjSegmentTextEnd = .;
    _object_jjSegmentTextSize = ABSOLUTE( _object_jjSegmentTextEnd - _object_jjSegmentTextStart );
        _object_jjSegmentDataStart = .;
            build/baserom/object_jj.o (.data)
        _object_jjSegmentDataEnd = .;
    _object_jjSegmentDataSize = ABSOLUTE( _object_jjSegmentDataEnd - _object_jjSegmentDataStart );
        _object_jjSegmentRoDataStart = .;
            build/baserom/object_jj.o (.rodata)
        _object_jjSegmentRoDataEnd = .;
    _object_jjSegmentRoDataSize = ABSOLUTE( _object_jjSegmentRoDataEnd - _object_jjSegmentRoDataStart );
        _object_jjSegmentSDataStart = .;
            build/baserom/object_jj.o (.sdata)
        . = ALIGN(0x10);
        _object_jjSegmentSDataEnd = .;
        _object_jjSegmentOvlStart = .;
            build/baserom/object_jj.o (.ovl)
        . = ALIGN(0x10);
        _object_jjSegmentOvlEnd = .;
    }
    _RomSize += ( _object_jjSegmentOvlEnd - _object_jjSegmentTextStart );
    _object_jjSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_jj.bss ADDR(..object_jj) + SIZEOF(..object_jj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_jjSegmentBssStart = .;
            build/baserom/object_jj.o (.sbss)
            build/baserom/object_jj.o (.scommon)
            build/baserom/object_jj.o (.bss)
            build/baserom/object_jj.o (COMMON)
        . = ALIGN(0x10);
        _object_jjSegmentBssEnd = .;
        _object_jjSegmentEnd = .;
    }
    _object_jjSegmentBssSize = ABSOLUTE( _object_jjSegmentBssEnd - _object_jjSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oA8SegmentRomStart = _RomSize;
    ..object_oA8 : AT(_RomSize)
    {
        _object_oA8SegmentStart = .;
        . = ALIGN(0x10);
        _object_oA8SegmentTextStart = .;
            build/baserom/object_oA8.o (.text)
        _object_oA8SegmentTextEnd = .;
    _object_oA8SegmentTextSize = ABSOLUTE( _object_oA8SegmentTextEnd - _object_oA8SegmentTextStart );
        _object_oA8SegmentDataStart = .;
            build/baserom/object_oA8.o (.data)
        _object_oA8SegmentDataEnd = .;
    _object_oA8SegmentDataSize = ABSOLUTE( _object_oA8SegmentDataEnd - _object_oA8SegmentDataStart );
        _object_oA8SegmentRoDataStart = .;
            build/baserom/object_oA8.o (.rodata)
        _object_oA8SegmentRoDataEnd = .;
    _object_oA8SegmentRoDataSize = ABSOLUTE( _object_oA8SegmentRoDataEnd - _object_oA8SegmentRoDataStart );
        _object_oA8SegmentSDataStart = .;
            build/baserom/object_oA8.o (.sdata)
        . = ALIGN(0x10);
        _object_oA8SegmentSDataEnd = .;
        _object_oA8SegmentOvlStart = .;
            build/baserom/object_oA8.o (.ovl)
        . = ALIGN(0x10);
        _object_oA8SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oA8SegmentOvlEnd - _object_oA8SegmentTextStart );
    _object_oA8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oA8.bss ADDR(..object_oA8) + SIZEOF(..object_oA8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oA8SegmentBssStart = .;
            build/baserom/object_oA8.o (.sbss)
            build/baserom/object_oA8.o (.scommon)
            build/baserom/object_oA8.o (.bss)
            build/baserom/object_oA8.o (COMMON)
        . = ALIGN(0x10);
        _object_oA8SegmentBssEnd = .;
        _object_oA8SegmentEnd = .;
    }
    _object_oA8SegmentBssSize = ABSOLUTE( _object_oA8SegmentBssEnd - _object_oA8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oA9SegmentRomStart = _RomSize;
    ..object_oA9 : AT(_RomSize)
    {
        _object_oA9SegmentStart = .;
        . = ALIGN(0x10);
        _object_oA9SegmentTextStart = .;
            build/baserom/object_oA9.o (.text)
        _object_oA9SegmentTextEnd = .;
    _object_oA9SegmentTextSize = ABSOLUTE( _object_oA9SegmentTextEnd - _object_oA9SegmentTextStart );
        _object_oA9SegmentDataStart = .;
            build/baserom/object_oA9.o (.data)
        _object_oA9SegmentDataEnd = .;
    _object_oA9SegmentDataSize = ABSOLUTE( _object_oA9SegmentDataEnd - _object_oA9SegmentDataStart );
        _object_oA9SegmentRoDataStart = .;
            build/baserom/object_oA9.o (.rodata)
        _object_oA9SegmentRoDataEnd = .;
    _object_oA9SegmentRoDataSize = ABSOLUTE( _object_oA9SegmentRoDataEnd - _object_oA9SegmentRoDataStart );
        _object_oA9SegmentSDataStart = .;
            build/baserom/object_oA9.o (.sdata)
        . = ALIGN(0x10);
        _object_oA9SegmentSDataEnd = .;
        _object_oA9SegmentOvlStart = .;
            build/baserom/object_oA9.o (.ovl)
        . = ALIGN(0x10);
        _object_oA9SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oA9SegmentOvlEnd - _object_oA9SegmentTextStart );
    _object_oA9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oA9.bss ADDR(..object_oA9) + SIZEOF(..object_oA9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oA9SegmentBssStart = .;
            build/baserom/object_oA9.o (.sbss)
            build/baserom/object_oA9.o (.scommon)
            build/baserom/object_oA9.o (.bss)
            build/baserom/object_oA9.o (COMMON)
        . = ALIGN(0x10);
        _object_oA9SegmentBssEnd = .;
        _object_oA9SegmentEnd = .;
    }
    _object_oA9SegmentBssSize = ABSOLUTE( _object_oA9SegmentBssEnd - _object_oA9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oB2SegmentRomStart = _RomSize;
    ..object_oB2 : AT(_RomSize)
    {
        _object_oB2SegmentStart = .;
        . = ALIGN(0x10);
        _object_oB2SegmentTextStart = .;
            build/baserom/object_oB2.o (.text)
        _object_oB2SegmentTextEnd = .;
    _object_oB2SegmentTextSize = ABSOLUTE( _object_oB2SegmentTextEnd - _object_oB2SegmentTextStart );
        _object_oB2SegmentDataStart = .;
            build/baserom/object_oB2.o (.data)
        _object_oB2SegmentDataEnd = .;
    _object_oB2SegmentDataSize = ABSOLUTE( _object_oB2SegmentDataEnd - _object_oB2SegmentDataStart );
        _object_oB2SegmentRoDataStart = .;
            build/baserom/object_oB2.o (.rodata)
        _object_oB2SegmentRoDataEnd = .;
    _object_oB2SegmentRoDataSize = ABSOLUTE( _object_oB2SegmentRoDataEnd - _object_oB2SegmentRoDataStart );
        _object_oB2SegmentSDataStart = .;
            build/baserom/object_oB2.o (.sdata)
        . = ALIGN(0x10);
        _object_oB2SegmentSDataEnd = .;
        _object_oB2SegmentOvlStart = .;
            build/baserom/object_oB2.o (.ovl)
        . = ALIGN(0x10);
        _object_oB2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oB2SegmentOvlEnd - _object_oB2SegmentTextStart );
    _object_oB2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oB2.bss ADDR(..object_oB2) + SIZEOF(..object_oB2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oB2SegmentBssStart = .;
            build/baserom/object_oB2.o (.sbss)
            build/baserom/object_oB2.o (.scommon)
            build/baserom/object_oB2.o (.bss)
            build/baserom/object_oB2.o (COMMON)
        . = ALIGN(0x10);
        _object_oB2SegmentBssEnd = .;
        _object_oB2SegmentEnd = .;
    }
    _object_oB2SegmentBssSize = ABSOLUTE( _object_oB2SegmentBssEnd - _object_oB2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oB3SegmentRomStart = _RomSize;
    ..object_oB3 : AT(_RomSize)
    {
        _object_oB3SegmentStart = .;
        . = ALIGN(0x10);
        _object_oB3SegmentTextStart = .;
            build/baserom/object_oB3.o (.text)
        _object_oB3SegmentTextEnd = .;
    _object_oB3SegmentTextSize = ABSOLUTE( _object_oB3SegmentTextEnd - _object_oB3SegmentTextStart );
        _object_oB3SegmentDataStart = .;
            build/baserom/object_oB3.o (.data)
        _object_oB3SegmentDataEnd = .;
    _object_oB3SegmentDataSize = ABSOLUTE( _object_oB3SegmentDataEnd - _object_oB3SegmentDataStart );
        _object_oB3SegmentRoDataStart = .;
            build/baserom/object_oB3.o (.rodata)
        _object_oB3SegmentRoDataEnd = .;
    _object_oB3SegmentRoDataSize = ABSOLUTE( _object_oB3SegmentRoDataEnd - _object_oB3SegmentRoDataStart );
        _object_oB3SegmentSDataStart = .;
            build/baserom/object_oB3.o (.sdata)
        . = ALIGN(0x10);
        _object_oB3SegmentSDataEnd = .;
        _object_oB3SegmentOvlStart = .;
            build/baserom/object_oB3.o (.ovl)
        . = ALIGN(0x10);
        _object_oB3SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oB3SegmentOvlEnd - _object_oB3SegmentTextStart );
    _object_oB3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oB3.bss ADDR(..object_oB3) + SIZEOF(..object_oB3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oB3SegmentBssStart = .;
            build/baserom/object_oB3.o (.sbss)
            build/baserom/object_oB3.o (.scommon)
            build/baserom/object_oB3.o (.bss)
            build/baserom/object_oB3.o (COMMON)
        . = ALIGN(0x10);
        _object_oB3SegmentBssEnd = .;
        _object_oB3SegmentEnd = .;
    }
    _object_oB3SegmentBssSize = ABSOLUTE( _object_oB3SegmentBssEnd - _object_oB3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oB4SegmentRomStart = _RomSize;
    ..object_oB4 : AT(_RomSize)
    {
        _object_oB4SegmentStart = .;
        . = ALIGN(0x10);
        _object_oB4SegmentTextStart = .;
            build/baserom/object_oB4.o (.text)
        _object_oB4SegmentTextEnd = .;
    _object_oB4SegmentTextSize = ABSOLUTE( _object_oB4SegmentTextEnd - _object_oB4SegmentTextStart );
        _object_oB4SegmentDataStart = .;
            build/baserom/object_oB4.o (.data)
        _object_oB4SegmentDataEnd = .;
    _object_oB4SegmentDataSize = ABSOLUTE( _object_oB4SegmentDataEnd - _object_oB4SegmentDataStart );
        _object_oB4SegmentRoDataStart = .;
            build/baserom/object_oB4.o (.rodata)
        _object_oB4SegmentRoDataEnd = .;
    _object_oB4SegmentRoDataSize = ABSOLUTE( _object_oB4SegmentRoDataEnd - _object_oB4SegmentRoDataStart );
        _object_oB4SegmentSDataStart = .;
            build/baserom/object_oB4.o (.sdata)
        . = ALIGN(0x10);
        _object_oB4SegmentSDataEnd = .;
        _object_oB4SegmentOvlStart = .;
            build/baserom/object_oB4.o (.ovl)
        . = ALIGN(0x10);
        _object_oB4SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oB4SegmentOvlEnd - _object_oB4SegmentTextStart );
    _object_oB4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oB4.bss ADDR(..object_oB4) + SIZEOF(..object_oB4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oB4SegmentBssStart = .;
            build/baserom/object_oB4.o (.sbss)
            build/baserom/object_oB4.o (.scommon)
            build/baserom/object_oB4.o (.bss)
            build/baserom/object_oB4.o (COMMON)
        . = ALIGN(0x10);
        _object_oB4SegmentBssEnd = .;
        _object_oB4SegmentEnd = .;
    }
    _object_oB4SegmentBssSize = ABSOLUTE( _object_oB4SegmentBssEnd - _object_oB4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_horse_zeldaSegmentRomStart = _RomSize;
    ..object_horse_zelda : AT(_RomSize)
    {
        _object_horse_zeldaSegmentStart = .;
        . = ALIGN(0x10);
        _object_horse_zeldaSegmentTextStart = .;
            build/baserom/object_horse_zelda.o (.text)
        _object_horse_zeldaSegmentTextEnd = .;
    _object_horse_zeldaSegmentTextSize = ABSOLUTE( _object_horse_zeldaSegmentTextEnd - _object_horse_zeldaSegmentTextStart );
        _object_horse_zeldaSegmentDataStart = .;
            build/baserom/object_horse_zelda.o (.data)
        _object_horse_zeldaSegmentDataEnd = .;
    _object_horse_zeldaSegmentDataSize = ABSOLUTE( _object_horse_zeldaSegmentDataEnd - _object_horse_zeldaSegmentDataStart );
        _object_horse_zeldaSegmentRoDataStart = .;
            build/baserom/object_horse_zelda.o (.rodata)
        _object_horse_zeldaSegmentRoDataEnd = .;
    _object_horse_zeldaSegmentRoDataSize = ABSOLUTE( _object_horse_zeldaSegmentRoDataEnd - _object_horse_zeldaSegmentRoDataStart );
        _object_horse_zeldaSegmentSDataStart = .;
            build/baserom/object_horse_zelda.o (.sdata)
        . = ALIGN(0x10);
        _object_horse_zeldaSegmentSDataEnd = .;
        _object_horse_zeldaSegmentOvlStart = .;
            build/baserom/object_horse_zelda.o (.ovl)
        . = ALIGN(0x10);
        _object_horse_zeldaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_horse_zeldaSegmentOvlEnd - _object_horse_zeldaSegmentTextStart );
    _object_horse_zeldaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_horse_zelda.bss ADDR(..object_horse_zelda) + SIZEOF(..object_horse_zelda) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_horse_zeldaSegmentBssStart = .;
            build/baserom/object_horse_zelda.o (.sbss)
            build/baserom/object_horse_zelda.o (.scommon)
            build/baserom/object_horse_zelda.o (.bss)
            build/baserom/object_horse_zelda.o (COMMON)
        . = ALIGN(0x10);
        _object_horse_zeldaSegmentBssEnd = .;
        _object_horse_zeldaSegmentEnd = .;
    }
    _object_horse_zeldaSegmentBssSize = ABSOLUTE( _object_horse_zeldaSegmentBssEnd - _object_horse_zeldaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_opening_demo1SegmentRomStart = _RomSize;
    ..object_opening_demo1 : AT(_RomSize)
    {
        _object_opening_demo1SegmentStart = .;
        . = ALIGN(0x10);
        _object_opening_demo1SegmentTextStart = .;
            build/baserom/object_opening_demo1.o (.text)
        _object_opening_demo1SegmentTextEnd = .;
    _object_opening_demo1SegmentTextSize = ABSOLUTE( _object_opening_demo1SegmentTextEnd - _object_opening_demo1SegmentTextStart );
        _object_opening_demo1SegmentDataStart = .;
            build/baserom/object_opening_demo1.o (.data)
        _object_opening_demo1SegmentDataEnd = .;
    _object_opening_demo1SegmentDataSize = ABSOLUTE( _object_opening_demo1SegmentDataEnd - _object_opening_demo1SegmentDataStart );
        _object_opening_demo1SegmentRoDataStart = .;
            build/baserom/object_opening_demo1.o (.rodata)
        _object_opening_demo1SegmentRoDataEnd = .;
    _object_opening_demo1SegmentRoDataSize = ABSOLUTE( _object_opening_demo1SegmentRoDataEnd - _object_opening_demo1SegmentRoDataStart );
        _object_opening_demo1SegmentSDataStart = .;
            build/baserom/object_opening_demo1.o (.sdata)
        . = ALIGN(0x10);
        _object_opening_demo1SegmentSDataEnd = .;
        _object_opening_demo1SegmentOvlStart = .;
            build/baserom/object_opening_demo1.o (.ovl)
        . = ALIGN(0x10);
        _object_opening_demo1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_opening_demo1SegmentOvlEnd - _object_opening_demo1SegmentTextStart );
    _object_opening_demo1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_opening_demo1.bss ADDR(..object_opening_demo1) + SIZEOF(..object_opening_demo1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_opening_demo1SegmentBssStart = .;
            build/baserom/object_opening_demo1.o (.sbss)
            build/baserom/object_opening_demo1.o (.scommon)
            build/baserom/object_opening_demo1.o (.bss)
            build/baserom/object_opening_demo1.o (COMMON)
        . = ALIGN(0x10);
        _object_opening_demo1SegmentBssEnd = .;
        _object_opening_demo1SegmentEnd = .;
    }
    _object_opening_demo1SegmentBssSize = ABSOLUTE( _object_opening_demo1SegmentBssEnd - _object_opening_demo1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_warp1SegmentRomStart = _RomSize;
    ..object_warp1 : AT(_RomSize)
    {
        _object_warp1SegmentStart = .;
        . = ALIGN(0x10);
        _object_warp1SegmentTextStart = .;
            build/baserom/object_warp1.o (.text)
        _object_warp1SegmentTextEnd = .;
    _object_warp1SegmentTextSize = ABSOLUTE( _object_warp1SegmentTextEnd - _object_warp1SegmentTextStart );
        _object_warp1SegmentDataStart = .;
            build/baserom/object_warp1.o (.data)
        _object_warp1SegmentDataEnd = .;
    _object_warp1SegmentDataSize = ABSOLUTE( _object_warp1SegmentDataEnd - _object_warp1SegmentDataStart );
        _object_warp1SegmentRoDataStart = .;
            build/baserom/object_warp1.o (.rodata)
        _object_warp1SegmentRoDataEnd = .;
    _object_warp1SegmentRoDataSize = ABSOLUTE( _object_warp1SegmentRoDataEnd - _object_warp1SegmentRoDataStart );
        _object_warp1SegmentSDataStart = .;
            build/baserom/object_warp1.o (.sdata)
        . = ALIGN(0x10);
        _object_warp1SegmentSDataEnd = .;
        _object_warp1SegmentOvlStart = .;
            build/baserom/object_warp1.o (.ovl)
        . = ALIGN(0x10);
        _object_warp1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_warp1SegmentOvlEnd - _object_warp1SegmentTextStart );
    _object_warp1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_warp1.bss ADDR(..object_warp1) + SIZEOF(..object_warp1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_warp1SegmentBssStart = .;
            build/baserom/object_warp1.o (.sbss)
            build/baserom/object_warp1.o (.scommon)
            build/baserom/object_warp1.o (.bss)
            build/baserom/object_warp1.o (COMMON)
        . = ALIGN(0x10);
        _object_warp1SegmentBssEnd = .;
        _object_warp1SegmentEnd = .;
    }
    _object_warp1SegmentBssSize = ABSOLUTE( _object_warp1SegmentBssEnd - _object_warp1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_b_heartSegmentRomStart = _RomSize;
    ..object_b_heart : AT(_RomSize)
    {
        _object_b_heartSegmentStart = .;
        . = ALIGN(0x10);
        _object_b_heartSegmentTextStart = .;
            build/baserom/object_b_heart.o (.text)
        _object_b_heartSegmentTextEnd = .;
    _object_b_heartSegmentTextSize = ABSOLUTE( _object_b_heartSegmentTextEnd - _object_b_heartSegmentTextStart );
        _object_b_heartSegmentDataStart = .;
            build/baserom/object_b_heart.o (.data)
        _object_b_heartSegmentDataEnd = .;
    _object_b_heartSegmentDataSize = ABSOLUTE( _object_b_heartSegmentDataEnd - _object_b_heartSegmentDataStart );
        _object_b_heartSegmentRoDataStart = .;
            build/baserom/object_b_heart.o (.rodata)
        _object_b_heartSegmentRoDataEnd = .;
    _object_b_heartSegmentRoDataSize = ABSOLUTE( _object_b_heartSegmentRoDataEnd - _object_b_heartSegmentRoDataStart );
        _object_b_heartSegmentSDataStart = .;
            build/baserom/object_b_heart.o (.sdata)
        . = ALIGN(0x10);
        _object_b_heartSegmentSDataEnd = .;
        _object_b_heartSegmentOvlStart = .;
            build/baserom/object_b_heart.o (.ovl)
        . = ALIGN(0x10);
        _object_b_heartSegmentOvlEnd = .;
    }
    _RomSize += ( _object_b_heartSegmentOvlEnd - _object_b_heartSegmentTextStart );
    _object_b_heartSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_b_heart.bss ADDR(..object_b_heart) + SIZEOF(..object_b_heart) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_b_heartSegmentBssStart = .;
            build/baserom/object_b_heart.o (.sbss)
            build/baserom/object_b_heart.o (.scommon)
            build/baserom/object_b_heart.o (.bss)
            build/baserom/object_b_heart.o (COMMON)
        . = ALIGN(0x10);
        _object_b_heartSegmentBssEnd = .;
        _object_b_heartSegmentEnd = .;
    }
    _object_b_heartSegmentBssSize = ABSOLUTE( _object_b_heartSegmentBssEnd - _object_b_heartSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_dekunutsSegmentRomStart = _RomSize;
    ..object_dekunuts : AT(_RomSize)
    {
        _object_dekunutsSegmentStart = .;
        . = ALIGN(0x10);
        _object_dekunutsSegmentTextStart = .;
            build/baserom/object_dekunuts.o (.text)
        _object_dekunutsSegmentTextEnd = .;
    _object_dekunutsSegmentTextSize = ABSOLUTE( _object_dekunutsSegmentTextEnd - _object_dekunutsSegmentTextStart );
        _object_dekunutsSegmentDataStart = .;
            build/baserom/object_dekunuts.o (.data)
        _object_dekunutsSegmentDataEnd = .;
    _object_dekunutsSegmentDataSize = ABSOLUTE( _object_dekunutsSegmentDataEnd - _object_dekunutsSegmentDataStart );
        _object_dekunutsSegmentRoDataStart = .;
            build/baserom/object_dekunuts.o (.rodata)
        _object_dekunutsSegmentRoDataEnd = .;
    _object_dekunutsSegmentRoDataSize = ABSOLUTE( _object_dekunutsSegmentRoDataEnd - _object_dekunutsSegmentRoDataStart );
        _object_dekunutsSegmentSDataStart = .;
            build/baserom/object_dekunuts.o (.sdata)
        . = ALIGN(0x10);
        _object_dekunutsSegmentSDataEnd = .;
        _object_dekunutsSegmentOvlStart = .;
            build/baserom/object_dekunuts.o (.ovl)
        . = ALIGN(0x10);
        _object_dekunutsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_dekunutsSegmentOvlEnd - _object_dekunutsSegmentTextStart );
    _object_dekunutsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_dekunuts.bss ADDR(..object_dekunuts) + SIZEOF(..object_dekunuts) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_dekunutsSegmentBssStart = .;
            build/baserom/object_dekunuts.o (.sbss)
            build/baserom/object_dekunuts.o (.scommon)
            build/baserom/object_dekunuts.o (.bss)
            build/baserom/object_dekunuts.o (COMMON)
        . = ALIGN(0x10);
        _object_dekunutsSegmentBssEnd = .;
        _object_dekunutsSegmentEnd = .;
    }
    _object_dekunutsSegmentBssSize = ABSOLUTE( _object_dekunutsSegmentBssEnd - _object_dekunutsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE3SegmentRomStart = _RomSize;
    ..object_oE3 : AT(_RomSize)
    {
        _object_oE3SegmentStart = .;
        . = ALIGN(0x10);
        _object_oE3SegmentTextStart = .;
            build/baserom/object_oE3.o (.text)
        _object_oE3SegmentTextEnd = .;
    _object_oE3SegmentTextSize = ABSOLUTE( _object_oE3SegmentTextEnd - _object_oE3SegmentTextStart );
        _object_oE3SegmentDataStart = .;
            build/baserom/object_oE3.o (.data)
        _object_oE3SegmentDataEnd = .;
    _object_oE3SegmentDataSize = ABSOLUTE( _object_oE3SegmentDataEnd - _object_oE3SegmentDataStart );
        _object_oE3SegmentRoDataStart = .;
            build/baserom/object_oE3.o (.rodata)
        _object_oE3SegmentRoDataEnd = .;
    _object_oE3SegmentRoDataSize = ABSOLUTE( _object_oE3SegmentRoDataEnd - _object_oE3SegmentRoDataStart );
        _object_oE3SegmentSDataStart = .;
            build/baserom/object_oE3.o (.sdata)
        . = ALIGN(0x10);
        _object_oE3SegmentSDataEnd = .;
        _object_oE3SegmentOvlStart = .;
            build/baserom/object_oE3.o (.ovl)
        . = ALIGN(0x10);
        _object_oE3SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE3SegmentOvlEnd - _object_oE3SegmentTextStart );
    _object_oE3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE3.bss ADDR(..object_oE3) + SIZEOF(..object_oE3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE3SegmentBssStart = .;
            build/baserom/object_oE3.o (.sbss)
            build/baserom/object_oE3.o (.scommon)
            build/baserom/object_oE3.o (.bss)
            build/baserom/object_oE3.o (COMMON)
        . = ALIGN(0x10);
        _object_oE3SegmentBssEnd = .;
        _object_oE3SegmentEnd = .;
    }
    _object_oE3SegmentBssSize = ABSOLUTE( _object_oE3SegmentBssEnd - _object_oE3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE4SegmentRomStart = _RomSize;
    ..object_oE4 : AT(_RomSize)
    {
        _object_oE4SegmentStart = .;
        . = ALIGN(0x10);
        _object_oE4SegmentTextStart = .;
            build/baserom/object_oE4.o (.text)
        _object_oE4SegmentTextEnd = .;
    _object_oE4SegmentTextSize = ABSOLUTE( _object_oE4SegmentTextEnd - _object_oE4SegmentTextStart );
        _object_oE4SegmentDataStart = .;
            build/baserom/object_oE4.o (.data)
        _object_oE4SegmentDataEnd = .;
    _object_oE4SegmentDataSize = ABSOLUTE( _object_oE4SegmentDataEnd - _object_oE4SegmentDataStart );
        _object_oE4SegmentRoDataStart = .;
            build/baserom/object_oE4.o (.rodata)
        _object_oE4SegmentRoDataEnd = .;
    _object_oE4SegmentRoDataSize = ABSOLUTE( _object_oE4SegmentRoDataEnd - _object_oE4SegmentRoDataStart );
        _object_oE4SegmentSDataStart = .;
            build/baserom/object_oE4.o (.sdata)
        . = ALIGN(0x10);
        _object_oE4SegmentSDataEnd = .;
        _object_oE4SegmentOvlStart = .;
            build/baserom/object_oE4.o (.ovl)
        . = ALIGN(0x10);
        _object_oE4SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE4SegmentOvlEnd - _object_oE4SegmentTextStart );
    _object_oE4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE4.bss ADDR(..object_oE4) + SIZEOF(..object_oE4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE4SegmentBssStart = .;
            build/baserom/object_oE4.o (.sbss)
            build/baserom/object_oE4.o (.scommon)
            build/baserom/object_oE4.o (.bss)
            build/baserom/object_oE4.o (COMMON)
        . = ALIGN(0x10);
        _object_oE4SegmentBssEnd = .;
        _object_oE4SegmentEnd = .;
    }
    _object_oE4SegmentBssSize = ABSOLUTE( _object_oE4SegmentBssEnd - _object_oE4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_menkuri_objectsSegmentRomStart = _RomSize;
    ..object_menkuri_objects : AT(_RomSize)
    {
        _object_menkuri_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_menkuri_objectsSegmentTextStart = .;
            build/baserom/object_menkuri_objects.o (.text)
        _object_menkuri_objectsSegmentTextEnd = .;
    _object_menkuri_objectsSegmentTextSize = ABSOLUTE( _object_menkuri_objectsSegmentTextEnd - _object_menkuri_objectsSegmentTextStart );
        _object_menkuri_objectsSegmentDataStart = .;
            build/baserom/object_menkuri_objects.o (.data)
        _object_menkuri_objectsSegmentDataEnd = .;
    _object_menkuri_objectsSegmentDataSize = ABSOLUTE( _object_menkuri_objectsSegmentDataEnd - _object_menkuri_objectsSegmentDataStart );
        _object_menkuri_objectsSegmentRoDataStart = .;
            build/baserom/object_menkuri_objects.o (.rodata)
        _object_menkuri_objectsSegmentRoDataEnd = .;
    _object_menkuri_objectsSegmentRoDataSize = ABSOLUTE( _object_menkuri_objectsSegmentRoDataEnd - _object_menkuri_objectsSegmentRoDataStart );
        _object_menkuri_objectsSegmentSDataStart = .;
            build/baserom/object_menkuri_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_menkuri_objectsSegmentSDataEnd = .;
        _object_menkuri_objectsSegmentOvlStart = .;
            build/baserom/object_menkuri_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_menkuri_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_menkuri_objectsSegmentOvlEnd - _object_menkuri_objectsSegmentTextStart );
    _object_menkuri_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_menkuri_objects.bss ADDR(..object_menkuri_objects) + SIZEOF(..object_menkuri_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_menkuri_objectsSegmentBssStart = .;
            build/baserom/object_menkuri_objects.o (.sbss)
            build/baserom/object_menkuri_objects.o (.scommon)
            build/baserom/object_menkuri_objects.o (.bss)
            build/baserom/object_menkuri_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_menkuri_objectsSegmentBssEnd = .;
        _object_menkuri_objectsSegmentEnd = .;
    }
    _object_menkuri_objectsSegmentBssSize = ABSOLUTE( _object_menkuri_objectsSegmentBssEnd - _object_menkuri_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE5SegmentRomStart = _RomSize;
    ..object_oE5 : AT(_RomSize)
    {
        _object_oE5SegmentStart = .;
        . = ALIGN(0x10);
        _object_oE5SegmentTextStart = .;
            build/baserom/object_oE5.o (.text)
        _object_oE5SegmentTextEnd = .;
    _object_oE5SegmentTextSize = ABSOLUTE( _object_oE5SegmentTextEnd - _object_oE5SegmentTextStart );
        _object_oE5SegmentDataStart = .;
            build/baserom/object_oE5.o (.data)
        _object_oE5SegmentDataEnd = .;
    _object_oE5SegmentDataSize = ABSOLUTE( _object_oE5SegmentDataEnd - _object_oE5SegmentDataStart );
        _object_oE5SegmentRoDataStart = .;
            build/baserom/object_oE5.o (.rodata)
        _object_oE5SegmentRoDataEnd = .;
    _object_oE5SegmentRoDataSize = ABSOLUTE( _object_oE5SegmentRoDataEnd - _object_oE5SegmentRoDataStart );
        _object_oE5SegmentSDataStart = .;
            build/baserom/object_oE5.o (.sdata)
        . = ALIGN(0x10);
        _object_oE5SegmentSDataEnd = .;
        _object_oE5SegmentOvlStart = .;
            build/baserom/object_oE5.o (.ovl)
        . = ALIGN(0x10);
        _object_oE5SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE5SegmentOvlEnd - _object_oE5SegmentTextStart );
    _object_oE5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE5.bss ADDR(..object_oE5) + SIZEOF(..object_oE5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE5SegmentBssStart = .;
            build/baserom/object_oE5.o (.sbss)
            build/baserom/object_oE5.o (.scommon)
            build/baserom/object_oE5.o (.bss)
            build/baserom/object_oE5.o (COMMON)
        . = ALIGN(0x10);
        _object_oE5SegmentBssEnd = .;
        _object_oE5SegmentEnd = .;
    }
    _object_oE5SegmentBssSize = ABSOLUTE( _object_oE5SegmentBssEnd - _object_oE5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE6SegmentRomStart = _RomSize;
    ..object_oE6 : AT(_RomSize)
    {
        _object_oE6SegmentStart = .;
        . = ALIGN(0x10);
        _object_oE6SegmentTextStart = .;
            build/baserom/object_oE6.o (.text)
        _object_oE6SegmentTextEnd = .;
    _object_oE6SegmentTextSize = ABSOLUTE( _object_oE6SegmentTextEnd - _object_oE6SegmentTextStart );
        _object_oE6SegmentDataStart = .;
            build/baserom/object_oE6.o (.data)
        _object_oE6SegmentDataEnd = .;
    _object_oE6SegmentDataSize = ABSOLUTE( _object_oE6SegmentDataEnd - _object_oE6SegmentDataStart );
        _object_oE6SegmentRoDataStart = .;
            build/baserom/object_oE6.o (.rodata)
        _object_oE6SegmentRoDataEnd = .;
    _object_oE6SegmentRoDataSize = ABSOLUTE( _object_oE6SegmentRoDataEnd - _object_oE6SegmentRoDataStart );
        _object_oE6SegmentSDataStart = .;
            build/baserom/object_oE6.o (.sdata)
        . = ALIGN(0x10);
        _object_oE6SegmentSDataEnd = .;
        _object_oE6SegmentOvlStart = .;
            build/baserom/object_oE6.o (.ovl)
        . = ALIGN(0x10);
        _object_oE6SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE6SegmentOvlEnd - _object_oE6SegmentTextStart );
    _object_oE6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE6.bss ADDR(..object_oE6) + SIZEOF(..object_oE6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE6SegmentBssStart = .;
            build/baserom/object_oE6.o (.sbss)
            build/baserom/object_oE6.o (.scommon)
            build/baserom/object_oE6.o (.bss)
            build/baserom/object_oE6.o (COMMON)
        . = ALIGN(0x10);
        _object_oE6SegmentBssEnd = .;
        _object_oE6SegmentEnd = .;
    }
    _object_oE6SegmentBssSize = ABSOLUTE( _object_oE6SegmentBssEnd - _object_oE6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE7SegmentRomStart = _RomSize;
    ..object_oE7 : AT(_RomSize)
    {
        _object_oE7SegmentStart = .;
        . = ALIGN(0x10);
        _object_oE7SegmentTextStart = .;
            build/baserom/object_oE7.o (.text)
        _object_oE7SegmentTextEnd = .;
    _object_oE7SegmentTextSize = ABSOLUTE( _object_oE7SegmentTextEnd - _object_oE7SegmentTextStart );
        _object_oE7SegmentDataStart = .;
            build/baserom/object_oE7.o (.data)
        _object_oE7SegmentDataEnd = .;
    _object_oE7SegmentDataSize = ABSOLUTE( _object_oE7SegmentDataEnd - _object_oE7SegmentDataStart );
        _object_oE7SegmentRoDataStart = .;
            build/baserom/object_oE7.o (.rodata)
        _object_oE7SegmentRoDataEnd = .;
    _object_oE7SegmentRoDataSize = ABSOLUTE( _object_oE7SegmentRoDataEnd - _object_oE7SegmentRoDataStart );
        _object_oE7SegmentSDataStart = .;
            build/baserom/object_oE7.o (.sdata)
        . = ALIGN(0x10);
        _object_oE7SegmentSDataEnd = .;
        _object_oE7SegmentOvlStart = .;
            build/baserom/object_oE7.o (.ovl)
        . = ALIGN(0x10);
        _object_oE7SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE7SegmentOvlEnd - _object_oE7SegmentTextStart );
    _object_oE7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE7.bss ADDR(..object_oE7) + SIZEOF(..object_oE7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE7SegmentBssStart = .;
            build/baserom/object_oE7.o (.sbss)
            build/baserom/object_oE7.o (.scommon)
            build/baserom/object_oE7.o (.bss)
            build/baserom/object_oE7.o (COMMON)
        . = ALIGN(0x10);
        _object_oE7SegmentBssEnd = .;
        _object_oE7SegmentEnd = .;
    }
    _object_oE7SegmentBssSize = ABSOLUTE( _object_oE7SegmentBssEnd - _object_oE7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE8SegmentRomStart = _RomSize;
    ..object_oE8 : AT(_RomSize)
    {
        _object_oE8SegmentStart = .;
        . = ALIGN(0x10);
        _object_oE8SegmentTextStart = .;
            build/baserom/object_oE8.o (.text)
        _object_oE8SegmentTextEnd = .;
    _object_oE8SegmentTextSize = ABSOLUTE( _object_oE8SegmentTextEnd - _object_oE8SegmentTextStart );
        _object_oE8SegmentDataStart = .;
            build/baserom/object_oE8.o (.data)
        _object_oE8SegmentDataEnd = .;
    _object_oE8SegmentDataSize = ABSOLUTE( _object_oE8SegmentDataEnd - _object_oE8SegmentDataStart );
        _object_oE8SegmentRoDataStart = .;
            build/baserom/object_oE8.o (.rodata)
        _object_oE8SegmentRoDataEnd = .;
    _object_oE8SegmentRoDataSize = ABSOLUTE( _object_oE8SegmentRoDataEnd - _object_oE8SegmentRoDataStart );
        _object_oE8SegmentSDataStart = .;
            build/baserom/object_oE8.o (.sdata)
        . = ALIGN(0x10);
        _object_oE8SegmentSDataEnd = .;
        _object_oE8SegmentOvlStart = .;
            build/baserom/object_oE8.o (.ovl)
        . = ALIGN(0x10);
        _object_oE8SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE8SegmentOvlEnd - _object_oE8SegmentTextStart );
    _object_oE8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE8.bss ADDR(..object_oE8) + SIZEOF(..object_oE8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE8SegmentBssStart = .;
            build/baserom/object_oE8.o (.sbss)
            build/baserom/object_oE8.o (.scommon)
            build/baserom/object_oE8.o (.bss)
            build/baserom/object_oE8.o (COMMON)
        . = ALIGN(0x10);
        _object_oE8SegmentBssEnd = .;
        _object_oE8SegmentEnd = .;
    }
    _object_oE8SegmentBssSize = ABSOLUTE( _object_oE8SegmentBssEnd - _object_oE8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE9SegmentRomStart = _RomSize;
    ..object_oE9 : AT(_RomSize)
    {
        _object_oE9SegmentStart = .;
        . = ALIGN(0x10);
        _object_oE9SegmentTextStart = .;
            build/baserom/object_oE9.o (.text)
        _object_oE9SegmentTextEnd = .;
    _object_oE9SegmentTextSize = ABSOLUTE( _object_oE9SegmentTextEnd - _object_oE9SegmentTextStart );
        _object_oE9SegmentDataStart = .;
            build/baserom/object_oE9.o (.data)
        _object_oE9SegmentDataEnd = .;
    _object_oE9SegmentDataSize = ABSOLUTE( _object_oE9SegmentDataEnd - _object_oE9SegmentDataStart );
        _object_oE9SegmentRoDataStart = .;
            build/baserom/object_oE9.o (.rodata)
        _object_oE9SegmentRoDataEnd = .;
    _object_oE9SegmentRoDataSize = ABSOLUTE( _object_oE9SegmentRoDataEnd - _object_oE9SegmentRoDataStart );
        _object_oE9SegmentSDataStart = .;
            build/baserom/object_oE9.o (.sdata)
        . = ALIGN(0x10);
        _object_oE9SegmentSDataEnd = .;
        _object_oE9SegmentOvlStart = .;
            build/baserom/object_oE9.o (.ovl)
        . = ALIGN(0x10);
        _object_oE9SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE9SegmentOvlEnd - _object_oE9SegmentTextStart );
    _object_oE9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE9.bss ADDR(..object_oE9) + SIZEOF(..object_oE9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE9SegmentBssStart = .;
            build/baserom/object_oE9.o (.sbss)
            build/baserom/object_oE9.o (.scommon)
            build/baserom/object_oE9.o (.bss)
            build/baserom/object_oE9.o (COMMON)
        . = ALIGN(0x10);
        _object_oE9SegmentBssEnd = .;
        _object_oE9SegmentEnd = .;
    }
    _object_oE9SegmentBssSize = ABSOLUTE( _object_oE9SegmentBssEnd - _object_oE9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE10SegmentRomStart = _RomSize;
    ..object_oE10 : AT(_RomSize)
    {
        _object_oE10SegmentStart = .;
        . = ALIGN(0x10);
        _object_oE10SegmentTextStart = .;
            build/baserom/object_oE10.o (.text)
        _object_oE10SegmentTextEnd = .;
    _object_oE10SegmentTextSize = ABSOLUTE( _object_oE10SegmentTextEnd - _object_oE10SegmentTextStart );
        _object_oE10SegmentDataStart = .;
            build/baserom/object_oE10.o (.data)
        _object_oE10SegmentDataEnd = .;
    _object_oE10SegmentDataSize = ABSOLUTE( _object_oE10SegmentDataEnd - _object_oE10SegmentDataStart );
        _object_oE10SegmentRoDataStart = .;
            build/baserom/object_oE10.o (.rodata)
        _object_oE10SegmentRoDataEnd = .;
    _object_oE10SegmentRoDataSize = ABSOLUTE( _object_oE10SegmentRoDataEnd - _object_oE10SegmentRoDataStart );
        _object_oE10SegmentSDataStart = .;
            build/baserom/object_oE10.o (.sdata)
        . = ALIGN(0x10);
        _object_oE10SegmentSDataEnd = .;
        _object_oE10SegmentOvlStart = .;
            build/baserom/object_oE10.o (.ovl)
        . = ALIGN(0x10);
        _object_oE10SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE10SegmentOvlEnd - _object_oE10SegmentTextStart );
    _object_oE10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE10.bss ADDR(..object_oE10) + SIZEOF(..object_oE10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE10SegmentBssStart = .;
            build/baserom/object_oE10.o (.sbss)
            build/baserom/object_oE10.o (.scommon)
            build/baserom/object_oE10.o (.bss)
            build/baserom/object_oE10.o (COMMON)
        . = ALIGN(0x10);
        _object_oE10SegmentBssEnd = .;
        _object_oE10SegmentEnd = .;
    }
    _object_oE10SegmentBssSize = ABSOLUTE( _object_oE10SegmentBssEnd - _object_oE10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE11SegmentRomStart = _RomSize;
    ..object_oE11 : AT(_RomSize)
    {
        _object_oE11SegmentStart = .;
        . = ALIGN(0x10);
        _object_oE11SegmentTextStart = .;
            build/baserom/object_oE11.o (.text)
        _object_oE11SegmentTextEnd = .;
    _object_oE11SegmentTextSize = ABSOLUTE( _object_oE11SegmentTextEnd - _object_oE11SegmentTextStart );
        _object_oE11SegmentDataStart = .;
            build/baserom/object_oE11.o (.data)
        _object_oE11SegmentDataEnd = .;
    _object_oE11SegmentDataSize = ABSOLUTE( _object_oE11SegmentDataEnd - _object_oE11SegmentDataStart );
        _object_oE11SegmentRoDataStart = .;
            build/baserom/object_oE11.o (.rodata)
        _object_oE11SegmentRoDataEnd = .;
    _object_oE11SegmentRoDataSize = ABSOLUTE( _object_oE11SegmentRoDataEnd - _object_oE11SegmentRoDataStart );
        _object_oE11SegmentSDataStart = .;
            build/baserom/object_oE11.o (.sdata)
        . = ALIGN(0x10);
        _object_oE11SegmentSDataEnd = .;
        _object_oE11SegmentOvlStart = .;
            build/baserom/object_oE11.o (.ovl)
        . = ALIGN(0x10);
        _object_oE11SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE11SegmentOvlEnd - _object_oE11SegmentTextStart );
    _object_oE11SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE11.bss ADDR(..object_oE11) + SIZEOF(..object_oE11) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE11SegmentBssStart = .;
            build/baserom/object_oE11.o (.sbss)
            build/baserom/object_oE11.o (.scommon)
            build/baserom/object_oE11.o (.bss)
            build/baserom/object_oE11.o (COMMON)
        . = ALIGN(0x10);
        _object_oE11SegmentBssEnd = .;
        _object_oE11SegmentEnd = .;
    }
    _object_oE11SegmentBssSize = ABSOLUTE( _object_oE11SegmentBssEnd - _object_oE11SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE12SegmentRomStart = _RomSize;
    ..object_oE12 : AT(_RomSize)
    {
        _object_oE12SegmentStart = .;
        . = ALIGN(0x10);
        _object_oE12SegmentTextStart = .;
            build/baserom/object_oE12.o (.text)
        _object_oE12SegmentTextEnd = .;
    _object_oE12SegmentTextSize = ABSOLUTE( _object_oE12SegmentTextEnd - _object_oE12SegmentTextStart );
        _object_oE12SegmentDataStart = .;
            build/baserom/object_oE12.o (.data)
        _object_oE12SegmentDataEnd = .;
    _object_oE12SegmentDataSize = ABSOLUTE( _object_oE12SegmentDataEnd - _object_oE12SegmentDataStart );
        _object_oE12SegmentRoDataStart = .;
            build/baserom/object_oE12.o (.rodata)
        _object_oE12SegmentRoDataEnd = .;
    _object_oE12SegmentRoDataSize = ABSOLUTE( _object_oE12SegmentRoDataEnd - _object_oE12SegmentRoDataStart );
        _object_oE12SegmentSDataStart = .;
            build/baserom/object_oE12.o (.sdata)
        . = ALIGN(0x10);
        _object_oE12SegmentSDataEnd = .;
        _object_oE12SegmentOvlStart = .;
            build/baserom/object_oE12.o (.ovl)
        . = ALIGN(0x10);
        _object_oE12SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE12SegmentOvlEnd - _object_oE12SegmentTextStart );
    _object_oE12SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE12.bss ADDR(..object_oE12) + SIZEOF(..object_oE12) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE12SegmentBssStart = .;
            build/baserom/object_oE12.o (.sbss)
            build/baserom/object_oE12.o (.scommon)
            build/baserom/object_oE12.o (.bss)
            build/baserom/object_oE12.o (COMMON)
        . = ALIGN(0x10);
        _object_oE12SegmentBssEnd = .;
        _object_oE12SegmentEnd = .;
    }
    _object_oE12SegmentBssSize = ABSOLUTE( _object_oE12SegmentBssEnd - _object_oE12SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_valiSegmentRomStart = _RomSize;
    ..object_vali : AT(_RomSize)
    {
        _object_valiSegmentStart = .;
        . = ALIGN(0x10);
        _object_valiSegmentTextStart = .;
            build/baserom/object_vali.o (.text)
        _object_valiSegmentTextEnd = .;
    _object_valiSegmentTextSize = ABSOLUTE( _object_valiSegmentTextEnd - _object_valiSegmentTextStart );
        _object_valiSegmentDataStart = .;
            build/baserom/object_vali.o (.data)
        _object_valiSegmentDataEnd = .;
    _object_valiSegmentDataSize = ABSOLUTE( _object_valiSegmentDataEnd - _object_valiSegmentDataStart );
        _object_valiSegmentRoDataStart = .;
            build/baserom/object_vali.o (.rodata)
        _object_valiSegmentRoDataEnd = .;
    _object_valiSegmentRoDataSize = ABSOLUTE( _object_valiSegmentRoDataEnd - _object_valiSegmentRoDataStart );
        _object_valiSegmentSDataStart = .;
            build/baserom/object_vali.o (.sdata)
        . = ALIGN(0x10);
        _object_valiSegmentSDataEnd = .;
        _object_valiSegmentOvlStart = .;
            build/baserom/object_vali.o (.ovl)
        . = ALIGN(0x10);
        _object_valiSegmentOvlEnd = .;
    }
    _RomSize += ( _object_valiSegmentOvlEnd - _object_valiSegmentTextStart );
    _object_valiSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_vali.bss ADDR(..object_vali) + SIZEOF(..object_vali) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_valiSegmentBssStart = .;
            build/baserom/object_vali.o (.sbss)
            build/baserom/object_vali.o (.scommon)
            build/baserom/object_vali.o (.bss)
            build/baserom/object_vali.o (COMMON)
        . = ALIGN(0x10);
        _object_valiSegmentBssEnd = .;
        _object_valiSegmentEnd = .;
    }
    _object_valiSegmentBssSize = ABSOLUTE( _object_valiSegmentBssEnd - _object_valiSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oA10SegmentRomStart = _RomSize;
    ..object_oA10 : AT(_RomSize)
    {
        _object_oA10SegmentStart = .;
        . = ALIGN(0x10);
        _object_oA10SegmentTextStart = .;
            build/baserom/object_oA10.o (.text)
        _object_oA10SegmentTextEnd = .;
    _object_oA10SegmentTextSize = ABSOLUTE( _object_oA10SegmentTextEnd - _object_oA10SegmentTextStart );
        _object_oA10SegmentDataStart = .;
            build/baserom/object_oA10.o (.data)
        _object_oA10SegmentDataEnd = .;
    _object_oA10SegmentDataSize = ABSOLUTE( _object_oA10SegmentDataEnd - _object_oA10SegmentDataStart );
        _object_oA10SegmentRoDataStart = .;
            build/baserom/object_oA10.o (.rodata)
        _object_oA10SegmentRoDataEnd = .;
    _object_oA10SegmentRoDataSize = ABSOLUTE( _object_oA10SegmentRoDataEnd - _object_oA10SegmentRoDataStart );
        _object_oA10SegmentSDataStart = .;
            build/baserom/object_oA10.o (.sdata)
        . = ALIGN(0x10);
        _object_oA10SegmentSDataEnd = .;
        _object_oA10SegmentOvlStart = .;
            build/baserom/object_oA10.o (.ovl)
        . = ALIGN(0x10);
        _object_oA10SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oA10SegmentOvlEnd - _object_oA10SegmentTextStart );
    _object_oA10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oA10.bss ADDR(..object_oA10) + SIZEOF(..object_oA10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oA10SegmentBssStart = .;
            build/baserom/object_oA10.o (.sbss)
            build/baserom/object_oA10.o (.scommon)
            build/baserom/object_oA10.o (.bss)
            build/baserom/object_oA10.o (COMMON)
        . = ALIGN(0x10);
        _object_oA10SegmentBssEnd = .;
        _object_oA10SegmentEnd = .;
    }
    _object_oA10SegmentBssSize = ABSOLUTE( _object_oA10SegmentBssEnd - _object_oA10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oA11SegmentRomStart = _RomSize;
    ..object_oA11 : AT(_RomSize)
    {
        _object_oA11SegmentStart = .;
        . = ALIGN(0x10);
        _object_oA11SegmentTextStart = .;
            build/baserom/object_oA11.o (.text)
        _object_oA11SegmentTextEnd = .;
    _object_oA11SegmentTextSize = ABSOLUTE( _object_oA11SegmentTextEnd - _object_oA11SegmentTextStart );
        _object_oA11SegmentDataStart = .;
            build/baserom/object_oA11.o (.data)
        _object_oA11SegmentDataEnd = .;
    _object_oA11SegmentDataSize = ABSOLUTE( _object_oA11SegmentDataEnd - _object_oA11SegmentDataStart );
        _object_oA11SegmentRoDataStart = .;
            build/baserom/object_oA11.o (.rodata)
        _object_oA11SegmentRoDataEnd = .;
    _object_oA11SegmentRoDataSize = ABSOLUTE( _object_oA11SegmentRoDataEnd - _object_oA11SegmentRoDataStart );
        _object_oA11SegmentSDataStart = .;
            build/baserom/object_oA11.o (.sdata)
        . = ALIGN(0x10);
        _object_oA11SegmentSDataEnd = .;
        _object_oA11SegmentOvlStart = .;
            build/baserom/object_oA11.o (.ovl)
        . = ALIGN(0x10);
        _object_oA11SegmentOvlEnd = .;
    }
    _RomSize += ( _object_oA11SegmentOvlEnd - _object_oA11SegmentTextStart );
    _object_oA11SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oA11.bss ADDR(..object_oA11) + SIZEOF(..object_oA11) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oA11SegmentBssStart = .;
            build/baserom/object_oA11.o (.sbss)
            build/baserom/object_oA11.o (.scommon)
            build/baserom/object_oA11.o (.bss)
            build/baserom/object_oA11.o (COMMON)
        . = ALIGN(0x10);
        _object_oA11SegmentBssEnd = .;
        _object_oA11SegmentEnd = .;
    }
    _object_oA11SegmentBssSize = ABSOLUTE( _object_oA11SegmentBssEnd - _object_oA11SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mizu_objectsSegmentRomStart = _RomSize;
    ..object_mizu_objects : AT(_RomSize)
    {
        _object_mizu_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_mizu_objectsSegmentTextStart = .;
            build/baserom/object_mizu_objects.o (.text)
        _object_mizu_objectsSegmentTextEnd = .;
    _object_mizu_objectsSegmentTextSize = ABSOLUTE( _object_mizu_objectsSegmentTextEnd - _object_mizu_objectsSegmentTextStart );
        _object_mizu_objectsSegmentDataStart = .;
            build/baserom/object_mizu_objects.o (.data)
        _object_mizu_objectsSegmentDataEnd = .;
    _object_mizu_objectsSegmentDataSize = ABSOLUTE( _object_mizu_objectsSegmentDataEnd - _object_mizu_objectsSegmentDataStart );
        _object_mizu_objectsSegmentRoDataStart = .;
            build/baserom/object_mizu_objects.o (.rodata)
        _object_mizu_objectsSegmentRoDataEnd = .;
    _object_mizu_objectsSegmentRoDataSize = ABSOLUTE( _object_mizu_objectsSegmentRoDataEnd - _object_mizu_objectsSegmentRoDataStart );
        _object_mizu_objectsSegmentSDataStart = .;
            build/baserom/object_mizu_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_mizu_objectsSegmentSDataEnd = .;
        _object_mizu_objectsSegmentOvlStart = .;
            build/baserom/object_mizu_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_mizu_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mizu_objectsSegmentOvlEnd - _object_mizu_objectsSegmentTextStart );
    _object_mizu_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mizu_objects.bss ADDR(..object_mizu_objects) + SIZEOF(..object_mizu_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mizu_objectsSegmentBssStart = .;
            build/baserom/object_mizu_objects.o (.sbss)
            build/baserom/object_mizu_objects.o (.scommon)
            build/baserom/object_mizu_objects.o (.bss)
            build/baserom/object_mizu_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_mizu_objectsSegmentBssEnd = .;
        _object_mizu_objectsSegmentEnd = .;
    }
    _object_mizu_objectsSegmentBssSize = ABSOLUTE( _object_mizu_objectsSegmentBssEnd - _object_mizu_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_fhgSegmentRomStart = _RomSize;
    ..object_fhg : AT(_RomSize)
    {
        _object_fhgSegmentStart = .;
        . = ALIGN(0x10);
        _object_fhgSegmentTextStart = .;
            build/baserom/object_fhg.o (.text)
        _object_fhgSegmentTextEnd = .;
    _object_fhgSegmentTextSize = ABSOLUTE( _object_fhgSegmentTextEnd - _object_fhgSegmentTextStart );
        _object_fhgSegmentDataStart = .;
            build/baserom/object_fhg.o (.data)
        _object_fhgSegmentDataEnd = .;
    _object_fhgSegmentDataSize = ABSOLUTE( _object_fhgSegmentDataEnd - _object_fhgSegmentDataStart );
        _object_fhgSegmentRoDataStart = .;
            build/baserom/object_fhg.o (.rodata)
        _object_fhgSegmentRoDataEnd = .;
    _object_fhgSegmentRoDataSize = ABSOLUTE( _object_fhgSegmentRoDataEnd - _object_fhgSegmentRoDataStart );
        _object_fhgSegmentSDataStart = .;
            build/baserom/object_fhg.o (.sdata)
        . = ALIGN(0x10);
        _object_fhgSegmentSDataEnd = .;
        _object_fhgSegmentOvlStart = .;
            build/baserom/object_fhg.o (.ovl)
        . = ALIGN(0x10);
        _object_fhgSegmentOvlEnd = .;
    }
    _RomSize += ( _object_fhgSegmentOvlEnd - _object_fhgSegmentTextStart );
    _object_fhgSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_fhg.bss ADDR(..object_fhg) + SIZEOF(..object_fhg) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_fhgSegmentBssStart = .;
            build/baserom/object_fhg.o (.sbss)
            build/baserom/object_fhg.o (.scommon)
            build/baserom/object_fhg.o (.bss)
            build/baserom/object_fhg.o (COMMON)
        . = ALIGN(0x10);
        _object_fhgSegmentBssEnd = .;
        _object_fhgSegmentEnd = .;
    }
    _object_fhgSegmentBssSize = ABSOLUTE( _object_fhgSegmentBssEnd - _object_fhgSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ossanSegmentRomStart = _RomSize;
    ..object_ossan : AT(_RomSize)
    {
        _object_ossanSegmentStart = .;
        . = ALIGN(0x10);
        _object_ossanSegmentTextStart = .;
            build/baserom/object_ossan.o (.text)
        _object_ossanSegmentTextEnd = .;
    _object_ossanSegmentTextSize = ABSOLUTE( _object_ossanSegmentTextEnd - _object_ossanSegmentTextStart );
        _object_ossanSegmentDataStart = .;
            build/baserom/object_ossan.o (.data)
        _object_ossanSegmentDataEnd = .;
    _object_ossanSegmentDataSize = ABSOLUTE( _object_ossanSegmentDataEnd - _object_ossanSegmentDataStart );
        _object_ossanSegmentRoDataStart = .;
            build/baserom/object_ossan.o (.rodata)
        _object_ossanSegmentRoDataEnd = .;
    _object_ossanSegmentRoDataSize = ABSOLUTE( _object_ossanSegmentRoDataEnd - _object_ossanSegmentRoDataStart );
        _object_ossanSegmentSDataStart = .;
            build/baserom/object_ossan.o (.sdata)
        . = ALIGN(0x10);
        _object_ossanSegmentSDataEnd = .;
        _object_ossanSegmentOvlStart = .;
            build/baserom/object_ossan.o (.ovl)
        . = ALIGN(0x10);
        _object_ossanSegmentOvlEnd = .;
    }
    _RomSize += ( _object_ossanSegmentOvlEnd - _object_ossanSegmentTextStart );
    _object_ossanSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ossan.bss ADDR(..object_ossan) + SIZEOF(..object_ossan) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ossanSegmentBssStart = .;
            build/baserom/object_ossan.o (.sbss)
            build/baserom/object_ossan.o (.scommon)
            build/baserom/object_ossan.o (.bss)
            build/baserom/object_ossan.o (COMMON)
        . = ALIGN(0x10);
        _object_ossanSegmentBssEnd = .;
        _object_ossanSegmentEnd = .;
    }
    _object_ossanSegmentBssSize = ABSOLUTE( _object_ossanSegmentBssEnd - _object_ossanSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mori_hineri1SegmentRomStart = _RomSize;
    ..object_mori_hineri1 : AT(_RomSize)
    {
        _object_mori_hineri1SegmentStart = .;
        . = ALIGN(0x10);
        _object_mori_hineri1SegmentTextStart = .;
            build/baserom/object_mori_hineri1.o (.text)
        _object_mori_hineri1SegmentTextEnd = .;
    _object_mori_hineri1SegmentTextSize = ABSOLUTE( _object_mori_hineri1SegmentTextEnd - _object_mori_hineri1SegmentTextStart );
        _object_mori_hineri1SegmentDataStart = .;
            build/baserom/object_mori_hineri1.o (.data)
        _object_mori_hineri1SegmentDataEnd = .;
    _object_mori_hineri1SegmentDataSize = ABSOLUTE( _object_mori_hineri1SegmentDataEnd - _object_mori_hineri1SegmentDataStart );
        _object_mori_hineri1SegmentRoDataStart = .;
            build/baserom/object_mori_hineri1.o (.rodata)
        _object_mori_hineri1SegmentRoDataEnd = .;
    _object_mori_hineri1SegmentRoDataSize = ABSOLUTE( _object_mori_hineri1SegmentRoDataEnd - _object_mori_hineri1SegmentRoDataStart );
        _object_mori_hineri1SegmentSDataStart = .;
            build/baserom/object_mori_hineri1.o (.sdata)
        . = ALIGN(0x10);
        _object_mori_hineri1SegmentSDataEnd = .;
        _object_mori_hineri1SegmentOvlStart = .;
            build/baserom/object_mori_hineri1.o (.ovl)
        . = ALIGN(0x10);
        _object_mori_hineri1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_mori_hineri1SegmentOvlEnd - _object_mori_hineri1SegmentTextStart );
    _object_mori_hineri1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mori_hineri1.bss ADDR(..object_mori_hineri1) + SIZEOF(..object_mori_hineri1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mori_hineri1SegmentBssStart = .;
            build/baserom/object_mori_hineri1.o (.sbss)
            build/baserom/object_mori_hineri1.o (.scommon)
            build/baserom/object_mori_hineri1.o (.bss)
            build/baserom/object_mori_hineri1.o (COMMON)
        . = ALIGN(0x10);
        _object_mori_hineri1SegmentBssEnd = .;
        _object_mori_hineri1SegmentEnd = .;
    }
    _object_mori_hineri1SegmentBssSize = ABSOLUTE( _object_mori_hineri1SegmentBssEnd - _object_mori_hineri1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_BbSegmentRomStart = _RomSize;
    ..object_Bb : AT(_RomSize)
    {
        _object_BbSegmentStart = .;
        . = ALIGN(0x10);
        _object_BbSegmentTextStart = .;
            build/baserom/object_Bb.o (.text)
        _object_BbSegmentTextEnd = .;
    _object_BbSegmentTextSize = ABSOLUTE( _object_BbSegmentTextEnd - _object_BbSegmentTextStart );
        _object_BbSegmentDataStart = .;
            build/baserom/object_Bb.o (.data)
        _object_BbSegmentDataEnd = .;
    _object_BbSegmentDataSize = ABSOLUTE( _object_BbSegmentDataEnd - _object_BbSegmentDataStart );
        _object_BbSegmentRoDataStart = .;
            build/baserom/object_Bb.o (.rodata)
        _object_BbSegmentRoDataEnd = .;
    _object_BbSegmentRoDataSize = ABSOLUTE( _object_BbSegmentRoDataEnd - _object_BbSegmentRoDataStart );
        _object_BbSegmentSDataStart = .;
            build/baserom/object_Bb.o (.sdata)
        . = ALIGN(0x10);
        _object_BbSegmentSDataEnd = .;
        _object_BbSegmentOvlStart = .;
            build/baserom/object_Bb.o (.ovl)
        . = ALIGN(0x10);
        _object_BbSegmentOvlEnd = .;
    }
    _RomSize += ( _object_BbSegmentOvlEnd - _object_BbSegmentTextStart );
    _object_BbSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_Bb.bss ADDR(..object_Bb) + SIZEOF(..object_Bb) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_BbSegmentBssStart = .;
            build/baserom/object_Bb.o (.sbss)
            build/baserom/object_Bb.o (.scommon)
            build/baserom/object_Bb.o (.bss)
            build/baserom/object_Bb.o (COMMON)
        . = ALIGN(0x10);
        _object_BbSegmentBssEnd = .;
        _object_BbSegmentEnd = .;
    }
    _object_BbSegmentBssSize = ABSOLUTE( _object_BbSegmentBssEnd - _object_BbSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_toki_objectsSegmentRomStart = _RomSize;
    ..object_toki_objects : AT(_RomSize)
    {
        _object_toki_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_toki_objectsSegmentTextStart = .;
            build/baserom/object_toki_objects.o (.text)
        _object_toki_objectsSegmentTextEnd = .;
    _object_toki_objectsSegmentTextSize = ABSOLUTE( _object_toki_objectsSegmentTextEnd - _object_toki_objectsSegmentTextStart );
        _object_toki_objectsSegmentDataStart = .;
            build/baserom/object_toki_objects.o (.data)
        _object_toki_objectsSegmentDataEnd = .;
    _object_toki_objectsSegmentDataSize = ABSOLUTE( _object_toki_objectsSegmentDataEnd - _object_toki_objectsSegmentDataStart );
        _object_toki_objectsSegmentRoDataStart = .;
            build/baserom/object_toki_objects.o (.rodata)
        _object_toki_objectsSegmentRoDataEnd = .;
    _object_toki_objectsSegmentRoDataSize = ABSOLUTE( _object_toki_objectsSegmentRoDataEnd - _object_toki_objectsSegmentRoDataStart );
        _object_toki_objectsSegmentSDataStart = .;
            build/baserom/object_toki_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_toki_objectsSegmentSDataEnd = .;
        _object_toki_objectsSegmentOvlStart = .;
            build/baserom/object_toki_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_toki_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_toki_objectsSegmentOvlEnd - _object_toki_objectsSegmentTextStart );
    _object_toki_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_toki_objects.bss ADDR(..object_toki_objects) + SIZEOF(..object_toki_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_toki_objectsSegmentBssStart = .;
            build/baserom/object_toki_objects.o (.sbss)
            build/baserom/object_toki_objects.o (.scommon)
            build/baserom/object_toki_objects.o (.bss)
            build/baserom/object_toki_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_toki_objectsSegmentBssEnd = .;
        _object_toki_objectsSegmentEnd = .;
    }
    _object_toki_objectsSegmentBssSize = ABSOLUTE( _object_toki_objectsSegmentBssEnd - _object_toki_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_yukabyunSegmentRomStart = _RomSize;
    ..object_yukabyun : AT(_RomSize)
    {
        _object_yukabyunSegmentStart = .;
        . = ALIGN(0x10);
        _object_yukabyunSegmentTextStart = .;
            build/baserom/object_yukabyun.o (.text)
        _object_yukabyunSegmentTextEnd = .;
    _object_yukabyunSegmentTextSize = ABSOLUTE( _object_yukabyunSegmentTextEnd - _object_yukabyunSegmentTextStart );
        _object_yukabyunSegmentDataStart = .;
            build/baserom/object_yukabyun.o (.data)
        _object_yukabyunSegmentDataEnd = .;
    _object_yukabyunSegmentDataSize = ABSOLUTE( _object_yukabyunSegmentDataEnd - _object_yukabyunSegmentDataStart );
        _object_yukabyunSegmentRoDataStart = .;
            build/baserom/object_yukabyun.o (.rodata)
        _object_yukabyunSegmentRoDataEnd = .;
    _object_yukabyunSegmentRoDataSize = ABSOLUTE( _object_yukabyunSegmentRoDataEnd - _object_yukabyunSegmentRoDataStart );
        _object_yukabyunSegmentSDataStart = .;
            build/baserom/object_yukabyun.o (.sdata)
        . = ALIGN(0x10);
        _object_yukabyunSegmentSDataEnd = .;
        _object_yukabyunSegmentOvlStart = .;
            build/baserom/object_yukabyun.o (.ovl)
        . = ALIGN(0x10);
        _object_yukabyunSegmentOvlEnd = .;
    }
    _RomSize += ( _object_yukabyunSegmentOvlEnd - _object_yukabyunSegmentTextStart );
    _object_yukabyunSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_yukabyun.bss ADDR(..object_yukabyun) + SIZEOF(..object_yukabyun) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_yukabyunSegmentBssStart = .;
            build/baserom/object_yukabyun.o (.sbss)
            build/baserom/object_yukabyun.o (.scommon)
            build/baserom/object_yukabyun.o (.bss)
            build/baserom/object_yukabyun.o (COMMON)
        . = ALIGN(0x10);
        _object_yukabyunSegmentBssEnd = .;
        _object_yukabyunSegmentEnd = .;
    }
    _object_yukabyunSegmentBssSize = ABSOLUTE( _object_yukabyunSegmentBssEnd - _object_yukabyunSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_zl2SegmentRomStart = _RomSize;
    ..object_zl2 : AT(_RomSize)
    {
        _object_zl2SegmentStart = .;
        . = ALIGN(0x10);
        _object_zl2SegmentTextStart = .;
            build/baserom/object_zl2.o (.text)
        _object_zl2SegmentTextEnd = .;
    _object_zl2SegmentTextSize = ABSOLUTE( _object_zl2SegmentTextEnd - _object_zl2SegmentTextStart );
        _object_zl2SegmentDataStart = .;
            build/baserom/object_zl2.o (.data)
        _object_zl2SegmentDataEnd = .;
    _object_zl2SegmentDataSize = ABSOLUTE( _object_zl2SegmentDataEnd - _object_zl2SegmentDataStart );
        _object_zl2SegmentRoDataStart = .;
            build/baserom/object_zl2.o (.rodata)
        _object_zl2SegmentRoDataEnd = .;
    _object_zl2SegmentRoDataSize = ABSOLUTE( _object_zl2SegmentRoDataEnd - _object_zl2SegmentRoDataStart );
        _object_zl2SegmentSDataStart = .;
            build/baserom/object_zl2.o (.sdata)
        . = ALIGN(0x10);
        _object_zl2SegmentSDataEnd = .;
        _object_zl2SegmentOvlStart = .;
            build/baserom/object_zl2.o (.ovl)
        . = ALIGN(0x10);
        _object_zl2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_zl2SegmentOvlEnd - _object_zl2SegmentTextStart );
    _object_zl2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_zl2.bss ADDR(..object_zl2) + SIZEOF(..object_zl2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_zl2SegmentBssStart = .;
            build/baserom/object_zl2.o (.sbss)
            build/baserom/object_zl2.o (.scommon)
            build/baserom/object_zl2.o (.bss)
            build/baserom/object_zl2.o (COMMON)
        . = ALIGN(0x10);
        _object_zl2SegmentBssEnd = .;
        _object_zl2SegmentEnd = .;
    }
    _object_zl2SegmentBssSize = ABSOLUTE( _object_zl2SegmentBssEnd - _object_zl2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mjinSegmentRomStart = _RomSize;
    ..object_mjin : AT(_RomSize)
    {
        _object_mjinSegmentStart = .;
        . = ALIGN(0x10);
        _object_mjinSegmentTextStart = .;
            build/baserom/object_mjin.o (.text)
        _object_mjinSegmentTextEnd = .;
    _object_mjinSegmentTextSize = ABSOLUTE( _object_mjinSegmentTextEnd - _object_mjinSegmentTextStart );
        _object_mjinSegmentDataStart = .;
            build/baserom/object_mjin.o (.data)
        _object_mjinSegmentDataEnd = .;
    _object_mjinSegmentDataSize = ABSOLUTE( _object_mjinSegmentDataEnd - _object_mjinSegmentDataStart );
        _object_mjinSegmentRoDataStart = .;
            build/baserom/object_mjin.o (.rodata)
        _object_mjinSegmentRoDataEnd = .;
    _object_mjinSegmentRoDataSize = ABSOLUTE( _object_mjinSegmentRoDataEnd - _object_mjinSegmentRoDataStart );
        _object_mjinSegmentSDataStart = .;
            build/baserom/object_mjin.o (.sdata)
        . = ALIGN(0x10);
        _object_mjinSegmentSDataEnd = .;
        _object_mjinSegmentOvlStart = .;
            build/baserom/object_mjin.o (.ovl)
        . = ALIGN(0x10);
        _object_mjinSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mjinSegmentOvlEnd - _object_mjinSegmentTextStart );
    _object_mjinSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mjin.bss ADDR(..object_mjin) + SIZEOF(..object_mjin) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mjinSegmentBssStart = .;
            build/baserom/object_mjin.o (.sbss)
            build/baserom/object_mjin.o (.scommon)
            build/baserom/object_mjin.o (.bss)
            build/baserom/object_mjin.o (COMMON)
        . = ALIGN(0x10);
        _object_mjinSegmentBssEnd = .;
        _object_mjinSegmentEnd = .;
    }
    _object_mjinSegmentBssSize = ABSOLUTE( _object_mjinSegmentBssEnd - _object_mjinSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mjin_flashSegmentRomStart = _RomSize;
    ..object_mjin_flash : AT(_RomSize)
    {
        _object_mjin_flashSegmentStart = .;
        . = ALIGN(0x10);
        _object_mjin_flashSegmentTextStart = .;
            build/baserom/object_mjin_flash.o (.text)
        _object_mjin_flashSegmentTextEnd = .;
    _object_mjin_flashSegmentTextSize = ABSOLUTE( _object_mjin_flashSegmentTextEnd - _object_mjin_flashSegmentTextStart );
        _object_mjin_flashSegmentDataStart = .;
            build/baserom/object_mjin_flash.o (.data)
        _object_mjin_flashSegmentDataEnd = .;
    _object_mjin_flashSegmentDataSize = ABSOLUTE( _object_mjin_flashSegmentDataEnd - _object_mjin_flashSegmentDataStart );
        _object_mjin_flashSegmentRoDataStart = .;
            build/baserom/object_mjin_flash.o (.rodata)
        _object_mjin_flashSegmentRoDataEnd = .;
    _object_mjin_flashSegmentRoDataSize = ABSOLUTE( _object_mjin_flashSegmentRoDataEnd - _object_mjin_flashSegmentRoDataStart );
        _object_mjin_flashSegmentSDataStart = .;
            build/baserom/object_mjin_flash.o (.sdata)
        . = ALIGN(0x10);
        _object_mjin_flashSegmentSDataEnd = .;
        _object_mjin_flashSegmentOvlStart = .;
            build/baserom/object_mjin_flash.o (.ovl)
        . = ALIGN(0x10);
        _object_mjin_flashSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mjin_flashSegmentOvlEnd - _object_mjin_flashSegmentTextStart );
    _object_mjin_flashSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mjin_flash.bss ADDR(..object_mjin_flash) + SIZEOF(..object_mjin_flash) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mjin_flashSegmentBssStart = .;
            build/baserom/object_mjin_flash.o (.sbss)
            build/baserom/object_mjin_flash.o (.scommon)
            build/baserom/object_mjin_flash.o (.bss)
            build/baserom/object_mjin_flash.o (COMMON)
        . = ALIGN(0x10);
        _object_mjin_flashSegmentBssEnd = .;
        _object_mjin_flashSegmentEnd = .;
    }
    _object_mjin_flashSegmentBssSize = ABSOLUTE( _object_mjin_flashSegmentBssEnd - _object_mjin_flashSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mjin_darkSegmentRomStart = _RomSize;
    ..object_mjin_dark : AT(_RomSize)
    {
        _object_mjin_darkSegmentStart = .;
        . = ALIGN(0x10);
        _object_mjin_darkSegmentTextStart = .;
            build/baserom/object_mjin_dark.o (.text)
        _object_mjin_darkSegmentTextEnd = .;
    _object_mjin_darkSegmentTextSize = ABSOLUTE( _object_mjin_darkSegmentTextEnd - _object_mjin_darkSegmentTextStart );
        _object_mjin_darkSegmentDataStart = .;
            build/baserom/object_mjin_dark.o (.data)
        _object_mjin_darkSegmentDataEnd = .;
    _object_mjin_darkSegmentDataSize = ABSOLUTE( _object_mjin_darkSegmentDataEnd - _object_mjin_darkSegmentDataStart );
        _object_mjin_darkSegmentRoDataStart = .;
            build/baserom/object_mjin_dark.o (.rodata)
        _object_mjin_darkSegmentRoDataEnd = .;
    _object_mjin_darkSegmentRoDataSize = ABSOLUTE( _object_mjin_darkSegmentRoDataEnd - _object_mjin_darkSegmentRoDataStart );
        _object_mjin_darkSegmentSDataStart = .;
            build/baserom/object_mjin_dark.o (.sdata)
        . = ALIGN(0x10);
        _object_mjin_darkSegmentSDataEnd = .;
        _object_mjin_darkSegmentOvlStart = .;
            build/baserom/object_mjin_dark.o (.ovl)
        . = ALIGN(0x10);
        _object_mjin_darkSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mjin_darkSegmentOvlEnd - _object_mjin_darkSegmentTextStart );
    _object_mjin_darkSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mjin_dark.bss ADDR(..object_mjin_dark) + SIZEOF(..object_mjin_dark) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mjin_darkSegmentBssStart = .;
            build/baserom/object_mjin_dark.o (.sbss)
            build/baserom/object_mjin_dark.o (.scommon)
            build/baserom/object_mjin_dark.o (.bss)
            build/baserom/object_mjin_dark.o (COMMON)
        . = ALIGN(0x10);
        _object_mjin_darkSegmentBssEnd = .;
        _object_mjin_darkSegmentEnd = .;
    }
    _object_mjin_darkSegmentBssSize = ABSOLUTE( _object_mjin_darkSegmentBssEnd - _object_mjin_darkSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mjin_flameSegmentRomStart = _RomSize;
    ..object_mjin_flame : AT(_RomSize)
    {
        _object_mjin_flameSegmentStart = .;
        . = ALIGN(0x10);
        _object_mjin_flameSegmentTextStart = .;
            build/baserom/object_mjin_flame.o (.text)
        _object_mjin_flameSegmentTextEnd = .;
    _object_mjin_flameSegmentTextSize = ABSOLUTE( _object_mjin_flameSegmentTextEnd - _object_mjin_flameSegmentTextStart );
        _object_mjin_flameSegmentDataStart = .;
            build/baserom/object_mjin_flame.o (.data)
        _object_mjin_flameSegmentDataEnd = .;
    _object_mjin_flameSegmentDataSize = ABSOLUTE( _object_mjin_flameSegmentDataEnd - _object_mjin_flameSegmentDataStart );
        _object_mjin_flameSegmentRoDataStart = .;
            build/baserom/object_mjin_flame.o (.rodata)
        _object_mjin_flameSegmentRoDataEnd = .;
    _object_mjin_flameSegmentRoDataSize = ABSOLUTE( _object_mjin_flameSegmentRoDataEnd - _object_mjin_flameSegmentRoDataStart );
        _object_mjin_flameSegmentSDataStart = .;
            build/baserom/object_mjin_flame.o (.sdata)
        . = ALIGN(0x10);
        _object_mjin_flameSegmentSDataEnd = .;
        _object_mjin_flameSegmentOvlStart = .;
            build/baserom/object_mjin_flame.o (.ovl)
        . = ALIGN(0x10);
        _object_mjin_flameSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mjin_flameSegmentOvlEnd - _object_mjin_flameSegmentTextStart );
    _object_mjin_flameSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mjin_flame.bss ADDR(..object_mjin_flame) + SIZEOF(..object_mjin_flame) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mjin_flameSegmentBssStart = .;
            build/baserom/object_mjin_flame.o (.sbss)
            build/baserom/object_mjin_flame.o (.scommon)
            build/baserom/object_mjin_flame.o (.bss)
            build/baserom/object_mjin_flame.o (COMMON)
        . = ALIGN(0x10);
        _object_mjin_flameSegmentBssEnd = .;
        _object_mjin_flameSegmentEnd = .;
    }
    _object_mjin_flameSegmentBssSize = ABSOLUTE( _object_mjin_flameSegmentBssEnd - _object_mjin_flameSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mjin_iceSegmentRomStart = _RomSize;
    ..object_mjin_ice : AT(_RomSize)
    {
        _object_mjin_iceSegmentStart = .;
        . = ALIGN(0x10);
        _object_mjin_iceSegmentTextStart = .;
            build/baserom/object_mjin_ice.o (.text)
        _object_mjin_iceSegmentTextEnd = .;
    _object_mjin_iceSegmentTextSize = ABSOLUTE( _object_mjin_iceSegmentTextEnd - _object_mjin_iceSegmentTextStart );
        _object_mjin_iceSegmentDataStart = .;
            build/baserom/object_mjin_ice.o (.data)
        _object_mjin_iceSegmentDataEnd = .;
    _object_mjin_iceSegmentDataSize = ABSOLUTE( _object_mjin_iceSegmentDataEnd - _object_mjin_iceSegmentDataStart );
        _object_mjin_iceSegmentRoDataStart = .;
            build/baserom/object_mjin_ice.o (.rodata)
        _object_mjin_iceSegmentRoDataEnd = .;
    _object_mjin_iceSegmentRoDataSize = ABSOLUTE( _object_mjin_iceSegmentRoDataEnd - _object_mjin_iceSegmentRoDataStart );
        _object_mjin_iceSegmentSDataStart = .;
            build/baserom/object_mjin_ice.o (.sdata)
        . = ALIGN(0x10);
        _object_mjin_iceSegmentSDataEnd = .;
        _object_mjin_iceSegmentOvlStart = .;
            build/baserom/object_mjin_ice.o (.ovl)
        . = ALIGN(0x10);
        _object_mjin_iceSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mjin_iceSegmentOvlEnd - _object_mjin_iceSegmentTextStart );
    _object_mjin_iceSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mjin_ice.bss ADDR(..object_mjin_ice) + SIZEOF(..object_mjin_ice) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mjin_iceSegmentBssStart = .;
            build/baserom/object_mjin_ice.o (.sbss)
            build/baserom/object_mjin_ice.o (.scommon)
            build/baserom/object_mjin_ice.o (.bss)
            build/baserom/object_mjin_ice.o (COMMON)
        . = ALIGN(0x10);
        _object_mjin_iceSegmentBssEnd = .;
        _object_mjin_iceSegmentEnd = .;
    }
    _object_mjin_iceSegmentBssSize = ABSOLUTE( _object_mjin_iceSegmentBssEnd - _object_mjin_iceSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mjin_soulSegmentRomStart = _RomSize;
    ..object_mjin_soul : AT(_RomSize)
    {
        _object_mjin_soulSegmentStart = .;
        . = ALIGN(0x10);
        _object_mjin_soulSegmentTextStart = .;
            build/baserom/object_mjin_soul.o (.text)
        _object_mjin_soulSegmentTextEnd = .;
    _object_mjin_soulSegmentTextSize = ABSOLUTE( _object_mjin_soulSegmentTextEnd - _object_mjin_soulSegmentTextStart );
        _object_mjin_soulSegmentDataStart = .;
            build/baserom/object_mjin_soul.o (.data)
        _object_mjin_soulSegmentDataEnd = .;
    _object_mjin_soulSegmentDataSize = ABSOLUTE( _object_mjin_soulSegmentDataEnd - _object_mjin_soulSegmentDataStart );
        _object_mjin_soulSegmentRoDataStart = .;
            build/baserom/object_mjin_soul.o (.rodata)
        _object_mjin_soulSegmentRoDataEnd = .;
    _object_mjin_soulSegmentRoDataSize = ABSOLUTE( _object_mjin_soulSegmentRoDataEnd - _object_mjin_soulSegmentRoDataStart );
        _object_mjin_soulSegmentSDataStart = .;
            build/baserom/object_mjin_soul.o (.sdata)
        . = ALIGN(0x10);
        _object_mjin_soulSegmentSDataEnd = .;
        _object_mjin_soulSegmentOvlStart = .;
            build/baserom/object_mjin_soul.o (.ovl)
        . = ALIGN(0x10);
        _object_mjin_soulSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mjin_soulSegmentOvlEnd - _object_mjin_soulSegmentTextStart );
    _object_mjin_soulSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mjin_soul.bss ADDR(..object_mjin_soul) + SIZEOF(..object_mjin_soul) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mjin_soulSegmentBssStart = .;
            build/baserom/object_mjin_soul.o (.sbss)
            build/baserom/object_mjin_soul.o (.scommon)
            build/baserom/object_mjin_soul.o (.bss)
            build/baserom/object_mjin_soul.o (COMMON)
        . = ALIGN(0x10);
        _object_mjin_soulSegmentBssEnd = .;
        _object_mjin_soulSegmentEnd = .;
    }
    _object_mjin_soulSegmentBssSize = ABSOLUTE( _object_mjin_soulSegmentBssEnd - _object_mjin_soulSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mjin_windSegmentRomStart = _RomSize;
    ..object_mjin_wind : AT(_RomSize)
    {
        _object_mjin_windSegmentStart = .;
        . = ALIGN(0x10);
        _object_mjin_windSegmentTextStart = .;
            build/baserom/object_mjin_wind.o (.text)
        _object_mjin_windSegmentTextEnd = .;
    _object_mjin_windSegmentTextSize = ABSOLUTE( _object_mjin_windSegmentTextEnd - _object_mjin_windSegmentTextStart );
        _object_mjin_windSegmentDataStart = .;
            build/baserom/object_mjin_wind.o (.data)
        _object_mjin_windSegmentDataEnd = .;
    _object_mjin_windSegmentDataSize = ABSOLUTE( _object_mjin_windSegmentDataEnd - _object_mjin_windSegmentDataStart );
        _object_mjin_windSegmentRoDataStart = .;
            build/baserom/object_mjin_wind.o (.rodata)
        _object_mjin_windSegmentRoDataEnd = .;
    _object_mjin_windSegmentRoDataSize = ABSOLUTE( _object_mjin_windSegmentRoDataEnd - _object_mjin_windSegmentRoDataStart );
        _object_mjin_windSegmentSDataStart = .;
            build/baserom/object_mjin_wind.o (.sdata)
        . = ALIGN(0x10);
        _object_mjin_windSegmentSDataEnd = .;
        _object_mjin_windSegmentOvlStart = .;
            build/baserom/object_mjin_wind.o (.ovl)
        . = ALIGN(0x10);
        _object_mjin_windSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mjin_windSegmentOvlEnd - _object_mjin_windSegmentTextStart );
    _object_mjin_windSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mjin_wind.bss ADDR(..object_mjin_wind) + SIZEOF(..object_mjin_wind) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mjin_windSegmentBssStart = .;
            build/baserom/object_mjin_wind.o (.sbss)
            build/baserom/object_mjin_wind.o (.scommon)
            build/baserom/object_mjin_wind.o (.bss)
            build/baserom/object_mjin_wind.o (COMMON)
        . = ALIGN(0x10);
        _object_mjin_windSegmentBssEnd = .;
        _object_mjin_windSegmentEnd = .;
    }
    _object_mjin_windSegmentBssSize = ABSOLUTE( _object_mjin_windSegmentBssEnd - _object_mjin_windSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mjin_okaSegmentRomStart = _RomSize;
    ..object_mjin_oka : AT(_RomSize)
    {
        _object_mjin_okaSegmentStart = .;
        . = ALIGN(0x10);
        _object_mjin_okaSegmentTextStart = .;
            build/baserom/object_mjin_oka.o (.text)
        _object_mjin_okaSegmentTextEnd = .;
    _object_mjin_okaSegmentTextSize = ABSOLUTE( _object_mjin_okaSegmentTextEnd - _object_mjin_okaSegmentTextStart );
        _object_mjin_okaSegmentDataStart = .;
            build/baserom/object_mjin_oka.o (.data)
        _object_mjin_okaSegmentDataEnd = .;
    _object_mjin_okaSegmentDataSize = ABSOLUTE( _object_mjin_okaSegmentDataEnd - _object_mjin_okaSegmentDataStart );
        _object_mjin_okaSegmentRoDataStart = .;
            build/baserom/object_mjin_oka.o (.rodata)
        _object_mjin_okaSegmentRoDataEnd = .;
    _object_mjin_okaSegmentRoDataSize = ABSOLUTE( _object_mjin_okaSegmentRoDataEnd - _object_mjin_okaSegmentRoDataStart );
        _object_mjin_okaSegmentSDataStart = .;
            build/baserom/object_mjin_oka.o (.sdata)
        . = ALIGN(0x10);
        _object_mjin_okaSegmentSDataEnd = .;
        _object_mjin_okaSegmentOvlStart = .;
            build/baserom/object_mjin_oka.o (.ovl)
        . = ALIGN(0x10);
        _object_mjin_okaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mjin_okaSegmentOvlEnd - _object_mjin_okaSegmentTextStart );
    _object_mjin_okaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mjin_oka.bss ADDR(..object_mjin_oka) + SIZEOF(..object_mjin_oka) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mjin_okaSegmentBssStart = .;
            build/baserom/object_mjin_oka.o (.sbss)
            build/baserom/object_mjin_oka.o (.scommon)
            build/baserom/object_mjin_oka.o (.bss)
            build/baserom/object_mjin_oka.o (COMMON)
        . = ALIGN(0x10);
        _object_mjin_okaSegmentBssEnd = .;
        _object_mjin_okaSegmentEnd = .;
    }
    _object_mjin_okaSegmentBssSize = ABSOLUTE( _object_mjin_okaSegmentBssEnd - _object_mjin_okaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_haka_objectsSegmentRomStart = _RomSize;
    ..object_haka_objects : AT(_RomSize)
    {
        _object_haka_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_haka_objectsSegmentTextStart = .;
            build/baserom/object_haka_objects.o (.text)
        _object_haka_objectsSegmentTextEnd = .;
    _object_haka_objectsSegmentTextSize = ABSOLUTE( _object_haka_objectsSegmentTextEnd - _object_haka_objectsSegmentTextStart );
        _object_haka_objectsSegmentDataStart = .;
            build/baserom/object_haka_objects.o (.data)
        _object_haka_objectsSegmentDataEnd = .;
    _object_haka_objectsSegmentDataSize = ABSOLUTE( _object_haka_objectsSegmentDataEnd - _object_haka_objectsSegmentDataStart );
        _object_haka_objectsSegmentRoDataStart = .;
            build/baserom/object_haka_objects.o (.rodata)
        _object_haka_objectsSegmentRoDataEnd = .;
    _object_haka_objectsSegmentRoDataSize = ABSOLUTE( _object_haka_objectsSegmentRoDataEnd - _object_haka_objectsSegmentRoDataStart );
        _object_haka_objectsSegmentSDataStart = .;
            build/baserom/object_haka_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_haka_objectsSegmentSDataEnd = .;
        _object_haka_objectsSegmentOvlStart = .;
            build/baserom/object_haka_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_haka_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_haka_objectsSegmentOvlEnd - _object_haka_objectsSegmentTextStart );
    _object_haka_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_haka_objects.bss ADDR(..object_haka_objects) + SIZEOF(..object_haka_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_haka_objectsSegmentBssStart = .;
            build/baserom/object_haka_objects.o (.sbss)
            build/baserom/object_haka_objects.o (.scommon)
            build/baserom/object_haka_objects.o (.bss)
            build/baserom/object_haka_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_haka_objectsSegmentBssEnd = .;
        _object_haka_objectsSegmentEnd = .;
    }
    _object_haka_objectsSegmentBssSize = ABSOLUTE( _object_haka_objectsSegmentBssEnd - _object_haka_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot06_objectsSegmentRomStart = _RomSize;
    ..object_spot06_objects : AT(_RomSize)
    {
        _object_spot06_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot06_objectsSegmentTextStart = .;
            build/baserom/object_spot06_objects.o (.text)
        _object_spot06_objectsSegmentTextEnd = .;
    _object_spot06_objectsSegmentTextSize = ABSOLUTE( _object_spot06_objectsSegmentTextEnd - _object_spot06_objectsSegmentTextStart );
        _object_spot06_objectsSegmentDataStart = .;
            build/baserom/object_spot06_objects.o (.data)
        _object_spot06_objectsSegmentDataEnd = .;
    _object_spot06_objectsSegmentDataSize = ABSOLUTE( _object_spot06_objectsSegmentDataEnd - _object_spot06_objectsSegmentDataStart );
        _object_spot06_objectsSegmentRoDataStart = .;
            build/baserom/object_spot06_objects.o (.rodata)
        _object_spot06_objectsSegmentRoDataEnd = .;
    _object_spot06_objectsSegmentRoDataSize = ABSOLUTE( _object_spot06_objectsSegmentRoDataEnd - _object_spot06_objectsSegmentRoDataStart );
        _object_spot06_objectsSegmentSDataStart = .;
            build/baserom/object_spot06_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_spot06_objectsSegmentSDataEnd = .;
        _object_spot06_objectsSegmentOvlStart = .;
            build/baserom/object_spot06_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_spot06_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot06_objectsSegmentOvlEnd - _object_spot06_objectsSegmentTextStart );
    _object_spot06_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot06_objects.bss ADDR(..object_spot06_objects) + SIZEOF(..object_spot06_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot06_objectsSegmentBssStart = .;
            build/baserom/object_spot06_objects.o (.sbss)
            build/baserom/object_spot06_objects.o (.scommon)
            build/baserom/object_spot06_objects.o (.bss)
            build/baserom/object_spot06_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_spot06_objectsSegmentBssEnd = .;
        _object_spot06_objectsSegmentEnd = .;
    }
    _object_spot06_objectsSegmentBssSize = ABSOLUTE( _object_spot06_objectsSegmentBssEnd - _object_spot06_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ice_objectsSegmentRomStart = _RomSize;
    ..object_ice_objects : AT(_RomSize)
    {
        _object_ice_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_ice_objectsSegmentTextStart = .;
            build/baserom/object_ice_objects.o (.text)
        _object_ice_objectsSegmentTextEnd = .;
    _object_ice_objectsSegmentTextSize = ABSOLUTE( _object_ice_objectsSegmentTextEnd - _object_ice_objectsSegmentTextStart );
        _object_ice_objectsSegmentDataStart = .;
            build/baserom/object_ice_objects.o (.data)
        _object_ice_objectsSegmentDataEnd = .;
    _object_ice_objectsSegmentDataSize = ABSOLUTE( _object_ice_objectsSegmentDataEnd - _object_ice_objectsSegmentDataStart );
        _object_ice_objectsSegmentRoDataStart = .;
            build/baserom/object_ice_objects.o (.rodata)
        _object_ice_objectsSegmentRoDataEnd = .;
    _object_ice_objectsSegmentRoDataSize = ABSOLUTE( _object_ice_objectsSegmentRoDataEnd - _object_ice_objectsSegmentRoDataStart );
        _object_ice_objectsSegmentSDataStart = .;
            build/baserom/object_ice_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_ice_objectsSegmentSDataEnd = .;
        _object_ice_objectsSegmentOvlStart = .;
            build/baserom/object_ice_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_ice_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_ice_objectsSegmentOvlEnd - _object_ice_objectsSegmentTextStart );
    _object_ice_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ice_objects.bss ADDR(..object_ice_objects) + SIZEOF(..object_ice_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ice_objectsSegmentBssStart = .;
            build/baserom/object_ice_objects.o (.sbss)
            build/baserom/object_ice_objects.o (.scommon)
            build/baserom/object_ice_objects.o (.bss)
            build/baserom/object_ice_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_ice_objectsSegmentBssEnd = .;
        _object_ice_objectsSegmentEnd = .;
    }
    _object_ice_objectsSegmentBssSize = ABSOLUTE( _object_ice_objectsSegmentBssEnd - _object_ice_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_relay_objectsSegmentRomStart = _RomSize;
    ..object_relay_objects : AT(_RomSize)
    {
        _object_relay_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_relay_objectsSegmentTextStart = .;
            build/baserom/object_relay_objects.o (.text)
        _object_relay_objectsSegmentTextEnd = .;
    _object_relay_objectsSegmentTextSize = ABSOLUTE( _object_relay_objectsSegmentTextEnd - _object_relay_objectsSegmentTextStart );
        _object_relay_objectsSegmentDataStart = .;
            build/baserom/object_relay_objects.o (.data)
        _object_relay_objectsSegmentDataEnd = .;
    _object_relay_objectsSegmentDataSize = ABSOLUTE( _object_relay_objectsSegmentDataEnd - _object_relay_objectsSegmentDataStart );
        _object_relay_objectsSegmentRoDataStart = .;
            build/baserom/object_relay_objects.o (.rodata)
        _object_relay_objectsSegmentRoDataEnd = .;
    _object_relay_objectsSegmentRoDataSize = ABSOLUTE( _object_relay_objectsSegmentRoDataEnd - _object_relay_objectsSegmentRoDataStart );
        _object_relay_objectsSegmentSDataStart = .;
            build/baserom/object_relay_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_relay_objectsSegmentSDataEnd = .;
        _object_relay_objectsSegmentOvlStart = .;
            build/baserom/object_relay_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_relay_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_relay_objectsSegmentOvlEnd - _object_relay_objectsSegmentTextStart );
    _object_relay_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_relay_objects.bss ADDR(..object_relay_objects) + SIZEOF(..object_relay_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_relay_objectsSegmentBssStart = .;
            build/baserom/object_relay_objects.o (.sbss)
            build/baserom/object_relay_objects.o (.scommon)
            build/baserom/object_relay_objects.o (.bss)
            build/baserom/object_relay_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_relay_objectsSegmentBssEnd = .;
        _object_relay_objectsSegmentEnd = .;
    }
    _object_relay_objectsSegmentBssSize = ABSOLUTE( _object_relay_objectsSegmentBssEnd - _object_relay_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mori_hineri1aSegmentRomStart = _RomSize;
    ..object_mori_hineri1a : AT(_RomSize)
    {
        _object_mori_hineri1aSegmentStart = .;
        . = ALIGN(0x10);
        _object_mori_hineri1aSegmentTextStart = .;
            build/baserom/object_mori_hineri1a.o (.text)
        _object_mori_hineri1aSegmentTextEnd = .;
    _object_mori_hineri1aSegmentTextSize = ABSOLUTE( _object_mori_hineri1aSegmentTextEnd - _object_mori_hineri1aSegmentTextStart );
        _object_mori_hineri1aSegmentDataStart = .;
            build/baserom/object_mori_hineri1a.o (.data)
        _object_mori_hineri1aSegmentDataEnd = .;
    _object_mori_hineri1aSegmentDataSize = ABSOLUTE( _object_mori_hineri1aSegmentDataEnd - _object_mori_hineri1aSegmentDataStart );
        _object_mori_hineri1aSegmentRoDataStart = .;
            build/baserom/object_mori_hineri1a.o (.rodata)
        _object_mori_hineri1aSegmentRoDataEnd = .;
    _object_mori_hineri1aSegmentRoDataSize = ABSOLUTE( _object_mori_hineri1aSegmentRoDataEnd - _object_mori_hineri1aSegmentRoDataStart );
        _object_mori_hineri1aSegmentSDataStart = .;
            build/baserom/object_mori_hineri1a.o (.sdata)
        . = ALIGN(0x10);
        _object_mori_hineri1aSegmentSDataEnd = .;
        _object_mori_hineri1aSegmentOvlStart = .;
            build/baserom/object_mori_hineri1a.o (.ovl)
        . = ALIGN(0x10);
        _object_mori_hineri1aSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mori_hineri1aSegmentOvlEnd - _object_mori_hineri1aSegmentTextStart );
    _object_mori_hineri1aSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mori_hineri1a.bss ADDR(..object_mori_hineri1a) + SIZEOF(..object_mori_hineri1a) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mori_hineri1aSegmentBssStart = .;
            build/baserom/object_mori_hineri1a.o (.sbss)
            build/baserom/object_mori_hineri1a.o (.scommon)
            build/baserom/object_mori_hineri1a.o (.bss)
            build/baserom/object_mori_hineri1a.o (COMMON)
        . = ALIGN(0x10);
        _object_mori_hineri1aSegmentBssEnd = .;
        _object_mori_hineri1aSegmentEnd = .;
    }
    _object_mori_hineri1aSegmentBssSize = ABSOLUTE( _object_mori_hineri1aSegmentBssEnd - _object_mori_hineri1aSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mori_hineri2SegmentRomStart = _RomSize;
    ..object_mori_hineri2 : AT(_RomSize)
    {
        _object_mori_hineri2SegmentStart = .;
        . = ALIGN(0x10);
        _object_mori_hineri2SegmentTextStart = .;
            build/baserom/object_mori_hineri2.o (.text)
        _object_mori_hineri2SegmentTextEnd = .;
    _object_mori_hineri2SegmentTextSize = ABSOLUTE( _object_mori_hineri2SegmentTextEnd - _object_mori_hineri2SegmentTextStart );
        _object_mori_hineri2SegmentDataStart = .;
            build/baserom/object_mori_hineri2.o (.data)
        _object_mori_hineri2SegmentDataEnd = .;
    _object_mori_hineri2SegmentDataSize = ABSOLUTE( _object_mori_hineri2SegmentDataEnd - _object_mori_hineri2SegmentDataStart );
        _object_mori_hineri2SegmentRoDataStart = .;
            build/baserom/object_mori_hineri2.o (.rodata)
        _object_mori_hineri2SegmentRoDataEnd = .;
    _object_mori_hineri2SegmentRoDataSize = ABSOLUTE( _object_mori_hineri2SegmentRoDataEnd - _object_mori_hineri2SegmentRoDataStart );
        _object_mori_hineri2SegmentSDataStart = .;
            build/baserom/object_mori_hineri2.o (.sdata)
        . = ALIGN(0x10);
        _object_mori_hineri2SegmentSDataEnd = .;
        _object_mori_hineri2SegmentOvlStart = .;
            build/baserom/object_mori_hineri2.o (.ovl)
        . = ALIGN(0x10);
        _object_mori_hineri2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_mori_hineri2SegmentOvlEnd - _object_mori_hineri2SegmentTextStart );
    _object_mori_hineri2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mori_hineri2.bss ADDR(..object_mori_hineri2) + SIZEOF(..object_mori_hineri2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mori_hineri2SegmentBssStart = .;
            build/baserom/object_mori_hineri2.o (.sbss)
            build/baserom/object_mori_hineri2.o (.scommon)
            build/baserom/object_mori_hineri2.o (.bss)
            build/baserom/object_mori_hineri2.o (COMMON)
        . = ALIGN(0x10);
        _object_mori_hineri2SegmentBssEnd = .;
        _object_mori_hineri2SegmentEnd = .;
    }
    _object_mori_hineri2SegmentBssSize = ABSOLUTE( _object_mori_hineri2SegmentBssEnd - _object_mori_hineri2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mori_hineri2aSegmentRomStart = _RomSize;
    ..object_mori_hineri2a : AT(_RomSize)
    {
        _object_mori_hineri2aSegmentStart = .;
        . = ALIGN(0x10);
        _object_mori_hineri2aSegmentTextStart = .;
            build/baserom/object_mori_hineri2a.o (.text)
        _object_mori_hineri2aSegmentTextEnd = .;
    _object_mori_hineri2aSegmentTextSize = ABSOLUTE( _object_mori_hineri2aSegmentTextEnd - _object_mori_hineri2aSegmentTextStart );
        _object_mori_hineri2aSegmentDataStart = .;
            build/baserom/object_mori_hineri2a.o (.data)
        _object_mori_hineri2aSegmentDataEnd = .;
    _object_mori_hineri2aSegmentDataSize = ABSOLUTE( _object_mori_hineri2aSegmentDataEnd - _object_mori_hineri2aSegmentDataStart );
        _object_mori_hineri2aSegmentRoDataStart = .;
            build/baserom/object_mori_hineri2a.o (.rodata)
        _object_mori_hineri2aSegmentRoDataEnd = .;
    _object_mori_hineri2aSegmentRoDataSize = ABSOLUTE( _object_mori_hineri2aSegmentRoDataEnd - _object_mori_hineri2aSegmentRoDataStart );
        _object_mori_hineri2aSegmentSDataStart = .;
            build/baserom/object_mori_hineri2a.o (.sdata)
        . = ALIGN(0x10);
        _object_mori_hineri2aSegmentSDataEnd = .;
        _object_mori_hineri2aSegmentOvlStart = .;
            build/baserom/object_mori_hineri2a.o (.ovl)
        . = ALIGN(0x10);
        _object_mori_hineri2aSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mori_hineri2aSegmentOvlEnd - _object_mori_hineri2aSegmentTextStart );
    _object_mori_hineri2aSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mori_hineri2a.bss ADDR(..object_mori_hineri2a) + SIZEOF(..object_mori_hineri2a) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mori_hineri2aSegmentBssStart = .;
            build/baserom/object_mori_hineri2a.o (.sbss)
            build/baserom/object_mori_hineri2a.o (.scommon)
            build/baserom/object_mori_hineri2a.o (.bss)
            build/baserom/object_mori_hineri2a.o (COMMON)
        . = ALIGN(0x10);
        _object_mori_hineri2aSegmentBssEnd = .;
        _object_mori_hineri2aSegmentEnd = .;
    }
    _object_mori_hineri2aSegmentBssSize = ABSOLUTE( _object_mori_hineri2aSegmentBssEnd - _object_mori_hineri2aSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mori_objectsSegmentRomStart = _RomSize;
    ..object_mori_objects : AT(_RomSize)
    {
        _object_mori_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_mori_objectsSegmentTextStart = .;
            build/baserom/object_mori_objects.o (.text)
        _object_mori_objectsSegmentTextEnd = .;
    _object_mori_objectsSegmentTextSize = ABSOLUTE( _object_mori_objectsSegmentTextEnd - _object_mori_objectsSegmentTextStart );
        _object_mori_objectsSegmentDataStart = .;
            build/baserom/object_mori_objects.o (.data)
        _object_mori_objectsSegmentDataEnd = .;
    _object_mori_objectsSegmentDataSize = ABSOLUTE( _object_mori_objectsSegmentDataEnd - _object_mori_objectsSegmentDataStart );
        _object_mori_objectsSegmentRoDataStart = .;
            build/baserom/object_mori_objects.o (.rodata)
        _object_mori_objectsSegmentRoDataEnd = .;
    _object_mori_objectsSegmentRoDataSize = ABSOLUTE( _object_mori_objectsSegmentRoDataEnd - _object_mori_objectsSegmentRoDataStart );
        _object_mori_objectsSegmentSDataStart = .;
            build/baserom/object_mori_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_mori_objectsSegmentSDataEnd = .;
        _object_mori_objectsSegmentOvlStart = .;
            build/baserom/object_mori_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_mori_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mori_objectsSegmentOvlEnd - _object_mori_objectsSegmentTextStart );
    _object_mori_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mori_objects.bss ADDR(..object_mori_objects) + SIZEOF(..object_mori_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mori_objectsSegmentBssStart = .;
            build/baserom/object_mori_objects.o (.sbss)
            build/baserom/object_mori_objects.o (.scommon)
            build/baserom/object_mori_objects.o (.bss)
            build/baserom/object_mori_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_mori_objectsSegmentBssEnd = .;
        _object_mori_objectsSegmentEnd = .;
    }
    _object_mori_objectsSegmentBssSize = ABSOLUTE( _object_mori_objectsSegmentBssEnd - _object_mori_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mori_texSegmentRomStart = _RomSize;
    ..object_mori_tex : AT(_RomSize)
    {
        _object_mori_texSegmentStart = .;
        . = ALIGN(0x10);
        _object_mori_texSegmentTextStart = .;
            build/baserom/object_mori_tex.o (.text)
        _object_mori_texSegmentTextEnd = .;
    _object_mori_texSegmentTextSize = ABSOLUTE( _object_mori_texSegmentTextEnd - _object_mori_texSegmentTextStart );
        _object_mori_texSegmentDataStart = .;
            build/baserom/object_mori_tex.o (.data)
        _object_mori_texSegmentDataEnd = .;
    _object_mori_texSegmentDataSize = ABSOLUTE( _object_mori_texSegmentDataEnd - _object_mori_texSegmentDataStart );
        _object_mori_texSegmentRoDataStart = .;
            build/baserom/object_mori_tex.o (.rodata)
        _object_mori_texSegmentRoDataEnd = .;
    _object_mori_texSegmentRoDataSize = ABSOLUTE( _object_mori_texSegmentRoDataEnd - _object_mori_texSegmentRoDataStart );
        _object_mori_texSegmentSDataStart = .;
            build/baserom/object_mori_tex.o (.sdata)
        . = ALIGN(0x10);
        _object_mori_texSegmentSDataEnd = .;
        _object_mori_texSegmentOvlStart = .;
            build/baserom/object_mori_tex.o (.ovl)
        . = ALIGN(0x10);
        _object_mori_texSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mori_texSegmentOvlEnd - _object_mori_texSegmentTextStart );
    _object_mori_texSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mori_tex.bss ADDR(..object_mori_tex) + SIZEOF(..object_mori_tex) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mori_texSegmentBssStart = .;
            build/baserom/object_mori_tex.o (.sbss)
            build/baserom/object_mori_tex.o (.scommon)
            build/baserom/object_mori_tex.o (.bss)
            build/baserom/object_mori_tex.o (COMMON)
        . = ALIGN(0x10);
        _object_mori_texSegmentBssEnd = .;
        _object_mori_texSegmentEnd = .;
    }
    _object_mori_texSegmentBssSize = ABSOLUTE( _object_mori_texSegmentBssEnd - _object_mori_texSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot08_objSegmentRomStart = _RomSize;
    ..object_spot08_obj : AT(_RomSize)
    {
        _object_spot08_objSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot08_objSegmentTextStart = .;
            build/baserom/object_spot08_obj.o (.text)
        _object_spot08_objSegmentTextEnd = .;
    _object_spot08_objSegmentTextSize = ABSOLUTE( _object_spot08_objSegmentTextEnd - _object_spot08_objSegmentTextStart );
        _object_spot08_objSegmentDataStart = .;
            build/baserom/object_spot08_obj.o (.data)
        _object_spot08_objSegmentDataEnd = .;
    _object_spot08_objSegmentDataSize = ABSOLUTE( _object_spot08_objSegmentDataEnd - _object_spot08_objSegmentDataStart );
        _object_spot08_objSegmentRoDataStart = .;
            build/baserom/object_spot08_obj.o (.rodata)
        _object_spot08_objSegmentRoDataEnd = .;
    _object_spot08_objSegmentRoDataSize = ABSOLUTE( _object_spot08_objSegmentRoDataEnd - _object_spot08_objSegmentRoDataStart );
        _object_spot08_objSegmentSDataStart = .;
            build/baserom/object_spot08_obj.o (.sdata)
        . = ALIGN(0x10);
        _object_spot08_objSegmentSDataEnd = .;
        _object_spot08_objSegmentOvlStart = .;
            build/baserom/object_spot08_obj.o (.ovl)
        . = ALIGN(0x10);
        _object_spot08_objSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot08_objSegmentOvlEnd - _object_spot08_objSegmentTextStart );
    _object_spot08_objSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot08_obj.bss ADDR(..object_spot08_obj) + SIZEOF(..object_spot08_obj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot08_objSegmentBssStart = .;
            build/baserom/object_spot08_obj.o (.sbss)
            build/baserom/object_spot08_obj.o (.scommon)
            build/baserom/object_spot08_obj.o (.bss)
            build/baserom/object_spot08_obj.o (COMMON)
        . = ALIGN(0x10);
        _object_spot08_objSegmentBssEnd = .;
        _object_spot08_objSegmentEnd = .;
    }
    _object_spot08_objSegmentBssSize = ABSOLUTE( _object_spot08_objSegmentBssEnd - _object_spot08_objSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_warp2SegmentRomStart = _RomSize;
    ..object_warp2 : AT(_RomSize)
    {
        _object_warp2SegmentStart = .;
        . = ALIGN(0x10);
        _object_warp2SegmentTextStart = .;
            build/baserom/object_warp2.o (.text)
        _object_warp2SegmentTextEnd = .;
    _object_warp2SegmentTextSize = ABSOLUTE( _object_warp2SegmentTextEnd - _object_warp2SegmentTextStart );
        _object_warp2SegmentDataStart = .;
            build/baserom/object_warp2.o (.data)
        _object_warp2SegmentDataEnd = .;
    _object_warp2SegmentDataSize = ABSOLUTE( _object_warp2SegmentDataEnd - _object_warp2SegmentDataStart );
        _object_warp2SegmentRoDataStart = .;
            build/baserom/object_warp2.o (.rodata)
        _object_warp2SegmentRoDataEnd = .;
    _object_warp2SegmentRoDataSize = ABSOLUTE( _object_warp2SegmentRoDataEnd - _object_warp2SegmentRoDataStart );
        _object_warp2SegmentSDataStart = .;
            build/baserom/object_warp2.o (.sdata)
        . = ALIGN(0x10);
        _object_warp2SegmentSDataEnd = .;
        _object_warp2SegmentOvlStart = .;
            build/baserom/object_warp2.o (.ovl)
        . = ALIGN(0x10);
        _object_warp2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_warp2SegmentOvlEnd - _object_warp2SegmentTextStart );
    _object_warp2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_warp2.bss ADDR(..object_warp2) + SIZEOF(..object_warp2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_warp2SegmentBssStart = .;
            build/baserom/object_warp2.o (.sbss)
            build/baserom/object_warp2.o (.scommon)
            build/baserom/object_warp2.o (.bss)
            build/baserom/object_warp2.o (COMMON)
        . = ALIGN(0x10);
        _object_warp2SegmentBssEnd = .;
        _object_warp2SegmentEnd = .;
    }
    _object_warp2SegmentBssSize = ABSOLUTE( _object_warp2SegmentBssEnd - _object_warp2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_hataSegmentRomStart = _RomSize;
    ..object_hata : AT(_RomSize)
    {
        _object_hataSegmentStart = .;
        . = ALIGN(0x10);
        _object_hataSegmentTextStart = .;
            build/baserom/object_hata.o (.text)
        _object_hataSegmentTextEnd = .;
    _object_hataSegmentTextSize = ABSOLUTE( _object_hataSegmentTextEnd - _object_hataSegmentTextStart );
        _object_hataSegmentDataStart = .;
            build/baserom/object_hata.o (.data)
        _object_hataSegmentDataEnd = .;
    _object_hataSegmentDataSize = ABSOLUTE( _object_hataSegmentDataEnd - _object_hataSegmentDataStart );
        _object_hataSegmentRoDataStart = .;
            build/baserom/object_hata.o (.rodata)
        _object_hataSegmentRoDataEnd = .;
    _object_hataSegmentRoDataSize = ABSOLUTE( _object_hataSegmentRoDataEnd - _object_hataSegmentRoDataStart );
        _object_hataSegmentSDataStart = .;
            build/baserom/object_hata.o (.sdata)
        . = ALIGN(0x10);
        _object_hataSegmentSDataEnd = .;
        _object_hataSegmentOvlStart = .;
            build/baserom/object_hata.o (.ovl)
        . = ALIGN(0x10);
        _object_hataSegmentOvlEnd = .;
    }
    _RomSize += ( _object_hataSegmentOvlEnd - _object_hataSegmentTextStart );
    _object_hataSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_hata.bss ADDR(..object_hata) + SIZEOF(..object_hata) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_hataSegmentBssStart = .;
            build/baserom/object_hata.o (.sbss)
            build/baserom/object_hata.o (.scommon)
            build/baserom/object_hata.o (.bss)
            build/baserom/object_hata.o (COMMON)
        . = ALIGN(0x10);
        _object_hataSegmentBssEnd = .;
        _object_hataSegmentEnd = .;
    }
    _object_hataSegmentBssSize = ABSOLUTE( _object_hataSegmentBssEnd - _object_hataSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_birdSegmentRomStart = _RomSize;
    ..object_bird : AT(_RomSize)
    {
        _object_birdSegmentStart = .;
        . = ALIGN(0x10);
        _object_birdSegmentTextStart = .;
            build/baserom/object_bird.o (.text)
        _object_birdSegmentTextEnd = .;
    _object_birdSegmentTextSize = ABSOLUTE( _object_birdSegmentTextEnd - _object_birdSegmentTextStart );
        _object_birdSegmentDataStart = .;
            build/baserom/object_bird.o (.data)
        _object_birdSegmentDataEnd = .;
    _object_birdSegmentDataSize = ABSOLUTE( _object_birdSegmentDataEnd - _object_birdSegmentDataStart );
        _object_birdSegmentRoDataStart = .;
            build/baserom/object_bird.o (.rodata)
        _object_birdSegmentRoDataEnd = .;
    _object_birdSegmentRoDataSize = ABSOLUTE( _object_birdSegmentRoDataEnd - _object_birdSegmentRoDataStart );
        _object_birdSegmentSDataStart = .;
            build/baserom/object_bird.o (.sdata)
        . = ALIGN(0x10);
        _object_birdSegmentSDataEnd = .;
        _object_birdSegmentOvlStart = .;
            build/baserom/object_bird.o (.ovl)
        . = ALIGN(0x10);
        _object_birdSegmentOvlEnd = .;
    }
    _RomSize += ( _object_birdSegmentOvlEnd - _object_birdSegmentTextStart );
    _object_birdSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bird.bss ADDR(..object_bird) + SIZEOF(..object_bird) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_birdSegmentBssStart = .;
            build/baserom/object_bird.o (.sbss)
            build/baserom/object_bird.o (.scommon)
            build/baserom/object_bird.o (.bss)
            build/baserom/object_bird.o (COMMON)
        . = ALIGN(0x10);
        _object_birdSegmentBssEnd = .;
        _object_birdSegmentEnd = .;
    }
    _object_birdSegmentBssSize = ABSOLUTE( _object_birdSegmentBssEnd - _object_birdSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_wood02SegmentRomStart = _RomSize;
    ..object_wood02 : AT(_RomSize)
    {
        _object_wood02SegmentStart = .;
        . = ALIGN(0x10);
        _object_wood02SegmentTextStart = .;
            build/baserom/object_wood02.o (.text)
        _object_wood02SegmentTextEnd = .;
    _object_wood02SegmentTextSize = ABSOLUTE( _object_wood02SegmentTextEnd - _object_wood02SegmentTextStart );
        _object_wood02SegmentDataStart = .;
            build/baserom/object_wood02.o (.data)
        _object_wood02SegmentDataEnd = .;
    _object_wood02SegmentDataSize = ABSOLUTE( _object_wood02SegmentDataEnd - _object_wood02SegmentDataStart );
        _object_wood02SegmentRoDataStart = .;
            build/baserom/object_wood02.o (.rodata)
        _object_wood02SegmentRoDataEnd = .;
    _object_wood02SegmentRoDataSize = ABSOLUTE( _object_wood02SegmentRoDataEnd - _object_wood02SegmentRoDataStart );
        _object_wood02SegmentSDataStart = .;
            build/baserom/object_wood02.o (.sdata)
        . = ALIGN(0x10);
        _object_wood02SegmentSDataEnd = .;
        _object_wood02SegmentOvlStart = .;
            build/baserom/object_wood02.o (.ovl)
        . = ALIGN(0x10);
        _object_wood02SegmentOvlEnd = .;
    }
    _RomSize += ( _object_wood02SegmentOvlEnd - _object_wood02SegmentTextStart );
    _object_wood02SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_wood02.bss ADDR(..object_wood02) + SIZEOF(..object_wood02) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_wood02SegmentBssStart = .;
            build/baserom/object_wood02.o (.sbss)
            build/baserom/object_wood02.o (.scommon)
            build/baserom/object_wood02.o (.bss)
            build/baserom/object_wood02.o (COMMON)
        . = ALIGN(0x10);
        _object_wood02SegmentBssEnd = .;
        _object_wood02SegmentEnd = .;
    }
    _object_wood02SegmentBssSize = ABSOLUTE( _object_wood02SegmentBssEnd - _object_wood02SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_lightboxSegmentRomStart = _RomSize;
    ..object_lightbox : AT(_RomSize)
    {
        _object_lightboxSegmentStart = .;
        . = ALIGN(0x10);
        _object_lightboxSegmentTextStart = .;
            build/baserom/object_lightbox.o (.text)
        _object_lightboxSegmentTextEnd = .;
    _object_lightboxSegmentTextSize = ABSOLUTE( _object_lightboxSegmentTextEnd - _object_lightboxSegmentTextStart );
        _object_lightboxSegmentDataStart = .;
            build/baserom/object_lightbox.o (.data)
        _object_lightboxSegmentDataEnd = .;
    _object_lightboxSegmentDataSize = ABSOLUTE( _object_lightboxSegmentDataEnd - _object_lightboxSegmentDataStart );
        _object_lightboxSegmentRoDataStart = .;
            build/baserom/object_lightbox.o (.rodata)
        _object_lightboxSegmentRoDataEnd = .;
    _object_lightboxSegmentRoDataSize = ABSOLUTE( _object_lightboxSegmentRoDataEnd - _object_lightboxSegmentRoDataStart );
        _object_lightboxSegmentSDataStart = .;
            build/baserom/object_lightbox.o (.sdata)
        . = ALIGN(0x10);
        _object_lightboxSegmentSDataEnd = .;
        _object_lightboxSegmentOvlStart = .;
            build/baserom/object_lightbox.o (.ovl)
        . = ALIGN(0x10);
        _object_lightboxSegmentOvlEnd = .;
    }
    _RomSize += ( _object_lightboxSegmentOvlEnd - _object_lightboxSegmentTextStart );
    _object_lightboxSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_lightbox.bss ADDR(..object_lightbox) + SIZEOF(..object_lightbox) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_lightboxSegmentBssStart = .;
            build/baserom/object_lightbox.o (.sbss)
            build/baserom/object_lightbox.o (.scommon)
            build/baserom/object_lightbox.o (.bss)
            build/baserom/object_lightbox.o (COMMON)
        . = ALIGN(0x10);
        _object_lightboxSegmentBssEnd = .;
        _object_lightboxSegmentEnd = .;
    }
    _object_lightboxSegmentBssSize = ABSOLUTE( _object_lightboxSegmentBssEnd - _object_lightboxSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_pu_boxSegmentRomStart = _RomSize;
    ..object_pu_box : AT(_RomSize)
    {
        _object_pu_boxSegmentStart = .;
        . = ALIGN(0x10);
        _object_pu_boxSegmentTextStart = .;
            build/baserom/object_pu_box.o (.text)
        _object_pu_boxSegmentTextEnd = .;
    _object_pu_boxSegmentTextSize = ABSOLUTE( _object_pu_boxSegmentTextEnd - _object_pu_boxSegmentTextStart );
        _object_pu_boxSegmentDataStart = .;
            build/baserom/object_pu_box.o (.data)
        _object_pu_boxSegmentDataEnd = .;
    _object_pu_boxSegmentDataSize = ABSOLUTE( _object_pu_boxSegmentDataEnd - _object_pu_boxSegmentDataStart );
        _object_pu_boxSegmentRoDataStart = .;
            build/baserom/object_pu_box.o (.rodata)
        _object_pu_boxSegmentRoDataEnd = .;
    _object_pu_boxSegmentRoDataSize = ABSOLUTE( _object_pu_boxSegmentRoDataEnd - _object_pu_boxSegmentRoDataStart );
        _object_pu_boxSegmentSDataStart = .;
            build/baserom/object_pu_box.o (.sdata)
        . = ALIGN(0x10);
        _object_pu_boxSegmentSDataEnd = .;
        _object_pu_boxSegmentOvlStart = .;
            build/baserom/object_pu_box.o (.ovl)
        . = ALIGN(0x10);
        _object_pu_boxSegmentOvlEnd = .;
    }
    _RomSize += ( _object_pu_boxSegmentOvlEnd - _object_pu_boxSegmentTextStart );
    _object_pu_boxSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_pu_box.bss ADDR(..object_pu_box) + SIZEOF(..object_pu_box) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_pu_boxSegmentBssStart = .;
            build/baserom/object_pu_box.o (.sbss)
            build/baserom/object_pu_box.o (.scommon)
            build/baserom/object_pu_box.o (.bss)
            build/baserom/object_pu_box.o (COMMON)
        . = ALIGN(0x10);
        _object_pu_boxSegmentBssEnd = .;
        _object_pu_boxSegmentEnd = .;
    }
    _object_pu_boxSegmentBssSize = ABSOLUTE( _object_pu_boxSegmentBssEnd - _object_pu_boxSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_trapSegmentRomStart = _RomSize;
    ..object_trap : AT(_RomSize)
    {
        _object_trapSegmentStart = .;
        . = ALIGN(0x10);
        _object_trapSegmentTextStart = .;
            build/baserom/object_trap.o (.text)
        _object_trapSegmentTextEnd = .;
    _object_trapSegmentTextSize = ABSOLUTE( _object_trapSegmentTextEnd - _object_trapSegmentTextStart );
        _object_trapSegmentDataStart = .;
            build/baserom/object_trap.o (.data)
        _object_trapSegmentDataEnd = .;
    _object_trapSegmentDataSize = ABSOLUTE( _object_trapSegmentDataEnd - _object_trapSegmentDataStart );
        _object_trapSegmentRoDataStart = .;
            build/baserom/object_trap.o (.rodata)
        _object_trapSegmentRoDataEnd = .;
    _object_trapSegmentRoDataSize = ABSOLUTE( _object_trapSegmentRoDataEnd - _object_trapSegmentRoDataStart );
        _object_trapSegmentSDataStart = .;
            build/baserom/object_trap.o (.sdata)
        . = ALIGN(0x10);
        _object_trapSegmentSDataEnd = .;
        _object_trapSegmentOvlStart = .;
            build/baserom/object_trap.o (.ovl)
        . = ALIGN(0x10);
        _object_trapSegmentOvlEnd = .;
    }
    _RomSize += ( _object_trapSegmentOvlEnd - _object_trapSegmentTextStart );
    _object_trapSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_trap.bss ADDR(..object_trap) + SIZEOF(..object_trap) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_trapSegmentBssStart = .;
            build/baserom/object_trap.o (.sbss)
            build/baserom/object_trap.o (.scommon)
            build/baserom/object_trap.o (.bss)
            build/baserom/object_trap.o (COMMON)
        . = ALIGN(0x10);
        _object_trapSegmentBssEnd = .;
        _object_trapSegmentEnd = .;
    }
    _object_trapSegmentBssSize = ABSOLUTE( _object_trapSegmentBssEnd - _object_trapSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_vaseSegmentRomStart = _RomSize;
    ..object_vase : AT(_RomSize)
    {
        _object_vaseSegmentStart = .;
        . = ALIGN(0x10);
        _object_vaseSegmentTextStart = .;
            build/baserom/object_vase.o (.text)
        _object_vaseSegmentTextEnd = .;
    _object_vaseSegmentTextSize = ABSOLUTE( _object_vaseSegmentTextEnd - _object_vaseSegmentTextStart );
        _object_vaseSegmentDataStart = .;
            build/baserom/object_vase.o (.data)
        _object_vaseSegmentDataEnd = .;
    _object_vaseSegmentDataSize = ABSOLUTE( _object_vaseSegmentDataEnd - _object_vaseSegmentDataStart );
        _object_vaseSegmentRoDataStart = .;
            build/baserom/object_vase.o (.rodata)
        _object_vaseSegmentRoDataEnd = .;
    _object_vaseSegmentRoDataSize = ABSOLUTE( _object_vaseSegmentRoDataEnd - _object_vaseSegmentRoDataStart );
        _object_vaseSegmentSDataStart = .;
            build/baserom/object_vase.o (.sdata)
        . = ALIGN(0x10);
        _object_vaseSegmentSDataEnd = .;
        _object_vaseSegmentOvlStart = .;
            build/baserom/object_vase.o (.ovl)
        . = ALIGN(0x10);
        _object_vaseSegmentOvlEnd = .;
    }
    _RomSize += ( _object_vaseSegmentOvlEnd - _object_vaseSegmentTextStart );
    _object_vaseSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_vase.bss ADDR(..object_vase) + SIZEOF(..object_vase) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_vaseSegmentBssStart = .;
            build/baserom/object_vase.o (.sbss)
            build/baserom/object_vase.o (.scommon)
            build/baserom/object_vase.o (.bss)
            build/baserom/object_vase.o (COMMON)
        . = ALIGN(0x10);
        _object_vaseSegmentBssEnd = .;
        _object_vaseSegmentEnd = .;
    }
    _object_vaseSegmentBssSize = ABSOLUTE( _object_vaseSegmentBssEnd - _object_vaseSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_imSegmentRomStart = _RomSize;
    ..object_im : AT(_RomSize)
    {
        _object_imSegmentStart = .;
        . = ALIGN(0x10);
        _object_imSegmentTextStart = .;
            build/baserom/object_im.o (.text)
        _object_imSegmentTextEnd = .;
    _object_imSegmentTextSize = ABSOLUTE( _object_imSegmentTextEnd - _object_imSegmentTextStart );
        _object_imSegmentDataStart = .;
            build/baserom/object_im.o (.data)
        _object_imSegmentDataEnd = .;
    _object_imSegmentDataSize = ABSOLUTE( _object_imSegmentDataEnd - _object_imSegmentDataStart );
        _object_imSegmentRoDataStart = .;
            build/baserom/object_im.o (.rodata)
        _object_imSegmentRoDataEnd = .;
    _object_imSegmentRoDataSize = ABSOLUTE( _object_imSegmentRoDataEnd - _object_imSegmentRoDataStart );
        _object_imSegmentSDataStart = .;
            build/baserom/object_im.o (.sdata)
        . = ALIGN(0x10);
        _object_imSegmentSDataEnd = .;
        _object_imSegmentOvlStart = .;
            build/baserom/object_im.o (.ovl)
        . = ALIGN(0x10);
        _object_imSegmentOvlEnd = .;
    }
    _RomSize += ( _object_imSegmentOvlEnd - _object_imSegmentTextStart );
    _object_imSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_im.bss ADDR(..object_im) + SIZEOF(..object_im) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_imSegmentBssStart = .;
            build/baserom/object_im.o (.sbss)
            build/baserom/object_im.o (.scommon)
            build/baserom/object_im.o (.bss)
            build/baserom/object_im.o (COMMON)
        . = ALIGN(0x10);
        _object_imSegmentBssEnd = .;
        _object_imSegmentEnd = .;
    }
    _object_imSegmentBssSize = ABSOLUTE( _object_imSegmentBssEnd - _object_imSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_taSegmentRomStart = _RomSize;
    ..object_ta : AT(_RomSize)
    {
        _object_taSegmentStart = .;
        . = ALIGN(0x10);
        _object_taSegmentTextStart = .;
            build/baserom/object_ta.o (.text)
        _object_taSegmentTextEnd = .;
    _object_taSegmentTextSize = ABSOLUTE( _object_taSegmentTextEnd - _object_taSegmentTextStart );
        _object_taSegmentDataStart = .;
            build/baserom/object_ta.o (.data)
        _object_taSegmentDataEnd = .;
    _object_taSegmentDataSize = ABSOLUTE( _object_taSegmentDataEnd - _object_taSegmentDataStart );
        _object_taSegmentRoDataStart = .;
            build/baserom/object_ta.o (.rodata)
        _object_taSegmentRoDataEnd = .;
    _object_taSegmentRoDataSize = ABSOLUTE( _object_taSegmentRoDataEnd - _object_taSegmentRoDataStart );
        _object_taSegmentSDataStart = .;
            build/baserom/object_ta.o (.sdata)
        . = ALIGN(0x10);
        _object_taSegmentSDataEnd = .;
        _object_taSegmentOvlStart = .;
            build/baserom/object_ta.o (.ovl)
        . = ALIGN(0x10);
        _object_taSegmentOvlEnd = .;
    }
    _RomSize += ( _object_taSegmentOvlEnd - _object_taSegmentTextStart );
    _object_taSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ta.bss ADDR(..object_ta) + SIZEOF(..object_ta) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_taSegmentBssStart = .;
            build/baserom/object_ta.o (.sbss)
            build/baserom/object_ta.o (.scommon)
            build/baserom/object_ta.o (.bss)
            build/baserom/object_ta.o (COMMON)
        . = ALIGN(0x10);
        _object_taSegmentBssEnd = .;
        _object_taSegmentEnd = .;
    }
    _object_taSegmentBssSize = ABSOLUTE( _object_taSegmentBssEnd - _object_taSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_tkSegmentRomStart = _RomSize;
    ..object_tk : AT(_RomSize)
    {
        _object_tkSegmentStart = .;
        . = ALIGN(0x10);
        _object_tkSegmentTextStart = .;
            build/baserom/object_tk.o (.text)
        _object_tkSegmentTextEnd = .;
    _object_tkSegmentTextSize = ABSOLUTE( _object_tkSegmentTextEnd - _object_tkSegmentTextStart );
        _object_tkSegmentDataStart = .;
            build/baserom/object_tk.o (.data)
        _object_tkSegmentDataEnd = .;
    _object_tkSegmentDataSize = ABSOLUTE( _object_tkSegmentDataEnd - _object_tkSegmentDataStart );
        _object_tkSegmentRoDataStart = .;
            build/baserom/object_tk.o (.rodata)
        _object_tkSegmentRoDataEnd = .;
    _object_tkSegmentRoDataSize = ABSOLUTE( _object_tkSegmentRoDataEnd - _object_tkSegmentRoDataStart );
        _object_tkSegmentSDataStart = .;
            build/baserom/object_tk.o (.sdata)
        . = ALIGN(0x10);
        _object_tkSegmentSDataEnd = .;
        _object_tkSegmentOvlStart = .;
            build/baserom/object_tk.o (.ovl)
        . = ALIGN(0x10);
        _object_tkSegmentOvlEnd = .;
    }
    _RomSize += ( _object_tkSegmentOvlEnd - _object_tkSegmentTextStart );
    _object_tkSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_tk.bss ADDR(..object_tk) + SIZEOF(..object_tk) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_tkSegmentBssStart = .;
            build/baserom/object_tk.o (.sbss)
            build/baserom/object_tk.o (.scommon)
            build/baserom/object_tk.o (.bss)
            build/baserom/object_tk.o (COMMON)
        . = ALIGN(0x10);
        _object_tkSegmentBssEnd = .;
        _object_tkSegmentEnd = .;
    }
    _object_tkSegmentBssSize = ABSOLUTE( _object_tkSegmentBssEnd - _object_tkSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_xcSegmentRomStart = _RomSize;
    ..object_xc : AT(_RomSize)
    {
        _object_xcSegmentStart = .;
        . = ALIGN(0x10);
        _object_xcSegmentTextStart = .;
            build/baserom/object_xc.o (.text)
        _object_xcSegmentTextEnd = .;
    _object_xcSegmentTextSize = ABSOLUTE( _object_xcSegmentTextEnd - _object_xcSegmentTextStart );
        _object_xcSegmentDataStart = .;
            build/baserom/object_xc.o (.data)
        _object_xcSegmentDataEnd = .;
    _object_xcSegmentDataSize = ABSOLUTE( _object_xcSegmentDataEnd - _object_xcSegmentDataStart );
        _object_xcSegmentRoDataStart = .;
            build/baserom/object_xc.o (.rodata)
        _object_xcSegmentRoDataEnd = .;
    _object_xcSegmentRoDataSize = ABSOLUTE( _object_xcSegmentRoDataEnd - _object_xcSegmentRoDataStart );
        _object_xcSegmentSDataStart = .;
            build/baserom/object_xc.o (.sdata)
        . = ALIGN(0x10);
        _object_xcSegmentSDataEnd = .;
        _object_xcSegmentOvlStart = .;
            build/baserom/object_xc.o (.ovl)
        . = ALIGN(0x10);
        _object_xcSegmentOvlEnd = .;
    }
    _RomSize += ( _object_xcSegmentOvlEnd - _object_xcSegmentTextStart );
    _object_xcSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_xc.bss ADDR(..object_xc) + SIZEOF(..object_xc) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_xcSegmentBssStart = .;
            build/baserom/object_xc.o (.sbss)
            build/baserom/object_xc.o (.scommon)
            build/baserom/object_xc.o (.bss)
            build/baserom/object_xc.o (COMMON)
        . = ALIGN(0x10);
        _object_xcSegmentBssEnd = .;
        _object_xcSegmentEnd = .;
    }
    _object_xcSegmentBssSize = ABSOLUTE( _object_xcSegmentBssEnd - _object_xcSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_vmSegmentRomStart = _RomSize;
    ..object_vm : AT(_RomSize)
    {
        _object_vmSegmentStart = .;
        . = ALIGN(0x10);
        _object_vmSegmentTextStart = .;
            build/baserom/object_vm.o (.text)
        _object_vmSegmentTextEnd = .;
    _object_vmSegmentTextSize = ABSOLUTE( _object_vmSegmentTextEnd - _object_vmSegmentTextStart );
        _object_vmSegmentDataStart = .;
            build/baserom/object_vm.o (.data)
        _object_vmSegmentDataEnd = .;
    _object_vmSegmentDataSize = ABSOLUTE( _object_vmSegmentDataEnd - _object_vmSegmentDataStart );
        _object_vmSegmentRoDataStart = .;
            build/baserom/object_vm.o (.rodata)
        _object_vmSegmentRoDataEnd = .;
    _object_vmSegmentRoDataSize = ABSOLUTE( _object_vmSegmentRoDataEnd - _object_vmSegmentRoDataStart );
        _object_vmSegmentSDataStart = .;
            build/baserom/object_vm.o (.sdata)
        . = ALIGN(0x10);
        _object_vmSegmentSDataEnd = .;
        _object_vmSegmentOvlStart = .;
            build/baserom/object_vm.o (.ovl)
        . = ALIGN(0x10);
        _object_vmSegmentOvlEnd = .;
    }
    _RomSize += ( _object_vmSegmentOvlEnd - _object_vmSegmentTextStart );
    _object_vmSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_vm.bss ADDR(..object_vm) + SIZEOF(..object_vm) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_vmSegmentBssStart = .;
            build/baserom/object_vm.o (.sbss)
            build/baserom/object_vm.o (.scommon)
            build/baserom/object_vm.o (.bss)
            build/baserom/object_vm.o (COMMON)
        . = ALIGN(0x10);
        _object_vmSegmentBssEnd = .;
        _object_vmSegmentEnd = .;
    }
    _object_vmSegmentBssSize = ABSOLUTE( _object_vmSegmentBssEnd - _object_vmSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bvSegmentRomStart = _RomSize;
    ..object_bv : AT(_RomSize)
    {
        _object_bvSegmentStart = .;
        . = ALIGN(0x10);
        _object_bvSegmentTextStart = .;
            build/baserom/object_bv.o (.text)
        _object_bvSegmentTextEnd = .;
    _object_bvSegmentTextSize = ABSOLUTE( _object_bvSegmentTextEnd - _object_bvSegmentTextStart );
        _object_bvSegmentDataStart = .;
            build/baserom/object_bv.o (.data)
        _object_bvSegmentDataEnd = .;
    _object_bvSegmentDataSize = ABSOLUTE( _object_bvSegmentDataEnd - _object_bvSegmentDataStart );
        _object_bvSegmentRoDataStart = .;
            build/baserom/object_bv.o (.rodata)
        _object_bvSegmentRoDataEnd = .;
    _object_bvSegmentRoDataSize = ABSOLUTE( _object_bvSegmentRoDataEnd - _object_bvSegmentRoDataStart );
        _object_bvSegmentSDataStart = .;
            build/baserom/object_bv.o (.sdata)
        . = ALIGN(0x10);
        _object_bvSegmentSDataEnd = .;
        _object_bvSegmentOvlStart = .;
            build/baserom/object_bv.o (.ovl)
        . = ALIGN(0x10);
        _object_bvSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bvSegmentOvlEnd - _object_bvSegmentTextStart );
    _object_bvSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bv.bss ADDR(..object_bv) + SIZEOF(..object_bv) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bvSegmentBssStart = .;
            build/baserom/object_bv.o (.sbss)
            build/baserom/object_bv.o (.scommon)
            build/baserom/object_bv.o (.bss)
            build/baserom/object_bv.o (COMMON)
        . = ALIGN(0x10);
        _object_bvSegmentBssEnd = .;
        _object_bvSegmentEnd = .;
    }
    _object_bvSegmentBssSize = ABSOLUTE( _object_bvSegmentBssEnd - _object_bvSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_hakach_objectsSegmentRomStart = _RomSize;
    ..object_hakach_objects : AT(_RomSize)
    {
        _object_hakach_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_hakach_objectsSegmentTextStart = .;
            build/baserom/object_hakach_objects.o (.text)
        _object_hakach_objectsSegmentTextEnd = .;
    _object_hakach_objectsSegmentTextSize = ABSOLUTE( _object_hakach_objectsSegmentTextEnd - _object_hakach_objectsSegmentTextStart );
        _object_hakach_objectsSegmentDataStart = .;
            build/baserom/object_hakach_objects.o (.data)
        _object_hakach_objectsSegmentDataEnd = .;
    _object_hakach_objectsSegmentDataSize = ABSOLUTE( _object_hakach_objectsSegmentDataEnd - _object_hakach_objectsSegmentDataStart );
        _object_hakach_objectsSegmentRoDataStart = .;
            build/baserom/object_hakach_objects.o (.rodata)
        _object_hakach_objectsSegmentRoDataEnd = .;
    _object_hakach_objectsSegmentRoDataSize = ABSOLUTE( _object_hakach_objectsSegmentRoDataEnd - _object_hakach_objectsSegmentRoDataStart );
        _object_hakach_objectsSegmentSDataStart = .;
            build/baserom/object_hakach_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_hakach_objectsSegmentSDataEnd = .;
        _object_hakach_objectsSegmentOvlStart = .;
            build/baserom/object_hakach_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_hakach_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_hakach_objectsSegmentOvlEnd - _object_hakach_objectsSegmentTextStart );
    _object_hakach_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_hakach_objects.bss ADDR(..object_hakach_objects) + SIZEOF(..object_hakach_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_hakach_objectsSegmentBssStart = .;
            build/baserom/object_hakach_objects.o (.sbss)
            build/baserom/object_hakach_objects.o (.scommon)
            build/baserom/object_hakach_objects.o (.bss)
            build/baserom/object_hakach_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_hakach_objectsSegmentBssEnd = .;
        _object_hakach_objectsSegmentEnd = .;
    }
    _object_hakach_objectsSegmentBssSize = ABSOLUTE( _object_hakach_objectsSegmentBssEnd - _object_hakach_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_efc_crystal_lightSegmentRomStart = _RomSize;
    ..object_efc_crystal_light : AT(_RomSize)
    {
        _object_efc_crystal_lightSegmentStart = .;
        . = ALIGN(0x10);
        _object_efc_crystal_lightSegmentTextStart = .;
            build/baserom/object_efc_crystal_light.o (.text)
        _object_efc_crystal_lightSegmentTextEnd = .;
    _object_efc_crystal_lightSegmentTextSize = ABSOLUTE( _object_efc_crystal_lightSegmentTextEnd - _object_efc_crystal_lightSegmentTextStart );
        _object_efc_crystal_lightSegmentDataStart = .;
            build/baserom/object_efc_crystal_light.o (.data)
        _object_efc_crystal_lightSegmentDataEnd = .;
    _object_efc_crystal_lightSegmentDataSize = ABSOLUTE( _object_efc_crystal_lightSegmentDataEnd - _object_efc_crystal_lightSegmentDataStart );
        _object_efc_crystal_lightSegmentRoDataStart = .;
            build/baserom/object_efc_crystal_light.o (.rodata)
        _object_efc_crystal_lightSegmentRoDataEnd = .;
    _object_efc_crystal_lightSegmentRoDataSize = ABSOLUTE( _object_efc_crystal_lightSegmentRoDataEnd - _object_efc_crystal_lightSegmentRoDataStart );
        _object_efc_crystal_lightSegmentSDataStart = .;
            build/baserom/object_efc_crystal_light.o (.sdata)
        . = ALIGN(0x10);
        _object_efc_crystal_lightSegmentSDataEnd = .;
        _object_efc_crystal_lightSegmentOvlStart = .;
            build/baserom/object_efc_crystal_light.o (.ovl)
        . = ALIGN(0x10);
        _object_efc_crystal_lightSegmentOvlEnd = .;
    }
    _RomSize += ( _object_efc_crystal_lightSegmentOvlEnd - _object_efc_crystal_lightSegmentTextStart );
    _object_efc_crystal_lightSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_efc_crystal_light.bss ADDR(..object_efc_crystal_light) + SIZEOF(..object_efc_crystal_light) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_efc_crystal_lightSegmentBssStart = .;
            build/baserom/object_efc_crystal_light.o (.sbss)
            build/baserom/object_efc_crystal_light.o (.scommon)
            build/baserom/object_efc_crystal_light.o (.bss)
            build/baserom/object_efc_crystal_light.o (COMMON)
        . = ALIGN(0x10);
        _object_efc_crystal_lightSegmentBssEnd = .;
        _object_efc_crystal_lightSegmentEnd = .;
    }
    _object_efc_crystal_lightSegmentBssSize = ABSOLUTE( _object_efc_crystal_lightSegmentBssEnd - _object_efc_crystal_lightSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_efc_fire_ballSegmentRomStart = _RomSize;
    ..object_efc_fire_ball : AT(_RomSize)
    {
        _object_efc_fire_ballSegmentStart = .;
        . = ALIGN(0x10);
        _object_efc_fire_ballSegmentTextStart = .;
            build/baserom/object_efc_fire_ball.o (.text)
        _object_efc_fire_ballSegmentTextEnd = .;
    _object_efc_fire_ballSegmentTextSize = ABSOLUTE( _object_efc_fire_ballSegmentTextEnd - _object_efc_fire_ballSegmentTextStart );
        _object_efc_fire_ballSegmentDataStart = .;
            build/baserom/object_efc_fire_ball.o (.data)
        _object_efc_fire_ballSegmentDataEnd = .;
    _object_efc_fire_ballSegmentDataSize = ABSOLUTE( _object_efc_fire_ballSegmentDataEnd - _object_efc_fire_ballSegmentDataStart );
        _object_efc_fire_ballSegmentRoDataStart = .;
            build/baserom/object_efc_fire_ball.o (.rodata)
        _object_efc_fire_ballSegmentRoDataEnd = .;
    _object_efc_fire_ballSegmentRoDataSize = ABSOLUTE( _object_efc_fire_ballSegmentRoDataEnd - _object_efc_fire_ballSegmentRoDataStart );
        _object_efc_fire_ballSegmentSDataStart = .;
            build/baserom/object_efc_fire_ball.o (.sdata)
        . = ALIGN(0x10);
        _object_efc_fire_ballSegmentSDataEnd = .;
        _object_efc_fire_ballSegmentOvlStart = .;
            build/baserom/object_efc_fire_ball.o (.ovl)
        . = ALIGN(0x10);
        _object_efc_fire_ballSegmentOvlEnd = .;
    }
    _RomSize += ( _object_efc_fire_ballSegmentOvlEnd - _object_efc_fire_ballSegmentTextStart );
    _object_efc_fire_ballSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_efc_fire_ball.bss ADDR(..object_efc_fire_ball) + SIZEOF(..object_efc_fire_ball) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_efc_fire_ballSegmentBssStart = .;
            build/baserom/object_efc_fire_ball.o (.sbss)
            build/baserom/object_efc_fire_ball.o (.scommon)
            build/baserom/object_efc_fire_ball.o (.bss)
            build/baserom/object_efc_fire_ball.o (COMMON)
        . = ALIGN(0x10);
        _object_efc_fire_ballSegmentBssEnd = .;
        _object_efc_fire_ballSegmentEnd = .;
    }
    _object_efc_fire_ballSegmentBssSize = ABSOLUTE( _object_efc_fire_ballSegmentBssEnd - _object_efc_fire_ballSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_efc_flashSegmentRomStart = _RomSize;
    ..object_efc_flash : AT(_RomSize)
    {
        _object_efc_flashSegmentStart = .;
        . = ALIGN(0x10);
        _object_efc_flashSegmentTextStart = .;
            build/baserom/object_efc_flash.o (.text)
        _object_efc_flashSegmentTextEnd = .;
    _object_efc_flashSegmentTextSize = ABSOLUTE( _object_efc_flashSegmentTextEnd - _object_efc_flashSegmentTextStart );
        _object_efc_flashSegmentDataStart = .;
            build/baserom/object_efc_flash.o (.data)
        _object_efc_flashSegmentDataEnd = .;
    _object_efc_flashSegmentDataSize = ABSOLUTE( _object_efc_flashSegmentDataEnd - _object_efc_flashSegmentDataStart );
        _object_efc_flashSegmentRoDataStart = .;
            build/baserom/object_efc_flash.o (.rodata)
        _object_efc_flashSegmentRoDataEnd = .;
    _object_efc_flashSegmentRoDataSize = ABSOLUTE( _object_efc_flashSegmentRoDataEnd - _object_efc_flashSegmentRoDataStart );
        _object_efc_flashSegmentSDataStart = .;
            build/baserom/object_efc_flash.o (.sdata)
        . = ALIGN(0x10);
        _object_efc_flashSegmentSDataEnd = .;
        _object_efc_flashSegmentOvlStart = .;
            build/baserom/object_efc_flash.o (.ovl)
        . = ALIGN(0x10);
        _object_efc_flashSegmentOvlEnd = .;
    }
    _RomSize += ( _object_efc_flashSegmentOvlEnd - _object_efc_flashSegmentTextStart );
    _object_efc_flashSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_efc_flash.bss ADDR(..object_efc_flash) + SIZEOF(..object_efc_flash) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_efc_flashSegmentBssStart = .;
            build/baserom/object_efc_flash.o (.sbss)
            build/baserom/object_efc_flash.o (.scommon)
            build/baserom/object_efc_flash.o (.bss)
            build/baserom/object_efc_flash.o (COMMON)
        . = ALIGN(0x10);
        _object_efc_flashSegmentBssEnd = .;
        _object_efc_flashSegmentEnd = .;
    }
    _object_efc_flashSegmentBssSize = ABSOLUTE( _object_efc_flashSegmentBssEnd - _object_efc_flashSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_efc_lgt_showerSegmentRomStart = _RomSize;
    ..object_efc_lgt_shower : AT(_RomSize)
    {
        _object_efc_lgt_showerSegmentStart = .;
        . = ALIGN(0x10);
        _object_efc_lgt_showerSegmentTextStart = .;
            build/baserom/object_efc_lgt_shower.o (.text)
        _object_efc_lgt_showerSegmentTextEnd = .;
    _object_efc_lgt_showerSegmentTextSize = ABSOLUTE( _object_efc_lgt_showerSegmentTextEnd - _object_efc_lgt_showerSegmentTextStart );
        _object_efc_lgt_showerSegmentDataStart = .;
            build/baserom/object_efc_lgt_shower.o (.data)
        _object_efc_lgt_showerSegmentDataEnd = .;
    _object_efc_lgt_showerSegmentDataSize = ABSOLUTE( _object_efc_lgt_showerSegmentDataEnd - _object_efc_lgt_showerSegmentDataStart );
        _object_efc_lgt_showerSegmentRoDataStart = .;
            build/baserom/object_efc_lgt_shower.o (.rodata)
        _object_efc_lgt_showerSegmentRoDataEnd = .;
    _object_efc_lgt_showerSegmentRoDataSize = ABSOLUTE( _object_efc_lgt_showerSegmentRoDataEnd - _object_efc_lgt_showerSegmentRoDataStart );
        _object_efc_lgt_showerSegmentSDataStart = .;
            build/baserom/object_efc_lgt_shower.o (.sdata)
        . = ALIGN(0x10);
        _object_efc_lgt_showerSegmentSDataEnd = .;
        _object_efc_lgt_showerSegmentOvlStart = .;
            build/baserom/object_efc_lgt_shower.o (.ovl)
        . = ALIGN(0x10);
        _object_efc_lgt_showerSegmentOvlEnd = .;
    }
    _RomSize += ( _object_efc_lgt_showerSegmentOvlEnd - _object_efc_lgt_showerSegmentTextStart );
    _object_efc_lgt_showerSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_efc_lgt_shower.bss ADDR(..object_efc_lgt_shower) + SIZEOF(..object_efc_lgt_shower) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_efc_lgt_showerSegmentBssStart = .;
            build/baserom/object_efc_lgt_shower.o (.sbss)
            build/baserom/object_efc_lgt_shower.o (.scommon)
            build/baserom/object_efc_lgt_shower.o (.bss)
            build/baserom/object_efc_lgt_shower.o (COMMON)
        . = ALIGN(0x10);
        _object_efc_lgt_showerSegmentBssEnd = .;
        _object_efc_lgt_showerSegmentEnd = .;
    }
    _object_efc_lgt_showerSegmentBssSize = ABSOLUTE( _object_efc_lgt_showerSegmentBssEnd - _object_efc_lgt_showerSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_efc_star_fieldSegmentRomStart = _RomSize;
    ..object_efc_star_field : AT(_RomSize)
    {
        _object_efc_star_fieldSegmentStart = .;
        . = ALIGN(0x10);
        _object_efc_star_fieldSegmentTextStart = .;
            build/baserom/object_efc_star_field.o (.text)
        _object_efc_star_fieldSegmentTextEnd = .;
    _object_efc_star_fieldSegmentTextSize = ABSOLUTE( _object_efc_star_fieldSegmentTextEnd - _object_efc_star_fieldSegmentTextStart );
        _object_efc_star_fieldSegmentDataStart = .;
            build/baserom/object_efc_star_field.o (.data)
        _object_efc_star_fieldSegmentDataEnd = .;
    _object_efc_star_fieldSegmentDataSize = ABSOLUTE( _object_efc_star_fieldSegmentDataEnd - _object_efc_star_fieldSegmentDataStart );
        _object_efc_star_fieldSegmentRoDataStart = .;
            build/baserom/object_efc_star_field.o (.rodata)
        _object_efc_star_fieldSegmentRoDataEnd = .;
    _object_efc_star_fieldSegmentRoDataSize = ABSOLUTE( _object_efc_star_fieldSegmentRoDataEnd - _object_efc_star_fieldSegmentRoDataStart );
        _object_efc_star_fieldSegmentSDataStart = .;
            build/baserom/object_efc_star_field.o (.sdata)
        . = ALIGN(0x10);
        _object_efc_star_fieldSegmentSDataEnd = .;
        _object_efc_star_fieldSegmentOvlStart = .;
            build/baserom/object_efc_star_field.o (.ovl)
        . = ALIGN(0x10);
        _object_efc_star_fieldSegmentOvlEnd = .;
    }
    _RomSize += ( _object_efc_star_fieldSegmentOvlEnd - _object_efc_star_fieldSegmentTextStart );
    _object_efc_star_fieldSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_efc_star_field.bss ADDR(..object_efc_star_field) + SIZEOF(..object_efc_star_field) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_efc_star_fieldSegmentBssStart = .;
            build/baserom/object_efc_star_field.o (.sbss)
            build/baserom/object_efc_star_field.o (.scommon)
            build/baserom/object_efc_star_field.o (.bss)
            build/baserom/object_efc_star_field.o (COMMON)
        . = ALIGN(0x10);
        _object_efc_star_fieldSegmentBssEnd = .;
        _object_efc_star_fieldSegmentEnd = .;
    }
    _object_efc_star_fieldSegmentBssSize = ABSOLUTE( _object_efc_star_fieldSegmentBssEnd - _object_efc_star_fieldSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_god_lgtSegmentRomStart = _RomSize;
    ..object_god_lgt : AT(_RomSize)
    {
        _object_god_lgtSegmentStart = .;
        . = ALIGN(0x10);
        _object_god_lgtSegmentTextStart = .;
            build/baserom/object_god_lgt.o (.text)
        _object_god_lgtSegmentTextEnd = .;
    _object_god_lgtSegmentTextSize = ABSOLUTE( _object_god_lgtSegmentTextEnd - _object_god_lgtSegmentTextStart );
        _object_god_lgtSegmentDataStart = .;
            build/baserom/object_god_lgt.o (.data)
        _object_god_lgtSegmentDataEnd = .;
    _object_god_lgtSegmentDataSize = ABSOLUTE( _object_god_lgtSegmentDataEnd - _object_god_lgtSegmentDataStart );
        _object_god_lgtSegmentRoDataStart = .;
            build/baserom/object_god_lgt.o (.rodata)
        _object_god_lgtSegmentRoDataEnd = .;
    _object_god_lgtSegmentRoDataSize = ABSOLUTE( _object_god_lgtSegmentRoDataEnd - _object_god_lgtSegmentRoDataStart );
        _object_god_lgtSegmentSDataStart = .;
            build/baserom/object_god_lgt.o (.sdata)
        . = ALIGN(0x10);
        _object_god_lgtSegmentSDataEnd = .;
        _object_god_lgtSegmentOvlStart = .;
            build/baserom/object_god_lgt.o (.ovl)
        . = ALIGN(0x10);
        _object_god_lgtSegmentOvlEnd = .;
    }
    _RomSize += ( _object_god_lgtSegmentOvlEnd - _object_god_lgtSegmentTextStart );
    _object_god_lgtSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_god_lgt.bss ADDR(..object_god_lgt) + SIZEOF(..object_god_lgt) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_god_lgtSegmentBssStart = .;
            build/baserom/object_god_lgt.o (.sbss)
            build/baserom/object_god_lgt.o (.scommon)
            build/baserom/object_god_lgt.o (.bss)
            build/baserom/object_god_lgt.o (COMMON)
        . = ALIGN(0x10);
        _object_god_lgtSegmentBssEnd = .;
        _object_god_lgtSegmentEnd = .;
    }
    _object_god_lgtSegmentBssSize = ABSOLUTE( _object_god_lgtSegmentBssEnd - _object_god_lgtSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_light_ringSegmentRomStart = _RomSize;
    ..object_light_ring : AT(_RomSize)
    {
        _object_light_ringSegmentStart = .;
        . = ALIGN(0x10);
        _object_light_ringSegmentTextStart = .;
            build/baserom/object_light_ring.o (.text)
        _object_light_ringSegmentTextEnd = .;
    _object_light_ringSegmentTextSize = ABSOLUTE( _object_light_ringSegmentTextEnd - _object_light_ringSegmentTextStart );
        _object_light_ringSegmentDataStart = .;
            build/baserom/object_light_ring.o (.data)
        _object_light_ringSegmentDataEnd = .;
    _object_light_ringSegmentDataSize = ABSOLUTE( _object_light_ringSegmentDataEnd - _object_light_ringSegmentDataStart );
        _object_light_ringSegmentRoDataStart = .;
            build/baserom/object_light_ring.o (.rodata)
        _object_light_ringSegmentRoDataEnd = .;
    _object_light_ringSegmentRoDataSize = ABSOLUTE( _object_light_ringSegmentRoDataEnd - _object_light_ringSegmentRoDataStart );
        _object_light_ringSegmentSDataStart = .;
            build/baserom/object_light_ring.o (.sdata)
        . = ALIGN(0x10);
        _object_light_ringSegmentSDataEnd = .;
        _object_light_ringSegmentOvlStart = .;
            build/baserom/object_light_ring.o (.ovl)
        . = ALIGN(0x10);
        _object_light_ringSegmentOvlEnd = .;
    }
    _RomSize += ( _object_light_ringSegmentOvlEnd - _object_light_ringSegmentTextStart );
    _object_light_ringSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_light_ring.bss ADDR(..object_light_ring) + SIZEOF(..object_light_ring) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_light_ringSegmentBssStart = .;
            build/baserom/object_light_ring.o (.sbss)
            build/baserom/object_light_ring.o (.scommon)
            build/baserom/object_light_ring.o (.bss)
            build/baserom/object_light_ring.o (COMMON)
        . = ALIGN(0x10);
        _object_light_ringSegmentBssEnd = .;
        _object_light_ringSegmentEnd = .;
    }
    _object_light_ringSegmentBssSize = ABSOLUTE( _object_light_ringSegmentBssEnd - _object_light_ringSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_triforce_spotSegmentRomStart = _RomSize;
    ..object_triforce_spot : AT(_RomSize)
    {
        _object_triforce_spotSegmentStart = .;
        . = ALIGN(0x10);
        _object_triforce_spotSegmentTextStart = .;
            build/baserom/object_triforce_spot.o (.text)
        _object_triforce_spotSegmentTextEnd = .;
    _object_triforce_spotSegmentTextSize = ABSOLUTE( _object_triforce_spotSegmentTextEnd - _object_triforce_spotSegmentTextStart );
        _object_triforce_spotSegmentDataStart = .;
            build/baserom/object_triforce_spot.o (.data)
        _object_triforce_spotSegmentDataEnd = .;
    _object_triforce_spotSegmentDataSize = ABSOLUTE( _object_triforce_spotSegmentDataEnd - _object_triforce_spotSegmentDataStart );
        _object_triforce_spotSegmentRoDataStart = .;
            build/baserom/object_triforce_spot.o (.rodata)
        _object_triforce_spotSegmentRoDataEnd = .;
    _object_triforce_spotSegmentRoDataSize = ABSOLUTE( _object_triforce_spotSegmentRoDataEnd - _object_triforce_spotSegmentRoDataStart );
        _object_triforce_spotSegmentSDataStart = .;
            build/baserom/object_triforce_spot.o (.sdata)
        . = ALIGN(0x10);
        _object_triforce_spotSegmentSDataEnd = .;
        _object_triforce_spotSegmentOvlStart = .;
            build/baserom/object_triforce_spot.o (.ovl)
        . = ALIGN(0x10);
        _object_triforce_spotSegmentOvlEnd = .;
    }
    _RomSize += ( _object_triforce_spotSegmentOvlEnd - _object_triforce_spotSegmentTextStart );
    _object_triforce_spotSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_triforce_spot.bss ADDR(..object_triforce_spot) + SIZEOF(..object_triforce_spot) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_triforce_spotSegmentBssStart = .;
            build/baserom/object_triforce_spot.o (.sbss)
            build/baserom/object_triforce_spot.o (.scommon)
            build/baserom/object_triforce_spot.o (.bss)
            build/baserom/object_triforce_spot.o (COMMON)
        . = ALIGN(0x10);
        _object_triforce_spotSegmentBssEnd = .;
        _object_triforce_spotSegmentEnd = .;
    }
    _object_triforce_spotSegmentBssSize = ABSOLUTE( _object_triforce_spotSegmentBssEnd - _object_triforce_spotSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_medalSegmentRomStart = _RomSize;
    ..object_medal : AT(_RomSize)
    {
        _object_medalSegmentStart = .;
        . = ALIGN(0x10);
        _object_medalSegmentTextStart = .;
            build/baserom/object_medal.o (.text)
        _object_medalSegmentTextEnd = .;
    _object_medalSegmentTextSize = ABSOLUTE( _object_medalSegmentTextEnd - _object_medalSegmentTextStart );
        _object_medalSegmentDataStart = .;
            build/baserom/object_medal.o (.data)
        _object_medalSegmentDataEnd = .;
    _object_medalSegmentDataSize = ABSOLUTE( _object_medalSegmentDataEnd - _object_medalSegmentDataStart );
        _object_medalSegmentRoDataStart = .;
            build/baserom/object_medal.o (.rodata)
        _object_medalSegmentRoDataEnd = .;
    _object_medalSegmentRoDataSize = ABSOLUTE( _object_medalSegmentRoDataEnd - _object_medalSegmentRoDataStart );
        _object_medalSegmentSDataStart = .;
            build/baserom/object_medal.o (.sdata)
        . = ALIGN(0x10);
        _object_medalSegmentSDataEnd = .;
        _object_medalSegmentOvlStart = .;
            build/baserom/object_medal.o (.ovl)
        . = ALIGN(0x10);
        _object_medalSegmentOvlEnd = .;
    }
    _RomSize += ( _object_medalSegmentOvlEnd - _object_medalSegmentTextStart );
    _object_medalSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_medal.bss ADDR(..object_medal) + SIZEOF(..object_medal) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_medalSegmentBssStart = .;
            build/baserom/object_medal.o (.sbss)
            build/baserom/object_medal.o (.scommon)
            build/baserom/object_medal.o (.bss)
            build/baserom/object_medal.o (COMMON)
        . = ALIGN(0x10);
        _object_medalSegmentBssEnd = .;
        _object_medalSegmentEnd = .;
    }
    _object_medalSegmentBssSize = ABSOLUTE( _object_medalSegmentBssEnd - _object_medalSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bdan_objectsSegmentRomStart = _RomSize;
    ..object_bdan_objects : AT(_RomSize)
    {
        _object_bdan_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_bdan_objectsSegmentTextStart = .;
            build/baserom/object_bdan_objects.o (.text)
        _object_bdan_objectsSegmentTextEnd = .;
    _object_bdan_objectsSegmentTextSize = ABSOLUTE( _object_bdan_objectsSegmentTextEnd - _object_bdan_objectsSegmentTextStart );
        _object_bdan_objectsSegmentDataStart = .;
            build/baserom/object_bdan_objects.o (.data)
        _object_bdan_objectsSegmentDataEnd = .;
    _object_bdan_objectsSegmentDataSize = ABSOLUTE( _object_bdan_objectsSegmentDataEnd - _object_bdan_objectsSegmentDataStart );
        _object_bdan_objectsSegmentRoDataStart = .;
            build/baserom/object_bdan_objects.o (.rodata)
        _object_bdan_objectsSegmentRoDataEnd = .;
    _object_bdan_objectsSegmentRoDataSize = ABSOLUTE( _object_bdan_objectsSegmentRoDataEnd - _object_bdan_objectsSegmentRoDataStart );
        _object_bdan_objectsSegmentSDataStart = .;
            build/baserom/object_bdan_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_bdan_objectsSegmentSDataEnd = .;
        _object_bdan_objectsSegmentOvlStart = .;
            build/baserom/object_bdan_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_bdan_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bdan_objectsSegmentOvlEnd - _object_bdan_objectsSegmentTextStart );
    _object_bdan_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bdan_objects.bss ADDR(..object_bdan_objects) + SIZEOF(..object_bdan_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bdan_objectsSegmentBssStart = .;
            build/baserom/object_bdan_objects.o (.sbss)
            build/baserom/object_bdan_objects.o (.scommon)
            build/baserom/object_bdan_objects.o (.bss)
            build/baserom/object_bdan_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_bdan_objectsSegmentBssEnd = .;
        _object_bdan_objectsSegmentEnd = .;
    }
    _object_bdan_objectsSegmentBssSize = ABSOLUTE( _object_bdan_objectsSegmentBssEnd - _object_bdan_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_sdSegmentRomStart = _RomSize;
    ..object_sd : AT(_RomSize)
    {
        _object_sdSegmentStart = .;
        . = ALIGN(0x10);
        _object_sdSegmentTextStart = .;
            build/baserom/object_sd.o (.text)
        _object_sdSegmentTextEnd = .;
    _object_sdSegmentTextSize = ABSOLUTE( _object_sdSegmentTextEnd - _object_sdSegmentTextStart );
        _object_sdSegmentDataStart = .;
            build/baserom/object_sd.o (.data)
        _object_sdSegmentDataEnd = .;
    _object_sdSegmentDataSize = ABSOLUTE( _object_sdSegmentDataEnd - _object_sdSegmentDataStart );
        _object_sdSegmentRoDataStart = .;
            build/baserom/object_sd.o (.rodata)
        _object_sdSegmentRoDataEnd = .;
    _object_sdSegmentRoDataSize = ABSOLUTE( _object_sdSegmentRoDataEnd - _object_sdSegmentRoDataStart );
        _object_sdSegmentSDataStart = .;
            build/baserom/object_sd.o (.sdata)
        . = ALIGN(0x10);
        _object_sdSegmentSDataEnd = .;
        _object_sdSegmentOvlStart = .;
            build/baserom/object_sd.o (.ovl)
        . = ALIGN(0x10);
        _object_sdSegmentOvlEnd = .;
    }
    _RomSize += ( _object_sdSegmentOvlEnd - _object_sdSegmentTextStart );
    _object_sdSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_sd.bss ADDR(..object_sd) + SIZEOF(..object_sd) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_sdSegmentBssStart = .;
            build/baserom/object_sd.o (.sbss)
            build/baserom/object_sd.o (.scommon)
            build/baserom/object_sd.o (.bss)
            build/baserom/object_sd.o (COMMON)
        . = ALIGN(0x10);
        _object_sdSegmentBssEnd = .;
        _object_sdSegmentEnd = .;
    }
    _object_sdSegmentBssSize = ABSOLUTE( _object_sdSegmentBssEnd - _object_sdSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_rdSegmentRomStart = _RomSize;
    ..object_rd : AT(_RomSize)
    {
        _object_rdSegmentStart = .;
        . = ALIGN(0x10);
        _object_rdSegmentTextStart = .;
            build/baserom/object_rd.o (.text)
        _object_rdSegmentTextEnd = .;
    _object_rdSegmentTextSize = ABSOLUTE( _object_rdSegmentTextEnd - _object_rdSegmentTextStart );
        _object_rdSegmentDataStart = .;
            build/baserom/object_rd.o (.data)
        _object_rdSegmentDataEnd = .;
    _object_rdSegmentDataSize = ABSOLUTE( _object_rdSegmentDataEnd - _object_rdSegmentDataStart );
        _object_rdSegmentRoDataStart = .;
            build/baserom/object_rd.o (.rodata)
        _object_rdSegmentRoDataEnd = .;
    _object_rdSegmentRoDataSize = ABSOLUTE( _object_rdSegmentRoDataEnd - _object_rdSegmentRoDataStart );
        _object_rdSegmentSDataStart = .;
            build/baserom/object_rd.o (.sdata)
        . = ALIGN(0x10);
        _object_rdSegmentSDataEnd = .;
        _object_rdSegmentOvlStart = .;
            build/baserom/object_rd.o (.ovl)
        . = ALIGN(0x10);
        _object_rdSegmentOvlEnd = .;
    }
    _RomSize += ( _object_rdSegmentOvlEnd - _object_rdSegmentTextStart );
    _object_rdSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_rd.bss ADDR(..object_rd) + SIZEOF(..object_rd) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_rdSegmentBssStart = .;
            build/baserom/object_rd.o (.sbss)
            build/baserom/object_rd.o (.scommon)
            build/baserom/object_rd.o (.bss)
            build/baserom/object_rd.o (COMMON)
        . = ALIGN(0x10);
        _object_rdSegmentBssEnd = .;
        _object_rdSegmentEnd = .;
    }
    _object_rdSegmentBssSize = ABSOLUTE( _object_rdSegmentBssEnd - _object_rdSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_po_sistersSegmentRomStart = _RomSize;
    ..object_po_sisters : AT(_RomSize)
    {
        _object_po_sistersSegmentStart = .;
        . = ALIGN(0x10);
        _object_po_sistersSegmentTextStart = .;
            build/baserom/object_po_sisters.o (.text)
        _object_po_sistersSegmentTextEnd = .;
    _object_po_sistersSegmentTextSize = ABSOLUTE( _object_po_sistersSegmentTextEnd - _object_po_sistersSegmentTextStart );
        _object_po_sistersSegmentDataStart = .;
            build/baserom/object_po_sisters.o (.data)
        _object_po_sistersSegmentDataEnd = .;
    _object_po_sistersSegmentDataSize = ABSOLUTE( _object_po_sistersSegmentDataEnd - _object_po_sistersSegmentDataStart );
        _object_po_sistersSegmentRoDataStart = .;
            build/baserom/object_po_sisters.o (.rodata)
        _object_po_sistersSegmentRoDataEnd = .;
    _object_po_sistersSegmentRoDataSize = ABSOLUTE( _object_po_sistersSegmentRoDataEnd - _object_po_sistersSegmentRoDataStart );
        _object_po_sistersSegmentSDataStart = .;
            build/baserom/object_po_sisters.o (.sdata)
        . = ALIGN(0x10);
        _object_po_sistersSegmentSDataEnd = .;
        _object_po_sistersSegmentOvlStart = .;
            build/baserom/object_po_sisters.o (.ovl)
        . = ALIGN(0x10);
        _object_po_sistersSegmentOvlEnd = .;
    }
    _RomSize += ( _object_po_sistersSegmentOvlEnd - _object_po_sistersSegmentTextStart );
    _object_po_sistersSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_po_sisters.bss ADDR(..object_po_sisters) + SIZEOF(..object_po_sisters) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_po_sistersSegmentBssStart = .;
            build/baserom/object_po_sisters.o (.sbss)
            build/baserom/object_po_sisters.o (.scommon)
            build/baserom/object_po_sisters.o (.bss)
            build/baserom/object_po_sisters.o (COMMON)
        . = ALIGN(0x10);
        _object_po_sistersSegmentBssEnd = .;
        _object_po_sistersSegmentEnd = .;
    }
    _object_po_sistersSegmentBssSize = ABSOLUTE( _object_po_sistersSegmentBssEnd - _object_po_sistersSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_heavy_objectSegmentRomStart = _RomSize;
    ..object_heavy_object : AT(_RomSize)
    {
        _object_heavy_objectSegmentStart = .;
        . = ALIGN(0x10);
        _object_heavy_objectSegmentTextStart = .;
            build/baserom/object_heavy_object.o (.text)
        _object_heavy_objectSegmentTextEnd = .;
    _object_heavy_objectSegmentTextSize = ABSOLUTE( _object_heavy_objectSegmentTextEnd - _object_heavy_objectSegmentTextStart );
        _object_heavy_objectSegmentDataStart = .;
            build/baserom/object_heavy_object.o (.data)
        _object_heavy_objectSegmentDataEnd = .;
    _object_heavy_objectSegmentDataSize = ABSOLUTE( _object_heavy_objectSegmentDataEnd - _object_heavy_objectSegmentDataStart );
        _object_heavy_objectSegmentRoDataStart = .;
            build/baserom/object_heavy_object.o (.rodata)
        _object_heavy_objectSegmentRoDataEnd = .;
    _object_heavy_objectSegmentRoDataSize = ABSOLUTE( _object_heavy_objectSegmentRoDataEnd - _object_heavy_objectSegmentRoDataStart );
        _object_heavy_objectSegmentSDataStart = .;
            build/baserom/object_heavy_object.o (.sdata)
        . = ALIGN(0x10);
        _object_heavy_objectSegmentSDataEnd = .;
        _object_heavy_objectSegmentOvlStart = .;
            build/baserom/object_heavy_object.o (.ovl)
        . = ALIGN(0x10);
        _object_heavy_objectSegmentOvlEnd = .;
    }
    _RomSize += ( _object_heavy_objectSegmentOvlEnd - _object_heavy_objectSegmentTextStart );
    _object_heavy_objectSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_heavy_object.bss ADDR(..object_heavy_object) + SIZEOF(..object_heavy_object) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_heavy_objectSegmentBssStart = .;
            build/baserom/object_heavy_object.o (.sbss)
            build/baserom/object_heavy_object.o (.scommon)
            build/baserom/object_heavy_object.o (.bss)
            build/baserom/object_heavy_object.o (COMMON)
        . = ALIGN(0x10);
        _object_heavy_objectSegmentBssEnd = .;
        _object_heavy_objectSegmentEnd = .;
    }
    _object_heavy_objectSegmentBssSize = ABSOLUTE( _object_heavy_objectSegmentBssEnd - _object_heavy_objectSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gnddSegmentRomStart = _RomSize;
    ..object_gndd : AT(_RomSize)
    {
        _object_gnddSegmentStart = .;
        . = ALIGN(0x10);
        _object_gnddSegmentTextStart = .;
            build/baserom/object_gndd.o (.text)
        _object_gnddSegmentTextEnd = .;
    _object_gnddSegmentTextSize = ABSOLUTE( _object_gnddSegmentTextEnd - _object_gnddSegmentTextStart );
        _object_gnddSegmentDataStart = .;
            build/baserom/object_gndd.o (.data)
        _object_gnddSegmentDataEnd = .;
    _object_gnddSegmentDataSize = ABSOLUTE( _object_gnddSegmentDataEnd - _object_gnddSegmentDataStart );
        _object_gnddSegmentRoDataStart = .;
            build/baserom/object_gndd.o (.rodata)
        _object_gnddSegmentRoDataEnd = .;
    _object_gnddSegmentRoDataSize = ABSOLUTE( _object_gnddSegmentRoDataEnd - _object_gnddSegmentRoDataStart );
        _object_gnddSegmentSDataStart = .;
            build/baserom/object_gndd.o (.sdata)
        . = ALIGN(0x10);
        _object_gnddSegmentSDataEnd = .;
        _object_gnddSegmentOvlStart = .;
            build/baserom/object_gndd.o (.ovl)
        . = ALIGN(0x10);
        _object_gnddSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gnddSegmentOvlEnd - _object_gnddSegmentTextStart );
    _object_gnddSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gndd.bss ADDR(..object_gndd) + SIZEOF(..object_gndd) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gnddSegmentBssStart = .;
            build/baserom/object_gndd.o (.sbss)
            build/baserom/object_gndd.o (.scommon)
            build/baserom/object_gndd.o (.bss)
            build/baserom/object_gndd.o (COMMON)
        . = ALIGN(0x10);
        _object_gnddSegmentBssEnd = .;
        _object_gnddSegmentEnd = .;
    }
    _object_gnddSegmentBssSize = ABSOLUTE( _object_gnddSegmentBssEnd - _object_gnddSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_fdSegmentRomStart = _RomSize;
    ..object_fd : AT(_RomSize)
    {
        _object_fdSegmentStart = .;
        . = ALIGN(0x10);
        _object_fdSegmentTextStart = .;
            build/baserom/object_fd.o (.text)
        _object_fdSegmentTextEnd = .;
    _object_fdSegmentTextSize = ABSOLUTE( _object_fdSegmentTextEnd - _object_fdSegmentTextStart );
        _object_fdSegmentDataStart = .;
            build/baserom/object_fd.o (.data)
        _object_fdSegmentDataEnd = .;
    _object_fdSegmentDataSize = ABSOLUTE( _object_fdSegmentDataEnd - _object_fdSegmentDataStart );
        _object_fdSegmentRoDataStart = .;
            build/baserom/object_fd.o (.rodata)
        _object_fdSegmentRoDataEnd = .;
    _object_fdSegmentRoDataSize = ABSOLUTE( _object_fdSegmentRoDataEnd - _object_fdSegmentRoDataStart );
        _object_fdSegmentSDataStart = .;
            build/baserom/object_fd.o (.sdata)
        . = ALIGN(0x10);
        _object_fdSegmentSDataEnd = .;
        _object_fdSegmentOvlStart = .;
            build/baserom/object_fd.o (.ovl)
        . = ALIGN(0x10);
        _object_fdSegmentOvlEnd = .;
    }
    _RomSize += ( _object_fdSegmentOvlEnd - _object_fdSegmentTextStart );
    _object_fdSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_fd.bss ADDR(..object_fd) + SIZEOF(..object_fd) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_fdSegmentBssStart = .;
            build/baserom/object_fd.o (.sbss)
            build/baserom/object_fd.o (.scommon)
            build/baserom/object_fd.o (.bss)
            build/baserom/object_fd.o (COMMON)
        . = ALIGN(0x10);
        _object_fdSegmentBssEnd = .;
        _object_fdSegmentEnd = .;
    }
    _object_fdSegmentBssSize = ABSOLUTE( _object_fdSegmentBssEnd - _object_fdSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_duSegmentRomStart = _RomSize;
    ..object_du : AT(_RomSize)
    {
        _object_duSegmentStart = .;
        . = ALIGN(0x10);
        _object_duSegmentTextStart = .;
            build/baserom/object_du.o (.text)
        _object_duSegmentTextEnd = .;
    _object_duSegmentTextSize = ABSOLUTE( _object_duSegmentTextEnd - _object_duSegmentTextStart );
        _object_duSegmentDataStart = .;
            build/baserom/object_du.o (.data)
        _object_duSegmentDataEnd = .;
    _object_duSegmentDataSize = ABSOLUTE( _object_duSegmentDataEnd - _object_duSegmentDataStart );
        _object_duSegmentRoDataStart = .;
            build/baserom/object_du.o (.rodata)
        _object_duSegmentRoDataEnd = .;
    _object_duSegmentRoDataSize = ABSOLUTE( _object_duSegmentRoDataEnd - _object_duSegmentRoDataStart );
        _object_duSegmentSDataStart = .;
            build/baserom/object_du.o (.sdata)
        . = ALIGN(0x10);
        _object_duSegmentSDataEnd = .;
        _object_duSegmentOvlStart = .;
            build/baserom/object_du.o (.ovl)
        . = ALIGN(0x10);
        _object_duSegmentOvlEnd = .;
    }
    _RomSize += ( _object_duSegmentOvlEnd - _object_duSegmentTextStart );
    _object_duSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_du.bss ADDR(..object_du) + SIZEOF(..object_du) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_duSegmentBssStart = .;
            build/baserom/object_du.o (.sbss)
            build/baserom/object_du.o (.scommon)
            build/baserom/object_du.o (.bss)
            build/baserom/object_du.o (COMMON)
        . = ALIGN(0x10);
        _object_duSegmentBssEnd = .;
        _object_duSegmentEnd = .;
    }
    _object_duSegmentBssSize = ABSOLUTE( _object_duSegmentBssEnd - _object_duSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_fwSegmentRomStart = _RomSize;
    ..object_fw : AT(_RomSize)
    {
        _object_fwSegmentStart = .;
        . = ALIGN(0x10);
        _object_fwSegmentTextStart = .;
            build/baserom/object_fw.o (.text)
        _object_fwSegmentTextEnd = .;
    _object_fwSegmentTextSize = ABSOLUTE( _object_fwSegmentTextEnd - _object_fwSegmentTextStart );
        _object_fwSegmentDataStart = .;
            build/baserom/object_fw.o (.data)
        _object_fwSegmentDataEnd = .;
    _object_fwSegmentDataSize = ABSOLUTE( _object_fwSegmentDataEnd - _object_fwSegmentDataStart );
        _object_fwSegmentRoDataStart = .;
            build/baserom/object_fw.o (.rodata)
        _object_fwSegmentRoDataEnd = .;
    _object_fwSegmentRoDataSize = ABSOLUTE( _object_fwSegmentRoDataEnd - _object_fwSegmentRoDataStart );
        _object_fwSegmentSDataStart = .;
            build/baserom/object_fw.o (.sdata)
        . = ALIGN(0x10);
        _object_fwSegmentSDataEnd = .;
        _object_fwSegmentOvlStart = .;
            build/baserom/object_fw.o (.ovl)
        . = ALIGN(0x10);
        _object_fwSegmentOvlEnd = .;
    }
    _RomSize += ( _object_fwSegmentOvlEnd - _object_fwSegmentTextStart );
    _object_fwSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_fw.bss ADDR(..object_fw) + SIZEOF(..object_fw) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_fwSegmentBssStart = .;
            build/baserom/object_fw.o (.sbss)
            build/baserom/object_fw.o (.scommon)
            build/baserom/object_fw.o (.bss)
            build/baserom/object_fw.o (COMMON)
        . = ALIGN(0x10);
        _object_fwSegmentBssEnd = .;
        _object_fwSegmentEnd = .;
    }
    _object_fwSegmentBssSize = ABSOLUTE( _object_fwSegmentBssEnd - _object_fwSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_horse_link_childSegmentRomStart = _RomSize;
    ..object_horse_link_child : AT(_RomSize)
    {
        _object_horse_link_childSegmentStart = .;
        . = ALIGN(0x10);
        _object_horse_link_childSegmentTextStart = .;
            build/baserom/object_horse_link_child.o (.text)
        _object_horse_link_childSegmentTextEnd = .;
    _object_horse_link_childSegmentTextSize = ABSOLUTE( _object_horse_link_childSegmentTextEnd - _object_horse_link_childSegmentTextStart );
        _object_horse_link_childSegmentDataStart = .;
            build/baserom/object_horse_link_child.o (.data)
        _object_horse_link_childSegmentDataEnd = .;
    _object_horse_link_childSegmentDataSize = ABSOLUTE( _object_horse_link_childSegmentDataEnd - _object_horse_link_childSegmentDataStart );
        _object_horse_link_childSegmentRoDataStart = .;
            build/baserom/object_horse_link_child.o (.rodata)
        _object_horse_link_childSegmentRoDataEnd = .;
    _object_horse_link_childSegmentRoDataSize = ABSOLUTE( _object_horse_link_childSegmentRoDataEnd - _object_horse_link_childSegmentRoDataStart );
        _object_horse_link_childSegmentSDataStart = .;
            build/baserom/object_horse_link_child.o (.sdata)
        . = ALIGN(0x10);
        _object_horse_link_childSegmentSDataEnd = .;
        _object_horse_link_childSegmentOvlStart = .;
            build/baserom/object_horse_link_child.o (.ovl)
        . = ALIGN(0x10);
        _object_horse_link_childSegmentOvlEnd = .;
    }
    _RomSize += ( _object_horse_link_childSegmentOvlEnd - _object_horse_link_childSegmentTextStart );
    _object_horse_link_childSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_horse_link_child.bss ADDR(..object_horse_link_child) + SIZEOF(..object_horse_link_child) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_horse_link_childSegmentBssStart = .;
            build/baserom/object_horse_link_child.o (.sbss)
            build/baserom/object_horse_link_child.o (.scommon)
            build/baserom/object_horse_link_child.o (.bss)
            build/baserom/object_horse_link_child.o (COMMON)
        . = ALIGN(0x10);
        _object_horse_link_childSegmentBssEnd = .;
        _object_horse_link_childSegmentEnd = .;
    }
    _object_horse_link_childSegmentBssSize = ABSOLUTE( _object_horse_link_childSegmentBssEnd - _object_horse_link_childSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot02_objectsSegmentRomStart = _RomSize;
    ..object_spot02_objects : AT(_RomSize)
    {
        _object_spot02_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot02_objectsSegmentTextStart = .;
            build/baserom/object_spot02_objects.o (.text)
        _object_spot02_objectsSegmentTextEnd = .;
    _object_spot02_objectsSegmentTextSize = ABSOLUTE( _object_spot02_objectsSegmentTextEnd - _object_spot02_objectsSegmentTextStart );
        _object_spot02_objectsSegmentDataStart = .;
            build/baserom/object_spot02_objects.o (.data)
        _object_spot02_objectsSegmentDataEnd = .;
    _object_spot02_objectsSegmentDataSize = ABSOLUTE( _object_spot02_objectsSegmentDataEnd - _object_spot02_objectsSegmentDataStart );
        _object_spot02_objectsSegmentRoDataStart = .;
            build/baserom/object_spot02_objects.o (.rodata)
        _object_spot02_objectsSegmentRoDataEnd = .;
    _object_spot02_objectsSegmentRoDataSize = ABSOLUTE( _object_spot02_objectsSegmentRoDataEnd - _object_spot02_objectsSegmentRoDataStart );
        _object_spot02_objectsSegmentSDataStart = .;
            build/baserom/object_spot02_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_spot02_objectsSegmentSDataEnd = .;
        _object_spot02_objectsSegmentOvlStart = .;
            build/baserom/object_spot02_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_spot02_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot02_objectsSegmentOvlEnd - _object_spot02_objectsSegmentTextStart );
    _object_spot02_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot02_objects.bss ADDR(..object_spot02_objects) + SIZEOF(..object_spot02_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot02_objectsSegmentBssStart = .;
            build/baserom/object_spot02_objects.o (.sbss)
            build/baserom/object_spot02_objects.o (.scommon)
            build/baserom/object_spot02_objects.o (.bss)
            build/baserom/object_spot02_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_spot02_objectsSegmentBssEnd = .;
        _object_spot02_objectsSegmentEnd = .;
    }
    _object_spot02_objectsSegmentBssSize = ABSOLUTE( _object_spot02_objectsSegmentBssEnd - _object_spot02_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_hakaSegmentRomStart = _RomSize;
    ..object_haka : AT(_RomSize)
    {
        _object_hakaSegmentStart = .;
        . = ALIGN(0x10);
        _object_hakaSegmentTextStart = .;
            build/baserom/object_haka.o (.text)
        _object_hakaSegmentTextEnd = .;
    _object_hakaSegmentTextSize = ABSOLUTE( _object_hakaSegmentTextEnd - _object_hakaSegmentTextStart );
        _object_hakaSegmentDataStart = .;
            build/baserom/object_haka.o (.data)
        _object_hakaSegmentDataEnd = .;
    _object_hakaSegmentDataSize = ABSOLUTE( _object_hakaSegmentDataEnd - _object_hakaSegmentDataStart );
        _object_hakaSegmentRoDataStart = .;
            build/baserom/object_haka.o (.rodata)
        _object_hakaSegmentRoDataEnd = .;
    _object_hakaSegmentRoDataSize = ABSOLUTE( _object_hakaSegmentRoDataEnd - _object_hakaSegmentRoDataStart );
        _object_hakaSegmentSDataStart = .;
            build/baserom/object_haka.o (.sdata)
        . = ALIGN(0x10);
        _object_hakaSegmentSDataEnd = .;
        _object_hakaSegmentOvlStart = .;
            build/baserom/object_haka.o (.ovl)
        . = ALIGN(0x10);
        _object_hakaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_hakaSegmentOvlEnd - _object_hakaSegmentTextStart );
    _object_hakaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_haka.bss ADDR(..object_haka) + SIZEOF(..object_haka) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_hakaSegmentBssStart = .;
            build/baserom/object_haka.o (.sbss)
            build/baserom/object_haka.o (.scommon)
            build/baserom/object_haka.o (.bss)
            build/baserom/object_haka.o (COMMON)
        . = ALIGN(0x10);
        _object_hakaSegmentBssEnd = .;
        _object_hakaSegmentEnd = .;
    }
    _object_hakaSegmentBssSize = ABSOLUTE( _object_hakaSegmentBssEnd - _object_hakaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ru1SegmentRomStart = _RomSize;
    ..object_ru1 : AT(_RomSize)
    {
        _object_ru1SegmentStart = .;
        . = ALIGN(0x10);
        _object_ru1SegmentTextStart = .;
            build/baserom/object_ru1.o (.text)
        _object_ru1SegmentTextEnd = .;
    _object_ru1SegmentTextSize = ABSOLUTE( _object_ru1SegmentTextEnd - _object_ru1SegmentTextStart );
        _object_ru1SegmentDataStart = .;
            build/baserom/object_ru1.o (.data)
        _object_ru1SegmentDataEnd = .;
    _object_ru1SegmentDataSize = ABSOLUTE( _object_ru1SegmentDataEnd - _object_ru1SegmentDataStart );
        _object_ru1SegmentRoDataStart = .;
            build/baserom/object_ru1.o (.rodata)
        _object_ru1SegmentRoDataEnd = .;
    _object_ru1SegmentRoDataSize = ABSOLUTE( _object_ru1SegmentRoDataEnd - _object_ru1SegmentRoDataStart );
        _object_ru1SegmentSDataStart = .;
            build/baserom/object_ru1.o (.sdata)
        . = ALIGN(0x10);
        _object_ru1SegmentSDataEnd = .;
        _object_ru1SegmentOvlStart = .;
            build/baserom/object_ru1.o (.ovl)
        . = ALIGN(0x10);
        _object_ru1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_ru1SegmentOvlEnd - _object_ru1SegmentTextStart );
    _object_ru1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ru1.bss ADDR(..object_ru1) + SIZEOF(..object_ru1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ru1SegmentBssStart = .;
            build/baserom/object_ru1.o (.sbss)
            build/baserom/object_ru1.o (.scommon)
            build/baserom/object_ru1.o (.bss)
            build/baserom/object_ru1.o (COMMON)
        . = ALIGN(0x10);
        _object_ru1SegmentBssEnd = .;
        _object_ru1SegmentEnd = .;
    }
    _object_ru1SegmentBssSize = ABSOLUTE( _object_ru1SegmentBssEnd - _object_ru1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_syokudaiSegmentRomStart = _RomSize;
    ..object_syokudai : AT(_RomSize)
    {
        _object_syokudaiSegmentStart = .;
        . = ALIGN(0x10);
        _object_syokudaiSegmentTextStart = .;
            build/baserom/object_syokudai.o (.text)
        _object_syokudaiSegmentTextEnd = .;
    _object_syokudaiSegmentTextSize = ABSOLUTE( _object_syokudaiSegmentTextEnd - _object_syokudaiSegmentTextStart );
        _object_syokudaiSegmentDataStart = .;
            build/baserom/object_syokudai.o (.data)
        _object_syokudaiSegmentDataEnd = .;
    _object_syokudaiSegmentDataSize = ABSOLUTE( _object_syokudaiSegmentDataEnd - _object_syokudaiSegmentDataStart );
        _object_syokudaiSegmentRoDataStart = .;
            build/baserom/object_syokudai.o (.rodata)
        _object_syokudaiSegmentRoDataEnd = .;
    _object_syokudaiSegmentRoDataSize = ABSOLUTE( _object_syokudaiSegmentRoDataEnd - _object_syokudaiSegmentRoDataStart );
        _object_syokudaiSegmentSDataStart = .;
            build/baserom/object_syokudai.o (.sdata)
        . = ALIGN(0x10);
        _object_syokudaiSegmentSDataEnd = .;
        _object_syokudaiSegmentOvlStart = .;
            build/baserom/object_syokudai.o (.ovl)
        . = ALIGN(0x10);
        _object_syokudaiSegmentOvlEnd = .;
    }
    _RomSize += ( _object_syokudaiSegmentOvlEnd - _object_syokudaiSegmentTextStart );
    _object_syokudaiSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_syokudai.bss ADDR(..object_syokudai) + SIZEOF(..object_syokudai) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_syokudaiSegmentBssStart = .;
            build/baserom/object_syokudai.o (.sbss)
            build/baserom/object_syokudai.o (.scommon)
            build/baserom/object_syokudai.o (.bss)
            build/baserom/object_syokudai.o (COMMON)
        . = ALIGN(0x10);
        _object_syokudaiSegmentBssEnd = .;
        _object_syokudaiSegmentEnd = .;
    }
    _object_syokudaiSegmentBssSize = ABSOLUTE( _object_syokudaiSegmentBssEnd - _object_syokudaiSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_fd2SegmentRomStart = _RomSize;
    ..object_fd2 : AT(_RomSize)
    {
        _object_fd2SegmentStart = .;
        . = ALIGN(0x10);
        _object_fd2SegmentTextStart = .;
            build/baserom/object_fd2.o (.text)
        _object_fd2SegmentTextEnd = .;
    _object_fd2SegmentTextSize = ABSOLUTE( _object_fd2SegmentTextEnd - _object_fd2SegmentTextStart );
        _object_fd2SegmentDataStart = .;
            build/baserom/object_fd2.o (.data)
        _object_fd2SegmentDataEnd = .;
    _object_fd2SegmentDataSize = ABSOLUTE( _object_fd2SegmentDataEnd - _object_fd2SegmentDataStart );
        _object_fd2SegmentRoDataStart = .;
            build/baserom/object_fd2.o (.rodata)
        _object_fd2SegmentRoDataEnd = .;
    _object_fd2SegmentRoDataSize = ABSOLUTE( _object_fd2SegmentRoDataEnd - _object_fd2SegmentRoDataStart );
        _object_fd2SegmentSDataStart = .;
            build/baserom/object_fd2.o (.sdata)
        . = ALIGN(0x10);
        _object_fd2SegmentSDataEnd = .;
        _object_fd2SegmentOvlStart = .;
            build/baserom/object_fd2.o (.ovl)
        . = ALIGN(0x10);
        _object_fd2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_fd2SegmentOvlEnd - _object_fd2SegmentTextStart );
    _object_fd2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_fd2.bss ADDR(..object_fd2) + SIZEOF(..object_fd2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_fd2SegmentBssStart = .;
            build/baserom/object_fd2.o (.sbss)
            build/baserom/object_fd2.o (.scommon)
            build/baserom/object_fd2.o (.bss)
            build/baserom/object_fd2.o (COMMON)
        . = ALIGN(0x10);
        _object_fd2SegmentBssEnd = .;
        _object_fd2SegmentEnd = .;
    }
    _object_fd2SegmentBssSize = ABSOLUTE( _object_fd2SegmentBssEnd - _object_fd2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_dhSegmentRomStart = _RomSize;
    ..object_dh : AT(_RomSize)
    {
        _object_dhSegmentStart = .;
        . = ALIGN(0x10);
        _object_dhSegmentTextStart = .;
            build/baserom/object_dh.o (.text)
        _object_dhSegmentTextEnd = .;
    _object_dhSegmentTextSize = ABSOLUTE( _object_dhSegmentTextEnd - _object_dhSegmentTextStart );
        _object_dhSegmentDataStart = .;
            build/baserom/object_dh.o (.data)
        _object_dhSegmentDataEnd = .;
    _object_dhSegmentDataSize = ABSOLUTE( _object_dhSegmentDataEnd - _object_dhSegmentDataStart );
        _object_dhSegmentRoDataStart = .;
            build/baserom/object_dh.o (.rodata)
        _object_dhSegmentRoDataEnd = .;
    _object_dhSegmentRoDataSize = ABSOLUTE( _object_dhSegmentRoDataEnd - _object_dhSegmentRoDataStart );
        _object_dhSegmentSDataStart = .;
            build/baserom/object_dh.o (.sdata)
        . = ALIGN(0x10);
        _object_dhSegmentSDataEnd = .;
        _object_dhSegmentOvlStart = .;
            build/baserom/object_dh.o (.ovl)
        . = ALIGN(0x10);
        _object_dhSegmentOvlEnd = .;
    }
    _RomSize += ( _object_dhSegmentOvlEnd - _object_dhSegmentTextStart );
    _object_dhSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_dh.bss ADDR(..object_dh) + SIZEOF(..object_dh) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_dhSegmentBssStart = .;
            build/baserom/object_dh.o (.sbss)
            build/baserom/object_dh.o (.scommon)
            build/baserom/object_dh.o (.bss)
            build/baserom/object_dh.o (COMMON)
        . = ALIGN(0x10);
        _object_dhSegmentBssEnd = .;
        _object_dhSegmentEnd = .;
    }
    _object_dhSegmentBssSize = ABSOLUTE( _object_dhSegmentBssEnd - _object_dhSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_rlSegmentRomStart = _RomSize;
    ..object_rl : AT(_RomSize)
    {
        _object_rlSegmentStart = .;
        . = ALIGN(0x10);
        _object_rlSegmentTextStart = .;
            build/baserom/object_rl.o (.text)
        _object_rlSegmentTextEnd = .;
    _object_rlSegmentTextSize = ABSOLUTE( _object_rlSegmentTextEnd - _object_rlSegmentTextStart );
        _object_rlSegmentDataStart = .;
            build/baserom/object_rl.o (.data)
        _object_rlSegmentDataEnd = .;
    _object_rlSegmentDataSize = ABSOLUTE( _object_rlSegmentDataEnd - _object_rlSegmentDataStart );
        _object_rlSegmentRoDataStart = .;
            build/baserom/object_rl.o (.rodata)
        _object_rlSegmentRoDataEnd = .;
    _object_rlSegmentRoDataSize = ABSOLUTE( _object_rlSegmentRoDataEnd - _object_rlSegmentRoDataStart );
        _object_rlSegmentSDataStart = .;
            build/baserom/object_rl.o (.sdata)
        . = ALIGN(0x10);
        _object_rlSegmentSDataEnd = .;
        _object_rlSegmentOvlStart = .;
            build/baserom/object_rl.o (.ovl)
        . = ALIGN(0x10);
        _object_rlSegmentOvlEnd = .;
    }
    _RomSize += ( _object_rlSegmentOvlEnd - _object_rlSegmentTextStart );
    _object_rlSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_rl.bss ADDR(..object_rl) + SIZEOF(..object_rl) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_rlSegmentBssStart = .;
            build/baserom/object_rl.o (.sbss)
            build/baserom/object_rl.o (.scommon)
            build/baserom/object_rl.o (.bss)
            build/baserom/object_rl.o (COMMON)
        . = ALIGN(0x10);
        _object_rlSegmentBssEnd = .;
        _object_rlSegmentEnd = .;
    }
    _object_rlSegmentBssSize = ABSOLUTE( _object_rlSegmentBssEnd - _object_rlSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_efc_twSegmentRomStart = _RomSize;
    ..object_efc_tw : AT(_RomSize)
    {
        _object_efc_twSegmentStart = .;
        . = ALIGN(0x10);
        _object_efc_twSegmentTextStart = .;
            build/baserom/object_efc_tw.o (.text)
        _object_efc_twSegmentTextEnd = .;
    _object_efc_twSegmentTextSize = ABSOLUTE( _object_efc_twSegmentTextEnd - _object_efc_twSegmentTextStart );
        _object_efc_twSegmentDataStart = .;
            build/baserom/object_efc_tw.o (.data)
        _object_efc_twSegmentDataEnd = .;
    _object_efc_twSegmentDataSize = ABSOLUTE( _object_efc_twSegmentDataEnd - _object_efc_twSegmentDataStart );
        _object_efc_twSegmentRoDataStart = .;
            build/baserom/object_efc_tw.o (.rodata)
        _object_efc_twSegmentRoDataEnd = .;
    _object_efc_twSegmentRoDataSize = ABSOLUTE( _object_efc_twSegmentRoDataEnd - _object_efc_twSegmentRoDataStart );
        _object_efc_twSegmentSDataStart = .;
            build/baserom/object_efc_tw.o (.sdata)
        . = ALIGN(0x10);
        _object_efc_twSegmentSDataEnd = .;
        _object_efc_twSegmentOvlStart = .;
            build/baserom/object_efc_tw.o (.ovl)
        . = ALIGN(0x10);
        _object_efc_twSegmentOvlEnd = .;
    }
    _RomSize += ( _object_efc_twSegmentOvlEnd - _object_efc_twSegmentTextStart );
    _object_efc_twSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_efc_tw.bss ADDR(..object_efc_tw) + SIZEOF(..object_efc_tw) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_efc_twSegmentBssStart = .;
            build/baserom/object_efc_tw.o (.sbss)
            build/baserom/object_efc_tw.o (.scommon)
            build/baserom/object_efc_tw.o (.bss)
            build/baserom/object_efc_tw.o (COMMON)
        . = ALIGN(0x10);
        _object_efc_twSegmentBssEnd = .;
        _object_efc_twSegmentEnd = .;
    }
    _object_efc_twSegmentBssSize = ABSOLUTE( _object_efc_twSegmentBssEnd - _object_efc_twSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_demo_tre_lgtSegmentRomStart = _RomSize;
    ..object_demo_tre_lgt : AT(_RomSize)
    {
        _object_demo_tre_lgtSegmentStart = .;
        . = ALIGN(0x10);
        _object_demo_tre_lgtSegmentTextStart = .;
            build/baserom/object_demo_tre_lgt.o (.text)
        _object_demo_tre_lgtSegmentTextEnd = .;
    _object_demo_tre_lgtSegmentTextSize = ABSOLUTE( _object_demo_tre_lgtSegmentTextEnd - _object_demo_tre_lgtSegmentTextStart );
        _object_demo_tre_lgtSegmentDataStart = .;
            build/baserom/object_demo_tre_lgt.o (.data)
        _object_demo_tre_lgtSegmentDataEnd = .;
    _object_demo_tre_lgtSegmentDataSize = ABSOLUTE( _object_demo_tre_lgtSegmentDataEnd - _object_demo_tre_lgtSegmentDataStart );
        _object_demo_tre_lgtSegmentRoDataStart = .;
            build/baserom/object_demo_tre_lgt.o (.rodata)
        _object_demo_tre_lgtSegmentRoDataEnd = .;
    _object_demo_tre_lgtSegmentRoDataSize = ABSOLUTE( _object_demo_tre_lgtSegmentRoDataEnd - _object_demo_tre_lgtSegmentRoDataStart );
        _object_demo_tre_lgtSegmentSDataStart = .;
            build/baserom/object_demo_tre_lgt.o (.sdata)
        . = ALIGN(0x10);
        _object_demo_tre_lgtSegmentSDataEnd = .;
        _object_demo_tre_lgtSegmentOvlStart = .;
            build/baserom/object_demo_tre_lgt.o (.ovl)
        . = ALIGN(0x10);
        _object_demo_tre_lgtSegmentOvlEnd = .;
    }
    _RomSize += ( _object_demo_tre_lgtSegmentOvlEnd - _object_demo_tre_lgtSegmentTextStart );
    _object_demo_tre_lgtSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_demo_tre_lgt.bss ADDR(..object_demo_tre_lgt) + SIZEOF(..object_demo_tre_lgt) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_demo_tre_lgtSegmentBssStart = .;
            build/baserom/object_demo_tre_lgt.o (.sbss)
            build/baserom/object_demo_tre_lgt.o (.scommon)
            build/baserom/object_demo_tre_lgt.o (.bss)
            build/baserom/object_demo_tre_lgt.o (COMMON)
        . = ALIGN(0x10);
        _object_demo_tre_lgtSegmentBssEnd = .;
        _object_demo_tre_lgtSegmentEnd = .;
    }
    _object_demo_tre_lgtSegmentBssSize = ABSOLUTE( _object_demo_tre_lgtSegmentBssEnd - _object_demo_tre_lgtSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_keySegmentRomStart = _RomSize;
    ..object_gi_key : AT(_RomSize)
    {
        _object_gi_keySegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_keySegmentTextStart = .;
            build/baserom/object_gi_key.o (.text)
        _object_gi_keySegmentTextEnd = .;
    _object_gi_keySegmentTextSize = ABSOLUTE( _object_gi_keySegmentTextEnd - _object_gi_keySegmentTextStart );
        _object_gi_keySegmentDataStart = .;
            build/baserom/object_gi_key.o (.data)
        _object_gi_keySegmentDataEnd = .;
    _object_gi_keySegmentDataSize = ABSOLUTE( _object_gi_keySegmentDataEnd - _object_gi_keySegmentDataStart );
        _object_gi_keySegmentRoDataStart = .;
            build/baserom/object_gi_key.o (.rodata)
        _object_gi_keySegmentRoDataEnd = .;
    _object_gi_keySegmentRoDataSize = ABSOLUTE( _object_gi_keySegmentRoDataEnd - _object_gi_keySegmentRoDataStart );
        _object_gi_keySegmentSDataStart = .;
            build/baserom/object_gi_key.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_keySegmentSDataEnd = .;
        _object_gi_keySegmentOvlStart = .;
            build/baserom/object_gi_key.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_keySegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_keySegmentOvlEnd - _object_gi_keySegmentTextStart );
    _object_gi_keySegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_key.bss ADDR(..object_gi_key) + SIZEOF(..object_gi_key) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_keySegmentBssStart = .;
            build/baserom/object_gi_key.o (.sbss)
            build/baserom/object_gi_key.o (.scommon)
            build/baserom/object_gi_key.o (.bss)
            build/baserom/object_gi_key.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_keySegmentBssEnd = .;
        _object_gi_keySegmentEnd = .;
    }
    _object_gi_keySegmentBssSize = ABSOLUTE( _object_gi_keySegmentBssEnd - _object_gi_keySegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mir_raySegmentRomStart = _RomSize;
    ..object_mir_ray : AT(_RomSize)
    {
        _object_mir_raySegmentStart = .;
        . = ALIGN(0x10);
        _object_mir_raySegmentTextStart = .;
            build/baserom/object_mir_ray.o (.text)
        _object_mir_raySegmentTextEnd = .;
    _object_mir_raySegmentTextSize = ABSOLUTE( _object_mir_raySegmentTextEnd - _object_mir_raySegmentTextStart );
        _object_mir_raySegmentDataStart = .;
            build/baserom/object_mir_ray.o (.data)
        _object_mir_raySegmentDataEnd = .;
    _object_mir_raySegmentDataSize = ABSOLUTE( _object_mir_raySegmentDataEnd - _object_mir_raySegmentDataStart );
        _object_mir_raySegmentRoDataStart = .;
            build/baserom/object_mir_ray.o (.rodata)
        _object_mir_raySegmentRoDataEnd = .;
    _object_mir_raySegmentRoDataSize = ABSOLUTE( _object_mir_raySegmentRoDataEnd - _object_mir_raySegmentRoDataStart );
        _object_mir_raySegmentSDataStart = .;
            build/baserom/object_mir_ray.o (.sdata)
        . = ALIGN(0x10);
        _object_mir_raySegmentSDataEnd = .;
        _object_mir_raySegmentOvlStart = .;
            build/baserom/object_mir_ray.o (.ovl)
        . = ALIGN(0x10);
        _object_mir_raySegmentOvlEnd = .;
    }
    _RomSize += ( _object_mir_raySegmentOvlEnd - _object_mir_raySegmentTextStart );
    _object_mir_raySegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mir_ray.bss ADDR(..object_mir_ray) + SIZEOF(..object_mir_ray) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mir_raySegmentBssStart = .;
            build/baserom/object_mir_ray.o (.sbss)
            build/baserom/object_mir_ray.o (.scommon)
            build/baserom/object_mir_ray.o (.bss)
            build/baserom/object_mir_ray.o (COMMON)
        . = ALIGN(0x10);
        _object_mir_raySegmentBssEnd = .;
        _object_mir_raySegmentEnd = .;
    }
    _object_mir_raySegmentBssSize = ABSOLUTE( _object_mir_raySegmentBssEnd - _object_mir_raySegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_brobSegmentRomStart = _RomSize;
    ..object_brob : AT(_RomSize)
    {
        _object_brobSegmentStart = .;
        . = ALIGN(0x10);
        _object_brobSegmentTextStart = .;
            build/baserom/object_brob.o (.text)
        _object_brobSegmentTextEnd = .;
    _object_brobSegmentTextSize = ABSOLUTE( _object_brobSegmentTextEnd - _object_brobSegmentTextStart );
        _object_brobSegmentDataStart = .;
            build/baserom/object_brob.o (.data)
        _object_brobSegmentDataEnd = .;
    _object_brobSegmentDataSize = ABSOLUTE( _object_brobSegmentDataEnd - _object_brobSegmentDataStart );
        _object_brobSegmentRoDataStart = .;
            build/baserom/object_brob.o (.rodata)
        _object_brobSegmentRoDataEnd = .;
    _object_brobSegmentRoDataSize = ABSOLUTE( _object_brobSegmentRoDataEnd - _object_brobSegmentRoDataStart );
        _object_brobSegmentSDataStart = .;
            build/baserom/object_brob.o (.sdata)
        . = ALIGN(0x10);
        _object_brobSegmentSDataEnd = .;
        _object_brobSegmentOvlStart = .;
            build/baserom/object_brob.o (.ovl)
        . = ALIGN(0x10);
        _object_brobSegmentOvlEnd = .;
    }
    _RomSize += ( _object_brobSegmentOvlEnd - _object_brobSegmentTextStart );
    _object_brobSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_brob.bss ADDR(..object_brob) + SIZEOF(..object_brob) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_brobSegmentBssStart = .;
            build/baserom/object_brob.o (.sbss)
            build/baserom/object_brob.o (.scommon)
            build/baserom/object_brob.o (.bss)
            build/baserom/object_brob.o (COMMON)
        . = ALIGN(0x10);
        _object_brobSegmentBssEnd = .;
        _object_brobSegmentEnd = .;
    }
    _object_brobSegmentBssSize = ABSOLUTE( _object_brobSegmentBssEnd - _object_brobSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_jewelSegmentRomStart = _RomSize;
    ..object_gi_jewel : AT(_RomSize)
    {
        _object_gi_jewelSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_jewelSegmentTextStart = .;
            build/baserom/object_gi_jewel.o (.text)
        _object_gi_jewelSegmentTextEnd = .;
    _object_gi_jewelSegmentTextSize = ABSOLUTE( _object_gi_jewelSegmentTextEnd - _object_gi_jewelSegmentTextStart );
        _object_gi_jewelSegmentDataStart = .;
            build/baserom/object_gi_jewel.o (.data)
        _object_gi_jewelSegmentDataEnd = .;
    _object_gi_jewelSegmentDataSize = ABSOLUTE( _object_gi_jewelSegmentDataEnd - _object_gi_jewelSegmentDataStart );
        _object_gi_jewelSegmentRoDataStart = .;
            build/baserom/object_gi_jewel.o (.rodata)
        _object_gi_jewelSegmentRoDataEnd = .;
    _object_gi_jewelSegmentRoDataSize = ABSOLUTE( _object_gi_jewelSegmentRoDataEnd - _object_gi_jewelSegmentRoDataStart );
        _object_gi_jewelSegmentSDataStart = .;
            build/baserom/object_gi_jewel.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_jewelSegmentSDataEnd = .;
        _object_gi_jewelSegmentOvlStart = .;
            build/baserom/object_gi_jewel.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_jewelSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_jewelSegmentOvlEnd - _object_gi_jewelSegmentTextStart );
    _object_gi_jewelSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_jewel.bss ADDR(..object_gi_jewel) + SIZEOF(..object_gi_jewel) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_jewelSegmentBssStart = .;
            build/baserom/object_gi_jewel.o (.sbss)
            build/baserom/object_gi_jewel.o (.scommon)
            build/baserom/object_gi_jewel.o (.bss)
            build/baserom/object_gi_jewel.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_jewelSegmentBssEnd = .;
        _object_gi_jewelSegmentEnd = .;
    }
    _object_gi_jewelSegmentBssSize = ABSOLUTE( _object_gi_jewelSegmentBssEnd - _object_gi_jewelSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot09_objSegmentRomStart = _RomSize;
    ..object_spot09_obj : AT(_RomSize)
    {
        _object_spot09_objSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot09_objSegmentTextStart = .;
            build/baserom/object_spot09_obj.o (.text)
        _object_spot09_objSegmentTextEnd = .;
    _object_spot09_objSegmentTextSize = ABSOLUTE( _object_spot09_objSegmentTextEnd - _object_spot09_objSegmentTextStart );
        _object_spot09_objSegmentDataStart = .;
            build/baserom/object_spot09_obj.o (.data)
        _object_spot09_objSegmentDataEnd = .;
    _object_spot09_objSegmentDataSize = ABSOLUTE( _object_spot09_objSegmentDataEnd - _object_spot09_objSegmentDataStart );
        _object_spot09_objSegmentRoDataStart = .;
            build/baserom/object_spot09_obj.o (.rodata)
        _object_spot09_objSegmentRoDataEnd = .;
    _object_spot09_objSegmentRoDataSize = ABSOLUTE( _object_spot09_objSegmentRoDataEnd - _object_spot09_objSegmentRoDataStart );
        _object_spot09_objSegmentSDataStart = .;
            build/baserom/object_spot09_obj.o (.sdata)
        . = ALIGN(0x10);
        _object_spot09_objSegmentSDataEnd = .;
        _object_spot09_objSegmentOvlStart = .;
            build/baserom/object_spot09_obj.o (.ovl)
        . = ALIGN(0x10);
        _object_spot09_objSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot09_objSegmentOvlEnd - _object_spot09_objSegmentTextStart );
    _object_spot09_objSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot09_obj.bss ADDR(..object_spot09_obj) + SIZEOF(..object_spot09_obj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot09_objSegmentBssStart = .;
            build/baserom/object_spot09_obj.o (.sbss)
            build/baserom/object_spot09_obj.o (.scommon)
            build/baserom/object_spot09_obj.o (.bss)
            build/baserom/object_spot09_obj.o (COMMON)
        . = ALIGN(0x10);
        _object_spot09_objSegmentBssEnd = .;
        _object_spot09_objSegmentEnd = .;
    }
    _object_spot09_objSegmentBssSize = ABSOLUTE( _object_spot09_objSegmentBssEnd - _object_spot09_objSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot18_objSegmentRomStart = _RomSize;
    ..object_spot18_obj : AT(_RomSize)
    {
        _object_spot18_objSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot18_objSegmentTextStart = .;
            build/baserom/object_spot18_obj.o (.text)
        _object_spot18_objSegmentTextEnd = .;
    _object_spot18_objSegmentTextSize = ABSOLUTE( _object_spot18_objSegmentTextEnd - _object_spot18_objSegmentTextStart );
        _object_spot18_objSegmentDataStart = .;
            build/baserom/object_spot18_obj.o (.data)
        _object_spot18_objSegmentDataEnd = .;
    _object_spot18_objSegmentDataSize = ABSOLUTE( _object_spot18_objSegmentDataEnd - _object_spot18_objSegmentDataStart );
        _object_spot18_objSegmentRoDataStart = .;
            build/baserom/object_spot18_obj.o (.rodata)
        _object_spot18_objSegmentRoDataEnd = .;
    _object_spot18_objSegmentRoDataSize = ABSOLUTE( _object_spot18_objSegmentRoDataEnd - _object_spot18_objSegmentRoDataStart );
        _object_spot18_objSegmentSDataStart = .;
            build/baserom/object_spot18_obj.o (.sdata)
        . = ALIGN(0x10);
        _object_spot18_objSegmentSDataEnd = .;
        _object_spot18_objSegmentOvlStart = .;
            build/baserom/object_spot18_obj.o (.ovl)
        . = ALIGN(0x10);
        _object_spot18_objSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot18_objSegmentOvlEnd - _object_spot18_objSegmentTextStart );
    _object_spot18_objSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot18_obj.bss ADDR(..object_spot18_obj) + SIZEOF(..object_spot18_obj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot18_objSegmentBssStart = .;
            build/baserom/object_spot18_obj.o (.sbss)
            build/baserom/object_spot18_obj.o (.scommon)
            build/baserom/object_spot18_obj.o (.bss)
            build/baserom/object_spot18_obj.o (COMMON)
        . = ALIGN(0x10);
        _object_spot18_objSegmentBssEnd = .;
        _object_spot18_objSegmentEnd = .;
    }
    _object_spot18_objSegmentBssSize = ABSOLUTE( _object_spot18_objSegmentBssEnd - _object_spot18_objSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bdoorSegmentRomStart = _RomSize;
    ..object_bdoor : AT(_RomSize)
    {
        _object_bdoorSegmentStart = .;
        . = ALIGN(0x10);
        _object_bdoorSegmentTextStart = .;
            build/baserom/object_bdoor.o (.text)
        _object_bdoorSegmentTextEnd = .;
    _object_bdoorSegmentTextSize = ABSOLUTE( _object_bdoorSegmentTextEnd - _object_bdoorSegmentTextStart );
        _object_bdoorSegmentDataStart = .;
            build/baserom/object_bdoor.o (.data)
        _object_bdoorSegmentDataEnd = .;
    _object_bdoorSegmentDataSize = ABSOLUTE( _object_bdoorSegmentDataEnd - _object_bdoorSegmentDataStart );
        _object_bdoorSegmentRoDataStart = .;
            build/baserom/object_bdoor.o (.rodata)
        _object_bdoorSegmentRoDataEnd = .;
    _object_bdoorSegmentRoDataSize = ABSOLUTE( _object_bdoorSegmentRoDataEnd - _object_bdoorSegmentRoDataStart );
        _object_bdoorSegmentSDataStart = .;
            build/baserom/object_bdoor.o (.sdata)
        . = ALIGN(0x10);
        _object_bdoorSegmentSDataEnd = .;
        _object_bdoorSegmentOvlStart = .;
            build/baserom/object_bdoor.o (.ovl)
        . = ALIGN(0x10);
        _object_bdoorSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bdoorSegmentOvlEnd - _object_bdoorSegmentTextStart );
    _object_bdoorSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bdoor.bss ADDR(..object_bdoor) + SIZEOF(..object_bdoor) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bdoorSegmentBssStart = .;
            build/baserom/object_bdoor.o (.sbss)
            build/baserom/object_bdoor.o (.scommon)
            build/baserom/object_bdoor.o (.bss)
            build/baserom/object_bdoor.o (COMMON)
        . = ALIGN(0x10);
        _object_bdoorSegmentBssEnd = .;
        _object_bdoorSegmentEnd = .;
    }
    _object_bdoorSegmentBssSize = ABSOLUTE( _object_bdoorSegmentBssEnd - _object_bdoorSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot17_objSegmentRomStart = _RomSize;
    ..object_spot17_obj : AT(_RomSize)
    {
        _object_spot17_objSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot17_objSegmentTextStart = .;
            build/baserom/object_spot17_obj.o (.text)
        _object_spot17_objSegmentTextEnd = .;
    _object_spot17_objSegmentTextSize = ABSOLUTE( _object_spot17_objSegmentTextEnd - _object_spot17_objSegmentTextStart );
        _object_spot17_objSegmentDataStart = .;
            build/baserom/object_spot17_obj.o (.data)
        _object_spot17_objSegmentDataEnd = .;
    _object_spot17_objSegmentDataSize = ABSOLUTE( _object_spot17_objSegmentDataEnd - _object_spot17_objSegmentDataStart );
        _object_spot17_objSegmentRoDataStart = .;
            build/baserom/object_spot17_obj.o (.rodata)
        _object_spot17_objSegmentRoDataEnd = .;
    _object_spot17_objSegmentRoDataSize = ABSOLUTE( _object_spot17_objSegmentRoDataEnd - _object_spot17_objSegmentRoDataStart );
        _object_spot17_objSegmentSDataStart = .;
            build/baserom/object_spot17_obj.o (.sdata)
        . = ALIGN(0x10);
        _object_spot17_objSegmentSDataEnd = .;
        _object_spot17_objSegmentOvlStart = .;
            build/baserom/object_spot17_obj.o (.ovl)
        . = ALIGN(0x10);
        _object_spot17_objSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot17_objSegmentOvlEnd - _object_spot17_objSegmentTextStart );
    _object_spot17_objSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot17_obj.bss ADDR(..object_spot17_obj) + SIZEOF(..object_spot17_obj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot17_objSegmentBssStart = .;
            build/baserom/object_spot17_obj.o (.sbss)
            build/baserom/object_spot17_obj.o (.scommon)
            build/baserom/object_spot17_obj.o (.bss)
            build/baserom/object_spot17_obj.o (COMMON)
        . = ALIGN(0x10);
        _object_spot17_objSegmentBssEnd = .;
        _object_spot17_objSegmentEnd = .;
    }
    _object_spot17_objSegmentBssSize = ABSOLUTE( _object_spot17_objSegmentBssEnd - _object_spot17_objSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_shop_dungenSegmentRomStart = _RomSize;
    ..object_shop_dungen : AT(_RomSize)
    {
        _object_shop_dungenSegmentStart = .;
        . = ALIGN(0x10);
        _object_shop_dungenSegmentTextStart = .;
            build/baserom/object_shop_dungen.o (.text)
        _object_shop_dungenSegmentTextEnd = .;
    _object_shop_dungenSegmentTextSize = ABSOLUTE( _object_shop_dungenSegmentTextEnd - _object_shop_dungenSegmentTextStart );
        _object_shop_dungenSegmentDataStart = .;
            build/baserom/object_shop_dungen.o (.data)
        _object_shop_dungenSegmentDataEnd = .;
    _object_shop_dungenSegmentDataSize = ABSOLUTE( _object_shop_dungenSegmentDataEnd - _object_shop_dungenSegmentDataStart );
        _object_shop_dungenSegmentRoDataStart = .;
            build/baserom/object_shop_dungen.o (.rodata)
        _object_shop_dungenSegmentRoDataEnd = .;
    _object_shop_dungenSegmentRoDataSize = ABSOLUTE( _object_shop_dungenSegmentRoDataEnd - _object_shop_dungenSegmentRoDataStart );
        _object_shop_dungenSegmentSDataStart = .;
            build/baserom/object_shop_dungen.o (.sdata)
        . = ALIGN(0x10);
        _object_shop_dungenSegmentSDataEnd = .;
        _object_shop_dungenSegmentOvlStart = .;
            build/baserom/object_shop_dungen.o (.ovl)
        . = ALIGN(0x10);
        _object_shop_dungenSegmentOvlEnd = .;
    }
    _RomSize += ( _object_shop_dungenSegmentOvlEnd - _object_shop_dungenSegmentTextStart );
    _object_shop_dungenSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_shop_dungen.bss ADDR(..object_shop_dungen) + SIZEOF(..object_shop_dungen) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_shop_dungenSegmentBssStart = .;
            build/baserom/object_shop_dungen.o (.sbss)
            build/baserom/object_shop_dungen.o (.scommon)
            build/baserom/object_shop_dungen.o (.bss)
            build/baserom/object_shop_dungen.o (COMMON)
        . = ALIGN(0x10);
        _object_shop_dungenSegmentBssEnd = .;
        _object_shop_dungenSegmentEnd = .;
    }
    _object_shop_dungenSegmentBssSize = ABSOLUTE( _object_shop_dungenSegmentBssEnd - _object_shop_dungenSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_nbSegmentRomStart = _RomSize;
    ..object_nb : AT(_RomSize)
    {
        _object_nbSegmentStart = .;
        . = ALIGN(0x10);
        _object_nbSegmentTextStart = .;
            build/baserom/object_nb.o (.text)
        _object_nbSegmentTextEnd = .;
    _object_nbSegmentTextSize = ABSOLUTE( _object_nbSegmentTextEnd - _object_nbSegmentTextStart );
        _object_nbSegmentDataStart = .;
            build/baserom/object_nb.o (.data)
        _object_nbSegmentDataEnd = .;
    _object_nbSegmentDataSize = ABSOLUTE( _object_nbSegmentDataEnd - _object_nbSegmentDataStart );
        _object_nbSegmentRoDataStart = .;
            build/baserom/object_nb.o (.rodata)
        _object_nbSegmentRoDataEnd = .;
    _object_nbSegmentRoDataSize = ABSOLUTE( _object_nbSegmentRoDataEnd - _object_nbSegmentRoDataStart );
        _object_nbSegmentSDataStart = .;
            build/baserom/object_nb.o (.sdata)
        . = ALIGN(0x10);
        _object_nbSegmentSDataEnd = .;
        _object_nbSegmentOvlStart = .;
            build/baserom/object_nb.o (.ovl)
        . = ALIGN(0x10);
        _object_nbSegmentOvlEnd = .;
    }
    _RomSize += ( _object_nbSegmentOvlEnd - _object_nbSegmentTextStart );
    _object_nbSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_nb.bss ADDR(..object_nb) + SIZEOF(..object_nb) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_nbSegmentBssStart = .;
            build/baserom/object_nb.o (.sbss)
            build/baserom/object_nb.o (.scommon)
            build/baserom/object_nb.o (.bss)
            build/baserom/object_nb.o (COMMON)
        . = ALIGN(0x10);
        _object_nbSegmentBssEnd = .;
        _object_nbSegmentEnd = .;
    }
    _object_nbSegmentBssSize = ABSOLUTE( _object_nbSegmentBssEnd - _object_nbSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_moSegmentRomStart = _RomSize;
    ..object_mo : AT(_RomSize)
    {
        _object_moSegmentStart = .;
        . = ALIGN(0x10);
        _object_moSegmentTextStart = .;
            build/baserom/object_mo.o (.text)
        _object_moSegmentTextEnd = .;
    _object_moSegmentTextSize = ABSOLUTE( _object_moSegmentTextEnd - _object_moSegmentTextStart );
        _object_moSegmentDataStart = .;
            build/baserom/object_mo.o (.data)
        _object_moSegmentDataEnd = .;
    _object_moSegmentDataSize = ABSOLUTE( _object_moSegmentDataEnd - _object_moSegmentDataStart );
        _object_moSegmentRoDataStart = .;
            build/baserom/object_mo.o (.rodata)
        _object_moSegmentRoDataEnd = .;
    _object_moSegmentRoDataSize = ABSOLUTE( _object_moSegmentRoDataEnd - _object_moSegmentRoDataStart );
        _object_moSegmentSDataStart = .;
            build/baserom/object_mo.o (.sdata)
        . = ALIGN(0x10);
        _object_moSegmentSDataEnd = .;
        _object_moSegmentOvlStart = .;
            build/baserom/object_mo.o (.ovl)
        . = ALIGN(0x10);
        _object_moSegmentOvlEnd = .;
    }
    _RomSize += ( _object_moSegmentOvlEnd - _object_moSegmentTextStart );
    _object_moSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mo.bss ADDR(..object_mo) + SIZEOF(..object_mo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_moSegmentBssStart = .;
            build/baserom/object_mo.o (.sbss)
            build/baserom/object_mo.o (.scommon)
            build/baserom/object_mo.o (.bss)
            build/baserom/object_mo.o (COMMON)
        . = ALIGN(0x10);
        _object_moSegmentBssEnd = .;
        _object_moSegmentEnd = .;
    }
    _object_moSegmentBssSize = ABSOLUTE( _object_moSegmentBssEnd - _object_moSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_sbSegmentRomStart = _RomSize;
    ..object_sb : AT(_RomSize)
    {
        _object_sbSegmentStart = .;
        . = ALIGN(0x10);
        _object_sbSegmentTextStart = .;
            build/baserom/object_sb.o (.text)
        _object_sbSegmentTextEnd = .;
    _object_sbSegmentTextSize = ABSOLUTE( _object_sbSegmentTextEnd - _object_sbSegmentTextStart );
        _object_sbSegmentDataStart = .;
            build/baserom/object_sb.o (.data)
        _object_sbSegmentDataEnd = .;
    _object_sbSegmentDataSize = ABSOLUTE( _object_sbSegmentDataEnd - _object_sbSegmentDataStart );
        _object_sbSegmentRoDataStart = .;
            build/baserom/object_sb.o (.rodata)
        _object_sbSegmentRoDataEnd = .;
    _object_sbSegmentRoDataSize = ABSOLUTE( _object_sbSegmentRoDataEnd - _object_sbSegmentRoDataStart );
        _object_sbSegmentSDataStart = .;
            build/baserom/object_sb.o (.sdata)
        . = ALIGN(0x10);
        _object_sbSegmentSDataEnd = .;
        _object_sbSegmentOvlStart = .;
            build/baserom/object_sb.o (.ovl)
        . = ALIGN(0x10);
        _object_sbSegmentOvlEnd = .;
    }
    _RomSize += ( _object_sbSegmentOvlEnd - _object_sbSegmentTextStart );
    _object_sbSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_sb.bss ADDR(..object_sb) + SIZEOF(..object_sb) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_sbSegmentBssStart = .;
            build/baserom/object_sb.o (.sbss)
            build/baserom/object_sb.o (.scommon)
            build/baserom/object_sb.o (.bss)
            build/baserom/object_sb.o (COMMON)
        . = ALIGN(0x10);
        _object_sbSegmentBssEnd = .;
        _object_sbSegmentEnd = .;
    }
    _object_sbSegmentBssSize = ABSOLUTE( _object_sbSegmentBssEnd - _object_sbSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_melodySegmentRomStart = _RomSize;
    ..object_gi_melody : AT(_RomSize)
    {
        _object_gi_melodySegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_melodySegmentTextStart = .;
            build/baserom/object_gi_melody.o (.text)
        _object_gi_melodySegmentTextEnd = .;
    _object_gi_melodySegmentTextSize = ABSOLUTE( _object_gi_melodySegmentTextEnd - _object_gi_melodySegmentTextStart );
        _object_gi_melodySegmentDataStart = .;
            build/baserom/object_gi_melody.o (.data)
        _object_gi_melodySegmentDataEnd = .;
    _object_gi_melodySegmentDataSize = ABSOLUTE( _object_gi_melodySegmentDataEnd - _object_gi_melodySegmentDataStart );
        _object_gi_melodySegmentRoDataStart = .;
            build/baserom/object_gi_melody.o (.rodata)
        _object_gi_melodySegmentRoDataEnd = .;
    _object_gi_melodySegmentRoDataSize = ABSOLUTE( _object_gi_melodySegmentRoDataEnd - _object_gi_melodySegmentRoDataStart );
        _object_gi_melodySegmentSDataStart = .;
            build/baserom/object_gi_melody.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_melodySegmentSDataEnd = .;
        _object_gi_melodySegmentOvlStart = .;
            build/baserom/object_gi_melody.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_melodySegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_melodySegmentOvlEnd - _object_gi_melodySegmentTextStart );
    _object_gi_melodySegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_melody.bss ADDR(..object_gi_melody) + SIZEOF(..object_gi_melody) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_melodySegmentBssStart = .;
            build/baserom/object_gi_melody.o (.sbss)
            build/baserom/object_gi_melody.o (.scommon)
            build/baserom/object_gi_melody.o (.bss)
            build/baserom/object_gi_melody.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_melodySegmentBssEnd = .;
        _object_gi_melodySegmentEnd = .;
    }
    _object_gi_melodySegmentBssSize = ABSOLUTE( _object_gi_melodySegmentBssEnd - _object_gi_melodySegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_heartSegmentRomStart = _RomSize;
    ..object_gi_heart : AT(_RomSize)
    {
        _object_gi_heartSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_heartSegmentTextStart = .;
            build/baserom/object_gi_heart.o (.text)
        _object_gi_heartSegmentTextEnd = .;
    _object_gi_heartSegmentTextSize = ABSOLUTE( _object_gi_heartSegmentTextEnd - _object_gi_heartSegmentTextStart );
        _object_gi_heartSegmentDataStart = .;
            build/baserom/object_gi_heart.o (.data)
        _object_gi_heartSegmentDataEnd = .;
    _object_gi_heartSegmentDataSize = ABSOLUTE( _object_gi_heartSegmentDataEnd - _object_gi_heartSegmentDataStart );
        _object_gi_heartSegmentRoDataStart = .;
            build/baserom/object_gi_heart.o (.rodata)
        _object_gi_heartSegmentRoDataEnd = .;
    _object_gi_heartSegmentRoDataSize = ABSOLUTE( _object_gi_heartSegmentRoDataEnd - _object_gi_heartSegmentRoDataStart );
        _object_gi_heartSegmentSDataStart = .;
            build/baserom/object_gi_heart.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_heartSegmentSDataEnd = .;
        _object_gi_heartSegmentOvlStart = .;
            build/baserom/object_gi_heart.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_heartSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_heartSegmentOvlEnd - _object_gi_heartSegmentTextStart );
    _object_gi_heartSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_heart.bss ADDR(..object_gi_heart) + SIZEOF(..object_gi_heart) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_heartSegmentBssStart = .;
            build/baserom/object_gi_heart.o (.sbss)
            build/baserom/object_gi_heart.o (.scommon)
            build/baserom/object_gi_heart.o (.bss)
            build/baserom/object_gi_heart.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_heartSegmentBssEnd = .;
        _object_gi_heartSegmentEnd = .;
    }
    _object_gi_heartSegmentBssSize = ABSOLUTE( _object_gi_heartSegmentBssEnd - _object_gi_heartSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_compassSegmentRomStart = _RomSize;
    ..object_gi_compass : AT(_RomSize)
    {
        _object_gi_compassSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_compassSegmentTextStart = .;
            build/baserom/object_gi_compass.o (.text)
        _object_gi_compassSegmentTextEnd = .;
    _object_gi_compassSegmentTextSize = ABSOLUTE( _object_gi_compassSegmentTextEnd - _object_gi_compassSegmentTextStart );
        _object_gi_compassSegmentDataStart = .;
            build/baserom/object_gi_compass.o (.data)
        _object_gi_compassSegmentDataEnd = .;
    _object_gi_compassSegmentDataSize = ABSOLUTE( _object_gi_compassSegmentDataEnd - _object_gi_compassSegmentDataStart );
        _object_gi_compassSegmentRoDataStart = .;
            build/baserom/object_gi_compass.o (.rodata)
        _object_gi_compassSegmentRoDataEnd = .;
    _object_gi_compassSegmentRoDataSize = ABSOLUTE( _object_gi_compassSegmentRoDataEnd - _object_gi_compassSegmentRoDataStart );
        _object_gi_compassSegmentSDataStart = .;
            build/baserom/object_gi_compass.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_compassSegmentSDataEnd = .;
        _object_gi_compassSegmentOvlStart = .;
            build/baserom/object_gi_compass.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_compassSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_compassSegmentOvlEnd - _object_gi_compassSegmentTextStart );
    _object_gi_compassSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_compass.bss ADDR(..object_gi_compass) + SIZEOF(..object_gi_compass) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_compassSegmentBssStart = .;
            build/baserom/object_gi_compass.o (.sbss)
            build/baserom/object_gi_compass.o (.scommon)
            build/baserom/object_gi_compass.o (.bss)
            build/baserom/object_gi_compass.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_compassSegmentBssEnd = .;
        _object_gi_compassSegmentEnd = .;
    }
    _object_gi_compassSegmentBssSize = ABSOLUTE( _object_gi_compassSegmentBssEnd - _object_gi_compassSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_bosskeySegmentRomStart = _RomSize;
    ..object_gi_bosskey : AT(_RomSize)
    {
        _object_gi_bosskeySegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_bosskeySegmentTextStart = .;
            build/baserom/object_gi_bosskey.o (.text)
        _object_gi_bosskeySegmentTextEnd = .;
    _object_gi_bosskeySegmentTextSize = ABSOLUTE( _object_gi_bosskeySegmentTextEnd - _object_gi_bosskeySegmentTextStart );
        _object_gi_bosskeySegmentDataStart = .;
            build/baserom/object_gi_bosskey.o (.data)
        _object_gi_bosskeySegmentDataEnd = .;
    _object_gi_bosskeySegmentDataSize = ABSOLUTE( _object_gi_bosskeySegmentDataEnd - _object_gi_bosskeySegmentDataStart );
        _object_gi_bosskeySegmentRoDataStart = .;
            build/baserom/object_gi_bosskey.o (.rodata)
        _object_gi_bosskeySegmentRoDataEnd = .;
    _object_gi_bosskeySegmentRoDataSize = ABSOLUTE( _object_gi_bosskeySegmentRoDataEnd - _object_gi_bosskeySegmentRoDataStart );
        _object_gi_bosskeySegmentSDataStart = .;
            build/baserom/object_gi_bosskey.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_bosskeySegmentSDataEnd = .;
        _object_gi_bosskeySegmentOvlStart = .;
            build/baserom/object_gi_bosskey.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_bosskeySegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_bosskeySegmentOvlEnd - _object_gi_bosskeySegmentTextStart );
    _object_gi_bosskeySegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_bosskey.bss ADDR(..object_gi_bosskey) + SIZEOF(..object_gi_bosskey) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_bosskeySegmentBssStart = .;
            build/baserom/object_gi_bosskey.o (.sbss)
            build/baserom/object_gi_bosskey.o (.scommon)
            build/baserom/object_gi_bosskey.o (.bss)
            build/baserom/object_gi_bosskey.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_bosskeySegmentBssEnd = .;
        _object_gi_bosskeySegmentEnd = .;
    }
    _object_gi_bosskeySegmentBssSize = ABSOLUTE( _object_gi_bosskeySegmentBssEnd - _object_gi_bosskeySegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_medalSegmentRomStart = _RomSize;
    ..object_gi_medal : AT(_RomSize)
    {
        _object_gi_medalSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_medalSegmentTextStart = .;
            build/baserom/object_gi_medal.o (.text)
        _object_gi_medalSegmentTextEnd = .;
    _object_gi_medalSegmentTextSize = ABSOLUTE( _object_gi_medalSegmentTextEnd - _object_gi_medalSegmentTextStart );
        _object_gi_medalSegmentDataStart = .;
            build/baserom/object_gi_medal.o (.data)
        _object_gi_medalSegmentDataEnd = .;
    _object_gi_medalSegmentDataSize = ABSOLUTE( _object_gi_medalSegmentDataEnd - _object_gi_medalSegmentDataStart );
        _object_gi_medalSegmentRoDataStart = .;
            build/baserom/object_gi_medal.o (.rodata)
        _object_gi_medalSegmentRoDataEnd = .;
    _object_gi_medalSegmentRoDataSize = ABSOLUTE( _object_gi_medalSegmentRoDataEnd - _object_gi_medalSegmentRoDataStart );
        _object_gi_medalSegmentSDataStart = .;
            build/baserom/object_gi_medal.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_medalSegmentSDataEnd = .;
        _object_gi_medalSegmentOvlStart = .;
            build/baserom/object_gi_medal.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_medalSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_medalSegmentOvlEnd - _object_gi_medalSegmentTextStart );
    _object_gi_medalSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_medal.bss ADDR(..object_gi_medal) + SIZEOF(..object_gi_medal) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_medalSegmentBssStart = .;
            build/baserom/object_gi_medal.o (.sbss)
            build/baserom/object_gi_medal.o (.scommon)
            build/baserom/object_gi_medal.o (.bss)
            build/baserom/object_gi_medal.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_medalSegmentBssEnd = .;
        _object_gi_medalSegmentEnd = .;
    }
    _object_gi_medalSegmentBssSize = ABSOLUTE( _object_gi_medalSegmentBssEnd - _object_gi_medalSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_nutsSegmentRomStart = _RomSize;
    ..object_gi_nuts : AT(_RomSize)
    {
        _object_gi_nutsSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_nutsSegmentTextStart = .;
            build/baserom/object_gi_nuts.o (.text)
        _object_gi_nutsSegmentTextEnd = .;
    _object_gi_nutsSegmentTextSize = ABSOLUTE( _object_gi_nutsSegmentTextEnd - _object_gi_nutsSegmentTextStart );
        _object_gi_nutsSegmentDataStart = .;
            build/baserom/object_gi_nuts.o (.data)
        _object_gi_nutsSegmentDataEnd = .;
    _object_gi_nutsSegmentDataSize = ABSOLUTE( _object_gi_nutsSegmentDataEnd - _object_gi_nutsSegmentDataStart );
        _object_gi_nutsSegmentRoDataStart = .;
            build/baserom/object_gi_nuts.o (.rodata)
        _object_gi_nutsSegmentRoDataEnd = .;
    _object_gi_nutsSegmentRoDataSize = ABSOLUTE( _object_gi_nutsSegmentRoDataEnd - _object_gi_nutsSegmentRoDataStart );
        _object_gi_nutsSegmentSDataStart = .;
            build/baserom/object_gi_nuts.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_nutsSegmentSDataEnd = .;
        _object_gi_nutsSegmentOvlStart = .;
            build/baserom/object_gi_nuts.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_nutsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_nutsSegmentOvlEnd - _object_gi_nutsSegmentTextStart );
    _object_gi_nutsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_nuts.bss ADDR(..object_gi_nuts) + SIZEOF(..object_gi_nuts) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_nutsSegmentBssStart = .;
            build/baserom/object_gi_nuts.o (.sbss)
            build/baserom/object_gi_nuts.o (.scommon)
            build/baserom/object_gi_nuts.o (.bss)
            build/baserom/object_gi_nuts.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_nutsSegmentBssEnd = .;
        _object_gi_nutsSegmentEnd = .;
    }
    _object_gi_nutsSegmentBssSize = ABSOLUTE( _object_gi_nutsSegmentBssEnd - _object_gi_nutsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_saSegmentRomStart = _RomSize;
    ..object_sa : AT(_RomSize)
    {
        _object_saSegmentStart = .;
        . = ALIGN(0x10);
        _object_saSegmentTextStart = .;
            build/baserom/object_sa.o (.text)
        _object_saSegmentTextEnd = .;
    _object_saSegmentTextSize = ABSOLUTE( _object_saSegmentTextEnd - _object_saSegmentTextStart );
        _object_saSegmentDataStart = .;
            build/baserom/object_sa.o (.data)
        _object_saSegmentDataEnd = .;
    _object_saSegmentDataSize = ABSOLUTE( _object_saSegmentDataEnd - _object_saSegmentDataStart );
        _object_saSegmentRoDataStart = .;
            build/baserom/object_sa.o (.rodata)
        _object_saSegmentRoDataEnd = .;
    _object_saSegmentRoDataSize = ABSOLUTE( _object_saSegmentRoDataEnd - _object_saSegmentRoDataStart );
        _object_saSegmentSDataStart = .;
            build/baserom/object_sa.o (.sdata)
        . = ALIGN(0x10);
        _object_saSegmentSDataEnd = .;
        _object_saSegmentOvlStart = .;
            build/baserom/object_sa.o (.ovl)
        . = ALIGN(0x10);
        _object_saSegmentOvlEnd = .;
    }
    _RomSize += ( _object_saSegmentOvlEnd - _object_saSegmentTextStart );
    _object_saSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_sa.bss ADDR(..object_sa) + SIZEOF(..object_sa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_saSegmentBssStart = .;
            build/baserom/object_sa.o (.sbss)
            build/baserom/object_sa.o (.scommon)
            build/baserom/object_sa.o (.bss)
            build/baserom/object_sa.o (COMMON)
        . = ALIGN(0x10);
        _object_saSegmentBssEnd = .;
        _object_saSegmentEnd = .;
    }
    _object_saSegmentBssSize = ABSOLUTE( _object_saSegmentBssEnd - _object_saSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_heartsSegmentRomStart = _RomSize;
    ..object_gi_hearts : AT(_RomSize)
    {
        _object_gi_heartsSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_heartsSegmentTextStart = .;
            build/baserom/object_gi_hearts.o (.text)
        _object_gi_heartsSegmentTextEnd = .;
    _object_gi_heartsSegmentTextSize = ABSOLUTE( _object_gi_heartsSegmentTextEnd - _object_gi_heartsSegmentTextStart );
        _object_gi_heartsSegmentDataStart = .;
            build/baserom/object_gi_hearts.o (.data)
        _object_gi_heartsSegmentDataEnd = .;
    _object_gi_heartsSegmentDataSize = ABSOLUTE( _object_gi_heartsSegmentDataEnd - _object_gi_heartsSegmentDataStart );
        _object_gi_heartsSegmentRoDataStart = .;
            build/baserom/object_gi_hearts.o (.rodata)
        _object_gi_heartsSegmentRoDataEnd = .;
    _object_gi_heartsSegmentRoDataSize = ABSOLUTE( _object_gi_heartsSegmentRoDataEnd - _object_gi_heartsSegmentRoDataStart );
        _object_gi_heartsSegmentSDataStart = .;
            build/baserom/object_gi_hearts.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_heartsSegmentSDataEnd = .;
        _object_gi_heartsSegmentOvlStart = .;
            build/baserom/object_gi_hearts.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_heartsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_heartsSegmentOvlEnd - _object_gi_heartsSegmentTextStart );
    _object_gi_heartsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_hearts.bss ADDR(..object_gi_hearts) + SIZEOF(..object_gi_hearts) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_heartsSegmentBssStart = .;
            build/baserom/object_gi_hearts.o (.sbss)
            build/baserom/object_gi_hearts.o (.scommon)
            build/baserom/object_gi_hearts.o (.bss)
            build/baserom/object_gi_hearts.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_heartsSegmentBssEnd = .;
        _object_gi_heartsSegmentEnd = .;
    }
    _object_gi_heartsSegmentBssSize = ABSOLUTE( _object_gi_heartsSegmentBssEnd - _object_gi_heartsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_arrowcaseSegmentRomStart = _RomSize;
    ..object_gi_arrowcase : AT(_RomSize)
    {
        _object_gi_arrowcaseSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_arrowcaseSegmentTextStart = .;
            build/baserom/object_gi_arrowcase.o (.text)
        _object_gi_arrowcaseSegmentTextEnd = .;
    _object_gi_arrowcaseSegmentTextSize = ABSOLUTE( _object_gi_arrowcaseSegmentTextEnd - _object_gi_arrowcaseSegmentTextStart );
        _object_gi_arrowcaseSegmentDataStart = .;
            build/baserom/object_gi_arrowcase.o (.data)
        _object_gi_arrowcaseSegmentDataEnd = .;
    _object_gi_arrowcaseSegmentDataSize = ABSOLUTE( _object_gi_arrowcaseSegmentDataEnd - _object_gi_arrowcaseSegmentDataStart );
        _object_gi_arrowcaseSegmentRoDataStart = .;
            build/baserom/object_gi_arrowcase.o (.rodata)
        _object_gi_arrowcaseSegmentRoDataEnd = .;
    _object_gi_arrowcaseSegmentRoDataSize = ABSOLUTE( _object_gi_arrowcaseSegmentRoDataEnd - _object_gi_arrowcaseSegmentRoDataStart );
        _object_gi_arrowcaseSegmentSDataStart = .;
            build/baserom/object_gi_arrowcase.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_arrowcaseSegmentSDataEnd = .;
        _object_gi_arrowcaseSegmentOvlStart = .;
            build/baserom/object_gi_arrowcase.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_arrowcaseSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_arrowcaseSegmentOvlEnd - _object_gi_arrowcaseSegmentTextStart );
    _object_gi_arrowcaseSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_arrowcase.bss ADDR(..object_gi_arrowcase) + SIZEOF(..object_gi_arrowcase) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_arrowcaseSegmentBssStart = .;
            build/baserom/object_gi_arrowcase.o (.sbss)
            build/baserom/object_gi_arrowcase.o (.scommon)
            build/baserom/object_gi_arrowcase.o (.bss)
            build/baserom/object_gi_arrowcase.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_arrowcaseSegmentBssEnd = .;
        _object_gi_arrowcaseSegmentEnd = .;
    }
    _object_gi_arrowcaseSegmentBssSize = ABSOLUTE( _object_gi_arrowcaseSegmentBssEnd - _object_gi_arrowcaseSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_bombpouchSegmentRomStart = _RomSize;
    ..object_gi_bombpouch : AT(_RomSize)
    {
        _object_gi_bombpouchSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_bombpouchSegmentTextStart = .;
            build/baserom/object_gi_bombpouch.o (.text)
        _object_gi_bombpouchSegmentTextEnd = .;
    _object_gi_bombpouchSegmentTextSize = ABSOLUTE( _object_gi_bombpouchSegmentTextEnd - _object_gi_bombpouchSegmentTextStart );
        _object_gi_bombpouchSegmentDataStart = .;
            build/baserom/object_gi_bombpouch.o (.data)
        _object_gi_bombpouchSegmentDataEnd = .;
    _object_gi_bombpouchSegmentDataSize = ABSOLUTE( _object_gi_bombpouchSegmentDataEnd - _object_gi_bombpouchSegmentDataStart );
        _object_gi_bombpouchSegmentRoDataStart = .;
            build/baserom/object_gi_bombpouch.o (.rodata)
        _object_gi_bombpouchSegmentRoDataEnd = .;
    _object_gi_bombpouchSegmentRoDataSize = ABSOLUTE( _object_gi_bombpouchSegmentRoDataEnd - _object_gi_bombpouchSegmentRoDataStart );
        _object_gi_bombpouchSegmentSDataStart = .;
            build/baserom/object_gi_bombpouch.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_bombpouchSegmentSDataEnd = .;
        _object_gi_bombpouchSegmentOvlStart = .;
            build/baserom/object_gi_bombpouch.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_bombpouchSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_bombpouchSegmentOvlEnd - _object_gi_bombpouchSegmentTextStart );
    _object_gi_bombpouchSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_bombpouch.bss ADDR(..object_gi_bombpouch) + SIZEOF(..object_gi_bombpouch) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_bombpouchSegmentBssStart = .;
            build/baserom/object_gi_bombpouch.o (.sbss)
            build/baserom/object_gi_bombpouch.o (.scommon)
            build/baserom/object_gi_bombpouch.o (.bss)
            build/baserom/object_gi_bombpouch.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_bombpouchSegmentBssEnd = .;
        _object_gi_bombpouchSegmentEnd = .;
    }
    _object_gi_bombpouchSegmentBssSize = ABSOLUTE( _object_gi_bombpouchSegmentBssEnd - _object_gi_bombpouchSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_inSegmentRomStart = _RomSize;
    ..object_in : AT(_RomSize)
    {
        _object_inSegmentStart = .;
        . = ALIGN(0x10);
        _object_inSegmentTextStart = .;
            build/baserom/object_in.o (.text)
        _object_inSegmentTextEnd = .;
    _object_inSegmentTextSize = ABSOLUTE( _object_inSegmentTextEnd - _object_inSegmentTextStart );
        _object_inSegmentDataStart = .;
            build/baserom/object_in.o (.data)
        _object_inSegmentDataEnd = .;
    _object_inSegmentDataSize = ABSOLUTE( _object_inSegmentDataEnd - _object_inSegmentDataStart );
        _object_inSegmentRoDataStart = .;
            build/baserom/object_in.o (.rodata)
        _object_inSegmentRoDataEnd = .;
    _object_inSegmentRoDataSize = ABSOLUTE( _object_inSegmentRoDataEnd - _object_inSegmentRoDataStart );
        _object_inSegmentSDataStart = .;
            build/baserom/object_in.o (.sdata)
        . = ALIGN(0x10);
        _object_inSegmentSDataEnd = .;
        _object_inSegmentOvlStart = .;
            build/baserom/object_in.o (.ovl)
        . = ALIGN(0x10);
        _object_inSegmentOvlEnd = .;
    }
    _RomSize += ( _object_inSegmentOvlEnd - _object_inSegmentTextStart );
    _object_inSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_in.bss ADDR(..object_in) + SIZEOF(..object_in) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_inSegmentBssStart = .;
            build/baserom/object_in.o (.sbss)
            build/baserom/object_in.o (.scommon)
            build/baserom/object_in.o (.bss)
            build/baserom/object_in.o (COMMON)
        . = ALIGN(0x10);
        _object_inSegmentBssEnd = .;
        _object_inSegmentEnd = .;
    }
    _object_inSegmentBssSize = ABSOLUTE( _object_inSegmentBssEnd - _object_inSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_trSegmentRomStart = _RomSize;
    ..object_tr : AT(_RomSize)
    {
        _object_trSegmentStart = .;
        . = ALIGN(0x10);
        _object_trSegmentTextStart = .;
            build/baserom/object_tr.o (.text)
        _object_trSegmentTextEnd = .;
    _object_trSegmentTextSize = ABSOLUTE( _object_trSegmentTextEnd - _object_trSegmentTextStart );
        _object_trSegmentDataStart = .;
            build/baserom/object_tr.o (.data)
        _object_trSegmentDataEnd = .;
    _object_trSegmentDataSize = ABSOLUTE( _object_trSegmentDataEnd - _object_trSegmentDataStart );
        _object_trSegmentRoDataStart = .;
            build/baserom/object_tr.o (.rodata)
        _object_trSegmentRoDataEnd = .;
    _object_trSegmentRoDataSize = ABSOLUTE( _object_trSegmentRoDataEnd - _object_trSegmentRoDataStart );
        _object_trSegmentSDataStart = .;
            build/baserom/object_tr.o (.sdata)
        . = ALIGN(0x10);
        _object_trSegmentSDataEnd = .;
        _object_trSegmentOvlStart = .;
            build/baserom/object_tr.o (.ovl)
        . = ALIGN(0x10);
        _object_trSegmentOvlEnd = .;
    }
    _RomSize += ( _object_trSegmentOvlEnd - _object_trSegmentTextStart );
    _object_trSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_tr.bss ADDR(..object_tr) + SIZEOF(..object_tr) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_trSegmentBssStart = .;
            build/baserom/object_tr.o (.sbss)
            build/baserom/object_tr.o (.scommon)
            build/baserom/object_tr.o (.bss)
            build/baserom/object_tr.o (COMMON)
        . = ALIGN(0x10);
        _object_trSegmentBssEnd = .;
        _object_trSegmentEnd = .;
    }
    _object_trSegmentBssSize = ABSOLUTE( _object_trSegmentBssEnd - _object_trSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot16_objSegmentRomStart = _RomSize;
    ..object_spot16_obj : AT(_RomSize)
    {
        _object_spot16_objSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot16_objSegmentTextStart = .;
            build/baserom/object_spot16_obj.o (.text)
        _object_spot16_objSegmentTextEnd = .;
    _object_spot16_objSegmentTextSize = ABSOLUTE( _object_spot16_objSegmentTextEnd - _object_spot16_objSegmentTextStart );
        _object_spot16_objSegmentDataStart = .;
            build/baserom/object_spot16_obj.o (.data)
        _object_spot16_objSegmentDataEnd = .;
    _object_spot16_objSegmentDataSize = ABSOLUTE( _object_spot16_objSegmentDataEnd - _object_spot16_objSegmentDataStart );
        _object_spot16_objSegmentRoDataStart = .;
            build/baserom/object_spot16_obj.o (.rodata)
        _object_spot16_objSegmentRoDataEnd = .;
    _object_spot16_objSegmentRoDataSize = ABSOLUTE( _object_spot16_objSegmentRoDataEnd - _object_spot16_objSegmentRoDataStart );
        _object_spot16_objSegmentSDataStart = .;
            build/baserom/object_spot16_obj.o (.sdata)
        . = ALIGN(0x10);
        _object_spot16_objSegmentSDataEnd = .;
        _object_spot16_objSegmentOvlStart = .;
            build/baserom/object_spot16_obj.o (.ovl)
        . = ALIGN(0x10);
        _object_spot16_objSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot16_objSegmentOvlEnd - _object_spot16_objSegmentTextStart );
    _object_spot16_objSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot16_obj.bss ADDR(..object_spot16_obj) + SIZEOF(..object_spot16_obj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot16_objSegmentBssStart = .;
            build/baserom/object_spot16_obj.o (.sbss)
            build/baserom/object_spot16_obj.o (.scommon)
            build/baserom/object_spot16_obj.o (.bss)
            build/baserom/object_spot16_obj.o (COMMON)
        . = ALIGN(0x10);
        _object_spot16_objSegmentBssEnd = .;
        _object_spot16_objSegmentEnd = .;
    }
    _object_spot16_objSegmentBssSize = ABSOLUTE( _object_spot16_objSegmentBssEnd - _object_spot16_objSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE1sSegmentRomStart = _RomSize;
    ..object_oE1s : AT(_RomSize)
    {
        _object_oE1sSegmentStart = .;
        . = ALIGN(0x10);
        _object_oE1sSegmentTextStart = .;
            build/baserom/object_oE1s.o (.text)
        _object_oE1sSegmentTextEnd = .;
    _object_oE1sSegmentTextSize = ABSOLUTE( _object_oE1sSegmentTextEnd - _object_oE1sSegmentTextStart );
        _object_oE1sSegmentDataStart = .;
            build/baserom/object_oE1s.o (.data)
        _object_oE1sSegmentDataEnd = .;
    _object_oE1sSegmentDataSize = ABSOLUTE( _object_oE1sSegmentDataEnd - _object_oE1sSegmentDataStart );
        _object_oE1sSegmentRoDataStart = .;
            build/baserom/object_oE1s.o (.rodata)
        _object_oE1sSegmentRoDataEnd = .;
    _object_oE1sSegmentRoDataSize = ABSOLUTE( _object_oE1sSegmentRoDataEnd - _object_oE1sSegmentRoDataStart );
        _object_oE1sSegmentSDataStart = .;
            build/baserom/object_oE1s.o (.sdata)
        . = ALIGN(0x10);
        _object_oE1sSegmentSDataEnd = .;
        _object_oE1sSegmentOvlStart = .;
            build/baserom/object_oE1s.o (.ovl)
        . = ALIGN(0x10);
        _object_oE1sSegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE1sSegmentOvlEnd - _object_oE1sSegmentTextStart );
    _object_oE1sSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE1s.bss ADDR(..object_oE1s) + SIZEOF(..object_oE1s) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE1sSegmentBssStart = .;
            build/baserom/object_oE1s.o (.sbss)
            build/baserom/object_oE1s.o (.scommon)
            build/baserom/object_oE1s.o (.bss)
            build/baserom/object_oE1s.o (COMMON)
        . = ALIGN(0x10);
        _object_oE1sSegmentBssEnd = .;
        _object_oE1sSegmentEnd = .;
    }
    _object_oE1sSegmentBssSize = ABSOLUTE( _object_oE1sSegmentBssEnd - _object_oE1sSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oE4sSegmentRomStart = _RomSize;
    ..object_oE4s : AT(_RomSize)
    {
        _object_oE4sSegmentStart = .;
        . = ALIGN(0x10);
        _object_oE4sSegmentTextStart = .;
            build/baserom/object_oE4s.o (.text)
        _object_oE4sSegmentTextEnd = .;
    _object_oE4sSegmentTextSize = ABSOLUTE( _object_oE4sSegmentTextEnd - _object_oE4sSegmentTextStart );
        _object_oE4sSegmentDataStart = .;
            build/baserom/object_oE4s.o (.data)
        _object_oE4sSegmentDataEnd = .;
    _object_oE4sSegmentDataSize = ABSOLUTE( _object_oE4sSegmentDataEnd - _object_oE4sSegmentDataStart );
        _object_oE4sSegmentRoDataStart = .;
            build/baserom/object_oE4s.o (.rodata)
        _object_oE4sSegmentRoDataEnd = .;
    _object_oE4sSegmentRoDataSize = ABSOLUTE( _object_oE4sSegmentRoDataEnd - _object_oE4sSegmentRoDataStart );
        _object_oE4sSegmentSDataStart = .;
            build/baserom/object_oE4s.o (.sdata)
        . = ALIGN(0x10);
        _object_oE4sSegmentSDataEnd = .;
        _object_oE4sSegmentOvlStart = .;
            build/baserom/object_oE4s.o (.ovl)
        . = ALIGN(0x10);
        _object_oE4sSegmentOvlEnd = .;
    }
    _RomSize += ( _object_oE4sSegmentOvlEnd - _object_oE4sSegmentTextStart );
    _object_oE4sSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oE4s.bss ADDR(..object_oE4s) + SIZEOF(..object_oE4s) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oE4sSegmentBssStart = .;
            build/baserom/object_oE4s.o (.sbss)
            build/baserom/object_oE4s.o (.scommon)
            build/baserom/object_oE4s.o (.bss)
            build/baserom/object_oE4s.o (COMMON)
        . = ALIGN(0x10);
        _object_oE4sSegmentBssEnd = .;
        _object_oE4sSegmentEnd = .;
    }
    _object_oE4sSegmentBssSize = ABSOLUTE( _object_oE4sSegmentBssEnd - _object_oE4sSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_os_animeSegmentRomStart = _RomSize;
    ..object_os_anime : AT(_RomSize)
    {
        _object_os_animeSegmentStart = .;
        . = ALIGN(0x10);
        _object_os_animeSegmentTextStart = .;
            build/baserom/object_os_anime.o (.text)
        _object_os_animeSegmentTextEnd = .;
    _object_os_animeSegmentTextSize = ABSOLUTE( _object_os_animeSegmentTextEnd - _object_os_animeSegmentTextStart );
        _object_os_animeSegmentDataStart = .;
            build/baserom/object_os_anime.o (.data)
        _object_os_animeSegmentDataEnd = .;
    _object_os_animeSegmentDataSize = ABSOLUTE( _object_os_animeSegmentDataEnd - _object_os_animeSegmentDataStart );
        _object_os_animeSegmentRoDataStart = .;
            build/baserom/object_os_anime.o (.rodata)
        _object_os_animeSegmentRoDataEnd = .;
    _object_os_animeSegmentRoDataSize = ABSOLUTE( _object_os_animeSegmentRoDataEnd - _object_os_animeSegmentRoDataStart );
        _object_os_animeSegmentSDataStart = .;
            build/baserom/object_os_anime.o (.sdata)
        . = ALIGN(0x10);
        _object_os_animeSegmentSDataEnd = .;
        _object_os_animeSegmentOvlStart = .;
            build/baserom/object_os_anime.o (.ovl)
        . = ALIGN(0x10);
        _object_os_animeSegmentOvlEnd = .;
    }
    _RomSize += ( _object_os_animeSegmentOvlEnd - _object_os_animeSegmentTextStart );
    _object_os_animeSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_os_anime.bss ADDR(..object_os_anime) + SIZEOF(..object_os_anime) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_os_animeSegmentBssStart = .;
            build/baserom/object_os_anime.o (.sbss)
            build/baserom/object_os_anime.o (.scommon)
            build/baserom/object_os_anime.o (.bss)
            build/baserom/object_os_anime.o (COMMON)
        . = ALIGN(0x10);
        _object_os_animeSegmentBssEnd = .;
        _object_os_animeSegmentEnd = .;
    }
    _object_os_animeSegmentBssSize = ABSOLUTE( _object_os_animeSegmentBssEnd - _object_os_animeSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_bottleSegmentRomStart = _RomSize;
    ..object_gi_bottle : AT(_RomSize)
    {
        _object_gi_bottleSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_bottleSegmentTextStart = .;
            build/baserom/object_gi_bottle.o (.text)
        _object_gi_bottleSegmentTextEnd = .;
    _object_gi_bottleSegmentTextSize = ABSOLUTE( _object_gi_bottleSegmentTextEnd - _object_gi_bottleSegmentTextStart );
        _object_gi_bottleSegmentDataStart = .;
            build/baserom/object_gi_bottle.o (.data)
        _object_gi_bottleSegmentDataEnd = .;
    _object_gi_bottleSegmentDataSize = ABSOLUTE( _object_gi_bottleSegmentDataEnd - _object_gi_bottleSegmentDataStart );
        _object_gi_bottleSegmentRoDataStart = .;
            build/baserom/object_gi_bottle.o (.rodata)
        _object_gi_bottleSegmentRoDataEnd = .;
    _object_gi_bottleSegmentRoDataSize = ABSOLUTE( _object_gi_bottleSegmentRoDataEnd - _object_gi_bottleSegmentRoDataStart );
        _object_gi_bottleSegmentSDataStart = .;
            build/baserom/object_gi_bottle.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_bottleSegmentSDataEnd = .;
        _object_gi_bottleSegmentOvlStart = .;
            build/baserom/object_gi_bottle.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_bottleSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_bottleSegmentOvlEnd - _object_gi_bottleSegmentTextStart );
    _object_gi_bottleSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_bottle.bss ADDR(..object_gi_bottle) + SIZEOF(..object_gi_bottle) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_bottleSegmentBssStart = .;
            build/baserom/object_gi_bottle.o (.sbss)
            build/baserom/object_gi_bottle.o (.scommon)
            build/baserom/object_gi_bottle.o (.bss)
            build/baserom/object_gi_bottle.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_bottleSegmentBssEnd = .;
        _object_gi_bottleSegmentEnd = .;
    }
    _object_gi_bottleSegmentBssSize = ABSOLUTE( _object_gi_bottleSegmentBssEnd - _object_gi_bottleSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_stickSegmentRomStart = _RomSize;
    ..object_gi_stick : AT(_RomSize)
    {
        _object_gi_stickSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_stickSegmentTextStart = .;
            build/baserom/object_gi_stick.o (.text)
        _object_gi_stickSegmentTextEnd = .;
    _object_gi_stickSegmentTextSize = ABSOLUTE( _object_gi_stickSegmentTextEnd - _object_gi_stickSegmentTextStart );
        _object_gi_stickSegmentDataStart = .;
            build/baserom/object_gi_stick.o (.data)
        _object_gi_stickSegmentDataEnd = .;
    _object_gi_stickSegmentDataSize = ABSOLUTE( _object_gi_stickSegmentDataEnd - _object_gi_stickSegmentDataStart );
        _object_gi_stickSegmentRoDataStart = .;
            build/baserom/object_gi_stick.o (.rodata)
        _object_gi_stickSegmentRoDataEnd = .;
    _object_gi_stickSegmentRoDataSize = ABSOLUTE( _object_gi_stickSegmentRoDataEnd - _object_gi_stickSegmentRoDataStart );
        _object_gi_stickSegmentSDataStart = .;
            build/baserom/object_gi_stick.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_stickSegmentSDataEnd = .;
        _object_gi_stickSegmentOvlStart = .;
            build/baserom/object_gi_stick.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_stickSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_stickSegmentOvlEnd - _object_gi_stickSegmentTextStart );
    _object_gi_stickSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_stick.bss ADDR(..object_gi_stick) + SIZEOF(..object_gi_stick) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_stickSegmentBssStart = .;
            build/baserom/object_gi_stick.o (.sbss)
            build/baserom/object_gi_stick.o (.scommon)
            build/baserom/object_gi_stick.o (.bss)
            build/baserom/object_gi_stick.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_stickSegmentBssEnd = .;
        _object_gi_stickSegmentEnd = .;
    }
    _object_gi_stickSegmentBssSize = ABSOLUTE( _object_gi_stickSegmentBssEnd - _object_gi_stickSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_mapSegmentRomStart = _RomSize;
    ..object_gi_map : AT(_RomSize)
    {
        _object_gi_mapSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_mapSegmentTextStart = .;
            build/baserom/object_gi_map.o (.text)
        _object_gi_mapSegmentTextEnd = .;
    _object_gi_mapSegmentTextSize = ABSOLUTE( _object_gi_mapSegmentTextEnd - _object_gi_mapSegmentTextStart );
        _object_gi_mapSegmentDataStart = .;
            build/baserom/object_gi_map.o (.data)
        _object_gi_mapSegmentDataEnd = .;
    _object_gi_mapSegmentDataSize = ABSOLUTE( _object_gi_mapSegmentDataEnd - _object_gi_mapSegmentDataStart );
        _object_gi_mapSegmentRoDataStart = .;
            build/baserom/object_gi_map.o (.rodata)
        _object_gi_mapSegmentRoDataEnd = .;
    _object_gi_mapSegmentRoDataSize = ABSOLUTE( _object_gi_mapSegmentRoDataEnd - _object_gi_mapSegmentRoDataStart );
        _object_gi_mapSegmentSDataStart = .;
            build/baserom/object_gi_map.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_mapSegmentSDataEnd = .;
        _object_gi_mapSegmentOvlStart = .;
            build/baserom/object_gi_map.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_mapSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_mapSegmentOvlEnd - _object_gi_mapSegmentTextStart );
    _object_gi_mapSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_map.bss ADDR(..object_gi_map) + SIZEOF(..object_gi_map) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_mapSegmentBssStart = .;
            build/baserom/object_gi_map.o (.sbss)
            build/baserom/object_gi_map.o (.scommon)
            build/baserom/object_gi_map.o (.bss)
            build/baserom/object_gi_map.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_mapSegmentBssEnd = .;
        _object_gi_mapSegmentEnd = .;
    }
    _object_gi_mapSegmentBssSize = ABSOLUTE( _object_gi_mapSegmentBssEnd - _object_gi_mapSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oF1d_mapSegmentRomStart = _RomSize;
    ..object_oF1d_map : AT(_RomSize)
    {
        _object_oF1d_mapSegmentStart = .;
        . = ALIGN(0x10);
        _object_oF1d_mapSegmentTextStart = .;
            build/baserom/object_oF1d_map.o (.text)
        _object_oF1d_mapSegmentTextEnd = .;
    _object_oF1d_mapSegmentTextSize = ABSOLUTE( _object_oF1d_mapSegmentTextEnd - _object_oF1d_mapSegmentTextStart );
        _object_oF1d_mapSegmentDataStart = .;
            build/baserom/object_oF1d_map.o (.data)
        _object_oF1d_mapSegmentDataEnd = .;
    _object_oF1d_mapSegmentDataSize = ABSOLUTE( _object_oF1d_mapSegmentDataEnd - _object_oF1d_mapSegmentDataStart );
        _object_oF1d_mapSegmentRoDataStart = .;
            build/baserom/object_oF1d_map.o (.rodata)
        _object_oF1d_mapSegmentRoDataEnd = .;
    _object_oF1d_mapSegmentRoDataSize = ABSOLUTE( _object_oF1d_mapSegmentRoDataEnd - _object_oF1d_mapSegmentRoDataStart );
        _object_oF1d_mapSegmentSDataStart = .;
            build/baserom/object_oF1d_map.o (.sdata)
        . = ALIGN(0x10);
        _object_oF1d_mapSegmentSDataEnd = .;
        _object_oF1d_mapSegmentOvlStart = .;
            build/baserom/object_oF1d_map.o (.ovl)
        . = ALIGN(0x10);
        _object_oF1d_mapSegmentOvlEnd = .;
    }
    _RomSize += ( _object_oF1d_mapSegmentOvlEnd - _object_oF1d_mapSegmentTextStart );
    _object_oF1d_mapSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oF1d_map.bss ADDR(..object_oF1d_map) + SIZEOF(..object_oF1d_map) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oF1d_mapSegmentBssStart = .;
            build/baserom/object_oF1d_map.o (.sbss)
            build/baserom/object_oF1d_map.o (.scommon)
            build/baserom/object_oF1d_map.o (.bss)
            build/baserom/object_oF1d_map.o (COMMON)
        . = ALIGN(0x10);
        _object_oF1d_mapSegmentBssEnd = .;
        _object_oF1d_mapSegmentEnd = .;
    }
    _object_oF1d_mapSegmentBssSize = ABSOLUTE( _object_oF1d_mapSegmentBssEnd - _object_oF1d_mapSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ru2SegmentRomStart = _RomSize;
    ..object_ru2 : AT(_RomSize)
    {
        _object_ru2SegmentStart = .;
        . = ALIGN(0x10);
        _object_ru2SegmentTextStart = .;
            build/baserom/object_ru2.o (.text)
        _object_ru2SegmentTextEnd = .;
    _object_ru2SegmentTextSize = ABSOLUTE( _object_ru2SegmentTextEnd - _object_ru2SegmentTextStart );
        _object_ru2SegmentDataStart = .;
            build/baserom/object_ru2.o (.data)
        _object_ru2SegmentDataEnd = .;
    _object_ru2SegmentDataSize = ABSOLUTE( _object_ru2SegmentDataEnd - _object_ru2SegmentDataStart );
        _object_ru2SegmentRoDataStart = .;
            build/baserom/object_ru2.o (.rodata)
        _object_ru2SegmentRoDataEnd = .;
    _object_ru2SegmentRoDataSize = ABSOLUTE( _object_ru2SegmentRoDataEnd - _object_ru2SegmentRoDataStart );
        _object_ru2SegmentSDataStart = .;
            build/baserom/object_ru2.o (.sdata)
        . = ALIGN(0x10);
        _object_ru2SegmentSDataEnd = .;
        _object_ru2SegmentOvlStart = .;
            build/baserom/object_ru2.o (.ovl)
        . = ALIGN(0x10);
        _object_ru2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_ru2SegmentOvlEnd - _object_ru2SegmentTextStart );
    _object_ru2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ru2.bss ADDR(..object_ru2) + SIZEOF(..object_ru2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ru2SegmentBssStart = .;
            build/baserom/object_ru2.o (.sbss)
            build/baserom/object_ru2.o (.scommon)
            build/baserom/object_ru2.o (.bss)
            build/baserom/object_ru2.o (COMMON)
        . = ALIGN(0x10);
        _object_ru2SegmentBssEnd = .;
        _object_ru2SegmentEnd = .;
    }
    _object_ru2SegmentBssSize = ABSOLUTE( _object_ru2SegmentBssEnd - _object_ru2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_shield_1SegmentRomStart = _RomSize;
    ..object_gi_shield_1 : AT(_RomSize)
    {
        _object_gi_shield_1SegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_shield_1SegmentTextStart = .;
            build/baserom/object_gi_shield_1.o (.text)
        _object_gi_shield_1SegmentTextEnd = .;
    _object_gi_shield_1SegmentTextSize = ABSOLUTE( _object_gi_shield_1SegmentTextEnd - _object_gi_shield_1SegmentTextStart );
        _object_gi_shield_1SegmentDataStart = .;
            build/baserom/object_gi_shield_1.o (.data)
        _object_gi_shield_1SegmentDataEnd = .;
    _object_gi_shield_1SegmentDataSize = ABSOLUTE( _object_gi_shield_1SegmentDataEnd - _object_gi_shield_1SegmentDataStart );
        _object_gi_shield_1SegmentRoDataStart = .;
            build/baserom/object_gi_shield_1.o (.rodata)
        _object_gi_shield_1SegmentRoDataEnd = .;
    _object_gi_shield_1SegmentRoDataSize = ABSOLUTE( _object_gi_shield_1SegmentRoDataEnd - _object_gi_shield_1SegmentRoDataStart );
        _object_gi_shield_1SegmentSDataStart = .;
            build/baserom/object_gi_shield_1.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_shield_1SegmentSDataEnd = .;
        _object_gi_shield_1SegmentOvlStart = .;
            build/baserom/object_gi_shield_1.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_shield_1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_shield_1SegmentOvlEnd - _object_gi_shield_1SegmentTextStart );
    _object_gi_shield_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_shield_1.bss ADDR(..object_gi_shield_1) + SIZEOF(..object_gi_shield_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_shield_1SegmentBssStart = .;
            build/baserom/object_gi_shield_1.o (.sbss)
            build/baserom/object_gi_shield_1.o (.scommon)
            build/baserom/object_gi_shield_1.o (.bss)
            build/baserom/object_gi_shield_1.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_shield_1SegmentBssEnd = .;
        _object_gi_shield_1SegmentEnd = .;
    }
    _object_gi_shield_1SegmentBssSize = ABSOLUTE( _object_gi_shield_1SegmentBssEnd - _object_gi_shield_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_dekujrSegmentRomStart = _RomSize;
    ..object_dekujr : AT(_RomSize)
    {
        _object_dekujrSegmentStart = .;
        . = ALIGN(0x10);
        _object_dekujrSegmentTextStart = .;
            build/baserom/object_dekujr.o (.text)
        _object_dekujrSegmentTextEnd = .;
    _object_dekujrSegmentTextSize = ABSOLUTE( _object_dekujrSegmentTextEnd - _object_dekujrSegmentTextStart );
        _object_dekujrSegmentDataStart = .;
            build/baserom/object_dekujr.o (.data)
        _object_dekujrSegmentDataEnd = .;
    _object_dekujrSegmentDataSize = ABSOLUTE( _object_dekujrSegmentDataEnd - _object_dekujrSegmentDataStart );
        _object_dekujrSegmentRoDataStart = .;
            build/baserom/object_dekujr.o (.rodata)
        _object_dekujrSegmentRoDataEnd = .;
    _object_dekujrSegmentRoDataSize = ABSOLUTE( _object_dekujrSegmentRoDataEnd - _object_dekujrSegmentRoDataStart );
        _object_dekujrSegmentSDataStart = .;
            build/baserom/object_dekujr.o (.sdata)
        . = ALIGN(0x10);
        _object_dekujrSegmentSDataEnd = .;
        _object_dekujrSegmentOvlStart = .;
            build/baserom/object_dekujr.o (.ovl)
        . = ALIGN(0x10);
        _object_dekujrSegmentOvlEnd = .;
    }
    _RomSize += ( _object_dekujrSegmentOvlEnd - _object_dekujrSegmentTextStart );
    _object_dekujrSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_dekujr.bss ADDR(..object_dekujr) + SIZEOF(..object_dekujr) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_dekujrSegmentBssStart = .;
            build/baserom/object_dekujr.o (.sbss)
            build/baserom/object_dekujr.o (.scommon)
            build/baserom/object_dekujr.o (.bss)
            build/baserom/object_dekujr.o (COMMON)
        . = ALIGN(0x10);
        _object_dekujrSegmentBssEnd = .;
        _object_dekujrSegmentEnd = .;
    }
    _object_dekujrSegmentBssSize = ABSOLUTE( _object_dekujrSegmentBssEnd - _object_dekujrSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_magicpotSegmentRomStart = _RomSize;
    ..object_gi_magicpot : AT(_RomSize)
    {
        _object_gi_magicpotSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_magicpotSegmentTextStart = .;
            build/baserom/object_gi_magicpot.o (.text)
        _object_gi_magicpotSegmentTextEnd = .;
    _object_gi_magicpotSegmentTextSize = ABSOLUTE( _object_gi_magicpotSegmentTextEnd - _object_gi_magicpotSegmentTextStart );
        _object_gi_magicpotSegmentDataStart = .;
            build/baserom/object_gi_magicpot.o (.data)
        _object_gi_magicpotSegmentDataEnd = .;
    _object_gi_magicpotSegmentDataSize = ABSOLUTE( _object_gi_magicpotSegmentDataEnd - _object_gi_magicpotSegmentDataStart );
        _object_gi_magicpotSegmentRoDataStart = .;
            build/baserom/object_gi_magicpot.o (.rodata)
        _object_gi_magicpotSegmentRoDataEnd = .;
    _object_gi_magicpotSegmentRoDataSize = ABSOLUTE( _object_gi_magicpotSegmentRoDataEnd - _object_gi_magicpotSegmentRoDataStart );
        _object_gi_magicpotSegmentSDataStart = .;
            build/baserom/object_gi_magicpot.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_magicpotSegmentSDataEnd = .;
        _object_gi_magicpotSegmentOvlStart = .;
            build/baserom/object_gi_magicpot.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_magicpotSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_magicpotSegmentOvlEnd - _object_gi_magicpotSegmentTextStart );
    _object_gi_magicpotSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_magicpot.bss ADDR(..object_gi_magicpot) + SIZEOF(..object_gi_magicpot) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_magicpotSegmentBssStart = .;
            build/baserom/object_gi_magicpot.o (.sbss)
            build/baserom/object_gi_magicpot.o (.scommon)
            build/baserom/object_gi_magicpot.o (.bss)
            build/baserom/object_gi_magicpot.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_magicpotSegmentBssEnd = .;
        _object_gi_magicpotSegmentEnd = .;
    }
    _object_gi_magicpotSegmentBssSize = ABSOLUTE( _object_gi_magicpotSegmentBssEnd - _object_gi_magicpotSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_bomb_1SegmentRomStart = _RomSize;
    ..object_gi_bomb_1 : AT(_RomSize)
    {
        _object_gi_bomb_1SegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_bomb_1SegmentTextStart = .;
            build/baserom/object_gi_bomb_1.o (.text)
        _object_gi_bomb_1SegmentTextEnd = .;
    _object_gi_bomb_1SegmentTextSize = ABSOLUTE( _object_gi_bomb_1SegmentTextEnd - _object_gi_bomb_1SegmentTextStart );
        _object_gi_bomb_1SegmentDataStart = .;
            build/baserom/object_gi_bomb_1.o (.data)
        _object_gi_bomb_1SegmentDataEnd = .;
    _object_gi_bomb_1SegmentDataSize = ABSOLUTE( _object_gi_bomb_1SegmentDataEnd - _object_gi_bomb_1SegmentDataStart );
        _object_gi_bomb_1SegmentRoDataStart = .;
            build/baserom/object_gi_bomb_1.o (.rodata)
        _object_gi_bomb_1SegmentRoDataEnd = .;
    _object_gi_bomb_1SegmentRoDataSize = ABSOLUTE( _object_gi_bomb_1SegmentRoDataEnd - _object_gi_bomb_1SegmentRoDataStart );
        _object_gi_bomb_1SegmentSDataStart = .;
            build/baserom/object_gi_bomb_1.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_bomb_1SegmentSDataEnd = .;
        _object_gi_bomb_1SegmentOvlStart = .;
            build/baserom/object_gi_bomb_1.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_bomb_1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_bomb_1SegmentOvlEnd - _object_gi_bomb_1SegmentTextStart );
    _object_gi_bomb_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_bomb_1.bss ADDR(..object_gi_bomb_1) + SIZEOF(..object_gi_bomb_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_bomb_1SegmentBssStart = .;
            build/baserom/object_gi_bomb_1.o (.sbss)
            build/baserom/object_gi_bomb_1.o (.scommon)
            build/baserom/object_gi_bomb_1.o (.bss)
            build/baserom/object_gi_bomb_1.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_bomb_1SegmentBssEnd = .;
        _object_gi_bomb_1SegmentEnd = .;
    }
    _object_gi_bomb_1SegmentBssSize = ABSOLUTE( _object_gi_bomb_1SegmentBssEnd - _object_gi_bomb_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_oF1sSegmentRomStart = _RomSize;
    ..object_oF1s : AT(_RomSize)
    {
        _object_oF1sSegmentStart = .;
        . = ALIGN(0x10);
        _object_oF1sSegmentTextStart = .;
            build/baserom/object_oF1s.o (.text)
        _object_oF1sSegmentTextEnd = .;
    _object_oF1sSegmentTextSize = ABSOLUTE( _object_oF1sSegmentTextEnd - _object_oF1sSegmentTextStart );
        _object_oF1sSegmentDataStart = .;
            build/baserom/object_oF1s.o (.data)
        _object_oF1sSegmentDataEnd = .;
    _object_oF1sSegmentDataSize = ABSOLUTE( _object_oF1sSegmentDataEnd - _object_oF1sSegmentDataStart );
        _object_oF1sSegmentRoDataStart = .;
            build/baserom/object_oF1s.o (.rodata)
        _object_oF1sSegmentRoDataEnd = .;
    _object_oF1sSegmentRoDataSize = ABSOLUTE( _object_oF1sSegmentRoDataEnd - _object_oF1sSegmentRoDataStart );
        _object_oF1sSegmentSDataStart = .;
            build/baserom/object_oF1s.o (.sdata)
        . = ALIGN(0x10);
        _object_oF1sSegmentSDataEnd = .;
        _object_oF1sSegmentOvlStart = .;
            build/baserom/object_oF1s.o (.ovl)
        . = ALIGN(0x10);
        _object_oF1sSegmentOvlEnd = .;
    }
    _RomSize += ( _object_oF1sSegmentOvlEnd - _object_oF1sSegmentTextStart );
    _object_oF1sSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_oF1s.bss ADDR(..object_oF1s) + SIZEOF(..object_oF1s) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_oF1sSegmentBssStart = .;
            build/baserom/object_oF1s.o (.sbss)
            build/baserom/object_oF1s.o (.scommon)
            build/baserom/object_oF1s.o (.bss)
            build/baserom/object_oF1s.o (COMMON)
        . = ALIGN(0x10);
        _object_oF1sSegmentBssEnd = .;
        _object_oF1sSegmentEnd = .;
    }
    _object_oF1sSegmentBssSize = ABSOLUTE( _object_oF1sSegmentBssEnd - _object_oF1sSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ma2SegmentRomStart = _RomSize;
    ..object_ma2 : AT(_RomSize)
    {
        _object_ma2SegmentStart = .;
        . = ALIGN(0x10);
        _object_ma2SegmentTextStart = .;
            build/baserom/object_ma2.o (.text)
        _object_ma2SegmentTextEnd = .;
    _object_ma2SegmentTextSize = ABSOLUTE( _object_ma2SegmentTextEnd - _object_ma2SegmentTextStart );
        _object_ma2SegmentDataStart = .;
            build/baserom/object_ma2.o (.data)
        _object_ma2SegmentDataEnd = .;
    _object_ma2SegmentDataSize = ABSOLUTE( _object_ma2SegmentDataEnd - _object_ma2SegmentDataStart );
        _object_ma2SegmentRoDataStart = .;
            build/baserom/object_ma2.o (.rodata)
        _object_ma2SegmentRoDataEnd = .;
    _object_ma2SegmentRoDataSize = ABSOLUTE( _object_ma2SegmentRoDataEnd - _object_ma2SegmentRoDataStart );
        _object_ma2SegmentSDataStart = .;
            build/baserom/object_ma2.o (.sdata)
        . = ALIGN(0x10);
        _object_ma2SegmentSDataEnd = .;
        _object_ma2SegmentOvlStart = .;
            build/baserom/object_ma2.o (.ovl)
        . = ALIGN(0x10);
        _object_ma2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_ma2SegmentOvlEnd - _object_ma2SegmentTextStart );
    _object_ma2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ma2.bss ADDR(..object_ma2) + SIZEOF(..object_ma2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ma2SegmentBssStart = .;
            build/baserom/object_ma2.o (.sbss)
            build/baserom/object_ma2.o (.scommon)
            build/baserom/object_ma2.o (.bss)
            build/baserom/object_ma2.o (COMMON)
        . = ALIGN(0x10);
        _object_ma2SegmentBssEnd = .;
        _object_ma2SegmentEnd = .;
    }
    _object_ma2SegmentBssSize = ABSOLUTE( _object_ma2SegmentBssEnd - _object_ma2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_purseSegmentRomStart = _RomSize;
    ..object_gi_purse : AT(_RomSize)
    {
        _object_gi_purseSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_purseSegmentTextStart = .;
            build/baserom/object_gi_purse.o (.text)
        _object_gi_purseSegmentTextEnd = .;
    _object_gi_purseSegmentTextSize = ABSOLUTE( _object_gi_purseSegmentTextEnd - _object_gi_purseSegmentTextStart );
        _object_gi_purseSegmentDataStart = .;
            build/baserom/object_gi_purse.o (.data)
        _object_gi_purseSegmentDataEnd = .;
    _object_gi_purseSegmentDataSize = ABSOLUTE( _object_gi_purseSegmentDataEnd - _object_gi_purseSegmentDataStart );
        _object_gi_purseSegmentRoDataStart = .;
            build/baserom/object_gi_purse.o (.rodata)
        _object_gi_purseSegmentRoDataEnd = .;
    _object_gi_purseSegmentRoDataSize = ABSOLUTE( _object_gi_purseSegmentRoDataEnd - _object_gi_purseSegmentRoDataStart );
        _object_gi_purseSegmentSDataStart = .;
            build/baserom/object_gi_purse.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_purseSegmentSDataEnd = .;
        _object_gi_purseSegmentOvlStart = .;
            build/baserom/object_gi_purse.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_purseSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_purseSegmentOvlEnd - _object_gi_purseSegmentTextStart );
    _object_gi_purseSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_purse.bss ADDR(..object_gi_purse) + SIZEOF(..object_gi_purse) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_purseSegmentBssStart = .;
            build/baserom/object_gi_purse.o (.sbss)
            build/baserom/object_gi_purse.o (.scommon)
            build/baserom/object_gi_purse.o (.bss)
            build/baserom/object_gi_purse.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_purseSegmentBssEnd = .;
        _object_gi_purseSegmentEnd = .;
    }
    _object_gi_purseSegmentBssSize = ABSOLUTE( _object_gi_purseSegmentBssEnd - _object_gi_purseSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_hniSegmentRomStart = _RomSize;
    ..object_hni : AT(_RomSize)
    {
        _object_hniSegmentStart = .;
        . = ALIGN(0x10);
        _object_hniSegmentTextStart = .;
            build/baserom/object_hni.o (.text)
        _object_hniSegmentTextEnd = .;
    _object_hniSegmentTextSize = ABSOLUTE( _object_hniSegmentTextEnd - _object_hniSegmentTextStart );
        _object_hniSegmentDataStart = .;
            build/baserom/object_hni.o (.data)
        _object_hniSegmentDataEnd = .;
    _object_hniSegmentDataSize = ABSOLUTE( _object_hniSegmentDataEnd - _object_hniSegmentDataStart );
        _object_hniSegmentRoDataStart = .;
            build/baserom/object_hni.o (.rodata)
        _object_hniSegmentRoDataEnd = .;
    _object_hniSegmentRoDataSize = ABSOLUTE( _object_hniSegmentRoDataEnd - _object_hniSegmentRoDataStart );
        _object_hniSegmentSDataStart = .;
            build/baserom/object_hni.o (.sdata)
        . = ALIGN(0x10);
        _object_hniSegmentSDataEnd = .;
        _object_hniSegmentOvlStart = .;
            build/baserom/object_hni.o (.ovl)
        . = ALIGN(0x10);
        _object_hniSegmentOvlEnd = .;
    }
    _RomSize += ( _object_hniSegmentOvlEnd - _object_hniSegmentTextStart );
    _object_hniSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_hni.bss ADDR(..object_hni) + SIZEOF(..object_hni) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_hniSegmentBssStart = .;
            build/baserom/object_hni.o (.sbss)
            build/baserom/object_hni.o (.scommon)
            build/baserom/object_hni.o (.bss)
            build/baserom/object_hni.o (COMMON)
        . = ALIGN(0x10);
        _object_hniSegmentBssEnd = .;
        _object_hniSegmentEnd = .;
    }
    _object_hniSegmentBssSize = ABSOLUTE( _object_hniSegmentBssEnd - _object_hniSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_twSegmentRomStart = _RomSize;
    ..object_tw : AT(_RomSize)
    {
        _object_twSegmentStart = .;
        . = ALIGN(0x10);
        _object_twSegmentTextStart = .;
            build/baserom/object_tw.o (.text)
        _object_twSegmentTextEnd = .;
    _object_twSegmentTextSize = ABSOLUTE( _object_twSegmentTextEnd - _object_twSegmentTextStart );
        _object_twSegmentDataStart = .;
            build/baserom/object_tw.o (.data)
        _object_twSegmentDataEnd = .;
    _object_twSegmentDataSize = ABSOLUTE( _object_twSegmentDataEnd - _object_twSegmentDataStart );
        _object_twSegmentRoDataStart = .;
            build/baserom/object_tw.o (.rodata)
        _object_twSegmentRoDataEnd = .;
    _object_twSegmentRoDataSize = ABSOLUTE( _object_twSegmentRoDataEnd - _object_twSegmentRoDataStart );
        _object_twSegmentSDataStart = .;
            build/baserom/object_tw.o (.sdata)
        . = ALIGN(0x10);
        _object_twSegmentSDataEnd = .;
        _object_twSegmentOvlStart = .;
            build/baserom/object_tw.o (.ovl)
        . = ALIGN(0x10);
        _object_twSegmentOvlEnd = .;
    }
    _RomSize += ( _object_twSegmentOvlEnd - _object_twSegmentTextStart );
    _object_twSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_tw.bss ADDR(..object_tw) + SIZEOF(..object_tw) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_twSegmentBssStart = .;
            build/baserom/object_tw.o (.sbss)
            build/baserom/object_tw.o (.scommon)
            build/baserom/object_tw.o (.bss)
            build/baserom/object_tw.o (COMMON)
        . = ALIGN(0x10);
        _object_twSegmentBssEnd = .;
        _object_twSegmentEnd = .;
    }
    _object_twSegmentBssSize = ABSOLUTE( _object_twSegmentBssEnd - _object_twSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_rrSegmentRomStart = _RomSize;
    ..object_rr : AT(_RomSize)
    {
        _object_rrSegmentStart = .;
        . = ALIGN(0x10);
        _object_rrSegmentTextStart = .;
            build/baserom/object_rr.o (.text)
        _object_rrSegmentTextEnd = .;
    _object_rrSegmentTextSize = ABSOLUTE( _object_rrSegmentTextEnd - _object_rrSegmentTextStart );
        _object_rrSegmentDataStart = .;
            build/baserom/object_rr.o (.data)
        _object_rrSegmentDataEnd = .;
    _object_rrSegmentDataSize = ABSOLUTE( _object_rrSegmentDataEnd - _object_rrSegmentDataStart );
        _object_rrSegmentRoDataStart = .;
            build/baserom/object_rr.o (.rodata)
        _object_rrSegmentRoDataEnd = .;
    _object_rrSegmentRoDataSize = ABSOLUTE( _object_rrSegmentRoDataEnd - _object_rrSegmentRoDataStart );
        _object_rrSegmentSDataStart = .;
            build/baserom/object_rr.o (.sdata)
        . = ALIGN(0x10);
        _object_rrSegmentSDataEnd = .;
        _object_rrSegmentOvlStart = .;
            build/baserom/object_rr.o (.ovl)
        . = ALIGN(0x10);
        _object_rrSegmentOvlEnd = .;
    }
    _RomSize += ( _object_rrSegmentOvlEnd - _object_rrSegmentTextStart );
    _object_rrSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_rr.bss ADDR(..object_rr) + SIZEOF(..object_rr) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_rrSegmentBssStart = .;
            build/baserom/object_rr.o (.sbss)
            build/baserom/object_rr.o (.scommon)
            build/baserom/object_rr.o (.bss)
            build/baserom/object_rr.o (COMMON)
        . = ALIGN(0x10);
        _object_rrSegmentBssEnd = .;
        _object_rrSegmentEnd = .;
    }
    _object_rrSegmentBssSize = ABSOLUTE( _object_rrSegmentBssEnd - _object_rrSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bxaSegmentRomStart = _RomSize;
    ..object_bxa : AT(_RomSize)
    {
        _object_bxaSegmentStart = .;
        . = ALIGN(0x10);
        _object_bxaSegmentTextStart = .;
            build/baserom/object_bxa.o (.text)
        _object_bxaSegmentTextEnd = .;
    _object_bxaSegmentTextSize = ABSOLUTE( _object_bxaSegmentTextEnd - _object_bxaSegmentTextStart );
        _object_bxaSegmentDataStart = .;
            build/baserom/object_bxa.o (.data)
        _object_bxaSegmentDataEnd = .;
    _object_bxaSegmentDataSize = ABSOLUTE( _object_bxaSegmentDataEnd - _object_bxaSegmentDataStart );
        _object_bxaSegmentRoDataStart = .;
            build/baserom/object_bxa.o (.rodata)
        _object_bxaSegmentRoDataEnd = .;
    _object_bxaSegmentRoDataSize = ABSOLUTE( _object_bxaSegmentRoDataEnd - _object_bxaSegmentRoDataStart );
        _object_bxaSegmentSDataStart = .;
            build/baserom/object_bxa.o (.sdata)
        . = ALIGN(0x10);
        _object_bxaSegmentSDataEnd = .;
        _object_bxaSegmentOvlStart = .;
            build/baserom/object_bxa.o (.ovl)
        . = ALIGN(0x10);
        _object_bxaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bxaSegmentOvlEnd - _object_bxaSegmentTextStart );
    _object_bxaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bxa.bss ADDR(..object_bxa) + SIZEOF(..object_bxa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bxaSegmentBssStart = .;
            build/baserom/object_bxa.o (.sbss)
            build/baserom/object_bxa.o (.scommon)
            build/baserom/object_bxa.o (.bss)
            build/baserom/object_bxa.o (COMMON)
        . = ALIGN(0x10);
        _object_bxaSegmentBssEnd = .;
        _object_bxaSegmentEnd = .;
    }
    _object_bxaSegmentBssSize = ABSOLUTE( _object_bxaSegmentBssEnd - _object_bxaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_anubiceSegmentRomStart = _RomSize;
    ..object_anubice : AT(_RomSize)
    {
        _object_anubiceSegmentStart = .;
        . = ALIGN(0x10);
        _object_anubiceSegmentTextStart = .;
            build/baserom/object_anubice.o (.text)
        _object_anubiceSegmentTextEnd = .;
    _object_anubiceSegmentTextSize = ABSOLUTE( _object_anubiceSegmentTextEnd - _object_anubiceSegmentTextStart );
        _object_anubiceSegmentDataStart = .;
            build/baserom/object_anubice.o (.data)
        _object_anubiceSegmentDataEnd = .;
    _object_anubiceSegmentDataSize = ABSOLUTE( _object_anubiceSegmentDataEnd - _object_anubiceSegmentDataStart );
        _object_anubiceSegmentRoDataStart = .;
            build/baserom/object_anubice.o (.rodata)
        _object_anubiceSegmentRoDataEnd = .;
    _object_anubiceSegmentRoDataSize = ABSOLUTE( _object_anubiceSegmentRoDataEnd - _object_anubiceSegmentRoDataStart );
        _object_anubiceSegmentSDataStart = .;
            build/baserom/object_anubice.o (.sdata)
        . = ALIGN(0x10);
        _object_anubiceSegmentSDataEnd = .;
        _object_anubiceSegmentOvlStart = .;
            build/baserom/object_anubice.o (.ovl)
        . = ALIGN(0x10);
        _object_anubiceSegmentOvlEnd = .;
    }
    _RomSize += ( _object_anubiceSegmentOvlEnd - _object_anubiceSegmentTextStart );
    _object_anubiceSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_anubice.bss ADDR(..object_anubice) + SIZEOF(..object_anubice) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_anubiceSegmentBssStart = .;
            build/baserom/object_anubice.o (.sbss)
            build/baserom/object_anubice.o (.scommon)
            build/baserom/object_anubice.o (.bss)
            build/baserom/object_anubice.o (COMMON)
        . = ALIGN(0x10);
        _object_anubiceSegmentBssEnd = .;
        _object_anubiceSegmentEnd = .;
    }
    _object_anubiceSegmentBssSize = ABSOLUTE( _object_anubiceSegmentBssEnd - _object_anubiceSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_gerudoSegmentRomStart = _RomSize;
    ..object_gi_gerudo : AT(_RomSize)
    {
        _object_gi_gerudoSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_gerudoSegmentTextStart = .;
            build/baserom/object_gi_gerudo.o (.text)
        _object_gi_gerudoSegmentTextEnd = .;
    _object_gi_gerudoSegmentTextSize = ABSOLUTE( _object_gi_gerudoSegmentTextEnd - _object_gi_gerudoSegmentTextStart );
        _object_gi_gerudoSegmentDataStart = .;
            build/baserom/object_gi_gerudo.o (.data)
        _object_gi_gerudoSegmentDataEnd = .;
    _object_gi_gerudoSegmentDataSize = ABSOLUTE( _object_gi_gerudoSegmentDataEnd - _object_gi_gerudoSegmentDataStart );
        _object_gi_gerudoSegmentRoDataStart = .;
            build/baserom/object_gi_gerudo.o (.rodata)
        _object_gi_gerudoSegmentRoDataEnd = .;
    _object_gi_gerudoSegmentRoDataSize = ABSOLUTE( _object_gi_gerudoSegmentRoDataEnd - _object_gi_gerudoSegmentRoDataStart );
        _object_gi_gerudoSegmentSDataStart = .;
            build/baserom/object_gi_gerudo.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_gerudoSegmentSDataEnd = .;
        _object_gi_gerudoSegmentOvlStart = .;
            build/baserom/object_gi_gerudo.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_gerudoSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_gerudoSegmentOvlEnd - _object_gi_gerudoSegmentTextStart );
    _object_gi_gerudoSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_gerudo.bss ADDR(..object_gi_gerudo) + SIZEOF(..object_gi_gerudo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_gerudoSegmentBssStart = .;
            build/baserom/object_gi_gerudo.o (.sbss)
            build/baserom/object_gi_gerudo.o (.scommon)
            build/baserom/object_gi_gerudo.o (.bss)
            build/baserom/object_gi_gerudo.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_gerudoSegmentBssEnd = .;
        _object_gi_gerudoSegmentEnd = .;
    }
    _object_gi_gerudoSegmentBssSize = ABSOLUTE( _object_gi_gerudoSegmentBssEnd - _object_gi_gerudoSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_arrowSegmentRomStart = _RomSize;
    ..object_gi_arrow : AT(_RomSize)
    {
        _object_gi_arrowSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_arrowSegmentTextStart = .;
            build/baserom/object_gi_arrow.o (.text)
        _object_gi_arrowSegmentTextEnd = .;
    _object_gi_arrowSegmentTextSize = ABSOLUTE( _object_gi_arrowSegmentTextEnd - _object_gi_arrowSegmentTextStart );
        _object_gi_arrowSegmentDataStart = .;
            build/baserom/object_gi_arrow.o (.data)
        _object_gi_arrowSegmentDataEnd = .;
    _object_gi_arrowSegmentDataSize = ABSOLUTE( _object_gi_arrowSegmentDataEnd - _object_gi_arrowSegmentDataStart );
        _object_gi_arrowSegmentRoDataStart = .;
            build/baserom/object_gi_arrow.o (.rodata)
        _object_gi_arrowSegmentRoDataEnd = .;
    _object_gi_arrowSegmentRoDataSize = ABSOLUTE( _object_gi_arrowSegmentRoDataEnd - _object_gi_arrowSegmentRoDataStart );
        _object_gi_arrowSegmentSDataStart = .;
            build/baserom/object_gi_arrow.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_arrowSegmentSDataEnd = .;
        _object_gi_arrowSegmentOvlStart = .;
            build/baserom/object_gi_arrow.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_arrowSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_arrowSegmentOvlEnd - _object_gi_arrowSegmentTextStart );
    _object_gi_arrowSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_arrow.bss ADDR(..object_gi_arrow) + SIZEOF(..object_gi_arrow) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_arrowSegmentBssStart = .;
            build/baserom/object_gi_arrow.o (.sbss)
            build/baserom/object_gi_arrow.o (.scommon)
            build/baserom/object_gi_arrow.o (.bss)
            build/baserom/object_gi_arrow.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_arrowSegmentBssEnd = .;
        _object_gi_arrowSegmentEnd = .;
    }
    _object_gi_arrowSegmentBssSize = ABSOLUTE( _object_gi_arrowSegmentBssEnd - _object_gi_arrowSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_bomb_2SegmentRomStart = _RomSize;
    ..object_gi_bomb_2 : AT(_RomSize)
    {
        _object_gi_bomb_2SegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_bomb_2SegmentTextStart = .;
            build/baserom/object_gi_bomb_2.o (.text)
        _object_gi_bomb_2SegmentTextEnd = .;
    _object_gi_bomb_2SegmentTextSize = ABSOLUTE( _object_gi_bomb_2SegmentTextEnd - _object_gi_bomb_2SegmentTextStart );
        _object_gi_bomb_2SegmentDataStart = .;
            build/baserom/object_gi_bomb_2.o (.data)
        _object_gi_bomb_2SegmentDataEnd = .;
    _object_gi_bomb_2SegmentDataSize = ABSOLUTE( _object_gi_bomb_2SegmentDataEnd - _object_gi_bomb_2SegmentDataStart );
        _object_gi_bomb_2SegmentRoDataStart = .;
            build/baserom/object_gi_bomb_2.o (.rodata)
        _object_gi_bomb_2SegmentRoDataEnd = .;
    _object_gi_bomb_2SegmentRoDataSize = ABSOLUTE( _object_gi_bomb_2SegmentRoDataEnd - _object_gi_bomb_2SegmentRoDataStart );
        _object_gi_bomb_2SegmentSDataStart = .;
            build/baserom/object_gi_bomb_2.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_bomb_2SegmentSDataEnd = .;
        _object_gi_bomb_2SegmentOvlStart = .;
            build/baserom/object_gi_bomb_2.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_bomb_2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_bomb_2SegmentOvlEnd - _object_gi_bomb_2SegmentTextStart );
    _object_gi_bomb_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_bomb_2.bss ADDR(..object_gi_bomb_2) + SIZEOF(..object_gi_bomb_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_bomb_2SegmentBssStart = .;
            build/baserom/object_gi_bomb_2.o (.sbss)
            build/baserom/object_gi_bomb_2.o (.scommon)
            build/baserom/object_gi_bomb_2.o (.bss)
            build/baserom/object_gi_bomb_2.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_bomb_2SegmentBssEnd = .;
        _object_gi_bomb_2SegmentEnd = .;
    }
    _object_gi_bomb_2SegmentBssSize = ABSOLUTE( _object_gi_bomb_2SegmentBssEnd - _object_gi_bomb_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_eggSegmentRomStart = _RomSize;
    ..object_gi_egg : AT(_RomSize)
    {
        _object_gi_eggSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_eggSegmentTextStart = .;
            build/baserom/object_gi_egg.o (.text)
        _object_gi_eggSegmentTextEnd = .;
    _object_gi_eggSegmentTextSize = ABSOLUTE( _object_gi_eggSegmentTextEnd - _object_gi_eggSegmentTextStart );
        _object_gi_eggSegmentDataStart = .;
            build/baserom/object_gi_egg.o (.data)
        _object_gi_eggSegmentDataEnd = .;
    _object_gi_eggSegmentDataSize = ABSOLUTE( _object_gi_eggSegmentDataEnd - _object_gi_eggSegmentDataStart );
        _object_gi_eggSegmentRoDataStart = .;
            build/baserom/object_gi_egg.o (.rodata)
        _object_gi_eggSegmentRoDataEnd = .;
    _object_gi_eggSegmentRoDataSize = ABSOLUTE( _object_gi_eggSegmentRoDataEnd - _object_gi_eggSegmentRoDataStart );
        _object_gi_eggSegmentSDataStart = .;
            build/baserom/object_gi_egg.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_eggSegmentSDataEnd = .;
        _object_gi_eggSegmentOvlStart = .;
            build/baserom/object_gi_egg.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_eggSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_eggSegmentOvlEnd - _object_gi_eggSegmentTextStart );
    _object_gi_eggSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_egg.bss ADDR(..object_gi_egg) + SIZEOF(..object_gi_egg) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_eggSegmentBssStart = .;
            build/baserom/object_gi_egg.o (.sbss)
            build/baserom/object_gi_egg.o (.scommon)
            build/baserom/object_gi_egg.o (.bss)
            build/baserom/object_gi_egg.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_eggSegmentBssEnd = .;
        _object_gi_eggSegmentEnd = .;
    }
    _object_gi_eggSegmentBssSize = ABSOLUTE( _object_gi_eggSegmentBssEnd - _object_gi_eggSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_scaleSegmentRomStart = _RomSize;
    ..object_gi_scale : AT(_RomSize)
    {
        _object_gi_scaleSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_scaleSegmentTextStart = .;
            build/baserom/object_gi_scale.o (.text)
        _object_gi_scaleSegmentTextEnd = .;
    _object_gi_scaleSegmentTextSize = ABSOLUTE( _object_gi_scaleSegmentTextEnd - _object_gi_scaleSegmentTextStart );
        _object_gi_scaleSegmentDataStart = .;
            build/baserom/object_gi_scale.o (.data)
        _object_gi_scaleSegmentDataEnd = .;
    _object_gi_scaleSegmentDataSize = ABSOLUTE( _object_gi_scaleSegmentDataEnd - _object_gi_scaleSegmentDataStart );
        _object_gi_scaleSegmentRoDataStart = .;
            build/baserom/object_gi_scale.o (.rodata)
        _object_gi_scaleSegmentRoDataEnd = .;
    _object_gi_scaleSegmentRoDataSize = ABSOLUTE( _object_gi_scaleSegmentRoDataEnd - _object_gi_scaleSegmentRoDataStart );
        _object_gi_scaleSegmentSDataStart = .;
            build/baserom/object_gi_scale.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_scaleSegmentSDataEnd = .;
        _object_gi_scaleSegmentOvlStart = .;
            build/baserom/object_gi_scale.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_scaleSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_scaleSegmentOvlEnd - _object_gi_scaleSegmentTextStart );
    _object_gi_scaleSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_scale.bss ADDR(..object_gi_scale) + SIZEOF(..object_gi_scale) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_scaleSegmentBssStart = .;
            build/baserom/object_gi_scale.o (.sbss)
            build/baserom/object_gi_scale.o (.scommon)
            build/baserom/object_gi_scale.o (.bss)
            build/baserom/object_gi_scale.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_scaleSegmentBssEnd = .;
        _object_gi_scaleSegmentEnd = .;
    }
    _object_gi_scaleSegmentBssSize = ABSOLUTE( _object_gi_scaleSegmentBssEnd - _object_gi_scaleSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_shield_2SegmentRomStart = _RomSize;
    ..object_gi_shield_2 : AT(_RomSize)
    {
        _object_gi_shield_2SegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_shield_2SegmentTextStart = .;
            build/baserom/object_gi_shield_2.o (.text)
        _object_gi_shield_2SegmentTextEnd = .;
    _object_gi_shield_2SegmentTextSize = ABSOLUTE( _object_gi_shield_2SegmentTextEnd - _object_gi_shield_2SegmentTextStart );
        _object_gi_shield_2SegmentDataStart = .;
            build/baserom/object_gi_shield_2.o (.data)
        _object_gi_shield_2SegmentDataEnd = .;
    _object_gi_shield_2SegmentDataSize = ABSOLUTE( _object_gi_shield_2SegmentDataEnd - _object_gi_shield_2SegmentDataStart );
        _object_gi_shield_2SegmentRoDataStart = .;
            build/baserom/object_gi_shield_2.o (.rodata)
        _object_gi_shield_2SegmentRoDataEnd = .;
    _object_gi_shield_2SegmentRoDataSize = ABSOLUTE( _object_gi_shield_2SegmentRoDataEnd - _object_gi_shield_2SegmentRoDataStart );
        _object_gi_shield_2SegmentSDataStart = .;
            build/baserom/object_gi_shield_2.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_shield_2SegmentSDataEnd = .;
        _object_gi_shield_2SegmentOvlStart = .;
            build/baserom/object_gi_shield_2.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_shield_2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_shield_2SegmentOvlEnd - _object_gi_shield_2SegmentTextStart );
    _object_gi_shield_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_shield_2.bss ADDR(..object_gi_shield_2) + SIZEOF(..object_gi_shield_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_shield_2SegmentBssStart = .;
            build/baserom/object_gi_shield_2.o (.sbss)
            build/baserom/object_gi_shield_2.o (.scommon)
            build/baserom/object_gi_shield_2.o (.bss)
            build/baserom/object_gi_shield_2.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_shield_2SegmentBssEnd = .;
        _object_gi_shield_2SegmentEnd = .;
    }
    _object_gi_shield_2SegmentBssSize = ABSOLUTE( _object_gi_shield_2SegmentBssEnd - _object_gi_shield_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_hookshotSegmentRomStart = _RomSize;
    ..object_gi_hookshot : AT(_RomSize)
    {
        _object_gi_hookshotSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_hookshotSegmentTextStart = .;
            build/baserom/object_gi_hookshot.o (.text)
        _object_gi_hookshotSegmentTextEnd = .;
    _object_gi_hookshotSegmentTextSize = ABSOLUTE( _object_gi_hookshotSegmentTextEnd - _object_gi_hookshotSegmentTextStart );
        _object_gi_hookshotSegmentDataStart = .;
            build/baserom/object_gi_hookshot.o (.data)
        _object_gi_hookshotSegmentDataEnd = .;
    _object_gi_hookshotSegmentDataSize = ABSOLUTE( _object_gi_hookshotSegmentDataEnd - _object_gi_hookshotSegmentDataStart );
        _object_gi_hookshotSegmentRoDataStart = .;
            build/baserom/object_gi_hookshot.o (.rodata)
        _object_gi_hookshotSegmentRoDataEnd = .;
    _object_gi_hookshotSegmentRoDataSize = ABSOLUTE( _object_gi_hookshotSegmentRoDataEnd - _object_gi_hookshotSegmentRoDataStart );
        _object_gi_hookshotSegmentSDataStart = .;
            build/baserom/object_gi_hookshot.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_hookshotSegmentSDataEnd = .;
        _object_gi_hookshotSegmentOvlStart = .;
            build/baserom/object_gi_hookshot.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_hookshotSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_hookshotSegmentOvlEnd - _object_gi_hookshotSegmentTextStart );
    _object_gi_hookshotSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_hookshot.bss ADDR(..object_gi_hookshot) + SIZEOF(..object_gi_hookshot) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_hookshotSegmentBssStart = .;
            build/baserom/object_gi_hookshot.o (.sbss)
            build/baserom/object_gi_hookshot.o (.scommon)
            build/baserom/object_gi_hookshot.o (.bss)
            build/baserom/object_gi_hookshot.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_hookshotSegmentBssEnd = .;
        _object_gi_hookshotSegmentEnd = .;
    }
    _object_gi_hookshotSegmentBssSize = ABSOLUTE( _object_gi_hookshotSegmentBssEnd - _object_gi_hookshotSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_ocarinaSegmentRomStart = _RomSize;
    ..object_gi_ocarina : AT(_RomSize)
    {
        _object_gi_ocarinaSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_ocarinaSegmentTextStart = .;
            build/baserom/object_gi_ocarina.o (.text)
        _object_gi_ocarinaSegmentTextEnd = .;
    _object_gi_ocarinaSegmentTextSize = ABSOLUTE( _object_gi_ocarinaSegmentTextEnd - _object_gi_ocarinaSegmentTextStart );
        _object_gi_ocarinaSegmentDataStart = .;
            build/baserom/object_gi_ocarina.o (.data)
        _object_gi_ocarinaSegmentDataEnd = .;
    _object_gi_ocarinaSegmentDataSize = ABSOLUTE( _object_gi_ocarinaSegmentDataEnd - _object_gi_ocarinaSegmentDataStart );
        _object_gi_ocarinaSegmentRoDataStart = .;
            build/baserom/object_gi_ocarina.o (.rodata)
        _object_gi_ocarinaSegmentRoDataEnd = .;
    _object_gi_ocarinaSegmentRoDataSize = ABSOLUTE( _object_gi_ocarinaSegmentRoDataEnd - _object_gi_ocarinaSegmentRoDataStart );
        _object_gi_ocarinaSegmentSDataStart = .;
            build/baserom/object_gi_ocarina.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_ocarinaSegmentSDataEnd = .;
        _object_gi_ocarinaSegmentOvlStart = .;
            build/baserom/object_gi_ocarina.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_ocarinaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_ocarinaSegmentOvlEnd - _object_gi_ocarinaSegmentTextStart );
    _object_gi_ocarinaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_ocarina.bss ADDR(..object_gi_ocarina) + SIZEOF(..object_gi_ocarina) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_ocarinaSegmentBssStart = .;
            build/baserom/object_gi_ocarina.o (.sbss)
            build/baserom/object_gi_ocarina.o (.scommon)
            build/baserom/object_gi_ocarina.o (.bss)
            build/baserom/object_gi_ocarina.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_ocarinaSegmentBssEnd = .;
        _object_gi_ocarinaSegmentEnd = .;
    }
    _object_gi_ocarinaSegmentBssSize = ABSOLUTE( _object_gi_ocarinaSegmentBssEnd - _object_gi_ocarinaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_milkSegmentRomStart = _RomSize;
    ..object_gi_milk : AT(_RomSize)
    {
        _object_gi_milkSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_milkSegmentTextStart = .;
            build/baserom/object_gi_milk.o (.text)
        _object_gi_milkSegmentTextEnd = .;
    _object_gi_milkSegmentTextSize = ABSOLUTE( _object_gi_milkSegmentTextEnd - _object_gi_milkSegmentTextStart );
        _object_gi_milkSegmentDataStart = .;
            build/baserom/object_gi_milk.o (.data)
        _object_gi_milkSegmentDataEnd = .;
    _object_gi_milkSegmentDataSize = ABSOLUTE( _object_gi_milkSegmentDataEnd - _object_gi_milkSegmentDataStart );
        _object_gi_milkSegmentRoDataStart = .;
            build/baserom/object_gi_milk.o (.rodata)
        _object_gi_milkSegmentRoDataEnd = .;
    _object_gi_milkSegmentRoDataSize = ABSOLUTE( _object_gi_milkSegmentRoDataEnd - _object_gi_milkSegmentRoDataStart );
        _object_gi_milkSegmentSDataStart = .;
            build/baserom/object_gi_milk.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_milkSegmentSDataEnd = .;
        _object_gi_milkSegmentOvlStart = .;
            build/baserom/object_gi_milk.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_milkSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_milkSegmentOvlEnd - _object_gi_milkSegmentTextStart );
    _object_gi_milkSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_milk.bss ADDR(..object_gi_milk) + SIZEOF(..object_gi_milk) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_milkSegmentBssStart = .;
            build/baserom/object_gi_milk.o (.sbss)
            build/baserom/object_gi_milk.o (.scommon)
            build/baserom/object_gi_milk.o (.bss)
            build/baserom/object_gi_milk.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_milkSegmentBssEnd = .;
        _object_gi_milkSegmentEnd = .;
    }
    _object_gi_milkSegmentBssSize = ABSOLUTE( _object_gi_milkSegmentBssEnd - _object_gi_milkSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ma1SegmentRomStart = _RomSize;
    ..object_ma1 : AT(_RomSize)
    {
        _object_ma1SegmentStart = .;
        . = ALIGN(0x10);
        _object_ma1SegmentTextStart = .;
            build/baserom/object_ma1.o (.text)
        _object_ma1SegmentTextEnd = .;
    _object_ma1SegmentTextSize = ABSOLUTE( _object_ma1SegmentTextEnd - _object_ma1SegmentTextStart );
        _object_ma1SegmentDataStart = .;
            build/baserom/object_ma1.o (.data)
        _object_ma1SegmentDataEnd = .;
    _object_ma1SegmentDataSize = ABSOLUTE( _object_ma1SegmentDataEnd - _object_ma1SegmentDataStart );
        _object_ma1SegmentRoDataStart = .;
            build/baserom/object_ma1.o (.rodata)
        _object_ma1SegmentRoDataEnd = .;
    _object_ma1SegmentRoDataSize = ABSOLUTE( _object_ma1SegmentRoDataEnd - _object_ma1SegmentRoDataStart );
        _object_ma1SegmentSDataStart = .;
            build/baserom/object_ma1.o (.sdata)
        . = ALIGN(0x10);
        _object_ma1SegmentSDataEnd = .;
        _object_ma1SegmentOvlStart = .;
            build/baserom/object_ma1.o (.ovl)
        . = ALIGN(0x10);
        _object_ma1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_ma1SegmentOvlEnd - _object_ma1SegmentTextStart );
    _object_ma1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ma1.bss ADDR(..object_ma1) + SIZEOF(..object_ma1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ma1SegmentBssStart = .;
            build/baserom/object_ma1.o (.sbss)
            build/baserom/object_ma1.o (.scommon)
            build/baserom/object_ma1.o (.bss)
            build/baserom/object_ma1.o (COMMON)
        . = ALIGN(0x10);
        _object_ma1SegmentBssEnd = .;
        _object_ma1SegmentEnd = .;
    }
    _object_ma1SegmentBssSize = ABSOLUTE( _object_ma1SegmentBssEnd - _object_ma1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ganonSegmentRomStart = _RomSize;
    ..object_ganon : AT(_RomSize)
    {
        _object_ganonSegmentStart = .;
        . = ALIGN(0x10);
        _object_ganonSegmentTextStart = .;
            build/baserom/object_ganon.o (.text)
        _object_ganonSegmentTextEnd = .;
    _object_ganonSegmentTextSize = ABSOLUTE( _object_ganonSegmentTextEnd - _object_ganonSegmentTextStart );
        _object_ganonSegmentDataStart = .;
            build/baserom/object_ganon.o (.data)
        _object_ganonSegmentDataEnd = .;
    _object_ganonSegmentDataSize = ABSOLUTE( _object_ganonSegmentDataEnd - _object_ganonSegmentDataStart );
        _object_ganonSegmentRoDataStart = .;
            build/baserom/object_ganon.o (.rodata)
        _object_ganonSegmentRoDataEnd = .;
    _object_ganonSegmentRoDataSize = ABSOLUTE( _object_ganonSegmentRoDataEnd - _object_ganonSegmentRoDataStart );
        _object_ganonSegmentSDataStart = .;
            build/baserom/object_ganon.o (.sdata)
        . = ALIGN(0x10);
        _object_ganonSegmentSDataEnd = .;
        _object_ganonSegmentOvlStart = .;
            build/baserom/object_ganon.o (.ovl)
        . = ALIGN(0x10);
        _object_ganonSegmentOvlEnd = .;
    }
    _RomSize += ( _object_ganonSegmentOvlEnd - _object_ganonSegmentTextStart );
    _object_ganonSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ganon.bss ADDR(..object_ganon) + SIZEOF(..object_ganon) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ganonSegmentBssStart = .;
            build/baserom/object_ganon.o (.sbss)
            build/baserom/object_ganon.o (.scommon)
            build/baserom/object_ganon.o (.bss)
            build/baserom/object_ganon.o (COMMON)
        . = ALIGN(0x10);
        _object_ganonSegmentBssEnd = .;
        _object_ganonSegmentEnd = .;
    }
    _object_ganonSegmentBssSize = ABSOLUTE( _object_ganonSegmentBssEnd - _object_ganonSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_sstSegmentRomStart = _RomSize;
    ..object_sst : AT(_RomSize)
    {
        _object_sstSegmentStart = .;
        . = ALIGN(0x10);
        _object_sstSegmentTextStart = .;
            build/baserom/object_sst.o (.text)
        _object_sstSegmentTextEnd = .;
    _object_sstSegmentTextSize = ABSOLUTE( _object_sstSegmentTextEnd - _object_sstSegmentTextStart );
        _object_sstSegmentDataStart = .;
            build/baserom/object_sst.o (.data)
        _object_sstSegmentDataEnd = .;
    _object_sstSegmentDataSize = ABSOLUTE( _object_sstSegmentDataEnd - _object_sstSegmentDataStart );
        _object_sstSegmentRoDataStart = .;
            build/baserom/object_sst.o (.rodata)
        _object_sstSegmentRoDataEnd = .;
    _object_sstSegmentRoDataSize = ABSOLUTE( _object_sstSegmentRoDataEnd - _object_sstSegmentRoDataStart );
        _object_sstSegmentSDataStart = .;
            build/baserom/object_sst.o (.sdata)
        . = ALIGN(0x10);
        _object_sstSegmentSDataEnd = .;
        _object_sstSegmentOvlStart = .;
            build/baserom/object_sst.o (.ovl)
        . = ALIGN(0x10);
        _object_sstSegmentOvlEnd = .;
    }
    _RomSize += ( _object_sstSegmentOvlEnd - _object_sstSegmentTextStart );
    _object_sstSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_sst.bss ADDR(..object_sst) + SIZEOF(..object_sst) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_sstSegmentBssStart = .;
            build/baserom/object_sst.o (.sbss)
            build/baserom/object_sst.o (.scommon)
            build/baserom/object_sst.o (.bss)
            build/baserom/object_sst.o (COMMON)
        . = ALIGN(0x10);
        _object_sstSegmentBssEnd = .;
        _object_sstSegmentEnd = .;
    }
    _object_sstSegmentBssSize = ABSOLUTE( _object_sstSegmentBssEnd - _object_sstSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_nySegmentRomStart = _RomSize;
    ..object_ny : AT(_RomSize)
    {
        _object_nySegmentStart = .;
        . = ALIGN(0x10);
        _object_nySegmentTextStart = .;
            build/baserom/object_ny.o (.text)
        _object_nySegmentTextEnd = .;
    _object_nySegmentTextSize = ABSOLUTE( _object_nySegmentTextEnd - _object_nySegmentTextStart );
        _object_nySegmentDataStart = .;
            build/baserom/object_ny.o (.data)
        _object_nySegmentDataEnd = .;
    _object_nySegmentDataSize = ABSOLUTE( _object_nySegmentDataEnd - _object_nySegmentDataStart );
        _object_nySegmentRoDataStart = .;
            build/baserom/object_ny.o (.rodata)
        _object_nySegmentRoDataEnd = .;
    _object_nySegmentRoDataSize = ABSOLUTE( _object_nySegmentRoDataEnd - _object_nySegmentRoDataStart );
        _object_nySegmentSDataStart = .;
            build/baserom/object_ny.o (.sdata)
        . = ALIGN(0x10);
        _object_nySegmentSDataEnd = .;
        _object_nySegmentOvlStart = .;
            build/baserom/object_ny.o (.ovl)
        . = ALIGN(0x10);
        _object_nySegmentOvlEnd = .;
    }
    _RomSize += ( _object_nySegmentOvlEnd - _object_nySegmentTextStart );
    _object_nySegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ny.bss ADDR(..object_ny) + SIZEOF(..object_ny) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_nySegmentBssStart = .;
            build/baserom/object_ny.o (.sbss)
            build/baserom/object_ny.o (.scommon)
            build/baserom/object_ny.o (.bss)
            build/baserom/object_ny.o (COMMON)
        . = ALIGN(0x10);
        _object_nySegmentBssEnd = .;
        _object_nySegmentEnd = .;
    }
    _object_nySegmentBssSize = ABSOLUTE( _object_nySegmentBssEnd - _object_nySegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_frSegmentRomStart = _RomSize;
    ..object_fr : AT(_RomSize)
    {
        _object_frSegmentStart = .;
        . = ALIGN(0x10);
        _object_frSegmentTextStart = .;
            build/baserom/object_fr.o (.text)
        _object_frSegmentTextEnd = .;
    _object_frSegmentTextSize = ABSOLUTE( _object_frSegmentTextEnd - _object_frSegmentTextStart );
        _object_frSegmentDataStart = .;
            build/baserom/object_fr.o (.data)
        _object_frSegmentDataEnd = .;
    _object_frSegmentDataSize = ABSOLUTE( _object_frSegmentDataEnd - _object_frSegmentDataStart );
        _object_frSegmentRoDataStart = .;
            build/baserom/object_fr.o (.rodata)
        _object_frSegmentRoDataEnd = .;
    _object_frSegmentRoDataSize = ABSOLUTE( _object_frSegmentRoDataEnd - _object_frSegmentRoDataStart );
        _object_frSegmentSDataStart = .;
            build/baserom/object_fr.o (.sdata)
        . = ALIGN(0x10);
        _object_frSegmentSDataEnd = .;
        _object_frSegmentOvlStart = .;
            build/baserom/object_fr.o (.ovl)
        . = ALIGN(0x10);
        _object_frSegmentOvlEnd = .;
    }
    _RomSize += ( _object_frSegmentOvlEnd - _object_frSegmentTextStart );
    _object_frSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_fr.bss ADDR(..object_fr) + SIZEOF(..object_fr) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_frSegmentBssStart = .;
            build/baserom/object_fr.o (.sbss)
            build/baserom/object_fr.o (.scommon)
            build/baserom/object_fr.o (.bss)
            build/baserom/object_fr.o (COMMON)
        . = ALIGN(0x10);
        _object_frSegmentBssEnd = .;
        _object_frSegmentEnd = .;
    }
    _object_frSegmentBssSize = ABSOLUTE( _object_frSegmentBssEnd - _object_frSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_pachinkoSegmentRomStart = _RomSize;
    ..object_gi_pachinko : AT(_RomSize)
    {
        _object_gi_pachinkoSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_pachinkoSegmentTextStart = .;
            build/baserom/object_gi_pachinko.o (.text)
        _object_gi_pachinkoSegmentTextEnd = .;
    _object_gi_pachinkoSegmentTextSize = ABSOLUTE( _object_gi_pachinkoSegmentTextEnd - _object_gi_pachinkoSegmentTextStart );
        _object_gi_pachinkoSegmentDataStart = .;
            build/baserom/object_gi_pachinko.o (.data)
        _object_gi_pachinkoSegmentDataEnd = .;
    _object_gi_pachinkoSegmentDataSize = ABSOLUTE( _object_gi_pachinkoSegmentDataEnd - _object_gi_pachinkoSegmentDataStart );
        _object_gi_pachinkoSegmentRoDataStart = .;
            build/baserom/object_gi_pachinko.o (.rodata)
        _object_gi_pachinkoSegmentRoDataEnd = .;
    _object_gi_pachinkoSegmentRoDataSize = ABSOLUTE( _object_gi_pachinkoSegmentRoDataEnd - _object_gi_pachinkoSegmentRoDataStart );
        _object_gi_pachinkoSegmentSDataStart = .;
            build/baserom/object_gi_pachinko.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_pachinkoSegmentSDataEnd = .;
        _object_gi_pachinkoSegmentOvlStart = .;
            build/baserom/object_gi_pachinko.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_pachinkoSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_pachinkoSegmentOvlEnd - _object_gi_pachinkoSegmentTextStart );
    _object_gi_pachinkoSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_pachinko.bss ADDR(..object_gi_pachinko) + SIZEOF(..object_gi_pachinko) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_pachinkoSegmentBssStart = .;
            build/baserom/object_gi_pachinko.o (.sbss)
            build/baserom/object_gi_pachinko.o (.scommon)
            build/baserom/object_gi_pachinko.o (.bss)
            build/baserom/object_gi_pachinko.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_pachinkoSegmentBssEnd = .;
        _object_gi_pachinkoSegmentEnd = .;
    }
    _object_gi_pachinkoSegmentBssSize = ABSOLUTE( _object_gi_pachinkoSegmentBssEnd - _object_gi_pachinkoSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_boomerangSegmentRomStart = _RomSize;
    ..object_gi_boomerang : AT(_RomSize)
    {
        _object_gi_boomerangSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_boomerangSegmentTextStart = .;
            build/baserom/object_gi_boomerang.o (.text)
        _object_gi_boomerangSegmentTextEnd = .;
    _object_gi_boomerangSegmentTextSize = ABSOLUTE( _object_gi_boomerangSegmentTextEnd - _object_gi_boomerangSegmentTextStart );
        _object_gi_boomerangSegmentDataStart = .;
            build/baserom/object_gi_boomerang.o (.data)
        _object_gi_boomerangSegmentDataEnd = .;
    _object_gi_boomerangSegmentDataSize = ABSOLUTE( _object_gi_boomerangSegmentDataEnd - _object_gi_boomerangSegmentDataStart );
        _object_gi_boomerangSegmentRoDataStart = .;
            build/baserom/object_gi_boomerang.o (.rodata)
        _object_gi_boomerangSegmentRoDataEnd = .;
    _object_gi_boomerangSegmentRoDataSize = ABSOLUTE( _object_gi_boomerangSegmentRoDataEnd - _object_gi_boomerangSegmentRoDataStart );
        _object_gi_boomerangSegmentSDataStart = .;
            build/baserom/object_gi_boomerang.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_boomerangSegmentSDataEnd = .;
        _object_gi_boomerangSegmentOvlStart = .;
            build/baserom/object_gi_boomerang.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_boomerangSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_boomerangSegmentOvlEnd - _object_gi_boomerangSegmentTextStart );
    _object_gi_boomerangSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_boomerang.bss ADDR(..object_gi_boomerang) + SIZEOF(..object_gi_boomerang) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_boomerangSegmentBssStart = .;
            build/baserom/object_gi_boomerang.o (.sbss)
            build/baserom/object_gi_boomerang.o (.scommon)
            build/baserom/object_gi_boomerang.o (.bss)
            build/baserom/object_gi_boomerang.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_boomerangSegmentBssEnd = .;
        _object_gi_boomerangSegmentEnd = .;
    }
    _object_gi_boomerangSegmentBssSize = ABSOLUTE( _object_gi_boomerangSegmentBssEnd - _object_gi_boomerangSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_bowSegmentRomStart = _RomSize;
    ..object_gi_bow : AT(_RomSize)
    {
        _object_gi_bowSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_bowSegmentTextStart = .;
            build/baserom/object_gi_bow.o (.text)
        _object_gi_bowSegmentTextEnd = .;
    _object_gi_bowSegmentTextSize = ABSOLUTE( _object_gi_bowSegmentTextEnd - _object_gi_bowSegmentTextStart );
        _object_gi_bowSegmentDataStart = .;
            build/baserom/object_gi_bow.o (.data)
        _object_gi_bowSegmentDataEnd = .;
    _object_gi_bowSegmentDataSize = ABSOLUTE( _object_gi_bowSegmentDataEnd - _object_gi_bowSegmentDataStart );
        _object_gi_bowSegmentRoDataStart = .;
            build/baserom/object_gi_bow.o (.rodata)
        _object_gi_bowSegmentRoDataEnd = .;
    _object_gi_bowSegmentRoDataSize = ABSOLUTE( _object_gi_bowSegmentRoDataEnd - _object_gi_bowSegmentRoDataStart );
        _object_gi_bowSegmentSDataStart = .;
            build/baserom/object_gi_bow.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_bowSegmentSDataEnd = .;
        _object_gi_bowSegmentOvlStart = .;
            build/baserom/object_gi_bow.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_bowSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_bowSegmentOvlEnd - _object_gi_bowSegmentTextStart );
    _object_gi_bowSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_bow.bss ADDR(..object_gi_bow) + SIZEOF(..object_gi_bow) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_bowSegmentBssStart = .;
            build/baserom/object_gi_bow.o (.sbss)
            build/baserom/object_gi_bow.o (.scommon)
            build/baserom/object_gi_bow.o (.bss)
            build/baserom/object_gi_bow.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_bowSegmentBssEnd = .;
        _object_gi_bowSegmentEnd = .;
    }
    _object_gi_bowSegmentBssSize = ABSOLUTE( _object_gi_bowSegmentBssEnd - _object_gi_bowSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_glassesSegmentRomStart = _RomSize;
    ..object_gi_glasses : AT(_RomSize)
    {
        _object_gi_glassesSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_glassesSegmentTextStart = .;
            build/baserom/object_gi_glasses.o (.text)
        _object_gi_glassesSegmentTextEnd = .;
    _object_gi_glassesSegmentTextSize = ABSOLUTE( _object_gi_glassesSegmentTextEnd - _object_gi_glassesSegmentTextStart );
        _object_gi_glassesSegmentDataStart = .;
            build/baserom/object_gi_glasses.o (.data)
        _object_gi_glassesSegmentDataEnd = .;
    _object_gi_glassesSegmentDataSize = ABSOLUTE( _object_gi_glassesSegmentDataEnd - _object_gi_glassesSegmentDataStart );
        _object_gi_glassesSegmentRoDataStart = .;
            build/baserom/object_gi_glasses.o (.rodata)
        _object_gi_glassesSegmentRoDataEnd = .;
    _object_gi_glassesSegmentRoDataSize = ABSOLUTE( _object_gi_glassesSegmentRoDataEnd - _object_gi_glassesSegmentRoDataStart );
        _object_gi_glassesSegmentSDataStart = .;
            build/baserom/object_gi_glasses.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_glassesSegmentSDataEnd = .;
        _object_gi_glassesSegmentOvlStart = .;
            build/baserom/object_gi_glasses.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_glassesSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_glassesSegmentOvlEnd - _object_gi_glassesSegmentTextStart );
    _object_gi_glassesSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_glasses.bss ADDR(..object_gi_glasses) + SIZEOF(..object_gi_glasses) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_glassesSegmentBssStart = .;
            build/baserom/object_gi_glasses.o (.sbss)
            build/baserom/object_gi_glasses.o (.scommon)
            build/baserom/object_gi_glasses.o (.bss)
            build/baserom/object_gi_glasses.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_glassesSegmentBssEnd = .;
        _object_gi_glassesSegmentEnd = .;
    }
    _object_gi_glassesSegmentBssSize = ABSOLUTE( _object_gi_glassesSegmentBssEnd - _object_gi_glassesSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_liquidSegmentRomStart = _RomSize;
    ..object_gi_liquid : AT(_RomSize)
    {
        _object_gi_liquidSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_liquidSegmentTextStart = .;
            build/baserom/object_gi_liquid.o (.text)
        _object_gi_liquidSegmentTextEnd = .;
    _object_gi_liquidSegmentTextSize = ABSOLUTE( _object_gi_liquidSegmentTextEnd - _object_gi_liquidSegmentTextStart );
        _object_gi_liquidSegmentDataStart = .;
            build/baserom/object_gi_liquid.o (.data)
        _object_gi_liquidSegmentDataEnd = .;
    _object_gi_liquidSegmentDataSize = ABSOLUTE( _object_gi_liquidSegmentDataEnd - _object_gi_liquidSegmentDataStart );
        _object_gi_liquidSegmentRoDataStart = .;
            build/baserom/object_gi_liquid.o (.rodata)
        _object_gi_liquidSegmentRoDataEnd = .;
    _object_gi_liquidSegmentRoDataSize = ABSOLUTE( _object_gi_liquidSegmentRoDataEnd - _object_gi_liquidSegmentRoDataStart );
        _object_gi_liquidSegmentSDataStart = .;
            build/baserom/object_gi_liquid.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_liquidSegmentSDataEnd = .;
        _object_gi_liquidSegmentOvlStart = .;
            build/baserom/object_gi_liquid.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_liquidSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_liquidSegmentOvlEnd - _object_gi_liquidSegmentTextStart );
    _object_gi_liquidSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_liquid.bss ADDR(..object_gi_liquid) + SIZEOF(..object_gi_liquid) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_liquidSegmentBssStart = .;
            build/baserom/object_gi_liquid.o (.sbss)
            build/baserom/object_gi_liquid.o (.scommon)
            build/baserom/object_gi_liquid.o (.bss)
            build/baserom/object_gi_liquid.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_liquidSegmentBssEnd = .;
        _object_gi_liquidSegmentEnd = .;
    }
    _object_gi_liquidSegmentBssSize = ABSOLUTE( _object_gi_liquidSegmentBssEnd - _object_gi_liquidSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_aniSegmentRomStart = _RomSize;
    ..object_ani : AT(_RomSize)
    {
        _object_aniSegmentStart = .;
        . = ALIGN(0x10);
        _object_aniSegmentTextStart = .;
            build/baserom/object_ani.o (.text)
        _object_aniSegmentTextEnd = .;
    _object_aniSegmentTextSize = ABSOLUTE( _object_aniSegmentTextEnd - _object_aniSegmentTextStart );
        _object_aniSegmentDataStart = .;
            build/baserom/object_ani.o (.data)
        _object_aniSegmentDataEnd = .;
    _object_aniSegmentDataSize = ABSOLUTE( _object_aniSegmentDataEnd - _object_aniSegmentDataStart );
        _object_aniSegmentRoDataStart = .;
            build/baserom/object_ani.o (.rodata)
        _object_aniSegmentRoDataEnd = .;
    _object_aniSegmentRoDataSize = ABSOLUTE( _object_aniSegmentRoDataEnd - _object_aniSegmentRoDataStart );
        _object_aniSegmentSDataStart = .;
            build/baserom/object_ani.o (.sdata)
        . = ALIGN(0x10);
        _object_aniSegmentSDataEnd = .;
        _object_aniSegmentOvlStart = .;
            build/baserom/object_ani.o (.ovl)
        . = ALIGN(0x10);
        _object_aniSegmentOvlEnd = .;
    }
    _RomSize += ( _object_aniSegmentOvlEnd - _object_aniSegmentTextStart );
    _object_aniSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ani.bss ADDR(..object_ani) + SIZEOF(..object_ani) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_aniSegmentBssStart = .;
            build/baserom/object_ani.o (.sbss)
            build/baserom/object_ani.o (.scommon)
            build/baserom/object_ani.o (.bss)
            build/baserom/object_ani.o (COMMON)
        . = ALIGN(0x10);
        _object_aniSegmentBssEnd = .;
        _object_aniSegmentEnd = .;
    }
    _object_aniSegmentBssSize = ABSOLUTE( _object_aniSegmentBssEnd - _object_aniSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_demo_6kSegmentRomStart = _RomSize;
    ..object_demo_6k : AT(_RomSize)
    {
        _object_demo_6kSegmentStart = .;
        . = ALIGN(0x10);
        _object_demo_6kSegmentTextStart = .;
            build/baserom/object_demo_6k.o (.text)
        _object_demo_6kSegmentTextEnd = .;
    _object_demo_6kSegmentTextSize = ABSOLUTE( _object_demo_6kSegmentTextEnd - _object_demo_6kSegmentTextStart );
        _object_demo_6kSegmentDataStart = .;
            build/baserom/object_demo_6k.o (.data)
        _object_demo_6kSegmentDataEnd = .;
    _object_demo_6kSegmentDataSize = ABSOLUTE( _object_demo_6kSegmentDataEnd - _object_demo_6kSegmentDataStart );
        _object_demo_6kSegmentRoDataStart = .;
            build/baserom/object_demo_6k.o (.rodata)
        _object_demo_6kSegmentRoDataEnd = .;
    _object_demo_6kSegmentRoDataSize = ABSOLUTE( _object_demo_6kSegmentRoDataEnd - _object_demo_6kSegmentRoDataStart );
        _object_demo_6kSegmentSDataStart = .;
            build/baserom/object_demo_6k.o (.sdata)
        . = ALIGN(0x10);
        _object_demo_6kSegmentSDataEnd = .;
        _object_demo_6kSegmentOvlStart = .;
            build/baserom/object_demo_6k.o (.ovl)
        . = ALIGN(0x10);
        _object_demo_6kSegmentOvlEnd = .;
    }
    _RomSize += ( _object_demo_6kSegmentOvlEnd - _object_demo_6kSegmentTextStart );
    _object_demo_6kSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_demo_6k.bss ADDR(..object_demo_6k) + SIZEOF(..object_demo_6k) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_demo_6kSegmentBssStart = .;
            build/baserom/object_demo_6k.o (.sbss)
            build/baserom/object_demo_6k.o (.scommon)
            build/baserom/object_demo_6k.o (.bss)
            build/baserom/object_demo_6k.o (COMMON)
        . = ALIGN(0x10);
        _object_demo_6kSegmentBssEnd = .;
        _object_demo_6kSegmentEnd = .;
    }
    _object_demo_6kSegmentBssSize = ABSOLUTE( _object_demo_6kSegmentBssEnd - _object_demo_6kSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_shield_3SegmentRomStart = _RomSize;
    ..object_gi_shield_3 : AT(_RomSize)
    {
        _object_gi_shield_3SegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_shield_3SegmentTextStart = .;
            build/baserom/object_gi_shield_3.o (.text)
        _object_gi_shield_3SegmentTextEnd = .;
    _object_gi_shield_3SegmentTextSize = ABSOLUTE( _object_gi_shield_3SegmentTextEnd - _object_gi_shield_3SegmentTextStart );
        _object_gi_shield_3SegmentDataStart = .;
            build/baserom/object_gi_shield_3.o (.data)
        _object_gi_shield_3SegmentDataEnd = .;
    _object_gi_shield_3SegmentDataSize = ABSOLUTE( _object_gi_shield_3SegmentDataEnd - _object_gi_shield_3SegmentDataStart );
        _object_gi_shield_3SegmentRoDataStart = .;
            build/baserom/object_gi_shield_3.o (.rodata)
        _object_gi_shield_3SegmentRoDataEnd = .;
    _object_gi_shield_3SegmentRoDataSize = ABSOLUTE( _object_gi_shield_3SegmentRoDataEnd - _object_gi_shield_3SegmentRoDataStart );
        _object_gi_shield_3SegmentSDataStart = .;
            build/baserom/object_gi_shield_3.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_shield_3SegmentSDataEnd = .;
        _object_gi_shield_3SegmentOvlStart = .;
            build/baserom/object_gi_shield_3.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_shield_3SegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_shield_3SegmentOvlEnd - _object_gi_shield_3SegmentTextStart );
    _object_gi_shield_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_shield_3.bss ADDR(..object_gi_shield_3) + SIZEOF(..object_gi_shield_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_shield_3SegmentBssStart = .;
            build/baserom/object_gi_shield_3.o (.sbss)
            build/baserom/object_gi_shield_3.o (.scommon)
            build/baserom/object_gi_shield_3.o (.bss)
            build/baserom/object_gi_shield_3.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_shield_3SegmentBssEnd = .;
        _object_gi_shield_3SegmentEnd = .;
    }
    _object_gi_shield_3SegmentBssSize = ABSOLUTE( _object_gi_shield_3SegmentBssEnd - _object_gi_shield_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_letterSegmentRomStart = _RomSize;
    ..object_gi_letter : AT(_RomSize)
    {
        _object_gi_letterSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_letterSegmentTextStart = .;
            build/baserom/object_gi_letter.o (.text)
        _object_gi_letterSegmentTextEnd = .;
    _object_gi_letterSegmentTextSize = ABSOLUTE( _object_gi_letterSegmentTextEnd - _object_gi_letterSegmentTextStart );
        _object_gi_letterSegmentDataStart = .;
            build/baserom/object_gi_letter.o (.data)
        _object_gi_letterSegmentDataEnd = .;
    _object_gi_letterSegmentDataSize = ABSOLUTE( _object_gi_letterSegmentDataEnd - _object_gi_letterSegmentDataStart );
        _object_gi_letterSegmentRoDataStart = .;
            build/baserom/object_gi_letter.o (.rodata)
        _object_gi_letterSegmentRoDataEnd = .;
    _object_gi_letterSegmentRoDataSize = ABSOLUTE( _object_gi_letterSegmentRoDataEnd - _object_gi_letterSegmentRoDataStart );
        _object_gi_letterSegmentSDataStart = .;
            build/baserom/object_gi_letter.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_letterSegmentSDataEnd = .;
        _object_gi_letterSegmentOvlStart = .;
            build/baserom/object_gi_letter.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_letterSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_letterSegmentOvlEnd - _object_gi_letterSegmentTextStart );
    _object_gi_letterSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_letter.bss ADDR(..object_gi_letter) + SIZEOF(..object_gi_letter) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_letterSegmentBssStart = .;
            build/baserom/object_gi_letter.o (.sbss)
            build/baserom/object_gi_letter.o (.scommon)
            build/baserom/object_gi_letter.o (.bss)
            build/baserom/object_gi_letter.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_letterSegmentBssEnd = .;
        _object_gi_letterSegmentEnd = .;
    }
    _object_gi_letterSegmentBssSize = ABSOLUTE( _object_gi_letterSegmentBssEnd - _object_gi_letterSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot15_objSegmentRomStart = _RomSize;
    ..object_spot15_obj : AT(_RomSize)
    {
        _object_spot15_objSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot15_objSegmentTextStart = .;
            build/baserom/object_spot15_obj.o (.text)
        _object_spot15_objSegmentTextEnd = .;
    _object_spot15_objSegmentTextSize = ABSOLUTE( _object_spot15_objSegmentTextEnd - _object_spot15_objSegmentTextStart );
        _object_spot15_objSegmentDataStart = .;
            build/baserom/object_spot15_obj.o (.data)
        _object_spot15_objSegmentDataEnd = .;
    _object_spot15_objSegmentDataSize = ABSOLUTE( _object_spot15_objSegmentDataEnd - _object_spot15_objSegmentDataStart );
        _object_spot15_objSegmentRoDataStart = .;
            build/baserom/object_spot15_obj.o (.rodata)
        _object_spot15_objSegmentRoDataEnd = .;
    _object_spot15_objSegmentRoDataSize = ABSOLUTE( _object_spot15_objSegmentRoDataEnd - _object_spot15_objSegmentRoDataStart );
        _object_spot15_objSegmentSDataStart = .;
            build/baserom/object_spot15_obj.o (.sdata)
        . = ALIGN(0x10);
        _object_spot15_objSegmentSDataEnd = .;
        _object_spot15_objSegmentOvlStart = .;
            build/baserom/object_spot15_obj.o (.ovl)
        . = ALIGN(0x10);
        _object_spot15_objSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot15_objSegmentOvlEnd - _object_spot15_objSegmentTextStart );
    _object_spot15_objSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot15_obj.bss ADDR(..object_spot15_obj) + SIZEOF(..object_spot15_obj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot15_objSegmentBssStart = .;
            build/baserom/object_spot15_obj.o (.sbss)
            build/baserom/object_spot15_obj.o (.scommon)
            build/baserom/object_spot15_obj.o (.bss)
            build/baserom/object_spot15_obj.o (COMMON)
        . = ALIGN(0x10);
        _object_spot15_objSegmentBssEnd = .;
        _object_spot15_objSegmentEnd = .;
    }
    _object_spot15_objSegmentBssSize = ABSOLUTE( _object_spot15_objSegmentBssEnd - _object_spot15_objSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_jya_objSegmentRomStart = _RomSize;
    ..object_jya_obj : AT(_RomSize)
    {
        _object_jya_objSegmentStart = .;
        . = ALIGN(0x10);
        _object_jya_objSegmentTextStart = .;
            build/baserom/object_jya_obj.o (.text)
        _object_jya_objSegmentTextEnd = .;
    _object_jya_objSegmentTextSize = ABSOLUTE( _object_jya_objSegmentTextEnd - _object_jya_objSegmentTextStart );
        _object_jya_objSegmentDataStart = .;
            build/baserom/object_jya_obj.o (.data)
        _object_jya_objSegmentDataEnd = .;
    _object_jya_objSegmentDataSize = ABSOLUTE( _object_jya_objSegmentDataEnd - _object_jya_objSegmentDataStart );
        _object_jya_objSegmentRoDataStart = .;
            build/baserom/object_jya_obj.o (.rodata)
        _object_jya_objSegmentRoDataEnd = .;
    _object_jya_objSegmentRoDataSize = ABSOLUTE( _object_jya_objSegmentRoDataEnd - _object_jya_objSegmentRoDataStart );
        _object_jya_objSegmentSDataStart = .;
            build/baserom/object_jya_obj.o (.sdata)
        . = ALIGN(0x10);
        _object_jya_objSegmentSDataEnd = .;
        _object_jya_objSegmentOvlStart = .;
            build/baserom/object_jya_obj.o (.ovl)
        . = ALIGN(0x10);
        _object_jya_objSegmentOvlEnd = .;
    }
    _RomSize += ( _object_jya_objSegmentOvlEnd - _object_jya_objSegmentTextStart );
    _object_jya_objSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_jya_obj.bss ADDR(..object_jya_obj) + SIZEOF(..object_jya_obj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_jya_objSegmentBssStart = .;
            build/baserom/object_jya_obj.o (.sbss)
            build/baserom/object_jya_obj.o (.scommon)
            build/baserom/object_jya_obj.o (.bss)
            build/baserom/object_jya_obj.o (COMMON)
        . = ALIGN(0x10);
        _object_jya_objSegmentBssEnd = .;
        _object_jya_objSegmentEnd = .;
    }
    _object_jya_objSegmentBssSize = ABSOLUTE( _object_jya_objSegmentBssEnd - _object_jya_objSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_clothesSegmentRomStart = _RomSize;
    ..object_gi_clothes : AT(_RomSize)
    {
        _object_gi_clothesSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_clothesSegmentTextStart = .;
            build/baserom/object_gi_clothes.o (.text)
        _object_gi_clothesSegmentTextEnd = .;
    _object_gi_clothesSegmentTextSize = ABSOLUTE( _object_gi_clothesSegmentTextEnd - _object_gi_clothesSegmentTextStart );
        _object_gi_clothesSegmentDataStart = .;
            build/baserom/object_gi_clothes.o (.data)
        _object_gi_clothesSegmentDataEnd = .;
    _object_gi_clothesSegmentDataSize = ABSOLUTE( _object_gi_clothesSegmentDataEnd - _object_gi_clothesSegmentDataStart );
        _object_gi_clothesSegmentRoDataStart = .;
            build/baserom/object_gi_clothes.o (.rodata)
        _object_gi_clothesSegmentRoDataEnd = .;
    _object_gi_clothesSegmentRoDataSize = ABSOLUTE( _object_gi_clothesSegmentRoDataEnd - _object_gi_clothesSegmentRoDataStart );
        _object_gi_clothesSegmentSDataStart = .;
            build/baserom/object_gi_clothes.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_clothesSegmentSDataEnd = .;
        _object_gi_clothesSegmentOvlStart = .;
            build/baserom/object_gi_clothes.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_clothesSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_clothesSegmentOvlEnd - _object_gi_clothesSegmentTextStart );
    _object_gi_clothesSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_clothes.bss ADDR(..object_gi_clothes) + SIZEOF(..object_gi_clothes) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_clothesSegmentBssStart = .;
            build/baserom/object_gi_clothes.o (.sbss)
            build/baserom/object_gi_clothes.o (.scommon)
            build/baserom/object_gi_clothes.o (.bss)
            build/baserom/object_gi_clothes.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_clothesSegmentBssEnd = .;
        _object_gi_clothesSegmentEnd = .;
    }
    _object_gi_clothesSegmentBssSize = ABSOLUTE( _object_gi_clothesSegmentBssEnd - _object_gi_clothesSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_beanSegmentRomStart = _RomSize;
    ..object_gi_bean : AT(_RomSize)
    {
        _object_gi_beanSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_beanSegmentTextStart = .;
            build/baserom/object_gi_bean.o (.text)
        _object_gi_beanSegmentTextEnd = .;
    _object_gi_beanSegmentTextSize = ABSOLUTE( _object_gi_beanSegmentTextEnd - _object_gi_beanSegmentTextStart );
        _object_gi_beanSegmentDataStart = .;
            build/baserom/object_gi_bean.o (.data)
        _object_gi_beanSegmentDataEnd = .;
    _object_gi_beanSegmentDataSize = ABSOLUTE( _object_gi_beanSegmentDataEnd - _object_gi_beanSegmentDataStart );
        _object_gi_beanSegmentRoDataStart = .;
            build/baserom/object_gi_bean.o (.rodata)
        _object_gi_beanSegmentRoDataEnd = .;
    _object_gi_beanSegmentRoDataSize = ABSOLUTE( _object_gi_beanSegmentRoDataEnd - _object_gi_beanSegmentRoDataStart );
        _object_gi_beanSegmentSDataStart = .;
            build/baserom/object_gi_bean.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_beanSegmentSDataEnd = .;
        _object_gi_beanSegmentOvlStart = .;
            build/baserom/object_gi_bean.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_beanSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_beanSegmentOvlEnd - _object_gi_beanSegmentTextStart );
    _object_gi_beanSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_bean.bss ADDR(..object_gi_bean) + SIZEOF(..object_gi_bean) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_beanSegmentBssStart = .;
            build/baserom/object_gi_bean.o (.sbss)
            build/baserom/object_gi_bean.o (.scommon)
            build/baserom/object_gi_bean.o (.bss)
            build/baserom/object_gi_bean.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_beanSegmentBssEnd = .;
        _object_gi_beanSegmentEnd = .;
    }
    _object_gi_beanSegmentBssSize = ABSOLUTE( _object_gi_beanSegmentBssEnd - _object_gi_beanSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_fishSegmentRomStart = _RomSize;
    ..object_gi_fish : AT(_RomSize)
    {
        _object_gi_fishSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_fishSegmentTextStart = .;
            build/baserom/object_gi_fish.o (.text)
        _object_gi_fishSegmentTextEnd = .;
    _object_gi_fishSegmentTextSize = ABSOLUTE( _object_gi_fishSegmentTextEnd - _object_gi_fishSegmentTextStart );
        _object_gi_fishSegmentDataStart = .;
            build/baserom/object_gi_fish.o (.data)
        _object_gi_fishSegmentDataEnd = .;
    _object_gi_fishSegmentDataSize = ABSOLUTE( _object_gi_fishSegmentDataEnd - _object_gi_fishSegmentDataStart );
        _object_gi_fishSegmentRoDataStart = .;
            build/baserom/object_gi_fish.o (.rodata)
        _object_gi_fishSegmentRoDataEnd = .;
    _object_gi_fishSegmentRoDataSize = ABSOLUTE( _object_gi_fishSegmentRoDataEnd - _object_gi_fishSegmentRoDataStart );
        _object_gi_fishSegmentSDataStart = .;
            build/baserom/object_gi_fish.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_fishSegmentSDataEnd = .;
        _object_gi_fishSegmentOvlStart = .;
            build/baserom/object_gi_fish.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_fishSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_fishSegmentOvlEnd - _object_gi_fishSegmentTextStart );
    _object_gi_fishSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_fish.bss ADDR(..object_gi_fish) + SIZEOF(..object_gi_fish) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_fishSegmentBssStart = .;
            build/baserom/object_gi_fish.o (.sbss)
            build/baserom/object_gi_fish.o (.scommon)
            build/baserom/object_gi_fish.o (.bss)
            build/baserom/object_gi_fish.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_fishSegmentBssEnd = .;
        _object_gi_fishSegmentEnd = .;
    }
    _object_gi_fishSegmentBssSize = ABSOLUTE( _object_gi_fishSegmentBssEnd - _object_gi_fishSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_sawSegmentRomStart = _RomSize;
    ..object_gi_saw : AT(_RomSize)
    {
        _object_gi_sawSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_sawSegmentTextStart = .;
            build/baserom/object_gi_saw.o (.text)
        _object_gi_sawSegmentTextEnd = .;
    _object_gi_sawSegmentTextSize = ABSOLUTE( _object_gi_sawSegmentTextEnd - _object_gi_sawSegmentTextStart );
        _object_gi_sawSegmentDataStart = .;
            build/baserom/object_gi_saw.o (.data)
        _object_gi_sawSegmentDataEnd = .;
    _object_gi_sawSegmentDataSize = ABSOLUTE( _object_gi_sawSegmentDataEnd - _object_gi_sawSegmentDataStart );
        _object_gi_sawSegmentRoDataStart = .;
            build/baserom/object_gi_saw.o (.rodata)
        _object_gi_sawSegmentRoDataEnd = .;
    _object_gi_sawSegmentRoDataSize = ABSOLUTE( _object_gi_sawSegmentRoDataEnd - _object_gi_sawSegmentRoDataStart );
        _object_gi_sawSegmentSDataStart = .;
            build/baserom/object_gi_saw.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_sawSegmentSDataEnd = .;
        _object_gi_sawSegmentOvlStart = .;
            build/baserom/object_gi_saw.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_sawSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_sawSegmentOvlEnd - _object_gi_sawSegmentTextStart );
    _object_gi_sawSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_saw.bss ADDR(..object_gi_saw) + SIZEOF(..object_gi_saw) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_sawSegmentBssStart = .;
            build/baserom/object_gi_saw.o (.sbss)
            build/baserom/object_gi_saw.o (.scommon)
            build/baserom/object_gi_saw.o (.bss)
            build/baserom/object_gi_saw.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_sawSegmentBssEnd = .;
        _object_gi_sawSegmentEnd = .;
    }
    _object_gi_sawSegmentBssSize = ABSOLUTE( _object_gi_sawSegmentBssEnd - _object_gi_sawSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_hammerSegmentRomStart = _RomSize;
    ..object_gi_hammer : AT(_RomSize)
    {
        _object_gi_hammerSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_hammerSegmentTextStart = .;
            build/baserom/object_gi_hammer.o (.text)
        _object_gi_hammerSegmentTextEnd = .;
    _object_gi_hammerSegmentTextSize = ABSOLUTE( _object_gi_hammerSegmentTextEnd - _object_gi_hammerSegmentTextStart );
        _object_gi_hammerSegmentDataStart = .;
            build/baserom/object_gi_hammer.o (.data)
        _object_gi_hammerSegmentDataEnd = .;
    _object_gi_hammerSegmentDataSize = ABSOLUTE( _object_gi_hammerSegmentDataEnd - _object_gi_hammerSegmentDataStart );
        _object_gi_hammerSegmentRoDataStart = .;
            build/baserom/object_gi_hammer.o (.rodata)
        _object_gi_hammerSegmentRoDataEnd = .;
    _object_gi_hammerSegmentRoDataSize = ABSOLUTE( _object_gi_hammerSegmentRoDataEnd - _object_gi_hammerSegmentRoDataStart );
        _object_gi_hammerSegmentSDataStart = .;
            build/baserom/object_gi_hammer.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_hammerSegmentSDataEnd = .;
        _object_gi_hammerSegmentOvlStart = .;
            build/baserom/object_gi_hammer.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_hammerSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_hammerSegmentOvlEnd - _object_gi_hammerSegmentTextStart );
    _object_gi_hammerSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_hammer.bss ADDR(..object_gi_hammer) + SIZEOF(..object_gi_hammer) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_hammerSegmentBssStart = .;
            build/baserom/object_gi_hammer.o (.sbss)
            build/baserom/object_gi_hammer.o (.scommon)
            build/baserom/object_gi_hammer.o (.bss)
            build/baserom/object_gi_hammer.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_hammerSegmentBssEnd = .;
        _object_gi_hammerSegmentEnd = .;
    }
    _object_gi_hammerSegmentBssSize = ABSOLUTE( _object_gi_hammerSegmentBssEnd - _object_gi_hammerSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_grassSegmentRomStart = _RomSize;
    ..object_gi_grass : AT(_RomSize)
    {
        _object_gi_grassSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_grassSegmentTextStart = .;
            build/baserom/object_gi_grass.o (.text)
        _object_gi_grassSegmentTextEnd = .;
    _object_gi_grassSegmentTextSize = ABSOLUTE( _object_gi_grassSegmentTextEnd - _object_gi_grassSegmentTextStart );
        _object_gi_grassSegmentDataStart = .;
            build/baserom/object_gi_grass.o (.data)
        _object_gi_grassSegmentDataEnd = .;
    _object_gi_grassSegmentDataSize = ABSOLUTE( _object_gi_grassSegmentDataEnd - _object_gi_grassSegmentDataStart );
        _object_gi_grassSegmentRoDataStart = .;
            build/baserom/object_gi_grass.o (.rodata)
        _object_gi_grassSegmentRoDataEnd = .;
    _object_gi_grassSegmentRoDataSize = ABSOLUTE( _object_gi_grassSegmentRoDataEnd - _object_gi_grassSegmentRoDataStart );
        _object_gi_grassSegmentSDataStart = .;
            build/baserom/object_gi_grass.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_grassSegmentSDataEnd = .;
        _object_gi_grassSegmentOvlStart = .;
            build/baserom/object_gi_grass.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_grassSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_grassSegmentOvlEnd - _object_gi_grassSegmentTextStart );
    _object_gi_grassSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_grass.bss ADDR(..object_gi_grass) + SIZEOF(..object_gi_grass) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_grassSegmentBssStart = .;
            build/baserom/object_gi_grass.o (.sbss)
            build/baserom/object_gi_grass.o (.scommon)
            build/baserom/object_gi_grass.o (.bss)
            build/baserom/object_gi_grass.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_grassSegmentBssEnd = .;
        _object_gi_grassSegmentEnd = .;
    }
    _object_gi_grassSegmentBssSize = ABSOLUTE( _object_gi_grassSegmentBssEnd - _object_gi_grassSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_longswordSegmentRomStart = _RomSize;
    ..object_gi_longsword : AT(_RomSize)
    {
        _object_gi_longswordSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_longswordSegmentTextStart = .;
            build/baserom/object_gi_longsword.o (.text)
        _object_gi_longswordSegmentTextEnd = .;
    _object_gi_longswordSegmentTextSize = ABSOLUTE( _object_gi_longswordSegmentTextEnd - _object_gi_longswordSegmentTextStart );
        _object_gi_longswordSegmentDataStart = .;
            build/baserom/object_gi_longsword.o (.data)
        _object_gi_longswordSegmentDataEnd = .;
    _object_gi_longswordSegmentDataSize = ABSOLUTE( _object_gi_longswordSegmentDataEnd - _object_gi_longswordSegmentDataStart );
        _object_gi_longswordSegmentRoDataStart = .;
            build/baserom/object_gi_longsword.o (.rodata)
        _object_gi_longswordSegmentRoDataEnd = .;
    _object_gi_longswordSegmentRoDataSize = ABSOLUTE( _object_gi_longswordSegmentRoDataEnd - _object_gi_longswordSegmentRoDataStart );
        _object_gi_longswordSegmentSDataStart = .;
            build/baserom/object_gi_longsword.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_longswordSegmentSDataEnd = .;
        _object_gi_longswordSegmentOvlStart = .;
            build/baserom/object_gi_longsword.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_longswordSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_longswordSegmentOvlEnd - _object_gi_longswordSegmentTextStart );
    _object_gi_longswordSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_longsword.bss ADDR(..object_gi_longsword) + SIZEOF(..object_gi_longsword) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_longswordSegmentBssStart = .;
            build/baserom/object_gi_longsword.o (.sbss)
            build/baserom/object_gi_longsword.o (.scommon)
            build/baserom/object_gi_longsword.o (.bss)
            build/baserom/object_gi_longsword.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_longswordSegmentBssEnd = .;
        _object_gi_longswordSegmentEnd = .;
    }
    _object_gi_longswordSegmentBssSize = ABSOLUTE( _object_gi_longswordSegmentBssEnd - _object_gi_longswordSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot01_objectsSegmentRomStart = _RomSize;
    ..object_spot01_objects : AT(_RomSize)
    {
        _object_spot01_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot01_objectsSegmentTextStart = .;
            build/baserom/object_spot01_objects.o (.text)
        _object_spot01_objectsSegmentTextEnd = .;
    _object_spot01_objectsSegmentTextSize = ABSOLUTE( _object_spot01_objectsSegmentTextEnd - _object_spot01_objectsSegmentTextStart );
        _object_spot01_objectsSegmentDataStart = .;
            build/baserom/object_spot01_objects.o (.data)
        _object_spot01_objectsSegmentDataEnd = .;
    _object_spot01_objectsSegmentDataSize = ABSOLUTE( _object_spot01_objectsSegmentDataEnd - _object_spot01_objectsSegmentDataStart );
        _object_spot01_objectsSegmentRoDataStart = .;
            build/baserom/object_spot01_objects.o (.rodata)
        _object_spot01_objectsSegmentRoDataEnd = .;
    _object_spot01_objectsSegmentRoDataSize = ABSOLUTE( _object_spot01_objectsSegmentRoDataEnd - _object_spot01_objectsSegmentRoDataStart );
        _object_spot01_objectsSegmentSDataStart = .;
            build/baserom/object_spot01_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_spot01_objectsSegmentSDataEnd = .;
        _object_spot01_objectsSegmentOvlStart = .;
            build/baserom/object_spot01_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_spot01_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot01_objectsSegmentOvlEnd - _object_spot01_objectsSegmentTextStart );
    _object_spot01_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot01_objects.bss ADDR(..object_spot01_objects) + SIZEOF(..object_spot01_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot01_objectsSegmentBssStart = .;
            build/baserom/object_spot01_objects.o (.sbss)
            build/baserom/object_spot01_objects.o (.scommon)
            build/baserom/object_spot01_objects.o (.bss)
            build/baserom/object_spot01_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_spot01_objectsSegmentBssEnd = .;
        _object_spot01_objectsSegmentEnd = .;
    }
    _object_spot01_objectsSegmentBssSize = ABSOLUTE( _object_spot01_objectsSegmentBssEnd - _object_spot01_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mdSegmentRomStart = _RomSize;
    ..object_md : AT(_RomSize)
    {
        _object_mdSegmentStart = .;
        . = ALIGN(0x10);
        _object_mdSegmentTextStart = .;
            build/baserom/object_md.o (.text)
        _object_mdSegmentTextEnd = .;
    _object_mdSegmentTextSize = ABSOLUTE( _object_mdSegmentTextEnd - _object_mdSegmentTextStart );
        _object_mdSegmentDataStart = .;
            build/baserom/object_md.o (.data)
        _object_mdSegmentDataEnd = .;
    _object_mdSegmentDataSize = ABSOLUTE( _object_mdSegmentDataEnd - _object_mdSegmentDataStart );
        _object_mdSegmentRoDataStart = .;
            build/baserom/object_md.o (.rodata)
        _object_mdSegmentRoDataEnd = .;
    _object_mdSegmentRoDataSize = ABSOLUTE( _object_mdSegmentRoDataEnd - _object_mdSegmentRoDataStart );
        _object_mdSegmentSDataStart = .;
            build/baserom/object_md.o (.sdata)
        . = ALIGN(0x10);
        _object_mdSegmentSDataEnd = .;
        _object_mdSegmentOvlStart = .;
            build/baserom/object_md.o (.ovl)
        . = ALIGN(0x10);
        _object_mdSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mdSegmentOvlEnd - _object_mdSegmentTextStart );
    _object_mdSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_md.bss ADDR(..object_md) + SIZEOF(..object_md) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mdSegmentBssStart = .;
            build/baserom/object_md.o (.sbss)
            build/baserom/object_md.o (.scommon)
            build/baserom/object_md.o (.bss)
            build/baserom/object_md.o (COMMON)
        . = ALIGN(0x10);
        _object_mdSegmentBssEnd = .;
        _object_mdSegmentEnd = .;
    }
    _object_mdSegmentBssSize = ABSOLUTE( _object_mdSegmentBssEnd - _object_mdSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_km1SegmentRomStart = _RomSize;
    ..object_km1 : AT(_RomSize)
    {
        _object_km1SegmentStart = .;
        . = ALIGN(0x10);
        _object_km1SegmentTextStart = .;
            build/baserom/object_km1.o (.text)
        _object_km1SegmentTextEnd = .;
    _object_km1SegmentTextSize = ABSOLUTE( _object_km1SegmentTextEnd - _object_km1SegmentTextStart );
        _object_km1SegmentDataStart = .;
            build/baserom/object_km1.o (.data)
        _object_km1SegmentDataEnd = .;
    _object_km1SegmentDataSize = ABSOLUTE( _object_km1SegmentDataEnd - _object_km1SegmentDataStart );
        _object_km1SegmentRoDataStart = .;
            build/baserom/object_km1.o (.rodata)
        _object_km1SegmentRoDataEnd = .;
    _object_km1SegmentRoDataSize = ABSOLUTE( _object_km1SegmentRoDataEnd - _object_km1SegmentRoDataStart );
        _object_km1SegmentSDataStart = .;
            build/baserom/object_km1.o (.sdata)
        . = ALIGN(0x10);
        _object_km1SegmentSDataEnd = .;
        _object_km1SegmentOvlStart = .;
            build/baserom/object_km1.o (.ovl)
        . = ALIGN(0x10);
        _object_km1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_km1SegmentOvlEnd - _object_km1SegmentTextStart );
    _object_km1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_km1.bss ADDR(..object_km1) + SIZEOF(..object_km1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_km1SegmentBssStart = .;
            build/baserom/object_km1.o (.sbss)
            build/baserom/object_km1.o (.scommon)
            build/baserom/object_km1.o (.bss)
            build/baserom/object_km1.o (COMMON)
        . = ALIGN(0x10);
        _object_km1SegmentBssEnd = .;
        _object_km1SegmentEnd = .;
    }
    _object_km1SegmentBssSize = ABSOLUTE( _object_km1SegmentBssEnd - _object_km1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_kw1SegmentRomStart = _RomSize;
    ..object_kw1 : AT(_RomSize)
    {
        _object_kw1SegmentStart = .;
        . = ALIGN(0x10);
        _object_kw1SegmentTextStart = .;
            build/baserom/object_kw1.o (.text)
        _object_kw1SegmentTextEnd = .;
    _object_kw1SegmentTextSize = ABSOLUTE( _object_kw1SegmentTextEnd - _object_kw1SegmentTextStart );
        _object_kw1SegmentDataStart = .;
            build/baserom/object_kw1.o (.data)
        _object_kw1SegmentDataEnd = .;
    _object_kw1SegmentDataSize = ABSOLUTE( _object_kw1SegmentDataEnd - _object_kw1SegmentDataStart );
        _object_kw1SegmentRoDataStart = .;
            build/baserom/object_kw1.o (.rodata)
        _object_kw1SegmentRoDataEnd = .;
    _object_kw1SegmentRoDataSize = ABSOLUTE( _object_kw1SegmentRoDataEnd - _object_kw1SegmentRoDataStart );
        _object_kw1SegmentSDataStart = .;
            build/baserom/object_kw1.o (.sdata)
        . = ALIGN(0x10);
        _object_kw1SegmentSDataEnd = .;
        _object_kw1SegmentOvlStart = .;
            build/baserom/object_kw1.o (.ovl)
        . = ALIGN(0x10);
        _object_kw1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_kw1SegmentOvlEnd - _object_kw1SegmentTextStart );
    _object_kw1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_kw1.bss ADDR(..object_kw1) + SIZEOF(..object_kw1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_kw1SegmentBssStart = .;
            build/baserom/object_kw1.o (.sbss)
            build/baserom/object_kw1.o (.scommon)
            build/baserom/object_kw1.o (.bss)
            build/baserom/object_kw1.o (COMMON)
        . = ALIGN(0x10);
        _object_kw1SegmentBssEnd = .;
        _object_kw1SegmentEnd = .;
    }
    _object_kw1SegmentBssSize = ABSOLUTE( _object_kw1SegmentBssEnd - _object_kw1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_zoSegmentRomStart = _RomSize;
    ..object_zo : AT(_RomSize)
    {
        _object_zoSegmentStart = .;
        . = ALIGN(0x10);
        _object_zoSegmentTextStart = .;
            build/baserom/object_zo.o (.text)
        _object_zoSegmentTextEnd = .;
    _object_zoSegmentTextSize = ABSOLUTE( _object_zoSegmentTextEnd - _object_zoSegmentTextStart );
        _object_zoSegmentDataStart = .;
            build/baserom/object_zo.o (.data)
        _object_zoSegmentDataEnd = .;
    _object_zoSegmentDataSize = ABSOLUTE( _object_zoSegmentDataEnd - _object_zoSegmentDataStart );
        _object_zoSegmentRoDataStart = .;
            build/baserom/object_zo.o (.rodata)
        _object_zoSegmentRoDataEnd = .;
    _object_zoSegmentRoDataSize = ABSOLUTE( _object_zoSegmentRoDataEnd - _object_zoSegmentRoDataStart );
        _object_zoSegmentSDataStart = .;
            build/baserom/object_zo.o (.sdata)
        . = ALIGN(0x10);
        _object_zoSegmentSDataEnd = .;
        _object_zoSegmentOvlStart = .;
            build/baserom/object_zo.o (.ovl)
        . = ALIGN(0x10);
        _object_zoSegmentOvlEnd = .;
    }
    _RomSize += ( _object_zoSegmentOvlEnd - _object_zoSegmentTextStart );
    _object_zoSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_zo.bss ADDR(..object_zo) + SIZEOF(..object_zo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_zoSegmentBssStart = .;
            build/baserom/object_zo.o (.sbss)
            build/baserom/object_zo.o (.scommon)
            build/baserom/object_zo.o (.bss)
            build/baserom/object_zo.o (COMMON)
        . = ALIGN(0x10);
        _object_zoSegmentBssEnd = .;
        _object_zoSegmentEnd = .;
    }
    _object_zoSegmentBssSize = ABSOLUTE( _object_zoSegmentBssEnd - _object_zoSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_kzSegmentRomStart = _RomSize;
    ..object_kz : AT(_RomSize)
    {
        _object_kzSegmentStart = .;
        . = ALIGN(0x10);
        _object_kzSegmentTextStart = .;
            build/baserom/object_kz.o (.text)
        _object_kzSegmentTextEnd = .;
    _object_kzSegmentTextSize = ABSOLUTE( _object_kzSegmentTextEnd - _object_kzSegmentTextStart );
        _object_kzSegmentDataStart = .;
            build/baserom/object_kz.o (.data)
        _object_kzSegmentDataEnd = .;
    _object_kzSegmentDataSize = ABSOLUTE( _object_kzSegmentDataEnd - _object_kzSegmentDataStart );
        _object_kzSegmentRoDataStart = .;
            build/baserom/object_kz.o (.rodata)
        _object_kzSegmentRoDataEnd = .;
    _object_kzSegmentRoDataSize = ABSOLUTE( _object_kzSegmentRoDataEnd - _object_kzSegmentRoDataStart );
        _object_kzSegmentSDataStart = .;
            build/baserom/object_kz.o (.sdata)
        . = ALIGN(0x10);
        _object_kzSegmentSDataEnd = .;
        _object_kzSegmentOvlStart = .;
            build/baserom/object_kz.o (.ovl)
        . = ALIGN(0x10);
        _object_kzSegmentOvlEnd = .;
    }
    _RomSize += ( _object_kzSegmentOvlEnd - _object_kzSegmentTextStart );
    _object_kzSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_kz.bss ADDR(..object_kz) + SIZEOF(..object_kz) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_kzSegmentBssStart = .;
            build/baserom/object_kz.o (.sbss)
            build/baserom/object_kz.o (.scommon)
            build/baserom/object_kz.o (.bss)
            build/baserom/object_kz.o (COMMON)
        . = ALIGN(0x10);
        _object_kzSegmentBssEnd = .;
        _object_kzSegmentEnd = .;
    }
    _object_kzSegmentBssSize = ABSOLUTE( _object_kzSegmentBssEnd - _object_kzSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_umajumpSegmentRomStart = _RomSize;
    ..object_umajump : AT(_RomSize)
    {
        _object_umajumpSegmentStart = .;
        . = ALIGN(0x10);
        _object_umajumpSegmentTextStart = .;
            build/baserom/object_umajump.o (.text)
        _object_umajumpSegmentTextEnd = .;
    _object_umajumpSegmentTextSize = ABSOLUTE( _object_umajumpSegmentTextEnd - _object_umajumpSegmentTextStart );
        _object_umajumpSegmentDataStart = .;
            build/baserom/object_umajump.o (.data)
        _object_umajumpSegmentDataEnd = .;
    _object_umajumpSegmentDataSize = ABSOLUTE( _object_umajumpSegmentDataEnd - _object_umajumpSegmentDataStart );
        _object_umajumpSegmentRoDataStart = .;
            build/baserom/object_umajump.o (.rodata)
        _object_umajumpSegmentRoDataEnd = .;
    _object_umajumpSegmentRoDataSize = ABSOLUTE( _object_umajumpSegmentRoDataEnd - _object_umajumpSegmentRoDataStart );
        _object_umajumpSegmentSDataStart = .;
            build/baserom/object_umajump.o (.sdata)
        . = ALIGN(0x10);
        _object_umajumpSegmentSDataEnd = .;
        _object_umajumpSegmentOvlStart = .;
            build/baserom/object_umajump.o (.ovl)
        . = ALIGN(0x10);
        _object_umajumpSegmentOvlEnd = .;
    }
    _RomSize += ( _object_umajumpSegmentOvlEnd - _object_umajumpSegmentTextStart );
    _object_umajumpSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_umajump.bss ADDR(..object_umajump) + SIZEOF(..object_umajump) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_umajumpSegmentBssStart = .;
            build/baserom/object_umajump.o (.sbss)
            build/baserom/object_umajump.o (.scommon)
            build/baserom/object_umajump.o (.bss)
            build/baserom/object_umajump.o (COMMON)
        . = ALIGN(0x10);
        _object_umajumpSegmentBssEnd = .;
        _object_umajumpSegmentEnd = .;
    }
    _object_umajumpSegmentBssSize = ABSOLUTE( _object_umajumpSegmentBssEnd - _object_umajumpSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_masterkokiriSegmentRomStart = _RomSize;
    ..object_masterkokiri : AT(_RomSize)
    {
        _object_masterkokiriSegmentStart = .;
        . = ALIGN(0x10);
        _object_masterkokiriSegmentTextStart = .;
            build/baserom/object_masterkokiri.o (.text)
        _object_masterkokiriSegmentTextEnd = .;
    _object_masterkokiriSegmentTextSize = ABSOLUTE( _object_masterkokiriSegmentTextEnd - _object_masterkokiriSegmentTextStart );
        _object_masterkokiriSegmentDataStart = .;
            build/baserom/object_masterkokiri.o (.data)
        _object_masterkokiriSegmentDataEnd = .;
    _object_masterkokiriSegmentDataSize = ABSOLUTE( _object_masterkokiriSegmentDataEnd - _object_masterkokiriSegmentDataStart );
        _object_masterkokiriSegmentRoDataStart = .;
            build/baserom/object_masterkokiri.o (.rodata)
        _object_masterkokiriSegmentRoDataEnd = .;
    _object_masterkokiriSegmentRoDataSize = ABSOLUTE( _object_masterkokiriSegmentRoDataEnd - _object_masterkokiriSegmentRoDataStart );
        _object_masterkokiriSegmentSDataStart = .;
            build/baserom/object_masterkokiri.o (.sdata)
        . = ALIGN(0x10);
        _object_masterkokiriSegmentSDataEnd = .;
        _object_masterkokiriSegmentOvlStart = .;
            build/baserom/object_masterkokiri.o (.ovl)
        . = ALIGN(0x10);
        _object_masterkokiriSegmentOvlEnd = .;
    }
    _RomSize += ( _object_masterkokiriSegmentOvlEnd - _object_masterkokiriSegmentTextStart );
    _object_masterkokiriSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_masterkokiri.bss ADDR(..object_masterkokiri) + SIZEOF(..object_masterkokiri) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_masterkokiriSegmentBssStart = .;
            build/baserom/object_masterkokiri.o (.sbss)
            build/baserom/object_masterkokiri.o (.scommon)
            build/baserom/object_masterkokiri.o (.bss)
            build/baserom/object_masterkokiri.o (COMMON)
        . = ALIGN(0x10);
        _object_masterkokiriSegmentBssEnd = .;
        _object_masterkokiriSegmentEnd = .;
    }
    _object_masterkokiriSegmentBssSize = ABSOLUTE( _object_masterkokiriSegmentBssEnd - _object_masterkokiriSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_masterkokiriheadSegmentRomStart = _RomSize;
    ..object_masterkokirihead : AT(_RomSize)
    {
        _object_masterkokiriheadSegmentStart = .;
        . = ALIGN(0x10);
        _object_masterkokiriheadSegmentTextStart = .;
            build/baserom/object_masterkokirihead.o (.text)
        _object_masterkokiriheadSegmentTextEnd = .;
    _object_masterkokiriheadSegmentTextSize = ABSOLUTE( _object_masterkokiriheadSegmentTextEnd - _object_masterkokiriheadSegmentTextStart );
        _object_masterkokiriheadSegmentDataStart = .;
            build/baserom/object_masterkokirihead.o (.data)
        _object_masterkokiriheadSegmentDataEnd = .;
    _object_masterkokiriheadSegmentDataSize = ABSOLUTE( _object_masterkokiriheadSegmentDataEnd - _object_masterkokiriheadSegmentDataStart );
        _object_masterkokiriheadSegmentRoDataStart = .;
            build/baserom/object_masterkokirihead.o (.rodata)
        _object_masterkokiriheadSegmentRoDataEnd = .;
    _object_masterkokiriheadSegmentRoDataSize = ABSOLUTE( _object_masterkokiriheadSegmentRoDataEnd - _object_masterkokiriheadSegmentRoDataStart );
        _object_masterkokiriheadSegmentSDataStart = .;
            build/baserom/object_masterkokirihead.o (.sdata)
        . = ALIGN(0x10);
        _object_masterkokiriheadSegmentSDataEnd = .;
        _object_masterkokiriheadSegmentOvlStart = .;
            build/baserom/object_masterkokirihead.o (.ovl)
        . = ALIGN(0x10);
        _object_masterkokiriheadSegmentOvlEnd = .;
    }
    _RomSize += ( _object_masterkokiriheadSegmentOvlEnd - _object_masterkokiriheadSegmentTextStart );
    _object_masterkokiriheadSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_masterkokirihead.bss ADDR(..object_masterkokirihead) + SIZEOF(..object_masterkokirihead) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_masterkokiriheadSegmentBssStart = .;
            build/baserom/object_masterkokirihead.o (.sbss)
            build/baserom/object_masterkokirihead.o (.scommon)
            build/baserom/object_masterkokirihead.o (.bss)
            build/baserom/object_masterkokirihead.o (COMMON)
        . = ALIGN(0x10);
        _object_masterkokiriheadSegmentBssEnd = .;
        _object_masterkokiriheadSegmentEnd = .;
    }
    _object_masterkokiriheadSegmentBssSize = ABSOLUTE( _object_masterkokiriheadSegmentBssEnd - _object_masterkokiriheadSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mastergolonSegmentRomStart = _RomSize;
    ..object_mastergolon : AT(_RomSize)
    {
        _object_mastergolonSegmentStart = .;
        . = ALIGN(0x10);
        _object_mastergolonSegmentTextStart = .;
            build/baserom/object_mastergolon.o (.text)
        _object_mastergolonSegmentTextEnd = .;
    _object_mastergolonSegmentTextSize = ABSOLUTE( _object_mastergolonSegmentTextEnd - _object_mastergolonSegmentTextStart );
        _object_mastergolonSegmentDataStart = .;
            build/baserom/object_mastergolon.o (.data)
        _object_mastergolonSegmentDataEnd = .;
    _object_mastergolonSegmentDataSize = ABSOLUTE( _object_mastergolonSegmentDataEnd - _object_mastergolonSegmentDataStart );
        _object_mastergolonSegmentRoDataStart = .;
            build/baserom/object_mastergolon.o (.rodata)
        _object_mastergolonSegmentRoDataEnd = .;
    _object_mastergolonSegmentRoDataSize = ABSOLUTE( _object_mastergolonSegmentRoDataEnd - _object_mastergolonSegmentRoDataStart );
        _object_mastergolonSegmentSDataStart = .;
            build/baserom/object_mastergolon.o (.sdata)
        . = ALIGN(0x10);
        _object_mastergolonSegmentSDataEnd = .;
        _object_mastergolonSegmentOvlStart = .;
            build/baserom/object_mastergolon.o (.ovl)
        . = ALIGN(0x10);
        _object_mastergolonSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mastergolonSegmentOvlEnd - _object_mastergolonSegmentTextStart );
    _object_mastergolonSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mastergolon.bss ADDR(..object_mastergolon) + SIZEOF(..object_mastergolon) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mastergolonSegmentBssStart = .;
            build/baserom/object_mastergolon.o (.sbss)
            build/baserom/object_mastergolon.o (.scommon)
            build/baserom/object_mastergolon.o (.bss)
            build/baserom/object_mastergolon.o (COMMON)
        . = ALIGN(0x10);
        _object_mastergolonSegmentBssEnd = .;
        _object_mastergolonSegmentEnd = .;
    }
    _object_mastergolonSegmentBssSize = ABSOLUTE( _object_mastergolonSegmentBssEnd - _object_mastergolonSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_masterzooraSegmentRomStart = _RomSize;
    ..object_masterzoora : AT(_RomSize)
    {
        _object_masterzooraSegmentStart = .;
        . = ALIGN(0x10);
        _object_masterzooraSegmentTextStart = .;
            build/baserom/object_masterzoora.o (.text)
        _object_masterzooraSegmentTextEnd = .;
    _object_masterzooraSegmentTextSize = ABSOLUTE( _object_masterzooraSegmentTextEnd - _object_masterzooraSegmentTextStart );
        _object_masterzooraSegmentDataStart = .;
            build/baserom/object_masterzoora.o (.data)
        _object_masterzooraSegmentDataEnd = .;
    _object_masterzooraSegmentDataSize = ABSOLUTE( _object_masterzooraSegmentDataEnd - _object_masterzooraSegmentDataStart );
        _object_masterzooraSegmentRoDataStart = .;
            build/baserom/object_masterzoora.o (.rodata)
        _object_masterzooraSegmentRoDataEnd = .;
    _object_masterzooraSegmentRoDataSize = ABSOLUTE( _object_masterzooraSegmentRoDataEnd - _object_masterzooraSegmentRoDataStart );
        _object_masterzooraSegmentSDataStart = .;
            build/baserom/object_masterzoora.o (.sdata)
        . = ALIGN(0x10);
        _object_masterzooraSegmentSDataEnd = .;
        _object_masterzooraSegmentOvlStart = .;
            build/baserom/object_masterzoora.o (.ovl)
        . = ALIGN(0x10);
        _object_masterzooraSegmentOvlEnd = .;
    }
    _RomSize += ( _object_masterzooraSegmentOvlEnd - _object_masterzooraSegmentTextStart );
    _object_masterzooraSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_masterzoora.bss ADDR(..object_masterzoora) + SIZEOF(..object_masterzoora) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_masterzooraSegmentBssStart = .;
            build/baserom/object_masterzoora.o (.sbss)
            build/baserom/object_masterzoora.o (.scommon)
            build/baserom/object_masterzoora.o (.bss)
            build/baserom/object_masterzoora.o (COMMON)
        . = ALIGN(0x10);
        _object_masterzooraSegmentBssEnd = .;
        _object_masterzooraSegmentEnd = .;
    }
    _object_masterzooraSegmentBssSize = ABSOLUTE( _object_masterzooraSegmentBssEnd - _object_masterzooraSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_aobSegmentRomStart = _RomSize;
    ..object_aob : AT(_RomSize)
    {
        _object_aobSegmentStart = .;
        . = ALIGN(0x10);
        _object_aobSegmentTextStart = .;
            build/baserom/object_aob.o (.text)
        _object_aobSegmentTextEnd = .;
    _object_aobSegmentTextSize = ABSOLUTE( _object_aobSegmentTextEnd - _object_aobSegmentTextStart );
        _object_aobSegmentDataStart = .;
            build/baserom/object_aob.o (.data)
        _object_aobSegmentDataEnd = .;
    _object_aobSegmentDataSize = ABSOLUTE( _object_aobSegmentDataEnd - _object_aobSegmentDataStart );
        _object_aobSegmentRoDataStart = .;
            build/baserom/object_aob.o (.rodata)
        _object_aobSegmentRoDataEnd = .;
    _object_aobSegmentRoDataSize = ABSOLUTE( _object_aobSegmentRoDataEnd - _object_aobSegmentRoDataStart );
        _object_aobSegmentSDataStart = .;
            build/baserom/object_aob.o (.sdata)
        . = ALIGN(0x10);
        _object_aobSegmentSDataEnd = .;
        _object_aobSegmentOvlStart = .;
            build/baserom/object_aob.o (.ovl)
        . = ALIGN(0x10);
        _object_aobSegmentOvlEnd = .;
    }
    _RomSize += ( _object_aobSegmentOvlEnd - _object_aobSegmentTextStart );
    _object_aobSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_aob.bss ADDR(..object_aob) + SIZEOF(..object_aob) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_aobSegmentBssStart = .;
            build/baserom/object_aob.o (.sbss)
            build/baserom/object_aob.o (.scommon)
            build/baserom/object_aob.o (.bss)
            build/baserom/object_aob.o (COMMON)
        . = ALIGN(0x10);
        _object_aobSegmentBssEnd = .;
        _object_aobSegmentEnd = .;
    }
    _object_aobSegmentBssSize = ABSOLUTE( _object_aobSegmentBssEnd - _object_aobSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ikSegmentRomStart = _RomSize;
    ..object_ik : AT(_RomSize)
    {
        _object_ikSegmentStart = .;
        . = ALIGN(0x10);
        _object_ikSegmentTextStart = .;
            build/baserom/object_ik.o (.text)
        _object_ikSegmentTextEnd = .;
    _object_ikSegmentTextSize = ABSOLUTE( _object_ikSegmentTextEnd - _object_ikSegmentTextStart );
        _object_ikSegmentDataStart = .;
            build/baserom/object_ik.o (.data)
        _object_ikSegmentDataEnd = .;
    _object_ikSegmentDataSize = ABSOLUTE( _object_ikSegmentDataEnd - _object_ikSegmentDataStart );
        _object_ikSegmentRoDataStart = .;
            build/baserom/object_ik.o (.rodata)
        _object_ikSegmentRoDataEnd = .;
    _object_ikSegmentRoDataSize = ABSOLUTE( _object_ikSegmentRoDataEnd - _object_ikSegmentRoDataStart );
        _object_ikSegmentSDataStart = .;
            build/baserom/object_ik.o (.sdata)
        . = ALIGN(0x10);
        _object_ikSegmentSDataEnd = .;
        _object_ikSegmentOvlStart = .;
            build/baserom/object_ik.o (.ovl)
        . = ALIGN(0x10);
        _object_ikSegmentOvlEnd = .;
    }
    _RomSize += ( _object_ikSegmentOvlEnd - _object_ikSegmentTextStart );
    _object_ikSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ik.bss ADDR(..object_ik) + SIZEOF(..object_ik) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ikSegmentBssStart = .;
            build/baserom/object_ik.o (.sbss)
            build/baserom/object_ik.o (.scommon)
            build/baserom/object_ik.o (.bss)
            build/baserom/object_ik.o (COMMON)
        . = ALIGN(0x10);
        _object_ikSegmentBssEnd = .;
        _object_ikSegmentEnd = .;
    }
    _object_ikSegmentBssSize = ABSOLUTE( _object_ikSegmentBssEnd - _object_ikSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ahgSegmentRomStart = _RomSize;
    ..object_ahg : AT(_RomSize)
    {
        _object_ahgSegmentStart = .;
        . = ALIGN(0x10);
        _object_ahgSegmentTextStart = .;
            build/baserom/object_ahg.o (.text)
        _object_ahgSegmentTextEnd = .;
    _object_ahgSegmentTextSize = ABSOLUTE( _object_ahgSegmentTextEnd - _object_ahgSegmentTextStart );
        _object_ahgSegmentDataStart = .;
            build/baserom/object_ahg.o (.data)
        _object_ahgSegmentDataEnd = .;
    _object_ahgSegmentDataSize = ABSOLUTE( _object_ahgSegmentDataEnd - _object_ahgSegmentDataStart );
        _object_ahgSegmentRoDataStart = .;
            build/baserom/object_ahg.o (.rodata)
        _object_ahgSegmentRoDataEnd = .;
    _object_ahgSegmentRoDataSize = ABSOLUTE( _object_ahgSegmentRoDataEnd - _object_ahgSegmentRoDataStart );
        _object_ahgSegmentSDataStart = .;
            build/baserom/object_ahg.o (.sdata)
        . = ALIGN(0x10);
        _object_ahgSegmentSDataEnd = .;
        _object_ahgSegmentOvlStart = .;
            build/baserom/object_ahg.o (.ovl)
        . = ALIGN(0x10);
        _object_ahgSegmentOvlEnd = .;
    }
    _RomSize += ( _object_ahgSegmentOvlEnd - _object_ahgSegmentTextStart );
    _object_ahgSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ahg.bss ADDR(..object_ahg) + SIZEOF(..object_ahg) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ahgSegmentBssStart = .;
            build/baserom/object_ahg.o (.sbss)
            build/baserom/object_ahg.o (.scommon)
            build/baserom/object_ahg.o (.bss)
            build/baserom/object_ahg.o (COMMON)
        . = ALIGN(0x10);
        _object_ahgSegmentBssEnd = .;
        _object_ahgSegmentEnd = .;
    }
    _object_ahgSegmentBssSize = ABSOLUTE( _object_ahgSegmentBssEnd - _object_ahgSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_cneSegmentRomStart = _RomSize;
    ..object_cne : AT(_RomSize)
    {
        _object_cneSegmentStart = .;
        . = ALIGN(0x10);
        _object_cneSegmentTextStart = .;
            build/baserom/object_cne.o (.text)
        _object_cneSegmentTextEnd = .;
    _object_cneSegmentTextSize = ABSOLUTE( _object_cneSegmentTextEnd - _object_cneSegmentTextStart );
        _object_cneSegmentDataStart = .;
            build/baserom/object_cne.o (.data)
        _object_cneSegmentDataEnd = .;
    _object_cneSegmentDataSize = ABSOLUTE( _object_cneSegmentDataEnd - _object_cneSegmentDataStart );
        _object_cneSegmentRoDataStart = .;
            build/baserom/object_cne.o (.rodata)
        _object_cneSegmentRoDataEnd = .;
    _object_cneSegmentRoDataSize = ABSOLUTE( _object_cneSegmentRoDataEnd - _object_cneSegmentRoDataStart );
        _object_cneSegmentSDataStart = .;
            build/baserom/object_cne.o (.sdata)
        . = ALIGN(0x10);
        _object_cneSegmentSDataEnd = .;
        _object_cneSegmentOvlStart = .;
            build/baserom/object_cne.o (.ovl)
        . = ALIGN(0x10);
        _object_cneSegmentOvlEnd = .;
    }
    _RomSize += ( _object_cneSegmentOvlEnd - _object_cneSegmentTextStart );
    _object_cneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_cne.bss ADDR(..object_cne) + SIZEOF(..object_cne) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_cneSegmentBssStart = .;
            build/baserom/object_cne.o (.sbss)
            build/baserom/object_cne.o (.scommon)
            build/baserom/object_cne.o (.bss)
            build/baserom/object_cne.o (COMMON)
        . = ALIGN(0x10);
        _object_cneSegmentBssEnd = .;
        _object_cneSegmentEnd = .;
    }
    _object_cneSegmentBssSize = ABSOLUTE( _object_cneSegmentBssEnd - _object_cneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_niwatoriSegmentRomStart = _RomSize;
    ..object_gi_niwatori : AT(_RomSize)
    {
        _object_gi_niwatoriSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_niwatoriSegmentTextStart = .;
            build/baserom/object_gi_niwatori.o (.text)
        _object_gi_niwatoriSegmentTextEnd = .;
    _object_gi_niwatoriSegmentTextSize = ABSOLUTE( _object_gi_niwatoriSegmentTextEnd - _object_gi_niwatoriSegmentTextStart );
        _object_gi_niwatoriSegmentDataStart = .;
            build/baserom/object_gi_niwatori.o (.data)
        _object_gi_niwatoriSegmentDataEnd = .;
    _object_gi_niwatoriSegmentDataSize = ABSOLUTE( _object_gi_niwatoriSegmentDataEnd - _object_gi_niwatoriSegmentDataStart );
        _object_gi_niwatoriSegmentRoDataStart = .;
            build/baserom/object_gi_niwatori.o (.rodata)
        _object_gi_niwatoriSegmentRoDataEnd = .;
    _object_gi_niwatoriSegmentRoDataSize = ABSOLUTE( _object_gi_niwatoriSegmentRoDataEnd - _object_gi_niwatoriSegmentRoDataStart );
        _object_gi_niwatoriSegmentSDataStart = .;
            build/baserom/object_gi_niwatori.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_niwatoriSegmentSDataEnd = .;
        _object_gi_niwatoriSegmentOvlStart = .;
            build/baserom/object_gi_niwatori.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_niwatoriSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_niwatoriSegmentOvlEnd - _object_gi_niwatoriSegmentTextStart );
    _object_gi_niwatoriSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_niwatori.bss ADDR(..object_gi_niwatori) + SIZEOF(..object_gi_niwatori) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_niwatoriSegmentBssStart = .;
            build/baserom/object_gi_niwatori.o (.sbss)
            build/baserom/object_gi_niwatori.o (.scommon)
            build/baserom/object_gi_niwatori.o (.bss)
            build/baserom/object_gi_niwatori.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_niwatoriSegmentBssEnd = .;
        _object_gi_niwatoriSegmentEnd = .;
    }
    _object_gi_niwatoriSegmentBssSize = ABSOLUTE( _object_gi_niwatoriSegmentBssEnd - _object_gi_niwatoriSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_skjSegmentRomStart = _RomSize;
    ..object_skj : AT(_RomSize)
    {
        _object_skjSegmentStart = .;
        . = ALIGN(0x10);
        _object_skjSegmentTextStart = .;
            build/baserom/object_skj.o (.text)
        _object_skjSegmentTextEnd = .;
    _object_skjSegmentTextSize = ABSOLUTE( _object_skjSegmentTextEnd - _object_skjSegmentTextStart );
        _object_skjSegmentDataStart = .;
            build/baserom/object_skj.o (.data)
        _object_skjSegmentDataEnd = .;
    _object_skjSegmentDataSize = ABSOLUTE( _object_skjSegmentDataEnd - _object_skjSegmentDataStart );
        _object_skjSegmentRoDataStart = .;
            build/baserom/object_skj.o (.rodata)
        _object_skjSegmentRoDataEnd = .;
    _object_skjSegmentRoDataSize = ABSOLUTE( _object_skjSegmentRoDataEnd - _object_skjSegmentRoDataStart );
        _object_skjSegmentSDataStart = .;
            build/baserom/object_skj.o (.sdata)
        . = ALIGN(0x10);
        _object_skjSegmentSDataEnd = .;
        _object_skjSegmentOvlStart = .;
            build/baserom/object_skj.o (.ovl)
        . = ALIGN(0x10);
        _object_skjSegmentOvlEnd = .;
    }
    _RomSize += ( _object_skjSegmentOvlEnd - _object_skjSegmentTextStart );
    _object_skjSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_skj.bss ADDR(..object_skj) + SIZEOF(..object_skj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_skjSegmentBssStart = .;
            build/baserom/object_skj.o (.sbss)
            build/baserom/object_skj.o (.scommon)
            build/baserom/object_skj.o (.bss)
            build/baserom/object_skj.o (COMMON)
        . = ALIGN(0x10);
        _object_skjSegmentBssEnd = .;
        _object_skjSegmentEnd = .;
    }
    _object_skjSegmentBssSize = ABSOLUTE( _object_skjSegmentBssEnd - _object_skjSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_bottle_letterSegmentRomStart = _RomSize;
    ..object_gi_bottle_letter : AT(_RomSize)
    {
        _object_gi_bottle_letterSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_bottle_letterSegmentTextStart = .;
            build/baserom/object_gi_bottle_letter.o (.text)
        _object_gi_bottle_letterSegmentTextEnd = .;
    _object_gi_bottle_letterSegmentTextSize = ABSOLUTE( _object_gi_bottle_letterSegmentTextEnd - _object_gi_bottle_letterSegmentTextStart );
        _object_gi_bottle_letterSegmentDataStart = .;
            build/baserom/object_gi_bottle_letter.o (.data)
        _object_gi_bottle_letterSegmentDataEnd = .;
    _object_gi_bottle_letterSegmentDataSize = ABSOLUTE( _object_gi_bottle_letterSegmentDataEnd - _object_gi_bottle_letterSegmentDataStart );
        _object_gi_bottle_letterSegmentRoDataStart = .;
            build/baserom/object_gi_bottle_letter.o (.rodata)
        _object_gi_bottle_letterSegmentRoDataEnd = .;
    _object_gi_bottle_letterSegmentRoDataSize = ABSOLUTE( _object_gi_bottle_letterSegmentRoDataEnd - _object_gi_bottle_letterSegmentRoDataStart );
        _object_gi_bottle_letterSegmentSDataStart = .;
            build/baserom/object_gi_bottle_letter.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_bottle_letterSegmentSDataEnd = .;
        _object_gi_bottle_letterSegmentOvlStart = .;
            build/baserom/object_gi_bottle_letter.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_bottle_letterSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_bottle_letterSegmentOvlEnd - _object_gi_bottle_letterSegmentTextStart );
    _object_gi_bottle_letterSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_bottle_letter.bss ADDR(..object_gi_bottle_letter) + SIZEOF(..object_gi_bottle_letter) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_bottle_letterSegmentBssStart = .;
            build/baserom/object_gi_bottle_letter.o (.sbss)
            build/baserom/object_gi_bottle_letter.o (.scommon)
            build/baserom/object_gi_bottle_letter.o (.bss)
            build/baserom/object_gi_bottle_letter.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_bottle_letterSegmentBssEnd = .;
        _object_gi_bottle_letterSegmentEnd = .;
    }
    _object_gi_bottle_letterSegmentBssSize = ABSOLUTE( _object_gi_bottle_letterSegmentBssEnd - _object_gi_bottle_letterSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bjiSegmentRomStart = _RomSize;
    ..object_bji : AT(_RomSize)
    {
        _object_bjiSegmentStart = .;
        . = ALIGN(0x10);
        _object_bjiSegmentTextStart = .;
            build/baserom/object_bji.o (.text)
        _object_bjiSegmentTextEnd = .;
    _object_bjiSegmentTextSize = ABSOLUTE( _object_bjiSegmentTextEnd - _object_bjiSegmentTextStart );
        _object_bjiSegmentDataStart = .;
            build/baserom/object_bji.o (.data)
        _object_bjiSegmentDataEnd = .;
    _object_bjiSegmentDataSize = ABSOLUTE( _object_bjiSegmentDataEnd - _object_bjiSegmentDataStart );
        _object_bjiSegmentRoDataStart = .;
            build/baserom/object_bji.o (.rodata)
        _object_bjiSegmentRoDataEnd = .;
    _object_bjiSegmentRoDataSize = ABSOLUTE( _object_bjiSegmentRoDataEnd - _object_bjiSegmentRoDataStart );
        _object_bjiSegmentSDataStart = .;
            build/baserom/object_bji.o (.sdata)
        . = ALIGN(0x10);
        _object_bjiSegmentSDataEnd = .;
        _object_bjiSegmentOvlStart = .;
            build/baserom/object_bji.o (.ovl)
        . = ALIGN(0x10);
        _object_bjiSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bjiSegmentOvlEnd - _object_bjiSegmentTextStart );
    _object_bjiSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bji.bss ADDR(..object_bji) + SIZEOF(..object_bji) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bjiSegmentBssStart = .;
            build/baserom/object_bji.o (.sbss)
            build/baserom/object_bji.o (.scommon)
            build/baserom/object_bji.o (.bss)
            build/baserom/object_bji.o (COMMON)
        . = ALIGN(0x10);
        _object_bjiSegmentBssEnd = .;
        _object_bjiSegmentEnd = .;
    }
    _object_bjiSegmentBssSize = ABSOLUTE( _object_bjiSegmentBssEnd - _object_bjiSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bbaSegmentRomStart = _RomSize;
    ..object_bba : AT(_RomSize)
    {
        _object_bbaSegmentStart = .;
        . = ALIGN(0x10);
        _object_bbaSegmentTextStart = .;
            build/baserom/object_bba.o (.text)
        _object_bbaSegmentTextEnd = .;
    _object_bbaSegmentTextSize = ABSOLUTE( _object_bbaSegmentTextEnd - _object_bbaSegmentTextStart );
        _object_bbaSegmentDataStart = .;
            build/baserom/object_bba.o (.data)
        _object_bbaSegmentDataEnd = .;
    _object_bbaSegmentDataSize = ABSOLUTE( _object_bbaSegmentDataEnd - _object_bbaSegmentDataStart );
        _object_bbaSegmentRoDataStart = .;
            build/baserom/object_bba.o (.rodata)
        _object_bbaSegmentRoDataEnd = .;
    _object_bbaSegmentRoDataSize = ABSOLUTE( _object_bbaSegmentRoDataEnd - _object_bbaSegmentRoDataStart );
        _object_bbaSegmentSDataStart = .;
            build/baserom/object_bba.o (.sdata)
        . = ALIGN(0x10);
        _object_bbaSegmentSDataEnd = .;
        _object_bbaSegmentOvlStart = .;
            build/baserom/object_bba.o (.ovl)
        . = ALIGN(0x10);
        _object_bbaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bbaSegmentOvlEnd - _object_bbaSegmentTextStart );
    _object_bbaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bba.bss ADDR(..object_bba) + SIZEOF(..object_bba) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bbaSegmentBssStart = .;
            build/baserom/object_bba.o (.sbss)
            build/baserom/object_bba.o (.scommon)
            build/baserom/object_bba.o (.bss)
            build/baserom/object_bba.o (COMMON)
        . = ALIGN(0x10);
        _object_bbaSegmentBssEnd = .;
        _object_bbaSegmentEnd = .;
    }
    _object_bbaSegmentBssSize = ABSOLUTE( _object_bbaSegmentBssEnd - _object_bbaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_ocarina_0SegmentRomStart = _RomSize;
    ..object_gi_ocarina_0 : AT(_RomSize)
    {
        _object_gi_ocarina_0SegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_ocarina_0SegmentTextStart = .;
            build/baserom/object_gi_ocarina_0.o (.text)
        _object_gi_ocarina_0SegmentTextEnd = .;
    _object_gi_ocarina_0SegmentTextSize = ABSOLUTE( _object_gi_ocarina_0SegmentTextEnd - _object_gi_ocarina_0SegmentTextStart );
        _object_gi_ocarina_0SegmentDataStart = .;
            build/baserom/object_gi_ocarina_0.o (.data)
        _object_gi_ocarina_0SegmentDataEnd = .;
    _object_gi_ocarina_0SegmentDataSize = ABSOLUTE( _object_gi_ocarina_0SegmentDataEnd - _object_gi_ocarina_0SegmentDataStart );
        _object_gi_ocarina_0SegmentRoDataStart = .;
            build/baserom/object_gi_ocarina_0.o (.rodata)
        _object_gi_ocarina_0SegmentRoDataEnd = .;
    _object_gi_ocarina_0SegmentRoDataSize = ABSOLUTE( _object_gi_ocarina_0SegmentRoDataEnd - _object_gi_ocarina_0SegmentRoDataStart );
        _object_gi_ocarina_0SegmentSDataStart = .;
            build/baserom/object_gi_ocarina_0.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_ocarina_0SegmentSDataEnd = .;
        _object_gi_ocarina_0SegmentOvlStart = .;
            build/baserom/object_gi_ocarina_0.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_ocarina_0SegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_ocarina_0SegmentOvlEnd - _object_gi_ocarina_0SegmentTextStart );
    _object_gi_ocarina_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_ocarina_0.bss ADDR(..object_gi_ocarina_0) + SIZEOF(..object_gi_ocarina_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_ocarina_0SegmentBssStart = .;
            build/baserom/object_gi_ocarina_0.o (.sbss)
            build/baserom/object_gi_ocarina_0.o (.scommon)
            build/baserom/object_gi_ocarina_0.o (.bss)
            build/baserom/object_gi_ocarina_0.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_ocarina_0SegmentBssEnd = .;
        _object_gi_ocarina_0SegmentEnd = .;
    }
    _object_gi_ocarina_0SegmentBssSize = ABSOLUTE( _object_gi_ocarina_0SegmentBssEnd - _object_gi_ocarina_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_dsSegmentRomStart = _RomSize;
    ..object_ds : AT(_RomSize)
    {
        _object_dsSegmentStart = .;
        . = ALIGN(0x10);
        _object_dsSegmentTextStart = .;
            build/baserom/object_ds.o (.text)
        _object_dsSegmentTextEnd = .;
    _object_dsSegmentTextSize = ABSOLUTE( _object_dsSegmentTextEnd - _object_dsSegmentTextStart );
        _object_dsSegmentDataStart = .;
            build/baserom/object_ds.o (.data)
        _object_dsSegmentDataEnd = .;
    _object_dsSegmentDataSize = ABSOLUTE( _object_dsSegmentDataEnd - _object_dsSegmentDataStart );
        _object_dsSegmentRoDataStart = .;
            build/baserom/object_ds.o (.rodata)
        _object_dsSegmentRoDataEnd = .;
    _object_dsSegmentRoDataSize = ABSOLUTE( _object_dsSegmentRoDataEnd - _object_dsSegmentRoDataStart );
        _object_dsSegmentSDataStart = .;
            build/baserom/object_ds.o (.sdata)
        . = ALIGN(0x10);
        _object_dsSegmentSDataEnd = .;
        _object_dsSegmentOvlStart = .;
            build/baserom/object_ds.o (.ovl)
        . = ALIGN(0x10);
        _object_dsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_dsSegmentOvlEnd - _object_dsSegmentTextStart );
    _object_dsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ds.bss ADDR(..object_ds) + SIZEOF(..object_ds) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_dsSegmentBssStart = .;
            build/baserom/object_ds.o (.sbss)
            build/baserom/object_ds.o (.scommon)
            build/baserom/object_ds.o (.bss)
            build/baserom/object_ds.o (COMMON)
        . = ALIGN(0x10);
        _object_dsSegmentBssEnd = .;
        _object_dsSegmentEnd = .;
    }
    _object_dsSegmentBssSize = ABSOLUTE( _object_dsSegmentBssEnd - _object_dsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_aneSegmentRomStart = _RomSize;
    ..object_ane : AT(_RomSize)
    {
        _object_aneSegmentStart = .;
        . = ALIGN(0x10);
        _object_aneSegmentTextStart = .;
            build/baserom/object_ane.o (.text)
        _object_aneSegmentTextEnd = .;
    _object_aneSegmentTextSize = ABSOLUTE( _object_aneSegmentTextEnd - _object_aneSegmentTextStart );
        _object_aneSegmentDataStart = .;
            build/baserom/object_ane.o (.data)
        _object_aneSegmentDataEnd = .;
    _object_aneSegmentDataSize = ABSOLUTE( _object_aneSegmentDataEnd - _object_aneSegmentDataStart );
        _object_aneSegmentRoDataStart = .;
            build/baserom/object_ane.o (.rodata)
        _object_aneSegmentRoDataEnd = .;
    _object_aneSegmentRoDataSize = ABSOLUTE( _object_aneSegmentRoDataEnd - _object_aneSegmentRoDataStart );
        _object_aneSegmentSDataStart = .;
            build/baserom/object_ane.o (.sdata)
        . = ALIGN(0x10);
        _object_aneSegmentSDataEnd = .;
        _object_aneSegmentOvlStart = .;
            build/baserom/object_ane.o (.ovl)
        . = ALIGN(0x10);
        _object_aneSegmentOvlEnd = .;
    }
    _RomSize += ( _object_aneSegmentOvlEnd - _object_aneSegmentTextStart );
    _object_aneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ane.bss ADDR(..object_ane) + SIZEOF(..object_ane) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_aneSegmentBssStart = .;
            build/baserom/object_ane.o (.sbss)
            build/baserom/object_ane.o (.scommon)
            build/baserom/object_ane.o (.bss)
            build/baserom/object_ane.o (COMMON)
        . = ALIGN(0x10);
        _object_aneSegmentBssEnd = .;
        _object_aneSegmentEnd = .;
    }
    _object_aneSegmentBssSize = ABSOLUTE( _object_aneSegmentBssEnd - _object_aneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bojSegmentRomStart = _RomSize;
    ..object_boj : AT(_RomSize)
    {
        _object_bojSegmentStart = .;
        . = ALIGN(0x10);
        _object_bojSegmentTextStart = .;
            build/baserom/object_boj.o (.text)
        _object_bojSegmentTextEnd = .;
    _object_bojSegmentTextSize = ABSOLUTE( _object_bojSegmentTextEnd - _object_bojSegmentTextStart );
        _object_bojSegmentDataStart = .;
            build/baserom/object_boj.o (.data)
        _object_bojSegmentDataEnd = .;
    _object_bojSegmentDataSize = ABSOLUTE( _object_bojSegmentDataEnd - _object_bojSegmentDataStart );
        _object_bojSegmentRoDataStart = .;
            build/baserom/object_boj.o (.rodata)
        _object_bojSegmentRoDataEnd = .;
    _object_bojSegmentRoDataSize = ABSOLUTE( _object_bojSegmentRoDataEnd - _object_bojSegmentRoDataStart );
        _object_bojSegmentSDataStart = .;
            build/baserom/object_boj.o (.sdata)
        . = ALIGN(0x10);
        _object_bojSegmentSDataEnd = .;
        _object_bojSegmentOvlStart = .;
            build/baserom/object_boj.o (.ovl)
        . = ALIGN(0x10);
        _object_bojSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bojSegmentOvlEnd - _object_bojSegmentTextStart );
    _object_bojSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_boj.bss ADDR(..object_boj) + SIZEOF(..object_boj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bojSegmentBssStart = .;
            build/baserom/object_boj.o (.sbss)
            build/baserom/object_boj.o (.scommon)
            build/baserom/object_boj.o (.bss)
            build/baserom/object_boj.o (COMMON)
        . = ALIGN(0x10);
        _object_bojSegmentBssEnd = .;
        _object_bojSegmentEnd = .;
    }
    _object_bojSegmentBssSize = ABSOLUTE( _object_bojSegmentBssEnd - _object_bojSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot03_objectSegmentRomStart = _RomSize;
    ..object_spot03_object : AT(_RomSize)
    {
        _object_spot03_objectSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot03_objectSegmentTextStart = .;
            build/baserom/object_spot03_object.o (.text)
        _object_spot03_objectSegmentTextEnd = .;
    _object_spot03_objectSegmentTextSize = ABSOLUTE( _object_spot03_objectSegmentTextEnd - _object_spot03_objectSegmentTextStart );
        _object_spot03_objectSegmentDataStart = .;
            build/baserom/object_spot03_object.o (.data)
        _object_spot03_objectSegmentDataEnd = .;
    _object_spot03_objectSegmentDataSize = ABSOLUTE( _object_spot03_objectSegmentDataEnd - _object_spot03_objectSegmentDataStart );
        _object_spot03_objectSegmentRoDataStart = .;
            build/baserom/object_spot03_object.o (.rodata)
        _object_spot03_objectSegmentRoDataEnd = .;
    _object_spot03_objectSegmentRoDataSize = ABSOLUTE( _object_spot03_objectSegmentRoDataEnd - _object_spot03_objectSegmentRoDataStart );
        _object_spot03_objectSegmentSDataStart = .;
            build/baserom/object_spot03_object.o (.sdata)
        . = ALIGN(0x10);
        _object_spot03_objectSegmentSDataEnd = .;
        _object_spot03_objectSegmentOvlStart = .;
            build/baserom/object_spot03_object.o (.ovl)
        . = ALIGN(0x10);
        _object_spot03_objectSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot03_objectSegmentOvlEnd - _object_spot03_objectSegmentTextStart );
    _object_spot03_objectSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot03_object.bss ADDR(..object_spot03_object) + SIZEOF(..object_spot03_object) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot03_objectSegmentBssStart = .;
            build/baserom/object_spot03_object.o (.sbss)
            build/baserom/object_spot03_object.o (.scommon)
            build/baserom/object_spot03_object.o (.bss)
            build/baserom/object_spot03_object.o (COMMON)
        . = ALIGN(0x10);
        _object_spot03_objectSegmentBssEnd = .;
        _object_spot03_objectSegmentEnd = .;
    }
    _object_spot03_objectSegmentBssSize = ABSOLUTE( _object_spot03_objectSegmentBssEnd - _object_spot03_objectSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot07_objectSegmentRomStart = _RomSize;
    ..object_spot07_object : AT(_RomSize)
    {
        _object_spot07_objectSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot07_objectSegmentTextStart = .;
            build/baserom/object_spot07_object.o (.text)
        _object_spot07_objectSegmentTextEnd = .;
    _object_spot07_objectSegmentTextSize = ABSOLUTE( _object_spot07_objectSegmentTextEnd - _object_spot07_objectSegmentTextStart );
        _object_spot07_objectSegmentDataStart = .;
            build/baserom/object_spot07_object.o (.data)
        _object_spot07_objectSegmentDataEnd = .;
    _object_spot07_objectSegmentDataSize = ABSOLUTE( _object_spot07_objectSegmentDataEnd - _object_spot07_objectSegmentDataStart );
        _object_spot07_objectSegmentRoDataStart = .;
            build/baserom/object_spot07_object.o (.rodata)
        _object_spot07_objectSegmentRoDataEnd = .;
    _object_spot07_objectSegmentRoDataSize = ABSOLUTE( _object_spot07_objectSegmentRoDataEnd - _object_spot07_objectSegmentRoDataStart );
        _object_spot07_objectSegmentSDataStart = .;
            build/baserom/object_spot07_object.o (.sdata)
        . = ALIGN(0x10);
        _object_spot07_objectSegmentSDataEnd = .;
        _object_spot07_objectSegmentOvlStart = .;
            build/baserom/object_spot07_object.o (.ovl)
        . = ALIGN(0x10);
        _object_spot07_objectSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot07_objectSegmentOvlEnd - _object_spot07_objectSegmentTextStart );
    _object_spot07_objectSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot07_object.bss ADDR(..object_spot07_object) + SIZEOF(..object_spot07_object) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot07_objectSegmentBssStart = .;
            build/baserom/object_spot07_object.o (.sbss)
            build/baserom/object_spot07_object.o (.scommon)
            build/baserom/object_spot07_object.o (.bss)
            build/baserom/object_spot07_object.o (COMMON)
        . = ALIGN(0x10);
        _object_spot07_objectSegmentBssEnd = .;
        _object_spot07_objectSegmentEnd = .;
    }
    _object_spot07_objectSegmentBssSize = ABSOLUTE( _object_spot07_objectSegmentBssEnd - _object_spot07_objectSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_fzSegmentRomStart = _RomSize;
    ..object_fz : AT(_RomSize)
    {
        _object_fzSegmentStart = .;
        . = ALIGN(0x10);
        _object_fzSegmentTextStart = .;
            build/baserom/object_fz.o (.text)
        _object_fzSegmentTextEnd = .;
    _object_fzSegmentTextSize = ABSOLUTE( _object_fzSegmentTextEnd - _object_fzSegmentTextStart );
        _object_fzSegmentDataStart = .;
            build/baserom/object_fz.o (.data)
        _object_fzSegmentDataEnd = .;
    _object_fzSegmentDataSize = ABSOLUTE( _object_fzSegmentDataEnd - _object_fzSegmentDataStart );
        _object_fzSegmentRoDataStart = .;
            build/baserom/object_fz.o (.rodata)
        _object_fzSegmentRoDataEnd = .;
    _object_fzSegmentRoDataSize = ABSOLUTE( _object_fzSegmentRoDataEnd - _object_fzSegmentRoDataStart );
        _object_fzSegmentSDataStart = .;
            build/baserom/object_fz.o (.sdata)
        . = ALIGN(0x10);
        _object_fzSegmentSDataEnd = .;
        _object_fzSegmentOvlStart = .;
            build/baserom/object_fz.o (.ovl)
        . = ALIGN(0x10);
        _object_fzSegmentOvlEnd = .;
    }
    _RomSize += ( _object_fzSegmentOvlEnd - _object_fzSegmentTextStart );
    _object_fzSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_fz.bss ADDR(..object_fz) + SIZEOF(..object_fz) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_fzSegmentBssStart = .;
            build/baserom/object_fz.o (.sbss)
            build/baserom/object_fz.o (.scommon)
            build/baserom/object_fz.o (.bss)
            build/baserom/object_fz.o (COMMON)
        . = ALIGN(0x10);
        _object_fzSegmentBssEnd = .;
        _object_fzSegmentEnd = .;
    }
    _object_fzSegmentBssSize = ABSOLUTE( _object_fzSegmentBssEnd - _object_fzSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bobSegmentRomStart = _RomSize;
    ..object_bob : AT(_RomSize)
    {
        _object_bobSegmentStart = .;
        . = ALIGN(0x10);
        _object_bobSegmentTextStart = .;
            build/baserom/object_bob.o (.text)
        _object_bobSegmentTextEnd = .;
    _object_bobSegmentTextSize = ABSOLUTE( _object_bobSegmentTextEnd - _object_bobSegmentTextStart );
        _object_bobSegmentDataStart = .;
            build/baserom/object_bob.o (.data)
        _object_bobSegmentDataEnd = .;
    _object_bobSegmentDataSize = ABSOLUTE( _object_bobSegmentDataEnd - _object_bobSegmentDataStart );
        _object_bobSegmentRoDataStart = .;
            build/baserom/object_bob.o (.rodata)
        _object_bobSegmentRoDataEnd = .;
    _object_bobSegmentRoDataSize = ABSOLUTE( _object_bobSegmentRoDataEnd - _object_bobSegmentRoDataStart );
        _object_bobSegmentSDataStart = .;
            build/baserom/object_bob.o (.sdata)
        . = ALIGN(0x10);
        _object_bobSegmentSDataEnd = .;
        _object_bobSegmentOvlStart = .;
            build/baserom/object_bob.o (.ovl)
        . = ALIGN(0x10);
        _object_bobSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bobSegmentOvlEnd - _object_bobSegmentTextStart );
    _object_bobSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bob.bss ADDR(..object_bob) + SIZEOF(..object_bob) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bobSegmentBssStart = .;
            build/baserom/object_bob.o (.sbss)
            build/baserom/object_bob.o (.scommon)
            build/baserom/object_bob.o (.bss)
            build/baserom/object_bob.o (COMMON)
        . = ALIGN(0x10);
        _object_bobSegmentBssEnd = .;
        _object_bobSegmentEnd = .;
    }
    _object_bobSegmentBssSize = ABSOLUTE( _object_bobSegmentBssEnd - _object_bobSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ge1SegmentRomStart = _RomSize;
    ..object_ge1 : AT(_RomSize)
    {
        _object_ge1SegmentStart = .;
        . = ALIGN(0x10);
        _object_ge1SegmentTextStart = .;
            build/baserom/object_ge1.o (.text)
        _object_ge1SegmentTextEnd = .;
    _object_ge1SegmentTextSize = ABSOLUTE( _object_ge1SegmentTextEnd - _object_ge1SegmentTextStart );
        _object_ge1SegmentDataStart = .;
            build/baserom/object_ge1.o (.data)
        _object_ge1SegmentDataEnd = .;
    _object_ge1SegmentDataSize = ABSOLUTE( _object_ge1SegmentDataEnd - _object_ge1SegmentDataStart );
        _object_ge1SegmentRoDataStart = .;
            build/baserom/object_ge1.o (.rodata)
        _object_ge1SegmentRoDataEnd = .;
    _object_ge1SegmentRoDataSize = ABSOLUTE( _object_ge1SegmentRoDataEnd - _object_ge1SegmentRoDataStart );
        _object_ge1SegmentSDataStart = .;
            build/baserom/object_ge1.o (.sdata)
        . = ALIGN(0x10);
        _object_ge1SegmentSDataEnd = .;
        _object_ge1SegmentOvlStart = .;
            build/baserom/object_ge1.o (.ovl)
        . = ALIGN(0x10);
        _object_ge1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_ge1SegmentOvlEnd - _object_ge1SegmentTextStart );
    _object_ge1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ge1.bss ADDR(..object_ge1) + SIZEOF(..object_ge1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ge1SegmentBssStart = .;
            build/baserom/object_ge1.o (.sbss)
            build/baserom/object_ge1.o (.scommon)
            build/baserom/object_ge1.o (.bss)
            build/baserom/object_ge1.o (COMMON)
        . = ALIGN(0x10);
        _object_ge1SegmentBssEnd = .;
        _object_ge1SegmentEnd = .;
    }
    _object_ge1SegmentBssSize = ABSOLUTE( _object_ge1SegmentBssEnd - _object_ge1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_yabusame_pointSegmentRomStart = _RomSize;
    ..object_yabusame_point : AT(_RomSize)
    {
        _object_yabusame_pointSegmentStart = .;
        . = ALIGN(0x10);
        _object_yabusame_pointSegmentTextStart = .;
            build/baserom/object_yabusame_point.o (.text)
        _object_yabusame_pointSegmentTextEnd = .;
    _object_yabusame_pointSegmentTextSize = ABSOLUTE( _object_yabusame_pointSegmentTextEnd - _object_yabusame_pointSegmentTextStart );
        _object_yabusame_pointSegmentDataStart = .;
            build/baserom/object_yabusame_point.o (.data)
        _object_yabusame_pointSegmentDataEnd = .;
    _object_yabusame_pointSegmentDataSize = ABSOLUTE( _object_yabusame_pointSegmentDataEnd - _object_yabusame_pointSegmentDataStart );
        _object_yabusame_pointSegmentRoDataStart = .;
            build/baserom/object_yabusame_point.o (.rodata)
        _object_yabusame_pointSegmentRoDataEnd = .;
    _object_yabusame_pointSegmentRoDataSize = ABSOLUTE( _object_yabusame_pointSegmentRoDataEnd - _object_yabusame_pointSegmentRoDataStart );
        _object_yabusame_pointSegmentSDataStart = .;
            build/baserom/object_yabusame_point.o (.sdata)
        . = ALIGN(0x10);
        _object_yabusame_pointSegmentSDataEnd = .;
        _object_yabusame_pointSegmentOvlStart = .;
            build/baserom/object_yabusame_point.o (.ovl)
        . = ALIGN(0x10);
        _object_yabusame_pointSegmentOvlEnd = .;
    }
    _RomSize += ( _object_yabusame_pointSegmentOvlEnd - _object_yabusame_pointSegmentTextStart );
    _object_yabusame_pointSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_yabusame_point.bss ADDR(..object_yabusame_point) + SIZEOF(..object_yabusame_point) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_yabusame_pointSegmentBssStart = .;
            build/baserom/object_yabusame_point.o (.sbss)
            build/baserom/object_yabusame_point.o (.scommon)
            build/baserom/object_yabusame_point.o (.bss)
            build/baserom/object_yabusame_point.o (COMMON)
        . = ALIGN(0x10);
        _object_yabusame_pointSegmentBssEnd = .;
        _object_yabusame_pointSegmentEnd = .;
    }
    _object_yabusame_pointSegmentBssSize = ABSOLUTE( _object_yabusame_pointSegmentBssEnd - _object_yabusame_pointSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_boots_2SegmentRomStart = _RomSize;
    ..object_gi_boots_2 : AT(_RomSize)
    {
        _object_gi_boots_2SegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_boots_2SegmentTextStart = .;
            build/baserom/object_gi_boots_2.o (.text)
        _object_gi_boots_2SegmentTextEnd = .;
    _object_gi_boots_2SegmentTextSize = ABSOLUTE( _object_gi_boots_2SegmentTextEnd - _object_gi_boots_2SegmentTextStart );
        _object_gi_boots_2SegmentDataStart = .;
            build/baserom/object_gi_boots_2.o (.data)
        _object_gi_boots_2SegmentDataEnd = .;
    _object_gi_boots_2SegmentDataSize = ABSOLUTE( _object_gi_boots_2SegmentDataEnd - _object_gi_boots_2SegmentDataStart );
        _object_gi_boots_2SegmentRoDataStart = .;
            build/baserom/object_gi_boots_2.o (.rodata)
        _object_gi_boots_2SegmentRoDataEnd = .;
    _object_gi_boots_2SegmentRoDataSize = ABSOLUTE( _object_gi_boots_2SegmentRoDataEnd - _object_gi_boots_2SegmentRoDataStart );
        _object_gi_boots_2SegmentSDataStart = .;
            build/baserom/object_gi_boots_2.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_boots_2SegmentSDataEnd = .;
        _object_gi_boots_2SegmentOvlStart = .;
            build/baserom/object_gi_boots_2.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_boots_2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_boots_2SegmentOvlEnd - _object_gi_boots_2SegmentTextStart );
    _object_gi_boots_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_boots_2.bss ADDR(..object_gi_boots_2) + SIZEOF(..object_gi_boots_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_boots_2SegmentBssStart = .;
            build/baserom/object_gi_boots_2.o (.sbss)
            build/baserom/object_gi_boots_2.o (.scommon)
            build/baserom/object_gi_boots_2.o (.bss)
            build/baserom/object_gi_boots_2.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_boots_2SegmentBssEnd = .;
        _object_gi_boots_2SegmentEnd = .;
    }
    _object_gi_boots_2SegmentBssSize = ABSOLUTE( _object_gi_boots_2SegmentBssEnd - _object_gi_boots_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_seedSegmentRomStart = _RomSize;
    ..object_gi_seed : AT(_RomSize)
    {
        _object_gi_seedSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_seedSegmentTextStart = .;
            build/baserom/object_gi_seed.o (.text)
        _object_gi_seedSegmentTextEnd = .;
    _object_gi_seedSegmentTextSize = ABSOLUTE( _object_gi_seedSegmentTextEnd - _object_gi_seedSegmentTextStart );
        _object_gi_seedSegmentDataStart = .;
            build/baserom/object_gi_seed.o (.data)
        _object_gi_seedSegmentDataEnd = .;
    _object_gi_seedSegmentDataSize = ABSOLUTE( _object_gi_seedSegmentDataEnd - _object_gi_seedSegmentDataStart );
        _object_gi_seedSegmentRoDataStart = .;
            build/baserom/object_gi_seed.o (.rodata)
        _object_gi_seedSegmentRoDataEnd = .;
    _object_gi_seedSegmentRoDataSize = ABSOLUTE( _object_gi_seedSegmentRoDataEnd - _object_gi_seedSegmentRoDataStart );
        _object_gi_seedSegmentSDataStart = .;
            build/baserom/object_gi_seed.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_seedSegmentSDataEnd = .;
        _object_gi_seedSegmentOvlStart = .;
            build/baserom/object_gi_seed.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_seedSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_seedSegmentOvlEnd - _object_gi_seedSegmentTextStart );
    _object_gi_seedSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_seed.bss ADDR(..object_gi_seed) + SIZEOF(..object_gi_seed) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_seedSegmentBssStart = .;
            build/baserom/object_gi_seed.o (.sbss)
            build/baserom/object_gi_seed.o (.scommon)
            build/baserom/object_gi_seed.o (.bss)
            build/baserom/object_gi_seed.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_seedSegmentBssEnd = .;
        _object_gi_seedSegmentEnd = .;
    }
    _object_gi_seedSegmentBssSize = ABSOLUTE( _object_gi_seedSegmentBssEnd - _object_gi_seedSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gnd_magicSegmentRomStart = _RomSize;
    ..object_gnd_magic : AT(_RomSize)
    {
        _object_gnd_magicSegmentStart = .;
        . = ALIGN(0x10);
        _object_gnd_magicSegmentTextStart = .;
            build/baserom/object_gnd_magic.o (.text)
        _object_gnd_magicSegmentTextEnd = .;
    _object_gnd_magicSegmentTextSize = ABSOLUTE( _object_gnd_magicSegmentTextEnd - _object_gnd_magicSegmentTextStart );
        _object_gnd_magicSegmentDataStart = .;
            build/baserom/object_gnd_magic.o (.data)
        _object_gnd_magicSegmentDataEnd = .;
    _object_gnd_magicSegmentDataSize = ABSOLUTE( _object_gnd_magicSegmentDataEnd - _object_gnd_magicSegmentDataStart );
        _object_gnd_magicSegmentRoDataStart = .;
            build/baserom/object_gnd_magic.o (.rodata)
        _object_gnd_magicSegmentRoDataEnd = .;
    _object_gnd_magicSegmentRoDataSize = ABSOLUTE( _object_gnd_magicSegmentRoDataEnd - _object_gnd_magicSegmentRoDataStart );
        _object_gnd_magicSegmentSDataStart = .;
            build/baserom/object_gnd_magic.o (.sdata)
        . = ALIGN(0x10);
        _object_gnd_magicSegmentSDataEnd = .;
        _object_gnd_magicSegmentOvlStart = .;
            build/baserom/object_gnd_magic.o (.ovl)
        . = ALIGN(0x10);
        _object_gnd_magicSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gnd_magicSegmentOvlEnd - _object_gnd_magicSegmentTextStart );
    _object_gnd_magicSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gnd_magic.bss ADDR(..object_gnd_magic) + SIZEOF(..object_gnd_magic) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gnd_magicSegmentBssStart = .;
            build/baserom/object_gnd_magic.o (.sbss)
            build/baserom/object_gnd_magic.o (.scommon)
            build/baserom/object_gnd_magic.o (.bss)
            build/baserom/object_gnd_magic.o (COMMON)
        . = ALIGN(0x10);
        _object_gnd_magicSegmentBssEnd = .;
        _object_gnd_magicSegmentEnd = .;
    }
    _object_gnd_magicSegmentBssSize = ABSOLUTE( _object_gnd_magicSegmentBssEnd - _object_gnd_magicSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_d_elevatorSegmentRomStart = _RomSize;
    ..object_d_elevator : AT(_RomSize)
    {
        _object_d_elevatorSegmentStart = .;
        . = ALIGN(0x10);
        _object_d_elevatorSegmentTextStart = .;
            build/baserom/object_d_elevator.o (.text)
        _object_d_elevatorSegmentTextEnd = .;
    _object_d_elevatorSegmentTextSize = ABSOLUTE( _object_d_elevatorSegmentTextEnd - _object_d_elevatorSegmentTextStart );
        _object_d_elevatorSegmentDataStart = .;
            build/baserom/object_d_elevator.o (.data)
        _object_d_elevatorSegmentDataEnd = .;
    _object_d_elevatorSegmentDataSize = ABSOLUTE( _object_d_elevatorSegmentDataEnd - _object_d_elevatorSegmentDataStart );
        _object_d_elevatorSegmentRoDataStart = .;
            build/baserom/object_d_elevator.o (.rodata)
        _object_d_elevatorSegmentRoDataEnd = .;
    _object_d_elevatorSegmentRoDataSize = ABSOLUTE( _object_d_elevatorSegmentRoDataEnd - _object_d_elevatorSegmentRoDataStart );
        _object_d_elevatorSegmentSDataStart = .;
            build/baserom/object_d_elevator.o (.sdata)
        . = ALIGN(0x10);
        _object_d_elevatorSegmentSDataEnd = .;
        _object_d_elevatorSegmentOvlStart = .;
            build/baserom/object_d_elevator.o (.ovl)
        . = ALIGN(0x10);
        _object_d_elevatorSegmentOvlEnd = .;
    }
    _RomSize += ( _object_d_elevatorSegmentOvlEnd - _object_d_elevatorSegmentTextStart );
    _object_d_elevatorSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_d_elevator.bss ADDR(..object_d_elevator) + SIZEOF(..object_d_elevator) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_d_elevatorSegmentBssStart = .;
            build/baserom/object_d_elevator.o (.sbss)
            build/baserom/object_d_elevator.o (.scommon)
            build/baserom/object_d_elevator.o (.bss)
            build/baserom/object_d_elevator.o (COMMON)
        . = ALIGN(0x10);
        _object_d_elevatorSegmentBssEnd = .;
        _object_d_elevatorSegmentEnd = .;
    }
    _object_d_elevatorSegmentBssSize = ABSOLUTE( _object_d_elevatorSegmentBssEnd - _object_d_elevatorSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_d_hsblockSegmentRomStart = _RomSize;
    ..object_d_hsblock : AT(_RomSize)
    {
        _object_d_hsblockSegmentStart = .;
        . = ALIGN(0x10);
        _object_d_hsblockSegmentTextStart = .;
            build/baserom/object_d_hsblock.o (.text)
        _object_d_hsblockSegmentTextEnd = .;
    _object_d_hsblockSegmentTextSize = ABSOLUTE( _object_d_hsblockSegmentTextEnd - _object_d_hsblockSegmentTextStart );
        _object_d_hsblockSegmentDataStart = .;
            build/baserom/object_d_hsblock.o (.data)
        _object_d_hsblockSegmentDataEnd = .;
    _object_d_hsblockSegmentDataSize = ABSOLUTE( _object_d_hsblockSegmentDataEnd - _object_d_hsblockSegmentDataStart );
        _object_d_hsblockSegmentRoDataStart = .;
            build/baserom/object_d_hsblock.o (.rodata)
        _object_d_hsblockSegmentRoDataEnd = .;
    _object_d_hsblockSegmentRoDataSize = ABSOLUTE( _object_d_hsblockSegmentRoDataEnd - _object_d_hsblockSegmentRoDataStart );
        _object_d_hsblockSegmentSDataStart = .;
            build/baserom/object_d_hsblock.o (.sdata)
        . = ALIGN(0x10);
        _object_d_hsblockSegmentSDataEnd = .;
        _object_d_hsblockSegmentOvlStart = .;
            build/baserom/object_d_hsblock.o (.ovl)
        . = ALIGN(0x10);
        _object_d_hsblockSegmentOvlEnd = .;
    }
    _RomSize += ( _object_d_hsblockSegmentOvlEnd - _object_d_hsblockSegmentTextStart );
    _object_d_hsblockSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_d_hsblock.bss ADDR(..object_d_hsblock) + SIZEOF(..object_d_hsblock) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_d_hsblockSegmentBssStart = .;
            build/baserom/object_d_hsblock.o (.sbss)
            build/baserom/object_d_hsblock.o (.scommon)
            build/baserom/object_d_hsblock.o (.bss)
            build/baserom/object_d_hsblock.o (COMMON)
        . = ALIGN(0x10);
        _object_d_hsblockSegmentBssEnd = .;
        _object_d_hsblockSegmentEnd = .;
    }
    _object_d_hsblockSegmentBssSize = ABSOLUTE( _object_d_hsblockSegmentBssEnd - _object_d_hsblockSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_d_liftSegmentRomStart = _RomSize;
    ..object_d_lift : AT(_RomSize)
    {
        _object_d_liftSegmentStart = .;
        . = ALIGN(0x10);
        _object_d_liftSegmentTextStart = .;
            build/baserom/object_d_lift.o (.text)
        _object_d_liftSegmentTextEnd = .;
    _object_d_liftSegmentTextSize = ABSOLUTE( _object_d_liftSegmentTextEnd - _object_d_liftSegmentTextStart );
        _object_d_liftSegmentDataStart = .;
            build/baserom/object_d_lift.o (.data)
        _object_d_liftSegmentDataEnd = .;
    _object_d_liftSegmentDataSize = ABSOLUTE( _object_d_liftSegmentDataEnd - _object_d_liftSegmentDataStart );
        _object_d_liftSegmentRoDataStart = .;
            build/baserom/object_d_lift.o (.rodata)
        _object_d_liftSegmentRoDataEnd = .;
    _object_d_liftSegmentRoDataSize = ABSOLUTE( _object_d_liftSegmentRoDataEnd - _object_d_liftSegmentRoDataStart );
        _object_d_liftSegmentSDataStart = .;
            build/baserom/object_d_lift.o (.sdata)
        . = ALIGN(0x10);
        _object_d_liftSegmentSDataEnd = .;
        _object_d_liftSegmentOvlStart = .;
            build/baserom/object_d_lift.o (.ovl)
        . = ALIGN(0x10);
        _object_d_liftSegmentOvlEnd = .;
    }
    _RomSize += ( _object_d_liftSegmentOvlEnd - _object_d_liftSegmentTextStart );
    _object_d_liftSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_d_lift.bss ADDR(..object_d_lift) + SIZEOF(..object_d_lift) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_d_liftSegmentBssStart = .;
            build/baserom/object_d_lift.o (.sbss)
            build/baserom/object_d_lift.o (.scommon)
            build/baserom/object_d_lift.o (.bss)
            build/baserom/object_d_lift.o (COMMON)
        . = ALIGN(0x10);
        _object_d_liftSegmentBssEnd = .;
        _object_d_liftSegmentEnd = .;
    }
    _object_d_liftSegmentBssSize = ABSOLUTE( _object_d_liftSegmentBssEnd - _object_d_liftSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mamenokiSegmentRomStart = _RomSize;
    ..object_mamenoki : AT(_RomSize)
    {
        _object_mamenokiSegmentStart = .;
        . = ALIGN(0x10);
        _object_mamenokiSegmentTextStart = .;
            build/baserom/object_mamenoki.o (.text)
        _object_mamenokiSegmentTextEnd = .;
    _object_mamenokiSegmentTextSize = ABSOLUTE( _object_mamenokiSegmentTextEnd - _object_mamenokiSegmentTextStart );
        _object_mamenokiSegmentDataStart = .;
            build/baserom/object_mamenoki.o (.data)
        _object_mamenokiSegmentDataEnd = .;
    _object_mamenokiSegmentDataSize = ABSOLUTE( _object_mamenokiSegmentDataEnd - _object_mamenokiSegmentDataStart );
        _object_mamenokiSegmentRoDataStart = .;
            build/baserom/object_mamenoki.o (.rodata)
        _object_mamenokiSegmentRoDataEnd = .;
    _object_mamenokiSegmentRoDataSize = ABSOLUTE( _object_mamenokiSegmentRoDataEnd - _object_mamenokiSegmentRoDataStart );
        _object_mamenokiSegmentSDataStart = .;
            build/baserom/object_mamenoki.o (.sdata)
        . = ALIGN(0x10);
        _object_mamenokiSegmentSDataEnd = .;
        _object_mamenokiSegmentOvlStart = .;
            build/baserom/object_mamenoki.o (.ovl)
        . = ALIGN(0x10);
        _object_mamenokiSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mamenokiSegmentOvlEnd - _object_mamenokiSegmentTextStart );
    _object_mamenokiSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mamenoki.bss ADDR(..object_mamenoki) + SIZEOF(..object_mamenoki) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mamenokiSegmentBssStart = .;
            build/baserom/object_mamenoki.o (.sbss)
            build/baserom/object_mamenoki.o (.scommon)
            build/baserom/object_mamenoki.o (.bss)
            build/baserom/object_mamenoki.o (COMMON)
        . = ALIGN(0x10);
        _object_mamenokiSegmentBssEnd = .;
        _object_mamenokiSegmentEnd = .;
    }
    _object_mamenokiSegmentBssSize = ABSOLUTE( _object_mamenokiSegmentBssEnd - _object_mamenokiSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_goroiwaSegmentRomStart = _RomSize;
    ..object_goroiwa : AT(_RomSize)
    {
        _object_goroiwaSegmentStart = .;
        . = ALIGN(0x10);
        _object_goroiwaSegmentTextStart = .;
            build/baserom/object_goroiwa.o (.text)
        _object_goroiwaSegmentTextEnd = .;
    _object_goroiwaSegmentTextSize = ABSOLUTE( _object_goroiwaSegmentTextEnd - _object_goroiwaSegmentTextStart );
        _object_goroiwaSegmentDataStart = .;
            build/baserom/object_goroiwa.o (.data)
        _object_goroiwaSegmentDataEnd = .;
    _object_goroiwaSegmentDataSize = ABSOLUTE( _object_goroiwaSegmentDataEnd - _object_goroiwaSegmentDataStart );
        _object_goroiwaSegmentRoDataStart = .;
            build/baserom/object_goroiwa.o (.rodata)
        _object_goroiwaSegmentRoDataEnd = .;
    _object_goroiwaSegmentRoDataSize = ABSOLUTE( _object_goroiwaSegmentRoDataEnd - _object_goroiwaSegmentRoDataStart );
        _object_goroiwaSegmentSDataStart = .;
            build/baserom/object_goroiwa.o (.sdata)
        . = ALIGN(0x10);
        _object_goroiwaSegmentSDataEnd = .;
        _object_goroiwaSegmentOvlStart = .;
            build/baserom/object_goroiwa.o (.ovl)
        . = ALIGN(0x10);
        _object_goroiwaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_goroiwaSegmentOvlEnd - _object_goroiwaSegmentTextStart );
    _object_goroiwaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_goroiwa.bss ADDR(..object_goroiwa) + SIZEOF(..object_goroiwa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_goroiwaSegmentBssStart = .;
            build/baserom/object_goroiwa.o (.sbss)
            build/baserom/object_goroiwa.o (.scommon)
            build/baserom/object_goroiwa.o (.bss)
            build/baserom/object_goroiwa.o (COMMON)
        . = ALIGN(0x10);
        _object_goroiwaSegmentBssEnd = .;
        _object_goroiwaSegmentEnd = .;
    }
    _object_goroiwaSegmentBssSize = ABSOLUTE( _object_goroiwaSegmentBssEnd - _object_goroiwaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_toryoSegmentRomStart = _RomSize;
    ..object_toryo : AT(_RomSize)
    {
        _object_toryoSegmentStart = .;
        . = ALIGN(0x10);
        _object_toryoSegmentTextStart = .;
            build/baserom/object_toryo.o (.text)
        _object_toryoSegmentTextEnd = .;
    _object_toryoSegmentTextSize = ABSOLUTE( _object_toryoSegmentTextEnd - _object_toryoSegmentTextStart );
        _object_toryoSegmentDataStart = .;
            build/baserom/object_toryo.o (.data)
        _object_toryoSegmentDataEnd = .;
    _object_toryoSegmentDataSize = ABSOLUTE( _object_toryoSegmentDataEnd - _object_toryoSegmentDataStart );
        _object_toryoSegmentRoDataStart = .;
            build/baserom/object_toryo.o (.rodata)
        _object_toryoSegmentRoDataEnd = .;
    _object_toryoSegmentRoDataSize = ABSOLUTE( _object_toryoSegmentRoDataEnd - _object_toryoSegmentRoDataStart );
        _object_toryoSegmentSDataStart = .;
            build/baserom/object_toryo.o (.sdata)
        . = ALIGN(0x10);
        _object_toryoSegmentSDataEnd = .;
        _object_toryoSegmentOvlStart = .;
            build/baserom/object_toryo.o (.ovl)
        . = ALIGN(0x10);
        _object_toryoSegmentOvlEnd = .;
    }
    _RomSize += ( _object_toryoSegmentOvlEnd - _object_toryoSegmentTextStart );
    _object_toryoSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_toryo.bss ADDR(..object_toryo) + SIZEOF(..object_toryo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_toryoSegmentBssStart = .;
            build/baserom/object_toryo.o (.sbss)
            build/baserom/object_toryo.o (.scommon)
            build/baserom/object_toryo.o (.bss)
            build/baserom/object_toryo.o (COMMON)
        . = ALIGN(0x10);
        _object_toryoSegmentBssEnd = .;
        _object_toryoSegmentEnd = .;
    }
    _object_toryoSegmentBssSize = ABSOLUTE( _object_toryoSegmentBssEnd - _object_toryoSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_daikuSegmentRomStart = _RomSize;
    ..object_daiku : AT(_RomSize)
    {
        _object_daikuSegmentStart = .;
        . = ALIGN(0x10);
        _object_daikuSegmentTextStart = .;
            build/baserom/object_daiku.o (.text)
        _object_daikuSegmentTextEnd = .;
    _object_daikuSegmentTextSize = ABSOLUTE( _object_daikuSegmentTextEnd - _object_daikuSegmentTextStart );
        _object_daikuSegmentDataStart = .;
            build/baserom/object_daiku.o (.data)
        _object_daikuSegmentDataEnd = .;
    _object_daikuSegmentDataSize = ABSOLUTE( _object_daikuSegmentDataEnd - _object_daikuSegmentDataStart );
        _object_daikuSegmentRoDataStart = .;
            build/baserom/object_daiku.o (.rodata)
        _object_daikuSegmentRoDataEnd = .;
    _object_daikuSegmentRoDataSize = ABSOLUTE( _object_daikuSegmentRoDataEnd - _object_daikuSegmentRoDataStart );
        _object_daikuSegmentSDataStart = .;
            build/baserom/object_daiku.o (.sdata)
        . = ALIGN(0x10);
        _object_daikuSegmentSDataEnd = .;
        _object_daikuSegmentOvlStart = .;
            build/baserom/object_daiku.o (.ovl)
        . = ALIGN(0x10);
        _object_daikuSegmentOvlEnd = .;
    }
    _RomSize += ( _object_daikuSegmentOvlEnd - _object_daikuSegmentTextStart );
    _object_daikuSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_daiku.bss ADDR(..object_daiku) + SIZEOF(..object_daiku) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_daikuSegmentBssStart = .;
            build/baserom/object_daiku.o (.sbss)
            build/baserom/object_daiku.o (.scommon)
            build/baserom/object_daiku.o (.bss)
            build/baserom/object_daiku.o (COMMON)
        . = ALIGN(0x10);
        _object_daikuSegmentBssEnd = .;
        _object_daikuSegmentEnd = .;
    }
    _object_daikuSegmentBssSize = ABSOLUTE( _object_daikuSegmentBssEnd - _object_daikuSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_nwcSegmentRomStart = _RomSize;
    ..object_nwc : AT(_RomSize)
    {
        _object_nwcSegmentStart = .;
        . = ALIGN(0x10);
        _object_nwcSegmentTextStart = .;
            build/baserom/object_nwc.o (.text)
        _object_nwcSegmentTextEnd = .;
    _object_nwcSegmentTextSize = ABSOLUTE( _object_nwcSegmentTextEnd - _object_nwcSegmentTextStart );
        _object_nwcSegmentDataStart = .;
            build/baserom/object_nwc.o (.data)
        _object_nwcSegmentDataEnd = .;
    _object_nwcSegmentDataSize = ABSOLUTE( _object_nwcSegmentDataEnd - _object_nwcSegmentDataStart );
        _object_nwcSegmentRoDataStart = .;
            build/baserom/object_nwc.o (.rodata)
        _object_nwcSegmentRoDataEnd = .;
    _object_nwcSegmentRoDataSize = ABSOLUTE( _object_nwcSegmentRoDataEnd - _object_nwcSegmentRoDataStart );
        _object_nwcSegmentSDataStart = .;
            build/baserom/object_nwc.o (.sdata)
        . = ALIGN(0x10);
        _object_nwcSegmentSDataEnd = .;
        _object_nwcSegmentOvlStart = .;
            build/baserom/object_nwc.o (.ovl)
        . = ALIGN(0x10);
        _object_nwcSegmentOvlEnd = .;
    }
    _RomSize += ( _object_nwcSegmentOvlEnd - _object_nwcSegmentTextStart );
    _object_nwcSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_nwc.bss ADDR(..object_nwc) + SIZEOF(..object_nwc) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_nwcSegmentBssStart = .;
            build/baserom/object_nwc.o (.sbss)
            build/baserom/object_nwc.o (.scommon)
            build/baserom/object_nwc.o (.bss)
            build/baserom/object_nwc.o (COMMON)
        . = ALIGN(0x10);
        _object_nwcSegmentBssEnd = .;
        _object_nwcSegmentEnd = .;
    }
    _object_nwcSegmentBssSize = ABSOLUTE( _object_nwcSegmentBssEnd - _object_nwcSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_blkobjSegmentRomStart = _RomSize;
    ..object_blkobj : AT(_RomSize)
    {
        _object_blkobjSegmentStart = .;
        . = ALIGN(0x10);
        _object_blkobjSegmentTextStart = .;
            build/baserom/object_blkobj.o (.text)
        _object_blkobjSegmentTextEnd = .;
    _object_blkobjSegmentTextSize = ABSOLUTE( _object_blkobjSegmentTextEnd - _object_blkobjSegmentTextStart );
        _object_blkobjSegmentDataStart = .;
            build/baserom/object_blkobj.o (.data)
        _object_blkobjSegmentDataEnd = .;
    _object_blkobjSegmentDataSize = ABSOLUTE( _object_blkobjSegmentDataEnd - _object_blkobjSegmentDataStart );
        _object_blkobjSegmentRoDataStart = .;
            build/baserom/object_blkobj.o (.rodata)
        _object_blkobjSegmentRoDataEnd = .;
    _object_blkobjSegmentRoDataSize = ABSOLUTE( _object_blkobjSegmentRoDataEnd - _object_blkobjSegmentRoDataStart );
        _object_blkobjSegmentSDataStart = .;
            build/baserom/object_blkobj.o (.sdata)
        . = ALIGN(0x10);
        _object_blkobjSegmentSDataEnd = .;
        _object_blkobjSegmentOvlStart = .;
            build/baserom/object_blkobj.o (.ovl)
        . = ALIGN(0x10);
        _object_blkobjSegmentOvlEnd = .;
    }
    _RomSize += ( _object_blkobjSegmentOvlEnd - _object_blkobjSegmentTextStart );
    _object_blkobjSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_blkobj.bss ADDR(..object_blkobj) + SIZEOF(..object_blkobj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_blkobjSegmentBssStart = .;
            build/baserom/object_blkobj.o (.sbss)
            build/baserom/object_blkobj.o (.scommon)
            build/baserom/object_blkobj.o (.bss)
            build/baserom/object_blkobj.o (COMMON)
        . = ALIGN(0x10);
        _object_blkobjSegmentBssEnd = .;
        _object_blkobjSegmentEnd = .;
    }
    _object_blkobjSegmentBssSize = ABSOLUTE( _object_blkobjSegmentBssEnd - _object_blkobjSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gmSegmentRomStart = _RomSize;
    ..object_gm : AT(_RomSize)
    {
        _object_gmSegmentStart = .;
        . = ALIGN(0x10);
        _object_gmSegmentTextStart = .;
            build/baserom/object_gm.o (.text)
        _object_gmSegmentTextEnd = .;
    _object_gmSegmentTextSize = ABSOLUTE( _object_gmSegmentTextEnd - _object_gmSegmentTextStart );
        _object_gmSegmentDataStart = .;
            build/baserom/object_gm.o (.data)
        _object_gmSegmentDataEnd = .;
    _object_gmSegmentDataSize = ABSOLUTE( _object_gmSegmentDataEnd - _object_gmSegmentDataStart );
        _object_gmSegmentRoDataStart = .;
            build/baserom/object_gm.o (.rodata)
        _object_gmSegmentRoDataEnd = .;
    _object_gmSegmentRoDataSize = ABSOLUTE( _object_gmSegmentRoDataEnd - _object_gmSegmentRoDataStart );
        _object_gmSegmentSDataStart = .;
            build/baserom/object_gm.o (.sdata)
        . = ALIGN(0x10);
        _object_gmSegmentSDataEnd = .;
        _object_gmSegmentOvlStart = .;
            build/baserom/object_gm.o (.ovl)
        . = ALIGN(0x10);
        _object_gmSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gmSegmentOvlEnd - _object_gmSegmentTextStart );
    _object_gmSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gm.bss ADDR(..object_gm) + SIZEOF(..object_gm) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gmSegmentBssStart = .;
            build/baserom/object_gm.o (.sbss)
            build/baserom/object_gm.o (.scommon)
            build/baserom/object_gm.o (.bss)
            build/baserom/object_gm.o (COMMON)
        . = ALIGN(0x10);
        _object_gmSegmentBssEnd = .;
        _object_gmSegmentEnd = .;
    }
    _object_gmSegmentBssSize = ABSOLUTE( _object_gmSegmentBssEnd - _object_gmSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_msSegmentRomStart = _RomSize;
    ..object_ms : AT(_RomSize)
    {
        _object_msSegmentStart = .;
        . = ALIGN(0x10);
        _object_msSegmentTextStart = .;
            build/baserom/object_ms.o (.text)
        _object_msSegmentTextEnd = .;
    _object_msSegmentTextSize = ABSOLUTE( _object_msSegmentTextEnd - _object_msSegmentTextStart );
        _object_msSegmentDataStart = .;
            build/baserom/object_ms.o (.data)
        _object_msSegmentDataEnd = .;
    _object_msSegmentDataSize = ABSOLUTE( _object_msSegmentDataEnd - _object_msSegmentDataStart );
        _object_msSegmentRoDataStart = .;
            build/baserom/object_ms.o (.rodata)
        _object_msSegmentRoDataEnd = .;
    _object_msSegmentRoDataSize = ABSOLUTE( _object_msSegmentRoDataEnd - _object_msSegmentRoDataStart );
        _object_msSegmentSDataStart = .;
            build/baserom/object_ms.o (.sdata)
        . = ALIGN(0x10);
        _object_msSegmentSDataEnd = .;
        _object_msSegmentOvlStart = .;
            build/baserom/object_ms.o (.ovl)
        . = ALIGN(0x10);
        _object_msSegmentOvlEnd = .;
    }
    _RomSize += ( _object_msSegmentOvlEnd - _object_msSegmentTextStart );
    _object_msSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ms.bss ADDR(..object_ms) + SIZEOF(..object_ms) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_msSegmentBssStart = .;
            build/baserom/object_ms.o (.sbss)
            build/baserom/object_ms.o (.scommon)
            build/baserom/object_ms.o (.bss)
            build/baserom/object_ms.o (COMMON)
        . = ALIGN(0x10);
        _object_msSegmentBssEnd = .;
        _object_msSegmentEnd = .;
    }
    _object_msSegmentBssSize = ABSOLUTE( _object_msSegmentBssEnd - _object_msSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_hsSegmentRomStart = _RomSize;
    ..object_hs : AT(_RomSize)
    {
        _object_hsSegmentStart = .;
        . = ALIGN(0x10);
        _object_hsSegmentTextStart = .;
            build/baserom/object_hs.o (.text)
        _object_hsSegmentTextEnd = .;
    _object_hsSegmentTextSize = ABSOLUTE( _object_hsSegmentTextEnd - _object_hsSegmentTextStart );
        _object_hsSegmentDataStart = .;
            build/baserom/object_hs.o (.data)
        _object_hsSegmentDataEnd = .;
    _object_hsSegmentDataSize = ABSOLUTE( _object_hsSegmentDataEnd - _object_hsSegmentDataStart );
        _object_hsSegmentRoDataStart = .;
            build/baserom/object_hs.o (.rodata)
        _object_hsSegmentRoDataEnd = .;
    _object_hsSegmentRoDataSize = ABSOLUTE( _object_hsSegmentRoDataEnd - _object_hsSegmentRoDataStart );
        _object_hsSegmentSDataStart = .;
            build/baserom/object_hs.o (.sdata)
        . = ALIGN(0x10);
        _object_hsSegmentSDataEnd = .;
        _object_hsSegmentOvlStart = .;
            build/baserom/object_hs.o (.ovl)
        . = ALIGN(0x10);
        _object_hsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_hsSegmentOvlEnd - _object_hsSegmentTextStart );
    _object_hsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_hs.bss ADDR(..object_hs) + SIZEOF(..object_hs) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_hsSegmentBssStart = .;
            build/baserom/object_hs.o (.sbss)
            build/baserom/object_hs.o (.scommon)
            build/baserom/object_hs.o (.bss)
            build/baserom/object_hs.o (COMMON)
        . = ALIGN(0x10);
        _object_hsSegmentBssEnd = .;
        _object_hsSegmentEnd = .;
    }
    _object_hsSegmentBssSize = ABSOLUTE( _object_hsSegmentBssEnd - _object_hsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ingateSegmentRomStart = _RomSize;
    ..object_ingate : AT(_RomSize)
    {
        _object_ingateSegmentStart = .;
        . = ALIGN(0x10);
        _object_ingateSegmentTextStart = .;
            build/baserom/object_ingate.o (.text)
        _object_ingateSegmentTextEnd = .;
    _object_ingateSegmentTextSize = ABSOLUTE( _object_ingateSegmentTextEnd - _object_ingateSegmentTextStart );
        _object_ingateSegmentDataStart = .;
            build/baserom/object_ingate.o (.data)
        _object_ingateSegmentDataEnd = .;
    _object_ingateSegmentDataSize = ABSOLUTE( _object_ingateSegmentDataEnd - _object_ingateSegmentDataStart );
        _object_ingateSegmentRoDataStart = .;
            build/baserom/object_ingate.o (.rodata)
        _object_ingateSegmentRoDataEnd = .;
    _object_ingateSegmentRoDataSize = ABSOLUTE( _object_ingateSegmentRoDataEnd - _object_ingateSegmentRoDataStart );
        _object_ingateSegmentSDataStart = .;
            build/baserom/object_ingate.o (.sdata)
        . = ALIGN(0x10);
        _object_ingateSegmentSDataEnd = .;
        _object_ingateSegmentOvlStart = .;
            build/baserom/object_ingate.o (.ovl)
        . = ALIGN(0x10);
        _object_ingateSegmentOvlEnd = .;
    }
    _RomSize += ( _object_ingateSegmentOvlEnd - _object_ingateSegmentTextStart );
    _object_ingateSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ingate.bss ADDR(..object_ingate) + SIZEOF(..object_ingate) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ingateSegmentBssStart = .;
            build/baserom/object_ingate.o (.sbss)
            build/baserom/object_ingate.o (.scommon)
            build/baserom/object_ingate.o (.bss)
            build/baserom/object_ingate.o (COMMON)
        . = ALIGN(0x10);
        _object_ingateSegmentBssEnd = .;
        _object_ingateSegmentEnd = .;
    }
    _object_ingateSegmentBssSize = ABSOLUTE( _object_ingateSegmentBssEnd - _object_ingateSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_lightswitchSegmentRomStart = _RomSize;
    ..object_lightswitch : AT(_RomSize)
    {
        _object_lightswitchSegmentStart = .;
        . = ALIGN(0x10);
        _object_lightswitchSegmentTextStart = .;
            build/baserom/object_lightswitch.o (.text)
        _object_lightswitchSegmentTextEnd = .;
    _object_lightswitchSegmentTextSize = ABSOLUTE( _object_lightswitchSegmentTextEnd - _object_lightswitchSegmentTextStart );
        _object_lightswitchSegmentDataStart = .;
            build/baserom/object_lightswitch.o (.data)
        _object_lightswitchSegmentDataEnd = .;
    _object_lightswitchSegmentDataSize = ABSOLUTE( _object_lightswitchSegmentDataEnd - _object_lightswitchSegmentDataStart );
        _object_lightswitchSegmentRoDataStart = .;
            build/baserom/object_lightswitch.o (.rodata)
        _object_lightswitchSegmentRoDataEnd = .;
    _object_lightswitchSegmentRoDataSize = ABSOLUTE( _object_lightswitchSegmentRoDataEnd - _object_lightswitchSegmentRoDataStart );
        _object_lightswitchSegmentSDataStart = .;
            build/baserom/object_lightswitch.o (.sdata)
        . = ALIGN(0x10);
        _object_lightswitchSegmentSDataEnd = .;
        _object_lightswitchSegmentOvlStart = .;
            build/baserom/object_lightswitch.o (.ovl)
        . = ALIGN(0x10);
        _object_lightswitchSegmentOvlEnd = .;
    }
    _RomSize += ( _object_lightswitchSegmentOvlEnd - _object_lightswitchSegmentTextStart );
    _object_lightswitchSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_lightswitch.bss ADDR(..object_lightswitch) + SIZEOF(..object_lightswitch) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_lightswitchSegmentBssStart = .;
            build/baserom/object_lightswitch.o (.sbss)
            build/baserom/object_lightswitch.o (.scommon)
            build/baserom/object_lightswitch.o (.bss)
            build/baserom/object_lightswitch.o (COMMON)
        . = ALIGN(0x10);
        _object_lightswitchSegmentBssEnd = .;
        _object_lightswitchSegmentEnd = .;
    }
    _object_lightswitchSegmentBssSize = ABSOLUTE( _object_lightswitchSegmentBssEnd - _object_lightswitchSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_kusaSegmentRomStart = _RomSize;
    ..object_kusa : AT(_RomSize)
    {
        _object_kusaSegmentStart = .;
        . = ALIGN(0x10);
        _object_kusaSegmentTextStart = .;
            build/baserom/object_kusa.o (.text)
        _object_kusaSegmentTextEnd = .;
    _object_kusaSegmentTextSize = ABSOLUTE( _object_kusaSegmentTextEnd - _object_kusaSegmentTextStart );
        _object_kusaSegmentDataStart = .;
            build/baserom/object_kusa.o (.data)
        _object_kusaSegmentDataEnd = .;
    _object_kusaSegmentDataSize = ABSOLUTE( _object_kusaSegmentDataEnd - _object_kusaSegmentDataStart );
        _object_kusaSegmentRoDataStart = .;
            build/baserom/object_kusa.o (.rodata)
        _object_kusaSegmentRoDataEnd = .;
    _object_kusaSegmentRoDataSize = ABSOLUTE( _object_kusaSegmentRoDataEnd - _object_kusaSegmentRoDataStart );
        _object_kusaSegmentSDataStart = .;
            build/baserom/object_kusa.o (.sdata)
        . = ALIGN(0x10);
        _object_kusaSegmentSDataEnd = .;
        _object_kusaSegmentOvlStart = .;
            build/baserom/object_kusa.o (.ovl)
        . = ALIGN(0x10);
        _object_kusaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_kusaSegmentOvlEnd - _object_kusaSegmentTextStart );
    _object_kusaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_kusa.bss ADDR(..object_kusa) + SIZEOF(..object_kusa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_kusaSegmentBssStart = .;
            build/baserom/object_kusa.o (.sbss)
            build/baserom/object_kusa.o (.scommon)
            build/baserom/object_kusa.o (.bss)
            build/baserom/object_kusa.o (COMMON)
        . = ALIGN(0x10);
        _object_kusaSegmentBssEnd = .;
        _object_kusaSegmentEnd = .;
    }
    _object_kusaSegmentBssSize = ABSOLUTE( _object_kusaSegmentBssEnd - _object_kusaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_tsuboSegmentRomStart = _RomSize;
    ..object_tsubo : AT(_RomSize)
    {
        _object_tsuboSegmentStart = .;
        . = ALIGN(0x10);
        _object_tsuboSegmentTextStart = .;
            build/baserom/object_tsubo.o (.text)
        _object_tsuboSegmentTextEnd = .;
    _object_tsuboSegmentTextSize = ABSOLUTE( _object_tsuboSegmentTextEnd - _object_tsuboSegmentTextStart );
        _object_tsuboSegmentDataStart = .;
            build/baserom/object_tsubo.o (.data)
        _object_tsuboSegmentDataEnd = .;
    _object_tsuboSegmentDataSize = ABSOLUTE( _object_tsuboSegmentDataEnd - _object_tsuboSegmentDataStart );
        _object_tsuboSegmentRoDataStart = .;
            build/baserom/object_tsubo.o (.rodata)
        _object_tsuboSegmentRoDataEnd = .;
    _object_tsuboSegmentRoDataSize = ABSOLUTE( _object_tsuboSegmentRoDataEnd - _object_tsuboSegmentRoDataStart );
        _object_tsuboSegmentSDataStart = .;
            build/baserom/object_tsubo.o (.sdata)
        . = ALIGN(0x10);
        _object_tsuboSegmentSDataEnd = .;
        _object_tsuboSegmentOvlStart = .;
            build/baserom/object_tsubo.o (.ovl)
        . = ALIGN(0x10);
        _object_tsuboSegmentOvlEnd = .;
    }
    _RomSize += ( _object_tsuboSegmentOvlEnd - _object_tsuboSegmentTextStart );
    _object_tsuboSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_tsubo.bss ADDR(..object_tsubo) + SIZEOF(..object_tsubo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_tsuboSegmentBssStart = .;
            build/baserom/object_tsubo.o (.sbss)
            build/baserom/object_tsubo.o (.scommon)
            build/baserom/object_tsubo.o (.bss)
            build/baserom/object_tsubo.o (COMMON)
        . = ALIGN(0x10);
        _object_tsuboSegmentBssEnd = .;
        _object_tsuboSegmentEnd = .;
    }
    _object_tsuboSegmentBssSize = ABSOLUTE( _object_tsuboSegmentBssEnd - _object_tsuboSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_glovesSegmentRomStart = _RomSize;
    ..object_gi_gloves : AT(_RomSize)
    {
        _object_gi_glovesSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_glovesSegmentTextStart = .;
            build/baserom/object_gi_gloves.o (.text)
        _object_gi_glovesSegmentTextEnd = .;
    _object_gi_glovesSegmentTextSize = ABSOLUTE( _object_gi_glovesSegmentTextEnd - _object_gi_glovesSegmentTextStart );
        _object_gi_glovesSegmentDataStart = .;
            build/baserom/object_gi_gloves.o (.data)
        _object_gi_glovesSegmentDataEnd = .;
    _object_gi_glovesSegmentDataSize = ABSOLUTE( _object_gi_glovesSegmentDataEnd - _object_gi_glovesSegmentDataStart );
        _object_gi_glovesSegmentRoDataStart = .;
            build/baserom/object_gi_gloves.o (.rodata)
        _object_gi_glovesSegmentRoDataEnd = .;
    _object_gi_glovesSegmentRoDataSize = ABSOLUTE( _object_gi_glovesSegmentRoDataEnd - _object_gi_glovesSegmentRoDataStart );
        _object_gi_glovesSegmentSDataStart = .;
            build/baserom/object_gi_gloves.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_glovesSegmentSDataEnd = .;
        _object_gi_glovesSegmentOvlStart = .;
            build/baserom/object_gi_gloves.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_glovesSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_glovesSegmentOvlEnd - _object_gi_glovesSegmentTextStart );
    _object_gi_glovesSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_gloves.bss ADDR(..object_gi_gloves) + SIZEOF(..object_gi_gloves) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_glovesSegmentBssStart = .;
            build/baserom/object_gi_gloves.o (.sbss)
            build/baserom/object_gi_gloves.o (.scommon)
            build/baserom/object_gi_gloves.o (.bss)
            build/baserom/object_gi_gloves.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_glovesSegmentBssEnd = .;
        _object_gi_glovesSegmentEnd = .;
    }
    _object_gi_glovesSegmentBssSize = ABSOLUTE( _object_gi_glovesSegmentBssEnd - _object_gi_glovesSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_coinSegmentRomStart = _RomSize;
    ..object_gi_coin : AT(_RomSize)
    {
        _object_gi_coinSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_coinSegmentTextStart = .;
            build/baserom/object_gi_coin.o (.text)
        _object_gi_coinSegmentTextEnd = .;
    _object_gi_coinSegmentTextSize = ABSOLUTE( _object_gi_coinSegmentTextEnd - _object_gi_coinSegmentTextStart );
        _object_gi_coinSegmentDataStart = .;
            build/baserom/object_gi_coin.o (.data)
        _object_gi_coinSegmentDataEnd = .;
    _object_gi_coinSegmentDataSize = ABSOLUTE( _object_gi_coinSegmentDataEnd - _object_gi_coinSegmentDataStart );
        _object_gi_coinSegmentRoDataStart = .;
            build/baserom/object_gi_coin.o (.rodata)
        _object_gi_coinSegmentRoDataEnd = .;
    _object_gi_coinSegmentRoDataSize = ABSOLUTE( _object_gi_coinSegmentRoDataEnd - _object_gi_coinSegmentRoDataStart );
        _object_gi_coinSegmentSDataStart = .;
            build/baserom/object_gi_coin.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_coinSegmentSDataEnd = .;
        _object_gi_coinSegmentOvlStart = .;
            build/baserom/object_gi_coin.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_coinSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_coinSegmentOvlEnd - _object_gi_coinSegmentTextStart );
    _object_gi_coinSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_coin.bss ADDR(..object_gi_coin) + SIZEOF(..object_gi_coin) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_coinSegmentBssStart = .;
            build/baserom/object_gi_coin.o (.sbss)
            build/baserom/object_gi_coin.o (.scommon)
            build/baserom/object_gi_coin.o (.bss)
            build/baserom/object_gi_coin.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_coinSegmentBssEnd = .;
        _object_gi_coinSegmentEnd = .;
    }
    _object_gi_coinSegmentBssSize = ABSOLUTE( _object_gi_coinSegmentBssEnd - _object_gi_coinSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_kanbanSegmentRomStart = _RomSize;
    ..object_kanban : AT(_RomSize)
    {
        _object_kanbanSegmentStart = .;
        . = ALIGN(0x10);
        _object_kanbanSegmentTextStart = .;
            build/baserom/object_kanban.o (.text)
        _object_kanbanSegmentTextEnd = .;
    _object_kanbanSegmentTextSize = ABSOLUTE( _object_kanbanSegmentTextEnd - _object_kanbanSegmentTextStart );
        _object_kanbanSegmentDataStart = .;
            build/baserom/object_kanban.o (.data)
        _object_kanbanSegmentDataEnd = .;
    _object_kanbanSegmentDataSize = ABSOLUTE( _object_kanbanSegmentDataEnd - _object_kanbanSegmentDataStart );
        _object_kanbanSegmentRoDataStart = .;
            build/baserom/object_kanban.o (.rodata)
        _object_kanbanSegmentRoDataEnd = .;
    _object_kanbanSegmentRoDataSize = ABSOLUTE( _object_kanbanSegmentRoDataEnd - _object_kanbanSegmentRoDataStart );
        _object_kanbanSegmentSDataStart = .;
            build/baserom/object_kanban.o (.sdata)
        . = ALIGN(0x10);
        _object_kanbanSegmentSDataEnd = .;
        _object_kanbanSegmentOvlStart = .;
            build/baserom/object_kanban.o (.ovl)
        . = ALIGN(0x10);
        _object_kanbanSegmentOvlEnd = .;
    }
    _RomSize += ( _object_kanbanSegmentOvlEnd - _object_kanbanSegmentTextStart );
    _object_kanbanSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_kanban.bss ADDR(..object_kanban) + SIZEOF(..object_kanban) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_kanbanSegmentBssStart = .;
            build/baserom/object_kanban.o (.sbss)
            build/baserom/object_kanban.o (.scommon)
            build/baserom/object_kanban.o (.bss)
            build/baserom/object_kanban.o (COMMON)
        . = ALIGN(0x10);
        _object_kanbanSegmentBssEnd = .;
        _object_kanbanSegmentEnd = .;
    }
    _object_kanbanSegmentBssSize = ABSOLUTE( _object_kanbanSegmentBssEnd - _object_kanbanSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gjyo_objectsSegmentRomStart = _RomSize;
    ..object_gjyo_objects : AT(_RomSize)
    {
        _object_gjyo_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_gjyo_objectsSegmentTextStart = .;
            build/baserom/object_gjyo_objects.o (.text)
        _object_gjyo_objectsSegmentTextEnd = .;
    _object_gjyo_objectsSegmentTextSize = ABSOLUTE( _object_gjyo_objectsSegmentTextEnd - _object_gjyo_objectsSegmentTextStart );
        _object_gjyo_objectsSegmentDataStart = .;
            build/baserom/object_gjyo_objects.o (.data)
        _object_gjyo_objectsSegmentDataEnd = .;
    _object_gjyo_objectsSegmentDataSize = ABSOLUTE( _object_gjyo_objectsSegmentDataEnd - _object_gjyo_objectsSegmentDataStart );
        _object_gjyo_objectsSegmentRoDataStart = .;
            build/baserom/object_gjyo_objects.o (.rodata)
        _object_gjyo_objectsSegmentRoDataEnd = .;
    _object_gjyo_objectsSegmentRoDataSize = ABSOLUTE( _object_gjyo_objectsSegmentRoDataEnd - _object_gjyo_objectsSegmentRoDataStart );
        _object_gjyo_objectsSegmentSDataStart = .;
            build/baserom/object_gjyo_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_gjyo_objectsSegmentSDataEnd = .;
        _object_gjyo_objectsSegmentOvlStart = .;
            build/baserom/object_gjyo_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_gjyo_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gjyo_objectsSegmentOvlEnd - _object_gjyo_objectsSegmentTextStart );
    _object_gjyo_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gjyo_objects.bss ADDR(..object_gjyo_objects) + SIZEOF(..object_gjyo_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gjyo_objectsSegmentBssStart = .;
            build/baserom/object_gjyo_objects.o (.sbss)
            build/baserom/object_gjyo_objects.o (.scommon)
            build/baserom/object_gjyo_objects.o (.bss)
            build/baserom/object_gjyo_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_gjyo_objectsSegmentBssEnd = .;
        _object_gjyo_objectsSegmentEnd = .;
    }
    _object_gjyo_objectsSegmentBssSize = ABSOLUTE( _object_gjyo_objectsSegmentBssEnd - _object_gjyo_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_owlSegmentRomStart = _RomSize;
    ..object_owl : AT(_RomSize)
    {
        _object_owlSegmentStart = .;
        . = ALIGN(0x10);
        _object_owlSegmentTextStart = .;
            build/baserom/object_owl.o (.text)
        _object_owlSegmentTextEnd = .;
    _object_owlSegmentTextSize = ABSOLUTE( _object_owlSegmentTextEnd - _object_owlSegmentTextStart );
        _object_owlSegmentDataStart = .;
            build/baserom/object_owl.o (.data)
        _object_owlSegmentDataEnd = .;
    _object_owlSegmentDataSize = ABSOLUTE( _object_owlSegmentDataEnd - _object_owlSegmentDataStart );
        _object_owlSegmentRoDataStart = .;
            build/baserom/object_owl.o (.rodata)
        _object_owlSegmentRoDataEnd = .;
    _object_owlSegmentRoDataSize = ABSOLUTE( _object_owlSegmentRoDataEnd - _object_owlSegmentRoDataStart );
        _object_owlSegmentSDataStart = .;
            build/baserom/object_owl.o (.sdata)
        . = ALIGN(0x10);
        _object_owlSegmentSDataEnd = .;
        _object_owlSegmentOvlStart = .;
            build/baserom/object_owl.o (.ovl)
        . = ALIGN(0x10);
        _object_owlSegmentOvlEnd = .;
    }
    _RomSize += ( _object_owlSegmentOvlEnd - _object_owlSegmentTextStart );
    _object_owlSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_owl.bss ADDR(..object_owl) + SIZEOF(..object_owl) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_owlSegmentBssStart = .;
            build/baserom/object_owl.o (.sbss)
            build/baserom/object_owl.o (.scommon)
            build/baserom/object_owl.o (.bss)
            build/baserom/object_owl.o (COMMON)
        . = ALIGN(0x10);
        _object_owlSegmentBssEnd = .;
        _object_owlSegmentEnd = .;
    }
    _object_owlSegmentBssSize = ABSOLUTE( _object_owlSegmentBssEnd - _object_owlSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mkSegmentRomStart = _RomSize;
    ..object_mk : AT(_RomSize)
    {
        _object_mkSegmentStart = .;
        . = ALIGN(0x10);
        _object_mkSegmentTextStart = .;
            build/baserom/object_mk.o (.text)
        _object_mkSegmentTextEnd = .;
    _object_mkSegmentTextSize = ABSOLUTE( _object_mkSegmentTextEnd - _object_mkSegmentTextStart );
        _object_mkSegmentDataStart = .;
            build/baserom/object_mk.o (.data)
        _object_mkSegmentDataEnd = .;
    _object_mkSegmentDataSize = ABSOLUTE( _object_mkSegmentDataEnd - _object_mkSegmentDataStart );
        _object_mkSegmentRoDataStart = .;
            build/baserom/object_mk.o (.rodata)
        _object_mkSegmentRoDataEnd = .;
    _object_mkSegmentRoDataSize = ABSOLUTE( _object_mkSegmentRoDataEnd - _object_mkSegmentRoDataStart );
        _object_mkSegmentSDataStart = .;
            build/baserom/object_mk.o (.sdata)
        . = ALIGN(0x10);
        _object_mkSegmentSDataEnd = .;
        _object_mkSegmentOvlStart = .;
            build/baserom/object_mk.o (.ovl)
        . = ALIGN(0x10);
        _object_mkSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mkSegmentOvlEnd - _object_mkSegmentTextStart );
    _object_mkSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mk.bss ADDR(..object_mk) + SIZEOF(..object_mk) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mkSegmentBssStart = .;
            build/baserom/object_mk.o (.sbss)
            build/baserom/object_mk.o (.scommon)
            build/baserom/object_mk.o (.bss)
            build/baserom/object_mk.o (COMMON)
        . = ALIGN(0x10);
        _object_mkSegmentBssEnd = .;
        _object_mkSegmentEnd = .;
    }
    _object_mkSegmentBssSize = ABSOLUTE( _object_mkSegmentBssEnd - _object_mkSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_fuSegmentRomStart = _RomSize;
    ..object_fu : AT(_RomSize)
    {
        _object_fuSegmentStart = .;
        . = ALIGN(0x10);
        _object_fuSegmentTextStart = .;
            build/baserom/object_fu.o (.text)
        _object_fuSegmentTextEnd = .;
    _object_fuSegmentTextSize = ABSOLUTE( _object_fuSegmentTextEnd - _object_fuSegmentTextStart );
        _object_fuSegmentDataStart = .;
            build/baserom/object_fu.o (.data)
        _object_fuSegmentDataEnd = .;
    _object_fuSegmentDataSize = ABSOLUTE( _object_fuSegmentDataEnd - _object_fuSegmentDataStart );
        _object_fuSegmentRoDataStart = .;
            build/baserom/object_fu.o (.rodata)
        _object_fuSegmentRoDataEnd = .;
    _object_fuSegmentRoDataSize = ABSOLUTE( _object_fuSegmentRoDataEnd - _object_fuSegmentRoDataStart );
        _object_fuSegmentSDataStart = .;
            build/baserom/object_fu.o (.sdata)
        . = ALIGN(0x10);
        _object_fuSegmentSDataEnd = .;
        _object_fuSegmentOvlStart = .;
            build/baserom/object_fu.o (.ovl)
        . = ALIGN(0x10);
        _object_fuSegmentOvlEnd = .;
    }
    _RomSize += ( _object_fuSegmentOvlEnd - _object_fuSegmentTextStart );
    _object_fuSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_fu.bss ADDR(..object_fu) + SIZEOF(..object_fu) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_fuSegmentBssStart = .;
            build/baserom/object_fu.o (.sbss)
            build/baserom/object_fu.o (.scommon)
            build/baserom/object_fu.o (.bss)
            build/baserom/object_fu.o (COMMON)
        . = ALIGN(0x10);
        _object_fuSegmentBssEnd = .;
        _object_fuSegmentEnd = .;
    }
    _object_fuSegmentBssSize = ABSOLUTE( _object_fuSegmentBssEnd - _object_fuSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_ki_tan_maskSegmentRomStart = _RomSize;
    ..object_gi_ki_tan_mask : AT(_RomSize)
    {
        _object_gi_ki_tan_maskSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_ki_tan_maskSegmentTextStart = .;
            build/baserom/object_gi_ki_tan_mask.o (.text)
        _object_gi_ki_tan_maskSegmentTextEnd = .;
    _object_gi_ki_tan_maskSegmentTextSize = ABSOLUTE( _object_gi_ki_tan_maskSegmentTextEnd - _object_gi_ki_tan_maskSegmentTextStart );
        _object_gi_ki_tan_maskSegmentDataStart = .;
            build/baserom/object_gi_ki_tan_mask.o (.data)
        _object_gi_ki_tan_maskSegmentDataEnd = .;
    _object_gi_ki_tan_maskSegmentDataSize = ABSOLUTE( _object_gi_ki_tan_maskSegmentDataEnd - _object_gi_ki_tan_maskSegmentDataStart );
        _object_gi_ki_tan_maskSegmentRoDataStart = .;
            build/baserom/object_gi_ki_tan_mask.o (.rodata)
        _object_gi_ki_tan_maskSegmentRoDataEnd = .;
    _object_gi_ki_tan_maskSegmentRoDataSize = ABSOLUTE( _object_gi_ki_tan_maskSegmentRoDataEnd - _object_gi_ki_tan_maskSegmentRoDataStart );
        _object_gi_ki_tan_maskSegmentSDataStart = .;
            build/baserom/object_gi_ki_tan_mask.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_ki_tan_maskSegmentSDataEnd = .;
        _object_gi_ki_tan_maskSegmentOvlStart = .;
            build/baserom/object_gi_ki_tan_mask.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_ki_tan_maskSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_ki_tan_maskSegmentOvlEnd - _object_gi_ki_tan_maskSegmentTextStart );
    _object_gi_ki_tan_maskSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_ki_tan_mask.bss ADDR(..object_gi_ki_tan_mask) + SIZEOF(..object_gi_ki_tan_mask) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_ki_tan_maskSegmentBssStart = .;
            build/baserom/object_gi_ki_tan_mask.o (.sbss)
            build/baserom/object_gi_ki_tan_mask.o (.scommon)
            build/baserom/object_gi_ki_tan_mask.o (.bss)
            build/baserom/object_gi_ki_tan_mask.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_ki_tan_maskSegmentBssEnd = .;
        _object_gi_ki_tan_maskSegmentEnd = .;
    }
    _object_gi_ki_tan_maskSegmentBssSize = ABSOLUTE( _object_gi_ki_tan_maskSegmentBssEnd - _object_gi_ki_tan_maskSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_redead_maskSegmentRomStart = _RomSize;
    ..object_gi_redead_mask : AT(_RomSize)
    {
        _object_gi_redead_maskSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_redead_maskSegmentTextStart = .;
            build/baserom/object_gi_redead_mask.o (.text)
        _object_gi_redead_maskSegmentTextEnd = .;
    _object_gi_redead_maskSegmentTextSize = ABSOLUTE( _object_gi_redead_maskSegmentTextEnd - _object_gi_redead_maskSegmentTextStart );
        _object_gi_redead_maskSegmentDataStart = .;
            build/baserom/object_gi_redead_mask.o (.data)
        _object_gi_redead_maskSegmentDataEnd = .;
    _object_gi_redead_maskSegmentDataSize = ABSOLUTE( _object_gi_redead_maskSegmentDataEnd - _object_gi_redead_maskSegmentDataStart );
        _object_gi_redead_maskSegmentRoDataStart = .;
            build/baserom/object_gi_redead_mask.o (.rodata)
        _object_gi_redead_maskSegmentRoDataEnd = .;
    _object_gi_redead_maskSegmentRoDataSize = ABSOLUTE( _object_gi_redead_maskSegmentRoDataEnd - _object_gi_redead_maskSegmentRoDataStart );
        _object_gi_redead_maskSegmentSDataStart = .;
            build/baserom/object_gi_redead_mask.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_redead_maskSegmentSDataEnd = .;
        _object_gi_redead_maskSegmentOvlStart = .;
            build/baserom/object_gi_redead_mask.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_redead_maskSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_redead_maskSegmentOvlEnd - _object_gi_redead_maskSegmentTextStart );
    _object_gi_redead_maskSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_redead_mask.bss ADDR(..object_gi_redead_mask) + SIZEOF(..object_gi_redead_mask) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_redead_maskSegmentBssStart = .;
            build/baserom/object_gi_redead_mask.o (.sbss)
            build/baserom/object_gi_redead_mask.o (.scommon)
            build/baserom/object_gi_redead_mask.o (.bss)
            build/baserom/object_gi_redead_mask.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_redead_maskSegmentBssEnd = .;
        _object_gi_redead_maskSegmentEnd = .;
    }
    _object_gi_redead_maskSegmentBssSize = ABSOLUTE( _object_gi_redead_maskSegmentBssEnd - _object_gi_redead_maskSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_skj_maskSegmentRomStart = _RomSize;
    ..object_gi_skj_mask : AT(_RomSize)
    {
        _object_gi_skj_maskSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_skj_maskSegmentTextStart = .;
            build/baserom/object_gi_skj_mask.o (.text)
        _object_gi_skj_maskSegmentTextEnd = .;
    _object_gi_skj_maskSegmentTextSize = ABSOLUTE( _object_gi_skj_maskSegmentTextEnd - _object_gi_skj_maskSegmentTextStart );
        _object_gi_skj_maskSegmentDataStart = .;
            build/baserom/object_gi_skj_mask.o (.data)
        _object_gi_skj_maskSegmentDataEnd = .;
    _object_gi_skj_maskSegmentDataSize = ABSOLUTE( _object_gi_skj_maskSegmentDataEnd - _object_gi_skj_maskSegmentDataStart );
        _object_gi_skj_maskSegmentRoDataStart = .;
            build/baserom/object_gi_skj_mask.o (.rodata)
        _object_gi_skj_maskSegmentRoDataEnd = .;
    _object_gi_skj_maskSegmentRoDataSize = ABSOLUTE( _object_gi_skj_maskSegmentRoDataEnd - _object_gi_skj_maskSegmentRoDataStart );
        _object_gi_skj_maskSegmentSDataStart = .;
            build/baserom/object_gi_skj_mask.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_skj_maskSegmentSDataEnd = .;
        _object_gi_skj_maskSegmentOvlStart = .;
            build/baserom/object_gi_skj_mask.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_skj_maskSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_skj_maskSegmentOvlEnd - _object_gi_skj_maskSegmentTextStart );
    _object_gi_skj_maskSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_skj_mask.bss ADDR(..object_gi_skj_mask) + SIZEOF(..object_gi_skj_mask) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_skj_maskSegmentBssStart = .;
            build/baserom/object_gi_skj_mask.o (.sbss)
            build/baserom/object_gi_skj_mask.o (.scommon)
            build/baserom/object_gi_skj_mask.o (.bss)
            build/baserom/object_gi_skj_mask.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_skj_maskSegmentBssEnd = .;
        _object_gi_skj_maskSegmentEnd = .;
    }
    _object_gi_skj_maskSegmentBssSize = ABSOLUTE( _object_gi_skj_maskSegmentBssEnd - _object_gi_skj_maskSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_rabit_maskSegmentRomStart = _RomSize;
    ..object_gi_rabit_mask : AT(_RomSize)
    {
        _object_gi_rabit_maskSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_rabit_maskSegmentTextStart = .;
            build/baserom/object_gi_rabit_mask.o (.text)
        _object_gi_rabit_maskSegmentTextEnd = .;
    _object_gi_rabit_maskSegmentTextSize = ABSOLUTE( _object_gi_rabit_maskSegmentTextEnd - _object_gi_rabit_maskSegmentTextStart );
        _object_gi_rabit_maskSegmentDataStart = .;
            build/baserom/object_gi_rabit_mask.o (.data)
        _object_gi_rabit_maskSegmentDataEnd = .;
    _object_gi_rabit_maskSegmentDataSize = ABSOLUTE( _object_gi_rabit_maskSegmentDataEnd - _object_gi_rabit_maskSegmentDataStart );
        _object_gi_rabit_maskSegmentRoDataStart = .;
            build/baserom/object_gi_rabit_mask.o (.rodata)
        _object_gi_rabit_maskSegmentRoDataEnd = .;
    _object_gi_rabit_maskSegmentRoDataSize = ABSOLUTE( _object_gi_rabit_maskSegmentRoDataEnd - _object_gi_rabit_maskSegmentRoDataStart );
        _object_gi_rabit_maskSegmentSDataStart = .;
            build/baserom/object_gi_rabit_mask.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_rabit_maskSegmentSDataEnd = .;
        _object_gi_rabit_maskSegmentOvlStart = .;
            build/baserom/object_gi_rabit_mask.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_rabit_maskSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_rabit_maskSegmentOvlEnd - _object_gi_rabit_maskSegmentTextStart );
    _object_gi_rabit_maskSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_rabit_mask.bss ADDR(..object_gi_rabit_mask) + SIZEOF(..object_gi_rabit_mask) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_rabit_maskSegmentBssStart = .;
            build/baserom/object_gi_rabit_mask.o (.sbss)
            build/baserom/object_gi_rabit_mask.o (.scommon)
            build/baserom/object_gi_rabit_mask.o (.bss)
            build/baserom/object_gi_rabit_mask.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_rabit_maskSegmentBssEnd = .;
        _object_gi_rabit_maskSegmentEnd = .;
    }
    _object_gi_rabit_maskSegmentBssSize = ABSOLUTE( _object_gi_rabit_maskSegmentBssEnd - _object_gi_rabit_maskSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_truth_maskSegmentRomStart = _RomSize;
    ..object_gi_truth_mask : AT(_RomSize)
    {
        _object_gi_truth_maskSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_truth_maskSegmentTextStart = .;
            build/baserom/object_gi_truth_mask.o (.text)
        _object_gi_truth_maskSegmentTextEnd = .;
    _object_gi_truth_maskSegmentTextSize = ABSOLUTE( _object_gi_truth_maskSegmentTextEnd - _object_gi_truth_maskSegmentTextStart );
        _object_gi_truth_maskSegmentDataStart = .;
            build/baserom/object_gi_truth_mask.o (.data)
        _object_gi_truth_maskSegmentDataEnd = .;
    _object_gi_truth_maskSegmentDataSize = ABSOLUTE( _object_gi_truth_maskSegmentDataEnd - _object_gi_truth_maskSegmentDataStart );
        _object_gi_truth_maskSegmentRoDataStart = .;
            build/baserom/object_gi_truth_mask.o (.rodata)
        _object_gi_truth_maskSegmentRoDataEnd = .;
    _object_gi_truth_maskSegmentRoDataSize = ABSOLUTE( _object_gi_truth_maskSegmentRoDataEnd - _object_gi_truth_maskSegmentRoDataStart );
        _object_gi_truth_maskSegmentSDataStart = .;
            build/baserom/object_gi_truth_mask.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_truth_maskSegmentSDataEnd = .;
        _object_gi_truth_maskSegmentOvlStart = .;
            build/baserom/object_gi_truth_mask.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_truth_maskSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_truth_maskSegmentOvlEnd - _object_gi_truth_maskSegmentTextStart );
    _object_gi_truth_maskSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_truth_mask.bss ADDR(..object_gi_truth_mask) + SIZEOF(..object_gi_truth_mask) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_truth_maskSegmentBssStart = .;
            build/baserom/object_gi_truth_mask.o (.sbss)
            build/baserom/object_gi_truth_mask.o (.scommon)
            build/baserom/object_gi_truth_mask.o (.bss)
            build/baserom/object_gi_truth_mask.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_truth_maskSegmentBssEnd = .;
        _object_gi_truth_maskSegmentEnd = .;
    }
    _object_gi_truth_maskSegmentBssSize = ABSOLUTE( _object_gi_truth_maskSegmentBssEnd - _object_gi_truth_maskSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ganon_objectsSegmentRomStart = _RomSize;
    ..object_ganon_objects : AT(_RomSize)
    {
        _object_ganon_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_ganon_objectsSegmentTextStart = .;
            build/baserom/object_ganon_objects.o (.text)
        _object_ganon_objectsSegmentTextEnd = .;
    _object_ganon_objectsSegmentTextSize = ABSOLUTE( _object_ganon_objectsSegmentTextEnd - _object_ganon_objectsSegmentTextStart );
        _object_ganon_objectsSegmentDataStart = .;
            build/baserom/object_ganon_objects.o (.data)
        _object_ganon_objectsSegmentDataEnd = .;
    _object_ganon_objectsSegmentDataSize = ABSOLUTE( _object_ganon_objectsSegmentDataEnd - _object_ganon_objectsSegmentDataStart );
        _object_ganon_objectsSegmentRoDataStart = .;
            build/baserom/object_ganon_objects.o (.rodata)
        _object_ganon_objectsSegmentRoDataEnd = .;
    _object_ganon_objectsSegmentRoDataSize = ABSOLUTE( _object_ganon_objectsSegmentRoDataEnd - _object_ganon_objectsSegmentRoDataStart );
        _object_ganon_objectsSegmentSDataStart = .;
            build/baserom/object_ganon_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_ganon_objectsSegmentSDataEnd = .;
        _object_ganon_objectsSegmentOvlStart = .;
            build/baserom/object_ganon_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_ganon_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_ganon_objectsSegmentOvlEnd - _object_ganon_objectsSegmentTextStart );
    _object_ganon_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ganon_objects.bss ADDR(..object_ganon_objects) + SIZEOF(..object_ganon_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ganon_objectsSegmentBssStart = .;
            build/baserom/object_ganon_objects.o (.sbss)
            build/baserom/object_ganon_objects.o (.scommon)
            build/baserom/object_ganon_objects.o (.bss)
            build/baserom/object_ganon_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_ganon_objectsSegmentBssEnd = .;
        _object_ganon_objectsSegmentEnd = .;
    }
    _object_ganon_objectsSegmentBssSize = ABSOLUTE( _object_ganon_objectsSegmentBssEnd - _object_ganon_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_siofukiSegmentRomStart = _RomSize;
    ..object_siofuki : AT(_RomSize)
    {
        _object_siofukiSegmentStart = .;
        . = ALIGN(0x10);
        _object_siofukiSegmentTextStart = .;
            build/baserom/object_siofuki.o (.text)
        _object_siofukiSegmentTextEnd = .;
    _object_siofukiSegmentTextSize = ABSOLUTE( _object_siofukiSegmentTextEnd - _object_siofukiSegmentTextStart );
        _object_siofukiSegmentDataStart = .;
            build/baserom/object_siofuki.o (.data)
        _object_siofukiSegmentDataEnd = .;
    _object_siofukiSegmentDataSize = ABSOLUTE( _object_siofukiSegmentDataEnd - _object_siofukiSegmentDataStart );
        _object_siofukiSegmentRoDataStart = .;
            build/baserom/object_siofuki.o (.rodata)
        _object_siofukiSegmentRoDataEnd = .;
    _object_siofukiSegmentRoDataSize = ABSOLUTE( _object_siofukiSegmentRoDataEnd - _object_siofukiSegmentRoDataStart );
        _object_siofukiSegmentSDataStart = .;
            build/baserom/object_siofuki.o (.sdata)
        . = ALIGN(0x10);
        _object_siofukiSegmentSDataEnd = .;
        _object_siofukiSegmentOvlStart = .;
            build/baserom/object_siofuki.o (.ovl)
        . = ALIGN(0x10);
        _object_siofukiSegmentOvlEnd = .;
    }
    _RomSize += ( _object_siofukiSegmentOvlEnd - _object_siofukiSegmentTextStart );
    _object_siofukiSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_siofuki.bss ADDR(..object_siofuki) + SIZEOF(..object_siofuki) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_siofukiSegmentBssStart = .;
            build/baserom/object_siofuki.o (.sbss)
            build/baserom/object_siofuki.o (.scommon)
            build/baserom/object_siofuki.o (.bss)
            build/baserom/object_siofuki.o (COMMON)
        . = ALIGN(0x10);
        _object_siofukiSegmentBssEnd = .;
        _object_siofukiSegmentEnd = .;
    }
    _object_siofukiSegmentBssSize = ABSOLUTE( _object_siofukiSegmentBssEnd - _object_siofukiSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_streamSegmentRomStart = _RomSize;
    ..object_stream : AT(_RomSize)
    {
        _object_streamSegmentStart = .;
        . = ALIGN(0x10);
        _object_streamSegmentTextStart = .;
            build/baserom/object_stream.o (.text)
        _object_streamSegmentTextEnd = .;
    _object_streamSegmentTextSize = ABSOLUTE( _object_streamSegmentTextEnd - _object_streamSegmentTextStart );
        _object_streamSegmentDataStart = .;
            build/baserom/object_stream.o (.data)
        _object_streamSegmentDataEnd = .;
    _object_streamSegmentDataSize = ABSOLUTE( _object_streamSegmentDataEnd - _object_streamSegmentDataStart );
        _object_streamSegmentRoDataStart = .;
            build/baserom/object_stream.o (.rodata)
        _object_streamSegmentRoDataEnd = .;
    _object_streamSegmentRoDataSize = ABSOLUTE( _object_streamSegmentRoDataEnd - _object_streamSegmentRoDataStart );
        _object_streamSegmentSDataStart = .;
            build/baserom/object_stream.o (.sdata)
        . = ALIGN(0x10);
        _object_streamSegmentSDataEnd = .;
        _object_streamSegmentOvlStart = .;
            build/baserom/object_stream.o (.ovl)
        . = ALIGN(0x10);
        _object_streamSegmentOvlEnd = .;
    }
    _RomSize += ( _object_streamSegmentOvlEnd - _object_streamSegmentTextStart );
    _object_streamSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_stream.bss ADDR(..object_stream) + SIZEOF(..object_stream) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_streamSegmentBssStart = .;
            build/baserom/object_stream.o (.sbss)
            build/baserom/object_stream.o (.scommon)
            build/baserom/object_stream.o (.bss)
            build/baserom/object_stream.o (COMMON)
        . = ALIGN(0x10);
        _object_streamSegmentBssEnd = .;
        _object_streamSegmentEnd = .;
    }
    _object_streamSegmentBssSize = ABSOLUTE( _object_streamSegmentBssEnd - _object_streamSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_mmSegmentRomStart = _RomSize;
    ..object_mm : AT(_RomSize)
    {
        _object_mmSegmentStart = .;
        . = ALIGN(0x10);
        _object_mmSegmentTextStart = .;
            build/baserom/object_mm.o (.text)
        _object_mmSegmentTextEnd = .;
    _object_mmSegmentTextSize = ABSOLUTE( _object_mmSegmentTextEnd - _object_mmSegmentTextStart );
        _object_mmSegmentDataStart = .;
            build/baserom/object_mm.o (.data)
        _object_mmSegmentDataEnd = .;
    _object_mmSegmentDataSize = ABSOLUTE( _object_mmSegmentDataEnd - _object_mmSegmentDataStart );
        _object_mmSegmentRoDataStart = .;
            build/baserom/object_mm.o (.rodata)
        _object_mmSegmentRoDataEnd = .;
    _object_mmSegmentRoDataSize = ABSOLUTE( _object_mmSegmentRoDataEnd - _object_mmSegmentRoDataStart );
        _object_mmSegmentSDataStart = .;
            build/baserom/object_mm.o (.sdata)
        . = ALIGN(0x10);
        _object_mmSegmentSDataEnd = .;
        _object_mmSegmentOvlStart = .;
            build/baserom/object_mm.o (.ovl)
        . = ALIGN(0x10);
        _object_mmSegmentOvlEnd = .;
    }
    _RomSize += ( _object_mmSegmentOvlEnd - _object_mmSegmentTextStart );
    _object_mmSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mm.bss ADDR(..object_mm) + SIZEOF(..object_mm) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_mmSegmentBssStart = .;
            build/baserom/object_mm.o (.sbss)
            build/baserom/object_mm.o (.scommon)
            build/baserom/object_mm.o (.bss)
            build/baserom/object_mm.o (COMMON)
        . = ALIGN(0x10);
        _object_mmSegmentBssEnd = .;
        _object_mmSegmentEnd = .;
    }
    _object_mmSegmentBssSize = ABSOLUTE( _object_mmSegmentBssEnd - _object_mmSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_faSegmentRomStart = _RomSize;
    ..object_fa : AT(_RomSize)
    {
        _object_faSegmentStart = .;
        . = ALIGN(0x10);
        _object_faSegmentTextStart = .;
            build/baserom/object_fa.o (.text)
        _object_faSegmentTextEnd = .;
    _object_faSegmentTextSize = ABSOLUTE( _object_faSegmentTextEnd - _object_faSegmentTextStart );
        _object_faSegmentDataStart = .;
            build/baserom/object_fa.o (.data)
        _object_faSegmentDataEnd = .;
    _object_faSegmentDataSize = ABSOLUTE( _object_faSegmentDataEnd - _object_faSegmentDataStart );
        _object_faSegmentRoDataStart = .;
            build/baserom/object_fa.o (.rodata)
        _object_faSegmentRoDataEnd = .;
    _object_faSegmentRoDataSize = ABSOLUTE( _object_faSegmentRoDataEnd - _object_faSegmentRoDataStart );
        _object_faSegmentSDataStart = .;
            build/baserom/object_fa.o (.sdata)
        . = ALIGN(0x10);
        _object_faSegmentSDataEnd = .;
        _object_faSegmentOvlStart = .;
            build/baserom/object_fa.o (.ovl)
        . = ALIGN(0x10);
        _object_faSegmentOvlEnd = .;
    }
    _RomSize += ( _object_faSegmentOvlEnd - _object_faSegmentTextStart );
    _object_faSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_fa.bss ADDR(..object_fa) + SIZEOF(..object_fa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_faSegmentBssStart = .;
            build/baserom/object_fa.o (.sbss)
            build/baserom/object_fa.o (.scommon)
            build/baserom/object_fa.o (.bss)
            build/baserom/object_fa.o (COMMON)
        . = ALIGN(0x10);
        _object_faSegmentBssEnd = .;
        _object_faSegmentEnd = .;
    }
    _object_faSegmentBssSize = ABSOLUTE( _object_faSegmentBssEnd - _object_faSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_osSegmentRomStart = _RomSize;
    ..object_os : AT(_RomSize)
    {
        _object_osSegmentStart = .;
        . = ALIGN(0x10);
        _object_osSegmentTextStart = .;
            build/baserom/object_os.o (.text)
        _object_osSegmentTextEnd = .;
    _object_osSegmentTextSize = ABSOLUTE( _object_osSegmentTextEnd - _object_osSegmentTextStart );
        _object_osSegmentDataStart = .;
            build/baserom/object_os.o (.data)
        _object_osSegmentDataEnd = .;
    _object_osSegmentDataSize = ABSOLUTE( _object_osSegmentDataEnd - _object_osSegmentDataStart );
        _object_osSegmentRoDataStart = .;
            build/baserom/object_os.o (.rodata)
        _object_osSegmentRoDataEnd = .;
    _object_osSegmentRoDataSize = ABSOLUTE( _object_osSegmentRoDataEnd - _object_osSegmentRoDataStart );
        _object_osSegmentSDataStart = .;
            build/baserom/object_os.o (.sdata)
        . = ALIGN(0x10);
        _object_osSegmentSDataEnd = .;
        _object_osSegmentOvlStart = .;
            build/baserom/object_os.o (.ovl)
        . = ALIGN(0x10);
        _object_osSegmentOvlEnd = .;
    }
    _RomSize += ( _object_osSegmentOvlEnd - _object_osSegmentTextStart );
    _object_osSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_os.bss ADDR(..object_os) + SIZEOF(..object_os) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_osSegmentBssStart = .;
            build/baserom/object_os.o (.sbss)
            build/baserom/object_os.o (.scommon)
            build/baserom/object_os.o (.bss)
            build/baserom/object_os.o (COMMON)
        . = ALIGN(0x10);
        _object_osSegmentBssEnd = .;
        _object_osSegmentEnd = .;
    }
    _object_osSegmentBssSize = ABSOLUTE( _object_osSegmentBssEnd - _object_osSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_eye_lotionSegmentRomStart = _RomSize;
    ..object_gi_eye_lotion : AT(_RomSize)
    {
        _object_gi_eye_lotionSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_eye_lotionSegmentTextStart = .;
            build/baserom/object_gi_eye_lotion.o (.text)
        _object_gi_eye_lotionSegmentTextEnd = .;
    _object_gi_eye_lotionSegmentTextSize = ABSOLUTE( _object_gi_eye_lotionSegmentTextEnd - _object_gi_eye_lotionSegmentTextStart );
        _object_gi_eye_lotionSegmentDataStart = .;
            build/baserom/object_gi_eye_lotion.o (.data)
        _object_gi_eye_lotionSegmentDataEnd = .;
    _object_gi_eye_lotionSegmentDataSize = ABSOLUTE( _object_gi_eye_lotionSegmentDataEnd - _object_gi_eye_lotionSegmentDataStart );
        _object_gi_eye_lotionSegmentRoDataStart = .;
            build/baserom/object_gi_eye_lotion.o (.rodata)
        _object_gi_eye_lotionSegmentRoDataEnd = .;
    _object_gi_eye_lotionSegmentRoDataSize = ABSOLUTE( _object_gi_eye_lotionSegmentRoDataEnd - _object_gi_eye_lotionSegmentRoDataStart );
        _object_gi_eye_lotionSegmentSDataStart = .;
            build/baserom/object_gi_eye_lotion.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_eye_lotionSegmentSDataEnd = .;
        _object_gi_eye_lotionSegmentOvlStart = .;
            build/baserom/object_gi_eye_lotion.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_eye_lotionSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_eye_lotionSegmentOvlEnd - _object_gi_eye_lotionSegmentTextStart );
    _object_gi_eye_lotionSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_eye_lotion.bss ADDR(..object_gi_eye_lotion) + SIZEOF(..object_gi_eye_lotion) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_eye_lotionSegmentBssStart = .;
            build/baserom/object_gi_eye_lotion.o (.sbss)
            build/baserom/object_gi_eye_lotion.o (.scommon)
            build/baserom/object_gi_eye_lotion.o (.bss)
            build/baserom/object_gi_eye_lotion.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_eye_lotionSegmentBssEnd = .;
        _object_gi_eye_lotionSegmentEnd = .;
    }
    _object_gi_eye_lotionSegmentBssSize = ABSOLUTE( _object_gi_eye_lotionSegmentBssEnd - _object_gi_eye_lotionSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_powderSegmentRomStart = _RomSize;
    ..object_gi_powder : AT(_RomSize)
    {
        _object_gi_powderSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_powderSegmentTextStart = .;
            build/baserom/object_gi_powder.o (.text)
        _object_gi_powderSegmentTextEnd = .;
    _object_gi_powderSegmentTextSize = ABSOLUTE( _object_gi_powderSegmentTextEnd - _object_gi_powderSegmentTextStart );
        _object_gi_powderSegmentDataStart = .;
            build/baserom/object_gi_powder.o (.data)
        _object_gi_powderSegmentDataEnd = .;
    _object_gi_powderSegmentDataSize = ABSOLUTE( _object_gi_powderSegmentDataEnd - _object_gi_powderSegmentDataStart );
        _object_gi_powderSegmentRoDataStart = .;
            build/baserom/object_gi_powder.o (.rodata)
        _object_gi_powderSegmentRoDataEnd = .;
    _object_gi_powderSegmentRoDataSize = ABSOLUTE( _object_gi_powderSegmentRoDataEnd - _object_gi_powderSegmentRoDataStart );
        _object_gi_powderSegmentSDataStart = .;
            build/baserom/object_gi_powder.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_powderSegmentSDataEnd = .;
        _object_gi_powderSegmentOvlStart = .;
            build/baserom/object_gi_powder.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_powderSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_powderSegmentOvlEnd - _object_gi_powderSegmentTextStart );
    _object_gi_powderSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_powder.bss ADDR(..object_gi_powder) + SIZEOF(..object_gi_powder) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_powderSegmentBssStart = .;
            build/baserom/object_gi_powder.o (.sbss)
            build/baserom/object_gi_powder.o (.scommon)
            build/baserom/object_gi_powder.o (.bss)
            build/baserom/object_gi_powder.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_powderSegmentBssEnd = .;
        _object_gi_powderSegmentEnd = .;
    }
    _object_gi_powderSegmentBssSize = ABSOLUTE( _object_gi_powderSegmentBssEnd - _object_gi_powderSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_mushroomSegmentRomStart = _RomSize;
    ..object_gi_mushroom : AT(_RomSize)
    {
        _object_gi_mushroomSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_mushroomSegmentTextStart = .;
            build/baserom/object_gi_mushroom.o (.text)
        _object_gi_mushroomSegmentTextEnd = .;
    _object_gi_mushroomSegmentTextSize = ABSOLUTE( _object_gi_mushroomSegmentTextEnd - _object_gi_mushroomSegmentTextStart );
        _object_gi_mushroomSegmentDataStart = .;
            build/baserom/object_gi_mushroom.o (.data)
        _object_gi_mushroomSegmentDataEnd = .;
    _object_gi_mushroomSegmentDataSize = ABSOLUTE( _object_gi_mushroomSegmentDataEnd - _object_gi_mushroomSegmentDataStart );
        _object_gi_mushroomSegmentRoDataStart = .;
            build/baserom/object_gi_mushroom.o (.rodata)
        _object_gi_mushroomSegmentRoDataEnd = .;
    _object_gi_mushroomSegmentRoDataSize = ABSOLUTE( _object_gi_mushroomSegmentRoDataEnd - _object_gi_mushroomSegmentRoDataStart );
        _object_gi_mushroomSegmentSDataStart = .;
            build/baserom/object_gi_mushroom.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_mushroomSegmentSDataEnd = .;
        _object_gi_mushroomSegmentOvlStart = .;
            build/baserom/object_gi_mushroom.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_mushroomSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_mushroomSegmentOvlEnd - _object_gi_mushroomSegmentTextStart );
    _object_gi_mushroomSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_mushroom.bss ADDR(..object_gi_mushroom) + SIZEOF(..object_gi_mushroom) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_mushroomSegmentBssStart = .;
            build/baserom/object_gi_mushroom.o (.sbss)
            build/baserom/object_gi_mushroom.o (.scommon)
            build/baserom/object_gi_mushroom.o (.bss)
            build/baserom/object_gi_mushroom.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_mushroomSegmentBssEnd = .;
        _object_gi_mushroomSegmentEnd = .;
    }
    _object_gi_mushroomSegmentBssSize = ABSOLUTE( _object_gi_mushroomSegmentBssEnd - _object_gi_mushroomSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_ticketstoneSegmentRomStart = _RomSize;
    ..object_gi_ticketstone : AT(_RomSize)
    {
        _object_gi_ticketstoneSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_ticketstoneSegmentTextStart = .;
            build/baserom/object_gi_ticketstone.o (.text)
        _object_gi_ticketstoneSegmentTextEnd = .;
    _object_gi_ticketstoneSegmentTextSize = ABSOLUTE( _object_gi_ticketstoneSegmentTextEnd - _object_gi_ticketstoneSegmentTextStart );
        _object_gi_ticketstoneSegmentDataStart = .;
            build/baserom/object_gi_ticketstone.o (.data)
        _object_gi_ticketstoneSegmentDataEnd = .;
    _object_gi_ticketstoneSegmentDataSize = ABSOLUTE( _object_gi_ticketstoneSegmentDataEnd - _object_gi_ticketstoneSegmentDataStart );
        _object_gi_ticketstoneSegmentRoDataStart = .;
            build/baserom/object_gi_ticketstone.o (.rodata)
        _object_gi_ticketstoneSegmentRoDataEnd = .;
    _object_gi_ticketstoneSegmentRoDataSize = ABSOLUTE( _object_gi_ticketstoneSegmentRoDataEnd - _object_gi_ticketstoneSegmentRoDataStart );
        _object_gi_ticketstoneSegmentSDataStart = .;
            build/baserom/object_gi_ticketstone.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_ticketstoneSegmentSDataEnd = .;
        _object_gi_ticketstoneSegmentOvlStart = .;
            build/baserom/object_gi_ticketstone.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_ticketstoneSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_ticketstoneSegmentOvlEnd - _object_gi_ticketstoneSegmentTextStart );
    _object_gi_ticketstoneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_ticketstone.bss ADDR(..object_gi_ticketstone) + SIZEOF(..object_gi_ticketstone) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_ticketstoneSegmentBssStart = .;
            build/baserom/object_gi_ticketstone.o (.sbss)
            build/baserom/object_gi_ticketstone.o (.scommon)
            build/baserom/object_gi_ticketstone.o (.bss)
            build/baserom/object_gi_ticketstone.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_ticketstoneSegmentBssEnd = .;
        _object_gi_ticketstoneSegmentEnd = .;
    }
    _object_gi_ticketstoneSegmentBssSize = ABSOLUTE( _object_gi_ticketstoneSegmentBssEnd - _object_gi_ticketstoneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_brokenswordSegmentRomStart = _RomSize;
    ..object_gi_brokensword : AT(_RomSize)
    {
        _object_gi_brokenswordSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_brokenswordSegmentTextStart = .;
            build/baserom/object_gi_brokensword.o (.text)
        _object_gi_brokenswordSegmentTextEnd = .;
    _object_gi_brokenswordSegmentTextSize = ABSOLUTE( _object_gi_brokenswordSegmentTextEnd - _object_gi_brokenswordSegmentTextStart );
        _object_gi_brokenswordSegmentDataStart = .;
            build/baserom/object_gi_brokensword.o (.data)
        _object_gi_brokenswordSegmentDataEnd = .;
    _object_gi_brokenswordSegmentDataSize = ABSOLUTE( _object_gi_brokenswordSegmentDataEnd - _object_gi_brokenswordSegmentDataStart );
        _object_gi_brokenswordSegmentRoDataStart = .;
            build/baserom/object_gi_brokensword.o (.rodata)
        _object_gi_brokenswordSegmentRoDataEnd = .;
    _object_gi_brokenswordSegmentRoDataSize = ABSOLUTE( _object_gi_brokenswordSegmentRoDataEnd - _object_gi_brokenswordSegmentRoDataStart );
        _object_gi_brokenswordSegmentSDataStart = .;
            build/baserom/object_gi_brokensword.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_brokenswordSegmentSDataEnd = .;
        _object_gi_brokenswordSegmentOvlStart = .;
            build/baserom/object_gi_brokensword.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_brokenswordSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_brokenswordSegmentOvlEnd - _object_gi_brokenswordSegmentTextStart );
    _object_gi_brokenswordSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_brokensword.bss ADDR(..object_gi_brokensword) + SIZEOF(..object_gi_brokensword) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_brokenswordSegmentBssStart = .;
            build/baserom/object_gi_brokensword.o (.sbss)
            build/baserom/object_gi_brokensword.o (.scommon)
            build/baserom/object_gi_brokensword.o (.bss)
            build/baserom/object_gi_brokensword.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_brokenswordSegmentBssEnd = .;
        _object_gi_brokenswordSegmentEnd = .;
    }
    _object_gi_brokenswordSegmentBssSize = ABSOLUTE( _object_gi_brokenswordSegmentBssEnd - _object_gi_brokenswordSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_jsSegmentRomStart = _RomSize;
    ..object_js : AT(_RomSize)
    {
        _object_jsSegmentStart = .;
        . = ALIGN(0x10);
        _object_jsSegmentTextStart = .;
            build/baserom/object_js.o (.text)
        _object_jsSegmentTextEnd = .;
    _object_jsSegmentTextSize = ABSOLUTE( _object_jsSegmentTextEnd - _object_jsSegmentTextStart );
        _object_jsSegmentDataStart = .;
            build/baserom/object_js.o (.data)
        _object_jsSegmentDataEnd = .;
    _object_jsSegmentDataSize = ABSOLUTE( _object_jsSegmentDataEnd - _object_jsSegmentDataStart );
        _object_jsSegmentRoDataStart = .;
            build/baserom/object_js.o (.rodata)
        _object_jsSegmentRoDataEnd = .;
    _object_jsSegmentRoDataSize = ABSOLUTE( _object_jsSegmentRoDataEnd - _object_jsSegmentRoDataStart );
        _object_jsSegmentSDataStart = .;
            build/baserom/object_js.o (.sdata)
        . = ALIGN(0x10);
        _object_jsSegmentSDataEnd = .;
        _object_jsSegmentOvlStart = .;
            build/baserom/object_js.o (.ovl)
        . = ALIGN(0x10);
        _object_jsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_jsSegmentOvlEnd - _object_jsSegmentTextStart );
    _object_jsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_js.bss ADDR(..object_js) + SIZEOF(..object_js) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_jsSegmentBssStart = .;
            build/baserom/object_js.o (.sbss)
            build/baserom/object_js.o (.scommon)
            build/baserom/object_js.o (.bss)
            build/baserom/object_js.o (COMMON)
        . = ALIGN(0x10);
        _object_jsSegmentBssEnd = .;
        _object_jsSegmentEnd = .;
    }
    _object_jsSegmentBssSize = ABSOLUTE( _object_jsSegmentBssEnd - _object_jsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_csSegmentRomStart = _RomSize;
    ..object_cs : AT(_RomSize)
    {
        _object_csSegmentStart = .;
        . = ALIGN(0x10);
        _object_csSegmentTextStart = .;
            build/baserom/object_cs.o (.text)
        _object_csSegmentTextEnd = .;
    _object_csSegmentTextSize = ABSOLUTE( _object_csSegmentTextEnd - _object_csSegmentTextStart );
        _object_csSegmentDataStart = .;
            build/baserom/object_cs.o (.data)
        _object_csSegmentDataEnd = .;
    _object_csSegmentDataSize = ABSOLUTE( _object_csSegmentDataEnd - _object_csSegmentDataStart );
        _object_csSegmentRoDataStart = .;
            build/baserom/object_cs.o (.rodata)
        _object_csSegmentRoDataEnd = .;
    _object_csSegmentRoDataSize = ABSOLUTE( _object_csSegmentRoDataEnd - _object_csSegmentRoDataStart );
        _object_csSegmentSDataStart = .;
            build/baserom/object_cs.o (.sdata)
        . = ALIGN(0x10);
        _object_csSegmentSDataEnd = .;
        _object_csSegmentOvlStart = .;
            build/baserom/object_cs.o (.ovl)
        . = ALIGN(0x10);
        _object_csSegmentOvlEnd = .;
    }
    _RomSize += ( _object_csSegmentOvlEnd - _object_csSegmentTextStart );
    _object_csSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_cs.bss ADDR(..object_cs) + SIZEOF(..object_cs) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_csSegmentBssStart = .;
            build/baserom/object_cs.o (.sbss)
            build/baserom/object_cs.o (.scommon)
            build/baserom/object_cs.o (.bss)
            build/baserom/object_cs.o (COMMON)
        . = ALIGN(0x10);
        _object_csSegmentBssEnd = .;
        _object_csSegmentEnd = .;
    }
    _object_csSegmentBssSize = ABSOLUTE( _object_csSegmentBssEnd - _object_csSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_prescriptionSegmentRomStart = _RomSize;
    ..object_gi_prescription : AT(_RomSize)
    {
        _object_gi_prescriptionSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_prescriptionSegmentTextStart = .;
            build/baserom/object_gi_prescription.o (.text)
        _object_gi_prescriptionSegmentTextEnd = .;
    _object_gi_prescriptionSegmentTextSize = ABSOLUTE( _object_gi_prescriptionSegmentTextEnd - _object_gi_prescriptionSegmentTextStart );
        _object_gi_prescriptionSegmentDataStart = .;
            build/baserom/object_gi_prescription.o (.data)
        _object_gi_prescriptionSegmentDataEnd = .;
    _object_gi_prescriptionSegmentDataSize = ABSOLUTE( _object_gi_prescriptionSegmentDataEnd - _object_gi_prescriptionSegmentDataStart );
        _object_gi_prescriptionSegmentRoDataStart = .;
            build/baserom/object_gi_prescription.o (.rodata)
        _object_gi_prescriptionSegmentRoDataEnd = .;
    _object_gi_prescriptionSegmentRoDataSize = ABSOLUTE( _object_gi_prescriptionSegmentRoDataEnd - _object_gi_prescriptionSegmentRoDataStart );
        _object_gi_prescriptionSegmentSDataStart = .;
            build/baserom/object_gi_prescription.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_prescriptionSegmentSDataEnd = .;
        _object_gi_prescriptionSegmentOvlStart = .;
            build/baserom/object_gi_prescription.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_prescriptionSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_prescriptionSegmentOvlEnd - _object_gi_prescriptionSegmentTextStart );
    _object_gi_prescriptionSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_prescription.bss ADDR(..object_gi_prescription) + SIZEOF(..object_gi_prescription) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_prescriptionSegmentBssStart = .;
            build/baserom/object_gi_prescription.o (.sbss)
            build/baserom/object_gi_prescription.o (.scommon)
            build/baserom/object_gi_prescription.o (.bss)
            build/baserom/object_gi_prescription.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_prescriptionSegmentBssEnd = .;
        _object_gi_prescriptionSegmentEnd = .;
    }
    _object_gi_prescriptionSegmentBssSize = ABSOLUTE( _object_gi_prescriptionSegmentBssEnd - _object_gi_prescriptionSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_braceletSegmentRomStart = _RomSize;
    ..object_gi_bracelet : AT(_RomSize)
    {
        _object_gi_braceletSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_braceletSegmentTextStart = .;
            build/baserom/object_gi_bracelet.o (.text)
        _object_gi_braceletSegmentTextEnd = .;
    _object_gi_braceletSegmentTextSize = ABSOLUTE( _object_gi_braceletSegmentTextEnd - _object_gi_braceletSegmentTextStart );
        _object_gi_braceletSegmentDataStart = .;
            build/baserom/object_gi_bracelet.o (.data)
        _object_gi_braceletSegmentDataEnd = .;
    _object_gi_braceletSegmentDataSize = ABSOLUTE( _object_gi_braceletSegmentDataEnd - _object_gi_braceletSegmentDataStart );
        _object_gi_braceletSegmentRoDataStart = .;
            build/baserom/object_gi_bracelet.o (.rodata)
        _object_gi_braceletSegmentRoDataEnd = .;
    _object_gi_braceletSegmentRoDataSize = ABSOLUTE( _object_gi_braceletSegmentRoDataEnd - _object_gi_braceletSegmentRoDataStart );
        _object_gi_braceletSegmentSDataStart = .;
            build/baserom/object_gi_bracelet.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_braceletSegmentSDataEnd = .;
        _object_gi_braceletSegmentOvlStart = .;
            build/baserom/object_gi_bracelet.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_braceletSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_braceletSegmentOvlEnd - _object_gi_braceletSegmentTextStart );
    _object_gi_braceletSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_bracelet.bss ADDR(..object_gi_bracelet) + SIZEOF(..object_gi_bracelet) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_braceletSegmentBssStart = .;
            build/baserom/object_gi_bracelet.o (.sbss)
            build/baserom/object_gi_bracelet.o (.scommon)
            build/baserom/object_gi_bracelet.o (.bss)
            build/baserom/object_gi_bracelet.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_braceletSegmentBssEnd = .;
        _object_gi_braceletSegmentEnd = .;
    }
    _object_gi_braceletSegmentBssSize = ABSOLUTE( _object_gi_braceletSegmentBssEnd - _object_gi_braceletSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_soldoutSegmentRomStart = _RomSize;
    ..object_gi_soldout : AT(_RomSize)
    {
        _object_gi_soldoutSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_soldoutSegmentTextStart = .;
            build/baserom/object_gi_soldout.o (.text)
        _object_gi_soldoutSegmentTextEnd = .;
    _object_gi_soldoutSegmentTextSize = ABSOLUTE( _object_gi_soldoutSegmentTextEnd - _object_gi_soldoutSegmentTextStart );
        _object_gi_soldoutSegmentDataStart = .;
            build/baserom/object_gi_soldout.o (.data)
        _object_gi_soldoutSegmentDataEnd = .;
    _object_gi_soldoutSegmentDataSize = ABSOLUTE( _object_gi_soldoutSegmentDataEnd - _object_gi_soldoutSegmentDataStart );
        _object_gi_soldoutSegmentRoDataStart = .;
            build/baserom/object_gi_soldout.o (.rodata)
        _object_gi_soldoutSegmentRoDataEnd = .;
    _object_gi_soldoutSegmentRoDataSize = ABSOLUTE( _object_gi_soldoutSegmentRoDataEnd - _object_gi_soldoutSegmentRoDataStart );
        _object_gi_soldoutSegmentSDataStart = .;
            build/baserom/object_gi_soldout.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_soldoutSegmentSDataEnd = .;
        _object_gi_soldoutSegmentOvlStart = .;
            build/baserom/object_gi_soldout.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_soldoutSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_soldoutSegmentOvlEnd - _object_gi_soldoutSegmentTextStart );
    _object_gi_soldoutSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_soldout.bss ADDR(..object_gi_soldout) + SIZEOF(..object_gi_soldout) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_soldoutSegmentBssStart = .;
            build/baserom/object_gi_soldout.o (.sbss)
            build/baserom/object_gi_soldout.o (.scommon)
            build/baserom/object_gi_soldout.o (.bss)
            build/baserom/object_gi_soldout.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_soldoutSegmentBssEnd = .;
        _object_gi_soldoutSegmentEnd = .;
    }
    _object_gi_soldoutSegmentBssSize = ABSOLUTE( _object_gi_soldoutSegmentBssEnd - _object_gi_soldoutSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_frogSegmentRomStart = _RomSize;
    ..object_gi_frog : AT(_RomSize)
    {
        _object_gi_frogSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_frogSegmentTextStart = .;
            build/baserom/object_gi_frog.o (.text)
        _object_gi_frogSegmentTextEnd = .;
    _object_gi_frogSegmentTextSize = ABSOLUTE( _object_gi_frogSegmentTextEnd - _object_gi_frogSegmentTextStart );
        _object_gi_frogSegmentDataStart = .;
            build/baserom/object_gi_frog.o (.data)
        _object_gi_frogSegmentDataEnd = .;
    _object_gi_frogSegmentDataSize = ABSOLUTE( _object_gi_frogSegmentDataEnd - _object_gi_frogSegmentDataStart );
        _object_gi_frogSegmentRoDataStart = .;
            build/baserom/object_gi_frog.o (.rodata)
        _object_gi_frogSegmentRoDataEnd = .;
    _object_gi_frogSegmentRoDataSize = ABSOLUTE( _object_gi_frogSegmentRoDataEnd - _object_gi_frogSegmentRoDataStart );
        _object_gi_frogSegmentSDataStart = .;
            build/baserom/object_gi_frog.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_frogSegmentSDataEnd = .;
        _object_gi_frogSegmentOvlStart = .;
            build/baserom/object_gi_frog.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_frogSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_frogSegmentOvlEnd - _object_gi_frogSegmentTextStart );
    _object_gi_frogSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_frog.bss ADDR(..object_gi_frog) + SIZEOF(..object_gi_frog) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_frogSegmentBssStart = .;
            build/baserom/object_gi_frog.o (.sbss)
            build/baserom/object_gi_frog.o (.scommon)
            build/baserom/object_gi_frog.o (.bss)
            build/baserom/object_gi_frog.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_frogSegmentBssEnd = .;
        _object_gi_frogSegmentEnd = .;
    }
    _object_gi_frogSegmentBssSize = ABSOLUTE( _object_gi_frogSegmentBssEnd - _object_gi_frogSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_magSegmentRomStart = _RomSize;
    ..object_mag : AT(_RomSize)
    {
        _object_magSegmentStart = .;
        . = ALIGN(0x10);
        _object_magSegmentTextStart = .;
            build/baserom/object_mag.o (.text)
        _object_magSegmentTextEnd = .;
    _object_magSegmentTextSize = ABSOLUTE( _object_magSegmentTextEnd - _object_magSegmentTextStart );
        _object_magSegmentDataStart = .;
            build/baserom/object_mag.o (.data)
        _object_magSegmentDataEnd = .;
    _object_magSegmentDataSize = ABSOLUTE( _object_magSegmentDataEnd - _object_magSegmentDataStart );
        _object_magSegmentRoDataStart = .;
            build/baserom/object_mag.o (.rodata)
        _object_magSegmentRoDataEnd = .;
    _object_magSegmentRoDataSize = ABSOLUTE( _object_magSegmentRoDataEnd - _object_magSegmentRoDataStart );
        _object_magSegmentSDataStart = .;
            build/baserom/object_mag.o (.sdata)
        . = ALIGN(0x10);
        _object_magSegmentSDataEnd = .;
        _object_magSegmentOvlStart = .;
            build/baserom/object_mag.o (.ovl)
        . = ALIGN(0x10);
        _object_magSegmentOvlEnd = .;
    }
    _RomSize += ( _object_magSegmentOvlEnd - _object_magSegmentTextStart );
    _object_magSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mag.bss ADDR(..object_mag) + SIZEOF(..object_mag) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_magSegmentBssStart = .;
            build/baserom/object_mag.o (.sbss)
            build/baserom/object_mag.o (.scommon)
            build/baserom/object_mag.o (.bss)
            build/baserom/object_mag.o (COMMON)
        . = ALIGN(0x10);
        _object_magSegmentBssEnd = .;
        _object_magSegmentEnd = .;
    }
    _object_magSegmentBssSize = ABSOLUTE( _object_magSegmentBssEnd - _object_magSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_door_gerudoSegmentRomStart = _RomSize;
    ..object_door_gerudo : AT(_RomSize)
    {
        _object_door_gerudoSegmentStart = .;
        . = ALIGN(0x10);
        _object_door_gerudoSegmentTextStart = .;
            build/baserom/object_door_gerudo.o (.text)
        _object_door_gerudoSegmentTextEnd = .;
    _object_door_gerudoSegmentTextSize = ABSOLUTE( _object_door_gerudoSegmentTextEnd - _object_door_gerudoSegmentTextStart );
        _object_door_gerudoSegmentDataStart = .;
            build/baserom/object_door_gerudo.o (.data)
        _object_door_gerudoSegmentDataEnd = .;
    _object_door_gerudoSegmentDataSize = ABSOLUTE( _object_door_gerudoSegmentDataEnd - _object_door_gerudoSegmentDataStart );
        _object_door_gerudoSegmentRoDataStart = .;
            build/baserom/object_door_gerudo.o (.rodata)
        _object_door_gerudoSegmentRoDataEnd = .;
    _object_door_gerudoSegmentRoDataSize = ABSOLUTE( _object_door_gerudoSegmentRoDataEnd - _object_door_gerudoSegmentRoDataStart );
        _object_door_gerudoSegmentSDataStart = .;
            build/baserom/object_door_gerudo.o (.sdata)
        . = ALIGN(0x10);
        _object_door_gerudoSegmentSDataEnd = .;
        _object_door_gerudoSegmentOvlStart = .;
            build/baserom/object_door_gerudo.o (.ovl)
        . = ALIGN(0x10);
        _object_door_gerudoSegmentOvlEnd = .;
    }
    _RomSize += ( _object_door_gerudoSegmentOvlEnd - _object_door_gerudoSegmentTextStart );
    _object_door_gerudoSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_door_gerudo.bss ADDR(..object_door_gerudo) + SIZEOF(..object_door_gerudo) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_door_gerudoSegmentBssStart = .;
            build/baserom/object_door_gerudo.o (.sbss)
            build/baserom/object_door_gerudo.o (.scommon)
            build/baserom/object_door_gerudo.o (.bss)
            build/baserom/object_door_gerudo.o (COMMON)
        . = ALIGN(0x10);
        _object_door_gerudoSegmentBssEnd = .;
        _object_door_gerudoSegmentEnd = .;
    }
    _object_door_gerudoSegmentBssSize = ABSOLUTE( _object_door_gerudoSegmentBssEnd - _object_door_gerudoSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gtSegmentRomStart = _RomSize;
    ..object_gt : AT(_RomSize)
    {
        _object_gtSegmentStart = .;
        . = ALIGN(0x10);
        _object_gtSegmentTextStart = .;
            build/baserom/object_gt.o (.text)
        _object_gtSegmentTextEnd = .;
    _object_gtSegmentTextSize = ABSOLUTE( _object_gtSegmentTextEnd - _object_gtSegmentTextStart );
        _object_gtSegmentDataStart = .;
            build/baserom/object_gt.o (.data)
        _object_gtSegmentDataEnd = .;
    _object_gtSegmentDataSize = ABSOLUTE( _object_gtSegmentDataEnd - _object_gtSegmentDataStart );
        _object_gtSegmentRoDataStart = .;
            build/baserom/object_gt.o (.rodata)
        _object_gtSegmentRoDataEnd = .;
    _object_gtSegmentRoDataSize = ABSOLUTE( _object_gtSegmentRoDataEnd - _object_gtSegmentRoDataStart );
        _object_gtSegmentSDataStart = .;
            build/baserom/object_gt.o (.sdata)
        . = ALIGN(0x10);
        _object_gtSegmentSDataEnd = .;
        _object_gtSegmentOvlStart = .;
            build/baserom/object_gt.o (.ovl)
        . = ALIGN(0x10);
        _object_gtSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gtSegmentOvlEnd - _object_gtSegmentTextStart );
    _object_gtSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gt.bss ADDR(..object_gt) + SIZEOF(..object_gt) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gtSegmentBssStart = .;
            build/baserom/object_gt.o (.sbss)
            build/baserom/object_gt.o (.scommon)
            build/baserom/object_gt.o (.bss)
            build/baserom/object_gt.o (COMMON)
        . = ALIGN(0x10);
        _object_gtSegmentBssEnd = .;
        _object_gtSegmentEnd = .;
    }
    _object_gtSegmentBssSize = ABSOLUTE( _object_gtSegmentBssEnd - _object_gtSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_efc_erupcSegmentRomStart = _RomSize;
    ..object_efc_erupc : AT(_RomSize)
    {
        _object_efc_erupcSegmentStart = .;
        . = ALIGN(0x10);
        _object_efc_erupcSegmentTextStart = .;
            build/baserom/object_efc_erupc.o (.text)
        _object_efc_erupcSegmentTextEnd = .;
    _object_efc_erupcSegmentTextSize = ABSOLUTE( _object_efc_erupcSegmentTextEnd - _object_efc_erupcSegmentTextStart );
        _object_efc_erupcSegmentDataStart = .;
            build/baserom/object_efc_erupc.o (.data)
        _object_efc_erupcSegmentDataEnd = .;
    _object_efc_erupcSegmentDataSize = ABSOLUTE( _object_efc_erupcSegmentDataEnd - _object_efc_erupcSegmentDataStart );
        _object_efc_erupcSegmentRoDataStart = .;
            build/baserom/object_efc_erupc.o (.rodata)
        _object_efc_erupcSegmentRoDataEnd = .;
    _object_efc_erupcSegmentRoDataSize = ABSOLUTE( _object_efc_erupcSegmentRoDataEnd - _object_efc_erupcSegmentRoDataStart );
        _object_efc_erupcSegmentSDataStart = .;
            build/baserom/object_efc_erupc.o (.sdata)
        . = ALIGN(0x10);
        _object_efc_erupcSegmentSDataEnd = .;
        _object_efc_erupcSegmentOvlStart = .;
            build/baserom/object_efc_erupc.o (.ovl)
        . = ALIGN(0x10);
        _object_efc_erupcSegmentOvlEnd = .;
    }
    _RomSize += ( _object_efc_erupcSegmentOvlEnd - _object_efc_erupcSegmentTextStart );
    _object_efc_erupcSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_efc_erupc.bss ADDR(..object_efc_erupc) + SIZEOF(..object_efc_erupc) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_efc_erupcSegmentBssStart = .;
            build/baserom/object_efc_erupc.o (.sbss)
            build/baserom/object_efc_erupc.o (.scommon)
            build/baserom/object_efc_erupc.o (.bss)
            build/baserom/object_efc_erupc.o (COMMON)
        . = ALIGN(0x10);
        _object_efc_erupcSegmentBssEnd = .;
        _object_efc_erupcSegmentEnd = .;
    }
    _object_efc_erupcSegmentBssSize = ABSOLUTE( _object_efc_erupcSegmentBssEnd - _object_efc_erupcSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_zl2_anime1SegmentRomStart = _RomSize;
    ..object_zl2_anime1 : AT(_RomSize)
    {
        _object_zl2_anime1SegmentStart = .;
        . = ALIGN(0x10);
        _object_zl2_anime1SegmentTextStart = .;
            build/baserom/object_zl2_anime1.o (.text)
        _object_zl2_anime1SegmentTextEnd = .;
    _object_zl2_anime1SegmentTextSize = ABSOLUTE( _object_zl2_anime1SegmentTextEnd - _object_zl2_anime1SegmentTextStart );
        _object_zl2_anime1SegmentDataStart = .;
            build/baserom/object_zl2_anime1.o (.data)
        _object_zl2_anime1SegmentDataEnd = .;
    _object_zl2_anime1SegmentDataSize = ABSOLUTE( _object_zl2_anime1SegmentDataEnd - _object_zl2_anime1SegmentDataStart );
        _object_zl2_anime1SegmentRoDataStart = .;
            build/baserom/object_zl2_anime1.o (.rodata)
        _object_zl2_anime1SegmentRoDataEnd = .;
    _object_zl2_anime1SegmentRoDataSize = ABSOLUTE( _object_zl2_anime1SegmentRoDataEnd - _object_zl2_anime1SegmentRoDataStart );
        _object_zl2_anime1SegmentSDataStart = .;
            build/baserom/object_zl2_anime1.o (.sdata)
        . = ALIGN(0x10);
        _object_zl2_anime1SegmentSDataEnd = .;
        _object_zl2_anime1SegmentOvlStart = .;
            build/baserom/object_zl2_anime1.o (.ovl)
        . = ALIGN(0x10);
        _object_zl2_anime1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_zl2_anime1SegmentOvlEnd - _object_zl2_anime1SegmentTextStart );
    _object_zl2_anime1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_zl2_anime1.bss ADDR(..object_zl2_anime1) + SIZEOF(..object_zl2_anime1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_zl2_anime1SegmentBssStart = .;
            build/baserom/object_zl2_anime1.o (.sbss)
            build/baserom/object_zl2_anime1.o (.scommon)
            build/baserom/object_zl2_anime1.o (.bss)
            build/baserom/object_zl2_anime1.o (COMMON)
        . = ALIGN(0x10);
        _object_zl2_anime1SegmentBssEnd = .;
        _object_zl2_anime1SegmentEnd = .;
    }
    _object_zl2_anime1SegmentBssSize = ABSOLUTE( _object_zl2_anime1SegmentBssEnd - _object_zl2_anime1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_zl2_anime2SegmentRomStart = _RomSize;
    ..object_zl2_anime2 : AT(_RomSize)
    {
        _object_zl2_anime2SegmentStart = .;
        . = ALIGN(0x10);
        _object_zl2_anime2SegmentTextStart = .;
            build/baserom/object_zl2_anime2.o (.text)
        _object_zl2_anime2SegmentTextEnd = .;
    _object_zl2_anime2SegmentTextSize = ABSOLUTE( _object_zl2_anime2SegmentTextEnd - _object_zl2_anime2SegmentTextStart );
        _object_zl2_anime2SegmentDataStart = .;
            build/baserom/object_zl2_anime2.o (.data)
        _object_zl2_anime2SegmentDataEnd = .;
    _object_zl2_anime2SegmentDataSize = ABSOLUTE( _object_zl2_anime2SegmentDataEnd - _object_zl2_anime2SegmentDataStart );
        _object_zl2_anime2SegmentRoDataStart = .;
            build/baserom/object_zl2_anime2.o (.rodata)
        _object_zl2_anime2SegmentRoDataEnd = .;
    _object_zl2_anime2SegmentRoDataSize = ABSOLUTE( _object_zl2_anime2SegmentRoDataEnd - _object_zl2_anime2SegmentRoDataStart );
        _object_zl2_anime2SegmentSDataStart = .;
            build/baserom/object_zl2_anime2.o (.sdata)
        . = ALIGN(0x10);
        _object_zl2_anime2SegmentSDataEnd = .;
        _object_zl2_anime2SegmentOvlStart = .;
            build/baserom/object_zl2_anime2.o (.ovl)
        . = ALIGN(0x10);
        _object_zl2_anime2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_zl2_anime2SegmentOvlEnd - _object_zl2_anime2SegmentTextStart );
    _object_zl2_anime2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_zl2_anime2.bss ADDR(..object_zl2_anime2) + SIZEOF(..object_zl2_anime2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_zl2_anime2SegmentBssStart = .;
            build/baserom/object_zl2_anime2.o (.sbss)
            build/baserom/object_zl2_anime2.o (.scommon)
            build/baserom/object_zl2_anime2.o (.bss)
            build/baserom/object_zl2_anime2.o (COMMON)
        . = ALIGN(0x10);
        _object_zl2_anime2SegmentBssEnd = .;
        _object_zl2_anime2SegmentEnd = .;
    }
    _object_zl2_anime2SegmentBssSize = ABSOLUTE( _object_zl2_anime2SegmentBssEnd - _object_zl2_anime2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_golonmaskSegmentRomStart = _RomSize;
    ..object_gi_golonmask : AT(_RomSize)
    {
        _object_gi_golonmaskSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_golonmaskSegmentTextStart = .;
            build/baserom/object_gi_golonmask.o (.text)
        _object_gi_golonmaskSegmentTextEnd = .;
    _object_gi_golonmaskSegmentTextSize = ABSOLUTE( _object_gi_golonmaskSegmentTextEnd - _object_gi_golonmaskSegmentTextStart );
        _object_gi_golonmaskSegmentDataStart = .;
            build/baserom/object_gi_golonmask.o (.data)
        _object_gi_golonmaskSegmentDataEnd = .;
    _object_gi_golonmaskSegmentDataSize = ABSOLUTE( _object_gi_golonmaskSegmentDataEnd - _object_gi_golonmaskSegmentDataStart );
        _object_gi_golonmaskSegmentRoDataStart = .;
            build/baserom/object_gi_golonmask.o (.rodata)
        _object_gi_golonmaskSegmentRoDataEnd = .;
    _object_gi_golonmaskSegmentRoDataSize = ABSOLUTE( _object_gi_golonmaskSegmentRoDataEnd - _object_gi_golonmaskSegmentRoDataStart );
        _object_gi_golonmaskSegmentSDataStart = .;
            build/baserom/object_gi_golonmask.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_golonmaskSegmentSDataEnd = .;
        _object_gi_golonmaskSegmentOvlStart = .;
            build/baserom/object_gi_golonmask.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_golonmaskSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_golonmaskSegmentOvlEnd - _object_gi_golonmaskSegmentTextStart );
    _object_gi_golonmaskSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_golonmask.bss ADDR(..object_gi_golonmask) + SIZEOF(..object_gi_golonmask) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_golonmaskSegmentBssStart = .;
            build/baserom/object_gi_golonmask.o (.sbss)
            build/baserom/object_gi_golonmask.o (.scommon)
            build/baserom/object_gi_golonmask.o (.bss)
            build/baserom/object_gi_golonmask.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_golonmaskSegmentBssEnd = .;
        _object_gi_golonmaskSegmentEnd = .;
    }
    _object_gi_golonmaskSegmentBssSize = ABSOLUTE( _object_gi_golonmaskSegmentBssEnd - _object_gi_golonmaskSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_zoramaskSegmentRomStart = _RomSize;
    ..object_gi_zoramask : AT(_RomSize)
    {
        _object_gi_zoramaskSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_zoramaskSegmentTextStart = .;
            build/baserom/object_gi_zoramask.o (.text)
        _object_gi_zoramaskSegmentTextEnd = .;
    _object_gi_zoramaskSegmentTextSize = ABSOLUTE( _object_gi_zoramaskSegmentTextEnd - _object_gi_zoramaskSegmentTextStart );
        _object_gi_zoramaskSegmentDataStart = .;
            build/baserom/object_gi_zoramask.o (.data)
        _object_gi_zoramaskSegmentDataEnd = .;
    _object_gi_zoramaskSegmentDataSize = ABSOLUTE( _object_gi_zoramaskSegmentDataEnd - _object_gi_zoramaskSegmentDataStart );
        _object_gi_zoramaskSegmentRoDataStart = .;
            build/baserom/object_gi_zoramask.o (.rodata)
        _object_gi_zoramaskSegmentRoDataEnd = .;
    _object_gi_zoramaskSegmentRoDataSize = ABSOLUTE( _object_gi_zoramaskSegmentRoDataEnd - _object_gi_zoramaskSegmentRoDataStart );
        _object_gi_zoramaskSegmentSDataStart = .;
            build/baserom/object_gi_zoramask.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_zoramaskSegmentSDataEnd = .;
        _object_gi_zoramaskSegmentOvlStart = .;
            build/baserom/object_gi_zoramask.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_zoramaskSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_zoramaskSegmentOvlEnd - _object_gi_zoramaskSegmentTextStart );
    _object_gi_zoramaskSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_zoramask.bss ADDR(..object_gi_zoramask) + SIZEOF(..object_gi_zoramask) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_zoramaskSegmentBssStart = .;
            build/baserom/object_gi_zoramask.o (.sbss)
            build/baserom/object_gi_zoramask.o (.scommon)
            build/baserom/object_gi_zoramask.o (.bss)
            build/baserom/object_gi_zoramask.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_zoramaskSegmentBssEnd = .;
        _object_gi_zoramaskSegmentEnd = .;
    }
    _object_gi_zoramaskSegmentBssSize = ABSOLUTE( _object_gi_zoramaskSegmentBssEnd - _object_gi_zoramaskSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_gerudomaskSegmentRomStart = _RomSize;
    ..object_gi_gerudomask : AT(_RomSize)
    {
        _object_gi_gerudomaskSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_gerudomaskSegmentTextStart = .;
            build/baserom/object_gi_gerudomask.o (.text)
        _object_gi_gerudomaskSegmentTextEnd = .;
    _object_gi_gerudomaskSegmentTextSize = ABSOLUTE( _object_gi_gerudomaskSegmentTextEnd - _object_gi_gerudomaskSegmentTextStart );
        _object_gi_gerudomaskSegmentDataStart = .;
            build/baserom/object_gi_gerudomask.o (.data)
        _object_gi_gerudomaskSegmentDataEnd = .;
    _object_gi_gerudomaskSegmentDataSize = ABSOLUTE( _object_gi_gerudomaskSegmentDataEnd - _object_gi_gerudomaskSegmentDataStart );
        _object_gi_gerudomaskSegmentRoDataStart = .;
            build/baserom/object_gi_gerudomask.o (.rodata)
        _object_gi_gerudomaskSegmentRoDataEnd = .;
    _object_gi_gerudomaskSegmentRoDataSize = ABSOLUTE( _object_gi_gerudomaskSegmentRoDataEnd - _object_gi_gerudomaskSegmentRoDataStart );
        _object_gi_gerudomaskSegmentSDataStart = .;
            build/baserom/object_gi_gerudomask.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_gerudomaskSegmentSDataEnd = .;
        _object_gi_gerudomaskSegmentOvlStart = .;
            build/baserom/object_gi_gerudomask.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_gerudomaskSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_gerudomaskSegmentOvlEnd - _object_gi_gerudomaskSegmentTextStart );
    _object_gi_gerudomaskSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_gerudomask.bss ADDR(..object_gi_gerudomask) + SIZEOF(..object_gi_gerudomask) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_gerudomaskSegmentBssStart = .;
            build/baserom/object_gi_gerudomask.o (.sbss)
            build/baserom/object_gi_gerudomask.o (.scommon)
            build/baserom/object_gi_gerudomask.o (.bss)
            build/baserom/object_gi_gerudomask.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_gerudomaskSegmentBssEnd = .;
        _object_gi_gerudomaskSegmentEnd = .;
    }
    _object_gi_gerudomaskSegmentBssSize = ABSOLUTE( _object_gi_gerudomaskSegmentBssEnd - _object_gi_gerudomaskSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ganon2SegmentRomStart = _RomSize;
    ..object_ganon2 : AT(_RomSize)
    {
        _object_ganon2SegmentStart = .;
        . = ALIGN(0x10);
        _object_ganon2SegmentTextStart = .;
            build/baserom/object_ganon2.o (.text)
        _object_ganon2SegmentTextEnd = .;
    _object_ganon2SegmentTextSize = ABSOLUTE( _object_ganon2SegmentTextEnd - _object_ganon2SegmentTextStart );
        _object_ganon2SegmentDataStart = .;
            build/baserom/object_ganon2.o (.data)
        _object_ganon2SegmentDataEnd = .;
    _object_ganon2SegmentDataSize = ABSOLUTE( _object_ganon2SegmentDataEnd - _object_ganon2SegmentDataStart );
        _object_ganon2SegmentRoDataStart = .;
            build/baserom/object_ganon2.o (.rodata)
        _object_ganon2SegmentRoDataEnd = .;
    _object_ganon2SegmentRoDataSize = ABSOLUTE( _object_ganon2SegmentRoDataEnd - _object_ganon2SegmentRoDataStart );
        _object_ganon2SegmentSDataStart = .;
            build/baserom/object_ganon2.o (.sdata)
        . = ALIGN(0x10);
        _object_ganon2SegmentSDataEnd = .;
        _object_ganon2SegmentOvlStart = .;
            build/baserom/object_ganon2.o (.ovl)
        . = ALIGN(0x10);
        _object_ganon2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_ganon2SegmentOvlEnd - _object_ganon2SegmentTextStart );
    _object_ganon2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ganon2.bss ADDR(..object_ganon2) + SIZEOF(..object_ganon2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ganon2SegmentBssStart = .;
            build/baserom/object_ganon2.o (.sbss)
            build/baserom/object_ganon2.o (.scommon)
            build/baserom/object_ganon2.o (.bss)
            build/baserom/object_ganon2.o (COMMON)
        . = ALIGN(0x10);
        _object_ganon2SegmentBssEnd = .;
        _object_ganon2SegmentEnd = .;
    }
    _object_ganon2SegmentBssSize = ABSOLUTE( _object_ganon2SegmentBssEnd - _object_ganon2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_kaSegmentRomStart = _RomSize;
    ..object_ka : AT(_RomSize)
    {
        _object_kaSegmentStart = .;
        . = ALIGN(0x10);
        _object_kaSegmentTextStart = .;
            build/baserom/object_ka.o (.text)
        _object_kaSegmentTextEnd = .;
    _object_kaSegmentTextSize = ABSOLUTE( _object_kaSegmentTextEnd - _object_kaSegmentTextStart );
        _object_kaSegmentDataStart = .;
            build/baserom/object_ka.o (.data)
        _object_kaSegmentDataEnd = .;
    _object_kaSegmentDataSize = ABSOLUTE( _object_kaSegmentDataEnd - _object_kaSegmentDataStart );
        _object_kaSegmentRoDataStart = .;
            build/baserom/object_ka.o (.rodata)
        _object_kaSegmentRoDataEnd = .;
    _object_kaSegmentRoDataSize = ABSOLUTE( _object_kaSegmentRoDataEnd - _object_kaSegmentRoDataStart );
        _object_kaSegmentSDataStart = .;
            build/baserom/object_ka.o (.sdata)
        . = ALIGN(0x10);
        _object_kaSegmentSDataEnd = .;
        _object_kaSegmentOvlStart = .;
            build/baserom/object_ka.o (.ovl)
        . = ALIGN(0x10);
        _object_kaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_kaSegmentOvlEnd - _object_kaSegmentTextStart );
    _object_kaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ka.bss ADDR(..object_ka) + SIZEOF(..object_ka) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_kaSegmentBssStart = .;
            build/baserom/object_ka.o (.sbss)
            build/baserom/object_ka.o (.scommon)
            build/baserom/object_ka.o (.bss)
            build/baserom/object_ka.o (COMMON)
        . = ALIGN(0x10);
        _object_kaSegmentBssEnd = .;
        _object_kaSegmentEnd = .;
    }
    _object_kaSegmentBssSize = ABSOLUTE( _object_kaSegmentBssEnd - _object_kaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_tsSegmentRomStart = _RomSize;
    ..object_ts : AT(_RomSize)
    {
        _object_tsSegmentStart = .;
        . = ALIGN(0x10);
        _object_tsSegmentTextStart = .;
            build/baserom/object_ts.o (.text)
        _object_tsSegmentTextEnd = .;
    _object_tsSegmentTextSize = ABSOLUTE( _object_tsSegmentTextEnd - _object_tsSegmentTextStart );
        _object_tsSegmentDataStart = .;
            build/baserom/object_ts.o (.data)
        _object_tsSegmentDataEnd = .;
    _object_tsSegmentDataSize = ABSOLUTE( _object_tsSegmentDataEnd - _object_tsSegmentDataStart );
        _object_tsSegmentRoDataStart = .;
            build/baserom/object_ts.o (.rodata)
        _object_tsSegmentRoDataEnd = .;
    _object_tsSegmentRoDataSize = ABSOLUTE( _object_tsSegmentRoDataEnd - _object_tsSegmentRoDataStart );
        _object_tsSegmentSDataStart = .;
            build/baserom/object_ts.o (.sdata)
        . = ALIGN(0x10);
        _object_tsSegmentSDataEnd = .;
        _object_tsSegmentOvlStart = .;
            build/baserom/object_ts.o (.ovl)
        . = ALIGN(0x10);
        _object_tsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_tsSegmentOvlEnd - _object_tsSegmentTextStart );
    _object_tsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ts.bss ADDR(..object_ts) + SIZEOF(..object_ts) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_tsSegmentBssStart = .;
            build/baserom/object_ts.o (.sbss)
            build/baserom/object_ts.o (.scommon)
            build/baserom/object_ts.o (.bss)
            build/baserom/object_ts.o (COMMON)
        . = ALIGN(0x10);
        _object_tsSegmentBssEnd = .;
        _object_tsSegmentEnd = .;
    }
    _object_tsSegmentBssSize = ABSOLUTE( _object_tsSegmentBssEnd - _object_tsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_zgSegmentRomStart = _RomSize;
    ..object_zg : AT(_RomSize)
    {
        _object_zgSegmentStart = .;
        . = ALIGN(0x10);
        _object_zgSegmentTextStart = .;
            build/baserom/object_zg.o (.text)
        _object_zgSegmentTextEnd = .;
    _object_zgSegmentTextSize = ABSOLUTE( _object_zgSegmentTextEnd - _object_zgSegmentTextStart );
        _object_zgSegmentDataStart = .;
            build/baserom/object_zg.o (.data)
        _object_zgSegmentDataEnd = .;
    _object_zgSegmentDataSize = ABSOLUTE( _object_zgSegmentDataEnd - _object_zgSegmentDataStart );
        _object_zgSegmentRoDataStart = .;
            build/baserom/object_zg.o (.rodata)
        _object_zgSegmentRoDataEnd = .;
    _object_zgSegmentRoDataSize = ABSOLUTE( _object_zgSegmentRoDataEnd - _object_zgSegmentRoDataStart );
        _object_zgSegmentSDataStart = .;
            build/baserom/object_zg.o (.sdata)
        . = ALIGN(0x10);
        _object_zgSegmentSDataEnd = .;
        _object_zgSegmentOvlStart = .;
            build/baserom/object_zg.o (.ovl)
        . = ALIGN(0x10);
        _object_zgSegmentOvlEnd = .;
    }
    _RomSize += ( _object_zgSegmentOvlEnd - _object_zgSegmentTextStart );
    _object_zgSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_zg.bss ADDR(..object_zg) + SIZEOF(..object_zg) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_zgSegmentBssStart = .;
            build/baserom/object_zg.o (.sbss)
            build/baserom/object_zg.o (.scommon)
            build/baserom/object_zg.o (.bss)
            build/baserom/object_zg.o (COMMON)
        . = ALIGN(0x10);
        _object_zgSegmentBssEnd = .;
        _object_zgSegmentEnd = .;
    }
    _object_zgSegmentBssSize = ABSOLUTE( _object_zgSegmentBssEnd - _object_zgSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_hoverbootsSegmentRomStart = _RomSize;
    ..object_gi_hoverboots : AT(_RomSize)
    {
        _object_gi_hoverbootsSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_hoverbootsSegmentTextStart = .;
            build/baserom/object_gi_hoverboots.o (.text)
        _object_gi_hoverbootsSegmentTextEnd = .;
    _object_gi_hoverbootsSegmentTextSize = ABSOLUTE( _object_gi_hoverbootsSegmentTextEnd - _object_gi_hoverbootsSegmentTextStart );
        _object_gi_hoverbootsSegmentDataStart = .;
            build/baserom/object_gi_hoverboots.o (.data)
        _object_gi_hoverbootsSegmentDataEnd = .;
    _object_gi_hoverbootsSegmentDataSize = ABSOLUTE( _object_gi_hoverbootsSegmentDataEnd - _object_gi_hoverbootsSegmentDataStart );
        _object_gi_hoverbootsSegmentRoDataStart = .;
            build/baserom/object_gi_hoverboots.o (.rodata)
        _object_gi_hoverbootsSegmentRoDataEnd = .;
    _object_gi_hoverbootsSegmentRoDataSize = ABSOLUTE( _object_gi_hoverbootsSegmentRoDataEnd - _object_gi_hoverbootsSegmentRoDataStart );
        _object_gi_hoverbootsSegmentSDataStart = .;
            build/baserom/object_gi_hoverboots.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_hoverbootsSegmentSDataEnd = .;
        _object_gi_hoverbootsSegmentOvlStart = .;
            build/baserom/object_gi_hoverboots.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_hoverbootsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_hoverbootsSegmentOvlEnd - _object_gi_hoverbootsSegmentTextStart );
    _object_gi_hoverbootsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_hoverboots.bss ADDR(..object_gi_hoverboots) + SIZEOF(..object_gi_hoverboots) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_hoverbootsSegmentBssStart = .;
            build/baserom/object_gi_hoverboots.o (.sbss)
            build/baserom/object_gi_hoverboots.o (.scommon)
            build/baserom/object_gi_hoverboots.o (.bss)
            build/baserom/object_gi_hoverboots.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_hoverbootsSegmentBssEnd = .;
        _object_gi_hoverbootsSegmentEnd = .;
    }
    _object_gi_hoverbootsSegmentBssSize = ABSOLUTE( _object_gi_hoverbootsSegmentBssEnd - _object_gi_hoverbootsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_m_arrowSegmentRomStart = _RomSize;
    ..object_gi_m_arrow : AT(_RomSize)
    {
        _object_gi_m_arrowSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_m_arrowSegmentTextStart = .;
            build/baserom/object_gi_m_arrow.o (.text)
        _object_gi_m_arrowSegmentTextEnd = .;
    _object_gi_m_arrowSegmentTextSize = ABSOLUTE( _object_gi_m_arrowSegmentTextEnd - _object_gi_m_arrowSegmentTextStart );
        _object_gi_m_arrowSegmentDataStart = .;
            build/baserom/object_gi_m_arrow.o (.data)
        _object_gi_m_arrowSegmentDataEnd = .;
    _object_gi_m_arrowSegmentDataSize = ABSOLUTE( _object_gi_m_arrowSegmentDataEnd - _object_gi_m_arrowSegmentDataStart );
        _object_gi_m_arrowSegmentRoDataStart = .;
            build/baserom/object_gi_m_arrow.o (.rodata)
        _object_gi_m_arrowSegmentRoDataEnd = .;
    _object_gi_m_arrowSegmentRoDataSize = ABSOLUTE( _object_gi_m_arrowSegmentRoDataEnd - _object_gi_m_arrowSegmentRoDataStart );
        _object_gi_m_arrowSegmentSDataStart = .;
            build/baserom/object_gi_m_arrow.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_m_arrowSegmentSDataEnd = .;
        _object_gi_m_arrowSegmentOvlStart = .;
            build/baserom/object_gi_m_arrow.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_m_arrowSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_m_arrowSegmentOvlEnd - _object_gi_m_arrowSegmentTextStart );
    _object_gi_m_arrowSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_m_arrow.bss ADDR(..object_gi_m_arrow) + SIZEOF(..object_gi_m_arrow) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_m_arrowSegmentBssStart = .;
            build/baserom/object_gi_m_arrow.o (.sbss)
            build/baserom/object_gi_m_arrow.o (.scommon)
            build/baserom/object_gi_m_arrow.o (.bss)
            build/baserom/object_gi_m_arrow.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_m_arrowSegmentBssEnd = .;
        _object_gi_m_arrowSegmentEnd = .;
    }
    _object_gi_m_arrowSegmentBssSize = ABSOLUTE( _object_gi_m_arrowSegmentBssEnd - _object_gi_m_arrowSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ds2SegmentRomStart = _RomSize;
    ..object_ds2 : AT(_RomSize)
    {
        _object_ds2SegmentStart = .;
        . = ALIGN(0x10);
        _object_ds2SegmentTextStart = .;
            build/baserom/object_ds2.o (.text)
        _object_ds2SegmentTextEnd = .;
    _object_ds2SegmentTextSize = ABSOLUTE( _object_ds2SegmentTextEnd - _object_ds2SegmentTextStart );
        _object_ds2SegmentDataStart = .;
            build/baserom/object_ds2.o (.data)
        _object_ds2SegmentDataEnd = .;
    _object_ds2SegmentDataSize = ABSOLUTE( _object_ds2SegmentDataEnd - _object_ds2SegmentDataStart );
        _object_ds2SegmentRoDataStart = .;
            build/baserom/object_ds2.o (.rodata)
        _object_ds2SegmentRoDataEnd = .;
    _object_ds2SegmentRoDataSize = ABSOLUTE( _object_ds2SegmentRoDataEnd - _object_ds2SegmentRoDataStart );
        _object_ds2SegmentSDataStart = .;
            build/baserom/object_ds2.o (.sdata)
        . = ALIGN(0x10);
        _object_ds2SegmentSDataEnd = .;
        _object_ds2SegmentOvlStart = .;
            build/baserom/object_ds2.o (.ovl)
        . = ALIGN(0x10);
        _object_ds2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_ds2SegmentOvlEnd - _object_ds2SegmentTextStart );
    _object_ds2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ds2.bss ADDR(..object_ds2) + SIZEOF(..object_ds2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ds2SegmentBssStart = .;
            build/baserom/object_ds2.o (.sbss)
            build/baserom/object_ds2.o (.scommon)
            build/baserom/object_ds2.o (.bss)
            build/baserom/object_ds2.o (COMMON)
        . = ALIGN(0x10);
        _object_ds2SegmentBssEnd = .;
        _object_ds2SegmentEnd = .;
    }
    _object_ds2SegmentBssSize = ABSOLUTE( _object_ds2SegmentBssEnd - _object_ds2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ecSegmentRomStart = _RomSize;
    ..object_ec : AT(_RomSize)
    {
        _object_ecSegmentStart = .;
        . = ALIGN(0x10);
        _object_ecSegmentTextStart = .;
            build/baserom/object_ec.o (.text)
        _object_ecSegmentTextEnd = .;
    _object_ecSegmentTextSize = ABSOLUTE( _object_ecSegmentTextEnd - _object_ecSegmentTextStart );
        _object_ecSegmentDataStart = .;
            build/baserom/object_ec.o (.data)
        _object_ecSegmentDataEnd = .;
    _object_ecSegmentDataSize = ABSOLUTE( _object_ecSegmentDataEnd - _object_ecSegmentDataStart );
        _object_ecSegmentRoDataStart = .;
            build/baserom/object_ec.o (.rodata)
        _object_ecSegmentRoDataEnd = .;
    _object_ecSegmentRoDataSize = ABSOLUTE( _object_ecSegmentRoDataEnd - _object_ecSegmentRoDataStart );
        _object_ecSegmentSDataStart = .;
            build/baserom/object_ec.o (.sdata)
        . = ALIGN(0x10);
        _object_ecSegmentSDataEnd = .;
        _object_ecSegmentOvlStart = .;
            build/baserom/object_ec.o (.ovl)
        . = ALIGN(0x10);
        _object_ecSegmentOvlEnd = .;
    }
    _RomSize += ( _object_ecSegmentOvlEnd - _object_ecSegmentTextStart );
    _object_ecSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ec.bss ADDR(..object_ec) + SIZEOF(..object_ec) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ecSegmentBssStart = .;
            build/baserom/object_ec.o (.sbss)
            build/baserom/object_ec.o (.scommon)
            build/baserom/object_ec.o (.bss)
            build/baserom/object_ec.o (COMMON)
        . = ALIGN(0x10);
        _object_ecSegmentBssEnd = .;
        _object_ecSegmentEnd = .;
    }
    _object_ecSegmentBssSize = ABSOLUTE( _object_ecSegmentBssEnd - _object_ecSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_fishSegmentRomStart = _RomSize;
    ..object_fish : AT(_RomSize)
    {
        _object_fishSegmentStart = .;
        . = ALIGN(0x10);
        _object_fishSegmentTextStart = .;
            build/baserom/object_fish.o (.text)
        _object_fishSegmentTextEnd = .;
    _object_fishSegmentTextSize = ABSOLUTE( _object_fishSegmentTextEnd - _object_fishSegmentTextStart );
        _object_fishSegmentDataStart = .;
            build/baserom/object_fish.o (.data)
        _object_fishSegmentDataEnd = .;
    _object_fishSegmentDataSize = ABSOLUTE( _object_fishSegmentDataEnd - _object_fishSegmentDataStart );
        _object_fishSegmentRoDataStart = .;
            build/baserom/object_fish.o (.rodata)
        _object_fishSegmentRoDataEnd = .;
    _object_fishSegmentRoDataSize = ABSOLUTE( _object_fishSegmentRoDataEnd - _object_fishSegmentRoDataStart );
        _object_fishSegmentSDataStart = .;
            build/baserom/object_fish.o (.sdata)
        . = ALIGN(0x10);
        _object_fishSegmentSDataEnd = .;
        _object_fishSegmentOvlStart = .;
            build/baserom/object_fish.o (.ovl)
        . = ALIGN(0x10);
        _object_fishSegmentOvlEnd = .;
    }
    _RomSize += ( _object_fishSegmentOvlEnd - _object_fishSegmentTextStart );
    _object_fishSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_fish.bss ADDR(..object_fish) + SIZEOF(..object_fish) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_fishSegmentBssStart = .;
            build/baserom/object_fish.o (.sbss)
            build/baserom/object_fish.o (.scommon)
            build/baserom/object_fish.o (.bss)
            build/baserom/object_fish.o (COMMON)
        . = ALIGN(0x10);
        _object_fishSegmentBssEnd = .;
        _object_fishSegmentEnd = .;
    }
    _object_fishSegmentBssSize = ABSOLUTE( _object_fishSegmentBssEnd - _object_fishSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_sutaruSegmentRomStart = _RomSize;
    ..object_gi_sutaru : AT(_RomSize)
    {
        _object_gi_sutaruSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_sutaruSegmentTextStart = .;
            build/baserom/object_gi_sutaru.o (.text)
        _object_gi_sutaruSegmentTextEnd = .;
    _object_gi_sutaruSegmentTextSize = ABSOLUTE( _object_gi_sutaruSegmentTextEnd - _object_gi_sutaruSegmentTextStart );
        _object_gi_sutaruSegmentDataStart = .;
            build/baserom/object_gi_sutaru.o (.data)
        _object_gi_sutaruSegmentDataEnd = .;
    _object_gi_sutaruSegmentDataSize = ABSOLUTE( _object_gi_sutaruSegmentDataEnd - _object_gi_sutaruSegmentDataStart );
        _object_gi_sutaruSegmentRoDataStart = .;
            build/baserom/object_gi_sutaru.o (.rodata)
        _object_gi_sutaruSegmentRoDataEnd = .;
    _object_gi_sutaruSegmentRoDataSize = ABSOLUTE( _object_gi_sutaruSegmentRoDataEnd - _object_gi_sutaruSegmentRoDataStart );
        _object_gi_sutaruSegmentSDataStart = .;
            build/baserom/object_gi_sutaru.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_sutaruSegmentSDataEnd = .;
        _object_gi_sutaruSegmentOvlStart = .;
            build/baserom/object_gi_sutaru.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_sutaruSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_sutaruSegmentOvlEnd - _object_gi_sutaruSegmentTextStart );
    _object_gi_sutaruSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_sutaru.bss ADDR(..object_gi_sutaru) + SIZEOF(..object_gi_sutaru) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_sutaruSegmentBssStart = .;
            build/baserom/object_gi_sutaru.o (.sbss)
            build/baserom/object_gi_sutaru.o (.scommon)
            build/baserom/object_gi_sutaru.o (.bss)
            build/baserom/object_gi_sutaru.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_sutaruSegmentBssEnd = .;
        _object_gi_sutaruSegmentEnd = .;
    }
    _object_gi_sutaruSegmentBssSize = ABSOLUTE( _object_gi_sutaruSegmentBssEnd - _object_gi_sutaruSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_goddessSegmentRomStart = _RomSize;
    ..object_gi_goddess : AT(_RomSize)
    {
        _object_gi_goddessSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_goddessSegmentTextStart = .;
            build/baserom/object_gi_goddess.o (.text)
        _object_gi_goddessSegmentTextEnd = .;
    _object_gi_goddessSegmentTextSize = ABSOLUTE( _object_gi_goddessSegmentTextEnd - _object_gi_goddessSegmentTextStart );
        _object_gi_goddessSegmentDataStart = .;
            build/baserom/object_gi_goddess.o (.data)
        _object_gi_goddessSegmentDataEnd = .;
    _object_gi_goddessSegmentDataSize = ABSOLUTE( _object_gi_goddessSegmentDataEnd - _object_gi_goddessSegmentDataStart );
        _object_gi_goddessSegmentRoDataStart = .;
            build/baserom/object_gi_goddess.o (.rodata)
        _object_gi_goddessSegmentRoDataEnd = .;
    _object_gi_goddessSegmentRoDataSize = ABSOLUTE( _object_gi_goddessSegmentRoDataEnd - _object_gi_goddessSegmentRoDataStart );
        _object_gi_goddessSegmentSDataStart = .;
            build/baserom/object_gi_goddess.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_goddessSegmentSDataEnd = .;
        _object_gi_goddessSegmentOvlStart = .;
            build/baserom/object_gi_goddess.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_goddessSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_goddessSegmentOvlEnd - _object_gi_goddessSegmentTextStart );
    _object_gi_goddessSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_goddess.bss ADDR(..object_gi_goddess) + SIZEOF(..object_gi_goddess) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_goddessSegmentBssStart = .;
            build/baserom/object_gi_goddess.o (.sbss)
            build/baserom/object_gi_goddess.o (.scommon)
            build/baserom/object_gi_goddess.o (.bss)
            build/baserom/object_gi_goddess.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_goddessSegmentBssEnd = .;
        _object_gi_goddessSegmentEnd = .;
    }
    _object_gi_goddessSegmentBssSize = ABSOLUTE( _object_gi_goddessSegmentBssEnd - _object_gi_goddessSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_sshSegmentRomStart = _RomSize;
    ..object_ssh : AT(_RomSize)
    {
        _object_sshSegmentStart = .;
        . = ALIGN(0x10);
        _object_sshSegmentTextStart = .;
            build/baserom/object_ssh.o (.text)
        _object_sshSegmentTextEnd = .;
    _object_sshSegmentTextSize = ABSOLUTE( _object_sshSegmentTextEnd - _object_sshSegmentTextStart );
        _object_sshSegmentDataStart = .;
            build/baserom/object_ssh.o (.data)
        _object_sshSegmentDataEnd = .;
    _object_sshSegmentDataSize = ABSOLUTE( _object_sshSegmentDataEnd - _object_sshSegmentDataStart );
        _object_sshSegmentRoDataStart = .;
            build/baserom/object_ssh.o (.rodata)
        _object_sshSegmentRoDataEnd = .;
    _object_sshSegmentRoDataSize = ABSOLUTE( _object_sshSegmentRoDataEnd - _object_sshSegmentRoDataStart );
        _object_sshSegmentSDataStart = .;
            build/baserom/object_ssh.o (.sdata)
        . = ALIGN(0x10);
        _object_sshSegmentSDataEnd = .;
        _object_sshSegmentOvlStart = .;
            build/baserom/object_ssh.o (.ovl)
        . = ALIGN(0x10);
        _object_sshSegmentOvlEnd = .;
    }
    _RomSize += ( _object_sshSegmentOvlEnd - _object_sshSegmentTextStart );
    _object_sshSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ssh.bss ADDR(..object_ssh) + SIZEOF(..object_ssh) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_sshSegmentBssStart = .;
            build/baserom/object_ssh.o (.sbss)
            build/baserom/object_ssh.o (.scommon)
            build/baserom/object_ssh.o (.bss)
            build/baserom/object_ssh.o (COMMON)
        . = ALIGN(0x10);
        _object_sshSegmentBssEnd = .;
        _object_sshSegmentEnd = .;
    }
    _object_sshSegmentBssSize = ABSOLUTE( _object_sshSegmentBssEnd - _object_sshSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bigokutaSegmentRomStart = _RomSize;
    ..object_bigokuta : AT(_RomSize)
    {
        _object_bigokutaSegmentStart = .;
        . = ALIGN(0x10);
        _object_bigokutaSegmentTextStart = .;
            build/baserom/object_bigokuta.o (.text)
        _object_bigokutaSegmentTextEnd = .;
    _object_bigokutaSegmentTextSize = ABSOLUTE( _object_bigokutaSegmentTextEnd - _object_bigokutaSegmentTextStart );
        _object_bigokutaSegmentDataStart = .;
            build/baserom/object_bigokuta.o (.data)
        _object_bigokutaSegmentDataEnd = .;
    _object_bigokutaSegmentDataSize = ABSOLUTE( _object_bigokutaSegmentDataEnd - _object_bigokutaSegmentDataStart );
        _object_bigokutaSegmentRoDataStart = .;
            build/baserom/object_bigokuta.o (.rodata)
        _object_bigokutaSegmentRoDataEnd = .;
    _object_bigokutaSegmentRoDataSize = ABSOLUTE( _object_bigokutaSegmentRoDataEnd - _object_bigokutaSegmentRoDataStart );
        _object_bigokutaSegmentSDataStart = .;
            build/baserom/object_bigokuta.o (.sdata)
        . = ALIGN(0x10);
        _object_bigokutaSegmentSDataEnd = .;
        _object_bigokutaSegmentOvlStart = .;
            build/baserom/object_bigokuta.o (.ovl)
        . = ALIGN(0x10);
        _object_bigokutaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bigokutaSegmentOvlEnd - _object_bigokutaSegmentTextStart );
    _object_bigokutaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bigokuta.bss ADDR(..object_bigokuta) + SIZEOF(..object_bigokuta) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bigokutaSegmentBssStart = .;
            build/baserom/object_bigokuta.o (.sbss)
            build/baserom/object_bigokuta.o (.scommon)
            build/baserom/object_bigokuta.o (.bss)
            build/baserom/object_bigokuta.o (COMMON)
        . = ALIGN(0x10);
        _object_bigokutaSegmentBssEnd = .;
        _object_bigokutaSegmentEnd = .;
    }
    _object_bigokutaSegmentBssSize = ABSOLUTE( _object_bigokutaSegmentBssEnd - _object_bigokutaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bgSegmentRomStart = _RomSize;
    ..object_bg : AT(_RomSize)
    {
        _object_bgSegmentStart = .;
        . = ALIGN(0x10);
        _object_bgSegmentTextStart = .;
            build/baserom/object_bg.o (.text)
        _object_bgSegmentTextEnd = .;
    _object_bgSegmentTextSize = ABSOLUTE( _object_bgSegmentTextEnd - _object_bgSegmentTextStart );
        _object_bgSegmentDataStart = .;
            build/baserom/object_bg.o (.data)
        _object_bgSegmentDataEnd = .;
    _object_bgSegmentDataSize = ABSOLUTE( _object_bgSegmentDataEnd - _object_bgSegmentDataStart );
        _object_bgSegmentRoDataStart = .;
            build/baserom/object_bg.o (.rodata)
        _object_bgSegmentRoDataEnd = .;
    _object_bgSegmentRoDataSize = ABSOLUTE( _object_bgSegmentRoDataEnd - _object_bgSegmentRoDataStart );
        _object_bgSegmentSDataStart = .;
            build/baserom/object_bg.o (.sdata)
        . = ALIGN(0x10);
        _object_bgSegmentSDataEnd = .;
        _object_bgSegmentOvlStart = .;
            build/baserom/object_bg.o (.ovl)
        . = ALIGN(0x10);
        _object_bgSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bgSegmentOvlEnd - _object_bgSegmentTextStart );
    _object_bgSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bg.bss ADDR(..object_bg) + SIZEOF(..object_bg) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bgSegmentBssStart = .;
            build/baserom/object_bg.o (.sbss)
            build/baserom/object_bg.o (.scommon)
            build/baserom/object_bg.o (.bss)
            build/baserom/object_bg.o (COMMON)
        . = ALIGN(0x10);
        _object_bgSegmentBssEnd = .;
        _object_bgSegmentEnd = .;
    }
    _object_bgSegmentBssSize = ABSOLUTE( _object_bgSegmentBssEnd - _object_bgSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot05_objectsSegmentRomStart = _RomSize;
    ..object_spot05_objects : AT(_RomSize)
    {
        _object_spot05_objectsSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot05_objectsSegmentTextStart = .;
            build/baserom/object_spot05_objects.o (.text)
        _object_spot05_objectsSegmentTextEnd = .;
    _object_spot05_objectsSegmentTextSize = ABSOLUTE( _object_spot05_objectsSegmentTextEnd - _object_spot05_objectsSegmentTextStart );
        _object_spot05_objectsSegmentDataStart = .;
            build/baserom/object_spot05_objects.o (.data)
        _object_spot05_objectsSegmentDataEnd = .;
    _object_spot05_objectsSegmentDataSize = ABSOLUTE( _object_spot05_objectsSegmentDataEnd - _object_spot05_objectsSegmentDataStart );
        _object_spot05_objectsSegmentRoDataStart = .;
            build/baserom/object_spot05_objects.o (.rodata)
        _object_spot05_objectsSegmentRoDataEnd = .;
    _object_spot05_objectsSegmentRoDataSize = ABSOLUTE( _object_spot05_objectsSegmentRoDataEnd - _object_spot05_objectsSegmentRoDataStart );
        _object_spot05_objectsSegmentSDataStart = .;
            build/baserom/object_spot05_objects.o (.sdata)
        . = ALIGN(0x10);
        _object_spot05_objectsSegmentSDataEnd = .;
        _object_spot05_objectsSegmentOvlStart = .;
            build/baserom/object_spot05_objects.o (.ovl)
        . = ALIGN(0x10);
        _object_spot05_objectsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot05_objectsSegmentOvlEnd - _object_spot05_objectsSegmentTextStart );
    _object_spot05_objectsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot05_objects.bss ADDR(..object_spot05_objects) + SIZEOF(..object_spot05_objects) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot05_objectsSegmentBssStart = .;
            build/baserom/object_spot05_objects.o (.sbss)
            build/baserom/object_spot05_objects.o (.scommon)
            build/baserom/object_spot05_objects.o (.bss)
            build/baserom/object_spot05_objects.o (COMMON)
        . = ALIGN(0x10);
        _object_spot05_objectsSegmentBssEnd = .;
        _object_spot05_objectsSegmentEnd = .;
    }
    _object_spot05_objectsSegmentBssSize = ABSOLUTE( _object_spot05_objectsSegmentBssEnd - _object_spot05_objectsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot12_objSegmentRomStart = _RomSize;
    ..object_spot12_obj : AT(_RomSize)
    {
        _object_spot12_objSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot12_objSegmentTextStart = .;
            build/baserom/object_spot12_obj.o (.text)
        _object_spot12_objSegmentTextEnd = .;
    _object_spot12_objSegmentTextSize = ABSOLUTE( _object_spot12_objSegmentTextEnd - _object_spot12_objSegmentTextStart );
        _object_spot12_objSegmentDataStart = .;
            build/baserom/object_spot12_obj.o (.data)
        _object_spot12_objSegmentDataEnd = .;
    _object_spot12_objSegmentDataSize = ABSOLUTE( _object_spot12_objSegmentDataEnd - _object_spot12_objSegmentDataStart );
        _object_spot12_objSegmentRoDataStart = .;
            build/baserom/object_spot12_obj.o (.rodata)
        _object_spot12_objSegmentRoDataEnd = .;
    _object_spot12_objSegmentRoDataSize = ABSOLUTE( _object_spot12_objSegmentRoDataEnd - _object_spot12_objSegmentRoDataStart );
        _object_spot12_objSegmentSDataStart = .;
            build/baserom/object_spot12_obj.o (.sdata)
        . = ALIGN(0x10);
        _object_spot12_objSegmentSDataEnd = .;
        _object_spot12_objSegmentOvlStart = .;
            build/baserom/object_spot12_obj.o (.ovl)
        . = ALIGN(0x10);
        _object_spot12_objSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot12_objSegmentOvlEnd - _object_spot12_objSegmentTextStart );
    _object_spot12_objSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot12_obj.bss ADDR(..object_spot12_obj) + SIZEOF(..object_spot12_obj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot12_objSegmentBssStart = .;
            build/baserom/object_spot12_obj.o (.sbss)
            build/baserom/object_spot12_obj.o (.scommon)
            build/baserom/object_spot12_obj.o (.bss)
            build/baserom/object_spot12_obj.o (COMMON)
        . = ALIGN(0x10);
        _object_spot12_objSegmentBssEnd = .;
        _object_spot12_objSegmentEnd = .;
    }
    _object_spot12_objSegmentBssSize = ABSOLUTE( _object_spot12_objSegmentBssEnd - _object_spot12_objSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bombiwaSegmentRomStart = _RomSize;
    ..object_bombiwa : AT(_RomSize)
    {
        _object_bombiwaSegmentStart = .;
        . = ALIGN(0x10);
        _object_bombiwaSegmentTextStart = .;
            build/baserom/object_bombiwa.o (.text)
        _object_bombiwaSegmentTextEnd = .;
    _object_bombiwaSegmentTextSize = ABSOLUTE( _object_bombiwaSegmentTextEnd - _object_bombiwaSegmentTextStart );
        _object_bombiwaSegmentDataStart = .;
            build/baserom/object_bombiwa.o (.data)
        _object_bombiwaSegmentDataEnd = .;
    _object_bombiwaSegmentDataSize = ABSOLUTE( _object_bombiwaSegmentDataEnd - _object_bombiwaSegmentDataStart );
        _object_bombiwaSegmentRoDataStart = .;
            build/baserom/object_bombiwa.o (.rodata)
        _object_bombiwaSegmentRoDataEnd = .;
    _object_bombiwaSegmentRoDataSize = ABSOLUTE( _object_bombiwaSegmentRoDataEnd - _object_bombiwaSegmentRoDataStart );
        _object_bombiwaSegmentSDataStart = .;
            build/baserom/object_bombiwa.o (.sdata)
        . = ALIGN(0x10);
        _object_bombiwaSegmentSDataEnd = .;
        _object_bombiwaSegmentOvlStart = .;
            build/baserom/object_bombiwa.o (.ovl)
        . = ALIGN(0x10);
        _object_bombiwaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bombiwaSegmentOvlEnd - _object_bombiwaSegmentTextStart );
    _object_bombiwaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bombiwa.bss ADDR(..object_bombiwa) + SIZEOF(..object_bombiwa) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bombiwaSegmentBssStart = .;
            build/baserom/object_bombiwa.o (.sbss)
            build/baserom/object_bombiwa.o (.scommon)
            build/baserom/object_bombiwa.o (.bss)
            build/baserom/object_bombiwa.o (COMMON)
        . = ALIGN(0x10);
        _object_bombiwaSegmentBssEnd = .;
        _object_bombiwaSegmentEnd = .;
    }
    _object_bombiwaSegmentBssSize = ABSOLUTE( _object_bombiwaSegmentBssEnd - _object_bombiwaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_hintnutsSegmentRomStart = _RomSize;
    ..object_hintnuts : AT(_RomSize)
    {
        _object_hintnutsSegmentStart = .;
        . = ALIGN(0x10);
        _object_hintnutsSegmentTextStart = .;
            build/baserom/object_hintnuts.o (.text)
        _object_hintnutsSegmentTextEnd = .;
    _object_hintnutsSegmentTextSize = ABSOLUTE( _object_hintnutsSegmentTextEnd - _object_hintnutsSegmentTextStart );
        _object_hintnutsSegmentDataStart = .;
            build/baserom/object_hintnuts.o (.data)
        _object_hintnutsSegmentDataEnd = .;
    _object_hintnutsSegmentDataSize = ABSOLUTE( _object_hintnutsSegmentDataEnd - _object_hintnutsSegmentDataStart );
        _object_hintnutsSegmentRoDataStart = .;
            build/baserom/object_hintnuts.o (.rodata)
        _object_hintnutsSegmentRoDataEnd = .;
    _object_hintnutsSegmentRoDataSize = ABSOLUTE( _object_hintnutsSegmentRoDataEnd - _object_hintnutsSegmentRoDataStart );
        _object_hintnutsSegmentSDataStart = .;
            build/baserom/object_hintnuts.o (.sdata)
        . = ALIGN(0x10);
        _object_hintnutsSegmentSDataEnd = .;
        _object_hintnutsSegmentOvlStart = .;
            build/baserom/object_hintnuts.o (.ovl)
        . = ALIGN(0x10);
        _object_hintnutsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_hintnutsSegmentOvlEnd - _object_hintnutsSegmentTextStart );
    _object_hintnutsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_hintnuts.bss ADDR(..object_hintnuts) + SIZEOF(..object_hintnuts) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_hintnutsSegmentBssStart = .;
            build/baserom/object_hintnuts.o (.sbss)
            build/baserom/object_hintnuts.o (.scommon)
            build/baserom/object_hintnuts.o (.bss)
            build/baserom/object_hintnuts.o (COMMON)
        . = ALIGN(0x10);
        _object_hintnutsSegmentBssEnd = .;
        _object_hintnutsSegmentEnd = .;
    }
    _object_hintnutsSegmentBssSize = ABSOLUTE( _object_hintnutsSegmentBssEnd - _object_hintnutsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_rsSegmentRomStart = _RomSize;
    ..object_rs : AT(_RomSize)
    {
        _object_rsSegmentStart = .;
        . = ALIGN(0x10);
        _object_rsSegmentTextStart = .;
            build/baserom/object_rs.o (.text)
        _object_rsSegmentTextEnd = .;
    _object_rsSegmentTextSize = ABSOLUTE( _object_rsSegmentTextEnd - _object_rsSegmentTextStart );
        _object_rsSegmentDataStart = .;
            build/baserom/object_rs.o (.data)
        _object_rsSegmentDataEnd = .;
    _object_rsSegmentDataSize = ABSOLUTE( _object_rsSegmentDataEnd - _object_rsSegmentDataStart );
        _object_rsSegmentRoDataStart = .;
            build/baserom/object_rs.o (.rodata)
        _object_rsSegmentRoDataEnd = .;
    _object_rsSegmentRoDataSize = ABSOLUTE( _object_rsSegmentRoDataEnd - _object_rsSegmentRoDataStart );
        _object_rsSegmentSDataStart = .;
            build/baserom/object_rs.o (.sdata)
        . = ALIGN(0x10);
        _object_rsSegmentSDataEnd = .;
        _object_rsSegmentOvlStart = .;
            build/baserom/object_rs.o (.ovl)
        . = ALIGN(0x10);
        _object_rsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_rsSegmentOvlEnd - _object_rsSegmentTextStart );
    _object_rsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_rs.bss ADDR(..object_rs) + SIZEOF(..object_rs) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_rsSegmentBssStart = .;
            build/baserom/object_rs.o (.sbss)
            build/baserom/object_rs.o (.scommon)
            build/baserom/object_rs.o (.bss)
            build/baserom/object_rs.o (COMMON)
        . = ALIGN(0x10);
        _object_rsSegmentBssEnd = .;
        _object_rsSegmentEnd = .;
    }
    _object_rsSegmentBssSize = ABSOLUTE( _object_rsSegmentBssEnd - _object_rsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot00_breakSegmentRomStart = _RomSize;
    ..object_spot00_break : AT(_RomSize)
    {
        _object_spot00_breakSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot00_breakSegmentTextStart = .;
            build/baserom/object_spot00_break.o (.text)
        _object_spot00_breakSegmentTextEnd = .;
    _object_spot00_breakSegmentTextSize = ABSOLUTE( _object_spot00_breakSegmentTextEnd - _object_spot00_breakSegmentTextStart );
        _object_spot00_breakSegmentDataStart = .;
            build/baserom/object_spot00_break.o (.data)
        _object_spot00_breakSegmentDataEnd = .;
    _object_spot00_breakSegmentDataSize = ABSOLUTE( _object_spot00_breakSegmentDataEnd - _object_spot00_breakSegmentDataStart );
        _object_spot00_breakSegmentRoDataStart = .;
            build/baserom/object_spot00_break.o (.rodata)
        _object_spot00_breakSegmentRoDataEnd = .;
    _object_spot00_breakSegmentRoDataSize = ABSOLUTE( _object_spot00_breakSegmentRoDataEnd - _object_spot00_breakSegmentRoDataStart );
        _object_spot00_breakSegmentSDataStart = .;
            build/baserom/object_spot00_break.o (.sdata)
        . = ALIGN(0x10);
        _object_spot00_breakSegmentSDataEnd = .;
        _object_spot00_breakSegmentOvlStart = .;
            build/baserom/object_spot00_break.o (.ovl)
        . = ALIGN(0x10);
        _object_spot00_breakSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot00_breakSegmentOvlEnd - _object_spot00_breakSegmentTextStart );
    _object_spot00_breakSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot00_break.bss ADDR(..object_spot00_break) + SIZEOF(..object_spot00_break) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot00_breakSegmentBssStart = .;
            build/baserom/object_spot00_break.o (.sbss)
            build/baserom/object_spot00_break.o (.scommon)
            build/baserom/object_spot00_break.o (.bss)
            build/baserom/object_spot00_break.o (COMMON)
        . = ALIGN(0x10);
        _object_spot00_breakSegmentBssEnd = .;
        _object_spot00_breakSegmentEnd = .;
    }
    _object_spot00_breakSegmentBssSize = ABSOLUTE( _object_spot00_breakSegmentBssEnd - _object_spot00_breakSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_glaSegmentRomStart = _RomSize;
    ..object_gla : AT(_RomSize)
    {
        _object_glaSegmentStart = .;
        . = ALIGN(0x10);
        _object_glaSegmentTextStart = .;
            build/baserom/object_gla.o (.text)
        _object_glaSegmentTextEnd = .;
    _object_glaSegmentTextSize = ABSOLUTE( _object_glaSegmentTextEnd - _object_glaSegmentTextStart );
        _object_glaSegmentDataStart = .;
            build/baserom/object_gla.o (.data)
        _object_glaSegmentDataEnd = .;
    _object_glaSegmentDataSize = ABSOLUTE( _object_glaSegmentDataEnd - _object_glaSegmentDataStart );
        _object_glaSegmentRoDataStart = .;
            build/baserom/object_gla.o (.rodata)
        _object_glaSegmentRoDataEnd = .;
    _object_glaSegmentRoDataSize = ABSOLUTE( _object_glaSegmentRoDataEnd - _object_glaSegmentRoDataStart );
        _object_glaSegmentSDataStart = .;
            build/baserom/object_gla.o (.sdata)
        . = ALIGN(0x10);
        _object_glaSegmentSDataEnd = .;
        _object_glaSegmentOvlStart = .;
            build/baserom/object_gla.o (.ovl)
        . = ALIGN(0x10);
        _object_glaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_glaSegmentOvlEnd - _object_glaSegmentTextStart );
    _object_glaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gla.bss ADDR(..object_gla) + SIZEOF(..object_gla) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_glaSegmentBssStart = .;
            build/baserom/object_gla.o (.sbss)
            build/baserom/object_gla.o (.scommon)
            build/baserom/object_gla.o (.bss)
            build/baserom/object_gla.o (COMMON)
        . = ALIGN(0x10);
        _object_glaSegmentBssEnd = .;
        _object_glaSegmentEnd = .;
    }
    _object_glaSegmentBssSize = ABSOLUTE( _object_glaSegmentBssEnd - _object_glaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_shopnutsSegmentRomStart = _RomSize;
    ..object_shopnuts : AT(_RomSize)
    {
        _object_shopnutsSegmentStart = .;
        . = ALIGN(0x10);
        _object_shopnutsSegmentTextStart = .;
            build/baserom/object_shopnuts.o (.text)
        _object_shopnutsSegmentTextEnd = .;
    _object_shopnutsSegmentTextSize = ABSOLUTE( _object_shopnutsSegmentTextEnd - _object_shopnutsSegmentTextStart );
        _object_shopnutsSegmentDataStart = .;
            build/baserom/object_shopnuts.o (.data)
        _object_shopnutsSegmentDataEnd = .;
    _object_shopnutsSegmentDataSize = ABSOLUTE( _object_shopnutsSegmentDataEnd - _object_shopnutsSegmentDataStart );
        _object_shopnutsSegmentRoDataStart = .;
            build/baserom/object_shopnuts.o (.rodata)
        _object_shopnutsSegmentRoDataEnd = .;
    _object_shopnutsSegmentRoDataSize = ABSOLUTE( _object_shopnutsSegmentRoDataEnd - _object_shopnutsSegmentRoDataStart );
        _object_shopnutsSegmentSDataStart = .;
            build/baserom/object_shopnuts.o (.sdata)
        . = ALIGN(0x10);
        _object_shopnutsSegmentSDataEnd = .;
        _object_shopnutsSegmentOvlStart = .;
            build/baserom/object_shopnuts.o (.ovl)
        . = ALIGN(0x10);
        _object_shopnutsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_shopnutsSegmentOvlEnd - _object_shopnutsSegmentTextStart );
    _object_shopnutsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_shopnuts.bss ADDR(..object_shopnuts) + SIZEOF(..object_shopnuts) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_shopnutsSegmentBssStart = .;
            build/baserom/object_shopnuts.o (.sbss)
            build/baserom/object_shopnuts.o (.scommon)
            build/baserom/object_shopnuts.o (.bss)
            build/baserom/object_shopnuts.o (COMMON)
        . = ALIGN(0x10);
        _object_shopnutsSegmentBssEnd = .;
        _object_shopnutsSegmentEnd = .;
    }
    _object_shopnutsSegmentBssSize = ABSOLUTE( _object_shopnutsSegmentBssEnd - _object_shopnutsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_geldbSegmentRomStart = _RomSize;
    ..object_geldb : AT(_RomSize)
    {
        _object_geldbSegmentStart = .;
        . = ALIGN(0x10);
        _object_geldbSegmentTextStart = .;
            build/baserom/object_geldb.o (.text)
        _object_geldbSegmentTextEnd = .;
    _object_geldbSegmentTextSize = ABSOLUTE( _object_geldbSegmentTextEnd - _object_geldbSegmentTextStart );
        _object_geldbSegmentDataStart = .;
            build/baserom/object_geldb.o (.data)
        _object_geldbSegmentDataEnd = .;
    _object_geldbSegmentDataSize = ABSOLUTE( _object_geldbSegmentDataEnd - _object_geldbSegmentDataStart );
        _object_geldbSegmentRoDataStart = .;
            build/baserom/object_geldb.o (.rodata)
        _object_geldbSegmentRoDataEnd = .;
    _object_geldbSegmentRoDataSize = ABSOLUTE( _object_geldbSegmentRoDataEnd - _object_geldbSegmentRoDataStart );
        _object_geldbSegmentSDataStart = .;
            build/baserom/object_geldb.o (.sdata)
        . = ALIGN(0x10);
        _object_geldbSegmentSDataEnd = .;
        _object_geldbSegmentOvlStart = .;
            build/baserom/object_geldb.o (.ovl)
        . = ALIGN(0x10);
        _object_geldbSegmentOvlEnd = .;
    }
    _RomSize += ( _object_geldbSegmentOvlEnd - _object_geldbSegmentTextStart );
    _object_geldbSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_geldb.bss ADDR(..object_geldb) + SIZEOF(..object_geldb) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_geldbSegmentBssStart = .;
            build/baserom/object_geldb.o (.sbss)
            build/baserom/object_geldb.o (.scommon)
            build/baserom/object_geldb.o (.bss)
            build/baserom/object_geldb.o (COMMON)
        . = ALIGN(0x10);
        _object_geldbSegmentBssEnd = .;
        _object_geldbSegmentEnd = .;
    }
    _object_geldbSegmentBssSize = ABSOLUTE( _object_geldbSegmentBssEnd - _object_geldbSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_grSegmentRomStart = _RomSize;
    ..object_gr : AT(_RomSize)
    {
        _object_grSegmentStart = .;
        . = ALIGN(0x10);
        _object_grSegmentTextStart = .;
            build/baserom/object_gr.o (.text)
        _object_grSegmentTextEnd = .;
    _object_grSegmentTextSize = ABSOLUTE( _object_grSegmentTextEnd - _object_grSegmentTextStart );
        _object_grSegmentDataStart = .;
            build/baserom/object_gr.o (.data)
        _object_grSegmentDataEnd = .;
    _object_grSegmentDataSize = ABSOLUTE( _object_grSegmentDataEnd - _object_grSegmentDataStart );
        _object_grSegmentRoDataStart = .;
            build/baserom/object_gr.o (.rodata)
        _object_grSegmentRoDataEnd = .;
    _object_grSegmentRoDataSize = ABSOLUTE( _object_grSegmentRoDataEnd - _object_grSegmentRoDataStart );
        _object_grSegmentSDataStart = .;
            build/baserom/object_gr.o (.sdata)
        . = ALIGN(0x10);
        _object_grSegmentSDataEnd = .;
        _object_grSegmentOvlStart = .;
            build/baserom/object_gr.o (.ovl)
        . = ALIGN(0x10);
        _object_grSegmentOvlEnd = .;
    }
    _RomSize += ( _object_grSegmentOvlEnd - _object_grSegmentTextStart );
    _object_grSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gr.bss ADDR(..object_gr) + SIZEOF(..object_gr) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_grSegmentBssStart = .;
            build/baserom/object_gr.o (.sbss)
            build/baserom/object_gr.o (.scommon)
            build/baserom/object_gr.o (.bss)
            build/baserom/object_gr.o (COMMON)
        . = ALIGN(0x10);
        _object_grSegmentBssEnd = .;
        _object_grSegmentEnd = .;
    }
    _object_grSegmentBssSize = ABSOLUTE( _object_grSegmentBssEnd - _object_grSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_dogSegmentRomStart = _RomSize;
    ..object_dog : AT(_RomSize)
    {
        _object_dogSegmentStart = .;
        . = ALIGN(0x10);
        _object_dogSegmentTextStart = .;
            build/baserom/object_dog.o (.text)
        _object_dogSegmentTextEnd = .;
    _object_dogSegmentTextSize = ABSOLUTE( _object_dogSegmentTextEnd - _object_dogSegmentTextStart );
        _object_dogSegmentDataStart = .;
            build/baserom/object_dog.o (.data)
        _object_dogSegmentDataEnd = .;
    _object_dogSegmentDataSize = ABSOLUTE( _object_dogSegmentDataEnd - _object_dogSegmentDataStart );
        _object_dogSegmentRoDataStart = .;
            build/baserom/object_dog.o (.rodata)
        _object_dogSegmentRoDataEnd = .;
    _object_dogSegmentRoDataSize = ABSOLUTE( _object_dogSegmentRoDataEnd - _object_dogSegmentRoDataStart );
        _object_dogSegmentSDataStart = .;
            build/baserom/object_dog.o (.sdata)
        . = ALIGN(0x10);
        _object_dogSegmentSDataEnd = .;
        _object_dogSegmentOvlStart = .;
            build/baserom/object_dog.o (.ovl)
        . = ALIGN(0x10);
        _object_dogSegmentOvlEnd = .;
    }
    _RomSize += ( _object_dogSegmentOvlEnd - _object_dogSegmentTextStart );
    _object_dogSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_dog.bss ADDR(..object_dog) + SIZEOF(..object_dog) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_dogSegmentBssStart = .;
            build/baserom/object_dog.o (.sbss)
            build/baserom/object_dog.o (.scommon)
            build/baserom/object_dog.o (.bss)
            build/baserom/object_dog.o (COMMON)
        . = ALIGN(0x10);
        _object_dogSegmentBssEnd = .;
        _object_dogSegmentEnd = .;
    }
    _object_dogSegmentBssSize = ABSOLUTE( _object_dogSegmentBssEnd - _object_dogSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_jya_ironSegmentRomStart = _RomSize;
    ..object_jya_iron : AT(_RomSize)
    {
        _object_jya_ironSegmentStart = .;
        . = ALIGN(0x10);
        _object_jya_ironSegmentTextStart = .;
            build/baserom/object_jya_iron.o (.text)
        _object_jya_ironSegmentTextEnd = .;
    _object_jya_ironSegmentTextSize = ABSOLUTE( _object_jya_ironSegmentTextEnd - _object_jya_ironSegmentTextStart );
        _object_jya_ironSegmentDataStart = .;
            build/baserom/object_jya_iron.o (.data)
        _object_jya_ironSegmentDataEnd = .;
    _object_jya_ironSegmentDataSize = ABSOLUTE( _object_jya_ironSegmentDataEnd - _object_jya_ironSegmentDataStart );
        _object_jya_ironSegmentRoDataStart = .;
            build/baserom/object_jya_iron.o (.rodata)
        _object_jya_ironSegmentRoDataEnd = .;
    _object_jya_ironSegmentRoDataSize = ABSOLUTE( _object_jya_ironSegmentRoDataEnd - _object_jya_ironSegmentRoDataStart );
        _object_jya_ironSegmentSDataStart = .;
            build/baserom/object_jya_iron.o (.sdata)
        . = ALIGN(0x10);
        _object_jya_ironSegmentSDataEnd = .;
        _object_jya_ironSegmentOvlStart = .;
            build/baserom/object_jya_iron.o (.ovl)
        . = ALIGN(0x10);
        _object_jya_ironSegmentOvlEnd = .;
    }
    _RomSize += ( _object_jya_ironSegmentOvlEnd - _object_jya_ironSegmentTextStart );
    _object_jya_ironSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_jya_iron.bss ADDR(..object_jya_iron) + SIZEOF(..object_jya_iron) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_jya_ironSegmentBssStart = .;
            build/baserom/object_jya_iron.o (.sbss)
            build/baserom/object_jya_iron.o (.scommon)
            build/baserom/object_jya_iron.o (.bss)
            build/baserom/object_jya_iron.o (COMMON)
        . = ALIGN(0x10);
        _object_jya_ironSegmentBssEnd = .;
        _object_jya_ironSegmentEnd = .;
    }
    _object_jya_ironSegmentBssSize = ABSOLUTE( _object_jya_ironSegmentBssEnd - _object_jya_ironSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_jya_doorSegmentRomStart = _RomSize;
    ..object_jya_door : AT(_RomSize)
    {
        _object_jya_doorSegmentStart = .;
        . = ALIGN(0x10);
        _object_jya_doorSegmentTextStart = .;
            build/baserom/object_jya_door.o (.text)
        _object_jya_doorSegmentTextEnd = .;
    _object_jya_doorSegmentTextSize = ABSOLUTE( _object_jya_doorSegmentTextEnd - _object_jya_doorSegmentTextStart );
        _object_jya_doorSegmentDataStart = .;
            build/baserom/object_jya_door.o (.data)
        _object_jya_doorSegmentDataEnd = .;
    _object_jya_doorSegmentDataSize = ABSOLUTE( _object_jya_doorSegmentDataEnd - _object_jya_doorSegmentDataStart );
        _object_jya_doorSegmentRoDataStart = .;
            build/baserom/object_jya_door.o (.rodata)
        _object_jya_doorSegmentRoDataEnd = .;
    _object_jya_doorSegmentRoDataSize = ABSOLUTE( _object_jya_doorSegmentRoDataEnd - _object_jya_doorSegmentRoDataStart );
        _object_jya_doorSegmentSDataStart = .;
            build/baserom/object_jya_door.o (.sdata)
        . = ALIGN(0x10);
        _object_jya_doorSegmentSDataEnd = .;
        _object_jya_doorSegmentOvlStart = .;
            build/baserom/object_jya_door.o (.ovl)
        . = ALIGN(0x10);
        _object_jya_doorSegmentOvlEnd = .;
    }
    _RomSize += ( _object_jya_doorSegmentOvlEnd - _object_jya_doorSegmentTextStart );
    _object_jya_doorSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_jya_door.bss ADDR(..object_jya_door) + SIZEOF(..object_jya_door) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_jya_doorSegmentBssStart = .;
            build/baserom/object_jya_door.o (.sbss)
            build/baserom/object_jya_door.o (.scommon)
            build/baserom/object_jya_door.o (.bss)
            build/baserom/object_jya_door.o (COMMON)
        . = ALIGN(0x10);
        _object_jya_doorSegmentBssEnd = .;
        _object_jya_doorSegmentEnd = .;
    }
    _object_jya_doorSegmentBssSize = ABSOLUTE( _object_jya_doorSegmentBssEnd - _object_jya_doorSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot01_objects2SegmentRomStart = _RomSize;
    ..object_spot01_objects2 : AT(_RomSize)
    {
        _object_spot01_objects2SegmentStart = .;
        . = ALIGN(0x10);
        _object_spot01_objects2SegmentTextStart = .;
            build/baserom/object_spot01_objects2.o (.text)
        _object_spot01_objects2SegmentTextEnd = .;
    _object_spot01_objects2SegmentTextSize = ABSOLUTE( _object_spot01_objects2SegmentTextEnd - _object_spot01_objects2SegmentTextStart );
        _object_spot01_objects2SegmentDataStart = .;
            build/baserom/object_spot01_objects2.o (.data)
        _object_spot01_objects2SegmentDataEnd = .;
    _object_spot01_objects2SegmentDataSize = ABSOLUTE( _object_spot01_objects2SegmentDataEnd - _object_spot01_objects2SegmentDataStart );
        _object_spot01_objects2SegmentRoDataStart = .;
            build/baserom/object_spot01_objects2.o (.rodata)
        _object_spot01_objects2SegmentRoDataEnd = .;
    _object_spot01_objects2SegmentRoDataSize = ABSOLUTE( _object_spot01_objects2SegmentRoDataEnd - _object_spot01_objects2SegmentRoDataStart );
        _object_spot01_objects2SegmentSDataStart = .;
            build/baserom/object_spot01_objects2.o (.sdata)
        . = ALIGN(0x10);
        _object_spot01_objects2SegmentSDataEnd = .;
        _object_spot01_objects2SegmentOvlStart = .;
            build/baserom/object_spot01_objects2.o (.ovl)
        . = ALIGN(0x10);
        _object_spot01_objects2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot01_objects2SegmentOvlEnd - _object_spot01_objects2SegmentTextStart );
    _object_spot01_objects2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot01_objects2.bss ADDR(..object_spot01_objects2) + SIZEOF(..object_spot01_objects2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot01_objects2SegmentBssStart = .;
            build/baserom/object_spot01_objects2.o (.sbss)
            build/baserom/object_spot01_objects2.o (.scommon)
            build/baserom/object_spot01_objects2.o (.bss)
            build/baserom/object_spot01_objects2.o (COMMON)
        . = ALIGN(0x10);
        _object_spot01_objects2SegmentBssEnd = .;
        _object_spot01_objects2SegmentEnd = .;
    }
    _object_spot01_objects2SegmentBssSize = ABSOLUTE( _object_spot01_objects2SegmentBssEnd - _object_spot01_objects2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot11_objSegmentRomStart = _RomSize;
    ..object_spot11_obj : AT(_RomSize)
    {
        _object_spot11_objSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot11_objSegmentTextStart = .;
            build/baserom/object_spot11_obj.o (.text)
        _object_spot11_objSegmentTextEnd = .;
    _object_spot11_objSegmentTextSize = ABSOLUTE( _object_spot11_objSegmentTextEnd - _object_spot11_objSegmentTextStart );
        _object_spot11_objSegmentDataStart = .;
            build/baserom/object_spot11_obj.o (.data)
        _object_spot11_objSegmentDataEnd = .;
    _object_spot11_objSegmentDataSize = ABSOLUTE( _object_spot11_objSegmentDataEnd - _object_spot11_objSegmentDataStart );
        _object_spot11_objSegmentRoDataStart = .;
            build/baserom/object_spot11_obj.o (.rodata)
        _object_spot11_objSegmentRoDataEnd = .;
    _object_spot11_objSegmentRoDataSize = ABSOLUTE( _object_spot11_objSegmentRoDataEnd - _object_spot11_objSegmentRoDataStart );
        _object_spot11_objSegmentSDataStart = .;
            build/baserom/object_spot11_obj.o (.sdata)
        . = ALIGN(0x10);
        _object_spot11_objSegmentSDataEnd = .;
        _object_spot11_objSegmentOvlStart = .;
            build/baserom/object_spot11_obj.o (.ovl)
        . = ALIGN(0x10);
        _object_spot11_objSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot11_objSegmentOvlEnd - _object_spot11_objSegmentTextStart );
    _object_spot11_objSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot11_obj.bss ADDR(..object_spot11_obj) + SIZEOF(..object_spot11_obj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot11_objSegmentBssStart = .;
            build/baserom/object_spot11_obj.o (.sbss)
            build/baserom/object_spot11_obj.o (.scommon)
            build/baserom/object_spot11_obj.o (.bss)
            build/baserom/object_spot11_obj.o (COMMON)
        . = ALIGN(0x10);
        _object_spot11_objSegmentBssEnd = .;
        _object_spot11_objSegmentEnd = .;
    }
    _object_spot11_objSegmentBssSize = ABSOLUTE( _object_spot11_objSegmentBssEnd - _object_spot11_objSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_kibako2SegmentRomStart = _RomSize;
    ..object_kibako2 : AT(_RomSize)
    {
        _object_kibako2SegmentStart = .;
        . = ALIGN(0x10);
        _object_kibako2SegmentTextStart = .;
            build/baserom/object_kibako2.o (.text)
        _object_kibako2SegmentTextEnd = .;
    _object_kibako2SegmentTextSize = ABSOLUTE( _object_kibako2SegmentTextEnd - _object_kibako2SegmentTextStart );
        _object_kibako2SegmentDataStart = .;
            build/baserom/object_kibako2.o (.data)
        _object_kibako2SegmentDataEnd = .;
    _object_kibako2SegmentDataSize = ABSOLUTE( _object_kibako2SegmentDataEnd - _object_kibako2SegmentDataStart );
        _object_kibako2SegmentRoDataStart = .;
            build/baserom/object_kibako2.o (.rodata)
        _object_kibako2SegmentRoDataEnd = .;
    _object_kibako2SegmentRoDataSize = ABSOLUTE( _object_kibako2SegmentRoDataEnd - _object_kibako2SegmentRoDataStart );
        _object_kibako2SegmentSDataStart = .;
            build/baserom/object_kibako2.o (.sdata)
        . = ALIGN(0x10);
        _object_kibako2SegmentSDataEnd = .;
        _object_kibako2SegmentOvlStart = .;
            build/baserom/object_kibako2.o (.ovl)
        . = ALIGN(0x10);
        _object_kibako2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_kibako2SegmentOvlEnd - _object_kibako2SegmentTextStart );
    _object_kibako2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_kibako2.bss ADDR(..object_kibako2) + SIZEOF(..object_kibako2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_kibako2SegmentBssStart = .;
            build/baserom/object_kibako2.o (.sbss)
            build/baserom/object_kibako2.o (.scommon)
            build/baserom/object_kibako2.o (.bss)
            build/baserom/object_kibako2.o (COMMON)
        . = ALIGN(0x10);
        _object_kibako2SegmentBssEnd = .;
        _object_kibako2SegmentEnd = .;
    }
    _object_kibako2SegmentBssSize = ABSOLUTE( _object_kibako2SegmentBssEnd - _object_kibako2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_dnsSegmentRomStart = _RomSize;
    ..object_dns : AT(_RomSize)
    {
        _object_dnsSegmentStart = .;
        . = ALIGN(0x10);
        _object_dnsSegmentTextStart = .;
            build/baserom/object_dns.o (.text)
        _object_dnsSegmentTextEnd = .;
    _object_dnsSegmentTextSize = ABSOLUTE( _object_dnsSegmentTextEnd - _object_dnsSegmentTextStart );
        _object_dnsSegmentDataStart = .;
            build/baserom/object_dns.o (.data)
        _object_dnsSegmentDataEnd = .;
    _object_dnsSegmentDataSize = ABSOLUTE( _object_dnsSegmentDataEnd - _object_dnsSegmentDataStart );
        _object_dnsSegmentRoDataStart = .;
            build/baserom/object_dns.o (.rodata)
        _object_dnsSegmentRoDataEnd = .;
    _object_dnsSegmentRoDataSize = ABSOLUTE( _object_dnsSegmentRoDataEnd - _object_dnsSegmentRoDataStart );
        _object_dnsSegmentSDataStart = .;
            build/baserom/object_dns.o (.sdata)
        . = ALIGN(0x10);
        _object_dnsSegmentSDataEnd = .;
        _object_dnsSegmentOvlStart = .;
            build/baserom/object_dns.o (.ovl)
        . = ALIGN(0x10);
        _object_dnsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_dnsSegmentOvlEnd - _object_dnsSegmentTextStart );
    _object_dnsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_dns.bss ADDR(..object_dns) + SIZEOF(..object_dns) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_dnsSegmentBssStart = .;
            build/baserom/object_dns.o (.sbss)
            build/baserom/object_dns.o (.scommon)
            build/baserom/object_dns.o (.bss)
            build/baserom/object_dns.o (COMMON)
        . = ALIGN(0x10);
        _object_dnsSegmentBssEnd = .;
        _object_dnsSegmentEnd = .;
    }
    _object_dnsSegmentBssSize = ABSOLUTE( _object_dnsSegmentBssEnd - _object_dnsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_dnkSegmentRomStart = _RomSize;
    ..object_dnk : AT(_RomSize)
    {
        _object_dnkSegmentStart = .;
        . = ALIGN(0x10);
        _object_dnkSegmentTextStart = .;
            build/baserom/object_dnk.o (.text)
        _object_dnkSegmentTextEnd = .;
    _object_dnkSegmentTextSize = ABSOLUTE( _object_dnkSegmentTextEnd - _object_dnkSegmentTextStart );
        _object_dnkSegmentDataStart = .;
            build/baserom/object_dnk.o (.data)
        _object_dnkSegmentDataEnd = .;
    _object_dnkSegmentDataSize = ABSOLUTE( _object_dnkSegmentDataEnd - _object_dnkSegmentDataStart );
        _object_dnkSegmentRoDataStart = .;
            build/baserom/object_dnk.o (.rodata)
        _object_dnkSegmentRoDataEnd = .;
    _object_dnkSegmentRoDataSize = ABSOLUTE( _object_dnkSegmentRoDataEnd - _object_dnkSegmentRoDataStart );
        _object_dnkSegmentSDataStart = .;
            build/baserom/object_dnk.o (.sdata)
        . = ALIGN(0x10);
        _object_dnkSegmentSDataEnd = .;
        _object_dnkSegmentOvlStart = .;
            build/baserom/object_dnk.o (.ovl)
        . = ALIGN(0x10);
        _object_dnkSegmentOvlEnd = .;
    }
    _RomSize += ( _object_dnkSegmentOvlEnd - _object_dnkSegmentTextStart );
    _object_dnkSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_dnk.bss ADDR(..object_dnk) + SIZEOF(..object_dnk) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_dnkSegmentBssStart = .;
            build/baserom/object_dnk.o (.sbss)
            build/baserom/object_dnk.o (.scommon)
            build/baserom/object_dnk.o (.bss)
            build/baserom/object_dnk.o (COMMON)
        . = ALIGN(0x10);
        _object_dnkSegmentBssEnd = .;
        _object_dnkSegmentEnd = .;
    }
    _object_dnkSegmentBssSize = ABSOLUTE( _object_dnkSegmentBssEnd - _object_dnkSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_fireSegmentRomStart = _RomSize;
    ..object_gi_fire : AT(_RomSize)
    {
        _object_gi_fireSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_fireSegmentTextStart = .;
            build/baserom/object_gi_fire.o (.text)
        _object_gi_fireSegmentTextEnd = .;
    _object_gi_fireSegmentTextSize = ABSOLUTE( _object_gi_fireSegmentTextEnd - _object_gi_fireSegmentTextStart );
        _object_gi_fireSegmentDataStart = .;
            build/baserom/object_gi_fire.o (.data)
        _object_gi_fireSegmentDataEnd = .;
    _object_gi_fireSegmentDataSize = ABSOLUTE( _object_gi_fireSegmentDataEnd - _object_gi_fireSegmentDataStart );
        _object_gi_fireSegmentRoDataStart = .;
            build/baserom/object_gi_fire.o (.rodata)
        _object_gi_fireSegmentRoDataEnd = .;
    _object_gi_fireSegmentRoDataSize = ABSOLUTE( _object_gi_fireSegmentRoDataEnd - _object_gi_fireSegmentRoDataStart );
        _object_gi_fireSegmentSDataStart = .;
            build/baserom/object_gi_fire.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_fireSegmentSDataEnd = .;
        _object_gi_fireSegmentOvlStart = .;
            build/baserom/object_gi_fire.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_fireSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_fireSegmentOvlEnd - _object_gi_fireSegmentTextStart );
    _object_gi_fireSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_fire.bss ADDR(..object_gi_fire) + SIZEOF(..object_gi_fire) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_fireSegmentBssStart = .;
            build/baserom/object_gi_fire.o (.sbss)
            build/baserom/object_gi_fire.o (.scommon)
            build/baserom/object_gi_fire.o (.bss)
            build/baserom/object_gi_fire.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_fireSegmentBssEnd = .;
        _object_gi_fireSegmentEnd = .;
    }
    _object_gi_fireSegmentBssSize = ABSOLUTE( _object_gi_fireSegmentBssEnd - _object_gi_fireSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_insectSegmentRomStart = _RomSize;
    ..object_gi_insect : AT(_RomSize)
    {
        _object_gi_insectSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_insectSegmentTextStart = .;
            build/baserom/object_gi_insect.o (.text)
        _object_gi_insectSegmentTextEnd = .;
    _object_gi_insectSegmentTextSize = ABSOLUTE( _object_gi_insectSegmentTextEnd - _object_gi_insectSegmentTextStart );
        _object_gi_insectSegmentDataStart = .;
            build/baserom/object_gi_insect.o (.data)
        _object_gi_insectSegmentDataEnd = .;
    _object_gi_insectSegmentDataSize = ABSOLUTE( _object_gi_insectSegmentDataEnd - _object_gi_insectSegmentDataStart );
        _object_gi_insectSegmentRoDataStart = .;
            build/baserom/object_gi_insect.o (.rodata)
        _object_gi_insectSegmentRoDataEnd = .;
    _object_gi_insectSegmentRoDataSize = ABSOLUTE( _object_gi_insectSegmentRoDataEnd - _object_gi_insectSegmentRoDataStart );
        _object_gi_insectSegmentSDataStart = .;
            build/baserom/object_gi_insect.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_insectSegmentSDataEnd = .;
        _object_gi_insectSegmentOvlStart = .;
            build/baserom/object_gi_insect.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_insectSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_insectSegmentOvlEnd - _object_gi_insectSegmentTextStart );
    _object_gi_insectSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_insect.bss ADDR(..object_gi_insect) + SIZEOF(..object_gi_insect) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_insectSegmentBssStart = .;
            build/baserom/object_gi_insect.o (.sbss)
            build/baserom/object_gi_insect.o (.scommon)
            build/baserom/object_gi_insect.o (.bss)
            build/baserom/object_gi_insect.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_insectSegmentBssEnd = .;
        _object_gi_insectSegmentEnd = .;
    }
    _object_gi_insectSegmentBssSize = ABSOLUTE( _object_gi_insectSegmentBssEnd - _object_gi_insectSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_butterflySegmentRomStart = _RomSize;
    ..object_gi_butterfly : AT(_RomSize)
    {
        _object_gi_butterflySegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_butterflySegmentTextStart = .;
            build/baserom/object_gi_butterfly.o (.text)
        _object_gi_butterflySegmentTextEnd = .;
    _object_gi_butterflySegmentTextSize = ABSOLUTE( _object_gi_butterflySegmentTextEnd - _object_gi_butterflySegmentTextStart );
        _object_gi_butterflySegmentDataStart = .;
            build/baserom/object_gi_butterfly.o (.data)
        _object_gi_butterflySegmentDataEnd = .;
    _object_gi_butterflySegmentDataSize = ABSOLUTE( _object_gi_butterflySegmentDataEnd - _object_gi_butterflySegmentDataStart );
        _object_gi_butterflySegmentRoDataStart = .;
            build/baserom/object_gi_butterfly.o (.rodata)
        _object_gi_butterflySegmentRoDataEnd = .;
    _object_gi_butterflySegmentRoDataSize = ABSOLUTE( _object_gi_butterflySegmentRoDataEnd - _object_gi_butterflySegmentRoDataStart );
        _object_gi_butterflySegmentSDataStart = .;
            build/baserom/object_gi_butterfly.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_butterflySegmentSDataEnd = .;
        _object_gi_butterflySegmentOvlStart = .;
            build/baserom/object_gi_butterfly.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_butterflySegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_butterflySegmentOvlEnd - _object_gi_butterflySegmentTextStart );
    _object_gi_butterflySegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_butterfly.bss ADDR(..object_gi_butterfly) + SIZEOF(..object_gi_butterfly) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_butterflySegmentBssStart = .;
            build/baserom/object_gi_butterfly.o (.sbss)
            build/baserom/object_gi_butterfly.o (.scommon)
            build/baserom/object_gi_butterfly.o (.bss)
            build/baserom/object_gi_butterfly.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_butterflySegmentBssEnd = .;
        _object_gi_butterflySegmentEnd = .;
    }
    _object_gi_butterflySegmentBssSize = ABSOLUTE( _object_gi_butterflySegmentBssEnd - _object_gi_butterflySegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_ghostSegmentRomStart = _RomSize;
    ..object_gi_ghost : AT(_RomSize)
    {
        _object_gi_ghostSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_ghostSegmentTextStart = .;
            build/baserom/object_gi_ghost.o (.text)
        _object_gi_ghostSegmentTextEnd = .;
    _object_gi_ghostSegmentTextSize = ABSOLUTE( _object_gi_ghostSegmentTextEnd - _object_gi_ghostSegmentTextStart );
        _object_gi_ghostSegmentDataStart = .;
            build/baserom/object_gi_ghost.o (.data)
        _object_gi_ghostSegmentDataEnd = .;
    _object_gi_ghostSegmentDataSize = ABSOLUTE( _object_gi_ghostSegmentDataEnd - _object_gi_ghostSegmentDataStart );
        _object_gi_ghostSegmentRoDataStart = .;
            build/baserom/object_gi_ghost.o (.rodata)
        _object_gi_ghostSegmentRoDataEnd = .;
    _object_gi_ghostSegmentRoDataSize = ABSOLUTE( _object_gi_ghostSegmentRoDataEnd - _object_gi_ghostSegmentRoDataStart );
        _object_gi_ghostSegmentSDataStart = .;
            build/baserom/object_gi_ghost.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_ghostSegmentSDataEnd = .;
        _object_gi_ghostSegmentOvlStart = .;
            build/baserom/object_gi_ghost.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_ghostSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_ghostSegmentOvlEnd - _object_gi_ghostSegmentTextStart );
    _object_gi_ghostSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_ghost.bss ADDR(..object_gi_ghost) + SIZEOF(..object_gi_ghost) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_ghostSegmentBssStart = .;
            build/baserom/object_gi_ghost.o (.sbss)
            build/baserom/object_gi_ghost.o (.scommon)
            build/baserom/object_gi_ghost.o (.bss)
            build/baserom/object_gi_ghost.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_ghostSegmentBssEnd = .;
        _object_gi_ghostSegmentEnd = .;
    }
    _object_gi_ghostSegmentBssSize = ABSOLUTE( _object_gi_ghostSegmentBssEnd - _object_gi_ghostSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_soulSegmentRomStart = _RomSize;
    ..object_gi_soul : AT(_RomSize)
    {
        _object_gi_soulSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_soulSegmentTextStart = .;
            build/baserom/object_gi_soul.o (.text)
        _object_gi_soulSegmentTextEnd = .;
    _object_gi_soulSegmentTextSize = ABSOLUTE( _object_gi_soulSegmentTextEnd - _object_gi_soulSegmentTextStart );
        _object_gi_soulSegmentDataStart = .;
            build/baserom/object_gi_soul.o (.data)
        _object_gi_soulSegmentDataEnd = .;
    _object_gi_soulSegmentDataSize = ABSOLUTE( _object_gi_soulSegmentDataEnd - _object_gi_soulSegmentDataStart );
        _object_gi_soulSegmentRoDataStart = .;
            build/baserom/object_gi_soul.o (.rodata)
        _object_gi_soulSegmentRoDataEnd = .;
    _object_gi_soulSegmentRoDataSize = ABSOLUTE( _object_gi_soulSegmentRoDataEnd - _object_gi_soulSegmentRoDataStart );
        _object_gi_soulSegmentSDataStart = .;
            build/baserom/object_gi_soul.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_soulSegmentSDataEnd = .;
        _object_gi_soulSegmentOvlStart = .;
            build/baserom/object_gi_soul.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_soulSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_soulSegmentOvlEnd - _object_gi_soulSegmentTextStart );
    _object_gi_soulSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_soul.bss ADDR(..object_gi_soul) + SIZEOF(..object_gi_soul) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_soulSegmentBssStart = .;
            build/baserom/object_gi_soul.o (.sbss)
            build/baserom/object_gi_soul.o (.scommon)
            build/baserom/object_gi_soul.o (.bss)
            build/baserom/object_gi_soul.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_soulSegmentBssEnd = .;
        _object_gi_soulSegmentEnd = .;
    }
    _object_gi_soulSegmentBssSize = ABSOLUTE( _object_gi_soulSegmentBssEnd - _object_gi_soulSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bowlSegmentRomStart = _RomSize;
    ..object_bowl : AT(_RomSize)
    {
        _object_bowlSegmentStart = .;
        . = ALIGN(0x10);
        _object_bowlSegmentTextStart = .;
            build/baserom/object_bowl.o (.text)
        _object_bowlSegmentTextEnd = .;
    _object_bowlSegmentTextSize = ABSOLUTE( _object_bowlSegmentTextEnd - _object_bowlSegmentTextStart );
        _object_bowlSegmentDataStart = .;
            build/baserom/object_bowl.o (.data)
        _object_bowlSegmentDataEnd = .;
    _object_bowlSegmentDataSize = ABSOLUTE( _object_bowlSegmentDataEnd - _object_bowlSegmentDataStart );
        _object_bowlSegmentRoDataStart = .;
            build/baserom/object_bowl.o (.rodata)
        _object_bowlSegmentRoDataEnd = .;
    _object_bowlSegmentRoDataSize = ABSOLUTE( _object_bowlSegmentRoDataEnd - _object_bowlSegmentRoDataStart );
        _object_bowlSegmentSDataStart = .;
            build/baserom/object_bowl.o (.sdata)
        . = ALIGN(0x10);
        _object_bowlSegmentSDataEnd = .;
        _object_bowlSegmentOvlStart = .;
            build/baserom/object_bowl.o (.ovl)
        . = ALIGN(0x10);
        _object_bowlSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bowlSegmentOvlEnd - _object_bowlSegmentTextStart );
    _object_bowlSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bowl.bss ADDR(..object_bowl) + SIZEOF(..object_bowl) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bowlSegmentBssStart = .;
            build/baserom/object_bowl.o (.sbss)
            build/baserom/object_bowl.o (.scommon)
            build/baserom/object_bowl.o (.bss)
            build/baserom/object_bowl.o (COMMON)
        . = ALIGN(0x10);
        _object_bowlSegmentBssEnd = .;
        _object_bowlSegmentEnd = .;
    }
    _object_bowlSegmentBssSize = ABSOLUTE( _object_bowlSegmentBssEnd - _object_bowlSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_po_fieldSegmentRomStart = _RomSize;
    ..object_po_field : AT(_RomSize)
    {
        _object_po_fieldSegmentStart = .;
        . = ALIGN(0x10);
        _object_po_fieldSegmentTextStart = .;
            build/baserom/object_po_field.o (.text)
        _object_po_fieldSegmentTextEnd = .;
    _object_po_fieldSegmentTextSize = ABSOLUTE( _object_po_fieldSegmentTextEnd - _object_po_fieldSegmentTextStart );
        _object_po_fieldSegmentDataStart = .;
            build/baserom/object_po_field.o (.data)
        _object_po_fieldSegmentDataEnd = .;
    _object_po_fieldSegmentDataSize = ABSOLUTE( _object_po_fieldSegmentDataEnd - _object_po_fieldSegmentDataStart );
        _object_po_fieldSegmentRoDataStart = .;
            build/baserom/object_po_field.o (.rodata)
        _object_po_fieldSegmentRoDataEnd = .;
    _object_po_fieldSegmentRoDataSize = ABSOLUTE( _object_po_fieldSegmentRoDataEnd - _object_po_fieldSegmentRoDataStart );
        _object_po_fieldSegmentSDataStart = .;
            build/baserom/object_po_field.o (.sdata)
        . = ALIGN(0x10);
        _object_po_fieldSegmentSDataEnd = .;
        _object_po_fieldSegmentOvlStart = .;
            build/baserom/object_po_field.o (.ovl)
        . = ALIGN(0x10);
        _object_po_fieldSegmentOvlEnd = .;
    }
    _RomSize += ( _object_po_fieldSegmentOvlEnd - _object_po_fieldSegmentTextStart );
    _object_po_fieldSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_po_field.bss ADDR(..object_po_field) + SIZEOF(..object_po_field) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_po_fieldSegmentBssStart = .;
            build/baserom/object_po_field.o (.sbss)
            build/baserom/object_po_field.o (.scommon)
            build/baserom/object_po_field.o (.bss)
            build/baserom/object_po_field.o (COMMON)
        . = ALIGN(0x10);
        _object_po_fieldSegmentBssEnd = .;
        _object_po_fieldSegmentEnd = .;
    }
    _object_po_fieldSegmentBssSize = ABSOLUTE( _object_po_fieldSegmentBssEnd - _object_po_fieldSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_demo_kekkaiSegmentRomStart = _RomSize;
    ..object_demo_kekkai : AT(_RomSize)
    {
        _object_demo_kekkaiSegmentStart = .;
        . = ALIGN(0x10);
        _object_demo_kekkaiSegmentTextStart = .;
            build/baserom/object_demo_kekkai.o (.text)
        _object_demo_kekkaiSegmentTextEnd = .;
    _object_demo_kekkaiSegmentTextSize = ABSOLUTE( _object_demo_kekkaiSegmentTextEnd - _object_demo_kekkaiSegmentTextStart );
        _object_demo_kekkaiSegmentDataStart = .;
            build/baserom/object_demo_kekkai.o (.data)
        _object_demo_kekkaiSegmentDataEnd = .;
    _object_demo_kekkaiSegmentDataSize = ABSOLUTE( _object_demo_kekkaiSegmentDataEnd - _object_demo_kekkaiSegmentDataStart );
        _object_demo_kekkaiSegmentRoDataStart = .;
            build/baserom/object_demo_kekkai.o (.rodata)
        _object_demo_kekkaiSegmentRoDataEnd = .;
    _object_demo_kekkaiSegmentRoDataSize = ABSOLUTE( _object_demo_kekkaiSegmentRoDataEnd - _object_demo_kekkaiSegmentRoDataStart );
        _object_demo_kekkaiSegmentSDataStart = .;
            build/baserom/object_demo_kekkai.o (.sdata)
        . = ALIGN(0x10);
        _object_demo_kekkaiSegmentSDataEnd = .;
        _object_demo_kekkaiSegmentOvlStart = .;
            build/baserom/object_demo_kekkai.o (.ovl)
        . = ALIGN(0x10);
        _object_demo_kekkaiSegmentOvlEnd = .;
    }
    _RomSize += ( _object_demo_kekkaiSegmentOvlEnd - _object_demo_kekkaiSegmentTextStart );
    _object_demo_kekkaiSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_demo_kekkai.bss ADDR(..object_demo_kekkai) + SIZEOF(..object_demo_kekkai) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_demo_kekkaiSegmentBssStart = .;
            build/baserom/object_demo_kekkai.o (.sbss)
            build/baserom/object_demo_kekkai.o (.scommon)
            build/baserom/object_demo_kekkai.o (.bss)
            build/baserom/object_demo_kekkai.o (COMMON)
        . = ALIGN(0x10);
        _object_demo_kekkaiSegmentBssEnd = .;
        _object_demo_kekkaiSegmentEnd = .;
    }
    _object_demo_kekkaiSegmentBssSize = ABSOLUTE( _object_demo_kekkaiSegmentBssEnd - _object_demo_kekkaiSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_efc_doughnutSegmentRomStart = _RomSize;
    ..object_efc_doughnut : AT(_RomSize)
    {
        _object_efc_doughnutSegmentStart = .;
        . = ALIGN(0x10);
        _object_efc_doughnutSegmentTextStart = .;
            build/baserom/object_efc_doughnut.o (.text)
        _object_efc_doughnutSegmentTextEnd = .;
    _object_efc_doughnutSegmentTextSize = ABSOLUTE( _object_efc_doughnutSegmentTextEnd - _object_efc_doughnutSegmentTextStart );
        _object_efc_doughnutSegmentDataStart = .;
            build/baserom/object_efc_doughnut.o (.data)
        _object_efc_doughnutSegmentDataEnd = .;
    _object_efc_doughnutSegmentDataSize = ABSOLUTE( _object_efc_doughnutSegmentDataEnd - _object_efc_doughnutSegmentDataStart );
        _object_efc_doughnutSegmentRoDataStart = .;
            build/baserom/object_efc_doughnut.o (.rodata)
        _object_efc_doughnutSegmentRoDataEnd = .;
    _object_efc_doughnutSegmentRoDataSize = ABSOLUTE( _object_efc_doughnutSegmentRoDataEnd - _object_efc_doughnutSegmentRoDataStart );
        _object_efc_doughnutSegmentSDataStart = .;
            build/baserom/object_efc_doughnut.o (.sdata)
        . = ALIGN(0x10);
        _object_efc_doughnutSegmentSDataEnd = .;
        _object_efc_doughnutSegmentOvlStart = .;
            build/baserom/object_efc_doughnut.o (.ovl)
        . = ALIGN(0x10);
        _object_efc_doughnutSegmentOvlEnd = .;
    }
    _RomSize += ( _object_efc_doughnutSegmentOvlEnd - _object_efc_doughnutSegmentTextStart );
    _object_efc_doughnutSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_efc_doughnut.bss ADDR(..object_efc_doughnut) + SIZEOF(..object_efc_doughnut) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_efc_doughnutSegmentBssStart = .;
            build/baserom/object_efc_doughnut.o (.sbss)
            build/baserom/object_efc_doughnut.o (.scommon)
            build/baserom/object_efc_doughnut.o (.bss)
            build/baserom/object_efc_doughnut.o (COMMON)
        . = ALIGN(0x10);
        _object_efc_doughnutSegmentBssEnd = .;
        _object_efc_doughnutSegmentEnd = .;
    }
    _object_efc_doughnutSegmentBssSize = ABSOLUTE( _object_efc_doughnutSegmentBssEnd - _object_efc_doughnutSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_dekupouchSegmentRomStart = _RomSize;
    ..object_gi_dekupouch : AT(_RomSize)
    {
        _object_gi_dekupouchSegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_dekupouchSegmentTextStart = .;
            build/baserom/object_gi_dekupouch.o (.text)
        _object_gi_dekupouchSegmentTextEnd = .;
    _object_gi_dekupouchSegmentTextSize = ABSOLUTE( _object_gi_dekupouchSegmentTextEnd - _object_gi_dekupouchSegmentTextStart );
        _object_gi_dekupouchSegmentDataStart = .;
            build/baserom/object_gi_dekupouch.o (.data)
        _object_gi_dekupouchSegmentDataEnd = .;
    _object_gi_dekupouchSegmentDataSize = ABSOLUTE( _object_gi_dekupouchSegmentDataEnd - _object_gi_dekupouchSegmentDataStart );
        _object_gi_dekupouchSegmentRoDataStart = .;
            build/baserom/object_gi_dekupouch.o (.rodata)
        _object_gi_dekupouchSegmentRoDataEnd = .;
    _object_gi_dekupouchSegmentRoDataSize = ABSOLUTE( _object_gi_dekupouchSegmentRoDataEnd - _object_gi_dekupouchSegmentRoDataStart );
        _object_gi_dekupouchSegmentSDataStart = .;
            build/baserom/object_gi_dekupouch.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_dekupouchSegmentSDataEnd = .;
        _object_gi_dekupouchSegmentOvlStart = .;
            build/baserom/object_gi_dekupouch.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_dekupouchSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_dekupouchSegmentOvlEnd - _object_gi_dekupouchSegmentTextStart );
    _object_gi_dekupouchSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_dekupouch.bss ADDR(..object_gi_dekupouch) + SIZEOF(..object_gi_dekupouch) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_dekupouchSegmentBssStart = .;
            build/baserom/object_gi_dekupouch.o (.sbss)
            build/baserom/object_gi_dekupouch.o (.scommon)
            build/baserom/object_gi_dekupouch.o (.bss)
            build/baserom/object_gi_dekupouch.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_dekupouchSegmentBssEnd = .;
        _object_gi_dekupouchSegmentEnd = .;
    }
    _object_gi_dekupouchSegmentBssSize = ABSOLUTE( _object_gi_dekupouchSegmentBssEnd - _object_gi_dekupouchSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ganon_anime1SegmentRomStart = _RomSize;
    ..object_ganon_anime1 : AT(_RomSize)
    {
        _object_ganon_anime1SegmentStart = .;
        . = ALIGN(0x10);
        _object_ganon_anime1SegmentTextStart = .;
            build/baserom/object_ganon_anime1.o (.text)
        _object_ganon_anime1SegmentTextEnd = .;
    _object_ganon_anime1SegmentTextSize = ABSOLUTE( _object_ganon_anime1SegmentTextEnd - _object_ganon_anime1SegmentTextStart );
        _object_ganon_anime1SegmentDataStart = .;
            build/baserom/object_ganon_anime1.o (.data)
        _object_ganon_anime1SegmentDataEnd = .;
    _object_ganon_anime1SegmentDataSize = ABSOLUTE( _object_ganon_anime1SegmentDataEnd - _object_ganon_anime1SegmentDataStart );
        _object_ganon_anime1SegmentRoDataStart = .;
            build/baserom/object_ganon_anime1.o (.rodata)
        _object_ganon_anime1SegmentRoDataEnd = .;
    _object_ganon_anime1SegmentRoDataSize = ABSOLUTE( _object_ganon_anime1SegmentRoDataEnd - _object_ganon_anime1SegmentRoDataStart );
        _object_ganon_anime1SegmentSDataStart = .;
            build/baserom/object_ganon_anime1.o (.sdata)
        . = ALIGN(0x10);
        _object_ganon_anime1SegmentSDataEnd = .;
        _object_ganon_anime1SegmentOvlStart = .;
            build/baserom/object_ganon_anime1.o (.ovl)
        . = ALIGN(0x10);
        _object_ganon_anime1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_ganon_anime1SegmentOvlEnd - _object_ganon_anime1SegmentTextStart );
    _object_ganon_anime1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ganon_anime1.bss ADDR(..object_ganon_anime1) + SIZEOF(..object_ganon_anime1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ganon_anime1SegmentBssStart = .;
            build/baserom/object_ganon_anime1.o (.sbss)
            build/baserom/object_ganon_anime1.o (.scommon)
            build/baserom/object_ganon_anime1.o (.bss)
            build/baserom/object_ganon_anime1.o (COMMON)
        . = ALIGN(0x10);
        _object_ganon_anime1SegmentBssEnd = .;
        _object_ganon_anime1SegmentEnd = .;
    }
    _object_ganon_anime1SegmentBssSize = ABSOLUTE( _object_ganon_anime1SegmentBssEnd - _object_ganon_anime1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ganon_anime2SegmentRomStart = _RomSize;
    ..object_ganon_anime2 : AT(_RomSize)
    {
        _object_ganon_anime2SegmentStart = .;
        . = ALIGN(0x10);
        _object_ganon_anime2SegmentTextStart = .;
            build/baserom/object_ganon_anime2.o (.text)
        _object_ganon_anime2SegmentTextEnd = .;
    _object_ganon_anime2SegmentTextSize = ABSOLUTE( _object_ganon_anime2SegmentTextEnd - _object_ganon_anime2SegmentTextStart );
        _object_ganon_anime2SegmentDataStart = .;
            build/baserom/object_ganon_anime2.o (.data)
        _object_ganon_anime2SegmentDataEnd = .;
    _object_ganon_anime2SegmentDataSize = ABSOLUTE( _object_ganon_anime2SegmentDataEnd - _object_ganon_anime2SegmentDataStart );
        _object_ganon_anime2SegmentRoDataStart = .;
            build/baserom/object_ganon_anime2.o (.rodata)
        _object_ganon_anime2SegmentRoDataEnd = .;
    _object_ganon_anime2SegmentRoDataSize = ABSOLUTE( _object_ganon_anime2SegmentRoDataEnd - _object_ganon_anime2SegmentRoDataStart );
        _object_ganon_anime2SegmentSDataStart = .;
            build/baserom/object_ganon_anime2.o (.sdata)
        . = ALIGN(0x10);
        _object_ganon_anime2SegmentSDataEnd = .;
        _object_ganon_anime2SegmentOvlStart = .;
            build/baserom/object_ganon_anime2.o (.ovl)
        . = ALIGN(0x10);
        _object_ganon_anime2SegmentOvlEnd = .;
    }
    _RomSize += ( _object_ganon_anime2SegmentOvlEnd - _object_ganon_anime2SegmentTextStart );
    _object_ganon_anime2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ganon_anime2.bss ADDR(..object_ganon_anime2) + SIZEOF(..object_ganon_anime2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ganon_anime2SegmentBssStart = .;
            build/baserom/object_ganon_anime2.o (.sbss)
            build/baserom/object_ganon_anime2.o (.scommon)
            build/baserom/object_ganon_anime2.o (.bss)
            build/baserom/object_ganon_anime2.o (COMMON)
        . = ALIGN(0x10);
        _object_ganon_anime2SegmentBssEnd = .;
        _object_ganon_anime2SegmentEnd = .;
    }
    _object_ganon_anime2SegmentBssSize = ABSOLUTE( _object_ganon_anime2SegmentBssEnd - _object_ganon_anime2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ganon_anime3SegmentRomStart = _RomSize;
    ..object_ganon_anime3 : AT(_RomSize)
    {
        _object_ganon_anime3SegmentStart = .;
        . = ALIGN(0x10);
        _object_ganon_anime3SegmentTextStart = .;
            build/baserom/object_ganon_anime3.o (.text)
        _object_ganon_anime3SegmentTextEnd = .;
    _object_ganon_anime3SegmentTextSize = ABSOLUTE( _object_ganon_anime3SegmentTextEnd - _object_ganon_anime3SegmentTextStart );
        _object_ganon_anime3SegmentDataStart = .;
            build/baserom/object_ganon_anime3.o (.data)
        _object_ganon_anime3SegmentDataEnd = .;
    _object_ganon_anime3SegmentDataSize = ABSOLUTE( _object_ganon_anime3SegmentDataEnd - _object_ganon_anime3SegmentDataStart );
        _object_ganon_anime3SegmentRoDataStart = .;
            build/baserom/object_ganon_anime3.o (.rodata)
        _object_ganon_anime3SegmentRoDataEnd = .;
    _object_ganon_anime3SegmentRoDataSize = ABSOLUTE( _object_ganon_anime3SegmentRoDataEnd - _object_ganon_anime3SegmentRoDataStart );
        _object_ganon_anime3SegmentSDataStart = .;
            build/baserom/object_ganon_anime3.o (.sdata)
        . = ALIGN(0x10);
        _object_ganon_anime3SegmentSDataEnd = .;
        _object_ganon_anime3SegmentOvlStart = .;
            build/baserom/object_ganon_anime3.o (.ovl)
        . = ALIGN(0x10);
        _object_ganon_anime3SegmentOvlEnd = .;
    }
    _RomSize += ( _object_ganon_anime3SegmentOvlEnd - _object_ganon_anime3SegmentTextStart );
    _object_ganon_anime3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ganon_anime3.bss ADDR(..object_ganon_anime3) + SIZEOF(..object_ganon_anime3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ganon_anime3SegmentBssStart = .;
            build/baserom/object_ganon_anime3.o (.sbss)
            build/baserom/object_ganon_anime3.o (.scommon)
            build/baserom/object_ganon_anime3.o (.bss)
            build/baserom/object_ganon_anime3.o (COMMON)
        . = ALIGN(0x10);
        _object_ganon_anime3SegmentBssEnd = .;
        _object_ganon_anime3SegmentEnd = .;
    }
    _object_ganon_anime3SegmentBssSize = ABSOLUTE( _object_ganon_anime3SegmentBssEnd - _object_ganon_anime3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_rupySegmentRomStart = _RomSize;
    ..object_gi_rupy : AT(_RomSize)
    {
        _object_gi_rupySegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_rupySegmentTextStart = .;
            build/baserom/object_gi_rupy.o (.text)
        _object_gi_rupySegmentTextEnd = .;
    _object_gi_rupySegmentTextSize = ABSOLUTE( _object_gi_rupySegmentTextEnd - _object_gi_rupySegmentTextStart );
        _object_gi_rupySegmentDataStart = .;
            build/baserom/object_gi_rupy.o (.data)
        _object_gi_rupySegmentDataEnd = .;
    _object_gi_rupySegmentDataSize = ABSOLUTE( _object_gi_rupySegmentDataEnd - _object_gi_rupySegmentDataStart );
        _object_gi_rupySegmentRoDataStart = .;
            build/baserom/object_gi_rupy.o (.rodata)
        _object_gi_rupySegmentRoDataEnd = .;
    _object_gi_rupySegmentRoDataSize = ABSOLUTE( _object_gi_rupySegmentRoDataEnd - _object_gi_rupySegmentRoDataStart );
        _object_gi_rupySegmentSDataStart = .;
            build/baserom/object_gi_rupy.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_rupySegmentSDataEnd = .;
        _object_gi_rupySegmentOvlStart = .;
            build/baserom/object_gi_rupy.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_rupySegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_rupySegmentOvlEnd - _object_gi_rupySegmentTextStart );
    _object_gi_rupySegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_rupy.bss ADDR(..object_gi_rupy) + SIZEOF(..object_gi_rupy) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_rupySegmentBssStart = .;
            build/baserom/object_gi_rupy.o (.sbss)
            build/baserom/object_gi_rupy.o (.scommon)
            build/baserom/object_gi_rupy.o (.bss)
            build/baserom/object_gi_rupy.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_rupySegmentBssEnd = .;
        _object_gi_rupySegmentEnd = .;
    }
    _object_gi_rupySegmentBssSize = ABSOLUTE( _object_gi_rupySegmentBssEnd - _object_gi_rupySegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot01_matoyaSegmentRomStart = _RomSize;
    ..object_spot01_matoya : AT(_RomSize)
    {
        _object_spot01_matoyaSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot01_matoyaSegmentTextStart = .;
            build/baserom/object_spot01_matoya.o (.text)
        _object_spot01_matoyaSegmentTextEnd = .;
    _object_spot01_matoyaSegmentTextSize = ABSOLUTE( _object_spot01_matoyaSegmentTextEnd - _object_spot01_matoyaSegmentTextStart );
        _object_spot01_matoyaSegmentDataStart = .;
            build/baserom/object_spot01_matoya.o (.data)
        _object_spot01_matoyaSegmentDataEnd = .;
    _object_spot01_matoyaSegmentDataSize = ABSOLUTE( _object_spot01_matoyaSegmentDataEnd - _object_spot01_matoyaSegmentDataStart );
        _object_spot01_matoyaSegmentRoDataStart = .;
            build/baserom/object_spot01_matoya.o (.rodata)
        _object_spot01_matoyaSegmentRoDataEnd = .;
    _object_spot01_matoyaSegmentRoDataSize = ABSOLUTE( _object_spot01_matoyaSegmentRoDataEnd - _object_spot01_matoyaSegmentRoDataStart );
        _object_spot01_matoyaSegmentSDataStart = .;
            build/baserom/object_spot01_matoya.o (.sdata)
        . = ALIGN(0x10);
        _object_spot01_matoyaSegmentSDataEnd = .;
        _object_spot01_matoyaSegmentOvlStart = .;
            build/baserom/object_spot01_matoya.o (.ovl)
        . = ALIGN(0x10);
        _object_spot01_matoyaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot01_matoyaSegmentOvlEnd - _object_spot01_matoyaSegmentTextStart );
    _object_spot01_matoyaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot01_matoya.bss ADDR(..object_spot01_matoya) + SIZEOF(..object_spot01_matoya) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot01_matoyaSegmentBssStart = .;
            build/baserom/object_spot01_matoya.o (.sbss)
            build/baserom/object_spot01_matoya.o (.scommon)
            build/baserom/object_spot01_matoya.o (.bss)
            build/baserom/object_spot01_matoya.o (COMMON)
        . = ALIGN(0x10);
        _object_spot01_matoyaSegmentBssEnd = .;
        _object_spot01_matoyaSegmentEnd = .;
    }
    _object_spot01_matoyaSegmentBssSize = ABSOLUTE( _object_spot01_matoyaSegmentBssEnd - _object_spot01_matoyaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_spot01_matoyabSegmentRomStart = _RomSize;
    ..object_spot01_matoyab : AT(_RomSize)
    {
        _object_spot01_matoyabSegmentStart = .;
        . = ALIGN(0x10);
        _object_spot01_matoyabSegmentTextStart = .;
            build/baserom/object_spot01_matoyab.o (.text)
        _object_spot01_matoyabSegmentTextEnd = .;
    _object_spot01_matoyabSegmentTextSize = ABSOLUTE( _object_spot01_matoyabSegmentTextEnd - _object_spot01_matoyabSegmentTextStart );
        _object_spot01_matoyabSegmentDataStart = .;
            build/baserom/object_spot01_matoyab.o (.data)
        _object_spot01_matoyabSegmentDataEnd = .;
    _object_spot01_matoyabSegmentDataSize = ABSOLUTE( _object_spot01_matoyabSegmentDataEnd - _object_spot01_matoyabSegmentDataStart );
        _object_spot01_matoyabSegmentRoDataStart = .;
            build/baserom/object_spot01_matoyab.o (.rodata)
        _object_spot01_matoyabSegmentRoDataEnd = .;
    _object_spot01_matoyabSegmentRoDataSize = ABSOLUTE( _object_spot01_matoyabSegmentRoDataEnd - _object_spot01_matoyabSegmentRoDataStart );
        _object_spot01_matoyabSegmentSDataStart = .;
            build/baserom/object_spot01_matoyab.o (.sdata)
        . = ALIGN(0x10);
        _object_spot01_matoyabSegmentSDataEnd = .;
        _object_spot01_matoyabSegmentOvlStart = .;
            build/baserom/object_spot01_matoyab.o (.ovl)
        . = ALIGN(0x10);
        _object_spot01_matoyabSegmentOvlEnd = .;
    }
    _RomSize += ( _object_spot01_matoyabSegmentOvlEnd - _object_spot01_matoyabSegmentTextStart );
    _object_spot01_matoyabSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_spot01_matoyab.bss ADDR(..object_spot01_matoyab) + SIZEOF(..object_spot01_matoyab) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_spot01_matoyabSegmentBssStart = .;
            build/baserom/object_spot01_matoyab.o (.sbss)
            build/baserom/object_spot01_matoyab.o (.scommon)
            build/baserom/object_spot01_matoyab.o (.bss)
            build/baserom/object_spot01_matoyab.o (COMMON)
        . = ALIGN(0x10);
        _object_spot01_matoyabSegmentBssEnd = .;
        _object_spot01_matoyabSegmentEnd = .;
    }
    _object_spot01_matoyabSegmentBssSize = ABSOLUTE( _object_spot01_matoyabSegmentBssEnd - _object_spot01_matoyabSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_po_composerSegmentRomStart = _RomSize;
    ..object_po_composer : AT(_RomSize)
    {
        _object_po_composerSegmentStart = .;
        . = ALIGN(0x10);
        _object_po_composerSegmentTextStart = .;
            build/baserom/object_po_composer.o (.text)
        _object_po_composerSegmentTextEnd = .;
    _object_po_composerSegmentTextSize = ABSOLUTE( _object_po_composerSegmentTextEnd - _object_po_composerSegmentTextStart );
        _object_po_composerSegmentDataStart = .;
            build/baserom/object_po_composer.o (.data)
        _object_po_composerSegmentDataEnd = .;
    _object_po_composerSegmentDataSize = ABSOLUTE( _object_po_composerSegmentDataEnd - _object_po_composerSegmentDataStart );
        _object_po_composerSegmentRoDataStart = .;
            build/baserom/object_po_composer.o (.rodata)
        _object_po_composerSegmentRoDataEnd = .;
    _object_po_composerSegmentRoDataSize = ABSOLUTE( _object_po_composerSegmentRoDataEnd - _object_po_composerSegmentRoDataStart );
        _object_po_composerSegmentSDataStart = .;
            build/baserom/object_po_composer.o (.sdata)
        . = ALIGN(0x10);
        _object_po_composerSegmentSDataEnd = .;
        _object_po_composerSegmentOvlStart = .;
            build/baserom/object_po_composer.o (.ovl)
        . = ALIGN(0x10);
        _object_po_composerSegmentOvlEnd = .;
    }
    _RomSize += ( _object_po_composerSegmentOvlEnd - _object_po_composerSegmentTextStart );
    _object_po_composerSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_po_composer.bss ADDR(..object_po_composer) + SIZEOF(..object_po_composer) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_po_composerSegmentBssStart = .;
            build/baserom/object_po_composer.o (.sbss)
            build/baserom/object_po_composer.o (.scommon)
            build/baserom/object_po_composer.o (.bss)
            build/baserom/object_po_composer.o (COMMON)
        . = ALIGN(0x10);
        _object_po_composerSegmentBssEnd = .;
        _object_po_composerSegmentEnd = .;
    }
    _object_po_composerSegmentBssSize = ABSOLUTE( _object_po_composerSegmentBssEnd - _object_po_composerSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_muSegmentRomStart = _RomSize;
    ..object_mu : AT(_RomSize)
    {
        _object_muSegmentStart = .;
        . = ALIGN(0x10);
        _object_muSegmentTextStart = .;
            build/baserom/object_mu.o (.text)
        _object_muSegmentTextEnd = .;
    _object_muSegmentTextSize = ABSOLUTE( _object_muSegmentTextEnd - _object_muSegmentTextStart );
        _object_muSegmentDataStart = .;
            build/baserom/object_mu.o (.data)
        _object_muSegmentDataEnd = .;
    _object_muSegmentDataSize = ABSOLUTE( _object_muSegmentDataEnd - _object_muSegmentDataStart );
        _object_muSegmentRoDataStart = .;
            build/baserom/object_mu.o (.rodata)
        _object_muSegmentRoDataEnd = .;
    _object_muSegmentRoDataSize = ABSOLUTE( _object_muSegmentRoDataEnd - _object_muSegmentRoDataStart );
        _object_muSegmentSDataStart = .;
            build/baserom/object_mu.o (.sdata)
        . = ALIGN(0x10);
        _object_muSegmentSDataEnd = .;
        _object_muSegmentOvlStart = .;
            build/baserom/object_mu.o (.ovl)
        . = ALIGN(0x10);
        _object_muSegmentOvlEnd = .;
    }
    _RomSize += ( _object_muSegmentOvlEnd - _object_muSegmentTextStart );
    _object_muSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_mu.bss ADDR(..object_mu) + SIZEOF(..object_mu) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_muSegmentBssStart = .;
            build/baserom/object_mu.o (.sbss)
            build/baserom/object_mu.o (.scommon)
            build/baserom/object_mu.o (.bss)
            build/baserom/object_mu.o (COMMON)
        . = ALIGN(0x10);
        _object_muSegmentBssEnd = .;
        _object_muSegmentEnd = .;
    }
    _object_muSegmentBssSize = ABSOLUTE( _object_muSegmentBssEnd - _object_muSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_wfSegmentRomStart = _RomSize;
    ..object_wf : AT(_RomSize)
    {
        _object_wfSegmentStart = .;
        . = ALIGN(0x10);
        _object_wfSegmentTextStart = .;
            build/baserom/object_wf.o (.text)
        _object_wfSegmentTextEnd = .;
    _object_wfSegmentTextSize = ABSOLUTE( _object_wfSegmentTextEnd - _object_wfSegmentTextStart );
        _object_wfSegmentDataStart = .;
            build/baserom/object_wf.o (.data)
        _object_wfSegmentDataEnd = .;
    _object_wfSegmentDataSize = ABSOLUTE( _object_wfSegmentDataEnd - _object_wfSegmentDataStart );
        _object_wfSegmentRoDataStart = .;
            build/baserom/object_wf.o (.rodata)
        _object_wfSegmentRoDataEnd = .;
    _object_wfSegmentRoDataSize = ABSOLUTE( _object_wfSegmentRoDataEnd - _object_wfSegmentRoDataStart );
        _object_wfSegmentSDataStart = .;
            build/baserom/object_wf.o (.sdata)
        . = ALIGN(0x10);
        _object_wfSegmentSDataEnd = .;
        _object_wfSegmentOvlStart = .;
            build/baserom/object_wf.o (.ovl)
        . = ALIGN(0x10);
        _object_wfSegmentOvlEnd = .;
    }
    _RomSize += ( _object_wfSegmentOvlEnd - _object_wfSegmentTextStart );
    _object_wfSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_wf.bss ADDR(..object_wf) + SIZEOF(..object_wf) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_wfSegmentBssStart = .;
            build/baserom/object_wf.o (.sbss)
            build/baserom/object_wf.o (.scommon)
            build/baserom/object_wf.o (.bss)
            build/baserom/object_wf.o (COMMON)
        . = ALIGN(0x10);
        _object_wfSegmentBssEnd = .;
        _object_wfSegmentEnd = .;
    }
    _object_wfSegmentBssSize = ABSOLUTE( _object_wfSegmentBssEnd - _object_wfSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_skbSegmentRomStart = _RomSize;
    ..object_skb : AT(_RomSize)
    {
        _object_skbSegmentStart = .;
        . = ALIGN(0x10);
        _object_skbSegmentTextStart = .;
            build/baserom/object_skb.o (.text)
        _object_skbSegmentTextEnd = .;
    _object_skbSegmentTextSize = ABSOLUTE( _object_skbSegmentTextEnd - _object_skbSegmentTextStart );
        _object_skbSegmentDataStart = .;
            build/baserom/object_skb.o (.data)
        _object_skbSegmentDataEnd = .;
    _object_skbSegmentDataSize = ABSOLUTE( _object_skbSegmentDataEnd - _object_skbSegmentDataStart );
        _object_skbSegmentRoDataStart = .;
            build/baserom/object_skb.o (.rodata)
        _object_skbSegmentRoDataEnd = .;
    _object_skbSegmentRoDataSize = ABSOLUTE( _object_skbSegmentRoDataEnd - _object_skbSegmentRoDataStart );
        _object_skbSegmentSDataStart = .;
            build/baserom/object_skb.o (.sdata)
        . = ALIGN(0x10);
        _object_skbSegmentSDataEnd = .;
        _object_skbSegmentOvlStart = .;
            build/baserom/object_skb.o (.ovl)
        . = ALIGN(0x10);
        _object_skbSegmentOvlEnd = .;
    }
    _RomSize += ( _object_skbSegmentOvlEnd - _object_skbSegmentTextStart );
    _object_skbSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_skb.bss ADDR(..object_skb) + SIZEOF(..object_skb) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_skbSegmentBssStart = .;
            build/baserom/object_skb.o (.sbss)
            build/baserom/object_skb.o (.scommon)
            build/baserom/object_skb.o (.bss)
            build/baserom/object_skb.o (COMMON)
        . = ALIGN(0x10);
        _object_skbSegmentBssEnd = .;
        _object_skbSegmentEnd = .;
    }
    _object_skbSegmentBssSize = ABSOLUTE( _object_skbSegmentBssEnd - _object_skbSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gjSegmentRomStart = _RomSize;
    ..object_gj : AT(_RomSize)
    {
        _object_gjSegmentStart = .;
        . = ALIGN(0x10);
        _object_gjSegmentTextStart = .;
            build/baserom/object_gj.o (.text)
        _object_gjSegmentTextEnd = .;
    _object_gjSegmentTextSize = ABSOLUTE( _object_gjSegmentTextEnd - _object_gjSegmentTextStart );
        _object_gjSegmentDataStart = .;
            build/baserom/object_gj.o (.data)
        _object_gjSegmentDataEnd = .;
    _object_gjSegmentDataSize = ABSOLUTE( _object_gjSegmentDataEnd - _object_gjSegmentDataStart );
        _object_gjSegmentRoDataStart = .;
            build/baserom/object_gj.o (.rodata)
        _object_gjSegmentRoDataEnd = .;
    _object_gjSegmentRoDataSize = ABSOLUTE( _object_gjSegmentRoDataEnd - _object_gjSegmentRoDataStart );
        _object_gjSegmentSDataStart = .;
            build/baserom/object_gj.o (.sdata)
        . = ALIGN(0x10);
        _object_gjSegmentSDataEnd = .;
        _object_gjSegmentOvlStart = .;
            build/baserom/object_gj.o (.ovl)
        . = ALIGN(0x10);
        _object_gjSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gjSegmentOvlEnd - _object_gjSegmentTextStart );
    _object_gjSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gj.bss ADDR(..object_gj) + SIZEOF(..object_gj) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gjSegmentBssStart = .;
            build/baserom/object_gj.o (.sbss)
            build/baserom/object_gj.o (.scommon)
            build/baserom/object_gj.o (.bss)
            build/baserom/object_gj.o (COMMON)
        . = ALIGN(0x10);
        _object_gjSegmentBssEnd = .;
        _object_gjSegmentEnd = .;
    }
    _object_gjSegmentBssSize = ABSOLUTE( _object_gjSegmentBssEnd - _object_gjSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_geffSegmentRomStart = _RomSize;
    ..object_geff : AT(_RomSize)
    {
        _object_geffSegmentStart = .;
        . = ALIGN(0x10);
        _object_geffSegmentTextStart = .;
            build/baserom/object_geff.o (.text)
        _object_geffSegmentTextEnd = .;
    _object_geffSegmentTextSize = ABSOLUTE( _object_geffSegmentTextEnd - _object_geffSegmentTextStart );
        _object_geffSegmentDataStart = .;
            build/baserom/object_geff.o (.data)
        _object_geffSegmentDataEnd = .;
    _object_geffSegmentDataSize = ABSOLUTE( _object_geffSegmentDataEnd - _object_geffSegmentDataStart );
        _object_geffSegmentRoDataStart = .;
            build/baserom/object_geff.o (.rodata)
        _object_geffSegmentRoDataEnd = .;
    _object_geffSegmentRoDataSize = ABSOLUTE( _object_geffSegmentRoDataEnd - _object_geffSegmentRoDataStart );
        _object_geffSegmentSDataStart = .;
            build/baserom/object_geff.o (.sdata)
        . = ALIGN(0x10);
        _object_geffSegmentSDataEnd = .;
        _object_geffSegmentOvlStart = .;
            build/baserom/object_geff.o (.ovl)
        . = ALIGN(0x10);
        _object_geffSegmentOvlEnd = .;
    }
    _RomSize += ( _object_geffSegmentOvlEnd - _object_geffSegmentTextStart );
    _object_geffSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_geff.bss ADDR(..object_geff) + SIZEOF(..object_geff) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_geffSegmentBssStart = .;
            build/baserom/object_geff.o (.sbss)
            build/baserom/object_geff.o (.scommon)
            build/baserom/object_geff.o (.bss)
            build/baserom/object_geff.o (COMMON)
        . = ALIGN(0x10);
        _object_geffSegmentBssEnd = .;
        _object_geffSegmentEnd = .;
    }
    _object_geffSegmentBssSize = ABSOLUTE( _object_geffSegmentBssEnd - _object_geffSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_haka_doorSegmentRomStart = _RomSize;
    ..object_haka_door : AT(_RomSize)
    {
        _object_haka_doorSegmentStart = .;
        . = ALIGN(0x10);
        _object_haka_doorSegmentTextStart = .;
            build/baserom/object_haka_door.o (.text)
        _object_haka_doorSegmentTextEnd = .;
    _object_haka_doorSegmentTextSize = ABSOLUTE( _object_haka_doorSegmentTextEnd - _object_haka_doorSegmentTextStart );
        _object_haka_doorSegmentDataStart = .;
            build/baserom/object_haka_door.o (.data)
        _object_haka_doorSegmentDataEnd = .;
    _object_haka_doorSegmentDataSize = ABSOLUTE( _object_haka_doorSegmentDataEnd - _object_haka_doorSegmentDataStart );
        _object_haka_doorSegmentRoDataStart = .;
            build/baserom/object_haka_door.o (.rodata)
        _object_haka_doorSegmentRoDataEnd = .;
    _object_haka_doorSegmentRoDataSize = ABSOLUTE( _object_haka_doorSegmentRoDataEnd - _object_haka_doorSegmentRoDataStart );
        _object_haka_doorSegmentSDataStart = .;
            build/baserom/object_haka_door.o (.sdata)
        . = ALIGN(0x10);
        _object_haka_doorSegmentSDataEnd = .;
        _object_haka_doorSegmentOvlStart = .;
            build/baserom/object_haka_door.o (.ovl)
        . = ALIGN(0x10);
        _object_haka_doorSegmentOvlEnd = .;
    }
    _RomSize += ( _object_haka_doorSegmentOvlEnd - _object_haka_doorSegmentTextStart );
    _object_haka_doorSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_haka_door.bss ADDR(..object_haka_door) + SIZEOF(..object_haka_door) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_haka_doorSegmentBssStart = .;
            build/baserom/object_haka_door.o (.sbss)
            build/baserom/object_haka_door.o (.scommon)
            build/baserom/object_haka_door.o (.bss)
            build/baserom/object_haka_door.o (COMMON)
        . = ALIGN(0x10);
        _object_haka_doorSegmentBssEnd = .;
        _object_haka_doorSegmentEnd = .;
    }
    _object_haka_doorSegmentBssSize = ABSOLUTE( _object_haka_doorSegmentBssEnd - _object_haka_doorSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gsSegmentRomStart = _RomSize;
    ..object_gs : AT(_RomSize)
    {
        _object_gsSegmentStart = .;
        . = ALIGN(0x10);
        _object_gsSegmentTextStart = .;
            build/baserom/object_gs.o (.text)
        _object_gsSegmentTextEnd = .;
    _object_gsSegmentTextSize = ABSOLUTE( _object_gsSegmentTextEnd - _object_gsSegmentTextStart );
        _object_gsSegmentDataStart = .;
            build/baserom/object_gs.o (.data)
        _object_gsSegmentDataEnd = .;
    _object_gsSegmentDataSize = ABSOLUTE( _object_gsSegmentDataEnd - _object_gsSegmentDataStart );
        _object_gsSegmentRoDataStart = .;
            build/baserom/object_gs.o (.rodata)
        _object_gsSegmentRoDataEnd = .;
    _object_gsSegmentRoDataSize = ABSOLUTE( _object_gsSegmentRoDataEnd - _object_gsSegmentRoDataStart );
        _object_gsSegmentSDataStart = .;
            build/baserom/object_gs.o (.sdata)
        . = ALIGN(0x10);
        _object_gsSegmentSDataEnd = .;
        _object_gsSegmentOvlStart = .;
            build/baserom/object_gs.o (.ovl)
        . = ALIGN(0x10);
        _object_gsSegmentOvlEnd = .;
    }
    _RomSize += ( _object_gsSegmentOvlEnd - _object_gsSegmentTextStart );
    _object_gsSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gs.bss ADDR(..object_gs) + SIZEOF(..object_gs) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gsSegmentBssStart = .;
            build/baserom/object_gs.o (.sbss)
            build/baserom/object_gs.o (.scommon)
            build/baserom/object_gs.o (.bss)
            build/baserom/object_gs.o (COMMON)
        . = ALIGN(0x10);
        _object_gsSegmentBssEnd = .;
        _object_gsSegmentEnd = .;
    }
    _object_gsSegmentBssSize = ABSOLUTE( _object_gsSegmentBssEnd - _object_gsSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_psSegmentRomStart = _RomSize;
    ..object_ps : AT(_RomSize)
    {
        _object_psSegmentStart = .;
        . = ALIGN(0x10);
        _object_psSegmentTextStart = .;
            build/baserom/object_ps.o (.text)
        _object_psSegmentTextEnd = .;
    _object_psSegmentTextSize = ABSOLUTE( _object_psSegmentTextEnd - _object_psSegmentTextStart );
        _object_psSegmentDataStart = .;
            build/baserom/object_ps.o (.data)
        _object_psSegmentDataEnd = .;
    _object_psSegmentDataSize = ABSOLUTE( _object_psSegmentDataEnd - _object_psSegmentDataStart );
        _object_psSegmentRoDataStart = .;
            build/baserom/object_ps.o (.rodata)
        _object_psSegmentRoDataEnd = .;
    _object_psSegmentRoDataSize = ABSOLUTE( _object_psSegmentRoDataEnd - _object_psSegmentRoDataStart );
        _object_psSegmentSDataStart = .;
            build/baserom/object_ps.o (.sdata)
        . = ALIGN(0x10);
        _object_psSegmentSDataEnd = .;
        _object_psSegmentOvlStart = .;
            build/baserom/object_ps.o (.ovl)
        . = ALIGN(0x10);
        _object_psSegmentOvlEnd = .;
    }
    _RomSize += ( _object_psSegmentOvlEnd - _object_psSegmentTextStart );
    _object_psSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ps.bss ADDR(..object_ps) + SIZEOF(..object_ps) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_psSegmentBssStart = .;
            build/baserom/object_ps.o (.sbss)
            build/baserom/object_ps.o (.scommon)
            build/baserom/object_ps.o (.bss)
            build/baserom/object_ps.o (COMMON)
        . = ALIGN(0x10);
        _object_psSegmentBssEnd = .;
        _object_psSegmentEnd = .;
    }
    _object_psSegmentBssSize = ABSOLUTE( _object_psSegmentBssEnd - _object_psSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_bwallSegmentRomStart = _RomSize;
    ..object_bwall : AT(_RomSize)
    {
        _object_bwallSegmentStart = .;
        . = ALIGN(0x10);
        _object_bwallSegmentTextStart = .;
            build/baserom/object_bwall.o (.text)
        _object_bwallSegmentTextEnd = .;
    _object_bwallSegmentTextSize = ABSOLUTE( _object_bwallSegmentTextEnd - _object_bwallSegmentTextStart );
        _object_bwallSegmentDataStart = .;
            build/baserom/object_bwall.o (.data)
        _object_bwallSegmentDataEnd = .;
    _object_bwallSegmentDataSize = ABSOLUTE( _object_bwallSegmentDataEnd - _object_bwallSegmentDataStart );
        _object_bwallSegmentRoDataStart = .;
            build/baserom/object_bwall.o (.rodata)
        _object_bwallSegmentRoDataEnd = .;
    _object_bwallSegmentRoDataSize = ABSOLUTE( _object_bwallSegmentRoDataEnd - _object_bwallSegmentRoDataStart );
        _object_bwallSegmentSDataStart = .;
            build/baserom/object_bwall.o (.sdata)
        . = ALIGN(0x10);
        _object_bwallSegmentSDataEnd = .;
        _object_bwallSegmentOvlStart = .;
            build/baserom/object_bwall.o (.ovl)
        . = ALIGN(0x10);
        _object_bwallSegmentOvlEnd = .;
    }
    _RomSize += ( _object_bwallSegmentOvlEnd - _object_bwallSegmentTextStart );
    _object_bwallSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_bwall.bss ADDR(..object_bwall) + SIZEOF(..object_bwall) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_bwallSegmentBssStart = .;
            build/baserom/object_bwall.o (.sbss)
            build/baserom/object_bwall.o (.scommon)
            build/baserom/object_bwall.o (.bss)
            build/baserom/object_bwall.o (COMMON)
        . = ALIGN(0x10);
        _object_bwallSegmentBssEnd = .;
        _object_bwallSegmentEnd = .;
    }
    _object_bwallSegmentBssSize = ABSOLUTE( _object_bwallSegmentBssEnd - _object_bwallSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_crowSegmentRomStart = _RomSize;
    ..object_crow : AT(_RomSize)
    {
        _object_crowSegmentStart = .;
        . = ALIGN(0x10);
        _object_crowSegmentTextStart = .;
            build/baserom/object_crow.o (.text)
        _object_crowSegmentTextEnd = .;
    _object_crowSegmentTextSize = ABSOLUTE( _object_crowSegmentTextEnd - _object_crowSegmentTextStart );
        _object_crowSegmentDataStart = .;
            build/baserom/object_crow.o (.data)
        _object_crowSegmentDataEnd = .;
    _object_crowSegmentDataSize = ABSOLUTE( _object_crowSegmentDataEnd - _object_crowSegmentDataStart );
        _object_crowSegmentRoDataStart = .;
            build/baserom/object_crow.o (.rodata)
        _object_crowSegmentRoDataEnd = .;
    _object_crowSegmentRoDataSize = ABSOLUTE( _object_crowSegmentRoDataEnd - _object_crowSegmentRoDataStart );
        _object_crowSegmentSDataStart = .;
            build/baserom/object_crow.o (.sdata)
        . = ALIGN(0x10);
        _object_crowSegmentSDataEnd = .;
        _object_crowSegmentOvlStart = .;
            build/baserom/object_crow.o (.ovl)
        . = ALIGN(0x10);
        _object_crowSegmentOvlEnd = .;
    }
    _RomSize += ( _object_crowSegmentOvlEnd - _object_crowSegmentTextStart );
    _object_crowSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_crow.bss ADDR(..object_crow) + SIZEOF(..object_crow) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_crowSegmentBssStart = .;
            build/baserom/object_crow.o (.sbss)
            build/baserom/object_crow.o (.scommon)
            build/baserom/object_crow.o (.bss)
            build/baserom/object_crow.o (COMMON)
        . = ALIGN(0x10);
        _object_crowSegmentBssEnd = .;
        _object_crowSegmentEnd = .;
    }
    _object_crowSegmentBssSize = ABSOLUTE( _object_crowSegmentBssEnd - _object_crowSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_cowSegmentRomStart = _RomSize;
    ..object_cow : AT(_RomSize)
    {
        _object_cowSegmentStart = .;
        . = ALIGN(0x10);
        _object_cowSegmentTextStart = .;
            build/baserom/object_cow.o (.text)
        _object_cowSegmentTextEnd = .;
    _object_cowSegmentTextSize = ABSOLUTE( _object_cowSegmentTextEnd - _object_cowSegmentTextStart );
        _object_cowSegmentDataStart = .;
            build/baserom/object_cow.o (.data)
        _object_cowSegmentDataEnd = .;
    _object_cowSegmentDataSize = ABSOLUTE( _object_cowSegmentDataEnd - _object_cowSegmentDataStart );
        _object_cowSegmentRoDataStart = .;
            build/baserom/object_cow.o (.rodata)
        _object_cowSegmentRoDataEnd = .;
    _object_cowSegmentRoDataSize = ABSOLUTE( _object_cowSegmentRoDataEnd - _object_cowSegmentRoDataStart );
        _object_cowSegmentSDataStart = .;
            build/baserom/object_cow.o (.sdata)
        . = ALIGN(0x10);
        _object_cowSegmentSDataEnd = .;
        _object_cowSegmentOvlStart = .;
            build/baserom/object_cow.o (.ovl)
        . = ALIGN(0x10);
        _object_cowSegmentOvlEnd = .;
    }
    _RomSize += ( _object_cowSegmentOvlEnd - _object_cowSegmentTextStart );
    _object_cowSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_cow.bss ADDR(..object_cow) + SIZEOF(..object_cow) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_cowSegmentBssStart = .;
            build/baserom/object_cow.o (.sbss)
            build/baserom/object_cow.o (.scommon)
            build/baserom/object_cow.o (.bss)
            build/baserom/object_cow.o (COMMON)
        . = ALIGN(0x10);
        _object_cowSegmentBssEnd = .;
        _object_cowSegmentEnd = .;
    }
    _object_cowSegmentBssSize = ABSOLUTE( _object_cowSegmentBssEnd - _object_cowSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_cobSegmentRomStart = _RomSize;
    ..object_cob : AT(_RomSize)
    {
        _object_cobSegmentStart = .;
        . = ALIGN(0x10);
        _object_cobSegmentTextStart = .;
            build/baserom/object_cob.o (.text)
        _object_cobSegmentTextEnd = .;
    _object_cobSegmentTextSize = ABSOLUTE( _object_cobSegmentTextEnd - _object_cobSegmentTextStart );
        _object_cobSegmentDataStart = .;
            build/baserom/object_cob.o (.data)
        _object_cobSegmentDataEnd = .;
    _object_cobSegmentDataSize = ABSOLUTE( _object_cobSegmentDataEnd - _object_cobSegmentDataStart );
        _object_cobSegmentRoDataStart = .;
            build/baserom/object_cob.o (.rodata)
        _object_cobSegmentRoDataEnd = .;
    _object_cobSegmentRoDataSize = ABSOLUTE( _object_cobSegmentRoDataEnd - _object_cobSegmentRoDataStart );
        _object_cobSegmentSDataStart = .;
            build/baserom/object_cob.o (.sdata)
        . = ALIGN(0x10);
        _object_cobSegmentSDataEnd = .;
        _object_cobSegmentOvlStart = .;
            build/baserom/object_cob.o (.ovl)
        . = ALIGN(0x10);
        _object_cobSegmentOvlEnd = .;
    }
    _RomSize += ( _object_cobSegmentOvlEnd - _object_cobSegmentTextStart );
    _object_cobSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_cob.bss ADDR(..object_cob) + SIZEOF(..object_cob) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_cobSegmentBssStart = .;
            build/baserom/object_cob.o (.sbss)
            build/baserom/object_cob.o (.scommon)
            build/baserom/object_cob.o (.bss)
            build/baserom/object_cob.o (COMMON)
        . = ALIGN(0x10);
        _object_cobSegmentBssEnd = .;
        _object_cobSegmentEnd = .;
    }
    _object_cobSegmentBssSize = ABSOLUTE( _object_cobSegmentBssEnd - _object_cobSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_gi_sword_1SegmentRomStart = _RomSize;
    ..object_gi_sword_1 : AT(_RomSize)
    {
        _object_gi_sword_1SegmentStart = .;
        . = ALIGN(0x10);
        _object_gi_sword_1SegmentTextStart = .;
            build/baserom/object_gi_sword_1.o (.text)
        _object_gi_sword_1SegmentTextEnd = .;
    _object_gi_sword_1SegmentTextSize = ABSOLUTE( _object_gi_sword_1SegmentTextEnd - _object_gi_sword_1SegmentTextStart );
        _object_gi_sword_1SegmentDataStart = .;
            build/baserom/object_gi_sword_1.o (.data)
        _object_gi_sword_1SegmentDataEnd = .;
    _object_gi_sword_1SegmentDataSize = ABSOLUTE( _object_gi_sword_1SegmentDataEnd - _object_gi_sword_1SegmentDataStart );
        _object_gi_sword_1SegmentRoDataStart = .;
            build/baserom/object_gi_sword_1.o (.rodata)
        _object_gi_sword_1SegmentRoDataEnd = .;
    _object_gi_sword_1SegmentRoDataSize = ABSOLUTE( _object_gi_sword_1SegmentRoDataEnd - _object_gi_sword_1SegmentRoDataStart );
        _object_gi_sword_1SegmentSDataStart = .;
            build/baserom/object_gi_sword_1.o (.sdata)
        . = ALIGN(0x10);
        _object_gi_sword_1SegmentSDataEnd = .;
        _object_gi_sword_1SegmentOvlStart = .;
            build/baserom/object_gi_sword_1.o (.ovl)
        . = ALIGN(0x10);
        _object_gi_sword_1SegmentOvlEnd = .;
    }
    _RomSize += ( _object_gi_sword_1SegmentOvlEnd - _object_gi_sword_1SegmentTextStart );
    _object_gi_sword_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_gi_sword_1.bss ADDR(..object_gi_sword_1) + SIZEOF(..object_gi_sword_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_gi_sword_1SegmentBssStart = .;
            build/baserom/object_gi_sword_1.o (.sbss)
            build/baserom/object_gi_sword_1.o (.scommon)
            build/baserom/object_gi_sword_1.o (.bss)
            build/baserom/object_gi_sword_1.o (COMMON)
        . = ALIGN(0x10);
        _object_gi_sword_1SegmentBssEnd = .;
        _object_gi_sword_1SegmentEnd = .;
    }
    _object_gi_sword_1SegmentBssSize = ABSOLUTE( _object_gi_sword_1SegmentBssEnd - _object_gi_sword_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_door_killerSegmentRomStart = _RomSize;
    ..object_door_killer : AT(_RomSize)
    {
        _object_door_killerSegmentStart = .;
        . = ALIGN(0x10);
        _object_door_killerSegmentTextStart = .;
            build/baserom/object_door_killer.o (.text)
        _object_door_killerSegmentTextEnd = .;
    _object_door_killerSegmentTextSize = ABSOLUTE( _object_door_killerSegmentTextEnd - _object_door_killerSegmentTextStart );
        _object_door_killerSegmentDataStart = .;
            build/baserom/object_door_killer.o (.data)
        _object_door_killerSegmentDataEnd = .;
    _object_door_killerSegmentDataSize = ABSOLUTE( _object_door_killerSegmentDataEnd - _object_door_killerSegmentDataStart );
        _object_door_killerSegmentRoDataStart = .;
            build/baserom/object_door_killer.o (.rodata)
        _object_door_killerSegmentRoDataEnd = .;
    _object_door_killerSegmentRoDataSize = ABSOLUTE( _object_door_killerSegmentRoDataEnd - _object_door_killerSegmentRoDataStart );
        _object_door_killerSegmentSDataStart = .;
            build/baserom/object_door_killer.o (.sdata)
        . = ALIGN(0x10);
        _object_door_killerSegmentSDataEnd = .;
        _object_door_killerSegmentOvlStart = .;
            build/baserom/object_door_killer.o (.ovl)
        . = ALIGN(0x10);
        _object_door_killerSegmentOvlEnd = .;
    }
    _RomSize += ( _object_door_killerSegmentOvlEnd - _object_door_killerSegmentTextStart );
    _object_door_killerSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_door_killer.bss ADDR(..object_door_killer) + SIZEOF(..object_door_killer) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_door_killerSegmentBssStart = .;
            build/baserom/object_door_killer.o (.sbss)
            build/baserom/object_door_killer.o (.scommon)
            build/baserom/object_door_killer.o (.bss)
            build/baserom/object_door_killer.o (COMMON)
        . = ALIGN(0x10);
        _object_door_killerSegmentBssEnd = .;
        _object_door_killerSegmentEnd = .;
    }
    _object_door_killerSegmentBssSize = ABSOLUTE( _object_door_killerSegmentBssEnd - _object_door_killerSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_ouke_hakaSegmentRomStart = _RomSize;
    ..object_ouke_haka : AT(_RomSize)
    {
        _object_ouke_hakaSegmentStart = .;
        . = ALIGN(0x10);
        _object_ouke_hakaSegmentTextStart = .;
            build/baserom/object_ouke_haka.o (.text)
        _object_ouke_hakaSegmentTextEnd = .;
    _object_ouke_hakaSegmentTextSize = ABSOLUTE( _object_ouke_hakaSegmentTextEnd - _object_ouke_hakaSegmentTextStart );
        _object_ouke_hakaSegmentDataStart = .;
            build/baserom/object_ouke_haka.o (.data)
        _object_ouke_hakaSegmentDataEnd = .;
    _object_ouke_hakaSegmentDataSize = ABSOLUTE( _object_ouke_hakaSegmentDataEnd - _object_ouke_hakaSegmentDataStart );
        _object_ouke_hakaSegmentRoDataStart = .;
            build/baserom/object_ouke_haka.o (.rodata)
        _object_ouke_hakaSegmentRoDataEnd = .;
    _object_ouke_hakaSegmentRoDataSize = ABSOLUTE( _object_ouke_hakaSegmentRoDataEnd - _object_ouke_hakaSegmentRoDataStart );
        _object_ouke_hakaSegmentSDataStart = .;
            build/baserom/object_ouke_haka.o (.sdata)
        . = ALIGN(0x10);
        _object_ouke_hakaSegmentSDataEnd = .;
        _object_ouke_hakaSegmentOvlStart = .;
            build/baserom/object_ouke_haka.o (.ovl)
        . = ALIGN(0x10);
        _object_ouke_hakaSegmentOvlEnd = .;
    }
    _RomSize += ( _object_ouke_hakaSegmentOvlEnd - _object_ouke_hakaSegmentTextStart );
    _object_ouke_hakaSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_ouke_haka.bss ADDR(..object_ouke_haka) + SIZEOF(..object_ouke_haka) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_ouke_hakaSegmentBssStart = .;
            build/baserom/object_ouke_haka.o (.sbss)
            build/baserom/object_ouke_haka.o (.scommon)
            build/baserom/object_ouke_haka.o (.bss)
            build/baserom/object_ouke_haka.o (COMMON)
        . = ALIGN(0x10);
        _object_ouke_hakaSegmentBssEnd = .;
        _object_ouke_hakaSegmentEnd = .;
    }
    _object_ouke_hakaSegmentBssSize = ABSOLUTE( _object_ouke_hakaSegmentBssEnd - _object_ouke_hakaSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_timeblockSegmentRomStart = _RomSize;
    ..object_timeblock : AT(_RomSize)
    {
        _object_timeblockSegmentStart = .;
        . = ALIGN(0x10);
        _object_timeblockSegmentTextStart = .;
            build/baserom/object_timeblock.o (.text)
        _object_timeblockSegmentTextEnd = .;
    _object_timeblockSegmentTextSize = ABSOLUTE( _object_timeblockSegmentTextEnd - _object_timeblockSegmentTextStart );
        _object_timeblockSegmentDataStart = .;
            build/baserom/object_timeblock.o (.data)
        _object_timeblockSegmentDataEnd = .;
    _object_timeblockSegmentDataSize = ABSOLUTE( _object_timeblockSegmentDataEnd - _object_timeblockSegmentDataStart );
        _object_timeblockSegmentRoDataStart = .;
            build/baserom/object_timeblock.o (.rodata)
        _object_timeblockSegmentRoDataEnd = .;
    _object_timeblockSegmentRoDataSize = ABSOLUTE( _object_timeblockSegmentRoDataEnd - _object_timeblockSegmentRoDataStart );
        _object_timeblockSegmentSDataStart = .;
            build/baserom/object_timeblock.o (.sdata)
        . = ALIGN(0x10);
        _object_timeblockSegmentSDataEnd = .;
        _object_timeblockSegmentOvlStart = .;
            build/baserom/object_timeblock.o (.ovl)
        . = ALIGN(0x10);
        _object_timeblockSegmentOvlEnd = .;
    }
    _RomSize += ( _object_timeblockSegmentOvlEnd - _object_timeblockSegmentTextStart );
    _object_timeblockSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_timeblock.bss ADDR(..object_timeblock) + SIZEOF(..object_timeblock) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_timeblockSegmentBssStart = .;
            build/baserom/object_timeblock.o (.sbss)
            build/baserom/object_timeblock.o (.scommon)
            build/baserom/object_timeblock.o (.bss)
            build/baserom/object_timeblock.o (COMMON)
        . = ALIGN(0x10);
        _object_timeblockSegmentBssEnd = .;
        _object_timeblockSegmentEnd = .;
    }
    _object_timeblockSegmentBssSize = ABSOLUTE( _object_timeblockSegmentBssEnd - _object_timeblockSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _object_zl4SegmentRomStart = _RomSize;
    ..object_zl4 : AT(_RomSize)
    {
        _object_zl4SegmentStart = .;
        . = ALIGN(0x10);
        _object_zl4SegmentTextStart = .;
            build/baserom/object_zl4.o (.text)
        _object_zl4SegmentTextEnd = .;
    _object_zl4SegmentTextSize = ABSOLUTE( _object_zl4SegmentTextEnd - _object_zl4SegmentTextStart );
        _object_zl4SegmentDataStart = .;
            build/baserom/object_zl4.o (.data)
        _object_zl4SegmentDataEnd = .;
    _object_zl4SegmentDataSize = ABSOLUTE( _object_zl4SegmentDataEnd - _object_zl4SegmentDataStart );
        _object_zl4SegmentRoDataStart = .;
            build/baserom/object_zl4.o (.rodata)
        _object_zl4SegmentRoDataEnd = .;
    _object_zl4SegmentRoDataSize = ABSOLUTE( _object_zl4SegmentRoDataEnd - _object_zl4SegmentRoDataStart );
        _object_zl4SegmentSDataStart = .;
            build/baserom/object_zl4.o (.sdata)
        . = ALIGN(0x10);
        _object_zl4SegmentSDataEnd = .;
        _object_zl4SegmentOvlStart = .;
            build/baserom/object_zl4.o (.ovl)
        . = ALIGN(0x10);
        _object_zl4SegmentOvlEnd = .;
    }
    _RomSize += ( _object_zl4SegmentOvlEnd - _object_zl4SegmentTextStart );
    _object_zl4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..object_zl4.bss ADDR(..object_zl4) + SIZEOF(..object_zl4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _object_zl4SegmentBssStart = .;
            build/baserom/object_zl4.o (.sbss)
            build/baserom/object_zl4.o (.scommon)
            build/baserom/object_zl4.o (.bss)
            build/baserom/object_zl4.o (COMMON)
        . = ALIGN(0x10);
        _object_zl4SegmentBssEnd = .;
        _object_zl4SegmentEnd = .;
    }
    _object_zl4SegmentBssSize = ABSOLUTE( _object_zl4SegmentBssEnd - _object_zl4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_01SegmentRomStart = _RomSize;
    ..g_pn_01 : AT(_RomSize)
    {
        _g_pn_01SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_01SegmentTextStart = .;
            build/baserom/g_pn_01.o (.text)
        _g_pn_01SegmentTextEnd = .;
    _g_pn_01SegmentTextSize = ABSOLUTE( _g_pn_01SegmentTextEnd - _g_pn_01SegmentTextStart );
        _g_pn_01SegmentDataStart = .;
            build/baserom/g_pn_01.o (.data)
        _g_pn_01SegmentDataEnd = .;
    _g_pn_01SegmentDataSize = ABSOLUTE( _g_pn_01SegmentDataEnd - _g_pn_01SegmentDataStart );
        _g_pn_01SegmentRoDataStart = .;
            build/baserom/g_pn_01.o (.rodata)
        _g_pn_01SegmentRoDataEnd = .;
    _g_pn_01SegmentRoDataSize = ABSOLUTE( _g_pn_01SegmentRoDataEnd - _g_pn_01SegmentRoDataStart );
        _g_pn_01SegmentSDataStart = .;
            build/baserom/g_pn_01.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_01SegmentSDataEnd = .;
        _g_pn_01SegmentOvlStart = .;
            build/baserom/g_pn_01.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_01SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_01SegmentOvlEnd - _g_pn_01SegmentTextStart );
    _g_pn_01SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_01.bss ADDR(..g_pn_01) + SIZEOF(..g_pn_01) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_01SegmentBssStart = .;
            build/baserom/g_pn_01.o (.sbss)
            build/baserom/g_pn_01.o (.scommon)
            build/baserom/g_pn_01.o (.bss)
            build/baserom/g_pn_01.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_01SegmentBssEnd = .;
        _g_pn_01SegmentEnd = .;
    }
    _g_pn_01SegmentBssSize = ABSOLUTE( _g_pn_01SegmentBssEnd - _g_pn_01SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_02SegmentRomStart = _RomSize;
    ..g_pn_02 : AT(_RomSize)
    {
        _g_pn_02SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_02SegmentTextStart = .;
            build/baserom/g_pn_02.o (.text)
        _g_pn_02SegmentTextEnd = .;
    _g_pn_02SegmentTextSize = ABSOLUTE( _g_pn_02SegmentTextEnd - _g_pn_02SegmentTextStart );
        _g_pn_02SegmentDataStart = .;
            build/baserom/g_pn_02.o (.data)
        _g_pn_02SegmentDataEnd = .;
    _g_pn_02SegmentDataSize = ABSOLUTE( _g_pn_02SegmentDataEnd - _g_pn_02SegmentDataStart );
        _g_pn_02SegmentRoDataStart = .;
            build/baserom/g_pn_02.o (.rodata)
        _g_pn_02SegmentRoDataEnd = .;
    _g_pn_02SegmentRoDataSize = ABSOLUTE( _g_pn_02SegmentRoDataEnd - _g_pn_02SegmentRoDataStart );
        _g_pn_02SegmentSDataStart = .;
            build/baserom/g_pn_02.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_02SegmentSDataEnd = .;
        _g_pn_02SegmentOvlStart = .;
            build/baserom/g_pn_02.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_02SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_02SegmentOvlEnd - _g_pn_02SegmentTextStart );
    _g_pn_02SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_02.bss ADDR(..g_pn_02) + SIZEOF(..g_pn_02) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_02SegmentBssStart = .;
            build/baserom/g_pn_02.o (.sbss)
            build/baserom/g_pn_02.o (.scommon)
            build/baserom/g_pn_02.o (.bss)
            build/baserom/g_pn_02.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_02SegmentBssEnd = .;
        _g_pn_02SegmentEnd = .;
    }
    _g_pn_02SegmentBssSize = ABSOLUTE( _g_pn_02SegmentBssEnd - _g_pn_02SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_03SegmentRomStart = _RomSize;
    ..g_pn_03 : AT(_RomSize)
    {
        _g_pn_03SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_03SegmentTextStart = .;
            build/baserom/g_pn_03.o (.text)
        _g_pn_03SegmentTextEnd = .;
    _g_pn_03SegmentTextSize = ABSOLUTE( _g_pn_03SegmentTextEnd - _g_pn_03SegmentTextStart );
        _g_pn_03SegmentDataStart = .;
            build/baserom/g_pn_03.o (.data)
        _g_pn_03SegmentDataEnd = .;
    _g_pn_03SegmentDataSize = ABSOLUTE( _g_pn_03SegmentDataEnd - _g_pn_03SegmentDataStart );
        _g_pn_03SegmentRoDataStart = .;
            build/baserom/g_pn_03.o (.rodata)
        _g_pn_03SegmentRoDataEnd = .;
    _g_pn_03SegmentRoDataSize = ABSOLUTE( _g_pn_03SegmentRoDataEnd - _g_pn_03SegmentRoDataStart );
        _g_pn_03SegmentSDataStart = .;
            build/baserom/g_pn_03.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_03SegmentSDataEnd = .;
        _g_pn_03SegmentOvlStart = .;
            build/baserom/g_pn_03.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_03SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_03SegmentOvlEnd - _g_pn_03SegmentTextStart );
    _g_pn_03SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_03.bss ADDR(..g_pn_03) + SIZEOF(..g_pn_03) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_03SegmentBssStart = .;
            build/baserom/g_pn_03.o (.sbss)
            build/baserom/g_pn_03.o (.scommon)
            build/baserom/g_pn_03.o (.bss)
            build/baserom/g_pn_03.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_03SegmentBssEnd = .;
        _g_pn_03SegmentEnd = .;
    }
    _g_pn_03SegmentBssSize = ABSOLUTE( _g_pn_03SegmentBssEnd - _g_pn_03SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_04SegmentRomStart = _RomSize;
    ..g_pn_04 : AT(_RomSize)
    {
        _g_pn_04SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_04SegmentTextStart = .;
            build/baserom/g_pn_04.o (.text)
        _g_pn_04SegmentTextEnd = .;
    _g_pn_04SegmentTextSize = ABSOLUTE( _g_pn_04SegmentTextEnd - _g_pn_04SegmentTextStart );
        _g_pn_04SegmentDataStart = .;
            build/baserom/g_pn_04.o (.data)
        _g_pn_04SegmentDataEnd = .;
    _g_pn_04SegmentDataSize = ABSOLUTE( _g_pn_04SegmentDataEnd - _g_pn_04SegmentDataStart );
        _g_pn_04SegmentRoDataStart = .;
            build/baserom/g_pn_04.o (.rodata)
        _g_pn_04SegmentRoDataEnd = .;
    _g_pn_04SegmentRoDataSize = ABSOLUTE( _g_pn_04SegmentRoDataEnd - _g_pn_04SegmentRoDataStart );
        _g_pn_04SegmentSDataStart = .;
            build/baserom/g_pn_04.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_04SegmentSDataEnd = .;
        _g_pn_04SegmentOvlStart = .;
            build/baserom/g_pn_04.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_04SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_04SegmentOvlEnd - _g_pn_04SegmentTextStart );
    _g_pn_04SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_04.bss ADDR(..g_pn_04) + SIZEOF(..g_pn_04) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_04SegmentBssStart = .;
            build/baserom/g_pn_04.o (.sbss)
            build/baserom/g_pn_04.o (.scommon)
            build/baserom/g_pn_04.o (.bss)
            build/baserom/g_pn_04.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_04SegmentBssEnd = .;
        _g_pn_04SegmentEnd = .;
    }
    _g_pn_04SegmentBssSize = ABSOLUTE( _g_pn_04SegmentBssEnd - _g_pn_04SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_05SegmentRomStart = _RomSize;
    ..g_pn_05 : AT(_RomSize)
    {
        _g_pn_05SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_05SegmentTextStart = .;
            build/baserom/g_pn_05.o (.text)
        _g_pn_05SegmentTextEnd = .;
    _g_pn_05SegmentTextSize = ABSOLUTE( _g_pn_05SegmentTextEnd - _g_pn_05SegmentTextStart );
        _g_pn_05SegmentDataStart = .;
            build/baserom/g_pn_05.o (.data)
        _g_pn_05SegmentDataEnd = .;
    _g_pn_05SegmentDataSize = ABSOLUTE( _g_pn_05SegmentDataEnd - _g_pn_05SegmentDataStart );
        _g_pn_05SegmentRoDataStart = .;
            build/baserom/g_pn_05.o (.rodata)
        _g_pn_05SegmentRoDataEnd = .;
    _g_pn_05SegmentRoDataSize = ABSOLUTE( _g_pn_05SegmentRoDataEnd - _g_pn_05SegmentRoDataStart );
        _g_pn_05SegmentSDataStart = .;
            build/baserom/g_pn_05.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_05SegmentSDataEnd = .;
        _g_pn_05SegmentOvlStart = .;
            build/baserom/g_pn_05.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_05SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_05SegmentOvlEnd - _g_pn_05SegmentTextStart );
    _g_pn_05SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_05.bss ADDR(..g_pn_05) + SIZEOF(..g_pn_05) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_05SegmentBssStart = .;
            build/baserom/g_pn_05.o (.sbss)
            build/baserom/g_pn_05.o (.scommon)
            build/baserom/g_pn_05.o (.bss)
            build/baserom/g_pn_05.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_05SegmentBssEnd = .;
        _g_pn_05SegmentEnd = .;
    }
    _g_pn_05SegmentBssSize = ABSOLUTE( _g_pn_05SegmentBssEnd - _g_pn_05SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_06SegmentRomStart = _RomSize;
    ..g_pn_06 : AT(_RomSize)
    {
        _g_pn_06SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_06SegmentTextStart = .;
            build/baserom/g_pn_06.o (.text)
        _g_pn_06SegmentTextEnd = .;
    _g_pn_06SegmentTextSize = ABSOLUTE( _g_pn_06SegmentTextEnd - _g_pn_06SegmentTextStart );
        _g_pn_06SegmentDataStart = .;
            build/baserom/g_pn_06.o (.data)
        _g_pn_06SegmentDataEnd = .;
    _g_pn_06SegmentDataSize = ABSOLUTE( _g_pn_06SegmentDataEnd - _g_pn_06SegmentDataStart );
        _g_pn_06SegmentRoDataStart = .;
            build/baserom/g_pn_06.o (.rodata)
        _g_pn_06SegmentRoDataEnd = .;
    _g_pn_06SegmentRoDataSize = ABSOLUTE( _g_pn_06SegmentRoDataEnd - _g_pn_06SegmentRoDataStart );
        _g_pn_06SegmentSDataStart = .;
            build/baserom/g_pn_06.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_06SegmentSDataEnd = .;
        _g_pn_06SegmentOvlStart = .;
            build/baserom/g_pn_06.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_06SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_06SegmentOvlEnd - _g_pn_06SegmentTextStart );
    _g_pn_06SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_06.bss ADDR(..g_pn_06) + SIZEOF(..g_pn_06) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_06SegmentBssStart = .;
            build/baserom/g_pn_06.o (.sbss)
            build/baserom/g_pn_06.o (.scommon)
            build/baserom/g_pn_06.o (.bss)
            build/baserom/g_pn_06.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_06SegmentBssEnd = .;
        _g_pn_06SegmentEnd = .;
    }
    _g_pn_06SegmentBssSize = ABSOLUTE( _g_pn_06SegmentBssEnd - _g_pn_06SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_07SegmentRomStart = _RomSize;
    ..g_pn_07 : AT(_RomSize)
    {
        _g_pn_07SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_07SegmentTextStart = .;
            build/baserom/g_pn_07.o (.text)
        _g_pn_07SegmentTextEnd = .;
    _g_pn_07SegmentTextSize = ABSOLUTE( _g_pn_07SegmentTextEnd - _g_pn_07SegmentTextStart );
        _g_pn_07SegmentDataStart = .;
            build/baserom/g_pn_07.o (.data)
        _g_pn_07SegmentDataEnd = .;
    _g_pn_07SegmentDataSize = ABSOLUTE( _g_pn_07SegmentDataEnd - _g_pn_07SegmentDataStart );
        _g_pn_07SegmentRoDataStart = .;
            build/baserom/g_pn_07.o (.rodata)
        _g_pn_07SegmentRoDataEnd = .;
    _g_pn_07SegmentRoDataSize = ABSOLUTE( _g_pn_07SegmentRoDataEnd - _g_pn_07SegmentRoDataStart );
        _g_pn_07SegmentSDataStart = .;
            build/baserom/g_pn_07.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_07SegmentSDataEnd = .;
        _g_pn_07SegmentOvlStart = .;
            build/baserom/g_pn_07.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_07SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_07SegmentOvlEnd - _g_pn_07SegmentTextStart );
    _g_pn_07SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_07.bss ADDR(..g_pn_07) + SIZEOF(..g_pn_07) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_07SegmentBssStart = .;
            build/baserom/g_pn_07.o (.sbss)
            build/baserom/g_pn_07.o (.scommon)
            build/baserom/g_pn_07.o (.bss)
            build/baserom/g_pn_07.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_07SegmentBssEnd = .;
        _g_pn_07SegmentEnd = .;
    }
    _g_pn_07SegmentBssSize = ABSOLUTE( _g_pn_07SegmentBssEnd - _g_pn_07SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_08SegmentRomStart = _RomSize;
    ..g_pn_08 : AT(_RomSize)
    {
        _g_pn_08SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_08SegmentTextStart = .;
            build/baserom/g_pn_08.o (.text)
        _g_pn_08SegmentTextEnd = .;
    _g_pn_08SegmentTextSize = ABSOLUTE( _g_pn_08SegmentTextEnd - _g_pn_08SegmentTextStart );
        _g_pn_08SegmentDataStart = .;
            build/baserom/g_pn_08.o (.data)
        _g_pn_08SegmentDataEnd = .;
    _g_pn_08SegmentDataSize = ABSOLUTE( _g_pn_08SegmentDataEnd - _g_pn_08SegmentDataStart );
        _g_pn_08SegmentRoDataStart = .;
            build/baserom/g_pn_08.o (.rodata)
        _g_pn_08SegmentRoDataEnd = .;
    _g_pn_08SegmentRoDataSize = ABSOLUTE( _g_pn_08SegmentRoDataEnd - _g_pn_08SegmentRoDataStart );
        _g_pn_08SegmentSDataStart = .;
            build/baserom/g_pn_08.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_08SegmentSDataEnd = .;
        _g_pn_08SegmentOvlStart = .;
            build/baserom/g_pn_08.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_08SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_08SegmentOvlEnd - _g_pn_08SegmentTextStart );
    _g_pn_08SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_08.bss ADDR(..g_pn_08) + SIZEOF(..g_pn_08) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_08SegmentBssStart = .;
            build/baserom/g_pn_08.o (.sbss)
            build/baserom/g_pn_08.o (.scommon)
            build/baserom/g_pn_08.o (.bss)
            build/baserom/g_pn_08.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_08SegmentBssEnd = .;
        _g_pn_08SegmentEnd = .;
    }
    _g_pn_08SegmentBssSize = ABSOLUTE( _g_pn_08SegmentBssEnd - _g_pn_08SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_09SegmentRomStart = _RomSize;
    ..g_pn_09 : AT(_RomSize)
    {
        _g_pn_09SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_09SegmentTextStart = .;
            build/baserom/g_pn_09.o (.text)
        _g_pn_09SegmentTextEnd = .;
    _g_pn_09SegmentTextSize = ABSOLUTE( _g_pn_09SegmentTextEnd - _g_pn_09SegmentTextStart );
        _g_pn_09SegmentDataStart = .;
            build/baserom/g_pn_09.o (.data)
        _g_pn_09SegmentDataEnd = .;
    _g_pn_09SegmentDataSize = ABSOLUTE( _g_pn_09SegmentDataEnd - _g_pn_09SegmentDataStart );
        _g_pn_09SegmentRoDataStart = .;
            build/baserom/g_pn_09.o (.rodata)
        _g_pn_09SegmentRoDataEnd = .;
    _g_pn_09SegmentRoDataSize = ABSOLUTE( _g_pn_09SegmentRoDataEnd - _g_pn_09SegmentRoDataStart );
        _g_pn_09SegmentSDataStart = .;
            build/baserom/g_pn_09.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_09SegmentSDataEnd = .;
        _g_pn_09SegmentOvlStart = .;
            build/baserom/g_pn_09.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_09SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_09SegmentOvlEnd - _g_pn_09SegmentTextStart );
    _g_pn_09SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_09.bss ADDR(..g_pn_09) + SIZEOF(..g_pn_09) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_09SegmentBssStart = .;
            build/baserom/g_pn_09.o (.sbss)
            build/baserom/g_pn_09.o (.scommon)
            build/baserom/g_pn_09.o (.bss)
            build/baserom/g_pn_09.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_09SegmentBssEnd = .;
        _g_pn_09SegmentEnd = .;
    }
    _g_pn_09SegmentBssSize = ABSOLUTE( _g_pn_09SegmentBssEnd - _g_pn_09SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_10SegmentRomStart = _RomSize;
    ..g_pn_10 : AT(_RomSize)
    {
        _g_pn_10SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_10SegmentTextStart = .;
            build/baserom/g_pn_10.o (.text)
        _g_pn_10SegmentTextEnd = .;
    _g_pn_10SegmentTextSize = ABSOLUTE( _g_pn_10SegmentTextEnd - _g_pn_10SegmentTextStart );
        _g_pn_10SegmentDataStart = .;
            build/baserom/g_pn_10.o (.data)
        _g_pn_10SegmentDataEnd = .;
    _g_pn_10SegmentDataSize = ABSOLUTE( _g_pn_10SegmentDataEnd - _g_pn_10SegmentDataStart );
        _g_pn_10SegmentRoDataStart = .;
            build/baserom/g_pn_10.o (.rodata)
        _g_pn_10SegmentRoDataEnd = .;
    _g_pn_10SegmentRoDataSize = ABSOLUTE( _g_pn_10SegmentRoDataEnd - _g_pn_10SegmentRoDataStart );
        _g_pn_10SegmentSDataStart = .;
            build/baserom/g_pn_10.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_10SegmentSDataEnd = .;
        _g_pn_10SegmentOvlStart = .;
            build/baserom/g_pn_10.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_10SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_10SegmentOvlEnd - _g_pn_10SegmentTextStart );
    _g_pn_10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_10.bss ADDR(..g_pn_10) + SIZEOF(..g_pn_10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_10SegmentBssStart = .;
            build/baserom/g_pn_10.o (.sbss)
            build/baserom/g_pn_10.o (.scommon)
            build/baserom/g_pn_10.o (.bss)
            build/baserom/g_pn_10.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_10SegmentBssEnd = .;
        _g_pn_10SegmentEnd = .;
    }
    _g_pn_10SegmentBssSize = ABSOLUTE( _g_pn_10SegmentBssEnd - _g_pn_10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_11SegmentRomStart = _RomSize;
    ..g_pn_11 : AT(_RomSize)
    {
        _g_pn_11SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_11SegmentTextStart = .;
            build/baserom/g_pn_11.o (.text)
        _g_pn_11SegmentTextEnd = .;
    _g_pn_11SegmentTextSize = ABSOLUTE( _g_pn_11SegmentTextEnd - _g_pn_11SegmentTextStart );
        _g_pn_11SegmentDataStart = .;
            build/baserom/g_pn_11.o (.data)
        _g_pn_11SegmentDataEnd = .;
    _g_pn_11SegmentDataSize = ABSOLUTE( _g_pn_11SegmentDataEnd - _g_pn_11SegmentDataStart );
        _g_pn_11SegmentRoDataStart = .;
            build/baserom/g_pn_11.o (.rodata)
        _g_pn_11SegmentRoDataEnd = .;
    _g_pn_11SegmentRoDataSize = ABSOLUTE( _g_pn_11SegmentRoDataEnd - _g_pn_11SegmentRoDataStart );
        _g_pn_11SegmentSDataStart = .;
            build/baserom/g_pn_11.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_11SegmentSDataEnd = .;
        _g_pn_11SegmentOvlStart = .;
            build/baserom/g_pn_11.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_11SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_11SegmentOvlEnd - _g_pn_11SegmentTextStart );
    _g_pn_11SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_11.bss ADDR(..g_pn_11) + SIZEOF(..g_pn_11) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_11SegmentBssStart = .;
            build/baserom/g_pn_11.o (.sbss)
            build/baserom/g_pn_11.o (.scommon)
            build/baserom/g_pn_11.o (.bss)
            build/baserom/g_pn_11.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_11SegmentBssEnd = .;
        _g_pn_11SegmentEnd = .;
    }
    _g_pn_11SegmentBssSize = ABSOLUTE( _g_pn_11SegmentBssEnd - _g_pn_11SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_12SegmentRomStart = _RomSize;
    ..g_pn_12 : AT(_RomSize)
    {
        _g_pn_12SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_12SegmentTextStart = .;
            build/baserom/g_pn_12.o (.text)
        _g_pn_12SegmentTextEnd = .;
    _g_pn_12SegmentTextSize = ABSOLUTE( _g_pn_12SegmentTextEnd - _g_pn_12SegmentTextStart );
        _g_pn_12SegmentDataStart = .;
            build/baserom/g_pn_12.o (.data)
        _g_pn_12SegmentDataEnd = .;
    _g_pn_12SegmentDataSize = ABSOLUTE( _g_pn_12SegmentDataEnd - _g_pn_12SegmentDataStart );
        _g_pn_12SegmentRoDataStart = .;
            build/baserom/g_pn_12.o (.rodata)
        _g_pn_12SegmentRoDataEnd = .;
    _g_pn_12SegmentRoDataSize = ABSOLUTE( _g_pn_12SegmentRoDataEnd - _g_pn_12SegmentRoDataStart );
        _g_pn_12SegmentSDataStart = .;
            build/baserom/g_pn_12.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_12SegmentSDataEnd = .;
        _g_pn_12SegmentOvlStart = .;
            build/baserom/g_pn_12.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_12SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_12SegmentOvlEnd - _g_pn_12SegmentTextStart );
    _g_pn_12SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_12.bss ADDR(..g_pn_12) + SIZEOF(..g_pn_12) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_12SegmentBssStart = .;
            build/baserom/g_pn_12.o (.sbss)
            build/baserom/g_pn_12.o (.scommon)
            build/baserom/g_pn_12.o (.bss)
            build/baserom/g_pn_12.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_12SegmentBssEnd = .;
        _g_pn_12SegmentEnd = .;
    }
    _g_pn_12SegmentBssSize = ABSOLUTE( _g_pn_12SegmentBssEnd - _g_pn_12SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_13SegmentRomStart = _RomSize;
    ..g_pn_13 : AT(_RomSize)
    {
        _g_pn_13SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_13SegmentTextStart = .;
            build/baserom/g_pn_13.o (.text)
        _g_pn_13SegmentTextEnd = .;
    _g_pn_13SegmentTextSize = ABSOLUTE( _g_pn_13SegmentTextEnd - _g_pn_13SegmentTextStart );
        _g_pn_13SegmentDataStart = .;
            build/baserom/g_pn_13.o (.data)
        _g_pn_13SegmentDataEnd = .;
    _g_pn_13SegmentDataSize = ABSOLUTE( _g_pn_13SegmentDataEnd - _g_pn_13SegmentDataStart );
        _g_pn_13SegmentRoDataStart = .;
            build/baserom/g_pn_13.o (.rodata)
        _g_pn_13SegmentRoDataEnd = .;
    _g_pn_13SegmentRoDataSize = ABSOLUTE( _g_pn_13SegmentRoDataEnd - _g_pn_13SegmentRoDataStart );
        _g_pn_13SegmentSDataStart = .;
            build/baserom/g_pn_13.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_13SegmentSDataEnd = .;
        _g_pn_13SegmentOvlStart = .;
            build/baserom/g_pn_13.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_13SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_13SegmentOvlEnd - _g_pn_13SegmentTextStart );
    _g_pn_13SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_13.bss ADDR(..g_pn_13) + SIZEOF(..g_pn_13) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_13SegmentBssStart = .;
            build/baserom/g_pn_13.o (.sbss)
            build/baserom/g_pn_13.o (.scommon)
            build/baserom/g_pn_13.o (.bss)
            build/baserom/g_pn_13.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_13SegmentBssEnd = .;
        _g_pn_13SegmentEnd = .;
    }
    _g_pn_13SegmentBssSize = ABSOLUTE( _g_pn_13SegmentBssEnd - _g_pn_13SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_14SegmentRomStart = _RomSize;
    ..g_pn_14 : AT(_RomSize)
    {
        _g_pn_14SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_14SegmentTextStart = .;
            build/baserom/g_pn_14.o (.text)
        _g_pn_14SegmentTextEnd = .;
    _g_pn_14SegmentTextSize = ABSOLUTE( _g_pn_14SegmentTextEnd - _g_pn_14SegmentTextStart );
        _g_pn_14SegmentDataStart = .;
            build/baserom/g_pn_14.o (.data)
        _g_pn_14SegmentDataEnd = .;
    _g_pn_14SegmentDataSize = ABSOLUTE( _g_pn_14SegmentDataEnd - _g_pn_14SegmentDataStart );
        _g_pn_14SegmentRoDataStart = .;
            build/baserom/g_pn_14.o (.rodata)
        _g_pn_14SegmentRoDataEnd = .;
    _g_pn_14SegmentRoDataSize = ABSOLUTE( _g_pn_14SegmentRoDataEnd - _g_pn_14SegmentRoDataStart );
        _g_pn_14SegmentSDataStart = .;
            build/baserom/g_pn_14.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_14SegmentSDataEnd = .;
        _g_pn_14SegmentOvlStart = .;
            build/baserom/g_pn_14.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_14SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_14SegmentOvlEnd - _g_pn_14SegmentTextStart );
    _g_pn_14SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_14.bss ADDR(..g_pn_14) + SIZEOF(..g_pn_14) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_14SegmentBssStart = .;
            build/baserom/g_pn_14.o (.sbss)
            build/baserom/g_pn_14.o (.scommon)
            build/baserom/g_pn_14.o (.bss)
            build/baserom/g_pn_14.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_14SegmentBssEnd = .;
        _g_pn_14SegmentEnd = .;
    }
    _g_pn_14SegmentBssSize = ABSOLUTE( _g_pn_14SegmentBssEnd - _g_pn_14SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_15SegmentRomStart = _RomSize;
    ..g_pn_15 : AT(_RomSize)
    {
        _g_pn_15SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_15SegmentTextStart = .;
            build/baserom/g_pn_15.o (.text)
        _g_pn_15SegmentTextEnd = .;
    _g_pn_15SegmentTextSize = ABSOLUTE( _g_pn_15SegmentTextEnd - _g_pn_15SegmentTextStart );
        _g_pn_15SegmentDataStart = .;
            build/baserom/g_pn_15.o (.data)
        _g_pn_15SegmentDataEnd = .;
    _g_pn_15SegmentDataSize = ABSOLUTE( _g_pn_15SegmentDataEnd - _g_pn_15SegmentDataStart );
        _g_pn_15SegmentRoDataStart = .;
            build/baserom/g_pn_15.o (.rodata)
        _g_pn_15SegmentRoDataEnd = .;
    _g_pn_15SegmentRoDataSize = ABSOLUTE( _g_pn_15SegmentRoDataEnd - _g_pn_15SegmentRoDataStart );
        _g_pn_15SegmentSDataStart = .;
            build/baserom/g_pn_15.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_15SegmentSDataEnd = .;
        _g_pn_15SegmentOvlStart = .;
            build/baserom/g_pn_15.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_15SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_15SegmentOvlEnd - _g_pn_15SegmentTextStart );
    _g_pn_15SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_15.bss ADDR(..g_pn_15) + SIZEOF(..g_pn_15) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_15SegmentBssStart = .;
            build/baserom/g_pn_15.o (.sbss)
            build/baserom/g_pn_15.o (.scommon)
            build/baserom/g_pn_15.o (.bss)
            build/baserom/g_pn_15.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_15SegmentBssEnd = .;
        _g_pn_15SegmentEnd = .;
    }
    _g_pn_15SegmentBssSize = ABSOLUTE( _g_pn_15SegmentBssEnd - _g_pn_15SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_16SegmentRomStart = _RomSize;
    ..g_pn_16 : AT(_RomSize)
    {
        _g_pn_16SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_16SegmentTextStart = .;
            build/baserom/g_pn_16.o (.text)
        _g_pn_16SegmentTextEnd = .;
    _g_pn_16SegmentTextSize = ABSOLUTE( _g_pn_16SegmentTextEnd - _g_pn_16SegmentTextStart );
        _g_pn_16SegmentDataStart = .;
            build/baserom/g_pn_16.o (.data)
        _g_pn_16SegmentDataEnd = .;
    _g_pn_16SegmentDataSize = ABSOLUTE( _g_pn_16SegmentDataEnd - _g_pn_16SegmentDataStart );
        _g_pn_16SegmentRoDataStart = .;
            build/baserom/g_pn_16.o (.rodata)
        _g_pn_16SegmentRoDataEnd = .;
    _g_pn_16SegmentRoDataSize = ABSOLUTE( _g_pn_16SegmentRoDataEnd - _g_pn_16SegmentRoDataStart );
        _g_pn_16SegmentSDataStart = .;
            build/baserom/g_pn_16.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_16SegmentSDataEnd = .;
        _g_pn_16SegmentOvlStart = .;
            build/baserom/g_pn_16.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_16SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_16SegmentOvlEnd - _g_pn_16SegmentTextStart );
    _g_pn_16SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_16.bss ADDR(..g_pn_16) + SIZEOF(..g_pn_16) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_16SegmentBssStart = .;
            build/baserom/g_pn_16.o (.sbss)
            build/baserom/g_pn_16.o (.scommon)
            build/baserom/g_pn_16.o (.bss)
            build/baserom/g_pn_16.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_16SegmentBssEnd = .;
        _g_pn_16SegmentEnd = .;
    }
    _g_pn_16SegmentBssSize = ABSOLUTE( _g_pn_16SegmentBssEnd - _g_pn_16SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_17SegmentRomStart = _RomSize;
    ..g_pn_17 : AT(_RomSize)
    {
        _g_pn_17SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_17SegmentTextStart = .;
            build/baserom/g_pn_17.o (.text)
        _g_pn_17SegmentTextEnd = .;
    _g_pn_17SegmentTextSize = ABSOLUTE( _g_pn_17SegmentTextEnd - _g_pn_17SegmentTextStart );
        _g_pn_17SegmentDataStart = .;
            build/baserom/g_pn_17.o (.data)
        _g_pn_17SegmentDataEnd = .;
    _g_pn_17SegmentDataSize = ABSOLUTE( _g_pn_17SegmentDataEnd - _g_pn_17SegmentDataStart );
        _g_pn_17SegmentRoDataStart = .;
            build/baserom/g_pn_17.o (.rodata)
        _g_pn_17SegmentRoDataEnd = .;
    _g_pn_17SegmentRoDataSize = ABSOLUTE( _g_pn_17SegmentRoDataEnd - _g_pn_17SegmentRoDataStart );
        _g_pn_17SegmentSDataStart = .;
            build/baserom/g_pn_17.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_17SegmentSDataEnd = .;
        _g_pn_17SegmentOvlStart = .;
            build/baserom/g_pn_17.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_17SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_17SegmentOvlEnd - _g_pn_17SegmentTextStart );
    _g_pn_17SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_17.bss ADDR(..g_pn_17) + SIZEOF(..g_pn_17) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_17SegmentBssStart = .;
            build/baserom/g_pn_17.o (.sbss)
            build/baserom/g_pn_17.o (.scommon)
            build/baserom/g_pn_17.o (.bss)
            build/baserom/g_pn_17.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_17SegmentBssEnd = .;
        _g_pn_17SegmentEnd = .;
    }
    _g_pn_17SegmentBssSize = ABSOLUTE( _g_pn_17SegmentBssEnd - _g_pn_17SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_18SegmentRomStart = _RomSize;
    ..g_pn_18 : AT(_RomSize)
    {
        _g_pn_18SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_18SegmentTextStart = .;
            build/baserom/g_pn_18.o (.text)
        _g_pn_18SegmentTextEnd = .;
    _g_pn_18SegmentTextSize = ABSOLUTE( _g_pn_18SegmentTextEnd - _g_pn_18SegmentTextStart );
        _g_pn_18SegmentDataStart = .;
            build/baserom/g_pn_18.o (.data)
        _g_pn_18SegmentDataEnd = .;
    _g_pn_18SegmentDataSize = ABSOLUTE( _g_pn_18SegmentDataEnd - _g_pn_18SegmentDataStart );
        _g_pn_18SegmentRoDataStart = .;
            build/baserom/g_pn_18.o (.rodata)
        _g_pn_18SegmentRoDataEnd = .;
    _g_pn_18SegmentRoDataSize = ABSOLUTE( _g_pn_18SegmentRoDataEnd - _g_pn_18SegmentRoDataStart );
        _g_pn_18SegmentSDataStart = .;
            build/baserom/g_pn_18.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_18SegmentSDataEnd = .;
        _g_pn_18SegmentOvlStart = .;
            build/baserom/g_pn_18.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_18SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_18SegmentOvlEnd - _g_pn_18SegmentTextStart );
    _g_pn_18SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_18.bss ADDR(..g_pn_18) + SIZEOF(..g_pn_18) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_18SegmentBssStart = .;
            build/baserom/g_pn_18.o (.sbss)
            build/baserom/g_pn_18.o (.scommon)
            build/baserom/g_pn_18.o (.bss)
            build/baserom/g_pn_18.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_18SegmentBssEnd = .;
        _g_pn_18SegmentEnd = .;
    }
    _g_pn_18SegmentBssSize = ABSOLUTE( _g_pn_18SegmentBssEnd - _g_pn_18SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_19SegmentRomStart = _RomSize;
    ..g_pn_19 : AT(_RomSize)
    {
        _g_pn_19SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_19SegmentTextStart = .;
            build/baserom/g_pn_19.o (.text)
        _g_pn_19SegmentTextEnd = .;
    _g_pn_19SegmentTextSize = ABSOLUTE( _g_pn_19SegmentTextEnd - _g_pn_19SegmentTextStart );
        _g_pn_19SegmentDataStart = .;
            build/baserom/g_pn_19.o (.data)
        _g_pn_19SegmentDataEnd = .;
    _g_pn_19SegmentDataSize = ABSOLUTE( _g_pn_19SegmentDataEnd - _g_pn_19SegmentDataStart );
        _g_pn_19SegmentRoDataStart = .;
            build/baserom/g_pn_19.o (.rodata)
        _g_pn_19SegmentRoDataEnd = .;
    _g_pn_19SegmentRoDataSize = ABSOLUTE( _g_pn_19SegmentRoDataEnd - _g_pn_19SegmentRoDataStart );
        _g_pn_19SegmentSDataStart = .;
            build/baserom/g_pn_19.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_19SegmentSDataEnd = .;
        _g_pn_19SegmentOvlStart = .;
            build/baserom/g_pn_19.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_19SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_19SegmentOvlEnd - _g_pn_19SegmentTextStart );
    _g_pn_19SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_19.bss ADDR(..g_pn_19) + SIZEOF(..g_pn_19) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_19SegmentBssStart = .;
            build/baserom/g_pn_19.o (.sbss)
            build/baserom/g_pn_19.o (.scommon)
            build/baserom/g_pn_19.o (.bss)
            build/baserom/g_pn_19.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_19SegmentBssEnd = .;
        _g_pn_19SegmentEnd = .;
    }
    _g_pn_19SegmentBssSize = ABSOLUTE( _g_pn_19SegmentBssEnd - _g_pn_19SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_20SegmentRomStart = _RomSize;
    ..g_pn_20 : AT(_RomSize)
    {
        _g_pn_20SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_20SegmentTextStart = .;
            build/baserom/g_pn_20.o (.text)
        _g_pn_20SegmentTextEnd = .;
    _g_pn_20SegmentTextSize = ABSOLUTE( _g_pn_20SegmentTextEnd - _g_pn_20SegmentTextStart );
        _g_pn_20SegmentDataStart = .;
            build/baserom/g_pn_20.o (.data)
        _g_pn_20SegmentDataEnd = .;
    _g_pn_20SegmentDataSize = ABSOLUTE( _g_pn_20SegmentDataEnd - _g_pn_20SegmentDataStart );
        _g_pn_20SegmentRoDataStart = .;
            build/baserom/g_pn_20.o (.rodata)
        _g_pn_20SegmentRoDataEnd = .;
    _g_pn_20SegmentRoDataSize = ABSOLUTE( _g_pn_20SegmentRoDataEnd - _g_pn_20SegmentRoDataStart );
        _g_pn_20SegmentSDataStart = .;
            build/baserom/g_pn_20.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_20SegmentSDataEnd = .;
        _g_pn_20SegmentOvlStart = .;
            build/baserom/g_pn_20.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_20SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_20SegmentOvlEnd - _g_pn_20SegmentTextStart );
    _g_pn_20SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_20.bss ADDR(..g_pn_20) + SIZEOF(..g_pn_20) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_20SegmentBssStart = .;
            build/baserom/g_pn_20.o (.sbss)
            build/baserom/g_pn_20.o (.scommon)
            build/baserom/g_pn_20.o (.bss)
            build/baserom/g_pn_20.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_20SegmentBssEnd = .;
        _g_pn_20SegmentEnd = .;
    }
    _g_pn_20SegmentBssSize = ABSOLUTE( _g_pn_20SegmentBssEnd - _g_pn_20SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_21SegmentRomStart = _RomSize;
    ..g_pn_21 : AT(_RomSize)
    {
        _g_pn_21SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_21SegmentTextStart = .;
            build/baserom/g_pn_21.o (.text)
        _g_pn_21SegmentTextEnd = .;
    _g_pn_21SegmentTextSize = ABSOLUTE( _g_pn_21SegmentTextEnd - _g_pn_21SegmentTextStart );
        _g_pn_21SegmentDataStart = .;
            build/baserom/g_pn_21.o (.data)
        _g_pn_21SegmentDataEnd = .;
    _g_pn_21SegmentDataSize = ABSOLUTE( _g_pn_21SegmentDataEnd - _g_pn_21SegmentDataStart );
        _g_pn_21SegmentRoDataStart = .;
            build/baserom/g_pn_21.o (.rodata)
        _g_pn_21SegmentRoDataEnd = .;
    _g_pn_21SegmentRoDataSize = ABSOLUTE( _g_pn_21SegmentRoDataEnd - _g_pn_21SegmentRoDataStart );
        _g_pn_21SegmentSDataStart = .;
            build/baserom/g_pn_21.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_21SegmentSDataEnd = .;
        _g_pn_21SegmentOvlStart = .;
            build/baserom/g_pn_21.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_21SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_21SegmentOvlEnd - _g_pn_21SegmentTextStart );
    _g_pn_21SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_21.bss ADDR(..g_pn_21) + SIZEOF(..g_pn_21) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_21SegmentBssStart = .;
            build/baserom/g_pn_21.o (.sbss)
            build/baserom/g_pn_21.o (.scommon)
            build/baserom/g_pn_21.o (.bss)
            build/baserom/g_pn_21.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_21SegmentBssEnd = .;
        _g_pn_21SegmentEnd = .;
    }
    _g_pn_21SegmentBssSize = ABSOLUTE( _g_pn_21SegmentBssEnd - _g_pn_21SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_22SegmentRomStart = _RomSize;
    ..g_pn_22 : AT(_RomSize)
    {
        _g_pn_22SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_22SegmentTextStart = .;
            build/baserom/g_pn_22.o (.text)
        _g_pn_22SegmentTextEnd = .;
    _g_pn_22SegmentTextSize = ABSOLUTE( _g_pn_22SegmentTextEnd - _g_pn_22SegmentTextStart );
        _g_pn_22SegmentDataStart = .;
            build/baserom/g_pn_22.o (.data)
        _g_pn_22SegmentDataEnd = .;
    _g_pn_22SegmentDataSize = ABSOLUTE( _g_pn_22SegmentDataEnd - _g_pn_22SegmentDataStart );
        _g_pn_22SegmentRoDataStart = .;
            build/baserom/g_pn_22.o (.rodata)
        _g_pn_22SegmentRoDataEnd = .;
    _g_pn_22SegmentRoDataSize = ABSOLUTE( _g_pn_22SegmentRoDataEnd - _g_pn_22SegmentRoDataStart );
        _g_pn_22SegmentSDataStart = .;
            build/baserom/g_pn_22.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_22SegmentSDataEnd = .;
        _g_pn_22SegmentOvlStart = .;
            build/baserom/g_pn_22.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_22SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_22SegmentOvlEnd - _g_pn_22SegmentTextStart );
    _g_pn_22SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_22.bss ADDR(..g_pn_22) + SIZEOF(..g_pn_22) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_22SegmentBssStart = .;
            build/baserom/g_pn_22.o (.sbss)
            build/baserom/g_pn_22.o (.scommon)
            build/baserom/g_pn_22.o (.bss)
            build/baserom/g_pn_22.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_22SegmentBssEnd = .;
        _g_pn_22SegmentEnd = .;
    }
    _g_pn_22SegmentBssSize = ABSOLUTE( _g_pn_22SegmentBssEnd - _g_pn_22SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_23SegmentRomStart = _RomSize;
    ..g_pn_23 : AT(_RomSize)
    {
        _g_pn_23SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_23SegmentTextStart = .;
            build/baserom/g_pn_23.o (.text)
        _g_pn_23SegmentTextEnd = .;
    _g_pn_23SegmentTextSize = ABSOLUTE( _g_pn_23SegmentTextEnd - _g_pn_23SegmentTextStart );
        _g_pn_23SegmentDataStart = .;
            build/baserom/g_pn_23.o (.data)
        _g_pn_23SegmentDataEnd = .;
    _g_pn_23SegmentDataSize = ABSOLUTE( _g_pn_23SegmentDataEnd - _g_pn_23SegmentDataStart );
        _g_pn_23SegmentRoDataStart = .;
            build/baserom/g_pn_23.o (.rodata)
        _g_pn_23SegmentRoDataEnd = .;
    _g_pn_23SegmentRoDataSize = ABSOLUTE( _g_pn_23SegmentRoDataEnd - _g_pn_23SegmentRoDataStart );
        _g_pn_23SegmentSDataStart = .;
            build/baserom/g_pn_23.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_23SegmentSDataEnd = .;
        _g_pn_23SegmentOvlStart = .;
            build/baserom/g_pn_23.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_23SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_23SegmentOvlEnd - _g_pn_23SegmentTextStart );
    _g_pn_23SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_23.bss ADDR(..g_pn_23) + SIZEOF(..g_pn_23) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_23SegmentBssStart = .;
            build/baserom/g_pn_23.o (.sbss)
            build/baserom/g_pn_23.o (.scommon)
            build/baserom/g_pn_23.o (.bss)
            build/baserom/g_pn_23.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_23SegmentBssEnd = .;
        _g_pn_23SegmentEnd = .;
    }
    _g_pn_23SegmentBssSize = ABSOLUTE( _g_pn_23SegmentBssEnd - _g_pn_23SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_24SegmentRomStart = _RomSize;
    ..g_pn_24 : AT(_RomSize)
    {
        _g_pn_24SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_24SegmentTextStart = .;
            build/baserom/g_pn_24.o (.text)
        _g_pn_24SegmentTextEnd = .;
    _g_pn_24SegmentTextSize = ABSOLUTE( _g_pn_24SegmentTextEnd - _g_pn_24SegmentTextStart );
        _g_pn_24SegmentDataStart = .;
            build/baserom/g_pn_24.o (.data)
        _g_pn_24SegmentDataEnd = .;
    _g_pn_24SegmentDataSize = ABSOLUTE( _g_pn_24SegmentDataEnd - _g_pn_24SegmentDataStart );
        _g_pn_24SegmentRoDataStart = .;
            build/baserom/g_pn_24.o (.rodata)
        _g_pn_24SegmentRoDataEnd = .;
    _g_pn_24SegmentRoDataSize = ABSOLUTE( _g_pn_24SegmentRoDataEnd - _g_pn_24SegmentRoDataStart );
        _g_pn_24SegmentSDataStart = .;
            build/baserom/g_pn_24.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_24SegmentSDataEnd = .;
        _g_pn_24SegmentOvlStart = .;
            build/baserom/g_pn_24.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_24SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_24SegmentOvlEnd - _g_pn_24SegmentTextStart );
    _g_pn_24SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_24.bss ADDR(..g_pn_24) + SIZEOF(..g_pn_24) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_24SegmentBssStart = .;
            build/baserom/g_pn_24.o (.sbss)
            build/baserom/g_pn_24.o (.scommon)
            build/baserom/g_pn_24.o (.bss)
            build/baserom/g_pn_24.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_24SegmentBssEnd = .;
        _g_pn_24SegmentEnd = .;
    }
    _g_pn_24SegmentBssSize = ABSOLUTE( _g_pn_24SegmentBssEnd - _g_pn_24SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_25SegmentRomStart = _RomSize;
    ..g_pn_25 : AT(_RomSize)
    {
        _g_pn_25SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_25SegmentTextStart = .;
            build/baserom/g_pn_25.o (.text)
        _g_pn_25SegmentTextEnd = .;
    _g_pn_25SegmentTextSize = ABSOLUTE( _g_pn_25SegmentTextEnd - _g_pn_25SegmentTextStart );
        _g_pn_25SegmentDataStart = .;
            build/baserom/g_pn_25.o (.data)
        _g_pn_25SegmentDataEnd = .;
    _g_pn_25SegmentDataSize = ABSOLUTE( _g_pn_25SegmentDataEnd - _g_pn_25SegmentDataStart );
        _g_pn_25SegmentRoDataStart = .;
            build/baserom/g_pn_25.o (.rodata)
        _g_pn_25SegmentRoDataEnd = .;
    _g_pn_25SegmentRoDataSize = ABSOLUTE( _g_pn_25SegmentRoDataEnd - _g_pn_25SegmentRoDataStart );
        _g_pn_25SegmentSDataStart = .;
            build/baserom/g_pn_25.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_25SegmentSDataEnd = .;
        _g_pn_25SegmentOvlStart = .;
            build/baserom/g_pn_25.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_25SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_25SegmentOvlEnd - _g_pn_25SegmentTextStart );
    _g_pn_25SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_25.bss ADDR(..g_pn_25) + SIZEOF(..g_pn_25) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_25SegmentBssStart = .;
            build/baserom/g_pn_25.o (.sbss)
            build/baserom/g_pn_25.o (.scommon)
            build/baserom/g_pn_25.o (.bss)
            build/baserom/g_pn_25.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_25SegmentBssEnd = .;
        _g_pn_25SegmentEnd = .;
    }
    _g_pn_25SegmentBssSize = ABSOLUTE( _g_pn_25SegmentBssEnd - _g_pn_25SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_26SegmentRomStart = _RomSize;
    ..g_pn_26 : AT(_RomSize)
    {
        _g_pn_26SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_26SegmentTextStart = .;
            build/baserom/g_pn_26.o (.text)
        _g_pn_26SegmentTextEnd = .;
    _g_pn_26SegmentTextSize = ABSOLUTE( _g_pn_26SegmentTextEnd - _g_pn_26SegmentTextStart );
        _g_pn_26SegmentDataStart = .;
            build/baserom/g_pn_26.o (.data)
        _g_pn_26SegmentDataEnd = .;
    _g_pn_26SegmentDataSize = ABSOLUTE( _g_pn_26SegmentDataEnd - _g_pn_26SegmentDataStart );
        _g_pn_26SegmentRoDataStart = .;
            build/baserom/g_pn_26.o (.rodata)
        _g_pn_26SegmentRoDataEnd = .;
    _g_pn_26SegmentRoDataSize = ABSOLUTE( _g_pn_26SegmentRoDataEnd - _g_pn_26SegmentRoDataStart );
        _g_pn_26SegmentSDataStart = .;
            build/baserom/g_pn_26.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_26SegmentSDataEnd = .;
        _g_pn_26SegmentOvlStart = .;
            build/baserom/g_pn_26.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_26SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_26SegmentOvlEnd - _g_pn_26SegmentTextStart );
    _g_pn_26SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_26.bss ADDR(..g_pn_26) + SIZEOF(..g_pn_26) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_26SegmentBssStart = .;
            build/baserom/g_pn_26.o (.sbss)
            build/baserom/g_pn_26.o (.scommon)
            build/baserom/g_pn_26.o (.bss)
            build/baserom/g_pn_26.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_26SegmentBssEnd = .;
        _g_pn_26SegmentEnd = .;
    }
    _g_pn_26SegmentBssSize = ABSOLUTE( _g_pn_26SegmentBssEnd - _g_pn_26SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_27SegmentRomStart = _RomSize;
    ..g_pn_27 : AT(_RomSize)
    {
        _g_pn_27SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_27SegmentTextStart = .;
            build/baserom/g_pn_27.o (.text)
        _g_pn_27SegmentTextEnd = .;
    _g_pn_27SegmentTextSize = ABSOLUTE( _g_pn_27SegmentTextEnd - _g_pn_27SegmentTextStart );
        _g_pn_27SegmentDataStart = .;
            build/baserom/g_pn_27.o (.data)
        _g_pn_27SegmentDataEnd = .;
    _g_pn_27SegmentDataSize = ABSOLUTE( _g_pn_27SegmentDataEnd - _g_pn_27SegmentDataStart );
        _g_pn_27SegmentRoDataStart = .;
            build/baserom/g_pn_27.o (.rodata)
        _g_pn_27SegmentRoDataEnd = .;
    _g_pn_27SegmentRoDataSize = ABSOLUTE( _g_pn_27SegmentRoDataEnd - _g_pn_27SegmentRoDataStart );
        _g_pn_27SegmentSDataStart = .;
            build/baserom/g_pn_27.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_27SegmentSDataEnd = .;
        _g_pn_27SegmentOvlStart = .;
            build/baserom/g_pn_27.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_27SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_27SegmentOvlEnd - _g_pn_27SegmentTextStart );
    _g_pn_27SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_27.bss ADDR(..g_pn_27) + SIZEOF(..g_pn_27) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_27SegmentBssStart = .;
            build/baserom/g_pn_27.o (.sbss)
            build/baserom/g_pn_27.o (.scommon)
            build/baserom/g_pn_27.o (.bss)
            build/baserom/g_pn_27.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_27SegmentBssEnd = .;
        _g_pn_27SegmentEnd = .;
    }
    _g_pn_27SegmentBssSize = ABSOLUTE( _g_pn_27SegmentBssEnd - _g_pn_27SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_28SegmentRomStart = _RomSize;
    ..g_pn_28 : AT(_RomSize)
    {
        _g_pn_28SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_28SegmentTextStart = .;
            build/baserom/g_pn_28.o (.text)
        _g_pn_28SegmentTextEnd = .;
    _g_pn_28SegmentTextSize = ABSOLUTE( _g_pn_28SegmentTextEnd - _g_pn_28SegmentTextStart );
        _g_pn_28SegmentDataStart = .;
            build/baserom/g_pn_28.o (.data)
        _g_pn_28SegmentDataEnd = .;
    _g_pn_28SegmentDataSize = ABSOLUTE( _g_pn_28SegmentDataEnd - _g_pn_28SegmentDataStart );
        _g_pn_28SegmentRoDataStart = .;
            build/baserom/g_pn_28.o (.rodata)
        _g_pn_28SegmentRoDataEnd = .;
    _g_pn_28SegmentRoDataSize = ABSOLUTE( _g_pn_28SegmentRoDataEnd - _g_pn_28SegmentRoDataStart );
        _g_pn_28SegmentSDataStart = .;
            build/baserom/g_pn_28.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_28SegmentSDataEnd = .;
        _g_pn_28SegmentOvlStart = .;
            build/baserom/g_pn_28.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_28SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_28SegmentOvlEnd - _g_pn_28SegmentTextStart );
    _g_pn_28SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_28.bss ADDR(..g_pn_28) + SIZEOF(..g_pn_28) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_28SegmentBssStart = .;
            build/baserom/g_pn_28.o (.sbss)
            build/baserom/g_pn_28.o (.scommon)
            build/baserom/g_pn_28.o (.bss)
            build/baserom/g_pn_28.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_28SegmentBssEnd = .;
        _g_pn_28SegmentEnd = .;
    }
    _g_pn_28SegmentBssSize = ABSOLUTE( _g_pn_28SegmentBssEnd - _g_pn_28SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_29SegmentRomStart = _RomSize;
    ..g_pn_29 : AT(_RomSize)
    {
        _g_pn_29SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_29SegmentTextStart = .;
            build/baserom/g_pn_29.o (.text)
        _g_pn_29SegmentTextEnd = .;
    _g_pn_29SegmentTextSize = ABSOLUTE( _g_pn_29SegmentTextEnd - _g_pn_29SegmentTextStart );
        _g_pn_29SegmentDataStart = .;
            build/baserom/g_pn_29.o (.data)
        _g_pn_29SegmentDataEnd = .;
    _g_pn_29SegmentDataSize = ABSOLUTE( _g_pn_29SegmentDataEnd - _g_pn_29SegmentDataStart );
        _g_pn_29SegmentRoDataStart = .;
            build/baserom/g_pn_29.o (.rodata)
        _g_pn_29SegmentRoDataEnd = .;
    _g_pn_29SegmentRoDataSize = ABSOLUTE( _g_pn_29SegmentRoDataEnd - _g_pn_29SegmentRoDataStart );
        _g_pn_29SegmentSDataStart = .;
            build/baserom/g_pn_29.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_29SegmentSDataEnd = .;
        _g_pn_29SegmentOvlStart = .;
            build/baserom/g_pn_29.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_29SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_29SegmentOvlEnd - _g_pn_29SegmentTextStart );
    _g_pn_29SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_29.bss ADDR(..g_pn_29) + SIZEOF(..g_pn_29) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_29SegmentBssStart = .;
            build/baserom/g_pn_29.o (.sbss)
            build/baserom/g_pn_29.o (.scommon)
            build/baserom/g_pn_29.o (.bss)
            build/baserom/g_pn_29.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_29SegmentBssEnd = .;
        _g_pn_29SegmentEnd = .;
    }
    _g_pn_29SegmentBssSize = ABSOLUTE( _g_pn_29SegmentBssEnd - _g_pn_29SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_30SegmentRomStart = _RomSize;
    ..g_pn_30 : AT(_RomSize)
    {
        _g_pn_30SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_30SegmentTextStart = .;
            build/baserom/g_pn_30.o (.text)
        _g_pn_30SegmentTextEnd = .;
    _g_pn_30SegmentTextSize = ABSOLUTE( _g_pn_30SegmentTextEnd - _g_pn_30SegmentTextStart );
        _g_pn_30SegmentDataStart = .;
            build/baserom/g_pn_30.o (.data)
        _g_pn_30SegmentDataEnd = .;
    _g_pn_30SegmentDataSize = ABSOLUTE( _g_pn_30SegmentDataEnd - _g_pn_30SegmentDataStart );
        _g_pn_30SegmentRoDataStart = .;
            build/baserom/g_pn_30.o (.rodata)
        _g_pn_30SegmentRoDataEnd = .;
    _g_pn_30SegmentRoDataSize = ABSOLUTE( _g_pn_30SegmentRoDataEnd - _g_pn_30SegmentRoDataStart );
        _g_pn_30SegmentSDataStart = .;
            build/baserom/g_pn_30.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_30SegmentSDataEnd = .;
        _g_pn_30SegmentOvlStart = .;
            build/baserom/g_pn_30.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_30SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_30SegmentOvlEnd - _g_pn_30SegmentTextStart );
    _g_pn_30SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_30.bss ADDR(..g_pn_30) + SIZEOF(..g_pn_30) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_30SegmentBssStart = .;
            build/baserom/g_pn_30.o (.sbss)
            build/baserom/g_pn_30.o (.scommon)
            build/baserom/g_pn_30.o (.bss)
            build/baserom/g_pn_30.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_30SegmentBssEnd = .;
        _g_pn_30SegmentEnd = .;
    }
    _g_pn_30SegmentBssSize = ABSOLUTE( _g_pn_30SegmentBssEnd - _g_pn_30SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_31SegmentRomStart = _RomSize;
    ..g_pn_31 : AT(_RomSize)
    {
        _g_pn_31SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_31SegmentTextStart = .;
            build/baserom/g_pn_31.o (.text)
        _g_pn_31SegmentTextEnd = .;
    _g_pn_31SegmentTextSize = ABSOLUTE( _g_pn_31SegmentTextEnd - _g_pn_31SegmentTextStart );
        _g_pn_31SegmentDataStart = .;
            build/baserom/g_pn_31.o (.data)
        _g_pn_31SegmentDataEnd = .;
    _g_pn_31SegmentDataSize = ABSOLUTE( _g_pn_31SegmentDataEnd - _g_pn_31SegmentDataStart );
        _g_pn_31SegmentRoDataStart = .;
            build/baserom/g_pn_31.o (.rodata)
        _g_pn_31SegmentRoDataEnd = .;
    _g_pn_31SegmentRoDataSize = ABSOLUTE( _g_pn_31SegmentRoDataEnd - _g_pn_31SegmentRoDataStart );
        _g_pn_31SegmentSDataStart = .;
            build/baserom/g_pn_31.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_31SegmentSDataEnd = .;
        _g_pn_31SegmentOvlStart = .;
            build/baserom/g_pn_31.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_31SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_31SegmentOvlEnd - _g_pn_31SegmentTextStart );
    _g_pn_31SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_31.bss ADDR(..g_pn_31) + SIZEOF(..g_pn_31) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_31SegmentBssStart = .;
            build/baserom/g_pn_31.o (.sbss)
            build/baserom/g_pn_31.o (.scommon)
            build/baserom/g_pn_31.o (.bss)
            build/baserom/g_pn_31.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_31SegmentBssEnd = .;
        _g_pn_31SegmentEnd = .;
    }
    _g_pn_31SegmentBssSize = ABSOLUTE( _g_pn_31SegmentBssEnd - _g_pn_31SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_32SegmentRomStart = _RomSize;
    ..g_pn_32 : AT(_RomSize)
    {
        _g_pn_32SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_32SegmentTextStart = .;
            build/baserom/g_pn_32.o (.text)
        _g_pn_32SegmentTextEnd = .;
    _g_pn_32SegmentTextSize = ABSOLUTE( _g_pn_32SegmentTextEnd - _g_pn_32SegmentTextStart );
        _g_pn_32SegmentDataStart = .;
            build/baserom/g_pn_32.o (.data)
        _g_pn_32SegmentDataEnd = .;
    _g_pn_32SegmentDataSize = ABSOLUTE( _g_pn_32SegmentDataEnd - _g_pn_32SegmentDataStart );
        _g_pn_32SegmentRoDataStart = .;
            build/baserom/g_pn_32.o (.rodata)
        _g_pn_32SegmentRoDataEnd = .;
    _g_pn_32SegmentRoDataSize = ABSOLUTE( _g_pn_32SegmentRoDataEnd - _g_pn_32SegmentRoDataStart );
        _g_pn_32SegmentSDataStart = .;
            build/baserom/g_pn_32.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_32SegmentSDataEnd = .;
        _g_pn_32SegmentOvlStart = .;
            build/baserom/g_pn_32.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_32SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_32SegmentOvlEnd - _g_pn_32SegmentTextStart );
    _g_pn_32SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_32.bss ADDR(..g_pn_32) + SIZEOF(..g_pn_32) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_32SegmentBssStart = .;
            build/baserom/g_pn_32.o (.sbss)
            build/baserom/g_pn_32.o (.scommon)
            build/baserom/g_pn_32.o (.bss)
            build/baserom/g_pn_32.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_32SegmentBssEnd = .;
        _g_pn_32SegmentEnd = .;
    }
    _g_pn_32SegmentBssSize = ABSOLUTE( _g_pn_32SegmentBssEnd - _g_pn_32SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_33SegmentRomStart = _RomSize;
    ..g_pn_33 : AT(_RomSize)
    {
        _g_pn_33SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_33SegmentTextStart = .;
            build/baserom/g_pn_33.o (.text)
        _g_pn_33SegmentTextEnd = .;
    _g_pn_33SegmentTextSize = ABSOLUTE( _g_pn_33SegmentTextEnd - _g_pn_33SegmentTextStart );
        _g_pn_33SegmentDataStart = .;
            build/baserom/g_pn_33.o (.data)
        _g_pn_33SegmentDataEnd = .;
    _g_pn_33SegmentDataSize = ABSOLUTE( _g_pn_33SegmentDataEnd - _g_pn_33SegmentDataStart );
        _g_pn_33SegmentRoDataStart = .;
            build/baserom/g_pn_33.o (.rodata)
        _g_pn_33SegmentRoDataEnd = .;
    _g_pn_33SegmentRoDataSize = ABSOLUTE( _g_pn_33SegmentRoDataEnd - _g_pn_33SegmentRoDataStart );
        _g_pn_33SegmentSDataStart = .;
            build/baserom/g_pn_33.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_33SegmentSDataEnd = .;
        _g_pn_33SegmentOvlStart = .;
            build/baserom/g_pn_33.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_33SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_33SegmentOvlEnd - _g_pn_33SegmentTextStart );
    _g_pn_33SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_33.bss ADDR(..g_pn_33) + SIZEOF(..g_pn_33) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_33SegmentBssStart = .;
            build/baserom/g_pn_33.o (.sbss)
            build/baserom/g_pn_33.o (.scommon)
            build/baserom/g_pn_33.o (.bss)
            build/baserom/g_pn_33.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_33SegmentBssEnd = .;
        _g_pn_33SegmentEnd = .;
    }
    _g_pn_33SegmentBssSize = ABSOLUTE( _g_pn_33SegmentBssEnd - _g_pn_33SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_34SegmentRomStart = _RomSize;
    ..g_pn_34 : AT(_RomSize)
    {
        _g_pn_34SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_34SegmentTextStart = .;
            build/baserom/g_pn_34.o (.text)
        _g_pn_34SegmentTextEnd = .;
    _g_pn_34SegmentTextSize = ABSOLUTE( _g_pn_34SegmentTextEnd - _g_pn_34SegmentTextStart );
        _g_pn_34SegmentDataStart = .;
            build/baserom/g_pn_34.o (.data)
        _g_pn_34SegmentDataEnd = .;
    _g_pn_34SegmentDataSize = ABSOLUTE( _g_pn_34SegmentDataEnd - _g_pn_34SegmentDataStart );
        _g_pn_34SegmentRoDataStart = .;
            build/baserom/g_pn_34.o (.rodata)
        _g_pn_34SegmentRoDataEnd = .;
    _g_pn_34SegmentRoDataSize = ABSOLUTE( _g_pn_34SegmentRoDataEnd - _g_pn_34SegmentRoDataStart );
        _g_pn_34SegmentSDataStart = .;
            build/baserom/g_pn_34.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_34SegmentSDataEnd = .;
        _g_pn_34SegmentOvlStart = .;
            build/baserom/g_pn_34.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_34SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_34SegmentOvlEnd - _g_pn_34SegmentTextStart );
    _g_pn_34SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_34.bss ADDR(..g_pn_34) + SIZEOF(..g_pn_34) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_34SegmentBssStart = .;
            build/baserom/g_pn_34.o (.sbss)
            build/baserom/g_pn_34.o (.scommon)
            build/baserom/g_pn_34.o (.bss)
            build/baserom/g_pn_34.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_34SegmentBssEnd = .;
        _g_pn_34SegmentEnd = .;
    }
    _g_pn_34SegmentBssSize = ABSOLUTE( _g_pn_34SegmentBssEnd - _g_pn_34SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_35SegmentRomStart = _RomSize;
    ..g_pn_35 : AT(_RomSize)
    {
        _g_pn_35SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_35SegmentTextStart = .;
            build/baserom/g_pn_35.o (.text)
        _g_pn_35SegmentTextEnd = .;
    _g_pn_35SegmentTextSize = ABSOLUTE( _g_pn_35SegmentTextEnd - _g_pn_35SegmentTextStart );
        _g_pn_35SegmentDataStart = .;
            build/baserom/g_pn_35.o (.data)
        _g_pn_35SegmentDataEnd = .;
    _g_pn_35SegmentDataSize = ABSOLUTE( _g_pn_35SegmentDataEnd - _g_pn_35SegmentDataStart );
        _g_pn_35SegmentRoDataStart = .;
            build/baserom/g_pn_35.o (.rodata)
        _g_pn_35SegmentRoDataEnd = .;
    _g_pn_35SegmentRoDataSize = ABSOLUTE( _g_pn_35SegmentRoDataEnd - _g_pn_35SegmentRoDataStart );
        _g_pn_35SegmentSDataStart = .;
            build/baserom/g_pn_35.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_35SegmentSDataEnd = .;
        _g_pn_35SegmentOvlStart = .;
            build/baserom/g_pn_35.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_35SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_35SegmentOvlEnd - _g_pn_35SegmentTextStart );
    _g_pn_35SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_35.bss ADDR(..g_pn_35) + SIZEOF(..g_pn_35) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_35SegmentBssStart = .;
            build/baserom/g_pn_35.o (.sbss)
            build/baserom/g_pn_35.o (.scommon)
            build/baserom/g_pn_35.o (.bss)
            build/baserom/g_pn_35.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_35SegmentBssEnd = .;
        _g_pn_35SegmentEnd = .;
    }
    _g_pn_35SegmentBssSize = ABSOLUTE( _g_pn_35SegmentBssEnd - _g_pn_35SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_36SegmentRomStart = _RomSize;
    ..g_pn_36 : AT(_RomSize)
    {
        _g_pn_36SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_36SegmentTextStart = .;
            build/baserom/g_pn_36.o (.text)
        _g_pn_36SegmentTextEnd = .;
    _g_pn_36SegmentTextSize = ABSOLUTE( _g_pn_36SegmentTextEnd - _g_pn_36SegmentTextStart );
        _g_pn_36SegmentDataStart = .;
            build/baserom/g_pn_36.o (.data)
        _g_pn_36SegmentDataEnd = .;
    _g_pn_36SegmentDataSize = ABSOLUTE( _g_pn_36SegmentDataEnd - _g_pn_36SegmentDataStart );
        _g_pn_36SegmentRoDataStart = .;
            build/baserom/g_pn_36.o (.rodata)
        _g_pn_36SegmentRoDataEnd = .;
    _g_pn_36SegmentRoDataSize = ABSOLUTE( _g_pn_36SegmentRoDataEnd - _g_pn_36SegmentRoDataStart );
        _g_pn_36SegmentSDataStart = .;
            build/baserom/g_pn_36.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_36SegmentSDataEnd = .;
        _g_pn_36SegmentOvlStart = .;
            build/baserom/g_pn_36.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_36SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_36SegmentOvlEnd - _g_pn_36SegmentTextStart );
    _g_pn_36SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_36.bss ADDR(..g_pn_36) + SIZEOF(..g_pn_36) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_36SegmentBssStart = .;
            build/baserom/g_pn_36.o (.sbss)
            build/baserom/g_pn_36.o (.scommon)
            build/baserom/g_pn_36.o (.bss)
            build/baserom/g_pn_36.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_36SegmentBssEnd = .;
        _g_pn_36SegmentEnd = .;
    }
    _g_pn_36SegmentBssSize = ABSOLUTE( _g_pn_36SegmentBssEnd - _g_pn_36SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_37SegmentRomStart = _RomSize;
    ..g_pn_37 : AT(_RomSize)
    {
        _g_pn_37SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_37SegmentTextStart = .;
            build/baserom/g_pn_37.o (.text)
        _g_pn_37SegmentTextEnd = .;
    _g_pn_37SegmentTextSize = ABSOLUTE( _g_pn_37SegmentTextEnd - _g_pn_37SegmentTextStart );
        _g_pn_37SegmentDataStart = .;
            build/baserom/g_pn_37.o (.data)
        _g_pn_37SegmentDataEnd = .;
    _g_pn_37SegmentDataSize = ABSOLUTE( _g_pn_37SegmentDataEnd - _g_pn_37SegmentDataStart );
        _g_pn_37SegmentRoDataStart = .;
            build/baserom/g_pn_37.o (.rodata)
        _g_pn_37SegmentRoDataEnd = .;
    _g_pn_37SegmentRoDataSize = ABSOLUTE( _g_pn_37SegmentRoDataEnd - _g_pn_37SegmentRoDataStart );
        _g_pn_37SegmentSDataStart = .;
            build/baserom/g_pn_37.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_37SegmentSDataEnd = .;
        _g_pn_37SegmentOvlStart = .;
            build/baserom/g_pn_37.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_37SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_37SegmentOvlEnd - _g_pn_37SegmentTextStart );
    _g_pn_37SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_37.bss ADDR(..g_pn_37) + SIZEOF(..g_pn_37) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_37SegmentBssStart = .;
            build/baserom/g_pn_37.o (.sbss)
            build/baserom/g_pn_37.o (.scommon)
            build/baserom/g_pn_37.o (.bss)
            build/baserom/g_pn_37.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_37SegmentBssEnd = .;
        _g_pn_37SegmentEnd = .;
    }
    _g_pn_37SegmentBssSize = ABSOLUTE( _g_pn_37SegmentBssEnd - _g_pn_37SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_38SegmentRomStart = _RomSize;
    ..g_pn_38 : AT(_RomSize)
    {
        _g_pn_38SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_38SegmentTextStart = .;
            build/baserom/g_pn_38.o (.text)
        _g_pn_38SegmentTextEnd = .;
    _g_pn_38SegmentTextSize = ABSOLUTE( _g_pn_38SegmentTextEnd - _g_pn_38SegmentTextStart );
        _g_pn_38SegmentDataStart = .;
            build/baserom/g_pn_38.o (.data)
        _g_pn_38SegmentDataEnd = .;
    _g_pn_38SegmentDataSize = ABSOLUTE( _g_pn_38SegmentDataEnd - _g_pn_38SegmentDataStart );
        _g_pn_38SegmentRoDataStart = .;
            build/baserom/g_pn_38.o (.rodata)
        _g_pn_38SegmentRoDataEnd = .;
    _g_pn_38SegmentRoDataSize = ABSOLUTE( _g_pn_38SegmentRoDataEnd - _g_pn_38SegmentRoDataStart );
        _g_pn_38SegmentSDataStart = .;
            build/baserom/g_pn_38.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_38SegmentSDataEnd = .;
        _g_pn_38SegmentOvlStart = .;
            build/baserom/g_pn_38.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_38SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_38SegmentOvlEnd - _g_pn_38SegmentTextStart );
    _g_pn_38SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_38.bss ADDR(..g_pn_38) + SIZEOF(..g_pn_38) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_38SegmentBssStart = .;
            build/baserom/g_pn_38.o (.sbss)
            build/baserom/g_pn_38.o (.scommon)
            build/baserom/g_pn_38.o (.bss)
            build/baserom/g_pn_38.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_38SegmentBssEnd = .;
        _g_pn_38SegmentEnd = .;
    }
    _g_pn_38SegmentBssSize = ABSOLUTE( _g_pn_38SegmentBssEnd - _g_pn_38SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_39SegmentRomStart = _RomSize;
    ..g_pn_39 : AT(_RomSize)
    {
        _g_pn_39SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_39SegmentTextStart = .;
            build/baserom/g_pn_39.o (.text)
        _g_pn_39SegmentTextEnd = .;
    _g_pn_39SegmentTextSize = ABSOLUTE( _g_pn_39SegmentTextEnd - _g_pn_39SegmentTextStart );
        _g_pn_39SegmentDataStart = .;
            build/baserom/g_pn_39.o (.data)
        _g_pn_39SegmentDataEnd = .;
    _g_pn_39SegmentDataSize = ABSOLUTE( _g_pn_39SegmentDataEnd - _g_pn_39SegmentDataStart );
        _g_pn_39SegmentRoDataStart = .;
            build/baserom/g_pn_39.o (.rodata)
        _g_pn_39SegmentRoDataEnd = .;
    _g_pn_39SegmentRoDataSize = ABSOLUTE( _g_pn_39SegmentRoDataEnd - _g_pn_39SegmentRoDataStart );
        _g_pn_39SegmentSDataStart = .;
            build/baserom/g_pn_39.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_39SegmentSDataEnd = .;
        _g_pn_39SegmentOvlStart = .;
            build/baserom/g_pn_39.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_39SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_39SegmentOvlEnd - _g_pn_39SegmentTextStart );
    _g_pn_39SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_39.bss ADDR(..g_pn_39) + SIZEOF(..g_pn_39) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_39SegmentBssStart = .;
            build/baserom/g_pn_39.o (.sbss)
            build/baserom/g_pn_39.o (.scommon)
            build/baserom/g_pn_39.o (.bss)
            build/baserom/g_pn_39.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_39SegmentBssEnd = .;
        _g_pn_39SegmentEnd = .;
    }
    _g_pn_39SegmentBssSize = ABSOLUTE( _g_pn_39SegmentBssEnd - _g_pn_39SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_40SegmentRomStart = _RomSize;
    ..g_pn_40 : AT(_RomSize)
    {
        _g_pn_40SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_40SegmentTextStart = .;
            build/baserom/g_pn_40.o (.text)
        _g_pn_40SegmentTextEnd = .;
    _g_pn_40SegmentTextSize = ABSOLUTE( _g_pn_40SegmentTextEnd - _g_pn_40SegmentTextStart );
        _g_pn_40SegmentDataStart = .;
            build/baserom/g_pn_40.o (.data)
        _g_pn_40SegmentDataEnd = .;
    _g_pn_40SegmentDataSize = ABSOLUTE( _g_pn_40SegmentDataEnd - _g_pn_40SegmentDataStart );
        _g_pn_40SegmentRoDataStart = .;
            build/baserom/g_pn_40.o (.rodata)
        _g_pn_40SegmentRoDataEnd = .;
    _g_pn_40SegmentRoDataSize = ABSOLUTE( _g_pn_40SegmentRoDataEnd - _g_pn_40SegmentRoDataStart );
        _g_pn_40SegmentSDataStart = .;
            build/baserom/g_pn_40.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_40SegmentSDataEnd = .;
        _g_pn_40SegmentOvlStart = .;
            build/baserom/g_pn_40.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_40SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_40SegmentOvlEnd - _g_pn_40SegmentTextStart );
    _g_pn_40SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_40.bss ADDR(..g_pn_40) + SIZEOF(..g_pn_40) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_40SegmentBssStart = .;
            build/baserom/g_pn_40.o (.sbss)
            build/baserom/g_pn_40.o (.scommon)
            build/baserom/g_pn_40.o (.bss)
            build/baserom/g_pn_40.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_40SegmentBssEnd = .;
        _g_pn_40SegmentEnd = .;
    }
    _g_pn_40SegmentBssSize = ABSOLUTE( _g_pn_40SegmentBssEnd - _g_pn_40SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_41SegmentRomStart = _RomSize;
    ..g_pn_41 : AT(_RomSize)
    {
        _g_pn_41SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_41SegmentTextStart = .;
            build/baserom/g_pn_41.o (.text)
        _g_pn_41SegmentTextEnd = .;
    _g_pn_41SegmentTextSize = ABSOLUTE( _g_pn_41SegmentTextEnd - _g_pn_41SegmentTextStart );
        _g_pn_41SegmentDataStart = .;
            build/baserom/g_pn_41.o (.data)
        _g_pn_41SegmentDataEnd = .;
    _g_pn_41SegmentDataSize = ABSOLUTE( _g_pn_41SegmentDataEnd - _g_pn_41SegmentDataStart );
        _g_pn_41SegmentRoDataStart = .;
            build/baserom/g_pn_41.o (.rodata)
        _g_pn_41SegmentRoDataEnd = .;
    _g_pn_41SegmentRoDataSize = ABSOLUTE( _g_pn_41SegmentRoDataEnd - _g_pn_41SegmentRoDataStart );
        _g_pn_41SegmentSDataStart = .;
            build/baserom/g_pn_41.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_41SegmentSDataEnd = .;
        _g_pn_41SegmentOvlStart = .;
            build/baserom/g_pn_41.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_41SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_41SegmentOvlEnd - _g_pn_41SegmentTextStart );
    _g_pn_41SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_41.bss ADDR(..g_pn_41) + SIZEOF(..g_pn_41) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_41SegmentBssStart = .;
            build/baserom/g_pn_41.o (.sbss)
            build/baserom/g_pn_41.o (.scommon)
            build/baserom/g_pn_41.o (.bss)
            build/baserom/g_pn_41.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_41SegmentBssEnd = .;
        _g_pn_41SegmentEnd = .;
    }
    _g_pn_41SegmentBssSize = ABSOLUTE( _g_pn_41SegmentBssEnd - _g_pn_41SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_42SegmentRomStart = _RomSize;
    ..g_pn_42 : AT(_RomSize)
    {
        _g_pn_42SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_42SegmentTextStart = .;
            build/baserom/g_pn_42.o (.text)
        _g_pn_42SegmentTextEnd = .;
    _g_pn_42SegmentTextSize = ABSOLUTE( _g_pn_42SegmentTextEnd - _g_pn_42SegmentTextStart );
        _g_pn_42SegmentDataStart = .;
            build/baserom/g_pn_42.o (.data)
        _g_pn_42SegmentDataEnd = .;
    _g_pn_42SegmentDataSize = ABSOLUTE( _g_pn_42SegmentDataEnd - _g_pn_42SegmentDataStart );
        _g_pn_42SegmentRoDataStart = .;
            build/baserom/g_pn_42.o (.rodata)
        _g_pn_42SegmentRoDataEnd = .;
    _g_pn_42SegmentRoDataSize = ABSOLUTE( _g_pn_42SegmentRoDataEnd - _g_pn_42SegmentRoDataStart );
        _g_pn_42SegmentSDataStart = .;
            build/baserom/g_pn_42.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_42SegmentSDataEnd = .;
        _g_pn_42SegmentOvlStart = .;
            build/baserom/g_pn_42.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_42SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_42SegmentOvlEnd - _g_pn_42SegmentTextStart );
    _g_pn_42SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_42.bss ADDR(..g_pn_42) + SIZEOF(..g_pn_42) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_42SegmentBssStart = .;
            build/baserom/g_pn_42.o (.sbss)
            build/baserom/g_pn_42.o (.scommon)
            build/baserom/g_pn_42.o (.bss)
            build/baserom/g_pn_42.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_42SegmentBssEnd = .;
        _g_pn_42SegmentEnd = .;
    }
    _g_pn_42SegmentBssSize = ABSOLUTE( _g_pn_42SegmentBssEnd - _g_pn_42SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_43SegmentRomStart = _RomSize;
    ..g_pn_43 : AT(_RomSize)
    {
        _g_pn_43SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_43SegmentTextStart = .;
            build/baserom/g_pn_43.o (.text)
        _g_pn_43SegmentTextEnd = .;
    _g_pn_43SegmentTextSize = ABSOLUTE( _g_pn_43SegmentTextEnd - _g_pn_43SegmentTextStart );
        _g_pn_43SegmentDataStart = .;
            build/baserom/g_pn_43.o (.data)
        _g_pn_43SegmentDataEnd = .;
    _g_pn_43SegmentDataSize = ABSOLUTE( _g_pn_43SegmentDataEnd - _g_pn_43SegmentDataStart );
        _g_pn_43SegmentRoDataStart = .;
            build/baserom/g_pn_43.o (.rodata)
        _g_pn_43SegmentRoDataEnd = .;
    _g_pn_43SegmentRoDataSize = ABSOLUTE( _g_pn_43SegmentRoDataEnd - _g_pn_43SegmentRoDataStart );
        _g_pn_43SegmentSDataStart = .;
            build/baserom/g_pn_43.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_43SegmentSDataEnd = .;
        _g_pn_43SegmentOvlStart = .;
            build/baserom/g_pn_43.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_43SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_43SegmentOvlEnd - _g_pn_43SegmentTextStart );
    _g_pn_43SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_43.bss ADDR(..g_pn_43) + SIZEOF(..g_pn_43) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_43SegmentBssStart = .;
            build/baserom/g_pn_43.o (.sbss)
            build/baserom/g_pn_43.o (.scommon)
            build/baserom/g_pn_43.o (.bss)
            build/baserom/g_pn_43.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_43SegmentBssEnd = .;
        _g_pn_43SegmentEnd = .;
    }
    _g_pn_43SegmentBssSize = ABSOLUTE( _g_pn_43SegmentBssEnd - _g_pn_43SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_44SegmentRomStart = _RomSize;
    ..g_pn_44 : AT(_RomSize)
    {
        _g_pn_44SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_44SegmentTextStart = .;
            build/baserom/g_pn_44.o (.text)
        _g_pn_44SegmentTextEnd = .;
    _g_pn_44SegmentTextSize = ABSOLUTE( _g_pn_44SegmentTextEnd - _g_pn_44SegmentTextStart );
        _g_pn_44SegmentDataStart = .;
            build/baserom/g_pn_44.o (.data)
        _g_pn_44SegmentDataEnd = .;
    _g_pn_44SegmentDataSize = ABSOLUTE( _g_pn_44SegmentDataEnd - _g_pn_44SegmentDataStart );
        _g_pn_44SegmentRoDataStart = .;
            build/baserom/g_pn_44.o (.rodata)
        _g_pn_44SegmentRoDataEnd = .;
    _g_pn_44SegmentRoDataSize = ABSOLUTE( _g_pn_44SegmentRoDataEnd - _g_pn_44SegmentRoDataStart );
        _g_pn_44SegmentSDataStart = .;
            build/baserom/g_pn_44.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_44SegmentSDataEnd = .;
        _g_pn_44SegmentOvlStart = .;
            build/baserom/g_pn_44.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_44SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_44SegmentOvlEnd - _g_pn_44SegmentTextStart );
    _g_pn_44SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_44.bss ADDR(..g_pn_44) + SIZEOF(..g_pn_44) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_44SegmentBssStart = .;
            build/baserom/g_pn_44.o (.sbss)
            build/baserom/g_pn_44.o (.scommon)
            build/baserom/g_pn_44.o (.bss)
            build/baserom/g_pn_44.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_44SegmentBssEnd = .;
        _g_pn_44SegmentEnd = .;
    }
    _g_pn_44SegmentBssSize = ABSOLUTE( _g_pn_44SegmentBssEnd - _g_pn_44SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_45SegmentRomStart = _RomSize;
    ..g_pn_45 : AT(_RomSize)
    {
        _g_pn_45SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_45SegmentTextStart = .;
            build/baserom/g_pn_45.o (.text)
        _g_pn_45SegmentTextEnd = .;
    _g_pn_45SegmentTextSize = ABSOLUTE( _g_pn_45SegmentTextEnd - _g_pn_45SegmentTextStart );
        _g_pn_45SegmentDataStart = .;
            build/baserom/g_pn_45.o (.data)
        _g_pn_45SegmentDataEnd = .;
    _g_pn_45SegmentDataSize = ABSOLUTE( _g_pn_45SegmentDataEnd - _g_pn_45SegmentDataStart );
        _g_pn_45SegmentRoDataStart = .;
            build/baserom/g_pn_45.o (.rodata)
        _g_pn_45SegmentRoDataEnd = .;
    _g_pn_45SegmentRoDataSize = ABSOLUTE( _g_pn_45SegmentRoDataEnd - _g_pn_45SegmentRoDataStart );
        _g_pn_45SegmentSDataStart = .;
            build/baserom/g_pn_45.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_45SegmentSDataEnd = .;
        _g_pn_45SegmentOvlStart = .;
            build/baserom/g_pn_45.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_45SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_45SegmentOvlEnd - _g_pn_45SegmentTextStart );
    _g_pn_45SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_45.bss ADDR(..g_pn_45) + SIZEOF(..g_pn_45) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_45SegmentBssStart = .;
            build/baserom/g_pn_45.o (.sbss)
            build/baserom/g_pn_45.o (.scommon)
            build/baserom/g_pn_45.o (.bss)
            build/baserom/g_pn_45.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_45SegmentBssEnd = .;
        _g_pn_45SegmentEnd = .;
    }
    _g_pn_45SegmentBssSize = ABSOLUTE( _g_pn_45SegmentBssEnd - _g_pn_45SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_46SegmentRomStart = _RomSize;
    ..g_pn_46 : AT(_RomSize)
    {
        _g_pn_46SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_46SegmentTextStart = .;
            build/baserom/g_pn_46.o (.text)
        _g_pn_46SegmentTextEnd = .;
    _g_pn_46SegmentTextSize = ABSOLUTE( _g_pn_46SegmentTextEnd - _g_pn_46SegmentTextStart );
        _g_pn_46SegmentDataStart = .;
            build/baserom/g_pn_46.o (.data)
        _g_pn_46SegmentDataEnd = .;
    _g_pn_46SegmentDataSize = ABSOLUTE( _g_pn_46SegmentDataEnd - _g_pn_46SegmentDataStart );
        _g_pn_46SegmentRoDataStart = .;
            build/baserom/g_pn_46.o (.rodata)
        _g_pn_46SegmentRoDataEnd = .;
    _g_pn_46SegmentRoDataSize = ABSOLUTE( _g_pn_46SegmentRoDataEnd - _g_pn_46SegmentRoDataStart );
        _g_pn_46SegmentSDataStart = .;
            build/baserom/g_pn_46.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_46SegmentSDataEnd = .;
        _g_pn_46SegmentOvlStart = .;
            build/baserom/g_pn_46.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_46SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_46SegmentOvlEnd - _g_pn_46SegmentTextStart );
    _g_pn_46SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_46.bss ADDR(..g_pn_46) + SIZEOF(..g_pn_46) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_46SegmentBssStart = .;
            build/baserom/g_pn_46.o (.sbss)
            build/baserom/g_pn_46.o (.scommon)
            build/baserom/g_pn_46.o (.bss)
            build/baserom/g_pn_46.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_46SegmentBssEnd = .;
        _g_pn_46SegmentEnd = .;
    }
    _g_pn_46SegmentBssSize = ABSOLUTE( _g_pn_46SegmentBssEnd - _g_pn_46SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_47SegmentRomStart = _RomSize;
    ..g_pn_47 : AT(_RomSize)
    {
        _g_pn_47SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_47SegmentTextStart = .;
            build/baserom/g_pn_47.o (.text)
        _g_pn_47SegmentTextEnd = .;
    _g_pn_47SegmentTextSize = ABSOLUTE( _g_pn_47SegmentTextEnd - _g_pn_47SegmentTextStart );
        _g_pn_47SegmentDataStart = .;
            build/baserom/g_pn_47.o (.data)
        _g_pn_47SegmentDataEnd = .;
    _g_pn_47SegmentDataSize = ABSOLUTE( _g_pn_47SegmentDataEnd - _g_pn_47SegmentDataStart );
        _g_pn_47SegmentRoDataStart = .;
            build/baserom/g_pn_47.o (.rodata)
        _g_pn_47SegmentRoDataEnd = .;
    _g_pn_47SegmentRoDataSize = ABSOLUTE( _g_pn_47SegmentRoDataEnd - _g_pn_47SegmentRoDataStart );
        _g_pn_47SegmentSDataStart = .;
            build/baserom/g_pn_47.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_47SegmentSDataEnd = .;
        _g_pn_47SegmentOvlStart = .;
            build/baserom/g_pn_47.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_47SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_47SegmentOvlEnd - _g_pn_47SegmentTextStart );
    _g_pn_47SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_47.bss ADDR(..g_pn_47) + SIZEOF(..g_pn_47) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_47SegmentBssStart = .;
            build/baserom/g_pn_47.o (.sbss)
            build/baserom/g_pn_47.o (.scommon)
            build/baserom/g_pn_47.o (.bss)
            build/baserom/g_pn_47.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_47SegmentBssEnd = .;
        _g_pn_47SegmentEnd = .;
    }
    _g_pn_47SegmentBssSize = ABSOLUTE( _g_pn_47SegmentBssEnd - _g_pn_47SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_48SegmentRomStart = _RomSize;
    ..g_pn_48 : AT(_RomSize)
    {
        _g_pn_48SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_48SegmentTextStart = .;
            build/baserom/g_pn_48.o (.text)
        _g_pn_48SegmentTextEnd = .;
    _g_pn_48SegmentTextSize = ABSOLUTE( _g_pn_48SegmentTextEnd - _g_pn_48SegmentTextStart );
        _g_pn_48SegmentDataStart = .;
            build/baserom/g_pn_48.o (.data)
        _g_pn_48SegmentDataEnd = .;
    _g_pn_48SegmentDataSize = ABSOLUTE( _g_pn_48SegmentDataEnd - _g_pn_48SegmentDataStart );
        _g_pn_48SegmentRoDataStart = .;
            build/baserom/g_pn_48.o (.rodata)
        _g_pn_48SegmentRoDataEnd = .;
    _g_pn_48SegmentRoDataSize = ABSOLUTE( _g_pn_48SegmentRoDataEnd - _g_pn_48SegmentRoDataStart );
        _g_pn_48SegmentSDataStart = .;
            build/baserom/g_pn_48.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_48SegmentSDataEnd = .;
        _g_pn_48SegmentOvlStart = .;
            build/baserom/g_pn_48.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_48SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_48SegmentOvlEnd - _g_pn_48SegmentTextStart );
    _g_pn_48SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_48.bss ADDR(..g_pn_48) + SIZEOF(..g_pn_48) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_48SegmentBssStart = .;
            build/baserom/g_pn_48.o (.sbss)
            build/baserom/g_pn_48.o (.scommon)
            build/baserom/g_pn_48.o (.bss)
            build/baserom/g_pn_48.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_48SegmentBssEnd = .;
        _g_pn_48SegmentEnd = .;
    }
    _g_pn_48SegmentBssSize = ABSOLUTE( _g_pn_48SegmentBssEnd - _g_pn_48SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_49SegmentRomStart = _RomSize;
    ..g_pn_49 : AT(_RomSize)
    {
        _g_pn_49SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_49SegmentTextStart = .;
            build/baserom/g_pn_49.o (.text)
        _g_pn_49SegmentTextEnd = .;
    _g_pn_49SegmentTextSize = ABSOLUTE( _g_pn_49SegmentTextEnd - _g_pn_49SegmentTextStart );
        _g_pn_49SegmentDataStart = .;
            build/baserom/g_pn_49.o (.data)
        _g_pn_49SegmentDataEnd = .;
    _g_pn_49SegmentDataSize = ABSOLUTE( _g_pn_49SegmentDataEnd - _g_pn_49SegmentDataStart );
        _g_pn_49SegmentRoDataStart = .;
            build/baserom/g_pn_49.o (.rodata)
        _g_pn_49SegmentRoDataEnd = .;
    _g_pn_49SegmentRoDataSize = ABSOLUTE( _g_pn_49SegmentRoDataEnd - _g_pn_49SegmentRoDataStart );
        _g_pn_49SegmentSDataStart = .;
            build/baserom/g_pn_49.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_49SegmentSDataEnd = .;
        _g_pn_49SegmentOvlStart = .;
            build/baserom/g_pn_49.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_49SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_49SegmentOvlEnd - _g_pn_49SegmentTextStart );
    _g_pn_49SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_49.bss ADDR(..g_pn_49) + SIZEOF(..g_pn_49) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_49SegmentBssStart = .;
            build/baserom/g_pn_49.o (.sbss)
            build/baserom/g_pn_49.o (.scommon)
            build/baserom/g_pn_49.o (.bss)
            build/baserom/g_pn_49.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_49SegmentBssEnd = .;
        _g_pn_49SegmentEnd = .;
    }
    _g_pn_49SegmentBssSize = ABSOLUTE( _g_pn_49SegmentBssEnd - _g_pn_49SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_50SegmentRomStart = _RomSize;
    ..g_pn_50 : AT(_RomSize)
    {
        _g_pn_50SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_50SegmentTextStart = .;
            build/baserom/g_pn_50.o (.text)
        _g_pn_50SegmentTextEnd = .;
    _g_pn_50SegmentTextSize = ABSOLUTE( _g_pn_50SegmentTextEnd - _g_pn_50SegmentTextStart );
        _g_pn_50SegmentDataStart = .;
            build/baserom/g_pn_50.o (.data)
        _g_pn_50SegmentDataEnd = .;
    _g_pn_50SegmentDataSize = ABSOLUTE( _g_pn_50SegmentDataEnd - _g_pn_50SegmentDataStart );
        _g_pn_50SegmentRoDataStart = .;
            build/baserom/g_pn_50.o (.rodata)
        _g_pn_50SegmentRoDataEnd = .;
    _g_pn_50SegmentRoDataSize = ABSOLUTE( _g_pn_50SegmentRoDataEnd - _g_pn_50SegmentRoDataStart );
        _g_pn_50SegmentSDataStart = .;
            build/baserom/g_pn_50.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_50SegmentSDataEnd = .;
        _g_pn_50SegmentOvlStart = .;
            build/baserom/g_pn_50.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_50SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_50SegmentOvlEnd - _g_pn_50SegmentTextStart );
    _g_pn_50SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_50.bss ADDR(..g_pn_50) + SIZEOF(..g_pn_50) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_50SegmentBssStart = .;
            build/baserom/g_pn_50.o (.sbss)
            build/baserom/g_pn_50.o (.scommon)
            build/baserom/g_pn_50.o (.bss)
            build/baserom/g_pn_50.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_50SegmentBssEnd = .;
        _g_pn_50SegmentEnd = .;
    }
    _g_pn_50SegmentBssSize = ABSOLUTE( _g_pn_50SegmentBssEnd - _g_pn_50SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_51SegmentRomStart = _RomSize;
    ..g_pn_51 : AT(_RomSize)
    {
        _g_pn_51SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_51SegmentTextStart = .;
            build/baserom/g_pn_51.o (.text)
        _g_pn_51SegmentTextEnd = .;
    _g_pn_51SegmentTextSize = ABSOLUTE( _g_pn_51SegmentTextEnd - _g_pn_51SegmentTextStart );
        _g_pn_51SegmentDataStart = .;
            build/baserom/g_pn_51.o (.data)
        _g_pn_51SegmentDataEnd = .;
    _g_pn_51SegmentDataSize = ABSOLUTE( _g_pn_51SegmentDataEnd - _g_pn_51SegmentDataStart );
        _g_pn_51SegmentRoDataStart = .;
            build/baserom/g_pn_51.o (.rodata)
        _g_pn_51SegmentRoDataEnd = .;
    _g_pn_51SegmentRoDataSize = ABSOLUTE( _g_pn_51SegmentRoDataEnd - _g_pn_51SegmentRoDataStart );
        _g_pn_51SegmentSDataStart = .;
            build/baserom/g_pn_51.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_51SegmentSDataEnd = .;
        _g_pn_51SegmentOvlStart = .;
            build/baserom/g_pn_51.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_51SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_51SegmentOvlEnd - _g_pn_51SegmentTextStart );
    _g_pn_51SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_51.bss ADDR(..g_pn_51) + SIZEOF(..g_pn_51) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_51SegmentBssStart = .;
            build/baserom/g_pn_51.o (.sbss)
            build/baserom/g_pn_51.o (.scommon)
            build/baserom/g_pn_51.o (.bss)
            build/baserom/g_pn_51.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_51SegmentBssEnd = .;
        _g_pn_51SegmentEnd = .;
    }
    _g_pn_51SegmentBssSize = ABSOLUTE( _g_pn_51SegmentBssEnd - _g_pn_51SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_52SegmentRomStart = _RomSize;
    ..g_pn_52 : AT(_RomSize)
    {
        _g_pn_52SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_52SegmentTextStart = .;
            build/baserom/g_pn_52.o (.text)
        _g_pn_52SegmentTextEnd = .;
    _g_pn_52SegmentTextSize = ABSOLUTE( _g_pn_52SegmentTextEnd - _g_pn_52SegmentTextStart );
        _g_pn_52SegmentDataStart = .;
            build/baserom/g_pn_52.o (.data)
        _g_pn_52SegmentDataEnd = .;
    _g_pn_52SegmentDataSize = ABSOLUTE( _g_pn_52SegmentDataEnd - _g_pn_52SegmentDataStart );
        _g_pn_52SegmentRoDataStart = .;
            build/baserom/g_pn_52.o (.rodata)
        _g_pn_52SegmentRoDataEnd = .;
    _g_pn_52SegmentRoDataSize = ABSOLUTE( _g_pn_52SegmentRoDataEnd - _g_pn_52SegmentRoDataStart );
        _g_pn_52SegmentSDataStart = .;
            build/baserom/g_pn_52.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_52SegmentSDataEnd = .;
        _g_pn_52SegmentOvlStart = .;
            build/baserom/g_pn_52.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_52SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_52SegmentOvlEnd - _g_pn_52SegmentTextStart );
    _g_pn_52SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_52.bss ADDR(..g_pn_52) + SIZEOF(..g_pn_52) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_52SegmentBssStart = .;
            build/baserom/g_pn_52.o (.sbss)
            build/baserom/g_pn_52.o (.scommon)
            build/baserom/g_pn_52.o (.bss)
            build/baserom/g_pn_52.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_52SegmentBssEnd = .;
        _g_pn_52SegmentEnd = .;
    }
    _g_pn_52SegmentBssSize = ABSOLUTE( _g_pn_52SegmentBssEnd - _g_pn_52SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_53SegmentRomStart = _RomSize;
    ..g_pn_53 : AT(_RomSize)
    {
        _g_pn_53SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_53SegmentTextStart = .;
            build/baserom/g_pn_53.o (.text)
        _g_pn_53SegmentTextEnd = .;
    _g_pn_53SegmentTextSize = ABSOLUTE( _g_pn_53SegmentTextEnd - _g_pn_53SegmentTextStart );
        _g_pn_53SegmentDataStart = .;
            build/baserom/g_pn_53.o (.data)
        _g_pn_53SegmentDataEnd = .;
    _g_pn_53SegmentDataSize = ABSOLUTE( _g_pn_53SegmentDataEnd - _g_pn_53SegmentDataStart );
        _g_pn_53SegmentRoDataStart = .;
            build/baserom/g_pn_53.o (.rodata)
        _g_pn_53SegmentRoDataEnd = .;
    _g_pn_53SegmentRoDataSize = ABSOLUTE( _g_pn_53SegmentRoDataEnd - _g_pn_53SegmentRoDataStart );
        _g_pn_53SegmentSDataStart = .;
            build/baserom/g_pn_53.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_53SegmentSDataEnd = .;
        _g_pn_53SegmentOvlStart = .;
            build/baserom/g_pn_53.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_53SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_53SegmentOvlEnd - _g_pn_53SegmentTextStart );
    _g_pn_53SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_53.bss ADDR(..g_pn_53) + SIZEOF(..g_pn_53) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_53SegmentBssStart = .;
            build/baserom/g_pn_53.o (.sbss)
            build/baserom/g_pn_53.o (.scommon)
            build/baserom/g_pn_53.o (.bss)
            build/baserom/g_pn_53.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_53SegmentBssEnd = .;
        _g_pn_53SegmentEnd = .;
    }
    _g_pn_53SegmentBssSize = ABSOLUTE( _g_pn_53SegmentBssEnd - _g_pn_53SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_54SegmentRomStart = _RomSize;
    ..g_pn_54 : AT(_RomSize)
    {
        _g_pn_54SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_54SegmentTextStart = .;
            build/baserom/g_pn_54.o (.text)
        _g_pn_54SegmentTextEnd = .;
    _g_pn_54SegmentTextSize = ABSOLUTE( _g_pn_54SegmentTextEnd - _g_pn_54SegmentTextStart );
        _g_pn_54SegmentDataStart = .;
            build/baserom/g_pn_54.o (.data)
        _g_pn_54SegmentDataEnd = .;
    _g_pn_54SegmentDataSize = ABSOLUTE( _g_pn_54SegmentDataEnd - _g_pn_54SegmentDataStart );
        _g_pn_54SegmentRoDataStart = .;
            build/baserom/g_pn_54.o (.rodata)
        _g_pn_54SegmentRoDataEnd = .;
    _g_pn_54SegmentRoDataSize = ABSOLUTE( _g_pn_54SegmentRoDataEnd - _g_pn_54SegmentRoDataStart );
        _g_pn_54SegmentSDataStart = .;
            build/baserom/g_pn_54.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_54SegmentSDataEnd = .;
        _g_pn_54SegmentOvlStart = .;
            build/baserom/g_pn_54.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_54SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_54SegmentOvlEnd - _g_pn_54SegmentTextStart );
    _g_pn_54SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_54.bss ADDR(..g_pn_54) + SIZEOF(..g_pn_54) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_54SegmentBssStart = .;
            build/baserom/g_pn_54.o (.sbss)
            build/baserom/g_pn_54.o (.scommon)
            build/baserom/g_pn_54.o (.bss)
            build/baserom/g_pn_54.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_54SegmentBssEnd = .;
        _g_pn_54SegmentEnd = .;
    }
    _g_pn_54SegmentBssSize = ABSOLUTE( _g_pn_54SegmentBssEnd - _g_pn_54SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_55SegmentRomStart = _RomSize;
    ..g_pn_55 : AT(_RomSize)
    {
        _g_pn_55SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_55SegmentTextStart = .;
            build/baserom/g_pn_55.o (.text)
        _g_pn_55SegmentTextEnd = .;
    _g_pn_55SegmentTextSize = ABSOLUTE( _g_pn_55SegmentTextEnd - _g_pn_55SegmentTextStart );
        _g_pn_55SegmentDataStart = .;
            build/baserom/g_pn_55.o (.data)
        _g_pn_55SegmentDataEnd = .;
    _g_pn_55SegmentDataSize = ABSOLUTE( _g_pn_55SegmentDataEnd - _g_pn_55SegmentDataStart );
        _g_pn_55SegmentRoDataStart = .;
            build/baserom/g_pn_55.o (.rodata)
        _g_pn_55SegmentRoDataEnd = .;
    _g_pn_55SegmentRoDataSize = ABSOLUTE( _g_pn_55SegmentRoDataEnd - _g_pn_55SegmentRoDataStart );
        _g_pn_55SegmentSDataStart = .;
            build/baserom/g_pn_55.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_55SegmentSDataEnd = .;
        _g_pn_55SegmentOvlStart = .;
            build/baserom/g_pn_55.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_55SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_55SegmentOvlEnd - _g_pn_55SegmentTextStart );
    _g_pn_55SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_55.bss ADDR(..g_pn_55) + SIZEOF(..g_pn_55) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_55SegmentBssStart = .;
            build/baserom/g_pn_55.o (.sbss)
            build/baserom/g_pn_55.o (.scommon)
            build/baserom/g_pn_55.o (.bss)
            build/baserom/g_pn_55.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_55SegmentBssEnd = .;
        _g_pn_55SegmentEnd = .;
    }
    _g_pn_55SegmentBssSize = ABSOLUTE( _g_pn_55SegmentBssEnd - _g_pn_55SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_56SegmentRomStart = _RomSize;
    ..g_pn_56 : AT(_RomSize)
    {
        _g_pn_56SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_56SegmentTextStart = .;
            build/baserom/g_pn_56.o (.text)
        _g_pn_56SegmentTextEnd = .;
    _g_pn_56SegmentTextSize = ABSOLUTE( _g_pn_56SegmentTextEnd - _g_pn_56SegmentTextStart );
        _g_pn_56SegmentDataStart = .;
            build/baserom/g_pn_56.o (.data)
        _g_pn_56SegmentDataEnd = .;
    _g_pn_56SegmentDataSize = ABSOLUTE( _g_pn_56SegmentDataEnd - _g_pn_56SegmentDataStart );
        _g_pn_56SegmentRoDataStart = .;
            build/baserom/g_pn_56.o (.rodata)
        _g_pn_56SegmentRoDataEnd = .;
    _g_pn_56SegmentRoDataSize = ABSOLUTE( _g_pn_56SegmentRoDataEnd - _g_pn_56SegmentRoDataStart );
        _g_pn_56SegmentSDataStart = .;
            build/baserom/g_pn_56.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_56SegmentSDataEnd = .;
        _g_pn_56SegmentOvlStart = .;
            build/baserom/g_pn_56.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_56SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_56SegmentOvlEnd - _g_pn_56SegmentTextStart );
    _g_pn_56SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_56.bss ADDR(..g_pn_56) + SIZEOF(..g_pn_56) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_56SegmentBssStart = .;
            build/baserom/g_pn_56.o (.sbss)
            build/baserom/g_pn_56.o (.scommon)
            build/baserom/g_pn_56.o (.bss)
            build/baserom/g_pn_56.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_56SegmentBssEnd = .;
        _g_pn_56SegmentEnd = .;
    }
    _g_pn_56SegmentBssSize = ABSOLUTE( _g_pn_56SegmentBssEnd - _g_pn_56SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _g_pn_57SegmentRomStart = _RomSize;
    ..g_pn_57 : AT(_RomSize)
    {
        _g_pn_57SegmentStart = .;
        . = ALIGN(0x10);
        _g_pn_57SegmentTextStart = .;
            build/baserom/g_pn_57.o (.text)
        _g_pn_57SegmentTextEnd = .;
    _g_pn_57SegmentTextSize = ABSOLUTE( _g_pn_57SegmentTextEnd - _g_pn_57SegmentTextStart );
        _g_pn_57SegmentDataStart = .;
            build/baserom/g_pn_57.o (.data)
        _g_pn_57SegmentDataEnd = .;
    _g_pn_57SegmentDataSize = ABSOLUTE( _g_pn_57SegmentDataEnd - _g_pn_57SegmentDataStart );
        _g_pn_57SegmentRoDataStart = .;
            build/baserom/g_pn_57.o (.rodata)
        _g_pn_57SegmentRoDataEnd = .;
    _g_pn_57SegmentRoDataSize = ABSOLUTE( _g_pn_57SegmentRoDataEnd - _g_pn_57SegmentRoDataStart );
        _g_pn_57SegmentSDataStart = .;
            build/baserom/g_pn_57.o (.sdata)
        . = ALIGN(0x10);
        _g_pn_57SegmentSDataEnd = .;
        _g_pn_57SegmentOvlStart = .;
            build/baserom/g_pn_57.o (.ovl)
        . = ALIGN(0x10);
        _g_pn_57SegmentOvlEnd = .;
    }
    _RomSize += ( _g_pn_57SegmentOvlEnd - _g_pn_57SegmentTextStart );
    _g_pn_57SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..g_pn_57.bss ADDR(..g_pn_57) + SIZEOF(..g_pn_57) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _g_pn_57SegmentBssStart = .;
            build/baserom/g_pn_57.o (.sbss)
            build/baserom/g_pn_57.o (.scommon)
            build/baserom/g_pn_57.o (.bss)
            build/baserom/g_pn_57.o (COMMON)
        . = ALIGN(0x10);
        _g_pn_57SegmentBssEnd = .;
        _g_pn_57SegmentEnd = .;
    }
    _g_pn_57SegmentBssSize = ABSOLUTE( _g_pn_57SegmentBssEnd - _g_pn_57SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _z_select_staticSegmentRomStart = _RomSize;
    ..z_select_static : AT(_RomSize)
    {
        _z_select_staticSegmentStart = .;
        . = ALIGN(0x10);
        _z_select_staticSegmentTextStart = .;
            build/baserom/z_select_static.o (.text)
        _z_select_staticSegmentTextEnd = .;
    _z_select_staticSegmentTextSize = ABSOLUTE( _z_select_staticSegmentTextEnd - _z_select_staticSegmentTextStart );
        _z_select_staticSegmentDataStart = .;
            build/baserom/z_select_static.o (.data)
        _z_select_staticSegmentDataEnd = .;
    _z_select_staticSegmentDataSize = ABSOLUTE( _z_select_staticSegmentDataEnd - _z_select_staticSegmentDataStart );
        _z_select_staticSegmentRoDataStart = .;
            build/baserom/z_select_static.o (.rodata)
        _z_select_staticSegmentRoDataEnd = .;
    _z_select_staticSegmentRoDataSize = ABSOLUTE( _z_select_staticSegmentRoDataEnd - _z_select_staticSegmentRoDataStart );
        _z_select_staticSegmentSDataStart = .;
            build/baserom/z_select_static.o (.sdata)
        . = ALIGN(0x10);
        _z_select_staticSegmentSDataEnd = .;
        _z_select_staticSegmentOvlStart = .;
            build/baserom/z_select_static.o (.ovl)
        . = ALIGN(0x10);
        _z_select_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _z_select_staticSegmentOvlEnd - _z_select_staticSegmentTextStart );
    _z_select_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..z_select_static.bss ADDR(..z_select_static) + SIZEOF(..z_select_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _z_select_staticSegmentBssStart = .;
            build/baserom/z_select_static.o (.sbss)
            build/baserom/z_select_static.o (.scommon)
            build/baserom/z_select_static.o (.bss)
            build/baserom/z_select_static.o (COMMON)
        . = ALIGN(0x10);
        _z_select_staticSegmentBssEnd = .;
        _z_select_staticSegmentEnd = .;
    }
    _z_select_staticSegmentBssSize = ABSOLUTE( _z_select_staticSegmentBssEnd - _z_select_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _nintendo_rogo_staticSegmentRomStart = _RomSize;
    ..nintendo_rogo_static : AT(_RomSize)
    {
        _nintendo_rogo_staticSegmentStart = .;
        . = ALIGN(0x10);
        _nintendo_rogo_staticSegmentTextStart = .;
            build/baserom/nintendo_rogo_static.o (.text)
        _nintendo_rogo_staticSegmentTextEnd = .;
    _nintendo_rogo_staticSegmentTextSize = ABSOLUTE( _nintendo_rogo_staticSegmentTextEnd - _nintendo_rogo_staticSegmentTextStart );
        _nintendo_rogo_staticSegmentDataStart = .;
            build/baserom/nintendo_rogo_static.o (.data)
        _nintendo_rogo_staticSegmentDataEnd = .;
    _nintendo_rogo_staticSegmentDataSize = ABSOLUTE( _nintendo_rogo_staticSegmentDataEnd - _nintendo_rogo_staticSegmentDataStart );
        _nintendo_rogo_staticSegmentRoDataStart = .;
            build/baserom/nintendo_rogo_static.o (.rodata)
        _nintendo_rogo_staticSegmentRoDataEnd = .;
    _nintendo_rogo_staticSegmentRoDataSize = ABSOLUTE( _nintendo_rogo_staticSegmentRoDataEnd - _nintendo_rogo_staticSegmentRoDataStart );
        _nintendo_rogo_staticSegmentSDataStart = .;
            build/baserom/nintendo_rogo_static.o (.sdata)
        . = ALIGN(0x10);
        _nintendo_rogo_staticSegmentSDataEnd = .;
        _nintendo_rogo_staticSegmentOvlStart = .;
            build/baserom/nintendo_rogo_static.o (.ovl)
        . = ALIGN(0x10);
        _nintendo_rogo_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _nintendo_rogo_staticSegmentOvlEnd - _nintendo_rogo_staticSegmentTextStart );
    _nintendo_rogo_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..nintendo_rogo_static.bss ADDR(..nintendo_rogo_static) + SIZEOF(..nintendo_rogo_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _nintendo_rogo_staticSegmentBssStart = .;
            build/baserom/nintendo_rogo_static.o (.sbss)
            build/baserom/nintendo_rogo_static.o (.scommon)
            build/baserom/nintendo_rogo_static.o (.bss)
            build/baserom/nintendo_rogo_static.o (COMMON)
        . = ALIGN(0x10);
        _nintendo_rogo_staticSegmentBssEnd = .;
        _nintendo_rogo_staticSegmentEnd = .;
    }
    _nintendo_rogo_staticSegmentBssSize = ABSOLUTE( _nintendo_rogo_staticSegmentBssEnd - _nintendo_rogo_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _title_staticSegmentRomStart = _RomSize;
    ..title_static : AT(_RomSize)
    {
        _title_staticSegmentStart = .;
        . = ALIGN(0x10);
        _title_staticSegmentTextStart = .;
            build/baserom/title_static.o (.text)
        _title_staticSegmentTextEnd = .;
    _title_staticSegmentTextSize = ABSOLUTE( _title_staticSegmentTextEnd - _title_staticSegmentTextStart );
        _title_staticSegmentDataStart = .;
            build/baserom/title_static.o (.data)
        _title_staticSegmentDataEnd = .;
    _title_staticSegmentDataSize = ABSOLUTE( _title_staticSegmentDataEnd - _title_staticSegmentDataStart );
        _title_staticSegmentRoDataStart = .;
            build/baserom/title_static.o (.rodata)
        _title_staticSegmentRoDataEnd = .;
    _title_staticSegmentRoDataSize = ABSOLUTE( _title_staticSegmentRoDataEnd - _title_staticSegmentRoDataStart );
        _title_staticSegmentSDataStart = .;
            build/baserom/title_static.o (.sdata)
        . = ALIGN(0x10);
        _title_staticSegmentSDataEnd = .;
        _title_staticSegmentOvlStart = .;
            build/baserom/title_static.o (.ovl)
        . = ALIGN(0x10);
        _title_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _title_staticSegmentOvlEnd - _title_staticSegmentTextStart );
    _title_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..title_static.bss ADDR(..title_static) + SIZEOF(..title_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _title_staticSegmentBssStart = .;
            build/baserom/title_static.o (.sbss)
            build/baserom/title_static.o (.scommon)
            build/baserom/title_static.o (.bss)
            build/baserom/title_static.o (COMMON)
        . = ALIGN(0x10);
        _title_staticSegmentBssEnd = .;
        _title_staticSegmentEnd = .;
    }
    _title_staticSegmentBssSize = ABSOLUTE( _title_staticSegmentBssEnd - _title_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _parameter_staticSegmentRomStart = _RomSize;
    ..parameter_static : AT(_RomSize)
    {
        _parameter_staticSegmentStart = .;
        . = ALIGN(0x10);
        _parameter_staticSegmentTextStart = .;
            build/baserom/parameter_static.o (.text)
        _parameter_staticSegmentTextEnd = .;
    _parameter_staticSegmentTextSize = ABSOLUTE( _parameter_staticSegmentTextEnd - _parameter_staticSegmentTextStart );
        _parameter_staticSegmentDataStart = .;
            build/baserom/parameter_static.o (.data)
        _parameter_staticSegmentDataEnd = .;
    _parameter_staticSegmentDataSize = ABSOLUTE( _parameter_staticSegmentDataEnd - _parameter_staticSegmentDataStart );
        _parameter_staticSegmentRoDataStart = .;
            build/baserom/parameter_static.o (.rodata)
        _parameter_staticSegmentRoDataEnd = .;
    _parameter_staticSegmentRoDataSize = ABSOLUTE( _parameter_staticSegmentRoDataEnd - _parameter_staticSegmentRoDataStart );
        _parameter_staticSegmentSDataStart = .;
            build/baserom/parameter_static.o (.sdata)
        . = ALIGN(0x10);
        _parameter_staticSegmentSDataEnd = .;
        _parameter_staticSegmentOvlStart = .;
            build/baserom/parameter_static.o (.ovl)
        . = ALIGN(0x10);
        _parameter_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _parameter_staticSegmentOvlEnd - _parameter_staticSegmentTextStart );
    _parameter_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..parameter_static.bss ADDR(..parameter_static) + SIZEOF(..parameter_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _parameter_staticSegmentBssStart = .;
            build/baserom/parameter_static.o (.sbss)
            build/baserom/parameter_static.o (.scommon)
            build/baserom/parameter_static.o (.bss)
            build/baserom/parameter_static.o (COMMON)
        . = ALIGN(0x10);
        _parameter_staticSegmentBssEnd = .;
        _parameter_staticSegmentEnd = .;
    }
    _parameter_staticSegmentBssSize = ABSOLUTE( _parameter_staticSegmentBssEnd - _parameter_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_fine0_staticSegmentRomStart = _RomSize;
    ..vr_fine0_static : AT(_RomSize)
    {
        _vr_fine0_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_fine0_staticSegmentTextStart = .;
            build/baserom/vr_fine0_static.o (.text)
        _vr_fine0_staticSegmentTextEnd = .;
    _vr_fine0_staticSegmentTextSize = ABSOLUTE( _vr_fine0_staticSegmentTextEnd - _vr_fine0_staticSegmentTextStart );
        _vr_fine0_staticSegmentDataStart = .;
            build/baserom/vr_fine0_static.o (.data)
        _vr_fine0_staticSegmentDataEnd = .;
    _vr_fine0_staticSegmentDataSize = ABSOLUTE( _vr_fine0_staticSegmentDataEnd - _vr_fine0_staticSegmentDataStart );
        _vr_fine0_staticSegmentRoDataStart = .;
            build/baserom/vr_fine0_static.o (.rodata)
        _vr_fine0_staticSegmentRoDataEnd = .;
    _vr_fine0_staticSegmentRoDataSize = ABSOLUTE( _vr_fine0_staticSegmentRoDataEnd - _vr_fine0_staticSegmentRoDataStart );
        _vr_fine0_staticSegmentSDataStart = .;
            build/baserom/vr_fine0_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_fine0_staticSegmentSDataEnd = .;
        _vr_fine0_staticSegmentOvlStart = .;
            build/baserom/vr_fine0_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_fine0_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_fine0_staticSegmentOvlEnd - _vr_fine0_staticSegmentTextStart );
    _vr_fine0_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_fine0_static.bss ADDR(..vr_fine0_static) + SIZEOF(..vr_fine0_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_fine0_staticSegmentBssStart = .;
            build/baserom/vr_fine0_static.o (.sbss)
            build/baserom/vr_fine0_static.o (.scommon)
            build/baserom/vr_fine0_static.o (.bss)
            build/baserom/vr_fine0_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_fine0_staticSegmentBssEnd = .;
        _vr_fine0_staticSegmentEnd = .;
    }
    _vr_fine0_staticSegmentBssSize = ABSOLUTE( _vr_fine0_staticSegmentBssEnd - _vr_fine0_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_fine0_pal_staticSegmentRomStart = _RomSize;
    ..vr_fine0_pal_static : AT(_RomSize)
    {
        _vr_fine0_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_fine0_pal_staticSegmentTextStart = .;
            build/baserom/vr_fine0_pal_static.o (.text)
        _vr_fine0_pal_staticSegmentTextEnd = .;
    _vr_fine0_pal_staticSegmentTextSize = ABSOLUTE( _vr_fine0_pal_staticSegmentTextEnd - _vr_fine0_pal_staticSegmentTextStart );
        _vr_fine0_pal_staticSegmentDataStart = .;
            build/baserom/vr_fine0_pal_static.o (.data)
        _vr_fine0_pal_staticSegmentDataEnd = .;
    _vr_fine0_pal_staticSegmentDataSize = ABSOLUTE( _vr_fine0_pal_staticSegmentDataEnd - _vr_fine0_pal_staticSegmentDataStart );
        _vr_fine0_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_fine0_pal_static.o (.rodata)
        _vr_fine0_pal_staticSegmentRoDataEnd = .;
    _vr_fine0_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_fine0_pal_staticSegmentRoDataEnd - _vr_fine0_pal_staticSegmentRoDataStart );
        _vr_fine0_pal_staticSegmentSDataStart = .;
            build/baserom/vr_fine0_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_fine0_pal_staticSegmentSDataEnd = .;
        _vr_fine0_pal_staticSegmentOvlStart = .;
            build/baserom/vr_fine0_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_fine0_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_fine0_pal_staticSegmentOvlEnd - _vr_fine0_pal_staticSegmentTextStart );
    _vr_fine0_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_fine0_pal_static.bss ADDR(..vr_fine0_pal_static) + SIZEOF(..vr_fine0_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_fine0_pal_staticSegmentBssStart = .;
            build/baserom/vr_fine0_pal_static.o (.sbss)
            build/baserom/vr_fine0_pal_static.o (.scommon)
            build/baserom/vr_fine0_pal_static.o (.bss)
            build/baserom/vr_fine0_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_fine0_pal_staticSegmentBssEnd = .;
        _vr_fine0_pal_staticSegmentEnd = .;
    }
    _vr_fine0_pal_staticSegmentBssSize = ABSOLUTE( _vr_fine0_pal_staticSegmentBssEnd - _vr_fine0_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_fine1_staticSegmentRomStart = _RomSize;
    ..vr_fine1_static : AT(_RomSize)
    {
        _vr_fine1_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_fine1_staticSegmentTextStart = .;
            build/baserom/vr_fine1_static.o (.text)
        _vr_fine1_staticSegmentTextEnd = .;
    _vr_fine1_staticSegmentTextSize = ABSOLUTE( _vr_fine1_staticSegmentTextEnd - _vr_fine1_staticSegmentTextStart );
        _vr_fine1_staticSegmentDataStart = .;
            build/baserom/vr_fine1_static.o (.data)
        _vr_fine1_staticSegmentDataEnd = .;
    _vr_fine1_staticSegmentDataSize = ABSOLUTE( _vr_fine1_staticSegmentDataEnd - _vr_fine1_staticSegmentDataStart );
        _vr_fine1_staticSegmentRoDataStart = .;
            build/baserom/vr_fine1_static.o (.rodata)
        _vr_fine1_staticSegmentRoDataEnd = .;
    _vr_fine1_staticSegmentRoDataSize = ABSOLUTE( _vr_fine1_staticSegmentRoDataEnd - _vr_fine1_staticSegmentRoDataStart );
        _vr_fine1_staticSegmentSDataStart = .;
            build/baserom/vr_fine1_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_fine1_staticSegmentSDataEnd = .;
        _vr_fine1_staticSegmentOvlStart = .;
            build/baserom/vr_fine1_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_fine1_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_fine1_staticSegmentOvlEnd - _vr_fine1_staticSegmentTextStart );
    _vr_fine1_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_fine1_static.bss ADDR(..vr_fine1_static) + SIZEOF(..vr_fine1_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_fine1_staticSegmentBssStart = .;
            build/baserom/vr_fine1_static.o (.sbss)
            build/baserom/vr_fine1_static.o (.scommon)
            build/baserom/vr_fine1_static.o (.bss)
            build/baserom/vr_fine1_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_fine1_staticSegmentBssEnd = .;
        _vr_fine1_staticSegmentEnd = .;
    }
    _vr_fine1_staticSegmentBssSize = ABSOLUTE( _vr_fine1_staticSegmentBssEnd - _vr_fine1_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_fine1_pal_staticSegmentRomStart = _RomSize;
    ..vr_fine1_pal_static : AT(_RomSize)
    {
        _vr_fine1_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_fine1_pal_staticSegmentTextStart = .;
            build/baserom/vr_fine1_pal_static.o (.text)
        _vr_fine1_pal_staticSegmentTextEnd = .;
    _vr_fine1_pal_staticSegmentTextSize = ABSOLUTE( _vr_fine1_pal_staticSegmentTextEnd - _vr_fine1_pal_staticSegmentTextStart );
        _vr_fine1_pal_staticSegmentDataStart = .;
            build/baserom/vr_fine1_pal_static.o (.data)
        _vr_fine1_pal_staticSegmentDataEnd = .;
    _vr_fine1_pal_staticSegmentDataSize = ABSOLUTE( _vr_fine1_pal_staticSegmentDataEnd - _vr_fine1_pal_staticSegmentDataStart );
        _vr_fine1_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_fine1_pal_static.o (.rodata)
        _vr_fine1_pal_staticSegmentRoDataEnd = .;
    _vr_fine1_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_fine1_pal_staticSegmentRoDataEnd - _vr_fine1_pal_staticSegmentRoDataStart );
        _vr_fine1_pal_staticSegmentSDataStart = .;
            build/baserom/vr_fine1_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_fine1_pal_staticSegmentSDataEnd = .;
        _vr_fine1_pal_staticSegmentOvlStart = .;
            build/baserom/vr_fine1_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_fine1_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_fine1_pal_staticSegmentOvlEnd - _vr_fine1_pal_staticSegmentTextStart );
    _vr_fine1_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_fine1_pal_static.bss ADDR(..vr_fine1_pal_static) + SIZEOF(..vr_fine1_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_fine1_pal_staticSegmentBssStart = .;
            build/baserom/vr_fine1_pal_static.o (.sbss)
            build/baserom/vr_fine1_pal_static.o (.scommon)
            build/baserom/vr_fine1_pal_static.o (.bss)
            build/baserom/vr_fine1_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_fine1_pal_staticSegmentBssEnd = .;
        _vr_fine1_pal_staticSegmentEnd = .;
    }
    _vr_fine1_pal_staticSegmentBssSize = ABSOLUTE( _vr_fine1_pal_staticSegmentBssEnd - _vr_fine1_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_fine2_staticSegmentRomStart = _RomSize;
    ..vr_fine2_static : AT(_RomSize)
    {
        _vr_fine2_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_fine2_staticSegmentTextStart = .;
            build/baserom/vr_fine2_static.o (.text)
        _vr_fine2_staticSegmentTextEnd = .;
    _vr_fine2_staticSegmentTextSize = ABSOLUTE( _vr_fine2_staticSegmentTextEnd - _vr_fine2_staticSegmentTextStart );
        _vr_fine2_staticSegmentDataStart = .;
            build/baserom/vr_fine2_static.o (.data)
        _vr_fine2_staticSegmentDataEnd = .;
    _vr_fine2_staticSegmentDataSize = ABSOLUTE( _vr_fine2_staticSegmentDataEnd - _vr_fine2_staticSegmentDataStart );
        _vr_fine2_staticSegmentRoDataStart = .;
            build/baserom/vr_fine2_static.o (.rodata)
        _vr_fine2_staticSegmentRoDataEnd = .;
    _vr_fine2_staticSegmentRoDataSize = ABSOLUTE( _vr_fine2_staticSegmentRoDataEnd - _vr_fine2_staticSegmentRoDataStart );
        _vr_fine2_staticSegmentSDataStart = .;
            build/baserom/vr_fine2_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_fine2_staticSegmentSDataEnd = .;
        _vr_fine2_staticSegmentOvlStart = .;
            build/baserom/vr_fine2_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_fine2_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_fine2_staticSegmentOvlEnd - _vr_fine2_staticSegmentTextStart );
    _vr_fine2_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_fine2_static.bss ADDR(..vr_fine2_static) + SIZEOF(..vr_fine2_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_fine2_staticSegmentBssStart = .;
            build/baserom/vr_fine2_static.o (.sbss)
            build/baserom/vr_fine2_static.o (.scommon)
            build/baserom/vr_fine2_static.o (.bss)
            build/baserom/vr_fine2_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_fine2_staticSegmentBssEnd = .;
        _vr_fine2_staticSegmentEnd = .;
    }
    _vr_fine2_staticSegmentBssSize = ABSOLUTE( _vr_fine2_staticSegmentBssEnd - _vr_fine2_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_fine2_pal_staticSegmentRomStart = _RomSize;
    ..vr_fine2_pal_static : AT(_RomSize)
    {
        _vr_fine2_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_fine2_pal_staticSegmentTextStart = .;
            build/baserom/vr_fine2_pal_static.o (.text)
        _vr_fine2_pal_staticSegmentTextEnd = .;
    _vr_fine2_pal_staticSegmentTextSize = ABSOLUTE( _vr_fine2_pal_staticSegmentTextEnd - _vr_fine2_pal_staticSegmentTextStart );
        _vr_fine2_pal_staticSegmentDataStart = .;
            build/baserom/vr_fine2_pal_static.o (.data)
        _vr_fine2_pal_staticSegmentDataEnd = .;
    _vr_fine2_pal_staticSegmentDataSize = ABSOLUTE( _vr_fine2_pal_staticSegmentDataEnd - _vr_fine2_pal_staticSegmentDataStart );
        _vr_fine2_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_fine2_pal_static.o (.rodata)
        _vr_fine2_pal_staticSegmentRoDataEnd = .;
    _vr_fine2_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_fine2_pal_staticSegmentRoDataEnd - _vr_fine2_pal_staticSegmentRoDataStart );
        _vr_fine2_pal_staticSegmentSDataStart = .;
            build/baserom/vr_fine2_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_fine2_pal_staticSegmentSDataEnd = .;
        _vr_fine2_pal_staticSegmentOvlStart = .;
            build/baserom/vr_fine2_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_fine2_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_fine2_pal_staticSegmentOvlEnd - _vr_fine2_pal_staticSegmentTextStart );
    _vr_fine2_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_fine2_pal_static.bss ADDR(..vr_fine2_pal_static) + SIZEOF(..vr_fine2_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_fine2_pal_staticSegmentBssStart = .;
            build/baserom/vr_fine2_pal_static.o (.sbss)
            build/baserom/vr_fine2_pal_static.o (.scommon)
            build/baserom/vr_fine2_pal_static.o (.bss)
            build/baserom/vr_fine2_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_fine2_pal_staticSegmentBssEnd = .;
        _vr_fine2_pal_staticSegmentEnd = .;
    }
    _vr_fine2_pal_staticSegmentBssSize = ABSOLUTE( _vr_fine2_pal_staticSegmentBssEnd - _vr_fine2_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_fine3_staticSegmentRomStart = _RomSize;
    ..vr_fine3_static : AT(_RomSize)
    {
        _vr_fine3_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_fine3_staticSegmentTextStart = .;
            build/baserom/vr_fine3_static.o (.text)
        _vr_fine3_staticSegmentTextEnd = .;
    _vr_fine3_staticSegmentTextSize = ABSOLUTE( _vr_fine3_staticSegmentTextEnd - _vr_fine3_staticSegmentTextStart );
        _vr_fine3_staticSegmentDataStart = .;
            build/baserom/vr_fine3_static.o (.data)
        _vr_fine3_staticSegmentDataEnd = .;
    _vr_fine3_staticSegmentDataSize = ABSOLUTE( _vr_fine3_staticSegmentDataEnd - _vr_fine3_staticSegmentDataStart );
        _vr_fine3_staticSegmentRoDataStart = .;
            build/baserom/vr_fine3_static.o (.rodata)
        _vr_fine3_staticSegmentRoDataEnd = .;
    _vr_fine3_staticSegmentRoDataSize = ABSOLUTE( _vr_fine3_staticSegmentRoDataEnd - _vr_fine3_staticSegmentRoDataStart );
        _vr_fine3_staticSegmentSDataStart = .;
            build/baserom/vr_fine3_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_fine3_staticSegmentSDataEnd = .;
        _vr_fine3_staticSegmentOvlStart = .;
            build/baserom/vr_fine3_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_fine3_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_fine3_staticSegmentOvlEnd - _vr_fine3_staticSegmentTextStart );
    _vr_fine3_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_fine3_static.bss ADDR(..vr_fine3_static) + SIZEOF(..vr_fine3_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_fine3_staticSegmentBssStart = .;
            build/baserom/vr_fine3_static.o (.sbss)
            build/baserom/vr_fine3_static.o (.scommon)
            build/baserom/vr_fine3_static.o (.bss)
            build/baserom/vr_fine3_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_fine3_staticSegmentBssEnd = .;
        _vr_fine3_staticSegmentEnd = .;
    }
    _vr_fine3_staticSegmentBssSize = ABSOLUTE( _vr_fine3_staticSegmentBssEnd - _vr_fine3_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_fine3_pal_staticSegmentRomStart = _RomSize;
    ..vr_fine3_pal_static : AT(_RomSize)
    {
        _vr_fine3_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_fine3_pal_staticSegmentTextStart = .;
            build/baserom/vr_fine3_pal_static.o (.text)
        _vr_fine3_pal_staticSegmentTextEnd = .;
    _vr_fine3_pal_staticSegmentTextSize = ABSOLUTE( _vr_fine3_pal_staticSegmentTextEnd - _vr_fine3_pal_staticSegmentTextStart );
        _vr_fine3_pal_staticSegmentDataStart = .;
            build/baserom/vr_fine3_pal_static.o (.data)
        _vr_fine3_pal_staticSegmentDataEnd = .;
    _vr_fine3_pal_staticSegmentDataSize = ABSOLUTE( _vr_fine3_pal_staticSegmentDataEnd - _vr_fine3_pal_staticSegmentDataStart );
        _vr_fine3_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_fine3_pal_static.o (.rodata)
        _vr_fine3_pal_staticSegmentRoDataEnd = .;
    _vr_fine3_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_fine3_pal_staticSegmentRoDataEnd - _vr_fine3_pal_staticSegmentRoDataStart );
        _vr_fine3_pal_staticSegmentSDataStart = .;
            build/baserom/vr_fine3_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_fine3_pal_staticSegmentSDataEnd = .;
        _vr_fine3_pal_staticSegmentOvlStart = .;
            build/baserom/vr_fine3_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_fine3_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_fine3_pal_staticSegmentOvlEnd - _vr_fine3_pal_staticSegmentTextStart );
    _vr_fine3_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_fine3_pal_static.bss ADDR(..vr_fine3_pal_static) + SIZEOF(..vr_fine3_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_fine3_pal_staticSegmentBssStart = .;
            build/baserom/vr_fine3_pal_static.o (.sbss)
            build/baserom/vr_fine3_pal_static.o (.scommon)
            build/baserom/vr_fine3_pal_static.o (.bss)
            build/baserom/vr_fine3_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_fine3_pal_staticSegmentBssEnd = .;
        _vr_fine3_pal_staticSegmentEnd = .;
    }
    _vr_fine3_pal_staticSegmentBssSize = ABSOLUTE( _vr_fine3_pal_staticSegmentBssEnd - _vr_fine3_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_cloud0_staticSegmentRomStart = _RomSize;
    ..vr_cloud0_static : AT(_RomSize)
    {
        _vr_cloud0_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_cloud0_staticSegmentTextStart = .;
            build/baserom/vr_cloud0_static.o (.text)
        _vr_cloud0_staticSegmentTextEnd = .;
    _vr_cloud0_staticSegmentTextSize = ABSOLUTE( _vr_cloud0_staticSegmentTextEnd - _vr_cloud0_staticSegmentTextStart );
        _vr_cloud0_staticSegmentDataStart = .;
            build/baserom/vr_cloud0_static.o (.data)
        _vr_cloud0_staticSegmentDataEnd = .;
    _vr_cloud0_staticSegmentDataSize = ABSOLUTE( _vr_cloud0_staticSegmentDataEnd - _vr_cloud0_staticSegmentDataStart );
        _vr_cloud0_staticSegmentRoDataStart = .;
            build/baserom/vr_cloud0_static.o (.rodata)
        _vr_cloud0_staticSegmentRoDataEnd = .;
    _vr_cloud0_staticSegmentRoDataSize = ABSOLUTE( _vr_cloud0_staticSegmentRoDataEnd - _vr_cloud0_staticSegmentRoDataStart );
        _vr_cloud0_staticSegmentSDataStart = .;
            build/baserom/vr_cloud0_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_cloud0_staticSegmentSDataEnd = .;
        _vr_cloud0_staticSegmentOvlStart = .;
            build/baserom/vr_cloud0_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_cloud0_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_cloud0_staticSegmentOvlEnd - _vr_cloud0_staticSegmentTextStart );
    _vr_cloud0_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_cloud0_static.bss ADDR(..vr_cloud0_static) + SIZEOF(..vr_cloud0_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_cloud0_staticSegmentBssStart = .;
            build/baserom/vr_cloud0_static.o (.sbss)
            build/baserom/vr_cloud0_static.o (.scommon)
            build/baserom/vr_cloud0_static.o (.bss)
            build/baserom/vr_cloud0_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_cloud0_staticSegmentBssEnd = .;
        _vr_cloud0_staticSegmentEnd = .;
    }
    _vr_cloud0_staticSegmentBssSize = ABSOLUTE( _vr_cloud0_staticSegmentBssEnd - _vr_cloud0_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_cloud0_pal_staticSegmentRomStart = _RomSize;
    ..vr_cloud0_pal_static : AT(_RomSize)
    {
        _vr_cloud0_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_cloud0_pal_staticSegmentTextStart = .;
            build/baserom/vr_cloud0_pal_static.o (.text)
        _vr_cloud0_pal_staticSegmentTextEnd = .;
    _vr_cloud0_pal_staticSegmentTextSize = ABSOLUTE( _vr_cloud0_pal_staticSegmentTextEnd - _vr_cloud0_pal_staticSegmentTextStart );
        _vr_cloud0_pal_staticSegmentDataStart = .;
            build/baserom/vr_cloud0_pal_static.o (.data)
        _vr_cloud0_pal_staticSegmentDataEnd = .;
    _vr_cloud0_pal_staticSegmentDataSize = ABSOLUTE( _vr_cloud0_pal_staticSegmentDataEnd - _vr_cloud0_pal_staticSegmentDataStart );
        _vr_cloud0_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_cloud0_pal_static.o (.rodata)
        _vr_cloud0_pal_staticSegmentRoDataEnd = .;
    _vr_cloud0_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_cloud0_pal_staticSegmentRoDataEnd - _vr_cloud0_pal_staticSegmentRoDataStart );
        _vr_cloud0_pal_staticSegmentSDataStart = .;
            build/baserom/vr_cloud0_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_cloud0_pal_staticSegmentSDataEnd = .;
        _vr_cloud0_pal_staticSegmentOvlStart = .;
            build/baserom/vr_cloud0_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_cloud0_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_cloud0_pal_staticSegmentOvlEnd - _vr_cloud0_pal_staticSegmentTextStart );
    _vr_cloud0_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_cloud0_pal_static.bss ADDR(..vr_cloud0_pal_static) + SIZEOF(..vr_cloud0_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_cloud0_pal_staticSegmentBssStart = .;
            build/baserom/vr_cloud0_pal_static.o (.sbss)
            build/baserom/vr_cloud0_pal_static.o (.scommon)
            build/baserom/vr_cloud0_pal_static.o (.bss)
            build/baserom/vr_cloud0_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_cloud0_pal_staticSegmentBssEnd = .;
        _vr_cloud0_pal_staticSegmentEnd = .;
    }
    _vr_cloud0_pal_staticSegmentBssSize = ABSOLUTE( _vr_cloud0_pal_staticSegmentBssEnd - _vr_cloud0_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_cloud1_staticSegmentRomStart = _RomSize;
    ..vr_cloud1_static : AT(_RomSize)
    {
        _vr_cloud1_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_cloud1_staticSegmentTextStart = .;
            build/baserom/vr_cloud1_static.o (.text)
        _vr_cloud1_staticSegmentTextEnd = .;
    _vr_cloud1_staticSegmentTextSize = ABSOLUTE( _vr_cloud1_staticSegmentTextEnd - _vr_cloud1_staticSegmentTextStart );
        _vr_cloud1_staticSegmentDataStart = .;
            build/baserom/vr_cloud1_static.o (.data)
        _vr_cloud1_staticSegmentDataEnd = .;
    _vr_cloud1_staticSegmentDataSize = ABSOLUTE( _vr_cloud1_staticSegmentDataEnd - _vr_cloud1_staticSegmentDataStart );
        _vr_cloud1_staticSegmentRoDataStart = .;
            build/baserom/vr_cloud1_static.o (.rodata)
        _vr_cloud1_staticSegmentRoDataEnd = .;
    _vr_cloud1_staticSegmentRoDataSize = ABSOLUTE( _vr_cloud1_staticSegmentRoDataEnd - _vr_cloud1_staticSegmentRoDataStart );
        _vr_cloud1_staticSegmentSDataStart = .;
            build/baserom/vr_cloud1_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_cloud1_staticSegmentSDataEnd = .;
        _vr_cloud1_staticSegmentOvlStart = .;
            build/baserom/vr_cloud1_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_cloud1_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_cloud1_staticSegmentOvlEnd - _vr_cloud1_staticSegmentTextStart );
    _vr_cloud1_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_cloud1_static.bss ADDR(..vr_cloud1_static) + SIZEOF(..vr_cloud1_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_cloud1_staticSegmentBssStart = .;
            build/baserom/vr_cloud1_static.o (.sbss)
            build/baserom/vr_cloud1_static.o (.scommon)
            build/baserom/vr_cloud1_static.o (.bss)
            build/baserom/vr_cloud1_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_cloud1_staticSegmentBssEnd = .;
        _vr_cloud1_staticSegmentEnd = .;
    }
    _vr_cloud1_staticSegmentBssSize = ABSOLUTE( _vr_cloud1_staticSegmentBssEnd - _vr_cloud1_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_cloud1_pal_staticSegmentRomStart = _RomSize;
    ..vr_cloud1_pal_static : AT(_RomSize)
    {
        _vr_cloud1_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_cloud1_pal_staticSegmentTextStart = .;
            build/baserom/vr_cloud1_pal_static.o (.text)
        _vr_cloud1_pal_staticSegmentTextEnd = .;
    _vr_cloud1_pal_staticSegmentTextSize = ABSOLUTE( _vr_cloud1_pal_staticSegmentTextEnd - _vr_cloud1_pal_staticSegmentTextStart );
        _vr_cloud1_pal_staticSegmentDataStart = .;
            build/baserom/vr_cloud1_pal_static.o (.data)
        _vr_cloud1_pal_staticSegmentDataEnd = .;
    _vr_cloud1_pal_staticSegmentDataSize = ABSOLUTE( _vr_cloud1_pal_staticSegmentDataEnd - _vr_cloud1_pal_staticSegmentDataStart );
        _vr_cloud1_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_cloud1_pal_static.o (.rodata)
        _vr_cloud1_pal_staticSegmentRoDataEnd = .;
    _vr_cloud1_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_cloud1_pal_staticSegmentRoDataEnd - _vr_cloud1_pal_staticSegmentRoDataStart );
        _vr_cloud1_pal_staticSegmentSDataStart = .;
            build/baserom/vr_cloud1_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_cloud1_pal_staticSegmentSDataEnd = .;
        _vr_cloud1_pal_staticSegmentOvlStart = .;
            build/baserom/vr_cloud1_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_cloud1_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_cloud1_pal_staticSegmentOvlEnd - _vr_cloud1_pal_staticSegmentTextStart );
    _vr_cloud1_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_cloud1_pal_static.bss ADDR(..vr_cloud1_pal_static) + SIZEOF(..vr_cloud1_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_cloud1_pal_staticSegmentBssStart = .;
            build/baserom/vr_cloud1_pal_static.o (.sbss)
            build/baserom/vr_cloud1_pal_static.o (.scommon)
            build/baserom/vr_cloud1_pal_static.o (.bss)
            build/baserom/vr_cloud1_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_cloud1_pal_staticSegmentBssEnd = .;
        _vr_cloud1_pal_staticSegmentEnd = .;
    }
    _vr_cloud1_pal_staticSegmentBssSize = ABSOLUTE( _vr_cloud1_pal_staticSegmentBssEnd - _vr_cloud1_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_cloud2_staticSegmentRomStart = _RomSize;
    ..vr_cloud2_static : AT(_RomSize)
    {
        _vr_cloud2_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_cloud2_staticSegmentTextStart = .;
            build/baserom/vr_cloud2_static.o (.text)
        _vr_cloud2_staticSegmentTextEnd = .;
    _vr_cloud2_staticSegmentTextSize = ABSOLUTE( _vr_cloud2_staticSegmentTextEnd - _vr_cloud2_staticSegmentTextStart );
        _vr_cloud2_staticSegmentDataStart = .;
            build/baserom/vr_cloud2_static.o (.data)
        _vr_cloud2_staticSegmentDataEnd = .;
    _vr_cloud2_staticSegmentDataSize = ABSOLUTE( _vr_cloud2_staticSegmentDataEnd - _vr_cloud2_staticSegmentDataStart );
        _vr_cloud2_staticSegmentRoDataStart = .;
            build/baserom/vr_cloud2_static.o (.rodata)
        _vr_cloud2_staticSegmentRoDataEnd = .;
    _vr_cloud2_staticSegmentRoDataSize = ABSOLUTE( _vr_cloud2_staticSegmentRoDataEnd - _vr_cloud2_staticSegmentRoDataStart );
        _vr_cloud2_staticSegmentSDataStart = .;
            build/baserom/vr_cloud2_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_cloud2_staticSegmentSDataEnd = .;
        _vr_cloud2_staticSegmentOvlStart = .;
            build/baserom/vr_cloud2_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_cloud2_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_cloud2_staticSegmentOvlEnd - _vr_cloud2_staticSegmentTextStart );
    _vr_cloud2_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_cloud2_static.bss ADDR(..vr_cloud2_static) + SIZEOF(..vr_cloud2_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_cloud2_staticSegmentBssStart = .;
            build/baserom/vr_cloud2_static.o (.sbss)
            build/baserom/vr_cloud2_static.o (.scommon)
            build/baserom/vr_cloud2_static.o (.bss)
            build/baserom/vr_cloud2_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_cloud2_staticSegmentBssEnd = .;
        _vr_cloud2_staticSegmentEnd = .;
    }
    _vr_cloud2_staticSegmentBssSize = ABSOLUTE( _vr_cloud2_staticSegmentBssEnd - _vr_cloud2_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_cloud2_pal_staticSegmentRomStart = _RomSize;
    ..vr_cloud2_pal_static : AT(_RomSize)
    {
        _vr_cloud2_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_cloud2_pal_staticSegmentTextStart = .;
            build/baserom/vr_cloud2_pal_static.o (.text)
        _vr_cloud2_pal_staticSegmentTextEnd = .;
    _vr_cloud2_pal_staticSegmentTextSize = ABSOLUTE( _vr_cloud2_pal_staticSegmentTextEnd - _vr_cloud2_pal_staticSegmentTextStart );
        _vr_cloud2_pal_staticSegmentDataStart = .;
            build/baserom/vr_cloud2_pal_static.o (.data)
        _vr_cloud2_pal_staticSegmentDataEnd = .;
    _vr_cloud2_pal_staticSegmentDataSize = ABSOLUTE( _vr_cloud2_pal_staticSegmentDataEnd - _vr_cloud2_pal_staticSegmentDataStart );
        _vr_cloud2_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_cloud2_pal_static.o (.rodata)
        _vr_cloud2_pal_staticSegmentRoDataEnd = .;
    _vr_cloud2_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_cloud2_pal_staticSegmentRoDataEnd - _vr_cloud2_pal_staticSegmentRoDataStart );
        _vr_cloud2_pal_staticSegmentSDataStart = .;
            build/baserom/vr_cloud2_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_cloud2_pal_staticSegmentSDataEnd = .;
        _vr_cloud2_pal_staticSegmentOvlStart = .;
            build/baserom/vr_cloud2_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_cloud2_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_cloud2_pal_staticSegmentOvlEnd - _vr_cloud2_pal_staticSegmentTextStart );
    _vr_cloud2_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_cloud2_pal_static.bss ADDR(..vr_cloud2_pal_static) + SIZEOF(..vr_cloud2_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_cloud2_pal_staticSegmentBssStart = .;
            build/baserom/vr_cloud2_pal_static.o (.sbss)
            build/baserom/vr_cloud2_pal_static.o (.scommon)
            build/baserom/vr_cloud2_pal_static.o (.bss)
            build/baserom/vr_cloud2_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_cloud2_pal_staticSegmentBssEnd = .;
        _vr_cloud2_pal_staticSegmentEnd = .;
    }
    _vr_cloud2_pal_staticSegmentBssSize = ABSOLUTE( _vr_cloud2_pal_staticSegmentBssEnd - _vr_cloud2_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_cloud3_staticSegmentRomStart = _RomSize;
    ..vr_cloud3_static : AT(_RomSize)
    {
        _vr_cloud3_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_cloud3_staticSegmentTextStart = .;
            build/baserom/vr_cloud3_static.o (.text)
        _vr_cloud3_staticSegmentTextEnd = .;
    _vr_cloud3_staticSegmentTextSize = ABSOLUTE( _vr_cloud3_staticSegmentTextEnd - _vr_cloud3_staticSegmentTextStart );
        _vr_cloud3_staticSegmentDataStart = .;
            build/baserom/vr_cloud3_static.o (.data)
        _vr_cloud3_staticSegmentDataEnd = .;
    _vr_cloud3_staticSegmentDataSize = ABSOLUTE( _vr_cloud3_staticSegmentDataEnd - _vr_cloud3_staticSegmentDataStart );
        _vr_cloud3_staticSegmentRoDataStart = .;
            build/baserom/vr_cloud3_static.o (.rodata)
        _vr_cloud3_staticSegmentRoDataEnd = .;
    _vr_cloud3_staticSegmentRoDataSize = ABSOLUTE( _vr_cloud3_staticSegmentRoDataEnd - _vr_cloud3_staticSegmentRoDataStart );
        _vr_cloud3_staticSegmentSDataStart = .;
            build/baserom/vr_cloud3_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_cloud3_staticSegmentSDataEnd = .;
        _vr_cloud3_staticSegmentOvlStart = .;
            build/baserom/vr_cloud3_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_cloud3_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_cloud3_staticSegmentOvlEnd - _vr_cloud3_staticSegmentTextStart );
    _vr_cloud3_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_cloud3_static.bss ADDR(..vr_cloud3_static) + SIZEOF(..vr_cloud3_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_cloud3_staticSegmentBssStart = .;
            build/baserom/vr_cloud3_static.o (.sbss)
            build/baserom/vr_cloud3_static.o (.scommon)
            build/baserom/vr_cloud3_static.o (.bss)
            build/baserom/vr_cloud3_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_cloud3_staticSegmentBssEnd = .;
        _vr_cloud3_staticSegmentEnd = .;
    }
    _vr_cloud3_staticSegmentBssSize = ABSOLUTE( _vr_cloud3_staticSegmentBssEnd - _vr_cloud3_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_cloud3_pal_staticSegmentRomStart = _RomSize;
    ..vr_cloud3_pal_static : AT(_RomSize)
    {
        _vr_cloud3_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_cloud3_pal_staticSegmentTextStart = .;
            build/baserom/vr_cloud3_pal_static.o (.text)
        _vr_cloud3_pal_staticSegmentTextEnd = .;
    _vr_cloud3_pal_staticSegmentTextSize = ABSOLUTE( _vr_cloud3_pal_staticSegmentTextEnd - _vr_cloud3_pal_staticSegmentTextStart );
        _vr_cloud3_pal_staticSegmentDataStart = .;
            build/baserom/vr_cloud3_pal_static.o (.data)
        _vr_cloud3_pal_staticSegmentDataEnd = .;
    _vr_cloud3_pal_staticSegmentDataSize = ABSOLUTE( _vr_cloud3_pal_staticSegmentDataEnd - _vr_cloud3_pal_staticSegmentDataStart );
        _vr_cloud3_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_cloud3_pal_static.o (.rodata)
        _vr_cloud3_pal_staticSegmentRoDataEnd = .;
    _vr_cloud3_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_cloud3_pal_staticSegmentRoDataEnd - _vr_cloud3_pal_staticSegmentRoDataStart );
        _vr_cloud3_pal_staticSegmentSDataStart = .;
            build/baserom/vr_cloud3_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_cloud3_pal_staticSegmentSDataEnd = .;
        _vr_cloud3_pal_staticSegmentOvlStart = .;
            build/baserom/vr_cloud3_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_cloud3_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_cloud3_pal_staticSegmentOvlEnd - _vr_cloud3_pal_staticSegmentTextStart );
    _vr_cloud3_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_cloud3_pal_static.bss ADDR(..vr_cloud3_pal_static) + SIZEOF(..vr_cloud3_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_cloud3_pal_staticSegmentBssStart = .;
            build/baserom/vr_cloud3_pal_static.o (.sbss)
            build/baserom/vr_cloud3_pal_static.o (.scommon)
            build/baserom/vr_cloud3_pal_static.o (.bss)
            build/baserom/vr_cloud3_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_cloud3_pal_staticSegmentBssEnd = .;
        _vr_cloud3_pal_staticSegmentEnd = .;
    }
    _vr_cloud3_pal_staticSegmentBssSize = ABSOLUTE( _vr_cloud3_pal_staticSegmentBssEnd - _vr_cloud3_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_holy0_staticSegmentRomStart = _RomSize;
    ..vr_holy0_static : AT(_RomSize)
    {
        _vr_holy0_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_holy0_staticSegmentTextStart = .;
            build/baserom/vr_holy0_static.o (.text)
        _vr_holy0_staticSegmentTextEnd = .;
    _vr_holy0_staticSegmentTextSize = ABSOLUTE( _vr_holy0_staticSegmentTextEnd - _vr_holy0_staticSegmentTextStart );
        _vr_holy0_staticSegmentDataStart = .;
            build/baserom/vr_holy0_static.o (.data)
        _vr_holy0_staticSegmentDataEnd = .;
    _vr_holy0_staticSegmentDataSize = ABSOLUTE( _vr_holy0_staticSegmentDataEnd - _vr_holy0_staticSegmentDataStart );
        _vr_holy0_staticSegmentRoDataStart = .;
            build/baserom/vr_holy0_static.o (.rodata)
        _vr_holy0_staticSegmentRoDataEnd = .;
    _vr_holy0_staticSegmentRoDataSize = ABSOLUTE( _vr_holy0_staticSegmentRoDataEnd - _vr_holy0_staticSegmentRoDataStart );
        _vr_holy0_staticSegmentSDataStart = .;
            build/baserom/vr_holy0_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_holy0_staticSegmentSDataEnd = .;
        _vr_holy0_staticSegmentOvlStart = .;
            build/baserom/vr_holy0_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_holy0_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_holy0_staticSegmentOvlEnd - _vr_holy0_staticSegmentTextStart );
    _vr_holy0_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_holy0_static.bss ADDR(..vr_holy0_static) + SIZEOF(..vr_holy0_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_holy0_staticSegmentBssStart = .;
            build/baserom/vr_holy0_static.o (.sbss)
            build/baserom/vr_holy0_static.o (.scommon)
            build/baserom/vr_holy0_static.o (.bss)
            build/baserom/vr_holy0_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_holy0_staticSegmentBssEnd = .;
        _vr_holy0_staticSegmentEnd = .;
    }
    _vr_holy0_staticSegmentBssSize = ABSOLUTE( _vr_holy0_staticSegmentBssEnd - _vr_holy0_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_holy0_pal_staticSegmentRomStart = _RomSize;
    ..vr_holy0_pal_static : AT(_RomSize)
    {
        _vr_holy0_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_holy0_pal_staticSegmentTextStart = .;
            build/baserom/vr_holy0_pal_static.o (.text)
        _vr_holy0_pal_staticSegmentTextEnd = .;
    _vr_holy0_pal_staticSegmentTextSize = ABSOLUTE( _vr_holy0_pal_staticSegmentTextEnd - _vr_holy0_pal_staticSegmentTextStart );
        _vr_holy0_pal_staticSegmentDataStart = .;
            build/baserom/vr_holy0_pal_static.o (.data)
        _vr_holy0_pal_staticSegmentDataEnd = .;
    _vr_holy0_pal_staticSegmentDataSize = ABSOLUTE( _vr_holy0_pal_staticSegmentDataEnd - _vr_holy0_pal_staticSegmentDataStart );
        _vr_holy0_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_holy0_pal_static.o (.rodata)
        _vr_holy0_pal_staticSegmentRoDataEnd = .;
    _vr_holy0_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_holy0_pal_staticSegmentRoDataEnd - _vr_holy0_pal_staticSegmentRoDataStart );
        _vr_holy0_pal_staticSegmentSDataStart = .;
            build/baserom/vr_holy0_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_holy0_pal_staticSegmentSDataEnd = .;
        _vr_holy0_pal_staticSegmentOvlStart = .;
            build/baserom/vr_holy0_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_holy0_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_holy0_pal_staticSegmentOvlEnd - _vr_holy0_pal_staticSegmentTextStart );
    _vr_holy0_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_holy0_pal_static.bss ADDR(..vr_holy0_pal_static) + SIZEOF(..vr_holy0_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_holy0_pal_staticSegmentBssStart = .;
            build/baserom/vr_holy0_pal_static.o (.sbss)
            build/baserom/vr_holy0_pal_static.o (.scommon)
            build/baserom/vr_holy0_pal_static.o (.bss)
            build/baserom/vr_holy0_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_holy0_pal_staticSegmentBssEnd = .;
        _vr_holy0_pal_staticSegmentEnd = .;
    }
    _vr_holy0_pal_staticSegmentBssSize = ABSOLUTE( _vr_holy0_pal_staticSegmentBssEnd - _vr_holy0_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_holy1_staticSegmentRomStart = _RomSize;
    ..vr_holy1_static : AT(_RomSize)
    {
        _vr_holy1_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_holy1_staticSegmentTextStart = .;
            build/baserom/vr_holy1_static.o (.text)
        _vr_holy1_staticSegmentTextEnd = .;
    _vr_holy1_staticSegmentTextSize = ABSOLUTE( _vr_holy1_staticSegmentTextEnd - _vr_holy1_staticSegmentTextStart );
        _vr_holy1_staticSegmentDataStart = .;
            build/baserom/vr_holy1_static.o (.data)
        _vr_holy1_staticSegmentDataEnd = .;
    _vr_holy1_staticSegmentDataSize = ABSOLUTE( _vr_holy1_staticSegmentDataEnd - _vr_holy1_staticSegmentDataStart );
        _vr_holy1_staticSegmentRoDataStart = .;
            build/baserom/vr_holy1_static.o (.rodata)
        _vr_holy1_staticSegmentRoDataEnd = .;
    _vr_holy1_staticSegmentRoDataSize = ABSOLUTE( _vr_holy1_staticSegmentRoDataEnd - _vr_holy1_staticSegmentRoDataStart );
        _vr_holy1_staticSegmentSDataStart = .;
            build/baserom/vr_holy1_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_holy1_staticSegmentSDataEnd = .;
        _vr_holy1_staticSegmentOvlStart = .;
            build/baserom/vr_holy1_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_holy1_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_holy1_staticSegmentOvlEnd - _vr_holy1_staticSegmentTextStart );
    _vr_holy1_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_holy1_static.bss ADDR(..vr_holy1_static) + SIZEOF(..vr_holy1_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_holy1_staticSegmentBssStart = .;
            build/baserom/vr_holy1_static.o (.sbss)
            build/baserom/vr_holy1_static.o (.scommon)
            build/baserom/vr_holy1_static.o (.bss)
            build/baserom/vr_holy1_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_holy1_staticSegmentBssEnd = .;
        _vr_holy1_staticSegmentEnd = .;
    }
    _vr_holy1_staticSegmentBssSize = ABSOLUTE( _vr_holy1_staticSegmentBssEnd - _vr_holy1_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_holy1_pal_staticSegmentRomStart = _RomSize;
    ..vr_holy1_pal_static : AT(_RomSize)
    {
        _vr_holy1_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_holy1_pal_staticSegmentTextStart = .;
            build/baserom/vr_holy1_pal_static.o (.text)
        _vr_holy1_pal_staticSegmentTextEnd = .;
    _vr_holy1_pal_staticSegmentTextSize = ABSOLUTE( _vr_holy1_pal_staticSegmentTextEnd - _vr_holy1_pal_staticSegmentTextStart );
        _vr_holy1_pal_staticSegmentDataStart = .;
            build/baserom/vr_holy1_pal_static.o (.data)
        _vr_holy1_pal_staticSegmentDataEnd = .;
    _vr_holy1_pal_staticSegmentDataSize = ABSOLUTE( _vr_holy1_pal_staticSegmentDataEnd - _vr_holy1_pal_staticSegmentDataStart );
        _vr_holy1_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_holy1_pal_static.o (.rodata)
        _vr_holy1_pal_staticSegmentRoDataEnd = .;
    _vr_holy1_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_holy1_pal_staticSegmentRoDataEnd - _vr_holy1_pal_staticSegmentRoDataStart );
        _vr_holy1_pal_staticSegmentSDataStart = .;
            build/baserom/vr_holy1_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_holy1_pal_staticSegmentSDataEnd = .;
        _vr_holy1_pal_staticSegmentOvlStart = .;
            build/baserom/vr_holy1_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_holy1_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_holy1_pal_staticSegmentOvlEnd - _vr_holy1_pal_staticSegmentTextStart );
    _vr_holy1_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_holy1_pal_static.bss ADDR(..vr_holy1_pal_static) + SIZEOF(..vr_holy1_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_holy1_pal_staticSegmentBssStart = .;
            build/baserom/vr_holy1_pal_static.o (.sbss)
            build/baserom/vr_holy1_pal_static.o (.scommon)
            build/baserom/vr_holy1_pal_static.o (.bss)
            build/baserom/vr_holy1_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_holy1_pal_staticSegmentBssEnd = .;
        _vr_holy1_pal_staticSegmentEnd = .;
    }
    _vr_holy1_pal_staticSegmentBssSize = ABSOLUTE( _vr_holy1_pal_staticSegmentBssEnd - _vr_holy1_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_MDVR_staticSegmentRomStart = _RomSize;
    ..vr_MDVR_static : AT(_RomSize)
    {
        _vr_MDVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_MDVR_staticSegmentTextStart = .;
            build/baserom/vr_MDVR_static.o (.text)
        _vr_MDVR_staticSegmentTextEnd = .;
    _vr_MDVR_staticSegmentTextSize = ABSOLUTE( _vr_MDVR_staticSegmentTextEnd - _vr_MDVR_staticSegmentTextStart );
        _vr_MDVR_staticSegmentDataStart = .;
            build/baserom/vr_MDVR_static.o (.data)
        _vr_MDVR_staticSegmentDataEnd = .;
    _vr_MDVR_staticSegmentDataSize = ABSOLUTE( _vr_MDVR_staticSegmentDataEnd - _vr_MDVR_staticSegmentDataStart );
        _vr_MDVR_staticSegmentRoDataStart = .;
            build/baserom/vr_MDVR_static.o (.rodata)
        _vr_MDVR_staticSegmentRoDataEnd = .;
    _vr_MDVR_staticSegmentRoDataSize = ABSOLUTE( _vr_MDVR_staticSegmentRoDataEnd - _vr_MDVR_staticSegmentRoDataStart );
        _vr_MDVR_staticSegmentSDataStart = .;
            build/baserom/vr_MDVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_MDVR_staticSegmentSDataEnd = .;
        _vr_MDVR_staticSegmentOvlStart = .;
            build/baserom/vr_MDVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_MDVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_MDVR_staticSegmentOvlEnd - _vr_MDVR_staticSegmentTextStart );
    _vr_MDVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_MDVR_static.bss ADDR(..vr_MDVR_static) + SIZEOF(..vr_MDVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_MDVR_staticSegmentBssStart = .;
            build/baserom/vr_MDVR_static.o (.sbss)
            build/baserom/vr_MDVR_static.o (.scommon)
            build/baserom/vr_MDVR_static.o (.bss)
            build/baserom/vr_MDVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_MDVR_staticSegmentBssEnd = .;
        _vr_MDVR_staticSegmentEnd = .;
    }
    _vr_MDVR_staticSegmentBssSize = ABSOLUTE( _vr_MDVR_staticSegmentBssEnd - _vr_MDVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_MDVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_MDVR_pal_static : AT(_RomSize)
    {
        _vr_MDVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_MDVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_MDVR_pal_static.o (.text)
        _vr_MDVR_pal_staticSegmentTextEnd = .;
    _vr_MDVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_MDVR_pal_staticSegmentTextEnd - _vr_MDVR_pal_staticSegmentTextStart );
        _vr_MDVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_MDVR_pal_static.o (.data)
        _vr_MDVR_pal_staticSegmentDataEnd = .;
    _vr_MDVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_MDVR_pal_staticSegmentDataEnd - _vr_MDVR_pal_staticSegmentDataStart );
        _vr_MDVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_MDVR_pal_static.o (.rodata)
        _vr_MDVR_pal_staticSegmentRoDataEnd = .;
    _vr_MDVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_MDVR_pal_staticSegmentRoDataEnd - _vr_MDVR_pal_staticSegmentRoDataStart );
        _vr_MDVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_MDVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_MDVR_pal_staticSegmentSDataEnd = .;
        _vr_MDVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_MDVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_MDVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_MDVR_pal_staticSegmentOvlEnd - _vr_MDVR_pal_staticSegmentTextStart );
    _vr_MDVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_MDVR_pal_static.bss ADDR(..vr_MDVR_pal_static) + SIZEOF(..vr_MDVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_MDVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_MDVR_pal_static.o (.sbss)
            build/baserom/vr_MDVR_pal_static.o (.scommon)
            build/baserom/vr_MDVR_pal_static.o (.bss)
            build/baserom/vr_MDVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_MDVR_pal_staticSegmentBssEnd = .;
        _vr_MDVR_pal_staticSegmentEnd = .;
    }
    _vr_MDVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_MDVR_pal_staticSegmentBssEnd - _vr_MDVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_MNVR_staticSegmentRomStart = _RomSize;
    ..vr_MNVR_static : AT(_RomSize)
    {
        _vr_MNVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_MNVR_staticSegmentTextStart = .;
            build/baserom/vr_MNVR_static.o (.text)
        _vr_MNVR_staticSegmentTextEnd = .;
    _vr_MNVR_staticSegmentTextSize = ABSOLUTE( _vr_MNVR_staticSegmentTextEnd - _vr_MNVR_staticSegmentTextStart );
        _vr_MNVR_staticSegmentDataStart = .;
            build/baserom/vr_MNVR_static.o (.data)
        _vr_MNVR_staticSegmentDataEnd = .;
    _vr_MNVR_staticSegmentDataSize = ABSOLUTE( _vr_MNVR_staticSegmentDataEnd - _vr_MNVR_staticSegmentDataStart );
        _vr_MNVR_staticSegmentRoDataStart = .;
            build/baserom/vr_MNVR_static.o (.rodata)
        _vr_MNVR_staticSegmentRoDataEnd = .;
    _vr_MNVR_staticSegmentRoDataSize = ABSOLUTE( _vr_MNVR_staticSegmentRoDataEnd - _vr_MNVR_staticSegmentRoDataStart );
        _vr_MNVR_staticSegmentSDataStart = .;
            build/baserom/vr_MNVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_MNVR_staticSegmentSDataEnd = .;
        _vr_MNVR_staticSegmentOvlStart = .;
            build/baserom/vr_MNVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_MNVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_MNVR_staticSegmentOvlEnd - _vr_MNVR_staticSegmentTextStart );
    _vr_MNVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_MNVR_static.bss ADDR(..vr_MNVR_static) + SIZEOF(..vr_MNVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_MNVR_staticSegmentBssStart = .;
            build/baserom/vr_MNVR_static.o (.sbss)
            build/baserom/vr_MNVR_static.o (.scommon)
            build/baserom/vr_MNVR_static.o (.bss)
            build/baserom/vr_MNVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_MNVR_staticSegmentBssEnd = .;
        _vr_MNVR_staticSegmentEnd = .;
    }
    _vr_MNVR_staticSegmentBssSize = ABSOLUTE( _vr_MNVR_staticSegmentBssEnd - _vr_MNVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_MNVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_MNVR_pal_static : AT(_RomSize)
    {
        _vr_MNVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_MNVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_MNVR_pal_static.o (.text)
        _vr_MNVR_pal_staticSegmentTextEnd = .;
    _vr_MNVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_MNVR_pal_staticSegmentTextEnd - _vr_MNVR_pal_staticSegmentTextStart );
        _vr_MNVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_MNVR_pal_static.o (.data)
        _vr_MNVR_pal_staticSegmentDataEnd = .;
    _vr_MNVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_MNVR_pal_staticSegmentDataEnd - _vr_MNVR_pal_staticSegmentDataStart );
        _vr_MNVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_MNVR_pal_static.o (.rodata)
        _vr_MNVR_pal_staticSegmentRoDataEnd = .;
    _vr_MNVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_MNVR_pal_staticSegmentRoDataEnd - _vr_MNVR_pal_staticSegmentRoDataStart );
        _vr_MNVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_MNVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_MNVR_pal_staticSegmentSDataEnd = .;
        _vr_MNVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_MNVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_MNVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_MNVR_pal_staticSegmentOvlEnd - _vr_MNVR_pal_staticSegmentTextStart );
    _vr_MNVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_MNVR_pal_static.bss ADDR(..vr_MNVR_pal_static) + SIZEOF(..vr_MNVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_MNVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_MNVR_pal_static.o (.sbss)
            build/baserom/vr_MNVR_pal_static.o (.scommon)
            build/baserom/vr_MNVR_pal_static.o (.bss)
            build/baserom/vr_MNVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_MNVR_pal_staticSegmentBssEnd = .;
        _vr_MNVR_pal_staticSegmentEnd = .;
    }
    _vr_MNVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_MNVR_pal_staticSegmentBssEnd - _vr_MNVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_RUVR_staticSegmentRomStart = _RomSize;
    ..vr_RUVR_static : AT(_RomSize)
    {
        _vr_RUVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_RUVR_staticSegmentTextStart = .;
            build/baserom/vr_RUVR_static.o (.text)
        _vr_RUVR_staticSegmentTextEnd = .;
    _vr_RUVR_staticSegmentTextSize = ABSOLUTE( _vr_RUVR_staticSegmentTextEnd - _vr_RUVR_staticSegmentTextStart );
        _vr_RUVR_staticSegmentDataStart = .;
            build/baserom/vr_RUVR_static.o (.data)
        _vr_RUVR_staticSegmentDataEnd = .;
    _vr_RUVR_staticSegmentDataSize = ABSOLUTE( _vr_RUVR_staticSegmentDataEnd - _vr_RUVR_staticSegmentDataStart );
        _vr_RUVR_staticSegmentRoDataStart = .;
            build/baserom/vr_RUVR_static.o (.rodata)
        _vr_RUVR_staticSegmentRoDataEnd = .;
    _vr_RUVR_staticSegmentRoDataSize = ABSOLUTE( _vr_RUVR_staticSegmentRoDataEnd - _vr_RUVR_staticSegmentRoDataStart );
        _vr_RUVR_staticSegmentSDataStart = .;
            build/baserom/vr_RUVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_RUVR_staticSegmentSDataEnd = .;
        _vr_RUVR_staticSegmentOvlStart = .;
            build/baserom/vr_RUVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_RUVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_RUVR_staticSegmentOvlEnd - _vr_RUVR_staticSegmentTextStart );
    _vr_RUVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_RUVR_static.bss ADDR(..vr_RUVR_static) + SIZEOF(..vr_RUVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_RUVR_staticSegmentBssStart = .;
            build/baserom/vr_RUVR_static.o (.sbss)
            build/baserom/vr_RUVR_static.o (.scommon)
            build/baserom/vr_RUVR_static.o (.bss)
            build/baserom/vr_RUVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_RUVR_staticSegmentBssEnd = .;
        _vr_RUVR_staticSegmentEnd = .;
    }
    _vr_RUVR_staticSegmentBssSize = ABSOLUTE( _vr_RUVR_staticSegmentBssEnd - _vr_RUVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_RUVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_RUVR_pal_static : AT(_RomSize)
    {
        _vr_RUVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_RUVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_RUVR_pal_static.o (.text)
        _vr_RUVR_pal_staticSegmentTextEnd = .;
    _vr_RUVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_RUVR_pal_staticSegmentTextEnd - _vr_RUVR_pal_staticSegmentTextStart );
        _vr_RUVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_RUVR_pal_static.o (.data)
        _vr_RUVR_pal_staticSegmentDataEnd = .;
    _vr_RUVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_RUVR_pal_staticSegmentDataEnd - _vr_RUVR_pal_staticSegmentDataStart );
        _vr_RUVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_RUVR_pal_static.o (.rodata)
        _vr_RUVR_pal_staticSegmentRoDataEnd = .;
    _vr_RUVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_RUVR_pal_staticSegmentRoDataEnd - _vr_RUVR_pal_staticSegmentRoDataStart );
        _vr_RUVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_RUVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_RUVR_pal_staticSegmentSDataEnd = .;
        _vr_RUVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_RUVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_RUVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_RUVR_pal_staticSegmentOvlEnd - _vr_RUVR_pal_staticSegmentTextStart );
    _vr_RUVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_RUVR_pal_static.bss ADDR(..vr_RUVR_pal_static) + SIZEOF(..vr_RUVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_RUVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_RUVR_pal_static.o (.sbss)
            build/baserom/vr_RUVR_pal_static.o (.scommon)
            build/baserom/vr_RUVR_pal_static.o (.bss)
            build/baserom/vr_RUVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_RUVR_pal_staticSegmentBssEnd = .;
        _vr_RUVR_pal_staticSegmentEnd = .;
    }
    _vr_RUVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_RUVR_pal_staticSegmentBssEnd - _vr_RUVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_LHVR_staticSegmentRomStart = _RomSize;
    ..vr_LHVR_static : AT(_RomSize)
    {
        _vr_LHVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_LHVR_staticSegmentTextStart = .;
            build/baserom/vr_LHVR_static.o (.text)
        _vr_LHVR_staticSegmentTextEnd = .;
    _vr_LHVR_staticSegmentTextSize = ABSOLUTE( _vr_LHVR_staticSegmentTextEnd - _vr_LHVR_staticSegmentTextStart );
        _vr_LHVR_staticSegmentDataStart = .;
            build/baserom/vr_LHVR_static.o (.data)
        _vr_LHVR_staticSegmentDataEnd = .;
    _vr_LHVR_staticSegmentDataSize = ABSOLUTE( _vr_LHVR_staticSegmentDataEnd - _vr_LHVR_staticSegmentDataStart );
        _vr_LHVR_staticSegmentRoDataStart = .;
            build/baserom/vr_LHVR_static.o (.rodata)
        _vr_LHVR_staticSegmentRoDataEnd = .;
    _vr_LHVR_staticSegmentRoDataSize = ABSOLUTE( _vr_LHVR_staticSegmentRoDataEnd - _vr_LHVR_staticSegmentRoDataStart );
        _vr_LHVR_staticSegmentSDataStart = .;
            build/baserom/vr_LHVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_LHVR_staticSegmentSDataEnd = .;
        _vr_LHVR_staticSegmentOvlStart = .;
            build/baserom/vr_LHVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_LHVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_LHVR_staticSegmentOvlEnd - _vr_LHVR_staticSegmentTextStart );
    _vr_LHVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_LHVR_static.bss ADDR(..vr_LHVR_static) + SIZEOF(..vr_LHVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_LHVR_staticSegmentBssStart = .;
            build/baserom/vr_LHVR_static.o (.sbss)
            build/baserom/vr_LHVR_static.o (.scommon)
            build/baserom/vr_LHVR_static.o (.bss)
            build/baserom/vr_LHVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_LHVR_staticSegmentBssEnd = .;
        _vr_LHVR_staticSegmentEnd = .;
    }
    _vr_LHVR_staticSegmentBssSize = ABSOLUTE( _vr_LHVR_staticSegmentBssEnd - _vr_LHVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_LHVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_LHVR_pal_static : AT(_RomSize)
    {
        _vr_LHVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_LHVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_LHVR_pal_static.o (.text)
        _vr_LHVR_pal_staticSegmentTextEnd = .;
    _vr_LHVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_LHVR_pal_staticSegmentTextEnd - _vr_LHVR_pal_staticSegmentTextStart );
        _vr_LHVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_LHVR_pal_static.o (.data)
        _vr_LHVR_pal_staticSegmentDataEnd = .;
    _vr_LHVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_LHVR_pal_staticSegmentDataEnd - _vr_LHVR_pal_staticSegmentDataStart );
        _vr_LHVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_LHVR_pal_static.o (.rodata)
        _vr_LHVR_pal_staticSegmentRoDataEnd = .;
    _vr_LHVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_LHVR_pal_staticSegmentRoDataEnd - _vr_LHVR_pal_staticSegmentRoDataStart );
        _vr_LHVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_LHVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_LHVR_pal_staticSegmentSDataEnd = .;
        _vr_LHVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_LHVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_LHVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_LHVR_pal_staticSegmentOvlEnd - _vr_LHVR_pal_staticSegmentTextStart );
    _vr_LHVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_LHVR_pal_static.bss ADDR(..vr_LHVR_pal_static) + SIZEOF(..vr_LHVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_LHVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_LHVR_pal_static.o (.sbss)
            build/baserom/vr_LHVR_pal_static.o (.scommon)
            build/baserom/vr_LHVR_pal_static.o (.bss)
            build/baserom/vr_LHVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_LHVR_pal_staticSegmentBssEnd = .;
        _vr_LHVR_pal_staticSegmentEnd = .;
    }
    _vr_LHVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_LHVR_pal_staticSegmentBssEnd - _vr_LHVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_KHVR_staticSegmentRomStart = _RomSize;
    ..vr_KHVR_static : AT(_RomSize)
    {
        _vr_KHVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_KHVR_staticSegmentTextStart = .;
            build/baserom/vr_KHVR_static.o (.text)
        _vr_KHVR_staticSegmentTextEnd = .;
    _vr_KHVR_staticSegmentTextSize = ABSOLUTE( _vr_KHVR_staticSegmentTextEnd - _vr_KHVR_staticSegmentTextStart );
        _vr_KHVR_staticSegmentDataStart = .;
            build/baserom/vr_KHVR_static.o (.data)
        _vr_KHVR_staticSegmentDataEnd = .;
    _vr_KHVR_staticSegmentDataSize = ABSOLUTE( _vr_KHVR_staticSegmentDataEnd - _vr_KHVR_staticSegmentDataStart );
        _vr_KHVR_staticSegmentRoDataStart = .;
            build/baserom/vr_KHVR_static.o (.rodata)
        _vr_KHVR_staticSegmentRoDataEnd = .;
    _vr_KHVR_staticSegmentRoDataSize = ABSOLUTE( _vr_KHVR_staticSegmentRoDataEnd - _vr_KHVR_staticSegmentRoDataStart );
        _vr_KHVR_staticSegmentSDataStart = .;
            build/baserom/vr_KHVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_KHVR_staticSegmentSDataEnd = .;
        _vr_KHVR_staticSegmentOvlStart = .;
            build/baserom/vr_KHVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_KHVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_KHVR_staticSegmentOvlEnd - _vr_KHVR_staticSegmentTextStart );
    _vr_KHVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_KHVR_static.bss ADDR(..vr_KHVR_static) + SIZEOF(..vr_KHVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_KHVR_staticSegmentBssStart = .;
            build/baserom/vr_KHVR_static.o (.sbss)
            build/baserom/vr_KHVR_static.o (.scommon)
            build/baserom/vr_KHVR_static.o (.bss)
            build/baserom/vr_KHVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_KHVR_staticSegmentBssEnd = .;
        _vr_KHVR_staticSegmentEnd = .;
    }
    _vr_KHVR_staticSegmentBssSize = ABSOLUTE( _vr_KHVR_staticSegmentBssEnd - _vr_KHVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_KHVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_KHVR_pal_static : AT(_RomSize)
    {
        _vr_KHVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_KHVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_KHVR_pal_static.o (.text)
        _vr_KHVR_pal_staticSegmentTextEnd = .;
    _vr_KHVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_KHVR_pal_staticSegmentTextEnd - _vr_KHVR_pal_staticSegmentTextStart );
        _vr_KHVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_KHVR_pal_static.o (.data)
        _vr_KHVR_pal_staticSegmentDataEnd = .;
    _vr_KHVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_KHVR_pal_staticSegmentDataEnd - _vr_KHVR_pal_staticSegmentDataStart );
        _vr_KHVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_KHVR_pal_static.o (.rodata)
        _vr_KHVR_pal_staticSegmentRoDataEnd = .;
    _vr_KHVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_KHVR_pal_staticSegmentRoDataEnd - _vr_KHVR_pal_staticSegmentRoDataStart );
        _vr_KHVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_KHVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_KHVR_pal_staticSegmentSDataEnd = .;
        _vr_KHVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_KHVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_KHVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_KHVR_pal_staticSegmentOvlEnd - _vr_KHVR_pal_staticSegmentTextStart );
    _vr_KHVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_KHVR_pal_static.bss ADDR(..vr_KHVR_pal_static) + SIZEOF(..vr_KHVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_KHVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_KHVR_pal_static.o (.sbss)
            build/baserom/vr_KHVR_pal_static.o (.scommon)
            build/baserom/vr_KHVR_pal_static.o (.bss)
            build/baserom/vr_KHVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_KHVR_pal_staticSegmentBssEnd = .;
        _vr_KHVR_pal_staticSegmentEnd = .;
    }
    _vr_KHVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_KHVR_pal_staticSegmentBssEnd - _vr_KHVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_K3VR_staticSegmentRomStart = _RomSize;
    ..vr_K3VR_static : AT(_RomSize)
    {
        _vr_K3VR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_K3VR_staticSegmentTextStart = .;
            build/baserom/vr_K3VR_static.o (.text)
        _vr_K3VR_staticSegmentTextEnd = .;
    _vr_K3VR_staticSegmentTextSize = ABSOLUTE( _vr_K3VR_staticSegmentTextEnd - _vr_K3VR_staticSegmentTextStart );
        _vr_K3VR_staticSegmentDataStart = .;
            build/baserom/vr_K3VR_static.o (.data)
        _vr_K3VR_staticSegmentDataEnd = .;
    _vr_K3VR_staticSegmentDataSize = ABSOLUTE( _vr_K3VR_staticSegmentDataEnd - _vr_K3VR_staticSegmentDataStart );
        _vr_K3VR_staticSegmentRoDataStart = .;
            build/baserom/vr_K3VR_static.o (.rodata)
        _vr_K3VR_staticSegmentRoDataEnd = .;
    _vr_K3VR_staticSegmentRoDataSize = ABSOLUTE( _vr_K3VR_staticSegmentRoDataEnd - _vr_K3VR_staticSegmentRoDataStart );
        _vr_K3VR_staticSegmentSDataStart = .;
            build/baserom/vr_K3VR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_K3VR_staticSegmentSDataEnd = .;
        _vr_K3VR_staticSegmentOvlStart = .;
            build/baserom/vr_K3VR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_K3VR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_K3VR_staticSegmentOvlEnd - _vr_K3VR_staticSegmentTextStart );
    _vr_K3VR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_K3VR_static.bss ADDR(..vr_K3VR_static) + SIZEOF(..vr_K3VR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_K3VR_staticSegmentBssStart = .;
            build/baserom/vr_K3VR_static.o (.sbss)
            build/baserom/vr_K3VR_static.o (.scommon)
            build/baserom/vr_K3VR_static.o (.bss)
            build/baserom/vr_K3VR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_K3VR_staticSegmentBssEnd = .;
        _vr_K3VR_staticSegmentEnd = .;
    }
    _vr_K3VR_staticSegmentBssSize = ABSOLUTE( _vr_K3VR_staticSegmentBssEnd - _vr_K3VR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_K3VR_pal_staticSegmentRomStart = _RomSize;
    ..vr_K3VR_pal_static : AT(_RomSize)
    {
        _vr_K3VR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_K3VR_pal_staticSegmentTextStart = .;
            build/baserom/vr_K3VR_pal_static.o (.text)
        _vr_K3VR_pal_staticSegmentTextEnd = .;
    _vr_K3VR_pal_staticSegmentTextSize = ABSOLUTE( _vr_K3VR_pal_staticSegmentTextEnd - _vr_K3VR_pal_staticSegmentTextStart );
        _vr_K3VR_pal_staticSegmentDataStart = .;
            build/baserom/vr_K3VR_pal_static.o (.data)
        _vr_K3VR_pal_staticSegmentDataEnd = .;
    _vr_K3VR_pal_staticSegmentDataSize = ABSOLUTE( _vr_K3VR_pal_staticSegmentDataEnd - _vr_K3VR_pal_staticSegmentDataStart );
        _vr_K3VR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_K3VR_pal_static.o (.rodata)
        _vr_K3VR_pal_staticSegmentRoDataEnd = .;
    _vr_K3VR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_K3VR_pal_staticSegmentRoDataEnd - _vr_K3VR_pal_staticSegmentRoDataStart );
        _vr_K3VR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_K3VR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_K3VR_pal_staticSegmentSDataEnd = .;
        _vr_K3VR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_K3VR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_K3VR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_K3VR_pal_staticSegmentOvlEnd - _vr_K3VR_pal_staticSegmentTextStart );
    _vr_K3VR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_K3VR_pal_static.bss ADDR(..vr_K3VR_pal_static) + SIZEOF(..vr_K3VR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_K3VR_pal_staticSegmentBssStart = .;
            build/baserom/vr_K3VR_pal_static.o (.sbss)
            build/baserom/vr_K3VR_pal_static.o (.scommon)
            build/baserom/vr_K3VR_pal_static.o (.bss)
            build/baserom/vr_K3VR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_K3VR_pal_staticSegmentBssEnd = .;
        _vr_K3VR_pal_staticSegmentEnd = .;
    }
    _vr_K3VR_pal_staticSegmentBssSize = ABSOLUTE( _vr_K3VR_pal_staticSegmentBssEnd - _vr_K3VR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_K4VR_staticSegmentRomStart = _RomSize;
    ..vr_K4VR_static : AT(_RomSize)
    {
        _vr_K4VR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_K4VR_staticSegmentTextStart = .;
            build/baserom/vr_K4VR_static.o (.text)
        _vr_K4VR_staticSegmentTextEnd = .;
    _vr_K4VR_staticSegmentTextSize = ABSOLUTE( _vr_K4VR_staticSegmentTextEnd - _vr_K4VR_staticSegmentTextStart );
        _vr_K4VR_staticSegmentDataStart = .;
            build/baserom/vr_K4VR_static.o (.data)
        _vr_K4VR_staticSegmentDataEnd = .;
    _vr_K4VR_staticSegmentDataSize = ABSOLUTE( _vr_K4VR_staticSegmentDataEnd - _vr_K4VR_staticSegmentDataStart );
        _vr_K4VR_staticSegmentRoDataStart = .;
            build/baserom/vr_K4VR_static.o (.rodata)
        _vr_K4VR_staticSegmentRoDataEnd = .;
    _vr_K4VR_staticSegmentRoDataSize = ABSOLUTE( _vr_K4VR_staticSegmentRoDataEnd - _vr_K4VR_staticSegmentRoDataStart );
        _vr_K4VR_staticSegmentSDataStart = .;
            build/baserom/vr_K4VR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_K4VR_staticSegmentSDataEnd = .;
        _vr_K4VR_staticSegmentOvlStart = .;
            build/baserom/vr_K4VR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_K4VR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_K4VR_staticSegmentOvlEnd - _vr_K4VR_staticSegmentTextStart );
    _vr_K4VR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_K4VR_static.bss ADDR(..vr_K4VR_static) + SIZEOF(..vr_K4VR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_K4VR_staticSegmentBssStart = .;
            build/baserom/vr_K4VR_static.o (.sbss)
            build/baserom/vr_K4VR_static.o (.scommon)
            build/baserom/vr_K4VR_static.o (.bss)
            build/baserom/vr_K4VR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_K4VR_staticSegmentBssEnd = .;
        _vr_K4VR_staticSegmentEnd = .;
    }
    _vr_K4VR_staticSegmentBssSize = ABSOLUTE( _vr_K4VR_staticSegmentBssEnd - _vr_K4VR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_K4VR_pal_staticSegmentRomStart = _RomSize;
    ..vr_K4VR_pal_static : AT(_RomSize)
    {
        _vr_K4VR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_K4VR_pal_staticSegmentTextStart = .;
            build/baserom/vr_K4VR_pal_static.o (.text)
        _vr_K4VR_pal_staticSegmentTextEnd = .;
    _vr_K4VR_pal_staticSegmentTextSize = ABSOLUTE( _vr_K4VR_pal_staticSegmentTextEnd - _vr_K4VR_pal_staticSegmentTextStart );
        _vr_K4VR_pal_staticSegmentDataStart = .;
            build/baserom/vr_K4VR_pal_static.o (.data)
        _vr_K4VR_pal_staticSegmentDataEnd = .;
    _vr_K4VR_pal_staticSegmentDataSize = ABSOLUTE( _vr_K4VR_pal_staticSegmentDataEnd - _vr_K4VR_pal_staticSegmentDataStart );
        _vr_K4VR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_K4VR_pal_static.o (.rodata)
        _vr_K4VR_pal_staticSegmentRoDataEnd = .;
    _vr_K4VR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_K4VR_pal_staticSegmentRoDataEnd - _vr_K4VR_pal_staticSegmentRoDataStart );
        _vr_K4VR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_K4VR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_K4VR_pal_staticSegmentSDataEnd = .;
        _vr_K4VR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_K4VR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_K4VR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_K4VR_pal_staticSegmentOvlEnd - _vr_K4VR_pal_staticSegmentTextStart );
    _vr_K4VR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_K4VR_pal_static.bss ADDR(..vr_K4VR_pal_static) + SIZEOF(..vr_K4VR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_K4VR_pal_staticSegmentBssStart = .;
            build/baserom/vr_K4VR_pal_static.o (.sbss)
            build/baserom/vr_K4VR_pal_static.o (.scommon)
            build/baserom/vr_K4VR_pal_static.o (.bss)
            build/baserom/vr_K4VR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_K4VR_pal_staticSegmentBssEnd = .;
        _vr_K4VR_pal_staticSegmentEnd = .;
    }
    _vr_K4VR_pal_staticSegmentBssSize = ABSOLUTE( _vr_K4VR_pal_staticSegmentBssEnd - _vr_K4VR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_K5VR_staticSegmentRomStart = _RomSize;
    ..vr_K5VR_static : AT(_RomSize)
    {
        _vr_K5VR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_K5VR_staticSegmentTextStart = .;
            build/baserom/vr_K5VR_static.o (.text)
        _vr_K5VR_staticSegmentTextEnd = .;
    _vr_K5VR_staticSegmentTextSize = ABSOLUTE( _vr_K5VR_staticSegmentTextEnd - _vr_K5VR_staticSegmentTextStart );
        _vr_K5VR_staticSegmentDataStart = .;
            build/baserom/vr_K5VR_static.o (.data)
        _vr_K5VR_staticSegmentDataEnd = .;
    _vr_K5VR_staticSegmentDataSize = ABSOLUTE( _vr_K5VR_staticSegmentDataEnd - _vr_K5VR_staticSegmentDataStart );
        _vr_K5VR_staticSegmentRoDataStart = .;
            build/baserom/vr_K5VR_static.o (.rodata)
        _vr_K5VR_staticSegmentRoDataEnd = .;
    _vr_K5VR_staticSegmentRoDataSize = ABSOLUTE( _vr_K5VR_staticSegmentRoDataEnd - _vr_K5VR_staticSegmentRoDataStart );
        _vr_K5VR_staticSegmentSDataStart = .;
            build/baserom/vr_K5VR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_K5VR_staticSegmentSDataEnd = .;
        _vr_K5VR_staticSegmentOvlStart = .;
            build/baserom/vr_K5VR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_K5VR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_K5VR_staticSegmentOvlEnd - _vr_K5VR_staticSegmentTextStart );
    _vr_K5VR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_K5VR_static.bss ADDR(..vr_K5VR_static) + SIZEOF(..vr_K5VR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_K5VR_staticSegmentBssStart = .;
            build/baserom/vr_K5VR_static.o (.sbss)
            build/baserom/vr_K5VR_static.o (.scommon)
            build/baserom/vr_K5VR_static.o (.bss)
            build/baserom/vr_K5VR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_K5VR_staticSegmentBssEnd = .;
        _vr_K5VR_staticSegmentEnd = .;
    }
    _vr_K5VR_staticSegmentBssSize = ABSOLUTE( _vr_K5VR_staticSegmentBssEnd - _vr_K5VR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_K5VR_pal_staticSegmentRomStart = _RomSize;
    ..vr_K5VR_pal_static : AT(_RomSize)
    {
        _vr_K5VR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_K5VR_pal_staticSegmentTextStart = .;
            build/baserom/vr_K5VR_pal_static.o (.text)
        _vr_K5VR_pal_staticSegmentTextEnd = .;
    _vr_K5VR_pal_staticSegmentTextSize = ABSOLUTE( _vr_K5VR_pal_staticSegmentTextEnd - _vr_K5VR_pal_staticSegmentTextStart );
        _vr_K5VR_pal_staticSegmentDataStart = .;
            build/baserom/vr_K5VR_pal_static.o (.data)
        _vr_K5VR_pal_staticSegmentDataEnd = .;
    _vr_K5VR_pal_staticSegmentDataSize = ABSOLUTE( _vr_K5VR_pal_staticSegmentDataEnd - _vr_K5VR_pal_staticSegmentDataStart );
        _vr_K5VR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_K5VR_pal_static.o (.rodata)
        _vr_K5VR_pal_staticSegmentRoDataEnd = .;
    _vr_K5VR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_K5VR_pal_staticSegmentRoDataEnd - _vr_K5VR_pal_staticSegmentRoDataStart );
        _vr_K5VR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_K5VR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_K5VR_pal_staticSegmentSDataEnd = .;
        _vr_K5VR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_K5VR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_K5VR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_K5VR_pal_staticSegmentOvlEnd - _vr_K5VR_pal_staticSegmentTextStart );
    _vr_K5VR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_K5VR_pal_static.bss ADDR(..vr_K5VR_pal_static) + SIZEOF(..vr_K5VR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_K5VR_pal_staticSegmentBssStart = .;
            build/baserom/vr_K5VR_pal_static.o (.sbss)
            build/baserom/vr_K5VR_pal_static.o (.scommon)
            build/baserom/vr_K5VR_pal_static.o (.bss)
            build/baserom/vr_K5VR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_K5VR_pal_staticSegmentBssEnd = .;
        _vr_K5VR_pal_staticSegmentEnd = .;
    }
    _vr_K5VR_pal_staticSegmentBssSize = ABSOLUTE( _vr_K5VR_pal_staticSegmentBssEnd - _vr_K5VR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_SP1a_staticSegmentRomStart = _RomSize;
    ..vr_SP1a_static : AT(_RomSize)
    {
        _vr_SP1a_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_SP1a_staticSegmentTextStart = .;
            build/baserom/vr_SP1a_static.o (.text)
        _vr_SP1a_staticSegmentTextEnd = .;
    _vr_SP1a_staticSegmentTextSize = ABSOLUTE( _vr_SP1a_staticSegmentTextEnd - _vr_SP1a_staticSegmentTextStart );
        _vr_SP1a_staticSegmentDataStart = .;
            build/baserom/vr_SP1a_static.o (.data)
        _vr_SP1a_staticSegmentDataEnd = .;
    _vr_SP1a_staticSegmentDataSize = ABSOLUTE( _vr_SP1a_staticSegmentDataEnd - _vr_SP1a_staticSegmentDataStart );
        _vr_SP1a_staticSegmentRoDataStart = .;
            build/baserom/vr_SP1a_static.o (.rodata)
        _vr_SP1a_staticSegmentRoDataEnd = .;
    _vr_SP1a_staticSegmentRoDataSize = ABSOLUTE( _vr_SP1a_staticSegmentRoDataEnd - _vr_SP1a_staticSegmentRoDataStart );
        _vr_SP1a_staticSegmentSDataStart = .;
            build/baserom/vr_SP1a_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_SP1a_staticSegmentSDataEnd = .;
        _vr_SP1a_staticSegmentOvlStart = .;
            build/baserom/vr_SP1a_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_SP1a_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_SP1a_staticSegmentOvlEnd - _vr_SP1a_staticSegmentTextStart );
    _vr_SP1a_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_SP1a_static.bss ADDR(..vr_SP1a_static) + SIZEOF(..vr_SP1a_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_SP1a_staticSegmentBssStart = .;
            build/baserom/vr_SP1a_static.o (.sbss)
            build/baserom/vr_SP1a_static.o (.scommon)
            build/baserom/vr_SP1a_static.o (.bss)
            build/baserom/vr_SP1a_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_SP1a_staticSegmentBssEnd = .;
        _vr_SP1a_staticSegmentEnd = .;
    }
    _vr_SP1a_staticSegmentBssSize = ABSOLUTE( _vr_SP1a_staticSegmentBssEnd - _vr_SP1a_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_SP1a_pal_staticSegmentRomStart = _RomSize;
    ..vr_SP1a_pal_static : AT(_RomSize)
    {
        _vr_SP1a_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_SP1a_pal_staticSegmentTextStart = .;
            build/baserom/vr_SP1a_pal_static.o (.text)
        _vr_SP1a_pal_staticSegmentTextEnd = .;
    _vr_SP1a_pal_staticSegmentTextSize = ABSOLUTE( _vr_SP1a_pal_staticSegmentTextEnd - _vr_SP1a_pal_staticSegmentTextStart );
        _vr_SP1a_pal_staticSegmentDataStart = .;
            build/baserom/vr_SP1a_pal_static.o (.data)
        _vr_SP1a_pal_staticSegmentDataEnd = .;
    _vr_SP1a_pal_staticSegmentDataSize = ABSOLUTE( _vr_SP1a_pal_staticSegmentDataEnd - _vr_SP1a_pal_staticSegmentDataStart );
        _vr_SP1a_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_SP1a_pal_static.o (.rodata)
        _vr_SP1a_pal_staticSegmentRoDataEnd = .;
    _vr_SP1a_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_SP1a_pal_staticSegmentRoDataEnd - _vr_SP1a_pal_staticSegmentRoDataStart );
        _vr_SP1a_pal_staticSegmentSDataStart = .;
            build/baserom/vr_SP1a_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_SP1a_pal_staticSegmentSDataEnd = .;
        _vr_SP1a_pal_staticSegmentOvlStart = .;
            build/baserom/vr_SP1a_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_SP1a_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_SP1a_pal_staticSegmentOvlEnd - _vr_SP1a_pal_staticSegmentTextStart );
    _vr_SP1a_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_SP1a_pal_static.bss ADDR(..vr_SP1a_pal_static) + SIZEOF(..vr_SP1a_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_SP1a_pal_staticSegmentBssStart = .;
            build/baserom/vr_SP1a_pal_static.o (.sbss)
            build/baserom/vr_SP1a_pal_static.o (.scommon)
            build/baserom/vr_SP1a_pal_static.o (.bss)
            build/baserom/vr_SP1a_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_SP1a_pal_staticSegmentBssEnd = .;
        _vr_SP1a_pal_staticSegmentEnd = .;
    }
    _vr_SP1a_pal_staticSegmentBssSize = ABSOLUTE( _vr_SP1a_pal_staticSegmentBssEnd - _vr_SP1a_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_MLVR_staticSegmentRomStart = _RomSize;
    ..vr_MLVR_static : AT(_RomSize)
    {
        _vr_MLVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_MLVR_staticSegmentTextStart = .;
            build/baserom/vr_MLVR_static.o (.text)
        _vr_MLVR_staticSegmentTextEnd = .;
    _vr_MLVR_staticSegmentTextSize = ABSOLUTE( _vr_MLVR_staticSegmentTextEnd - _vr_MLVR_staticSegmentTextStart );
        _vr_MLVR_staticSegmentDataStart = .;
            build/baserom/vr_MLVR_static.o (.data)
        _vr_MLVR_staticSegmentDataEnd = .;
    _vr_MLVR_staticSegmentDataSize = ABSOLUTE( _vr_MLVR_staticSegmentDataEnd - _vr_MLVR_staticSegmentDataStart );
        _vr_MLVR_staticSegmentRoDataStart = .;
            build/baserom/vr_MLVR_static.o (.rodata)
        _vr_MLVR_staticSegmentRoDataEnd = .;
    _vr_MLVR_staticSegmentRoDataSize = ABSOLUTE( _vr_MLVR_staticSegmentRoDataEnd - _vr_MLVR_staticSegmentRoDataStart );
        _vr_MLVR_staticSegmentSDataStart = .;
            build/baserom/vr_MLVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_MLVR_staticSegmentSDataEnd = .;
        _vr_MLVR_staticSegmentOvlStart = .;
            build/baserom/vr_MLVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_MLVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_MLVR_staticSegmentOvlEnd - _vr_MLVR_staticSegmentTextStart );
    _vr_MLVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_MLVR_static.bss ADDR(..vr_MLVR_static) + SIZEOF(..vr_MLVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_MLVR_staticSegmentBssStart = .;
            build/baserom/vr_MLVR_static.o (.sbss)
            build/baserom/vr_MLVR_static.o (.scommon)
            build/baserom/vr_MLVR_static.o (.bss)
            build/baserom/vr_MLVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_MLVR_staticSegmentBssEnd = .;
        _vr_MLVR_staticSegmentEnd = .;
    }
    _vr_MLVR_staticSegmentBssSize = ABSOLUTE( _vr_MLVR_staticSegmentBssEnd - _vr_MLVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_MLVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_MLVR_pal_static : AT(_RomSize)
    {
        _vr_MLVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_MLVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_MLVR_pal_static.o (.text)
        _vr_MLVR_pal_staticSegmentTextEnd = .;
    _vr_MLVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_MLVR_pal_staticSegmentTextEnd - _vr_MLVR_pal_staticSegmentTextStart );
        _vr_MLVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_MLVR_pal_static.o (.data)
        _vr_MLVR_pal_staticSegmentDataEnd = .;
    _vr_MLVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_MLVR_pal_staticSegmentDataEnd - _vr_MLVR_pal_staticSegmentDataStart );
        _vr_MLVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_MLVR_pal_static.o (.rodata)
        _vr_MLVR_pal_staticSegmentRoDataEnd = .;
    _vr_MLVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_MLVR_pal_staticSegmentRoDataEnd - _vr_MLVR_pal_staticSegmentRoDataStart );
        _vr_MLVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_MLVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_MLVR_pal_staticSegmentSDataEnd = .;
        _vr_MLVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_MLVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_MLVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_MLVR_pal_staticSegmentOvlEnd - _vr_MLVR_pal_staticSegmentTextStart );
    _vr_MLVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_MLVR_pal_static.bss ADDR(..vr_MLVR_pal_static) + SIZEOF(..vr_MLVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_MLVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_MLVR_pal_static.o (.sbss)
            build/baserom/vr_MLVR_pal_static.o (.scommon)
            build/baserom/vr_MLVR_pal_static.o (.bss)
            build/baserom/vr_MLVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_MLVR_pal_staticSegmentBssEnd = .;
        _vr_MLVR_pal_staticSegmentEnd = .;
    }
    _vr_MLVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_MLVR_pal_staticSegmentBssEnd - _vr_MLVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_KKRVR_staticSegmentRomStart = _RomSize;
    ..vr_KKRVR_static : AT(_RomSize)
    {
        _vr_KKRVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_KKRVR_staticSegmentTextStart = .;
            build/baserom/vr_KKRVR_static.o (.text)
        _vr_KKRVR_staticSegmentTextEnd = .;
    _vr_KKRVR_staticSegmentTextSize = ABSOLUTE( _vr_KKRVR_staticSegmentTextEnd - _vr_KKRVR_staticSegmentTextStart );
        _vr_KKRVR_staticSegmentDataStart = .;
            build/baserom/vr_KKRVR_static.o (.data)
        _vr_KKRVR_staticSegmentDataEnd = .;
    _vr_KKRVR_staticSegmentDataSize = ABSOLUTE( _vr_KKRVR_staticSegmentDataEnd - _vr_KKRVR_staticSegmentDataStart );
        _vr_KKRVR_staticSegmentRoDataStart = .;
            build/baserom/vr_KKRVR_static.o (.rodata)
        _vr_KKRVR_staticSegmentRoDataEnd = .;
    _vr_KKRVR_staticSegmentRoDataSize = ABSOLUTE( _vr_KKRVR_staticSegmentRoDataEnd - _vr_KKRVR_staticSegmentRoDataStart );
        _vr_KKRVR_staticSegmentSDataStart = .;
            build/baserom/vr_KKRVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_KKRVR_staticSegmentSDataEnd = .;
        _vr_KKRVR_staticSegmentOvlStart = .;
            build/baserom/vr_KKRVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_KKRVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_KKRVR_staticSegmentOvlEnd - _vr_KKRVR_staticSegmentTextStart );
    _vr_KKRVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_KKRVR_static.bss ADDR(..vr_KKRVR_static) + SIZEOF(..vr_KKRVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_KKRVR_staticSegmentBssStart = .;
            build/baserom/vr_KKRVR_static.o (.sbss)
            build/baserom/vr_KKRVR_static.o (.scommon)
            build/baserom/vr_KKRVR_static.o (.bss)
            build/baserom/vr_KKRVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_KKRVR_staticSegmentBssEnd = .;
        _vr_KKRVR_staticSegmentEnd = .;
    }
    _vr_KKRVR_staticSegmentBssSize = ABSOLUTE( _vr_KKRVR_staticSegmentBssEnd - _vr_KKRVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_KKRVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_KKRVR_pal_static : AT(_RomSize)
    {
        _vr_KKRVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_KKRVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_KKRVR_pal_static.o (.text)
        _vr_KKRVR_pal_staticSegmentTextEnd = .;
    _vr_KKRVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_KKRVR_pal_staticSegmentTextEnd - _vr_KKRVR_pal_staticSegmentTextStart );
        _vr_KKRVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_KKRVR_pal_static.o (.data)
        _vr_KKRVR_pal_staticSegmentDataEnd = .;
    _vr_KKRVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_KKRVR_pal_staticSegmentDataEnd - _vr_KKRVR_pal_staticSegmentDataStart );
        _vr_KKRVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_KKRVR_pal_static.o (.rodata)
        _vr_KKRVR_pal_staticSegmentRoDataEnd = .;
    _vr_KKRVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_KKRVR_pal_staticSegmentRoDataEnd - _vr_KKRVR_pal_staticSegmentRoDataStart );
        _vr_KKRVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_KKRVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_KKRVR_pal_staticSegmentSDataEnd = .;
        _vr_KKRVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_KKRVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_KKRVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_KKRVR_pal_staticSegmentOvlEnd - _vr_KKRVR_pal_staticSegmentTextStart );
    _vr_KKRVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_KKRVR_pal_static.bss ADDR(..vr_KKRVR_pal_static) + SIZEOF(..vr_KKRVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_KKRVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_KKRVR_pal_static.o (.sbss)
            build/baserom/vr_KKRVR_pal_static.o (.scommon)
            build/baserom/vr_KKRVR_pal_static.o (.bss)
            build/baserom/vr_KKRVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_KKRVR_pal_staticSegmentBssEnd = .;
        _vr_KKRVR_pal_staticSegmentEnd = .;
    }
    _vr_KKRVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_KKRVR_pal_staticSegmentBssEnd - _vr_KKRVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_KR3VR_staticSegmentRomStart = _RomSize;
    ..vr_KR3VR_static : AT(_RomSize)
    {
        _vr_KR3VR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_KR3VR_staticSegmentTextStart = .;
            build/baserom/vr_KR3VR_static.o (.text)
        _vr_KR3VR_staticSegmentTextEnd = .;
    _vr_KR3VR_staticSegmentTextSize = ABSOLUTE( _vr_KR3VR_staticSegmentTextEnd - _vr_KR3VR_staticSegmentTextStart );
        _vr_KR3VR_staticSegmentDataStart = .;
            build/baserom/vr_KR3VR_static.o (.data)
        _vr_KR3VR_staticSegmentDataEnd = .;
    _vr_KR3VR_staticSegmentDataSize = ABSOLUTE( _vr_KR3VR_staticSegmentDataEnd - _vr_KR3VR_staticSegmentDataStart );
        _vr_KR3VR_staticSegmentRoDataStart = .;
            build/baserom/vr_KR3VR_static.o (.rodata)
        _vr_KR3VR_staticSegmentRoDataEnd = .;
    _vr_KR3VR_staticSegmentRoDataSize = ABSOLUTE( _vr_KR3VR_staticSegmentRoDataEnd - _vr_KR3VR_staticSegmentRoDataStart );
        _vr_KR3VR_staticSegmentSDataStart = .;
            build/baserom/vr_KR3VR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_KR3VR_staticSegmentSDataEnd = .;
        _vr_KR3VR_staticSegmentOvlStart = .;
            build/baserom/vr_KR3VR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_KR3VR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_KR3VR_staticSegmentOvlEnd - _vr_KR3VR_staticSegmentTextStart );
    _vr_KR3VR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_KR3VR_static.bss ADDR(..vr_KR3VR_static) + SIZEOF(..vr_KR3VR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_KR3VR_staticSegmentBssStart = .;
            build/baserom/vr_KR3VR_static.o (.sbss)
            build/baserom/vr_KR3VR_static.o (.scommon)
            build/baserom/vr_KR3VR_static.o (.bss)
            build/baserom/vr_KR3VR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_KR3VR_staticSegmentBssEnd = .;
        _vr_KR3VR_staticSegmentEnd = .;
    }
    _vr_KR3VR_staticSegmentBssSize = ABSOLUTE( _vr_KR3VR_staticSegmentBssEnd - _vr_KR3VR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_KR3VR_pal_staticSegmentRomStart = _RomSize;
    ..vr_KR3VR_pal_static : AT(_RomSize)
    {
        _vr_KR3VR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_KR3VR_pal_staticSegmentTextStart = .;
            build/baserom/vr_KR3VR_pal_static.o (.text)
        _vr_KR3VR_pal_staticSegmentTextEnd = .;
    _vr_KR3VR_pal_staticSegmentTextSize = ABSOLUTE( _vr_KR3VR_pal_staticSegmentTextEnd - _vr_KR3VR_pal_staticSegmentTextStart );
        _vr_KR3VR_pal_staticSegmentDataStart = .;
            build/baserom/vr_KR3VR_pal_static.o (.data)
        _vr_KR3VR_pal_staticSegmentDataEnd = .;
    _vr_KR3VR_pal_staticSegmentDataSize = ABSOLUTE( _vr_KR3VR_pal_staticSegmentDataEnd - _vr_KR3VR_pal_staticSegmentDataStart );
        _vr_KR3VR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_KR3VR_pal_static.o (.rodata)
        _vr_KR3VR_pal_staticSegmentRoDataEnd = .;
    _vr_KR3VR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_KR3VR_pal_staticSegmentRoDataEnd - _vr_KR3VR_pal_staticSegmentRoDataStart );
        _vr_KR3VR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_KR3VR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_KR3VR_pal_staticSegmentSDataEnd = .;
        _vr_KR3VR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_KR3VR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_KR3VR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_KR3VR_pal_staticSegmentOvlEnd - _vr_KR3VR_pal_staticSegmentTextStart );
    _vr_KR3VR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_KR3VR_pal_static.bss ADDR(..vr_KR3VR_pal_static) + SIZEOF(..vr_KR3VR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_KR3VR_pal_staticSegmentBssStart = .;
            build/baserom/vr_KR3VR_pal_static.o (.sbss)
            build/baserom/vr_KR3VR_pal_static.o (.scommon)
            build/baserom/vr_KR3VR_pal_static.o (.bss)
            build/baserom/vr_KR3VR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_KR3VR_pal_staticSegmentBssEnd = .;
        _vr_KR3VR_pal_staticSegmentEnd = .;
    }
    _vr_KR3VR_pal_staticSegmentBssSize = ABSOLUTE( _vr_KR3VR_pal_staticSegmentBssEnd - _vr_KR3VR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_IPVR_staticSegmentRomStart = _RomSize;
    ..vr_IPVR_static : AT(_RomSize)
    {
        _vr_IPVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_IPVR_staticSegmentTextStart = .;
            build/baserom/vr_IPVR_static.o (.text)
        _vr_IPVR_staticSegmentTextEnd = .;
    _vr_IPVR_staticSegmentTextSize = ABSOLUTE( _vr_IPVR_staticSegmentTextEnd - _vr_IPVR_staticSegmentTextStart );
        _vr_IPVR_staticSegmentDataStart = .;
            build/baserom/vr_IPVR_static.o (.data)
        _vr_IPVR_staticSegmentDataEnd = .;
    _vr_IPVR_staticSegmentDataSize = ABSOLUTE( _vr_IPVR_staticSegmentDataEnd - _vr_IPVR_staticSegmentDataStart );
        _vr_IPVR_staticSegmentRoDataStart = .;
            build/baserom/vr_IPVR_static.o (.rodata)
        _vr_IPVR_staticSegmentRoDataEnd = .;
    _vr_IPVR_staticSegmentRoDataSize = ABSOLUTE( _vr_IPVR_staticSegmentRoDataEnd - _vr_IPVR_staticSegmentRoDataStart );
        _vr_IPVR_staticSegmentSDataStart = .;
            build/baserom/vr_IPVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_IPVR_staticSegmentSDataEnd = .;
        _vr_IPVR_staticSegmentOvlStart = .;
            build/baserom/vr_IPVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_IPVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_IPVR_staticSegmentOvlEnd - _vr_IPVR_staticSegmentTextStart );
    _vr_IPVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_IPVR_static.bss ADDR(..vr_IPVR_static) + SIZEOF(..vr_IPVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_IPVR_staticSegmentBssStart = .;
            build/baserom/vr_IPVR_static.o (.sbss)
            build/baserom/vr_IPVR_static.o (.scommon)
            build/baserom/vr_IPVR_static.o (.bss)
            build/baserom/vr_IPVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_IPVR_staticSegmentBssEnd = .;
        _vr_IPVR_staticSegmentEnd = .;
    }
    _vr_IPVR_staticSegmentBssSize = ABSOLUTE( _vr_IPVR_staticSegmentBssEnd - _vr_IPVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_IPVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_IPVR_pal_static : AT(_RomSize)
    {
        _vr_IPVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_IPVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_IPVR_pal_static.o (.text)
        _vr_IPVR_pal_staticSegmentTextEnd = .;
    _vr_IPVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_IPVR_pal_staticSegmentTextEnd - _vr_IPVR_pal_staticSegmentTextStart );
        _vr_IPVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_IPVR_pal_static.o (.data)
        _vr_IPVR_pal_staticSegmentDataEnd = .;
    _vr_IPVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_IPVR_pal_staticSegmentDataEnd - _vr_IPVR_pal_staticSegmentDataStart );
        _vr_IPVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_IPVR_pal_static.o (.rodata)
        _vr_IPVR_pal_staticSegmentRoDataEnd = .;
    _vr_IPVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_IPVR_pal_staticSegmentRoDataEnd - _vr_IPVR_pal_staticSegmentRoDataStart );
        _vr_IPVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_IPVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_IPVR_pal_staticSegmentSDataEnd = .;
        _vr_IPVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_IPVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_IPVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_IPVR_pal_staticSegmentOvlEnd - _vr_IPVR_pal_staticSegmentTextStart );
    _vr_IPVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_IPVR_pal_static.bss ADDR(..vr_IPVR_pal_static) + SIZEOF(..vr_IPVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_IPVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_IPVR_pal_static.o (.sbss)
            build/baserom/vr_IPVR_pal_static.o (.scommon)
            build/baserom/vr_IPVR_pal_static.o (.bss)
            build/baserom/vr_IPVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_IPVR_pal_staticSegmentBssEnd = .;
        _vr_IPVR_pal_staticSegmentEnd = .;
    }
    _vr_IPVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_IPVR_pal_staticSegmentBssEnd - _vr_IPVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_KSVR_staticSegmentRomStart = _RomSize;
    ..vr_KSVR_static : AT(_RomSize)
    {
        _vr_KSVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_KSVR_staticSegmentTextStart = .;
            build/baserom/vr_KSVR_static.o (.text)
        _vr_KSVR_staticSegmentTextEnd = .;
    _vr_KSVR_staticSegmentTextSize = ABSOLUTE( _vr_KSVR_staticSegmentTextEnd - _vr_KSVR_staticSegmentTextStart );
        _vr_KSVR_staticSegmentDataStart = .;
            build/baserom/vr_KSVR_static.o (.data)
        _vr_KSVR_staticSegmentDataEnd = .;
    _vr_KSVR_staticSegmentDataSize = ABSOLUTE( _vr_KSVR_staticSegmentDataEnd - _vr_KSVR_staticSegmentDataStart );
        _vr_KSVR_staticSegmentRoDataStart = .;
            build/baserom/vr_KSVR_static.o (.rodata)
        _vr_KSVR_staticSegmentRoDataEnd = .;
    _vr_KSVR_staticSegmentRoDataSize = ABSOLUTE( _vr_KSVR_staticSegmentRoDataEnd - _vr_KSVR_staticSegmentRoDataStart );
        _vr_KSVR_staticSegmentSDataStart = .;
            build/baserom/vr_KSVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_KSVR_staticSegmentSDataEnd = .;
        _vr_KSVR_staticSegmentOvlStart = .;
            build/baserom/vr_KSVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_KSVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_KSVR_staticSegmentOvlEnd - _vr_KSVR_staticSegmentTextStart );
    _vr_KSVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_KSVR_static.bss ADDR(..vr_KSVR_static) + SIZEOF(..vr_KSVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_KSVR_staticSegmentBssStart = .;
            build/baserom/vr_KSVR_static.o (.sbss)
            build/baserom/vr_KSVR_static.o (.scommon)
            build/baserom/vr_KSVR_static.o (.bss)
            build/baserom/vr_KSVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_KSVR_staticSegmentBssEnd = .;
        _vr_KSVR_staticSegmentEnd = .;
    }
    _vr_KSVR_staticSegmentBssSize = ABSOLUTE( _vr_KSVR_staticSegmentBssEnd - _vr_KSVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_KSVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_KSVR_pal_static : AT(_RomSize)
    {
        _vr_KSVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_KSVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_KSVR_pal_static.o (.text)
        _vr_KSVR_pal_staticSegmentTextEnd = .;
    _vr_KSVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_KSVR_pal_staticSegmentTextEnd - _vr_KSVR_pal_staticSegmentTextStart );
        _vr_KSVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_KSVR_pal_static.o (.data)
        _vr_KSVR_pal_staticSegmentDataEnd = .;
    _vr_KSVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_KSVR_pal_staticSegmentDataEnd - _vr_KSVR_pal_staticSegmentDataStart );
        _vr_KSVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_KSVR_pal_static.o (.rodata)
        _vr_KSVR_pal_staticSegmentRoDataEnd = .;
    _vr_KSVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_KSVR_pal_staticSegmentRoDataEnd - _vr_KSVR_pal_staticSegmentRoDataStart );
        _vr_KSVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_KSVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_KSVR_pal_staticSegmentSDataEnd = .;
        _vr_KSVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_KSVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_KSVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_KSVR_pal_staticSegmentOvlEnd - _vr_KSVR_pal_staticSegmentTextStart );
    _vr_KSVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_KSVR_pal_static.bss ADDR(..vr_KSVR_pal_static) + SIZEOF(..vr_KSVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_KSVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_KSVR_pal_static.o (.sbss)
            build/baserom/vr_KSVR_pal_static.o (.scommon)
            build/baserom/vr_KSVR_pal_static.o (.bss)
            build/baserom/vr_KSVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_KSVR_pal_staticSegmentBssEnd = .;
        _vr_KSVR_pal_staticSegmentEnd = .;
    }
    _vr_KSVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_KSVR_pal_staticSegmentBssEnd - _vr_KSVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_GLVR_staticSegmentRomStart = _RomSize;
    ..vr_GLVR_static : AT(_RomSize)
    {
        _vr_GLVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_GLVR_staticSegmentTextStart = .;
            build/baserom/vr_GLVR_static.o (.text)
        _vr_GLVR_staticSegmentTextEnd = .;
    _vr_GLVR_staticSegmentTextSize = ABSOLUTE( _vr_GLVR_staticSegmentTextEnd - _vr_GLVR_staticSegmentTextStart );
        _vr_GLVR_staticSegmentDataStart = .;
            build/baserom/vr_GLVR_static.o (.data)
        _vr_GLVR_staticSegmentDataEnd = .;
    _vr_GLVR_staticSegmentDataSize = ABSOLUTE( _vr_GLVR_staticSegmentDataEnd - _vr_GLVR_staticSegmentDataStart );
        _vr_GLVR_staticSegmentRoDataStart = .;
            build/baserom/vr_GLVR_static.o (.rodata)
        _vr_GLVR_staticSegmentRoDataEnd = .;
    _vr_GLVR_staticSegmentRoDataSize = ABSOLUTE( _vr_GLVR_staticSegmentRoDataEnd - _vr_GLVR_staticSegmentRoDataStart );
        _vr_GLVR_staticSegmentSDataStart = .;
            build/baserom/vr_GLVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_GLVR_staticSegmentSDataEnd = .;
        _vr_GLVR_staticSegmentOvlStart = .;
            build/baserom/vr_GLVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_GLVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_GLVR_staticSegmentOvlEnd - _vr_GLVR_staticSegmentTextStart );
    _vr_GLVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_GLVR_static.bss ADDR(..vr_GLVR_static) + SIZEOF(..vr_GLVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_GLVR_staticSegmentBssStart = .;
            build/baserom/vr_GLVR_static.o (.sbss)
            build/baserom/vr_GLVR_static.o (.scommon)
            build/baserom/vr_GLVR_static.o (.bss)
            build/baserom/vr_GLVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_GLVR_staticSegmentBssEnd = .;
        _vr_GLVR_staticSegmentEnd = .;
    }
    _vr_GLVR_staticSegmentBssSize = ABSOLUTE( _vr_GLVR_staticSegmentBssEnd - _vr_GLVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_GLVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_GLVR_pal_static : AT(_RomSize)
    {
        _vr_GLVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_GLVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_GLVR_pal_static.o (.text)
        _vr_GLVR_pal_staticSegmentTextEnd = .;
    _vr_GLVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_GLVR_pal_staticSegmentTextEnd - _vr_GLVR_pal_staticSegmentTextStart );
        _vr_GLVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_GLVR_pal_static.o (.data)
        _vr_GLVR_pal_staticSegmentDataEnd = .;
    _vr_GLVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_GLVR_pal_staticSegmentDataEnd - _vr_GLVR_pal_staticSegmentDataStart );
        _vr_GLVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_GLVR_pal_static.o (.rodata)
        _vr_GLVR_pal_staticSegmentRoDataEnd = .;
    _vr_GLVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_GLVR_pal_staticSegmentRoDataEnd - _vr_GLVR_pal_staticSegmentRoDataStart );
        _vr_GLVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_GLVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_GLVR_pal_staticSegmentSDataEnd = .;
        _vr_GLVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_GLVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_GLVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_GLVR_pal_staticSegmentOvlEnd - _vr_GLVR_pal_staticSegmentTextStart );
    _vr_GLVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_GLVR_pal_static.bss ADDR(..vr_GLVR_pal_static) + SIZEOF(..vr_GLVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_GLVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_GLVR_pal_static.o (.sbss)
            build/baserom/vr_GLVR_pal_static.o (.scommon)
            build/baserom/vr_GLVR_pal_static.o (.bss)
            build/baserom/vr_GLVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_GLVR_pal_staticSegmentBssEnd = .;
        _vr_GLVR_pal_staticSegmentEnd = .;
    }
    _vr_GLVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_GLVR_pal_staticSegmentBssEnd - _vr_GLVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_ZRVR_staticSegmentRomStart = _RomSize;
    ..vr_ZRVR_static : AT(_RomSize)
    {
        _vr_ZRVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_ZRVR_staticSegmentTextStart = .;
            build/baserom/vr_ZRVR_static.o (.text)
        _vr_ZRVR_staticSegmentTextEnd = .;
    _vr_ZRVR_staticSegmentTextSize = ABSOLUTE( _vr_ZRVR_staticSegmentTextEnd - _vr_ZRVR_staticSegmentTextStart );
        _vr_ZRVR_staticSegmentDataStart = .;
            build/baserom/vr_ZRVR_static.o (.data)
        _vr_ZRVR_staticSegmentDataEnd = .;
    _vr_ZRVR_staticSegmentDataSize = ABSOLUTE( _vr_ZRVR_staticSegmentDataEnd - _vr_ZRVR_staticSegmentDataStart );
        _vr_ZRVR_staticSegmentRoDataStart = .;
            build/baserom/vr_ZRVR_static.o (.rodata)
        _vr_ZRVR_staticSegmentRoDataEnd = .;
    _vr_ZRVR_staticSegmentRoDataSize = ABSOLUTE( _vr_ZRVR_staticSegmentRoDataEnd - _vr_ZRVR_staticSegmentRoDataStart );
        _vr_ZRVR_staticSegmentSDataStart = .;
            build/baserom/vr_ZRVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_ZRVR_staticSegmentSDataEnd = .;
        _vr_ZRVR_staticSegmentOvlStart = .;
            build/baserom/vr_ZRVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_ZRVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_ZRVR_staticSegmentOvlEnd - _vr_ZRVR_staticSegmentTextStart );
    _vr_ZRVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_ZRVR_static.bss ADDR(..vr_ZRVR_static) + SIZEOF(..vr_ZRVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_ZRVR_staticSegmentBssStart = .;
            build/baserom/vr_ZRVR_static.o (.sbss)
            build/baserom/vr_ZRVR_static.o (.scommon)
            build/baserom/vr_ZRVR_static.o (.bss)
            build/baserom/vr_ZRVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_ZRVR_staticSegmentBssEnd = .;
        _vr_ZRVR_staticSegmentEnd = .;
    }
    _vr_ZRVR_staticSegmentBssSize = ABSOLUTE( _vr_ZRVR_staticSegmentBssEnd - _vr_ZRVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_ZRVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_ZRVR_pal_static : AT(_RomSize)
    {
        _vr_ZRVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_ZRVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_ZRVR_pal_static.o (.text)
        _vr_ZRVR_pal_staticSegmentTextEnd = .;
    _vr_ZRVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_ZRVR_pal_staticSegmentTextEnd - _vr_ZRVR_pal_staticSegmentTextStart );
        _vr_ZRVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_ZRVR_pal_static.o (.data)
        _vr_ZRVR_pal_staticSegmentDataEnd = .;
    _vr_ZRVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_ZRVR_pal_staticSegmentDataEnd - _vr_ZRVR_pal_staticSegmentDataStart );
        _vr_ZRVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_ZRVR_pal_static.o (.rodata)
        _vr_ZRVR_pal_staticSegmentRoDataEnd = .;
    _vr_ZRVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_ZRVR_pal_staticSegmentRoDataEnd - _vr_ZRVR_pal_staticSegmentRoDataStart );
        _vr_ZRVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_ZRVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_ZRVR_pal_staticSegmentSDataEnd = .;
        _vr_ZRVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_ZRVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_ZRVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_ZRVR_pal_staticSegmentOvlEnd - _vr_ZRVR_pal_staticSegmentTextStart );
    _vr_ZRVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_ZRVR_pal_static.bss ADDR(..vr_ZRVR_pal_static) + SIZEOF(..vr_ZRVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_ZRVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_ZRVR_pal_static.o (.sbss)
            build/baserom/vr_ZRVR_pal_static.o (.scommon)
            build/baserom/vr_ZRVR_pal_static.o (.bss)
            build/baserom/vr_ZRVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_ZRVR_pal_staticSegmentBssEnd = .;
        _vr_ZRVR_pal_staticSegmentEnd = .;
    }
    _vr_ZRVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_ZRVR_pal_staticSegmentBssEnd - _vr_ZRVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_DGVR_staticSegmentRomStart = _RomSize;
    ..vr_DGVR_static : AT(_RomSize)
    {
        _vr_DGVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_DGVR_staticSegmentTextStart = .;
            build/baserom/vr_DGVR_static.o (.text)
        _vr_DGVR_staticSegmentTextEnd = .;
    _vr_DGVR_staticSegmentTextSize = ABSOLUTE( _vr_DGVR_staticSegmentTextEnd - _vr_DGVR_staticSegmentTextStart );
        _vr_DGVR_staticSegmentDataStart = .;
            build/baserom/vr_DGVR_static.o (.data)
        _vr_DGVR_staticSegmentDataEnd = .;
    _vr_DGVR_staticSegmentDataSize = ABSOLUTE( _vr_DGVR_staticSegmentDataEnd - _vr_DGVR_staticSegmentDataStart );
        _vr_DGVR_staticSegmentRoDataStart = .;
            build/baserom/vr_DGVR_static.o (.rodata)
        _vr_DGVR_staticSegmentRoDataEnd = .;
    _vr_DGVR_staticSegmentRoDataSize = ABSOLUTE( _vr_DGVR_staticSegmentRoDataEnd - _vr_DGVR_staticSegmentRoDataStart );
        _vr_DGVR_staticSegmentSDataStart = .;
            build/baserom/vr_DGVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_DGVR_staticSegmentSDataEnd = .;
        _vr_DGVR_staticSegmentOvlStart = .;
            build/baserom/vr_DGVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_DGVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_DGVR_staticSegmentOvlEnd - _vr_DGVR_staticSegmentTextStart );
    _vr_DGVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_DGVR_static.bss ADDR(..vr_DGVR_static) + SIZEOF(..vr_DGVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_DGVR_staticSegmentBssStart = .;
            build/baserom/vr_DGVR_static.o (.sbss)
            build/baserom/vr_DGVR_static.o (.scommon)
            build/baserom/vr_DGVR_static.o (.bss)
            build/baserom/vr_DGVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_DGVR_staticSegmentBssEnd = .;
        _vr_DGVR_staticSegmentEnd = .;
    }
    _vr_DGVR_staticSegmentBssSize = ABSOLUTE( _vr_DGVR_staticSegmentBssEnd - _vr_DGVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_DGVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_DGVR_pal_static : AT(_RomSize)
    {
        _vr_DGVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_DGVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_DGVR_pal_static.o (.text)
        _vr_DGVR_pal_staticSegmentTextEnd = .;
    _vr_DGVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_DGVR_pal_staticSegmentTextEnd - _vr_DGVR_pal_staticSegmentTextStart );
        _vr_DGVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_DGVR_pal_static.o (.data)
        _vr_DGVR_pal_staticSegmentDataEnd = .;
    _vr_DGVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_DGVR_pal_staticSegmentDataEnd - _vr_DGVR_pal_staticSegmentDataStart );
        _vr_DGVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_DGVR_pal_static.o (.rodata)
        _vr_DGVR_pal_staticSegmentRoDataEnd = .;
    _vr_DGVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_DGVR_pal_staticSegmentRoDataEnd - _vr_DGVR_pal_staticSegmentRoDataStart );
        _vr_DGVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_DGVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_DGVR_pal_staticSegmentSDataEnd = .;
        _vr_DGVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_DGVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_DGVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_DGVR_pal_staticSegmentOvlEnd - _vr_DGVR_pal_staticSegmentTextStart );
    _vr_DGVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_DGVR_pal_static.bss ADDR(..vr_DGVR_pal_static) + SIZEOF(..vr_DGVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_DGVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_DGVR_pal_static.o (.sbss)
            build/baserom/vr_DGVR_pal_static.o (.scommon)
            build/baserom/vr_DGVR_pal_static.o (.bss)
            build/baserom/vr_DGVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_DGVR_pal_staticSegmentBssEnd = .;
        _vr_DGVR_pal_staticSegmentEnd = .;
    }
    _vr_DGVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_DGVR_pal_staticSegmentBssEnd - _vr_DGVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_ALVR_staticSegmentRomStart = _RomSize;
    ..vr_ALVR_static : AT(_RomSize)
    {
        _vr_ALVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_ALVR_staticSegmentTextStart = .;
            build/baserom/vr_ALVR_static.o (.text)
        _vr_ALVR_staticSegmentTextEnd = .;
    _vr_ALVR_staticSegmentTextSize = ABSOLUTE( _vr_ALVR_staticSegmentTextEnd - _vr_ALVR_staticSegmentTextStart );
        _vr_ALVR_staticSegmentDataStart = .;
            build/baserom/vr_ALVR_static.o (.data)
        _vr_ALVR_staticSegmentDataEnd = .;
    _vr_ALVR_staticSegmentDataSize = ABSOLUTE( _vr_ALVR_staticSegmentDataEnd - _vr_ALVR_staticSegmentDataStart );
        _vr_ALVR_staticSegmentRoDataStart = .;
            build/baserom/vr_ALVR_static.o (.rodata)
        _vr_ALVR_staticSegmentRoDataEnd = .;
    _vr_ALVR_staticSegmentRoDataSize = ABSOLUTE( _vr_ALVR_staticSegmentRoDataEnd - _vr_ALVR_staticSegmentRoDataStart );
        _vr_ALVR_staticSegmentSDataStart = .;
            build/baserom/vr_ALVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_ALVR_staticSegmentSDataEnd = .;
        _vr_ALVR_staticSegmentOvlStart = .;
            build/baserom/vr_ALVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_ALVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_ALVR_staticSegmentOvlEnd - _vr_ALVR_staticSegmentTextStart );
    _vr_ALVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_ALVR_static.bss ADDR(..vr_ALVR_static) + SIZEOF(..vr_ALVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_ALVR_staticSegmentBssStart = .;
            build/baserom/vr_ALVR_static.o (.sbss)
            build/baserom/vr_ALVR_static.o (.scommon)
            build/baserom/vr_ALVR_static.o (.bss)
            build/baserom/vr_ALVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_ALVR_staticSegmentBssEnd = .;
        _vr_ALVR_staticSegmentEnd = .;
    }
    _vr_ALVR_staticSegmentBssSize = ABSOLUTE( _vr_ALVR_staticSegmentBssEnd - _vr_ALVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_ALVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_ALVR_pal_static : AT(_RomSize)
    {
        _vr_ALVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_ALVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_ALVR_pal_static.o (.text)
        _vr_ALVR_pal_staticSegmentTextEnd = .;
    _vr_ALVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_ALVR_pal_staticSegmentTextEnd - _vr_ALVR_pal_staticSegmentTextStart );
        _vr_ALVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_ALVR_pal_static.o (.data)
        _vr_ALVR_pal_staticSegmentDataEnd = .;
    _vr_ALVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_ALVR_pal_staticSegmentDataEnd - _vr_ALVR_pal_staticSegmentDataStart );
        _vr_ALVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_ALVR_pal_static.o (.rodata)
        _vr_ALVR_pal_staticSegmentRoDataEnd = .;
    _vr_ALVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_ALVR_pal_staticSegmentRoDataEnd - _vr_ALVR_pal_staticSegmentRoDataStart );
        _vr_ALVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_ALVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_ALVR_pal_staticSegmentSDataEnd = .;
        _vr_ALVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_ALVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_ALVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_ALVR_pal_staticSegmentOvlEnd - _vr_ALVR_pal_staticSegmentTextStart );
    _vr_ALVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_ALVR_pal_static.bss ADDR(..vr_ALVR_pal_static) + SIZEOF(..vr_ALVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_ALVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_ALVR_pal_static.o (.sbss)
            build/baserom/vr_ALVR_pal_static.o (.scommon)
            build/baserom/vr_ALVR_pal_static.o (.bss)
            build/baserom/vr_ALVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_ALVR_pal_staticSegmentBssEnd = .;
        _vr_ALVR_pal_staticSegmentEnd = .;
    }
    _vr_ALVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_ALVR_pal_staticSegmentBssEnd - _vr_ALVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_NSVR_staticSegmentRomStart = _RomSize;
    ..vr_NSVR_static : AT(_RomSize)
    {
        _vr_NSVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_NSVR_staticSegmentTextStart = .;
            build/baserom/vr_NSVR_static.o (.text)
        _vr_NSVR_staticSegmentTextEnd = .;
    _vr_NSVR_staticSegmentTextSize = ABSOLUTE( _vr_NSVR_staticSegmentTextEnd - _vr_NSVR_staticSegmentTextStart );
        _vr_NSVR_staticSegmentDataStart = .;
            build/baserom/vr_NSVR_static.o (.data)
        _vr_NSVR_staticSegmentDataEnd = .;
    _vr_NSVR_staticSegmentDataSize = ABSOLUTE( _vr_NSVR_staticSegmentDataEnd - _vr_NSVR_staticSegmentDataStart );
        _vr_NSVR_staticSegmentRoDataStart = .;
            build/baserom/vr_NSVR_static.o (.rodata)
        _vr_NSVR_staticSegmentRoDataEnd = .;
    _vr_NSVR_staticSegmentRoDataSize = ABSOLUTE( _vr_NSVR_staticSegmentRoDataEnd - _vr_NSVR_staticSegmentRoDataStart );
        _vr_NSVR_staticSegmentSDataStart = .;
            build/baserom/vr_NSVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_NSVR_staticSegmentSDataEnd = .;
        _vr_NSVR_staticSegmentOvlStart = .;
            build/baserom/vr_NSVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_NSVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_NSVR_staticSegmentOvlEnd - _vr_NSVR_staticSegmentTextStart );
    _vr_NSVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_NSVR_static.bss ADDR(..vr_NSVR_static) + SIZEOF(..vr_NSVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_NSVR_staticSegmentBssStart = .;
            build/baserom/vr_NSVR_static.o (.sbss)
            build/baserom/vr_NSVR_static.o (.scommon)
            build/baserom/vr_NSVR_static.o (.bss)
            build/baserom/vr_NSVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_NSVR_staticSegmentBssEnd = .;
        _vr_NSVR_staticSegmentEnd = .;
    }
    _vr_NSVR_staticSegmentBssSize = ABSOLUTE( _vr_NSVR_staticSegmentBssEnd - _vr_NSVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_NSVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_NSVR_pal_static : AT(_RomSize)
    {
        _vr_NSVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_NSVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_NSVR_pal_static.o (.text)
        _vr_NSVR_pal_staticSegmentTextEnd = .;
    _vr_NSVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_NSVR_pal_staticSegmentTextEnd - _vr_NSVR_pal_staticSegmentTextStart );
        _vr_NSVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_NSVR_pal_static.o (.data)
        _vr_NSVR_pal_staticSegmentDataEnd = .;
    _vr_NSVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_NSVR_pal_staticSegmentDataEnd - _vr_NSVR_pal_staticSegmentDataStart );
        _vr_NSVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_NSVR_pal_static.o (.rodata)
        _vr_NSVR_pal_staticSegmentRoDataEnd = .;
    _vr_NSVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_NSVR_pal_staticSegmentRoDataEnd - _vr_NSVR_pal_staticSegmentRoDataStart );
        _vr_NSVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_NSVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_NSVR_pal_staticSegmentSDataEnd = .;
        _vr_NSVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_NSVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_NSVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_NSVR_pal_staticSegmentOvlEnd - _vr_NSVR_pal_staticSegmentTextStart );
    _vr_NSVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_NSVR_pal_static.bss ADDR(..vr_NSVR_pal_static) + SIZEOF(..vr_NSVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_NSVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_NSVR_pal_static.o (.sbss)
            build/baserom/vr_NSVR_pal_static.o (.scommon)
            build/baserom/vr_NSVR_pal_static.o (.bss)
            build/baserom/vr_NSVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_NSVR_pal_staticSegmentBssEnd = .;
        _vr_NSVR_pal_staticSegmentEnd = .;
    }
    _vr_NSVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_NSVR_pal_staticSegmentBssEnd - _vr_NSVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_LBVR_staticSegmentRomStart = _RomSize;
    ..vr_LBVR_static : AT(_RomSize)
    {
        _vr_LBVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_LBVR_staticSegmentTextStart = .;
            build/baserom/vr_LBVR_static.o (.text)
        _vr_LBVR_staticSegmentTextEnd = .;
    _vr_LBVR_staticSegmentTextSize = ABSOLUTE( _vr_LBVR_staticSegmentTextEnd - _vr_LBVR_staticSegmentTextStart );
        _vr_LBVR_staticSegmentDataStart = .;
            build/baserom/vr_LBVR_static.o (.data)
        _vr_LBVR_staticSegmentDataEnd = .;
    _vr_LBVR_staticSegmentDataSize = ABSOLUTE( _vr_LBVR_staticSegmentDataEnd - _vr_LBVR_staticSegmentDataStart );
        _vr_LBVR_staticSegmentRoDataStart = .;
            build/baserom/vr_LBVR_static.o (.rodata)
        _vr_LBVR_staticSegmentRoDataEnd = .;
    _vr_LBVR_staticSegmentRoDataSize = ABSOLUTE( _vr_LBVR_staticSegmentRoDataEnd - _vr_LBVR_staticSegmentRoDataStart );
        _vr_LBVR_staticSegmentSDataStart = .;
            build/baserom/vr_LBVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_LBVR_staticSegmentSDataEnd = .;
        _vr_LBVR_staticSegmentOvlStart = .;
            build/baserom/vr_LBVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_LBVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_LBVR_staticSegmentOvlEnd - _vr_LBVR_staticSegmentTextStart );
    _vr_LBVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_LBVR_static.bss ADDR(..vr_LBVR_static) + SIZEOF(..vr_LBVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_LBVR_staticSegmentBssStart = .;
            build/baserom/vr_LBVR_static.o (.sbss)
            build/baserom/vr_LBVR_static.o (.scommon)
            build/baserom/vr_LBVR_static.o (.bss)
            build/baserom/vr_LBVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_LBVR_staticSegmentBssEnd = .;
        _vr_LBVR_staticSegmentEnd = .;
    }
    _vr_LBVR_staticSegmentBssSize = ABSOLUTE( _vr_LBVR_staticSegmentBssEnd - _vr_LBVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_LBVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_LBVR_pal_static : AT(_RomSize)
    {
        _vr_LBVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_LBVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_LBVR_pal_static.o (.text)
        _vr_LBVR_pal_staticSegmentTextEnd = .;
    _vr_LBVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_LBVR_pal_staticSegmentTextEnd - _vr_LBVR_pal_staticSegmentTextStart );
        _vr_LBVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_LBVR_pal_static.o (.data)
        _vr_LBVR_pal_staticSegmentDataEnd = .;
    _vr_LBVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_LBVR_pal_staticSegmentDataEnd - _vr_LBVR_pal_staticSegmentDataStart );
        _vr_LBVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_LBVR_pal_static.o (.rodata)
        _vr_LBVR_pal_staticSegmentRoDataEnd = .;
    _vr_LBVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_LBVR_pal_staticSegmentRoDataEnd - _vr_LBVR_pal_staticSegmentRoDataStart );
        _vr_LBVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_LBVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_LBVR_pal_staticSegmentSDataEnd = .;
        _vr_LBVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_LBVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_LBVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_LBVR_pal_staticSegmentOvlEnd - _vr_LBVR_pal_staticSegmentTextStart );
    _vr_LBVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_LBVR_pal_static.bss ADDR(..vr_LBVR_pal_static) + SIZEOF(..vr_LBVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_LBVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_LBVR_pal_static.o (.sbss)
            build/baserom/vr_LBVR_pal_static.o (.scommon)
            build/baserom/vr_LBVR_pal_static.o (.bss)
            build/baserom/vr_LBVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_LBVR_pal_staticSegmentBssEnd = .;
        _vr_LBVR_pal_staticSegmentEnd = .;
    }
    _vr_LBVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_LBVR_pal_staticSegmentBssEnd - _vr_LBVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_TTVR_staticSegmentRomStart = _RomSize;
    ..vr_TTVR_static : AT(_RomSize)
    {
        _vr_TTVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_TTVR_staticSegmentTextStart = .;
            build/baserom/vr_TTVR_static.o (.text)
        _vr_TTVR_staticSegmentTextEnd = .;
    _vr_TTVR_staticSegmentTextSize = ABSOLUTE( _vr_TTVR_staticSegmentTextEnd - _vr_TTVR_staticSegmentTextStart );
        _vr_TTVR_staticSegmentDataStart = .;
            build/baserom/vr_TTVR_static.o (.data)
        _vr_TTVR_staticSegmentDataEnd = .;
    _vr_TTVR_staticSegmentDataSize = ABSOLUTE( _vr_TTVR_staticSegmentDataEnd - _vr_TTVR_staticSegmentDataStart );
        _vr_TTVR_staticSegmentRoDataStart = .;
            build/baserom/vr_TTVR_static.o (.rodata)
        _vr_TTVR_staticSegmentRoDataEnd = .;
    _vr_TTVR_staticSegmentRoDataSize = ABSOLUTE( _vr_TTVR_staticSegmentRoDataEnd - _vr_TTVR_staticSegmentRoDataStart );
        _vr_TTVR_staticSegmentSDataStart = .;
            build/baserom/vr_TTVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_TTVR_staticSegmentSDataEnd = .;
        _vr_TTVR_staticSegmentOvlStart = .;
            build/baserom/vr_TTVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_TTVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_TTVR_staticSegmentOvlEnd - _vr_TTVR_staticSegmentTextStart );
    _vr_TTVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_TTVR_static.bss ADDR(..vr_TTVR_static) + SIZEOF(..vr_TTVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_TTVR_staticSegmentBssStart = .;
            build/baserom/vr_TTVR_static.o (.sbss)
            build/baserom/vr_TTVR_static.o (.scommon)
            build/baserom/vr_TTVR_static.o (.bss)
            build/baserom/vr_TTVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_TTVR_staticSegmentBssEnd = .;
        _vr_TTVR_staticSegmentEnd = .;
    }
    _vr_TTVR_staticSegmentBssSize = ABSOLUTE( _vr_TTVR_staticSegmentBssEnd - _vr_TTVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_TTVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_TTVR_pal_static : AT(_RomSize)
    {
        _vr_TTVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_TTVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_TTVR_pal_static.o (.text)
        _vr_TTVR_pal_staticSegmentTextEnd = .;
    _vr_TTVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_TTVR_pal_staticSegmentTextEnd - _vr_TTVR_pal_staticSegmentTextStart );
        _vr_TTVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_TTVR_pal_static.o (.data)
        _vr_TTVR_pal_staticSegmentDataEnd = .;
    _vr_TTVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_TTVR_pal_staticSegmentDataEnd - _vr_TTVR_pal_staticSegmentDataStart );
        _vr_TTVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_TTVR_pal_static.o (.rodata)
        _vr_TTVR_pal_staticSegmentRoDataEnd = .;
    _vr_TTVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_TTVR_pal_staticSegmentRoDataEnd - _vr_TTVR_pal_staticSegmentRoDataStart );
        _vr_TTVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_TTVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_TTVR_pal_staticSegmentSDataEnd = .;
        _vr_TTVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_TTVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_TTVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_TTVR_pal_staticSegmentOvlEnd - _vr_TTVR_pal_staticSegmentTextStart );
    _vr_TTVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_TTVR_pal_static.bss ADDR(..vr_TTVR_pal_static) + SIZEOF(..vr_TTVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_TTVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_TTVR_pal_static.o (.sbss)
            build/baserom/vr_TTVR_pal_static.o (.scommon)
            build/baserom/vr_TTVR_pal_static.o (.bss)
            build/baserom/vr_TTVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_TTVR_pal_staticSegmentBssEnd = .;
        _vr_TTVR_pal_staticSegmentEnd = .;
    }
    _vr_TTVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_TTVR_pal_staticSegmentBssEnd - _vr_TTVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_FCVR_staticSegmentRomStart = _RomSize;
    ..vr_FCVR_static : AT(_RomSize)
    {
        _vr_FCVR_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_FCVR_staticSegmentTextStart = .;
            build/baserom/vr_FCVR_static.o (.text)
        _vr_FCVR_staticSegmentTextEnd = .;
    _vr_FCVR_staticSegmentTextSize = ABSOLUTE( _vr_FCVR_staticSegmentTextEnd - _vr_FCVR_staticSegmentTextStart );
        _vr_FCVR_staticSegmentDataStart = .;
            build/baserom/vr_FCVR_static.o (.data)
        _vr_FCVR_staticSegmentDataEnd = .;
    _vr_FCVR_staticSegmentDataSize = ABSOLUTE( _vr_FCVR_staticSegmentDataEnd - _vr_FCVR_staticSegmentDataStart );
        _vr_FCVR_staticSegmentRoDataStart = .;
            build/baserom/vr_FCVR_static.o (.rodata)
        _vr_FCVR_staticSegmentRoDataEnd = .;
    _vr_FCVR_staticSegmentRoDataSize = ABSOLUTE( _vr_FCVR_staticSegmentRoDataEnd - _vr_FCVR_staticSegmentRoDataStart );
        _vr_FCVR_staticSegmentSDataStart = .;
            build/baserom/vr_FCVR_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_FCVR_staticSegmentSDataEnd = .;
        _vr_FCVR_staticSegmentOvlStart = .;
            build/baserom/vr_FCVR_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_FCVR_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_FCVR_staticSegmentOvlEnd - _vr_FCVR_staticSegmentTextStart );
    _vr_FCVR_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_FCVR_static.bss ADDR(..vr_FCVR_static) + SIZEOF(..vr_FCVR_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_FCVR_staticSegmentBssStart = .;
            build/baserom/vr_FCVR_static.o (.sbss)
            build/baserom/vr_FCVR_static.o (.scommon)
            build/baserom/vr_FCVR_static.o (.bss)
            build/baserom/vr_FCVR_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_FCVR_staticSegmentBssEnd = .;
        _vr_FCVR_staticSegmentEnd = .;
    }
    _vr_FCVR_staticSegmentBssSize = ABSOLUTE( _vr_FCVR_staticSegmentBssEnd - _vr_FCVR_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _vr_FCVR_pal_staticSegmentRomStart = _RomSize;
    ..vr_FCVR_pal_static : AT(_RomSize)
    {
        _vr_FCVR_pal_staticSegmentStart = .;
        . = ALIGN(0x10);
        _vr_FCVR_pal_staticSegmentTextStart = .;
            build/baserom/vr_FCVR_pal_static.o (.text)
        _vr_FCVR_pal_staticSegmentTextEnd = .;
    _vr_FCVR_pal_staticSegmentTextSize = ABSOLUTE( _vr_FCVR_pal_staticSegmentTextEnd - _vr_FCVR_pal_staticSegmentTextStart );
        _vr_FCVR_pal_staticSegmentDataStart = .;
            build/baserom/vr_FCVR_pal_static.o (.data)
        _vr_FCVR_pal_staticSegmentDataEnd = .;
    _vr_FCVR_pal_staticSegmentDataSize = ABSOLUTE( _vr_FCVR_pal_staticSegmentDataEnd - _vr_FCVR_pal_staticSegmentDataStart );
        _vr_FCVR_pal_staticSegmentRoDataStart = .;
            build/baserom/vr_FCVR_pal_static.o (.rodata)
        _vr_FCVR_pal_staticSegmentRoDataEnd = .;
    _vr_FCVR_pal_staticSegmentRoDataSize = ABSOLUTE( _vr_FCVR_pal_staticSegmentRoDataEnd - _vr_FCVR_pal_staticSegmentRoDataStart );
        _vr_FCVR_pal_staticSegmentSDataStart = .;
            build/baserom/vr_FCVR_pal_static.o (.sdata)
        . = ALIGN(0x10);
        _vr_FCVR_pal_staticSegmentSDataEnd = .;
        _vr_FCVR_pal_staticSegmentOvlStart = .;
            build/baserom/vr_FCVR_pal_static.o (.ovl)
        . = ALIGN(0x10);
        _vr_FCVR_pal_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _vr_FCVR_pal_staticSegmentOvlEnd - _vr_FCVR_pal_staticSegmentTextStart );
    _vr_FCVR_pal_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..vr_FCVR_pal_static.bss ADDR(..vr_FCVR_pal_static) + SIZEOF(..vr_FCVR_pal_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _vr_FCVR_pal_staticSegmentBssStart = .;
            build/baserom/vr_FCVR_pal_static.o (.sbss)
            build/baserom/vr_FCVR_pal_static.o (.scommon)
            build/baserom/vr_FCVR_pal_static.o (.bss)
            build/baserom/vr_FCVR_pal_static.o (COMMON)
        . = ALIGN(0x10);
        _vr_FCVR_pal_staticSegmentBssEnd = .;
        _vr_FCVR_pal_staticSegmentEnd = .;
    }
    _vr_FCVR_pal_staticSegmentBssSize = ABSOLUTE( _vr_FCVR_pal_staticSegmentBssEnd - _vr_FCVR_pal_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _elf_message_fieldSegmentRomStart = _RomSize;
    ..elf_message_field : AT(_RomSize)
    {
        _elf_message_fieldSegmentStart = .;
        . = ALIGN(0x10);
        _elf_message_fieldSegmentTextStart = .;
            build/baserom/elf_message_field.o (.text)
        _elf_message_fieldSegmentTextEnd = .;
    _elf_message_fieldSegmentTextSize = ABSOLUTE( _elf_message_fieldSegmentTextEnd - _elf_message_fieldSegmentTextStart );
        _elf_message_fieldSegmentDataStart = .;
            build/baserom/elf_message_field.o (.data)
        _elf_message_fieldSegmentDataEnd = .;
    _elf_message_fieldSegmentDataSize = ABSOLUTE( _elf_message_fieldSegmentDataEnd - _elf_message_fieldSegmentDataStart );
        _elf_message_fieldSegmentRoDataStart = .;
            build/baserom/elf_message_field.o (.rodata)
        _elf_message_fieldSegmentRoDataEnd = .;
    _elf_message_fieldSegmentRoDataSize = ABSOLUTE( _elf_message_fieldSegmentRoDataEnd - _elf_message_fieldSegmentRoDataStart );
        _elf_message_fieldSegmentSDataStart = .;
            build/baserom/elf_message_field.o (.sdata)
        . = ALIGN(0x10);
        _elf_message_fieldSegmentSDataEnd = .;
        _elf_message_fieldSegmentOvlStart = .;
            build/baserom/elf_message_field.o (.ovl)
        . = ALIGN(0x10);
        _elf_message_fieldSegmentOvlEnd = .;
    }
    _RomSize += ( _elf_message_fieldSegmentOvlEnd - _elf_message_fieldSegmentTextStart );
    _elf_message_fieldSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..elf_message_field.bss ADDR(..elf_message_field) + SIZEOF(..elf_message_field) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _elf_message_fieldSegmentBssStart = .;
            build/baserom/elf_message_field.o (.sbss)
            build/baserom/elf_message_field.o (.scommon)
            build/baserom/elf_message_field.o (.bss)
            build/baserom/elf_message_field.o (COMMON)
        . = ALIGN(0x10);
        _elf_message_fieldSegmentBssEnd = .;
        _elf_message_fieldSegmentEnd = .;
    }
    _elf_message_fieldSegmentBssSize = ABSOLUTE( _elf_message_fieldSegmentBssEnd - _elf_message_fieldSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _elf_message_ydanSegmentRomStart = _RomSize;
    ..elf_message_ydan : AT(_RomSize)
    {
        _elf_message_ydanSegmentStart = .;
        . = ALIGN(0x10);
        _elf_message_ydanSegmentTextStart = .;
            build/baserom/elf_message_ydan.o (.text)
        _elf_message_ydanSegmentTextEnd = .;
    _elf_message_ydanSegmentTextSize = ABSOLUTE( _elf_message_ydanSegmentTextEnd - _elf_message_ydanSegmentTextStart );
        _elf_message_ydanSegmentDataStart = .;
            build/baserom/elf_message_ydan.o (.data)
        _elf_message_ydanSegmentDataEnd = .;
    _elf_message_ydanSegmentDataSize = ABSOLUTE( _elf_message_ydanSegmentDataEnd - _elf_message_ydanSegmentDataStart );
        _elf_message_ydanSegmentRoDataStart = .;
            build/baserom/elf_message_ydan.o (.rodata)
        _elf_message_ydanSegmentRoDataEnd = .;
    _elf_message_ydanSegmentRoDataSize = ABSOLUTE( _elf_message_ydanSegmentRoDataEnd - _elf_message_ydanSegmentRoDataStart );
        _elf_message_ydanSegmentSDataStart = .;
            build/baserom/elf_message_ydan.o (.sdata)
        . = ALIGN(0x10);
        _elf_message_ydanSegmentSDataEnd = .;
        _elf_message_ydanSegmentOvlStart = .;
            build/baserom/elf_message_ydan.o (.ovl)
        . = ALIGN(0x10);
        _elf_message_ydanSegmentOvlEnd = .;
    }
    _RomSize += ( _elf_message_ydanSegmentOvlEnd - _elf_message_ydanSegmentTextStart );
    _elf_message_ydanSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..elf_message_ydan.bss ADDR(..elf_message_ydan) + SIZEOF(..elf_message_ydan) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _elf_message_ydanSegmentBssStart = .;
            build/baserom/elf_message_ydan.o (.sbss)
            build/baserom/elf_message_ydan.o (.scommon)
            build/baserom/elf_message_ydan.o (.bss)
            build/baserom/elf_message_ydan.o (COMMON)
        . = ALIGN(0x10);
        _elf_message_ydanSegmentBssEnd = .;
        _elf_message_ydanSegmentEnd = .;
    }
    _elf_message_ydanSegmentBssSize = ABSOLUTE( _elf_message_ydanSegmentBssEnd - _elf_message_ydanSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_sceneSegmentRomStart = _RomSize;
    ..ydan_scene 0x02000000 : AT(_RomSize)
    {
        _ydan_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _ydan_sceneSegmentTextStart = .;
            build/scenes/dungeons/ydan/ydan_scene.o (.text)
        _ydan_sceneSegmentTextEnd = .;
    _ydan_sceneSegmentTextSize = ABSOLUTE( _ydan_sceneSegmentTextEnd - _ydan_sceneSegmentTextStart );
        _ydan_sceneSegmentDataStart = .;
            build/scenes/dungeons/ydan/ydan_scene.o (.data)
        _ydan_sceneSegmentDataEnd = .;
    _ydan_sceneSegmentDataSize = ABSOLUTE( _ydan_sceneSegmentDataEnd - _ydan_sceneSegmentDataStart );
        _ydan_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/ydan/ydan_scene.o (.rodata)
        _ydan_sceneSegmentRoDataEnd = .;
    _ydan_sceneSegmentRoDataSize = ABSOLUTE( _ydan_sceneSegmentRoDataEnd - _ydan_sceneSegmentRoDataStart );
        _ydan_sceneSegmentSDataStart = .;
            build/scenes/dungeons/ydan/ydan_scene.o (.sdata)
        . = ALIGN(0x10);
        _ydan_sceneSegmentSDataEnd = .;
        _ydan_sceneSegmentOvlStart = .;
            build/scenes/dungeons/ydan/ydan_scene.o (.ovl)
        . = ALIGN(0x10);
        _ydan_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_sceneSegmentOvlEnd - _ydan_sceneSegmentTextStart );
    _ydan_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_scene.bss ADDR(..ydan_scene) + SIZEOF(..ydan_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_sceneSegmentBssStart = .;
            build/scenes/dungeons/ydan/ydan_scene.o (.sbss)
            build/scenes/dungeons/ydan/ydan_scene.o (.scommon)
            build/scenes/dungeons/ydan/ydan_scene.o (.bss)
            build/scenes/dungeons/ydan/ydan_scene.o (COMMON)
        . = ALIGN(0x10);
        _ydan_sceneSegmentBssEnd = .;
        _ydan_sceneSegmentEnd = .;
    }
    _ydan_sceneSegmentBssSize = ABSOLUTE( _ydan_sceneSegmentBssEnd - _ydan_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_room_0SegmentRomStart = _RomSize;
    ..ydan_room_0 0x03000000 : AT(_RomSize)
    {
        _ydan_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _ydan_room_0SegmentTextStart = .;
            build/scenes/dungeons/ydan/ydan_room_0.o (.text)
        _ydan_room_0SegmentTextEnd = .;
    _ydan_room_0SegmentTextSize = ABSOLUTE( _ydan_room_0SegmentTextEnd - _ydan_room_0SegmentTextStart );
        _ydan_room_0SegmentDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_0.o (.data)
        _ydan_room_0SegmentDataEnd = .;
    _ydan_room_0SegmentDataSize = ABSOLUTE( _ydan_room_0SegmentDataEnd - _ydan_room_0SegmentDataStart );
        _ydan_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_0.o (.rodata)
        _ydan_room_0SegmentRoDataEnd = .;
    _ydan_room_0SegmentRoDataSize = ABSOLUTE( _ydan_room_0SegmentRoDataEnd - _ydan_room_0SegmentRoDataStart );
        _ydan_room_0SegmentSDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_0.o (.sdata)
        . = ALIGN(0x10);
        _ydan_room_0SegmentSDataEnd = .;
        _ydan_room_0SegmentOvlStart = .;
            build/scenes/dungeons/ydan/ydan_room_0.o (.ovl)
        . = ALIGN(0x10);
        _ydan_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_room_0SegmentOvlEnd - _ydan_room_0SegmentTextStart );
    _ydan_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_room_0.bss ADDR(..ydan_room_0) + SIZEOF(..ydan_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_room_0SegmentBssStart = .;
            build/scenes/dungeons/ydan/ydan_room_0.o (.sbss)
            build/scenes/dungeons/ydan/ydan_room_0.o (.scommon)
            build/scenes/dungeons/ydan/ydan_room_0.o (.bss)
            build/scenes/dungeons/ydan/ydan_room_0.o (COMMON)
        . = ALIGN(0x10);
        _ydan_room_0SegmentBssEnd = .;
        _ydan_room_0SegmentEnd = .;
    }
    _ydan_room_0SegmentBssSize = ABSOLUTE( _ydan_room_0SegmentBssEnd - _ydan_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_room_1SegmentRomStart = _RomSize;
    ..ydan_room_1 0x03000000 : AT(_RomSize)
    {
        _ydan_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _ydan_room_1SegmentTextStart = .;
            build/scenes/dungeons/ydan/ydan_room_1.o (.text)
        _ydan_room_1SegmentTextEnd = .;
    _ydan_room_1SegmentTextSize = ABSOLUTE( _ydan_room_1SegmentTextEnd - _ydan_room_1SegmentTextStart );
        _ydan_room_1SegmentDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_1.o (.data)
        _ydan_room_1SegmentDataEnd = .;
    _ydan_room_1SegmentDataSize = ABSOLUTE( _ydan_room_1SegmentDataEnd - _ydan_room_1SegmentDataStart );
        _ydan_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_1.o (.rodata)
        _ydan_room_1SegmentRoDataEnd = .;
    _ydan_room_1SegmentRoDataSize = ABSOLUTE( _ydan_room_1SegmentRoDataEnd - _ydan_room_1SegmentRoDataStart );
        _ydan_room_1SegmentSDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_1.o (.sdata)
        . = ALIGN(0x10);
        _ydan_room_1SegmentSDataEnd = .;
        _ydan_room_1SegmentOvlStart = .;
            build/scenes/dungeons/ydan/ydan_room_1.o (.ovl)
        . = ALIGN(0x10);
        _ydan_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_room_1SegmentOvlEnd - _ydan_room_1SegmentTextStart );
    _ydan_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_room_1.bss ADDR(..ydan_room_1) + SIZEOF(..ydan_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_room_1SegmentBssStart = .;
            build/scenes/dungeons/ydan/ydan_room_1.o (.sbss)
            build/scenes/dungeons/ydan/ydan_room_1.o (.scommon)
            build/scenes/dungeons/ydan/ydan_room_1.o (.bss)
            build/scenes/dungeons/ydan/ydan_room_1.o (COMMON)
        . = ALIGN(0x10);
        _ydan_room_1SegmentBssEnd = .;
        _ydan_room_1SegmentEnd = .;
    }
    _ydan_room_1SegmentBssSize = ABSOLUTE( _ydan_room_1SegmentBssEnd - _ydan_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_room_2SegmentRomStart = _RomSize;
    ..ydan_room_2 0x03000000 : AT(_RomSize)
    {
        _ydan_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _ydan_room_2SegmentTextStart = .;
            build/scenes/dungeons/ydan/ydan_room_2.o (.text)
        _ydan_room_2SegmentTextEnd = .;
    _ydan_room_2SegmentTextSize = ABSOLUTE( _ydan_room_2SegmentTextEnd - _ydan_room_2SegmentTextStart );
        _ydan_room_2SegmentDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_2.o (.data)
        _ydan_room_2SegmentDataEnd = .;
    _ydan_room_2SegmentDataSize = ABSOLUTE( _ydan_room_2SegmentDataEnd - _ydan_room_2SegmentDataStart );
        _ydan_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_2.o (.rodata)
        _ydan_room_2SegmentRoDataEnd = .;
    _ydan_room_2SegmentRoDataSize = ABSOLUTE( _ydan_room_2SegmentRoDataEnd - _ydan_room_2SegmentRoDataStart );
        _ydan_room_2SegmentSDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_2.o (.sdata)
        . = ALIGN(0x10);
        _ydan_room_2SegmentSDataEnd = .;
        _ydan_room_2SegmentOvlStart = .;
            build/scenes/dungeons/ydan/ydan_room_2.o (.ovl)
        . = ALIGN(0x10);
        _ydan_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_room_2SegmentOvlEnd - _ydan_room_2SegmentTextStart );
    _ydan_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_room_2.bss ADDR(..ydan_room_2) + SIZEOF(..ydan_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_room_2SegmentBssStart = .;
            build/scenes/dungeons/ydan/ydan_room_2.o (.sbss)
            build/scenes/dungeons/ydan/ydan_room_2.o (.scommon)
            build/scenes/dungeons/ydan/ydan_room_2.o (.bss)
            build/scenes/dungeons/ydan/ydan_room_2.o (COMMON)
        . = ALIGN(0x10);
        _ydan_room_2SegmentBssEnd = .;
        _ydan_room_2SegmentEnd = .;
    }
    _ydan_room_2SegmentBssSize = ABSOLUTE( _ydan_room_2SegmentBssEnd - _ydan_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_room_3SegmentRomStart = _RomSize;
    ..ydan_room_3 0x03000000 : AT(_RomSize)
    {
        _ydan_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _ydan_room_3SegmentTextStart = .;
            build/scenes/dungeons/ydan/ydan_room_3.o (.text)
        _ydan_room_3SegmentTextEnd = .;
    _ydan_room_3SegmentTextSize = ABSOLUTE( _ydan_room_3SegmentTextEnd - _ydan_room_3SegmentTextStart );
        _ydan_room_3SegmentDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_3.o (.data)
        _ydan_room_3SegmentDataEnd = .;
    _ydan_room_3SegmentDataSize = ABSOLUTE( _ydan_room_3SegmentDataEnd - _ydan_room_3SegmentDataStart );
        _ydan_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_3.o (.rodata)
        _ydan_room_3SegmentRoDataEnd = .;
    _ydan_room_3SegmentRoDataSize = ABSOLUTE( _ydan_room_3SegmentRoDataEnd - _ydan_room_3SegmentRoDataStart );
        _ydan_room_3SegmentSDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_3.o (.sdata)
        . = ALIGN(0x10);
        _ydan_room_3SegmentSDataEnd = .;
        _ydan_room_3SegmentOvlStart = .;
            build/scenes/dungeons/ydan/ydan_room_3.o (.ovl)
        . = ALIGN(0x10);
        _ydan_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_room_3SegmentOvlEnd - _ydan_room_3SegmentTextStart );
    _ydan_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_room_3.bss ADDR(..ydan_room_3) + SIZEOF(..ydan_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_room_3SegmentBssStart = .;
            build/scenes/dungeons/ydan/ydan_room_3.o (.sbss)
            build/scenes/dungeons/ydan/ydan_room_3.o (.scommon)
            build/scenes/dungeons/ydan/ydan_room_3.o (.bss)
            build/scenes/dungeons/ydan/ydan_room_3.o (COMMON)
        . = ALIGN(0x10);
        _ydan_room_3SegmentBssEnd = .;
        _ydan_room_3SegmentEnd = .;
    }
    _ydan_room_3SegmentBssSize = ABSOLUTE( _ydan_room_3SegmentBssEnd - _ydan_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_room_4SegmentRomStart = _RomSize;
    ..ydan_room_4 0x03000000 : AT(_RomSize)
    {
        _ydan_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _ydan_room_4SegmentTextStart = .;
            build/scenes/dungeons/ydan/ydan_room_4.o (.text)
        _ydan_room_4SegmentTextEnd = .;
    _ydan_room_4SegmentTextSize = ABSOLUTE( _ydan_room_4SegmentTextEnd - _ydan_room_4SegmentTextStart );
        _ydan_room_4SegmentDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_4.o (.data)
        _ydan_room_4SegmentDataEnd = .;
    _ydan_room_4SegmentDataSize = ABSOLUTE( _ydan_room_4SegmentDataEnd - _ydan_room_4SegmentDataStart );
        _ydan_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_4.o (.rodata)
        _ydan_room_4SegmentRoDataEnd = .;
    _ydan_room_4SegmentRoDataSize = ABSOLUTE( _ydan_room_4SegmentRoDataEnd - _ydan_room_4SegmentRoDataStart );
        _ydan_room_4SegmentSDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_4.o (.sdata)
        . = ALIGN(0x10);
        _ydan_room_4SegmentSDataEnd = .;
        _ydan_room_4SegmentOvlStart = .;
            build/scenes/dungeons/ydan/ydan_room_4.o (.ovl)
        . = ALIGN(0x10);
        _ydan_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_room_4SegmentOvlEnd - _ydan_room_4SegmentTextStart );
    _ydan_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_room_4.bss ADDR(..ydan_room_4) + SIZEOF(..ydan_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_room_4SegmentBssStart = .;
            build/scenes/dungeons/ydan/ydan_room_4.o (.sbss)
            build/scenes/dungeons/ydan/ydan_room_4.o (.scommon)
            build/scenes/dungeons/ydan/ydan_room_4.o (.bss)
            build/scenes/dungeons/ydan/ydan_room_4.o (COMMON)
        . = ALIGN(0x10);
        _ydan_room_4SegmentBssEnd = .;
        _ydan_room_4SegmentEnd = .;
    }
    _ydan_room_4SegmentBssSize = ABSOLUTE( _ydan_room_4SegmentBssEnd - _ydan_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_room_5SegmentRomStart = _RomSize;
    ..ydan_room_5 0x03000000 : AT(_RomSize)
    {
        _ydan_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _ydan_room_5SegmentTextStart = .;
            build/scenes/dungeons/ydan/ydan_room_5.o (.text)
        _ydan_room_5SegmentTextEnd = .;
    _ydan_room_5SegmentTextSize = ABSOLUTE( _ydan_room_5SegmentTextEnd - _ydan_room_5SegmentTextStart );
        _ydan_room_5SegmentDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_5.o (.data)
        _ydan_room_5SegmentDataEnd = .;
    _ydan_room_5SegmentDataSize = ABSOLUTE( _ydan_room_5SegmentDataEnd - _ydan_room_5SegmentDataStart );
        _ydan_room_5SegmentRoDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_5.o (.rodata)
        _ydan_room_5SegmentRoDataEnd = .;
    _ydan_room_5SegmentRoDataSize = ABSOLUTE( _ydan_room_5SegmentRoDataEnd - _ydan_room_5SegmentRoDataStart );
        _ydan_room_5SegmentSDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_5.o (.sdata)
        . = ALIGN(0x10);
        _ydan_room_5SegmentSDataEnd = .;
        _ydan_room_5SegmentOvlStart = .;
            build/scenes/dungeons/ydan/ydan_room_5.o (.ovl)
        . = ALIGN(0x10);
        _ydan_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_room_5SegmentOvlEnd - _ydan_room_5SegmentTextStart );
    _ydan_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_room_5.bss ADDR(..ydan_room_5) + SIZEOF(..ydan_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_room_5SegmentBssStart = .;
            build/scenes/dungeons/ydan/ydan_room_5.o (.sbss)
            build/scenes/dungeons/ydan/ydan_room_5.o (.scommon)
            build/scenes/dungeons/ydan/ydan_room_5.o (.bss)
            build/scenes/dungeons/ydan/ydan_room_5.o (COMMON)
        . = ALIGN(0x10);
        _ydan_room_5SegmentBssEnd = .;
        _ydan_room_5SegmentEnd = .;
    }
    _ydan_room_5SegmentBssSize = ABSOLUTE( _ydan_room_5SegmentBssEnd - _ydan_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_room_6SegmentRomStart = _RomSize;
    ..ydan_room_6 0x03000000 : AT(_RomSize)
    {
        _ydan_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _ydan_room_6SegmentTextStart = .;
            build/scenes/dungeons/ydan/ydan_room_6.o (.text)
        _ydan_room_6SegmentTextEnd = .;
    _ydan_room_6SegmentTextSize = ABSOLUTE( _ydan_room_6SegmentTextEnd - _ydan_room_6SegmentTextStart );
        _ydan_room_6SegmentDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_6.o (.data)
        _ydan_room_6SegmentDataEnd = .;
    _ydan_room_6SegmentDataSize = ABSOLUTE( _ydan_room_6SegmentDataEnd - _ydan_room_6SegmentDataStart );
        _ydan_room_6SegmentRoDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_6.o (.rodata)
        _ydan_room_6SegmentRoDataEnd = .;
    _ydan_room_6SegmentRoDataSize = ABSOLUTE( _ydan_room_6SegmentRoDataEnd - _ydan_room_6SegmentRoDataStart );
        _ydan_room_6SegmentSDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_6.o (.sdata)
        . = ALIGN(0x10);
        _ydan_room_6SegmentSDataEnd = .;
        _ydan_room_6SegmentOvlStart = .;
            build/scenes/dungeons/ydan/ydan_room_6.o (.ovl)
        . = ALIGN(0x10);
        _ydan_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_room_6SegmentOvlEnd - _ydan_room_6SegmentTextStart );
    _ydan_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_room_6.bss ADDR(..ydan_room_6) + SIZEOF(..ydan_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_room_6SegmentBssStart = .;
            build/scenes/dungeons/ydan/ydan_room_6.o (.sbss)
            build/scenes/dungeons/ydan/ydan_room_6.o (.scommon)
            build/scenes/dungeons/ydan/ydan_room_6.o (.bss)
            build/scenes/dungeons/ydan/ydan_room_6.o (COMMON)
        . = ALIGN(0x10);
        _ydan_room_6SegmentBssEnd = .;
        _ydan_room_6SegmentEnd = .;
    }
    _ydan_room_6SegmentBssSize = ABSOLUTE( _ydan_room_6SegmentBssEnd - _ydan_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_room_7SegmentRomStart = _RomSize;
    ..ydan_room_7 0x03000000 : AT(_RomSize)
    {
        _ydan_room_7SegmentStart = .;
        . = ALIGN(0x10);
        _ydan_room_7SegmentTextStart = .;
            build/scenes/dungeons/ydan/ydan_room_7.o (.text)
        _ydan_room_7SegmentTextEnd = .;
    _ydan_room_7SegmentTextSize = ABSOLUTE( _ydan_room_7SegmentTextEnd - _ydan_room_7SegmentTextStart );
        _ydan_room_7SegmentDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_7.o (.data)
        _ydan_room_7SegmentDataEnd = .;
    _ydan_room_7SegmentDataSize = ABSOLUTE( _ydan_room_7SegmentDataEnd - _ydan_room_7SegmentDataStart );
        _ydan_room_7SegmentRoDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_7.o (.rodata)
        _ydan_room_7SegmentRoDataEnd = .;
    _ydan_room_7SegmentRoDataSize = ABSOLUTE( _ydan_room_7SegmentRoDataEnd - _ydan_room_7SegmentRoDataStart );
        _ydan_room_7SegmentSDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_7.o (.sdata)
        . = ALIGN(0x10);
        _ydan_room_7SegmentSDataEnd = .;
        _ydan_room_7SegmentOvlStart = .;
            build/scenes/dungeons/ydan/ydan_room_7.o (.ovl)
        . = ALIGN(0x10);
        _ydan_room_7SegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_room_7SegmentOvlEnd - _ydan_room_7SegmentTextStart );
    _ydan_room_7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_room_7.bss ADDR(..ydan_room_7) + SIZEOF(..ydan_room_7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_room_7SegmentBssStart = .;
            build/scenes/dungeons/ydan/ydan_room_7.o (.sbss)
            build/scenes/dungeons/ydan/ydan_room_7.o (.scommon)
            build/scenes/dungeons/ydan/ydan_room_7.o (.bss)
            build/scenes/dungeons/ydan/ydan_room_7.o (COMMON)
        . = ALIGN(0x10);
        _ydan_room_7SegmentBssEnd = .;
        _ydan_room_7SegmentEnd = .;
    }
    _ydan_room_7SegmentBssSize = ABSOLUTE( _ydan_room_7SegmentBssEnd - _ydan_room_7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_room_8SegmentRomStart = _RomSize;
    ..ydan_room_8 0x03000000 : AT(_RomSize)
    {
        _ydan_room_8SegmentStart = .;
        . = ALIGN(0x10);
        _ydan_room_8SegmentTextStart = .;
            build/scenes/dungeons/ydan/ydan_room_8.o (.text)
        _ydan_room_8SegmentTextEnd = .;
    _ydan_room_8SegmentTextSize = ABSOLUTE( _ydan_room_8SegmentTextEnd - _ydan_room_8SegmentTextStart );
        _ydan_room_8SegmentDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_8.o (.data)
        _ydan_room_8SegmentDataEnd = .;
    _ydan_room_8SegmentDataSize = ABSOLUTE( _ydan_room_8SegmentDataEnd - _ydan_room_8SegmentDataStart );
        _ydan_room_8SegmentRoDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_8.o (.rodata)
        _ydan_room_8SegmentRoDataEnd = .;
    _ydan_room_8SegmentRoDataSize = ABSOLUTE( _ydan_room_8SegmentRoDataEnd - _ydan_room_8SegmentRoDataStart );
        _ydan_room_8SegmentSDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_8.o (.sdata)
        . = ALIGN(0x10);
        _ydan_room_8SegmentSDataEnd = .;
        _ydan_room_8SegmentOvlStart = .;
            build/scenes/dungeons/ydan/ydan_room_8.o (.ovl)
        . = ALIGN(0x10);
        _ydan_room_8SegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_room_8SegmentOvlEnd - _ydan_room_8SegmentTextStart );
    _ydan_room_8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_room_8.bss ADDR(..ydan_room_8) + SIZEOF(..ydan_room_8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_room_8SegmentBssStart = .;
            build/scenes/dungeons/ydan/ydan_room_8.o (.sbss)
            build/scenes/dungeons/ydan/ydan_room_8.o (.scommon)
            build/scenes/dungeons/ydan/ydan_room_8.o (.bss)
            build/scenes/dungeons/ydan/ydan_room_8.o (COMMON)
        . = ALIGN(0x10);
        _ydan_room_8SegmentBssEnd = .;
        _ydan_room_8SegmentEnd = .;
    }
    _ydan_room_8SegmentBssSize = ABSOLUTE( _ydan_room_8SegmentBssEnd - _ydan_room_8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_room_9SegmentRomStart = _RomSize;
    ..ydan_room_9 0x03000000 : AT(_RomSize)
    {
        _ydan_room_9SegmentStart = .;
        . = ALIGN(0x10);
        _ydan_room_9SegmentTextStart = .;
            build/scenes/dungeons/ydan/ydan_room_9.o (.text)
        _ydan_room_9SegmentTextEnd = .;
    _ydan_room_9SegmentTextSize = ABSOLUTE( _ydan_room_9SegmentTextEnd - _ydan_room_9SegmentTextStart );
        _ydan_room_9SegmentDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_9.o (.data)
        _ydan_room_9SegmentDataEnd = .;
    _ydan_room_9SegmentDataSize = ABSOLUTE( _ydan_room_9SegmentDataEnd - _ydan_room_9SegmentDataStart );
        _ydan_room_9SegmentRoDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_9.o (.rodata)
        _ydan_room_9SegmentRoDataEnd = .;
    _ydan_room_9SegmentRoDataSize = ABSOLUTE( _ydan_room_9SegmentRoDataEnd - _ydan_room_9SegmentRoDataStart );
        _ydan_room_9SegmentSDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_9.o (.sdata)
        . = ALIGN(0x10);
        _ydan_room_9SegmentSDataEnd = .;
        _ydan_room_9SegmentOvlStart = .;
            build/scenes/dungeons/ydan/ydan_room_9.o (.ovl)
        . = ALIGN(0x10);
        _ydan_room_9SegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_room_9SegmentOvlEnd - _ydan_room_9SegmentTextStart );
    _ydan_room_9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_room_9.bss ADDR(..ydan_room_9) + SIZEOF(..ydan_room_9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_room_9SegmentBssStart = .;
            build/scenes/dungeons/ydan/ydan_room_9.o (.sbss)
            build/scenes/dungeons/ydan/ydan_room_9.o (.scommon)
            build/scenes/dungeons/ydan/ydan_room_9.o (.bss)
            build/scenes/dungeons/ydan/ydan_room_9.o (COMMON)
        . = ALIGN(0x10);
        _ydan_room_9SegmentBssEnd = .;
        _ydan_room_9SegmentEnd = .;
    }
    _ydan_room_9SegmentBssSize = ABSOLUTE( _ydan_room_9SegmentBssEnd - _ydan_room_9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_room_10SegmentRomStart = _RomSize;
    ..ydan_room_10 0x03000000 : AT(_RomSize)
    {
        _ydan_room_10SegmentStart = .;
        . = ALIGN(0x10);
        _ydan_room_10SegmentTextStart = .;
            build/scenes/dungeons/ydan/ydan_room_10.o (.text)
        _ydan_room_10SegmentTextEnd = .;
    _ydan_room_10SegmentTextSize = ABSOLUTE( _ydan_room_10SegmentTextEnd - _ydan_room_10SegmentTextStart );
        _ydan_room_10SegmentDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_10.o (.data)
        _ydan_room_10SegmentDataEnd = .;
    _ydan_room_10SegmentDataSize = ABSOLUTE( _ydan_room_10SegmentDataEnd - _ydan_room_10SegmentDataStart );
        _ydan_room_10SegmentRoDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_10.o (.rodata)
        _ydan_room_10SegmentRoDataEnd = .;
    _ydan_room_10SegmentRoDataSize = ABSOLUTE( _ydan_room_10SegmentRoDataEnd - _ydan_room_10SegmentRoDataStart );
        _ydan_room_10SegmentSDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_10.o (.sdata)
        . = ALIGN(0x10);
        _ydan_room_10SegmentSDataEnd = .;
        _ydan_room_10SegmentOvlStart = .;
            build/scenes/dungeons/ydan/ydan_room_10.o (.ovl)
        . = ALIGN(0x10);
        _ydan_room_10SegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_room_10SegmentOvlEnd - _ydan_room_10SegmentTextStart );
    _ydan_room_10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_room_10.bss ADDR(..ydan_room_10) + SIZEOF(..ydan_room_10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_room_10SegmentBssStart = .;
            build/scenes/dungeons/ydan/ydan_room_10.o (.sbss)
            build/scenes/dungeons/ydan/ydan_room_10.o (.scommon)
            build/scenes/dungeons/ydan/ydan_room_10.o (.bss)
            build/scenes/dungeons/ydan/ydan_room_10.o (COMMON)
        . = ALIGN(0x10);
        _ydan_room_10SegmentBssEnd = .;
        _ydan_room_10SegmentEnd = .;
    }
    _ydan_room_10SegmentBssSize = ABSOLUTE( _ydan_room_10SegmentBssEnd - _ydan_room_10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_room_11SegmentRomStart = _RomSize;
    ..ydan_room_11 0x03000000 : AT(_RomSize)
    {
        _ydan_room_11SegmentStart = .;
        . = ALIGN(0x10);
        _ydan_room_11SegmentTextStart = .;
            build/scenes/dungeons/ydan/ydan_room_11.o (.text)
        _ydan_room_11SegmentTextEnd = .;
    _ydan_room_11SegmentTextSize = ABSOLUTE( _ydan_room_11SegmentTextEnd - _ydan_room_11SegmentTextStart );
        _ydan_room_11SegmentDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_11.o (.data)
        _ydan_room_11SegmentDataEnd = .;
    _ydan_room_11SegmentDataSize = ABSOLUTE( _ydan_room_11SegmentDataEnd - _ydan_room_11SegmentDataStart );
        _ydan_room_11SegmentRoDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_11.o (.rodata)
        _ydan_room_11SegmentRoDataEnd = .;
    _ydan_room_11SegmentRoDataSize = ABSOLUTE( _ydan_room_11SegmentRoDataEnd - _ydan_room_11SegmentRoDataStart );
        _ydan_room_11SegmentSDataStart = .;
            build/scenes/dungeons/ydan/ydan_room_11.o (.sdata)
        . = ALIGN(0x10);
        _ydan_room_11SegmentSDataEnd = .;
        _ydan_room_11SegmentOvlStart = .;
            build/scenes/dungeons/ydan/ydan_room_11.o (.ovl)
        . = ALIGN(0x10);
        _ydan_room_11SegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_room_11SegmentOvlEnd - _ydan_room_11SegmentTextStart );
    _ydan_room_11SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_room_11.bss ADDR(..ydan_room_11) + SIZEOF(..ydan_room_11) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_room_11SegmentBssStart = .;
            build/scenes/dungeons/ydan/ydan_room_11.o (.sbss)
            build/scenes/dungeons/ydan/ydan_room_11.o (.scommon)
            build/scenes/dungeons/ydan/ydan_room_11.o (.bss)
            build/scenes/dungeons/ydan/ydan_room_11.o (COMMON)
        . = ALIGN(0x10);
        _ydan_room_11SegmentBssEnd = .;
        _ydan_room_11SegmentEnd = .;
    }
    _ydan_room_11SegmentBssSize = ABSOLUTE( _ydan_room_11SegmentBssEnd - _ydan_room_11SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_sceneSegmentRomStart = _RomSize;
    ..ddan_scene 0x02000000 : AT(_RomSize)
    {
        _ddan_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _ddan_sceneSegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_scene.o (.text)
        _ddan_sceneSegmentTextEnd = .;
    _ddan_sceneSegmentTextSize = ABSOLUTE( _ddan_sceneSegmentTextEnd - _ddan_sceneSegmentTextStart );
        _ddan_sceneSegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_scene.o (.data)
        _ddan_sceneSegmentDataEnd = .;
    _ddan_sceneSegmentDataSize = ABSOLUTE( _ddan_sceneSegmentDataEnd - _ddan_sceneSegmentDataStart );
        _ddan_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_scene.o (.rodata)
        _ddan_sceneSegmentRoDataEnd = .;
    _ddan_sceneSegmentRoDataSize = ABSOLUTE( _ddan_sceneSegmentRoDataEnd - _ddan_sceneSegmentRoDataStart );
        _ddan_sceneSegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_scene.o (.sdata)
        . = ALIGN(0x10);
        _ddan_sceneSegmentSDataEnd = .;
        _ddan_sceneSegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_scene.o (.ovl)
        . = ALIGN(0x10);
        _ddan_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_sceneSegmentOvlEnd - _ddan_sceneSegmentTextStart );
    _ddan_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_scene.bss ADDR(..ddan_scene) + SIZEOF(..ddan_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_sceneSegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_scene.o (.sbss)
            build/scenes/dungeons/ddan/ddan_scene.o (.scommon)
            build/scenes/dungeons/ddan/ddan_scene.o (.bss)
            build/scenes/dungeons/ddan/ddan_scene.o (COMMON)
        . = ALIGN(0x10);
        _ddan_sceneSegmentBssEnd = .;
        _ddan_sceneSegmentEnd = .;
    }
    _ddan_sceneSegmentBssSize = ABSOLUTE( _ddan_sceneSegmentBssEnd - _ddan_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_0SegmentRomStart = _RomSize;
    ..ddan_room_0 0x03000000 : AT(_RomSize)
    {
        _ddan_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_0SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_0.o (.text)
        _ddan_room_0SegmentTextEnd = .;
    _ddan_room_0SegmentTextSize = ABSOLUTE( _ddan_room_0SegmentTextEnd - _ddan_room_0SegmentTextStart );
        _ddan_room_0SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_0.o (.data)
        _ddan_room_0SegmentDataEnd = .;
    _ddan_room_0SegmentDataSize = ABSOLUTE( _ddan_room_0SegmentDataEnd - _ddan_room_0SegmentDataStart );
        _ddan_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_0.o (.rodata)
        _ddan_room_0SegmentRoDataEnd = .;
    _ddan_room_0SegmentRoDataSize = ABSOLUTE( _ddan_room_0SegmentRoDataEnd - _ddan_room_0SegmentRoDataStart );
        _ddan_room_0SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_0.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_0SegmentSDataEnd = .;
        _ddan_room_0SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_0.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_0SegmentOvlEnd - _ddan_room_0SegmentTextStart );
    _ddan_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_0.bss ADDR(..ddan_room_0) + SIZEOF(..ddan_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_0SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_0.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_0.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_0.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_0.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_0SegmentBssEnd = .;
        _ddan_room_0SegmentEnd = .;
    }
    _ddan_room_0SegmentBssSize = ABSOLUTE( _ddan_room_0SegmentBssEnd - _ddan_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_1SegmentRomStart = _RomSize;
    ..ddan_room_1 0x03000000 : AT(_RomSize)
    {
        _ddan_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_1SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_1.o (.text)
        _ddan_room_1SegmentTextEnd = .;
    _ddan_room_1SegmentTextSize = ABSOLUTE( _ddan_room_1SegmentTextEnd - _ddan_room_1SegmentTextStart );
        _ddan_room_1SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_1.o (.data)
        _ddan_room_1SegmentDataEnd = .;
    _ddan_room_1SegmentDataSize = ABSOLUTE( _ddan_room_1SegmentDataEnd - _ddan_room_1SegmentDataStart );
        _ddan_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_1.o (.rodata)
        _ddan_room_1SegmentRoDataEnd = .;
    _ddan_room_1SegmentRoDataSize = ABSOLUTE( _ddan_room_1SegmentRoDataEnd - _ddan_room_1SegmentRoDataStart );
        _ddan_room_1SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_1.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_1SegmentSDataEnd = .;
        _ddan_room_1SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_1.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_1SegmentOvlEnd - _ddan_room_1SegmentTextStart );
    _ddan_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_1.bss ADDR(..ddan_room_1) + SIZEOF(..ddan_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_1SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_1.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_1.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_1.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_1.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_1SegmentBssEnd = .;
        _ddan_room_1SegmentEnd = .;
    }
    _ddan_room_1SegmentBssSize = ABSOLUTE( _ddan_room_1SegmentBssEnd - _ddan_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_2SegmentRomStart = _RomSize;
    ..ddan_room_2 0x03000000 : AT(_RomSize)
    {
        _ddan_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_2SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_2.o (.text)
        _ddan_room_2SegmentTextEnd = .;
    _ddan_room_2SegmentTextSize = ABSOLUTE( _ddan_room_2SegmentTextEnd - _ddan_room_2SegmentTextStart );
        _ddan_room_2SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_2.o (.data)
        _ddan_room_2SegmentDataEnd = .;
    _ddan_room_2SegmentDataSize = ABSOLUTE( _ddan_room_2SegmentDataEnd - _ddan_room_2SegmentDataStart );
        _ddan_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_2.o (.rodata)
        _ddan_room_2SegmentRoDataEnd = .;
    _ddan_room_2SegmentRoDataSize = ABSOLUTE( _ddan_room_2SegmentRoDataEnd - _ddan_room_2SegmentRoDataStart );
        _ddan_room_2SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_2.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_2SegmentSDataEnd = .;
        _ddan_room_2SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_2.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_2SegmentOvlEnd - _ddan_room_2SegmentTextStart );
    _ddan_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_2.bss ADDR(..ddan_room_2) + SIZEOF(..ddan_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_2SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_2.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_2.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_2.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_2.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_2SegmentBssEnd = .;
        _ddan_room_2SegmentEnd = .;
    }
    _ddan_room_2SegmentBssSize = ABSOLUTE( _ddan_room_2SegmentBssEnd - _ddan_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_3SegmentRomStart = _RomSize;
    ..ddan_room_3 0x03000000 : AT(_RomSize)
    {
        _ddan_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_3SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_3.o (.text)
        _ddan_room_3SegmentTextEnd = .;
    _ddan_room_3SegmentTextSize = ABSOLUTE( _ddan_room_3SegmentTextEnd - _ddan_room_3SegmentTextStart );
        _ddan_room_3SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_3.o (.data)
        _ddan_room_3SegmentDataEnd = .;
    _ddan_room_3SegmentDataSize = ABSOLUTE( _ddan_room_3SegmentDataEnd - _ddan_room_3SegmentDataStart );
        _ddan_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_3.o (.rodata)
        _ddan_room_3SegmentRoDataEnd = .;
    _ddan_room_3SegmentRoDataSize = ABSOLUTE( _ddan_room_3SegmentRoDataEnd - _ddan_room_3SegmentRoDataStart );
        _ddan_room_3SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_3.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_3SegmentSDataEnd = .;
        _ddan_room_3SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_3.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_3SegmentOvlEnd - _ddan_room_3SegmentTextStart );
    _ddan_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_3.bss ADDR(..ddan_room_3) + SIZEOF(..ddan_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_3SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_3.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_3.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_3.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_3.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_3SegmentBssEnd = .;
        _ddan_room_3SegmentEnd = .;
    }
    _ddan_room_3SegmentBssSize = ABSOLUTE( _ddan_room_3SegmentBssEnd - _ddan_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_4SegmentRomStart = _RomSize;
    ..ddan_room_4 0x03000000 : AT(_RomSize)
    {
        _ddan_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_4SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_4.o (.text)
        _ddan_room_4SegmentTextEnd = .;
    _ddan_room_4SegmentTextSize = ABSOLUTE( _ddan_room_4SegmentTextEnd - _ddan_room_4SegmentTextStart );
        _ddan_room_4SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_4.o (.data)
        _ddan_room_4SegmentDataEnd = .;
    _ddan_room_4SegmentDataSize = ABSOLUTE( _ddan_room_4SegmentDataEnd - _ddan_room_4SegmentDataStart );
        _ddan_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_4.o (.rodata)
        _ddan_room_4SegmentRoDataEnd = .;
    _ddan_room_4SegmentRoDataSize = ABSOLUTE( _ddan_room_4SegmentRoDataEnd - _ddan_room_4SegmentRoDataStart );
        _ddan_room_4SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_4.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_4SegmentSDataEnd = .;
        _ddan_room_4SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_4.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_4SegmentOvlEnd - _ddan_room_4SegmentTextStart );
    _ddan_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_4.bss ADDR(..ddan_room_4) + SIZEOF(..ddan_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_4SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_4.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_4.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_4.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_4.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_4SegmentBssEnd = .;
        _ddan_room_4SegmentEnd = .;
    }
    _ddan_room_4SegmentBssSize = ABSOLUTE( _ddan_room_4SegmentBssEnd - _ddan_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_5SegmentRomStart = _RomSize;
    ..ddan_room_5 0x03000000 : AT(_RomSize)
    {
        _ddan_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_5SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_5.o (.text)
        _ddan_room_5SegmentTextEnd = .;
    _ddan_room_5SegmentTextSize = ABSOLUTE( _ddan_room_5SegmentTextEnd - _ddan_room_5SegmentTextStart );
        _ddan_room_5SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_5.o (.data)
        _ddan_room_5SegmentDataEnd = .;
    _ddan_room_5SegmentDataSize = ABSOLUTE( _ddan_room_5SegmentDataEnd - _ddan_room_5SegmentDataStart );
        _ddan_room_5SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_5.o (.rodata)
        _ddan_room_5SegmentRoDataEnd = .;
    _ddan_room_5SegmentRoDataSize = ABSOLUTE( _ddan_room_5SegmentRoDataEnd - _ddan_room_5SegmentRoDataStart );
        _ddan_room_5SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_5.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_5SegmentSDataEnd = .;
        _ddan_room_5SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_5.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_5SegmentOvlEnd - _ddan_room_5SegmentTextStart );
    _ddan_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_5.bss ADDR(..ddan_room_5) + SIZEOF(..ddan_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_5SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_5.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_5.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_5.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_5.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_5SegmentBssEnd = .;
        _ddan_room_5SegmentEnd = .;
    }
    _ddan_room_5SegmentBssSize = ABSOLUTE( _ddan_room_5SegmentBssEnd - _ddan_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_6SegmentRomStart = _RomSize;
    ..ddan_room_6 0x03000000 : AT(_RomSize)
    {
        _ddan_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_6SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_6.o (.text)
        _ddan_room_6SegmentTextEnd = .;
    _ddan_room_6SegmentTextSize = ABSOLUTE( _ddan_room_6SegmentTextEnd - _ddan_room_6SegmentTextStart );
        _ddan_room_6SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_6.o (.data)
        _ddan_room_6SegmentDataEnd = .;
    _ddan_room_6SegmentDataSize = ABSOLUTE( _ddan_room_6SegmentDataEnd - _ddan_room_6SegmentDataStart );
        _ddan_room_6SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_6.o (.rodata)
        _ddan_room_6SegmentRoDataEnd = .;
    _ddan_room_6SegmentRoDataSize = ABSOLUTE( _ddan_room_6SegmentRoDataEnd - _ddan_room_6SegmentRoDataStart );
        _ddan_room_6SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_6.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_6SegmentSDataEnd = .;
        _ddan_room_6SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_6.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_6SegmentOvlEnd - _ddan_room_6SegmentTextStart );
    _ddan_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_6.bss ADDR(..ddan_room_6) + SIZEOF(..ddan_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_6SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_6.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_6.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_6.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_6.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_6SegmentBssEnd = .;
        _ddan_room_6SegmentEnd = .;
    }
    _ddan_room_6SegmentBssSize = ABSOLUTE( _ddan_room_6SegmentBssEnd - _ddan_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_7SegmentRomStart = _RomSize;
    ..ddan_room_7 0x03000000 : AT(_RomSize)
    {
        _ddan_room_7SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_7SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_7.o (.text)
        _ddan_room_7SegmentTextEnd = .;
    _ddan_room_7SegmentTextSize = ABSOLUTE( _ddan_room_7SegmentTextEnd - _ddan_room_7SegmentTextStart );
        _ddan_room_7SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_7.o (.data)
        _ddan_room_7SegmentDataEnd = .;
    _ddan_room_7SegmentDataSize = ABSOLUTE( _ddan_room_7SegmentDataEnd - _ddan_room_7SegmentDataStart );
        _ddan_room_7SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_7.o (.rodata)
        _ddan_room_7SegmentRoDataEnd = .;
    _ddan_room_7SegmentRoDataSize = ABSOLUTE( _ddan_room_7SegmentRoDataEnd - _ddan_room_7SegmentRoDataStart );
        _ddan_room_7SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_7.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_7SegmentSDataEnd = .;
        _ddan_room_7SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_7.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_7SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_7SegmentOvlEnd - _ddan_room_7SegmentTextStart );
    _ddan_room_7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_7.bss ADDR(..ddan_room_7) + SIZEOF(..ddan_room_7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_7SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_7.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_7.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_7.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_7.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_7SegmentBssEnd = .;
        _ddan_room_7SegmentEnd = .;
    }
    _ddan_room_7SegmentBssSize = ABSOLUTE( _ddan_room_7SegmentBssEnd - _ddan_room_7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_8SegmentRomStart = _RomSize;
    ..ddan_room_8 0x03000000 : AT(_RomSize)
    {
        _ddan_room_8SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_8SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_8.o (.text)
        _ddan_room_8SegmentTextEnd = .;
    _ddan_room_8SegmentTextSize = ABSOLUTE( _ddan_room_8SegmentTextEnd - _ddan_room_8SegmentTextStart );
        _ddan_room_8SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_8.o (.data)
        _ddan_room_8SegmentDataEnd = .;
    _ddan_room_8SegmentDataSize = ABSOLUTE( _ddan_room_8SegmentDataEnd - _ddan_room_8SegmentDataStart );
        _ddan_room_8SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_8.o (.rodata)
        _ddan_room_8SegmentRoDataEnd = .;
    _ddan_room_8SegmentRoDataSize = ABSOLUTE( _ddan_room_8SegmentRoDataEnd - _ddan_room_8SegmentRoDataStart );
        _ddan_room_8SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_8.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_8SegmentSDataEnd = .;
        _ddan_room_8SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_8.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_8SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_8SegmentOvlEnd - _ddan_room_8SegmentTextStart );
    _ddan_room_8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_8.bss ADDR(..ddan_room_8) + SIZEOF(..ddan_room_8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_8SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_8.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_8.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_8.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_8.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_8SegmentBssEnd = .;
        _ddan_room_8SegmentEnd = .;
    }
    _ddan_room_8SegmentBssSize = ABSOLUTE( _ddan_room_8SegmentBssEnd - _ddan_room_8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_9SegmentRomStart = _RomSize;
    ..ddan_room_9 0x03000000 : AT(_RomSize)
    {
        _ddan_room_9SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_9SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_9.o (.text)
        _ddan_room_9SegmentTextEnd = .;
    _ddan_room_9SegmentTextSize = ABSOLUTE( _ddan_room_9SegmentTextEnd - _ddan_room_9SegmentTextStart );
        _ddan_room_9SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_9.o (.data)
        _ddan_room_9SegmentDataEnd = .;
    _ddan_room_9SegmentDataSize = ABSOLUTE( _ddan_room_9SegmentDataEnd - _ddan_room_9SegmentDataStart );
        _ddan_room_9SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_9.o (.rodata)
        _ddan_room_9SegmentRoDataEnd = .;
    _ddan_room_9SegmentRoDataSize = ABSOLUTE( _ddan_room_9SegmentRoDataEnd - _ddan_room_9SegmentRoDataStart );
        _ddan_room_9SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_9.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_9SegmentSDataEnd = .;
        _ddan_room_9SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_9.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_9SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_9SegmentOvlEnd - _ddan_room_9SegmentTextStart );
    _ddan_room_9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_9.bss ADDR(..ddan_room_9) + SIZEOF(..ddan_room_9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_9SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_9.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_9.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_9.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_9.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_9SegmentBssEnd = .;
        _ddan_room_9SegmentEnd = .;
    }
    _ddan_room_9SegmentBssSize = ABSOLUTE( _ddan_room_9SegmentBssEnd - _ddan_room_9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_10SegmentRomStart = _RomSize;
    ..ddan_room_10 0x03000000 : AT(_RomSize)
    {
        _ddan_room_10SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_10SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_10.o (.text)
        _ddan_room_10SegmentTextEnd = .;
    _ddan_room_10SegmentTextSize = ABSOLUTE( _ddan_room_10SegmentTextEnd - _ddan_room_10SegmentTextStart );
        _ddan_room_10SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_10.o (.data)
        _ddan_room_10SegmentDataEnd = .;
    _ddan_room_10SegmentDataSize = ABSOLUTE( _ddan_room_10SegmentDataEnd - _ddan_room_10SegmentDataStart );
        _ddan_room_10SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_10.o (.rodata)
        _ddan_room_10SegmentRoDataEnd = .;
    _ddan_room_10SegmentRoDataSize = ABSOLUTE( _ddan_room_10SegmentRoDataEnd - _ddan_room_10SegmentRoDataStart );
        _ddan_room_10SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_10.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_10SegmentSDataEnd = .;
        _ddan_room_10SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_10.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_10SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_10SegmentOvlEnd - _ddan_room_10SegmentTextStart );
    _ddan_room_10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_10.bss ADDR(..ddan_room_10) + SIZEOF(..ddan_room_10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_10SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_10.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_10.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_10.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_10.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_10SegmentBssEnd = .;
        _ddan_room_10SegmentEnd = .;
    }
    _ddan_room_10SegmentBssSize = ABSOLUTE( _ddan_room_10SegmentBssEnd - _ddan_room_10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_11SegmentRomStart = _RomSize;
    ..ddan_room_11 0x03000000 : AT(_RomSize)
    {
        _ddan_room_11SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_11SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_11.o (.text)
        _ddan_room_11SegmentTextEnd = .;
    _ddan_room_11SegmentTextSize = ABSOLUTE( _ddan_room_11SegmentTextEnd - _ddan_room_11SegmentTextStart );
        _ddan_room_11SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_11.o (.data)
        _ddan_room_11SegmentDataEnd = .;
    _ddan_room_11SegmentDataSize = ABSOLUTE( _ddan_room_11SegmentDataEnd - _ddan_room_11SegmentDataStart );
        _ddan_room_11SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_11.o (.rodata)
        _ddan_room_11SegmentRoDataEnd = .;
    _ddan_room_11SegmentRoDataSize = ABSOLUTE( _ddan_room_11SegmentRoDataEnd - _ddan_room_11SegmentRoDataStart );
        _ddan_room_11SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_11.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_11SegmentSDataEnd = .;
        _ddan_room_11SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_11.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_11SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_11SegmentOvlEnd - _ddan_room_11SegmentTextStart );
    _ddan_room_11SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_11.bss ADDR(..ddan_room_11) + SIZEOF(..ddan_room_11) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_11SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_11.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_11.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_11.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_11.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_11SegmentBssEnd = .;
        _ddan_room_11SegmentEnd = .;
    }
    _ddan_room_11SegmentBssSize = ABSOLUTE( _ddan_room_11SegmentBssEnd - _ddan_room_11SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_12SegmentRomStart = _RomSize;
    ..ddan_room_12 0x03000000 : AT(_RomSize)
    {
        _ddan_room_12SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_12SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_12.o (.text)
        _ddan_room_12SegmentTextEnd = .;
    _ddan_room_12SegmentTextSize = ABSOLUTE( _ddan_room_12SegmentTextEnd - _ddan_room_12SegmentTextStart );
        _ddan_room_12SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_12.o (.data)
        _ddan_room_12SegmentDataEnd = .;
    _ddan_room_12SegmentDataSize = ABSOLUTE( _ddan_room_12SegmentDataEnd - _ddan_room_12SegmentDataStart );
        _ddan_room_12SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_12.o (.rodata)
        _ddan_room_12SegmentRoDataEnd = .;
    _ddan_room_12SegmentRoDataSize = ABSOLUTE( _ddan_room_12SegmentRoDataEnd - _ddan_room_12SegmentRoDataStart );
        _ddan_room_12SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_12.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_12SegmentSDataEnd = .;
        _ddan_room_12SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_12.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_12SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_12SegmentOvlEnd - _ddan_room_12SegmentTextStart );
    _ddan_room_12SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_12.bss ADDR(..ddan_room_12) + SIZEOF(..ddan_room_12) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_12SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_12.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_12.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_12.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_12.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_12SegmentBssEnd = .;
        _ddan_room_12SegmentEnd = .;
    }
    _ddan_room_12SegmentBssSize = ABSOLUTE( _ddan_room_12SegmentBssEnd - _ddan_room_12SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_13SegmentRomStart = _RomSize;
    ..ddan_room_13 0x03000000 : AT(_RomSize)
    {
        _ddan_room_13SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_13SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_13.o (.text)
        _ddan_room_13SegmentTextEnd = .;
    _ddan_room_13SegmentTextSize = ABSOLUTE( _ddan_room_13SegmentTextEnd - _ddan_room_13SegmentTextStart );
        _ddan_room_13SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_13.o (.data)
        _ddan_room_13SegmentDataEnd = .;
    _ddan_room_13SegmentDataSize = ABSOLUTE( _ddan_room_13SegmentDataEnd - _ddan_room_13SegmentDataStart );
        _ddan_room_13SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_13.o (.rodata)
        _ddan_room_13SegmentRoDataEnd = .;
    _ddan_room_13SegmentRoDataSize = ABSOLUTE( _ddan_room_13SegmentRoDataEnd - _ddan_room_13SegmentRoDataStart );
        _ddan_room_13SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_13.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_13SegmentSDataEnd = .;
        _ddan_room_13SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_13.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_13SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_13SegmentOvlEnd - _ddan_room_13SegmentTextStart );
    _ddan_room_13SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_13.bss ADDR(..ddan_room_13) + SIZEOF(..ddan_room_13) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_13SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_13.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_13.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_13.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_13.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_13SegmentBssEnd = .;
        _ddan_room_13SegmentEnd = .;
    }
    _ddan_room_13SegmentBssSize = ABSOLUTE( _ddan_room_13SegmentBssEnd - _ddan_room_13SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_14SegmentRomStart = _RomSize;
    ..ddan_room_14 0x03000000 : AT(_RomSize)
    {
        _ddan_room_14SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_14SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_14.o (.text)
        _ddan_room_14SegmentTextEnd = .;
    _ddan_room_14SegmentTextSize = ABSOLUTE( _ddan_room_14SegmentTextEnd - _ddan_room_14SegmentTextStart );
        _ddan_room_14SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_14.o (.data)
        _ddan_room_14SegmentDataEnd = .;
    _ddan_room_14SegmentDataSize = ABSOLUTE( _ddan_room_14SegmentDataEnd - _ddan_room_14SegmentDataStart );
        _ddan_room_14SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_14.o (.rodata)
        _ddan_room_14SegmentRoDataEnd = .;
    _ddan_room_14SegmentRoDataSize = ABSOLUTE( _ddan_room_14SegmentRoDataEnd - _ddan_room_14SegmentRoDataStart );
        _ddan_room_14SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_14.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_14SegmentSDataEnd = .;
        _ddan_room_14SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_14.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_14SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_14SegmentOvlEnd - _ddan_room_14SegmentTextStart );
    _ddan_room_14SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_14.bss ADDR(..ddan_room_14) + SIZEOF(..ddan_room_14) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_14SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_14.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_14.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_14.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_14.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_14SegmentBssEnd = .;
        _ddan_room_14SegmentEnd = .;
    }
    _ddan_room_14SegmentBssSize = ABSOLUTE( _ddan_room_14SegmentBssEnd - _ddan_room_14SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_15SegmentRomStart = _RomSize;
    ..ddan_room_15 0x03000000 : AT(_RomSize)
    {
        _ddan_room_15SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_15SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_15.o (.text)
        _ddan_room_15SegmentTextEnd = .;
    _ddan_room_15SegmentTextSize = ABSOLUTE( _ddan_room_15SegmentTextEnd - _ddan_room_15SegmentTextStart );
        _ddan_room_15SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_15.o (.data)
        _ddan_room_15SegmentDataEnd = .;
    _ddan_room_15SegmentDataSize = ABSOLUTE( _ddan_room_15SegmentDataEnd - _ddan_room_15SegmentDataStart );
        _ddan_room_15SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_15.o (.rodata)
        _ddan_room_15SegmentRoDataEnd = .;
    _ddan_room_15SegmentRoDataSize = ABSOLUTE( _ddan_room_15SegmentRoDataEnd - _ddan_room_15SegmentRoDataStart );
        _ddan_room_15SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_15.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_15SegmentSDataEnd = .;
        _ddan_room_15SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_15.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_15SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_15SegmentOvlEnd - _ddan_room_15SegmentTextStart );
    _ddan_room_15SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_15.bss ADDR(..ddan_room_15) + SIZEOF(..ddan_room_15) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_15SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_15.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_15.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_15.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_15.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_15SegmentBssEnd = .;
        _ddan_room_15SegmentEnd = .;
    }
    _ddan_room_15SegmentBssSize = ABSOLUTE( _ddan_room_15SegmentBssEnd - _ddan_room_15SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_room_16SegmentRomStart = _RomSize;
    ..ddan_room_16 0x03000000 : AT(_RomSize)
    {
        _ddan_room_16SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_room_16SegmentTextStart = .;
            build/scenes/dungeons/ddan/ddan_room_16.o (.text)
        _ddan_room_16SegmentTextEnd = .;
    _ddan_room_16SegmentTextSize = ABSOLUTE( _ddan_room_16SegmentTextEnd - _ddan_room_16SegmentTextStart );
        _ddan_room_16SegmentDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_16.o (.data)
        _ddan_room_16SegmentDataEnd = .;
    _ddan_room_16SegmentDataSize = ABSOLUTE( _ddan_room_16SegmentDataEnd - _ddan_room_16SegmentDataStart );
        _ddan_room_16SegmentRoDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_16.o (.rodata)
        _ddan_room_16SegmentRoDataEnd = .;
    _ddan_room_16SegmentRoDataSize = ABSOLUTE( _ddan_room_16SegmentRoDataEnd - _ddan_room_16SegmentRoDataStart );
        _ddan_room_16SegmentSDataStart = .;
            build/scenes/dungeons/ddan/ddan_room_16.o (.sdata)
        . = ALIGN(0x10);
        _ddan_room_16SegmentSDataEnd = .;
        _ddan_room_16SegmentOvlStart = .;
            build/scenes/dungeons/ddan/ddan_room_16.o (.ovl)
        . = ALIGN(0x10);
        _ddan_room_16SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_room_16SegmentOvlEnd - _ddan_room_16SegmentTextStart );
    _ddan_room_16SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_room_16.bss ADDR(..ddan_room_16) + SIZEOF(..ddan_room_16) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_room_16SegmentBssStart = .;
            build/scenes/dungeons/ddan/ddan_room_16.o (.sbss)
            build/scenes/dungeons/ddan/ddan_room_16.o (.scommon)
            build/scenes/dungeons/ddan/ddan_room_16.o (.bss)
            build/scenes/dungeons/ddan/ddan_room_16.o (COMMON)
        . = ALIGN(0x10);
        _ddan_room_16SegmentBssEnd = .;
        _ddan_room_16SegmentEnd = .;
    }
    _ddan_room_16SegmentBssSize = ABSOLUTE( _ddan_room_16SegmentBssEnd - _ddan_room_16SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_sceneSegmentRomStart = _RomSize;
    ..bdan_scene 0x02000000 : AT(_RomSize)
    {
        _bdan_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _bdan_sceneSegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_scene.o (.text)
        _bdan_sceneSegmentTextEnd = .;
    _bdan_sceneSegmentTextSize = ABSOLUTE( _bdan_sceneSegmentTextEnd - _bdan_sceneSegmentTextStart );
        _bdan_sceneSegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_scene.o (.data)
        _bdan_sceneSegmentDataEnd = .;
    _bdan_sceneSegmentDataSize = ABSOLUTE( _bdan_sceneSegmentDataEnd - _bdan_sceneSegmentDataStart );
        _bdan_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_scene.o (.rodata)
        _bdan_sceneSegmentRoDataEnd = .;
    _bdan_sceneSegmentRoDataSize = ABSOLUTE( _bdan_sceneSegmentRoDataEnd - _bdan_sceneSegmentRoDataStart );
        _bdan_sceneSegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_scene.o (.sdata)
        . = ALIGN(0x10);
        _bdan_sceneSegmentSDataEnd = .;
        _bdan_sceneSegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_scene.o (.ovl)
        . = ALIGN(0x10);
        _bdan_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_sceneSegmentOvlEnd - _bdan_sceneSegmentTextStart );
    _bdan_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_scene.bss ADDR(..bdan_scene) + SIZEOF(..bdan_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_sceneSegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_scene.o (.sbss)
            build/scenes/dungeons/bdan/bdan_scene.o (.scommon)
            build/scenes/dungeons/bdan/bdan_scene.o (.bss)
            build/scenes/dungeons/bdan/bdan_scene.o (COMMON)
        . = ALIGN(0x10);
        _bdan_sceneSegmentBssEnd = .;
        _bdan_sceneSegmentEnd = .;
    }
    _bdan_sceneSegmentBssSize = ABSOLUTE( _bdan_sceneSegmentBssEnd - _bdan_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_0SegmentRomStart = _RomSize;
    ..bdan_room_0 0x03000000 : AT(_RomSize)
    {
        _bdan_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_0SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_0.o (.text)
        _bdan_room_0SegmentTextEnd = .;
    _bdan_room_0SegmentTextSize = ABSOLUTE( _bdan_room_0SegmentTextEnd - _bdan_room_0SegmentTextStart );
        _bdan_room_0SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_0.o (.data)
        _bdan_room_0SegmentDataEnd = .;
    _bdan_room_0SegmentDataSize = ABSOLUTE( _bdan_room_0SegmentDataEnd - _bdan_room_0SegmentDataStart );
        _bdan_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_0.o (.rodata)
        _bdan_room_0SegmentRoDataEnd = .;
    _bdan_room_0SegmentRoDataSize = ABSOLUTE( _bdan_room_0SegmentRoDataEnd - _bdan_room_0SegmentRoDataStart );
        _bdan_room_0SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_0.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_0SegmentSDataEnd = .;
        _bdan_room_0SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_0.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_0SegmentOvlEnd - _bdan_room_0SegmentTextStart );
    _bdan_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_0.bss ADDR(..bdan_room_0) + SIZEOF(..bdan_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_0SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_0.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_0.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_0.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_0.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_0SegmentBssEnd = .;
        _bdan_room_0SegmentEnd = .;
    }
    _bdan_room_0SegmentBssSize = ABSOLUTE( _bdan_room_0SegmentBssEnd - _bdan_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_1SegmentRomStart = _RomSize;
    ..bdan_room_1 0x03000000 : AT(_RomSize)
    {
        _bdan_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_1SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_1.o (.text)
        _bdan_room_1SegmentTextEnd = .;
    _bdan_room_1SegmentTextSize = ABSOLUTE( _bdan_room_1SegmentTextEnd - _bdan_room_1SegmentTextStart );
        _bdan_room_1SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_1.o (.data)
        _bdan_room_1SegmentDataEnd = .;
    _bdan_room_1SegmentDataSize = ABSOLUTE( _bdan_room_1SegmentDataEnd - _bdan_room_1SegmentDataStart );
        _bdan_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_1.o (.rodata)
        _bdan_room_1SegmentRoDataEnd = .;
    _bdan_room_1SegmentRoDataSize = ABSOLUTE( _bdan_room_1SegmentRoDataEnd - _bdan_room_1SegmentRoDataStart );
        _bdan_room_1SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_1.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_1SegmentSDataEnd = .;
        _bdan_room_1SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_1.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_1SegmentOvlEnd - _bdan_room_1SegmentTextStart );
    _bdan_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_1.bss ADDR(..bdan_room_1) + SIZEOF(..bdan_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_1SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_1.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_1.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_1.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_1.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_1SegmentBssEnd = .;
        _bdan_room_1SegmentEnd = .;
    }
    _bdan_room_1SegmentBssSize = ABSOLUTE( _bdan_room_1SegmentBssEnd - _bdan_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_2SegmentRomStart = _RomSize;
    ..bdan_room_2 0x03000000 : AT(_RomSize)
    {
        _bdan_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_2SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_2.o (.text)
        _bdan_room_2SegmentTextEnd = .;
    _bdan_room_2SegmentTextSize = ABSOLUTE( _bdan_room_2SegmentTextEnd - _bdan_room_2SegmentTextStart );
        _bdan_room_2SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_2.o (.data)
        _bdan_room_2SegmentDataEnd = .;
    _bdan_room_2SegmentDataSize = ABSOLUTE( _bdan_room_2SegmentDataEnd - _bdan_room_2SegmentDataStart );
        _bdan_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_2.o (.rodata)
        _bdan_room_2SegmentRoDataEnd = .;
    _bdan_room_2SegmentRoDataSize = ABSOLUTE( _bdan_room_2SegmentRoDataEnd - _bdan_room_2SegmentRoDataStart );
        _bdan_room_2SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_2.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_2SegmentSDataEnd = .;
        _bdan_room_2SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_2.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_2SegmentOvlEnd - _bdan_room_2SegmentTextStart );
    _bdan_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_2.bss ADDR(..bdan_room_2) + SIZEOF(..bdan_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_2SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_2.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_2.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_2.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_2.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_2SegmentBssEnd = .;
        _bdan_room_2SegmentEnd = .;
    }
    _bdan_room_2SegmentBssSize = ABSOLUTE( _bdan_room_2SegmentBssEnd - _bdan_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_3SegmentRomStart = _RomSize;
    ..bdan_room_3 0x03000000 : AT(_RomSize)
    {
        _bdan_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_3SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_3.o (.text)
        _bdan_room_3SegmentTextEnd = .;
    _bdan_room_3SegmentTextSize = ABSOLUTE( _bdan_room_3SegmentTextEnd - _bdan_room_3SegmentTextStart );
        _bdan_room_3SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_3.o (.data)
        _bdan_room_3SegmentDataEnd = .;
    _bdan_room_3SegmentDataSize = ABSOLUTE( _bdan_room_3SegmentDataEnd - _bdan_room_3SegmentDataStart );
        _bdan_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_3.o (.rodata)
        _bdan_room_3SegmentRoDataEnd = .;
    _bdan_room_3SegmentRoDataSize = ABSOLUTE( _bdan_room_3SegmentRoDataEnd - _bdan_room_3SegmentRoDataStart );
        _bdan_room_3SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_3.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_3SegmentSDataEnd = .;
        _bdan_room_3SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_3.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_3SegmentOvlEnd - _bdan_room_3SegmentTextStart );
    _bdan_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_3.bss ADDR(..bdan_room_3) + SIZEOF(..bdan_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_3SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_3.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_3.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_3.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_3.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_3SegmentBssEnd = .;
        _bdan_room_3SegmentEnd = .;
    }
    _bdan_room_3SegmentBssSize = ABSOLUTE( _bdan_room_3SegmentBssEnd - _bdan_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_4SegmentRomStart = _RomSize;
    ..bdan_room_4 0x03000000 : AT(_RomSize)
    {
        _bdan_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_4SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_4.o (.text)
        _bdan_room_4SegmentTextEnd = .;
    _bdan_room_4SegmentTextSize = ABSOLUTE( _bdan_room_4SegmentTextEnd - _bdan_room_4SegmentTextStart );
        _bdan_room_4SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_4.o (.data)
        _bdan_room_4SegmentDataEnd = .;
    _bdan_room_4SegmentDataSize = ABSOLUTE( _bdan_room_4SegmentDataEnd - _bdan_room_4SegmentDataStart );
        _bdan_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_4.o (.rodata)
        _bdan_room_4SegmentRoDataEnd = .;
    _bdan_room_4SegmentRoDataSize = ABSOLUTE( _bdan_room_4SegmentRoDataEnd - _bdan_room_4SegmentRoDataStart );
        _bdan_room_4SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_4.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_4SegmentSDataEnd = .;
        _bdan_room_4SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_4.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_4SegmentOvlEnd - _bdan_room_4SegmentTextStart );
    _bdan_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_4.bss ADDR(..bdan_room_4) + SIZEOF(..bdan_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_4SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_4.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_4.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_4.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_4.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_4SegmentBssEnd = .;
        _bdan_room_4SegmentEnd = .;
    }
    _bdan_room_4SegmentBssSize = ABSOLUTE( _bdan_room_4SegmentBssEnd - _bdan_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_5SegmentRomStart = _RomSize;
    ..bdan_room_5 0x03000000 : AT(_RomSize)
    {
        _bdan_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_5SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_5.o (.text)
        _bdan_room_5SegmentTextEnd = .;
    _bdan_room_5SegmentTextSize = ABSOLUTE( _bdan_room_5SegmentTextEnd - _bdan_room_5SegmentTextStart );
        _bdan_room_5SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_5.o (.data)
        _bdan_room_5SegmentDataEnd = .;
    _bdan_room_5SegmentDataSize = ABSOLUTE( _bdan_room_5SegmentDataEnd - _bdan_room_5SegmentDataStart );
        _bdan_room_5SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_5.o (.rodata)
        _bdan_room_5SegmentRoDataEnd = .;
    _bdan_room_5SegmentRoDataSize = ABSOLUTE( _bdan_room_5SegmentRoDataEnd - _bdan_room_5SegmentRoDataStart );
        _bdan_room_5SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_5.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_5SegmentSDataEnd = .;
        _bdan_room_5SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_5.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_5SegmentOvlEnd - _bdan_room_5SegmentTextStart );
    _bdan_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_5.bss ADDR(..bdan_room_5) + SIZEOF(..bdan_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_5SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_5.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_5.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_5.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_5.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_5SegmentBssEnd = .;
        _bdan_room_5SegmentEnd = .;
    }
    _bdan_room_5SegmentBssSize = ABSOLUTE( _bdan_room_5SegmentBssEnd - _bdan_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_6SegmentRomStart = _RomSize;
    ..bdan_room_6 0x03000000 : AT(_RomSize)
    {
        _bdan_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_6SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_6.o (.text)
        _bdan_room_6SegmentTextEnd = .;
    _bdan_room_6SegmentTextSize = ABSOLUTE( _bdan_room_6SegmentTextEnd - _bdan_room_6SegmentTextStart );
        _bdan_room_6SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_6.o (.data)
        _bdan_room_6SegmentDataEnd = .;
    _bdan_room_6SegmentDataSize = ABSOLUTE( _bdan_room_6SegmentDataEnd - _bdan_room_6SegmentDataStart );
        _bdan_room_6SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_6.o (.rodata)
        _bdan_room_6SegmentRoDataEnd = .;
    _bdan_room_6SegmentRoDataSize = ABSOLUTE( _bdan_room_6SegmentRoDataEnd - _bdan_room_6SegmentRoDataStart );
        _bdan_room_6SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_6.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_6SegmentSDataEnd = .;
        _bdan_room_6SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_6.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_6SegmentOvlEnd - _bdan_room_6SegmentTextStart );
    _bdan_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_6.bss ADDR(..bdan_room_6) + SIZEOF(..bdan_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_6SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_6.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_6.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_6.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_6.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_6SegmentBssEnd = .;
        _bdan_room_6SegmentEnd = .;
    }
    _bdan_room_6SegmentBssSize = ABSOLUTE( _bdan_room_6SegmentBssEnd - _bdan_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_7SegmentRomStart = _RomSize;
    ..bdan_room_7 0x03000000 : AT(_RomSize)
    {
        _bdan_room_7SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_7SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_7.o (.text)
        _bdan_room_7SegmentTextEnd = .;
    _bdan_room_7SegmentTextSize = ABSOLUTE( _bdan_room_7SegmentTextEnd - _bdan_room_7SegmentTextStart );
        _bdan_room_7SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_7.o (.data)
        _bdan_room_7SegmentDataEnd = .;
    _bdan_room_7SegmentDataSize = ABSOLUTE( _bdan_room_7SegmentDataEnd - _bdan_room_7SegmentDataStart );
        _bdan_room_7SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_7.o (.rodata)
        _bdan_room_7SegmentRoDataEnd = .;
    _bdan_room_7SegmentRoDataSize = ABSOLUTE( _bdan_room_7SegmentRoDataEnd - _bdan_room_7SegmentRoDataStart );
        _bdan_room_7SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_7.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_7SegmentSDataEnd = .;
        _bdan_room_7SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_7.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_7SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_7SegmentOvlEnd - _bdan_room_7SegmentTextStart );
    _bdan_room_7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_7.bss ADDR(..bdan_room_7) + SIZEOF(..bdan_room_7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_7SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_7.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_7.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_7.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_7.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_7SegmentBssEnd = .;
        _bdan_room_7SegmentEnd = .;
    }
    _bdan_room_7SegmentBssSize = ABSOLUTE( _bdan_room_7SegmentBssEnd - _bdan_room_7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_8SegmentRomStart = _RomSize;
    ..bdan_room_8 0x03000000 : AT(_RomSize)
    {
        _bdan_room_8SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_8SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_8.o (.text)
        _bdan_room_8SegmentTextEnd = .;
    _bdan_room_8SegmentTextSize = ABSOLUTE( _bdan_room_8SegmentTextEnd - _bdan_room_8SegmentTextStart );
        _bdan_room_8SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_8.o (.data)
        _bdan_room_8SegmentDataEnd = .;
    _bdan_room_8SegmentDataSize = ABSOLUTE( _bdan_room_8SegmentDataEnd - _bdan_room_8SegmentDataStart );
        _bdan_room_8SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_8.o (.rodata)
        _bdan_room_8SegmentRoDataEnd = .;
    _bdan_room_8SegmentRoDataSize = ABSOLUTE( _bdan_room_8SegmentRoDataEnd - _bdan_room_8SegmentRoDataStart );
        _bdan_room_8SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_8.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_8SegmentSDataEnd = .;
        _bdan_room_8SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_8.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_8SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_8SegmentOvlEnd - _bdan_room_8SegmentTextStart );
    _bdan_room_8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_8.bss ADDR(..bdan_room_8) + SIZEOF(..bdan_room_8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_8SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_8.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_8.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_8.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_8.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_8SegmentBssEnd = .;
        _bdan_room_8SegmentEnd = .;
    }
    _bdan_room_8SegmentBssSize = ABSOLUTE( _bdan_room_8SegmentBssEnd - _bdan_room_8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_9SegmentRomStart = _RomSize;
    ..bdan_room_9 0x03000000 : AT(_RomSize)
    {
        _bdan_room_9SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_9SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_9.o (.text)
        _bdan_room_9SegmentTextEnd = .;
    _bdan_room_9SegmentTextSize = ABSOLUTE( _bdan_room_9SegmentTextEnd - _bdan_room_9SegmentTextStart );
        _bdan_room_9SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_9.o (.data)
        _bdan_room_9SegmentDataEnd = .;
    _bdan_room_9SegmentDataSize = ABSOLUTE( _bdan_room_9SegmentDataEnd - _bdan_room_9SegmentDataStart );
        _bdan_room_9SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_9.o (.rodata)
        _bdan_room_9SegmentRoDataEnd = .;
    _bdan_room_9SegmentRoDataSize = ABSOLUTE( _bdan_room_9SegmentRoDataEnd - _bdan_room_9SegmentRoDataStart );
        _bdan_room_9SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_9.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_9SegmentSDataEnd = .;
        _bdan_room_9SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_9.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_9SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_9SegmentOvlEnd - _bdan_room_9SegmentTextStart );
    _bdan_room_9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_9.bss ADDR(..bdan_room_9) + SIZEOF(..bdan_room_9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_9SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_9.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_9.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_9.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_9.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_9SegmentBssEnd = .;
        _bdan_room_9SegmentEnd = .;
    }
    _bdan_room_9SegmentBssSize = ABSOLUTE( _bdan_room_9SegmentBssEnd - _bdan_room_9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_10SegmentRomStart = _RomSize;
    ..bdan_room_10 0x03000000 : AT(_RomSize)
    {
        _bdan_room_10SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_10SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_10.o (.text)
        _bdan_room_10SegmentTextEnd = .;
    _bdan_room_10SegmentTextSize = ABSOLUTE( _bdan_room_10SegmentTextEnd - _bdan_room_10SegmentTextStart );
        _bdan_room_10SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_10.o (.data)
        _bdan_room_10SegmentDataEnd = .;
    _bdan_room_10SegmentDataSize = ABSOLUTE( _bdan_room_10SegmentDataEnd - _bdan_room_10SegmentDataStart );
        _bdan_room_10SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_10.o (.rodata)
        _bdan_room_10SegmentRoDataEnd = .;
    _bdan_room_10SegmentRoDataSize = ABSOLUTE( _bdan_room_10SegmentRoDataEnd - _bdan_room_10SegmentRoDataStart );
        _bdan_room_10SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_10.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_10SegmentSDataEnd = .;
        _bdan_room_10SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_10.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_10SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_10SegmentOvlEnd - _bdan_room_10SegmentTextStart );
    _bdan_room_10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_10.bss ADDR(..bdan_room_10) + SIZEOF(..bdan_room_10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_10SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_10.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_10.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_10.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_10.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_10SegmentBssEnd = .;
        _bdan_room_10SegmentEnd = .;
    }
    _bdan_room_10SegmentBssSize = ABSOLUTE( _bdan_room_10SegmentBssEnd - _bdan_room_10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_11SegmentRomStart = _RomSize;
    ..bdan_room_11 0x03000000 : AT(_RomSize)
    {
        _bdan_room_11SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_11SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_11.o (.text)
        _bdan_room_11SegmentTextEnd = .;
    _bdan_room_11SegmentTextSize = ABSOLUTE( _bdan_room_11SegmentTextEnd - _bdan_room_11SegmentTextStart );
        _bdan_room_11SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_11.o (.data)
        _bdan_room_11SegmentDataEnd = .;
    _bdan_room_11SegmentDataSize = ABSOLUTE( _bdan_room_11SegmentDataEnd - _bdan_room_11SegmentDataStart );
        _bdan_room_11SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_11.o (.rodata)
        _bdan_room_11SegmentRoDataEnd = .;
    _bdan_room_11SegmentRoDataSize = ABSOLUTE( _bdan_room_11SegmentRoDataEnd - _bdan_room_11SegmentRoDataStart );
        _bdan_room_11SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_11.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_11SegmentSDataEnd = .;
        _bdan_room_11SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_11.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_11SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_11SegmentOvlEnd - _bdan_room_11SegmentTextStart );
    _bdan_room_11SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_11.bss ADDR(..bdan_room_11) + SIZEOF(..bdan_room_11) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_11SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_11.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_11.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_11.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_11.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_11SegmentBssEnd = .;
        _bdan_room_11SegmentEnd = .;
    }
    _bdan_room_11SegmentBssSize = ABSOLUTE( _bdan_room_11SegmentBssEnd - _bdan_room_11SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_12SegmentRomStart = _RomSize;
    ..bdan_room_12 0x03000000 : AT(_RomSize)
    {
        _bdan_room_12SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_12SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_12.o (.text)
        _bdan_room_12SegmentTextEnd = .;
    _bdan_room_12SegmentTextSize = ABSOLUTE( _bdan_room_12SegmentTextEnd - _bdan_room_12SegmentTextStart );
        _bdan_room_12SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_12.o (.data)
        _bdan_room_12SegmentDataEnd = .;
    _bdan_room_12SegmentDataSize = ABSOLUTE( _bdan_room_12SegmentDataEnd - _bdan_room_12SegmentDataStart );
        _bdan_room_12SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_12.o (.rodata)
        _bdan_room_12SegmentRoDataEnd = .;
    _bdan_room_12SegmentRoDataSize = ABSOLUTE( _bdan_room_12SegmentRoDataEnd - _bdan_room_12SegmentRoDataStart );
        _bdan_room_12SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_12.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_12SegmentSDataEnd = .;
        _bdan_room_12SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_12.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_12SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_12SegmentOvlEnd - _bdan_room_12SegmentTextStart );
    _bdan_room_12SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_12.bss ADDR(..bdan_room_12) + SIZEOF(..bdan_room_12) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_12SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_12.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_12.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_12.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_12.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_12SegmentBssEnd = .;
        _bdan_room_12SegmentEnd = .;
    }
    _bdan_room_12SegmentBssSize = ABSOLUTE( _bdan_room_12SegmentBssEnd - _bdan_room_12SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_13SegmentRomStart = _RomSize;
    ..bdan_room_13 0x03000000 : AT(_RomSize)
    {
        _bdan_room_13SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_13SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_13.o (.text)
        _bdan_room_13SegmentTextEnd = .;
    _bdan_room_13SegmentTextSize = ABSOLUTE( _bdan_room_13SegmentTextEnd - _bdan_room_13SegmentTextStart );
        _bdan_room_13SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_13.o (.data)
        _bdan_room_13SegmentDataEnd = .;
    _bdan_room_13SegmentDataSize = ABSOLUTE( _bdan_room_13SegmentDataEnd - _bdan_room_13SegmentDataStart );
        _bdan_room_13SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_13.o (.rodata)
        _bdan_room_13SegmentRoDataEnd = .;
    _bdan_room_13SegmentRoDataSize = ABSOLUTE( _bdan_room_13SegmentRoDataEnd - _bdan_room_13SegmentRoDataStart );
        _bdan_room_13SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_13.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_13SegmentSDataEnd = .;
        _bdan_room_13SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_13.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_13SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_13SegmentOvlEnd - _bdan_room_13SegmentTextStart );
    _bdan_room_13SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_13.bss ADDR(..bdan_room_13) + SIZEOF(..bdan_room_13) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_13SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_13.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_13.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_13.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_13.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_13SegmentBssEnd = .;
        _bdan_room_13SegmentEnd = .;
    }
    _bdan_room_13SegmentBssSize = ABSOLUTE( _bdan_room_13SegmentBssEnd - _bdan_room_13SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_14SegmentRomStart = _RomSize;
    ..bdan_room_14 0x03000000 : AT(_RomSize)
    {
        _bdan_room_14SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_14SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_14.o (.text)
        _bdan_room_14SegmentTextEnd = .;
    _bdan_room_14SegmentTextSize = ABSOLUTE( _bdan_room_14SegmentTextEnd - _bdan_room_14SegmentTextStart );
        _bdan_room_14SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_14.o (.data)
        _bdan_room_14SegmentDataEnd = .;
    _bdan_room_14SegmentDataSize = ABSOLUTE( _bdan_room_14SegmentDataEnd - _bdan_room_14SegmentDataStart );
        _bdan_room_14SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_14.o (.rodata)
        _bdan_room_14SegmentRoDataEnd = .;
    _bdan_room_14SegmentRoDataSize = ABSOLUTE( _bdan_room_14SegmentRoDataEnd - _bdan_room_14SegmentRoDataStart );
        _bdan_room_14SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_14.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_14SegmentSDataEnd = .;
        _bdan_room_14SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_14.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_14SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_14SegmentOvlEnd - _bdan_room_14SegmentTextStart );
    _bdan_room_14SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_14.bss ADDR(..bdan_room_14) + SIZEOF(..bdan_room_14) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_14SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_14.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_14.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_14.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_14.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_14SegmentBssEnd = .;
        _bdan_room_14SegmentEnd = .;
    }
    _bdan_room_14SegmentBssSize = ABSOLUTE( _bdan_room_14SegmentBssEnd - _bdan_room_14SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_room_15SegmentRomStart = _RomSize;
    ..bdan_room_15 0x03000000 : AT(_RomSize)
    {
        _bdan_room_15SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_room_15SegmentTextStart = .;
            build/scenes/dungeons/bdan/bdan_room_15.o (.text)
        _bdan_room_15SegmentTextEnd = .;
    _bdan_room_15SegmentTextSize = ABSOLUTE( _bdan_room_15SegmentTextEnd - _bdan_room_15SegmentTextStart );
        _bdan_room_15SegmentDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_15.o (.data)
        _bdan_room_15SegmentDataEnd = .;
    _bdan_room_15SegmentDataSize = ABSOLUTE( _bdan_room_15SegmentDataEnd - _bdan_room_15SegmentDataStart );
        _bdan_room_15SegmentRoDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_15.o (.rodata)
        _bdan_room_15SegmentRoDataEnd = .;
    _bdan_room_15SegmentRoDataSize = ABSOLUTE( _bdan_room_15SegmentRoDataEnd - _bdan_room_15SegmentRoDataStart );
        _bdan_room_15SegmentSDataStart = .;
            build/scenes/dungeons/bdan/bdan_room_15.o (.sdata)
        . = ALIGN(0x10);
        _bdan_room_15SegmentSDataEnd = .;
        _bdan_room_15SegmentOvlStart = .;
            build/scenes/dungeons/bdan/bdan_room_15.o (.ovl)
        . = ALIGN(0x10);
        _bdan_room_15SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_room_15SegmentOvlEnd - _bdan_room_15SegmentTextStart );
    _bdan_room_15SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_room_15.bss ADDR(..bdan_room_15) + SIZEOF(..bdan_room_15) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_room_15SegmentBssStart = .;
            build/scenes/dungeons/bdan/bdan_room_15.o (.sbss)
            build/scenes/dungeons/bdan/bdan_room_15.o (.scommon)
            build/scenes/dungeons/bdan/bdan_room_15.o (.bss)
            build/scenes/dungeons/bdan/bdan_room_15.o (COMMON)
        . = ALIGN(0x10);
        _bdan_room_15SegmentBssEnd = .;
        _bdan_room_15SegmentEnd = .;
    }
    _bdan_room_15SegmentBssSize = ABSOLUTE( _bdan_room_15SegmentBssEnd - _bdan_room_15SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_sceneSegmentRomStart = _RomSize;
    ..Bmori1_scene 0x02000000 : AT(_RomSize)
    {
        _Bmori1_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_sceneSegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_scene.o (.text)
        _Bmori1_sceneSegmentTextEnd = .;
    _Bmori1_sceneSegmentTextSize = ABSOLUTE( _Bmori1_sceneSegmentTextEnd - _Bmori1_sceneSegmentTextStart );
        _Bmori1_sceneSegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_scene.o (.data)
        _Bmori1_sceneSegmentDataEnd = .;
    _Bmori1_sceneSegmentDataSize = ABSOLUTE( _Bmori1_sceneSegmentDataEnd - _Bmori1_sceneSegmentDataStart );
        _Bmori1_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_scene.o (.rodata)
        _Bmori1_sceneSegmentRoDataEnd = .;
    _Bmori1_sceneSegmentRoDataSize = ABSOLUTE( _Bmori1_sceneSegmentRoDataEnd - _Bmori1_sceneSegmentRoDataStart );
        _Bmori1_sceneSegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_scene.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_sceneSegmentSDataEnd = .;
        _Bmori1_sceneSegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_scene.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_sceneSegmentOvlEnd - _Bmori1_sceneSegmentTextStart );
    _Bmori1_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_scene.bss ADDR(..Bmori1_scene) + SIZEOF(..Bmori1_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_sceneSegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_scene.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_scene.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_scene.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_scene.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_sceneSegmentBssEnd = .;
        _Bmori1_sceneSegmentEnd = .;
    }
    _Bmori1_sceneSegmentBssSize = ABSOLUTE( _Bmori1_sceneSegmentBssEnd - _Bmori1_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_0SegmentRomStart = _RomSize;
    ..Bmori1_room_0 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_0SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_0.o (.text)
        _Bmori1_room_0SegmentTextEnd = .;
    _Bmori1_room_0SegmentTextSize = ABSOLUTE( _Bmori1_room_0SegmentTextEnd - _Bmori1_room_0SegmentTextStart );
        _Bmori1_room_0SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_0.o (.data)
        _Bmori1_room_0SegmentDataEnd = .;
    _Bmori1_room_0SegmentDataSize = ABSOLUTE( _Bmori1_room_0SegmentDataEnd - _Bmori1_room_0SegmentDataStart );
        _Bmori1_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_0.o (.rodata)
        _Bmori1_room_0SegmentRoDataEnd = .;
    _Bmori1_room_0SegmentRoDataSize = ABSOLUTE( _Bmori1_room_0SegmentRoDataEnd - _Bmori1_room_0SegmentRoDataStart );
        _Bmori1_room_0SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_0.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_0SegmentSDataEnd = .;
        _Bmori1_room_0SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_0.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_0SegmentOvlEnd - _Bmori1_room_0SegmentTextStart );
    _Bmori1_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_0.bss ADDR(..Bmori1_room_0) + SIZEOF(..Bmori1_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_0SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_0.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_0.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_0.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_0.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_0SegmentBssEnd = .;
        _Bmori1_room_0SegmentEnd = .;
    }
    _Bmori1_room_0SegmentBssSize = ABSOLUTE( _Bmori1_room_0SegmentBssEnd - _Bmori1_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_1SegmentRomStart = _RomSize;
    ..Bmori1_room_1 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_1SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_1.o (.text)
        _Bmori1_room_1SegmentTextEnd = .;
    _Bmori1_room_1SegmentTextSize = ABSOLUTE( _Bmori1_room_1SegmentTextEnd - _Bmori1_room_1SegmentTextStart );
        _Bmori1_room_1SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_1.o (.data)
        _Bmori1_room_1SegmentDataEnd = .;
    _Bmori1_room_1SegmentDataSize = ABSOLUTE( _Bmori1_room_1SegmentDataEnd - _Bmori1_room_1SegmentDataStart );
        _Bmori1_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_1.o (.rodata)
        _Bmori1_room_1SegmentRoDataEnd = .;
    _Bmori1_room_1SegmentRoDataSize = ABSOLUTE( _Bmori1_room_1SegmentRoDataEnd - _Bmori1_room_1SegmentRoDataStart );
        _Bmori1_room_1SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_1.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_1SegmentSDataEnd = .;
        _Bmori1_room_1SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_1.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_1SegmentOvlEnd - _Bmori1_room_1SegmentTextStart );
    _Bmori1_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_1.bss ADDR(..Bmori1_room_1) + SIZEOF(..Bmori1_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_1SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_1.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_1.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_1.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_1.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_1SegmentBssEnd = .;
        _Bmori1_room_1SegmentEnd = .;
    }
    _Bmori1_room_1SegmentBssSize = ABSOLUTE( _Bmori1_room_1SegmentBssEnd - _Bmori1_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_2SegmentRomStart = _RomSize;
    ..Bmori1_room_2 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_2SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_2.o (.text)
        _Bmori1_room_2SegmentTextEnd = .;
    _Bmori1_room_2SegmentTextSize = ABSOLUTE( _Bmori1_room_2SegmentTextEnd - _Bmori1_room_2SegmentTextStart );
        _Bmori1_room_2SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_2.o (.data)
        _Bmori1_room_2SegmentDataEnd = .;
    _Bmori1_room_2SegmentDataSize = ABSOLUTE( _Bmori1_room_2SegmentDataEnd - _Bmori1_room_2SegmentDataStart );
        _Bmori1_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_2.o (.rodata)
        _Bmori1_room_2SegmentRoDataEnd = .;
    _Bmori1_room_2SegmentRoDataSize = ABSOLUTE( _Bmori1_room_2SegmentRoDataEnd - _Bmori1_room_2SegmentRoDataStart );
        _Bmori1_room_2SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_2.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_2SegmentSDataEnd = .;
        _Bmori1_room_2SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_2.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_2SegmentOvlEnd - _Bmori1_room_2SegmentTextStart );
    _Bmori1_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_2.bss ADDR(..Bmori1_room_2) + SIZEOF(..Bmori1_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_2SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_2.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_2.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_2.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_2.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_2SegmentBssEnd = .;
        _Bmori1_room_2SegmentEnd = .;
    }
    _Bmori1_room_2SegmentBssSize = ABSOLUTE( _Bmori1_room_2SegmentBssEnd - _Bmori1_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_3SegmentRomStart = _RomSize;
    ..Bmori1_room_3 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_3SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_3.o (.text)
        _Bmori1_room_3SegmentTextEnd = .;
    _Bmori1_room_3SegmentTextSize = ABSOLUTE( _Bmori1_room_3SegmentTextEnd - _Bmori1_room_3SegmentTextStart );
        _Bmori1_room_3SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_3.o (.data)
        _Bmori1_room_3SegmentDataEnd = .;
    _Bmori1_room_3SegmentDataSize = ABSOLUTE( _Bmori1_room_3SegmentDataEnd - _Bmori1_room_3SegmentDataStart );
        _Bmori1_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_3.o (.rodata)
        _Bmori1_room_3SegmentRoDataEnd = .;
    _Bmori1_room_3SegmentRoDataSize = ABSOLUTE( _Bmori1_room_3SegmentRoDataEnd - _Bmori1_room_3SegmentRoDataStart );
        _Bmori1_room_3SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_3.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_3SegmentSDataEnd = .;
        _Bmori1_room_3SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_3.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_3SegmentOvlEnd - _Bmori1_room_3SegmentTextStart );
    _Bmori1_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_3.bss ADDR(..Bmori1_room_3) + SIZEOF(..Bmori1_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_3SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_3.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_3.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_3.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_3.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_3SegmentBssEnd = .;
        _Bmori1_room_3SegmentEnd = .;
    }
    _Bmori1_room_3SegmentBssSize = ABSOLUTE( _Bmori1_room_3SegmentBssEnd - _Bmori1_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_4SegmentRomStart = _RomSize;
    ..Bmori1_room_4 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_4SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_4.o (.text)
        _Bmori1_room_4SegmentTextEnd = .;
    _Bmori1_room_4SegmentTextSize = ABSOLUTE( _Bmori1_room_4SegmentTextEnd - _Bmori1_room_4SegmentTextStart );
        _Bmori1_room_4SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_4.o (.data)
        _Bmori1_room_4SegmentDataEnd = .;
    _Bmori1_room_4SegmentDataSize = ABSOLUTE( _Bmori1_room_4SegmentDataEnd - _Bmori1_room_4SegmentDataStart );
        _Bmori1_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_4.o (.rodata)
        _Bmori1_room_4SegmentRoDataEnd = .;
    _Bmori1_room_4SegmentRoDataSize = ABSOLUTE( _Bmori1_room_4SegmentRoDataEnd - _Bmori1_room_4SegmentRoDataStart );
        _Bmori1_room_4SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_4.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_4SegmentSDataEnd = .;
        _Bmori1_room_4SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_4.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_4SegmentOvlEnd - _Bmori1_room_4SegmentTextStart );
    _Bmori1_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_4.bss ADDR(..Bmori1_room_4) + SIZEOF(..Bmori1_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_4SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_4.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_4.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_4.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_4.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_4SegmentBssEnd = .;
        _Bmori1_room_4SegmentEnd = .;
    }
    _Bmori1_room_4SegmentBssSize = ABSOLUTE( _Bmori1_room_4SegmentBssEnd - _Bmori1_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_5SegmentRomStart = _RomSize;
    ..Bmori1_room_5 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_5SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_5.o (.text)
        _Bmori1_room_5SegmentTextEnd = .;
    _Bmori1_room_5SegmentTextSize = ABSOLUTE( _Bmori1_room_5SegmentTextEnd - _Bmori1_room_5SegmentTextStart );
        _Bmori1_room_5SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_5.o (.data)
        _Bmori1_room_5SegmentDataEnd = .;
    _Bmori1_room_5SegmentDataSize = ABSOLUTE( _Bmori1_room_5SegmentDataEnd - _Bmori1_room_5SegmentDataStart );
        _Bmori1_room_5SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_5.o (.rodata)
        _Bmori1_room_5SegmentRoDataEnd = .;
    _Bmori1_room_5SegmentRoDataSize = ABSOLUTE( _Bmori1_room_5SegmentRoDataEnd - _Bmori1_room_5SegmentRoDataStart );
        _Bmori1_room_5SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_5.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_5SegmentSDataEnd = .;
        _Bmori1_room_5SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_5.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_5SegmentOvlEnd - _Bmori1_room_5SegmentTextStart );
    _Bmori1_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_5.bss ADDR(..Bmori1_room_5) + SIZEOF(..Bmori1_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_5SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_5.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_5.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_5.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_5.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_5SegmentBssEnd = .;
        _Bmori1_room_5SegmentEnd = .;
    }
    _Bmori1_room_5SegmentBssSize = ABSOLUTE( _Bmori1_room_5SegmentBssEnd - _Bmori1_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_6SegmentRomStart = _RomSize;
    ..Bmori1_room_6 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_6SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_6.o (.text)
        _Bmori1_room_6SegmentTextEnd = .;
    _Bmori1_room_6SegmentTextSize = ABSOLUTE( _Bmori1_room_6SegmentTextEnd - _Bmori1_room_6SegmentTextStart );
        _Bmori1_room_6SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_6.o (.data)
        _Bmori1_room_6SegmentDataEnd = .;
    _Bmori1_room_6SegmentDataSize = ABSOLUTE( _Bmori1_room_6SegmentDataEnd - _Bmori1_room_6SegmentDataStart );
        _Bmori1_room_6SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_6.o (.rodata)
        _Bmori1_room_6SegmentRoDataEnd = .;
    _Bmori1_room_6SegmentRoDataSize = ABSOLUTE( _Bmori1_room_6SegmentRoDataEnd - _Bmori1_room_6SegmentRoDataStart );
        _Bmori1_room_6SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_6.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_6SegmentSDataEnd = .;
        _Bmori1_room_6SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_6.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_6SegmentOvlEnd - _Bmori1_room_6SegmentTextStart );
    _Bmori1_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_6.bss ADDR(..Bmori1_room_6) + SIZEOF(..Bmori1_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_6SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_6.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_6.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_6.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_6.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_6SegmentBssEnd = .;
        _Bmori1_room_6SegmentEnd = .;
    }
    _Bmori1_room_6SegmentBssSize = ABSOLUTE( _Bmori1_room_6SegmentBssEnd - _Bmori1_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_7SegmentRomStart = _RomSize;
    ..Bmori1_room_7 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_7SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_7SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_7.o (.text)
        _Bmori1_room_7SegmentTextEnd = .;
    _Bmori1_room_7SegmentTextSize = ABSOLUTE( _Bmori1_room_7SegmentTextEnd - _Bmori1_room_7SegmentTextStart );
        _Bmori1_room_7SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_7.o (.data)
        _Bmori1_room_7SegmentDataEnd = .;
    _Bmori1_room_7SegmentDataSize = ABSOLUTE( _Bmori1_room_7SegmentDataEnd - _Bmori1_room_7SegmentDataStart );
        _Bmori1_room_7SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_7.o (.rodata)
        _Bmori1_room_7SegmentRoDataEnd = .;
    _Bmori1_room_7SegmentRoDataSize = ABSOLUTE( _Bmori1_room_7SegmentRoDataEnd - _Bmori1_room_7SegmentRoDataStart );
        _Bmori1_room_7SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_7.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_7SegmentSDataEnd = .;
        _Bmori1_room_7SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_7.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_7SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_7SegmentOvlEnd - _Bmori1_room_7SegmentTextStart );
    _Bmori1_room_7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_7.bss ADDR(..Bmori1_room_7) + SIZEOF(..Bmori1_room_7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_7SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_7.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_7.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_7.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_7.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_7SegmentBssEnd = .;
        _Bmori1_room_7SegmentEnd = .;
    }
    _Bmori1_room_7SegmentBssSize = ABSOLUTE( _Bmori1_room_7SegmentBssEnd - _Bmori1_room_7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_8SegmentRomStart = _RomSize;
    ..Bmori1_room_8 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_8SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_8SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_8.o (.text)
        _Bmori1_room_8SegmentTextEnd = .;
    _Bmori1_room_8SegmentTextSize = ABSOLUTE( _Bmori1_room_8SegmentTextEnd - _Bmori1_room_8SegmentTextStart );
        _Bmori1_room_8SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_8.o (.data)
        _Bmori1_room_8SegmentDataEnd = .;
    _Bmori1_room_8SegmentDataSize = ABSOLUTE( _Bmori1_room_8SegmentDataEnd - _Bmori1_room_8SegmentDataStart );
        _Bmori1_room_8SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_8.o (.rodata)
        _Bmori1_room_8SegmentRoDataEnd = .;
    _Bmori1_room_8SegmentRoDataSize = ABSOLUTE( _Bmori1_room_8SegmentRoDataEnd - _Bmori1_room_8SegmentRoDataStart );
        _Bmori1_room_8SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_8.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_8SegmentSDataEnd = .;
        _Bmori1_room_8SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_8.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_8SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_8SegmentOvlEnd - _Bmori1_room_8SegmentTextStart );
    _Bmori1_room_8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_8.bss ADDR(..Bmori1_room_8) + SIZEOF(..Bmori1_room_8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_8SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_8.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_8.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_8.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_8.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_8SegmentBssEnd = .;
        _Bmori1_room_8SegmentEnd = .;
    }
    _Bmori1_room_8SegmentBssSize = ABSOLUTE( _Bmori1_room_8SegmentBssEnd - _Bmori1_room_8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_9SegmentRomStart = _RomSize;
    ..Bmori1_room_9 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_9SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_9SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_9.o (.text)
        _Bmori1_room_9SegmentTextEnd = .;
    _Bmori1_room_9SegmentTextSize = ABSOLUTE( _Bmori1_room_9SegmentTextEnd - _Bmori1_room_9SegmentTextStart );
        _Bmori1_room_9SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_9.o (.data)
        _Bmori1_room_9SegmentDataEnd = .;
    _Bmori1_room_9SegmentDataSize = ABSOLUTE( _Bmori1_room_9SegmentDataEnd - _Bmori1_room_9SegmentDataStart );
        _Bmori1_room_9SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_9.o (.rodata)
        _Bmori1_room_9SegmentRoDataEnd = .;
    _Bmori1_room_9SegmentRoDataSize = ABSOLUTE( _Bmori1_room_9SegmentRoDataEnd - _Bmori1_room_9SegmentRoDataStart );
        _Bmori1_room_9SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_9.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_9SegmentSDataEnd = .;
        _Bmori1_room_9SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_9.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_9SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_9SegmentOvlEnd - _Bmori1_room_9SegmentTextStart );
    _Bmori1_room_9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_9.bss ADDR(..Bmori1_room_9) + SIZEOF(..Bmori1_room_9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_9SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_9.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_9.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_9.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_9.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_9SegmentBssEnd = .;
        _Bmori1_room_9SegmentEnd = .;
    }
    _Bmori1_room_9SegmentBssSize = ABSOLUTE( _Bmori1_room_9SegmentBssEnd - _Bmori1_room_9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_10SegmentRomStart = _RomSize;
    ..Bmori1_room_10 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_10SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_10SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_10.o (.text)
        _Bmori1_room_10SegmentTextEnd = .;
    _Bmori1_room_10SegmentTextSize = ABSOLUTE( _Bmori1_room_10SegmentTextEnd - _Bmori1_room_10SegmentTextStart );
        _Bmori1_room_10SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_10.o (.data)
        _Bmori1_room_10SegmentDataEnd = .;
    _Bmori1_room_10SegmentDataSize = ABSOLUTE( _Bmori1_room_10SegmentDataEnd - _Bmori1_room_10SegmentDataStart );
        _Bmori1_room_10SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_10.o (.rodata)
        _Bmori1_room_10SegmentRoDataEnd = .;
    _Bmori1_room_10SegmentRoDataSize = ABSOLUTE( _Bmori1_room_10SegmentRoDataEnd - _Bmori1_room_10SegmentRoDataStart );
        _Bmori1_room_10SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_10.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_10SegmentSDataEnd = .;
        _Bmori1_room_10SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_10.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_10SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_10SegmentOvlEnd - _Bmori1_room_10SegmentTextStart );
    _Bmori1_room_10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_10.bss ADDR(..Bmori1_room_10) + SIZEOF(..Bmori1_room_10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_10SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_10.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_10.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_10.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_10.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_10SegmentBssEnd = .;
        _Bmori1_room_10SegmentEnd = .;
    }
    _Bmori1_room_10SegmentBssSize = ABSOLUTE( _Bmori1_room_10SegmentBssEnd - _Bmori1_room_10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_11SegmentRomStart = _RomSize;
    ..Bmori1_room_11 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_11SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_11SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_11.o (.text)
        _Bmori1_room_11SegmentTextEnd = .;
    _Bmori1_room_11SegmentTextSize = ABSOLUTE( _Bmori1_room_11SegmentTextEnd - _Bmori1_room_11SegmentTextStart );
        _Bmori1_room_11SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_11.o (.data)
        _Bmori1_room_11SegmentDataEnd = .;
    _Bmori1_room_11SegmentDataSize = ABSOLUTE( _Bmori1_room_11SegmentDataEnd - _Bmori1_room_11SegmentDataStart );
        _Bmori1_room_11SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_11.o (.rodata)
        _Bmori1_room_11SegmentRoDataEnd = .;
    _Bmori1_room_11SegmentRoDataSize = ABSOLUTE( _Bmori1_room_11SegmentRoDataEnd - _Bmori1_room_11SegmentRoDataStart );
        _Bmori1_room_11SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_11.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_11SegmentSDataEnd = .;
        _Bmori1_room_11SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_11.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_11SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_11SegmentOvlEnd - _Bmori1_room_11SegmentTextStart );
    _Bmori1_room_11SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_11.bss ADDR(..Bmori1_room_11) + SIZEOF(..Bmori1_room_11) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_11SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_11.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_11.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_11.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_11.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_11SegmentBssEnd = .;
        _Bmori1_room_11SegmentEnd = .;
    }
    _Bmori1_room_11SegmentBssSize = ABSOLUTE( _Bmori1_room_11SegmentBssEnd - _Bmori1_room_11SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_12SegmentRomStart = _RomSize;
    ..Bmori1_room_12 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_12SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_12SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_12.o (.text)
        _Bmori1_room_12SegmentTextEnd = .;
    _Bmori1_room_12SegmentTextSize = ABSOLUTE( _Bmori1_room_12SegmentTextEnd - _Bmori1_room_12SegmentTextStart );
        _Bmori1_room_12SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_12.o (.data)
        _Bmori1_room_12SegmentDataEnd = .;
    _Bmori1_room_12SegmentDataSize = ABSOLUTE( _Bmori1_room_12SegmentDataEnd - _Bmori1_room_12SegmentDataStart );
        _Bmori1_room_12SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_12.o (.rodata)
        _Bmori1_room_12SegmentRoDataEnd = .;
    _Bmori1_room_12SegmentRoDataSize = ABSOLUTE( _Bmori1_room_12SegmentRoDataEnd - _Bmori1_room_12SegmentRoDataStart );
        _Bmori1_room_12SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_12.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_12SegmentSDataEnd = .;
        _Bmori1_room_12SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_12.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_12SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_12SegmentOvlEnd - _Bmori1_room_12SegmentTextStart );
    _Bmori1_room_12SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_12.bss ADDR(..Bmori1_room_12) + SIZEOF(..Bmori1_room_12) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_12SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_12.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_12.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_12.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_12.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_12SegmentBssEnd = .;
        _Bmori1_room_12SegmentEnd = .;
    }
    _Bmori1_room_12SegmentBssSize = ABSOLUTE( _Bmori1_room_12SegmentBssEnd - _Bmori1_room_12SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_13SegmentRomStart = _RomSize;
    ..Bmori1_room_13 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_13SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_13SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_13.o (.text)
        _Bmori1_room_13SegmentTextEnd = .;
    _Bmori1_room_13SegmentTextSize = ABSOLUTE( _Bmori1_room_13SegmentTextEnd - _Bmori1_room_13SegmentTextStart );
        _Bmori1_room_13SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_13.o (.data)
        _Bmori1_room_13SegmentDataEnd = .;
    _Bmori1_room_13SegmentDataSize = ABSOLUTE( _Bmori1_room_13SegmentDataEnd - _Bmori1_room_13SegmentDataStart );
        _Bmori1_room_13SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_13.o (.rodata)
        _Bmori1_room_13SegmentRoDataEnd = .;
    _Bmori1_room_13SegmentRoDataSize = ABSOLUTE( _Bmori1_room_13SegmentRoDataEnd - _Bmori1_room_13SegmentRoDataStart );
        _Bmori1_room_13SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_13.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_13SegmentSDataEnd = .;
        _Bmori1_room_13SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_13.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_13SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_13SegmentOvlEnd - _Bmori1_room_13SegmentTextStart );
    _Bmori1_room_13SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_13.bss ADDR(..Bmori1_room_13) + SIZEOF(..Bmori1_room_13) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_13SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_13.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_13.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_13.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_13.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_13SegmentBssEnd = .;
        _Bmori1_room_13SegmentEnd = .;
    }
    _Bmori1_room_13SegmentBssSize = ABSOLUTE( _Bmori1_room_13SegmentBssEnd - _Bmori1_room_13SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_14SegmentRomStart = _RomSize;
    ..Bmori1_room_14 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_14SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_14SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_14.o (.text)
        _Bmori1_room_14SegmentTextEnd = .;
    _Bmori1_room_14SegmentTextSize = ABSOLUTE( _Bmori1_room_14SegmentTextEnd - _Bmori1_room_14SegmentTextStart );
        _Bmori1_room_14SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_14.o (.data)
        _Bmori1_room_14SegmentDataEnd = .;
    _Bmori1_room_14SegmentDataSize = ABSOLUTE( _Bmori1_room_14SegmentDataEnd - _Bmori1_room_14SegmentDataStart );
        _Bmori1_room_14SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_14.o (.rodata)
        _Bmori1_room_14SegmentRoDataEnd = .;
    _Bmori1_room_14SegmentRoDataSize = ABSOLUTE( _Bmori1_room_14SegmentRoDataEnd - _Bmori1_room_14SegmentRoDataStart );
        _Bmori1_room_14SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_14.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_14SegmentSDataEnd = .;
        _Bmori1_room_14SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_14.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_14SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_14SegmentOvlEnd - _Bmori1_room_14SegmentTextStart );
    _Bmori1_room_14SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_14.bss ADDR(..Bmori1_room_14) + SIZEOF(..Bmori1_room_14) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_14SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_14.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_14.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_14.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_14.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_14SegmentBssEnd = .;
        _Bmori1_room_14SegmentEnd = .;
    }
    _Bmori1_room_14SegmentBssSize = ABSOLUTE( _Bmori1_room_14SegmentBssEnd - _Bmori1_room_14SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_15SegmentRomStart = _RomSize;
    ..Bmori1_room_15 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_15SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_15SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_15.o (.text)
        _Bmori1_room_15SegmentTextEnd = .;
    _Bmori1_room_15SegmentTextSize = ABSOLUTE( _Bmori1_room_15SegmentTextEnd - _Bmori1_room_15SegmentTextStart );
        _Bmori1_room_15SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_15.o (.data)
        _Bmori1_room_15SegmentDataEnd = .;
    _Bmori1_room_15SegmentDataSize = ABSOLUTE( _Bmori1_room_15SegmentDataEnd - _Bmori1_room_15SegmentDataStart );
        _Bmori1_room_15SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_15.o (.rodata)
        _Bmori1_room_15SegmentRoDataEnd = .;
    _Bmori1_room_15SegmentRoDataSize = ABSOLUTE( _Bmori1_room_15SegmentRoDataEnd - _Bmori1_room_15SegmentRoDataStart );
        _Bmori1_room_15SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_15.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_15SegmentSDataEnd = .;
        _Bmori1_room_15SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_15.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_15SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_15SegmentOvlEnd - _Bmori1_room_15SegmentTextStart );
    _Bmori1_room_15SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_15.bss ADDR(..Bmori1_room_15) + SIZEOF(..Bmori1_room_15) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_15SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_15.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_15.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_15.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_15.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_15SegmentBssEnd = .;
        _Bmori1_room_15SegmentEnd = .;
    }
    _Bmori1_room_15SegmentBssSize = ABSOLUTE( _Bmori1_room_15SegmentBssEnd - _Bmori1_room_15SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_16SegmentRomStart = _RomSize;
    ..Bmori1_room_16 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_16SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_16SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_16.o (.text)
        _Bmori1_room_16SegmentTextEnd = .;
    _Bmori1_room_16SegmentTextSize = ABSOLUTE( _Bmori1_room_16SegmentTextEnd - _Bmori1_room_16SegmentTextStart );
        _Bmori1_room_16SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_16.o (.data)
        _Bmori1_room_16SegmentDataEnd = .;
    _Bmori1_room_16SegmentDataSize = ABSOLUTE( _Bmori1_room_16SegmentDataEnd - _Bmori1_room_16SegmentDataStart );
        _Bmori1_room_16SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_16.o (.rodata)
        _Bmori1_room_16SegmentRoDataEnd = .;
    _Bmori1_room_16SegmentRoDataSize = ABSOLUTE( _Bmori1_room_16SegmentRoDataEnd - _Bmori1_room_16SegmentRoDataStart );
        _Bmori1_room_16SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_16.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_16SegmentSDataEnd = .;
        _Bmori1_room_16SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_16.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_16SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_16SegmentOvlEnd - _Bmori1_room_16SegmentTextStart );
    _Bmori1_room_16SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_16.bss ADDR(..Bmori1_room_16) + SIZEOF(..Bmori1_room_16) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_16SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_16.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_16.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_16.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_16.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_16SegmentBssEnd = .;
        _Bmori1_room_16SegmentEnd = .;
    }
    _Bmori1_room_16SegmentBssSize = ABSOLUTE( _Bmori1_room_16SegmentBssEnd - _Bmori1_room_16SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_17SegmentRomStart = _RomSize;
    ..Bmori1_room_17 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_17SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_17SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_17.o (.text)
        _Bmori1_room_17SegmentTextEnd = .;
    _Bmori1_room_17SegmentTextSize = ABSOLUTE( _Bmori1_room_17SegmentTextEnd - _Bmori1_room_17SegmentTextStart );
        _Bmori1_room_17SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_17.o (.data)
        _Bmori1_room_17SegmentDataEnd = .;
    _Bmori1_room_17SegmentDataSize = ABSOLUTE( _Bmori1_room_17SegmentDataEnd - _Bmori1_room_17SegmentDataStart );
        _Bmori1_room_17SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_17.o (.rodata)
        _Bmori1_room_17SegmentRoDataEnd = .;
    _Bmori1_room_17SegmentRoDataSize = ABSOLUTE( _Bmori1_room_17SegmentRoDataEnd - _Bmori1_room_17SegmentRoDataStart );
        _Bmori1_room_17SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_17.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_17SegmentSDataEnd = .;
        _Bmori1_room_17SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_17.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_17SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_17SegmentOvlEnd - _Bmori1_room_17SegmentTextStart );
    _Bmori1_room_17SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_17.bss ADDR(..Bmori1_room_17) + SIZEOF(..Bmori1_room_17) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_17SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_17.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_17.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_17.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_17.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_17SegmentBssEnd = .;
        _Bmori1_room_17SegmentEnd = .;
    }
    _Bmori1_room_17SegmentBssSize = ABSOLUTE( _Bmori1_room_17SegmentBssEnd - _Bmori1_room_17SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_18SegmentRomStart = _RomSize;
    ..Bmori1_room_18 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_18SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_18SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_18.o (.text)
        _Bmori1_room_18SegmentTextEnd = .;
    _Bmori1_room_18SegmentTextSize = ABSOLUTE( _Bmori1_room_18SegmentTextEnd - _Bmori1_room_18SegmentTextStart );
        _Bmori1_room_18SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_18.o (.data)
        _Bmori1_room_18SegmentDataEnd = .;
    _Bmori1_room_18SegmentDataSize = ABSOLUTE( _Bmori1_room_18SegmentDataEnd - _Bmori1_room_18SegmentDataStart );
        _Bmori1_room_18SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_18.o (.rodata)
        _Bmori1_room_18SegmentRoDataEnd = .;
    _Bmori1_room_18SegmentRoDataSize = ABSOLUTE( _Bmori1_room_18SegmentRoDataEnd - _Bmori1_room_18SegmentRoDataStart );
        _Bmori1_room_18SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_18.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_18SegmentSDataEnd = .;
        _Bmori1_room_18SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_18.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_18SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_18SegmentOvlEnd - _Bmori1_room_18SegmentTextStart );
    _Bmori1_room_18SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_18.bss ADDR(..Bmori1_room_18) + SIZEOF(..Bmori1_room_18) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_18SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_18.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_18.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_18.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_18.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_18SegmentBssEnd = .;
        _Bmori1_room_18SegmentEnd = .;
    }
    _Bmori1_room_18SegmentBssSize = ABSOLUTE( _Bmori1_room_18SegmentBssEnd - _Bmori1_room_18SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_19SegmentRomStart = _RomSize;
    ..Bmori1_room_19 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_19SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_19SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_19.o (.text)
        _Bmori1_room_19SegmentTextEnd = .;
    _Bmori1_room_19SegmentTextSize = ABSOLUTE( _Bmori1_room_19SegmentTextEnd - _Bmori1_room_19SegmentTextStart );
        _Bmori1_room_19SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_19.o (.data)
        _Bmori1_room_19SegmentDataEnd = .;
    _Bmori1_room_19SegmentDataSize = ABSOLUTE( _Bmori1_room_19SegmentDataEnd - _Bmori1_room_19SegmentDataStart );
        _Bmori1_room_19SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_19.o (.rodata)
        _Bmori1_room_19SegmentRoDataEnd = .;
    _Bmori1_room_19SegmentRoDataSize = ABSOLUTE( _Bmori1_room_19SegmentRoDataEnd - _Bmori1_room_19SegmentRoDataStart );
        _Bmori1_room_19SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_19.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_19SegmentSDataEnd = .;
        _Bmori1_room_19SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_19.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_19SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_19SegmentOvlEnd - _Bmori1_room_19SegmentTextStart );
    _Bmori1_room_19SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_19.bss ADDR(..Bmori1_room_19) + SIZEOF(..Bmori1_room_19) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_19SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_19.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_19.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_19.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_19.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_19SegmentBssEnd = .;
        _Bmori1_room_19SegmentEnd = .;
    }
    _Bmori1_room_19SegmentBssSize = ABSOLUTE( _Bmori1_room_19SegmentBssEnd - _Bmori1_room_19SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_20SegmentRomStart = _RomSize;
    ..Bmori1_room_20 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_20SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_20SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_20.o (.text)
        _Bmori1_room_20SegmentTextEnd = .;
    _Bmori1_room_20SegmentTextSize = ABSOLUTE( _Bmori1_room_20SegmentTextEnd - _Bmori1_room_20SegmentTextStart );
        _Bmori1_room_20SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_20.o (.data)
        _Bmori1_room_20SegmentDataEnd = .;
    _Bmori1_room_20SegmentDataSize = ABSOLUTE( _Bmori1_room_20SegmentDataEnd - _Bmori1_room_20SegmentDataStart );
        _Bmori1_room_20SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_20.o (.rodata)
        _Bmori1_room_20SegmentRoDataEnd = .;
    _Bmori1_room_20SegmentRoDataSize = ABSOLUTE( _Bmori1_room_20SegmentRoDataEnd - _Bmori1_room_20SegmentRoDataStart );
        _Bmori1_room_20SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_20.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_20SegmentSDataEnd = .;
        _Bmori1_room_20SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_20.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_20SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_20SegmentOvlEnd - _Bmori1_room_20SegmentTextStart );
    _Bmori1_room_20SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_20.bss ADDR(..Bmori1_room_20) + SIZEOF(..Bmori1_room_20) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_20SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_20.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_20.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_20.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_20.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_20SegmentBssEnd = .;
        _Bmori1_room_20SegmentEnd = .;
    }
    _Bmori1_room_20SegmentBssSize = ABSOLUTE( _Bmori1_room_20SegmentBssEnd - _Bmori1_room_20SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_21SegmentRomStart = _RomSize;
    ..Bmori1_room_21 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_21SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_21SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_21.o (.text)
        _Bmori1_room_21SegmentTextEnd = .;
    _Bmori1_room_21SegmentTextSize = ABSOLUTE( _Bmori1_room_21SegmentTextEnd - _Bmori1_room_21SegmentTextStart );
        _Bmori1_room_21SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_21.o (.data)
        _Bmori1_room_21SegmentDataEnd = .;
    _Bmori1_room_21SegmentDataSize = ABSOLUTE( _Bmori1_room_21SegmentDataEnd - _Bmori1_room_21SegmentDataStart );
        _Bmori1_room_21SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_21.o (.rodata)
        _Bmori1_room_21SegmentRoDataEnd = .;
    _Bmori1_room_21SegmentRoDataSize = ABSOLUTE( _Bmori1_room_21SegmentRoDataEnd - _Bmori1_room_21SegmentRoDataStart );
        _Bmori1_room_21SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_21.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_21SegmentSDataEnd = .;
        _Bmori1_room_21SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_21.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_21SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_21SegmentOvlEnd - _Bmori1_room_21SegmentTextStart );
    _Bmori1_room_21SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_21.bss ADDR(..Bmori1_room_21) + SIZEOF(..Bmori1_room_21) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_21SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_21.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_21.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_21.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_21.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_21SegmentBssEnd = .;
        _Bmori1_room_21SegmentEnd = .;
    }
    _Bmori1_room_21SegmentBssSize = ABSOLUTE( _Bmori1_room_21SegmentBssEnd - _Bmori1_room_21SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _Bmori1_room_22SegmentRomStart = _RomSize;
    ..Bmori1_room_22 0x03000000 : AT(_RomSize)
    {
        _Bmori1_room_22SegmentStart = .;
        . = ALIGN(0x10);
        _Bmori1_room_22SegmentTextStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_22.o (.text)
        _Bmori1_room_22SegmentTextEnd = .;
    _Bmori1_room_22SegmentTextSize = ABSOLUTE( _Bmori1_room_22SegmentTextEnd - _Bmori1_room_22SegmentTextStart );
        _Bmori1_room_22SegmentDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_22.o (.data)
        _Bmori1_room_22SegmentDataEnd = .;
    _Bmori1_room_22SegmentDataSize = ABSOLUTE( _Bmori1_room_22SegmentDataEnd - _Bmori1_room_22SegmentDataStart );
        _Bmori1_room_22SegmentRoDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_22.o (.rodata)
        _Bmori1_room_22SegmentRoDataEnd = .;
    _Bmori1_room_22SegmentRoDataSize = ABSOLUTE( _Bmori1_room_22SegmentRoDataEnd - _Bmori1_room_22SegmentRoDataStart );
        _Bmori1_room_22SegmentSDataStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_22.o (.sdata)
        . = ALIGN(0x10);
        _Bmori1_room_22SegmentSDataEnd = .;
        _Bmori1_room_22SegmentOvlStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_22.o (.ovl)
        . = ALIGN(0x10);
        _Bmori1_room_22SegmentOvlEnd = .;
    }
    _RomSize += ( _Bmori1_room_22SegmentOvlEnd - _Bmori1_room_22SegmentTextStart );
    _Bmori1_room_22SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..Bmori1_room_22.bss ADDR(..Bmori1_room_22) + SIZEOF(..Bmori1_room_22) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _Bmori1_room_22SegmentBssStart = .;
            build/scenes/dungeons/Bmori1/Bmori1_room_22.o (.sbss)
            build/scenes/dungeons/Bmori1/Bmori1_room_22.o (.scommon)
            build/scenes/dungeons/Bmori1/Bmori1_room_22.o (.bss)
            build/scenes/dungeons/Bmori1/Bmori1_room_22.o (COMMON)
        . = ALIGN(0x10);
        _Bmori1_room_22SegmentBssEnd = .;
        _Bmori1_room_22SegmentEnd = .;
    }
    _Bmori1_room_22SegmentBssSize = ABSOLUTE( _Bmori1_room_22SegmentBssEnd - _Bmori1_room_22SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_sceneSegmentRomStart = _RomSize;
    ..HIDAN_scene 0x02000000 : AT(_RomSize)
    {
        _HIDAN_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_sceneSegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_scene.o (.text)
        _HIDAN_sceneSegmentTextEnd = .;
    _HIDAN_sceneSegmentTextSize = ABSOLUTE( _HIDAN_sceneSegmentTextEnd - _HIDAN_sceneSegmentTextStart );
        _HIDAN_sceneSegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_scene.o (.data)
        _HIDAN_sceneSegmentDataEnd = .;
    _HIDAN_sceneSegmentDataSize = ABSOLUTE( _HIDAN_sceneSegmentDataEnd - _HIDAN_sceneSegmentDataStart );
        _HIDAN_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_scene.o (.rodata)
        _HIDAN_sceneSegmentRoDataEnd = .;
    _HIDAN_sceneSegmentRoDataSize = ABSOLUTE( _HIDAN_sceneSegmentRoDataEnd - _HIDAN_sceneSegmentRoDataStart );
        _HIDAN_sceneSegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_scene.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_sceneSegmentSDataEnd = .;
        _HIDAN_sceneSegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_scene.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_sceneSegmentOvlEnd - _HIDAN_sceneSegmentTextStart );
    _HIDAN_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_scene.bss ADDR(..HIDAN_scene) + SIZEOF(..HIDAN_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_sceneSegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_scene.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_scene.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_scene.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_scene.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_sceneSegmentBssEnd = .;
        _HIDAN_sceneSegmentEnd = .;
    }
    _HIDAN_sceneSegmentBssSize = ABSOLUTE( _HIDAN_sceneSegmentBssEnd - _HIDAN_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_0SegmentRomStart = _RomSize;
    ..HIDAN_room_0 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_0SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_0.o (.text)
        _HIDAN_room_0SegmentTextEnd = .;
    _HIDAN_room_0SegmentTextSize = ABSOLUTE( _HIDAN_room_0SegmentTextEnd - _HIDAN_room_0SegmentTextStart );
        _HIDAN_room_0SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_0.o (.data)
        _HIDAN_room_0SegmentDataEnd = .;
    _HIDAN_room_0SegmentDataSize = ABSOLUTE( _HIDAN_room_0SegmentDataEnd - _HIDAN_room_0SegmentDataStart );
        _HIDAN_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_0.o (.rodata)
        _HIDAN_room_0SegmentRoDataEnd = .;
    _HIDAN_room_0SegmentRoDataSize = ABSOLUTE( _HIDAN_room_0SegmentRoDataEnd - _HIDAN_room_0SegmentRoDataStart );
        _HIDAN_room_0SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_0.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_0SegmentSDataEnd = .;
        _HIDAN_room_0SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_0.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_0SegmentOvlEnd - _HIDAN_room_0SegmentTextStart );
    _HIDAN_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_0.bss ADDR(..HIDAN_room_0) + SIZEOF(..HIDAN_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_0SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_0.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_0.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_0.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_0.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_0SegmentBssEnd = .;
        _HIDAN_room_0SegmentEnd = .;
    }
    _HIDAN_room_0SegmentBssSize = ABSOLUTE( _HIDAN_room_0SegmentBssEnd - _HIDAN_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_1SegmentRomStart = _RomSize;
    ..HIDAN_room_1 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_1SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_1.o (.text)
        _HIDAN_room_1SegmentTextEnd = .;
    _HIDAN_room_1SegmentTextSize = ABSOLUTE( _HIDAN_room_1SegmentTextEnd - _HIDAN_room_1SegmentTextStart );
        _HIDAN_room_1SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_1.o (.data)
        _HIDAN_room_1SegmentDataEnd = .;
    _HIDAN_room_1SegmentDataSize = ABSOLUTE( _HIDAN_room_1SegmentDataEnd - _HIDAN_room_1SegmentDataStart );
        _HIDAN_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_1.o (.rodata)
        _HIDAN_room_1SegmentRoDataEnd = .;
    _HIDAN_room_1SegmentRoDataSize = ABSOLUTE( _HIDAN_room_1SegmentRoDataEnd - _HIDAN_room_1SegmentRoDataStart );
        _HIDAN_room_1SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_1.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_1SegmentSDataEnd = .;
        _HIDAN_room_1SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_1.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_1SegmentOvlEnd - _HIDAN_room_1SegmentTextStart );
    _HIDAN_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_1.bss ADDR(..HIDAN_room_1) + SIZEOF(..HIDAN_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_1SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_1.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_1.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_1.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_1.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_1SegmentBssEnd = .;
        _HIDAN_room_1SegmentEnd = .;
    }
    _HIDAN_room_1SegmentBssSize = ABSOLUTE( _HIDAN_room_1SegmentBssEnd - _HIDAN_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_2SegmentRomStart = _RomSize;
    ..HIDAN_room_2 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_2SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_2.o (.text)
        _HIDAN_room_2SegmentTextEnd = .;
    _HIDAN_room_2SegmentTextSize = ABSOLUTE( _HIDAN_room_2SegmentTextEnd - _HIDAN_room_2SegmentTextStart );
        _HIDAN_room_2SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_2.o (.data)
        _HIDAN_room_2SegmentDataEnd = .;
    _HIDAN_room_2SegmentDataSize = ABSOLUTE( _HIDAN_room_2SegmentDataEnd - _HIDAN_room_2SegmentDataStart );
        _HIDAN_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_2.o (.rodata)
        _HIDAN_room_2SegmentRoDataEnd = .;
    _HIDAN_room_2SegmentRoDataSize = ABSOLUTE( _HIDAN_room_2SegmentRoDataEnd - _HIDAN_room_2SegmentRoDataStart );
        _HIDAN_room_2SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_2.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_2SegmentSDataEnd = .;
        _HIDAN_room_2SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_2.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_2SegmentOvlEnd - _HIDAN_room_2SegmentTextStart );
    _HIDAN_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_2.bss ADDR(..HIDAN_room_2) + SIZEOF(..HIDAN_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_2SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_2.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_2.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_2.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_2.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_2SegmentBssEnd = .;
        _HIDAN_room_2SegmentEnd = .;
    }
    _HIDAN_room_2SegmentBssSize = ABSOLUTE( _HIDAN_room_2SegmentBssEnd - _HIDAN_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_3SegmentRomStart = _RomSize;
    ..HIDAN_room_3 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_3SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_3.o (.text)
        _HIDAN_room_3SegmentTextEnd = .;
    _HIDAN_room_3SegmentTextSize = ABSOLUTE( _HIDAN_room_3SegmentTextEnd - _HIDAN_room_3SegmentTextStart );
        _HIDAN_room_3SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_3.o (.data)
        _HIDAN_room_3SegmentDataEnd = .;
    _HIDAN_room_3SegmentDataSize = ABSOLUTE( _HIDAN_room_3SegmentDataEnd - _HIDAN_room_3SegmentDataStart );
        _HIDAN_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_3.o (.rodata)
        _HIDAN_room_3SegmentRoDataEnd = .;
    _HIDAN_room_3SegmentRoDataSize = ABSOLUTE( _HIDAN_room_3SegmentRoDataEnd - _HIDAN_room_3SegmentRoDataStart );
        _HIDAN_room_3SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_3.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_3SegmentSDataEnd = .;
        _HIDAN_room_3SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_3.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_3SegmentOvlEnd - _HIDAN_room_3SegmentTextStart );
    _HIDAN_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_3.bss ADDR(..HIDAN_room_3) + SIZEOF(..HIDAN_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_3SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_3.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_3.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_3.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_3.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_3SegmentBssEnd = .;
        _HIDAN_room_3SegmentEnd = .;
    }
    _HIDAN_room_3SegmentBssSize = ABSOLUTE( _HIDAN_room_3SegmentBssEnd - _HIDAN_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_4SegmentRomStart = _RomSize;
    ..HIDAN_room_4 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_4SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_4.o (.text)
        _HIDAN_room_4SegmentTextEnd = .;
    _HIDAN_room_4SegmentTextSize = ABSOLUTE( _HIDAN_room_4SegmentTextEnd - _HIDAN_room_4SegmentTextStart );
        _HIDAN_room_4SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_4.o (.data)
        _HIDAN_room_4SegmentDataEnd = .;
    _HIDAN_room_4SegmentDataSize = ABSOLUTE( _HIDAN_room_4SegmentDataEnd - _HIDAN_room_4SegmentDataStart );
        _HIDAN_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_4.o (.rodata)
        _HIDAN_room_4SegmentRoDataEnd = .;
    _HIDAN_room_4SegmentRoDataSize = ABSOLUTE( _HIDAN_room_4SegmentRoDataEnd - _HIDAN_room_4SegmentRoDataStart );
        _HIDAN_room_4SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_4.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_4SegmentSDataEnd = .;
        _HIDAN_room_4SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_4.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_4SegmentOvlEnd - _HIDAN_room_4SegmentTextStart );
    _HIDAN_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_4.bss ADDR(..HIDAN_room_4) + SIZEOF(..HIDAN_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_4SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_4.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_4.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_4.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_4.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_4SegmentBssEnd = .;
        _HIDAN_room_4SegmentEnd = .;
    }
    _HIDAN_room_4SegmentBssSize = ABSOLUTE( _HIDAN_room_4SegmentBssEnd - _HIDAN_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_5SegmentRomStart = _RomSize;
    ..HIDAN_room_5 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_5SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_5.o (.text)
        _HIDAN_room_5SegmentTextEnd = .;
    _HIDAN_room_5SegmentTextSize = ABSOLUTE( _HIDAN_room_5SegmentTextEnd - _HIDAN_room_5SegmentTextStart );
        _HIDAN_room_5SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_5.o (.data)
        _HIDAN_room_5SegmentDataEnd = .;
    _HIDAN_room_5SegmentDataSize = ABSOLUTE( _HIDAN_room_5SegmentDataEnd - _HIDAN_room_5SegmentDataStart );
        _HIDAN_room_5SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_5.o (.rodata)
        _HIDAN_room_5SegmentRoDataEnd = .;
    _HIDAN_room_5SegmentRoDataSize = ABSOLUTE( _HIDAN_room_5SegmentRoDataEnd - _HIDAN_room_5SegmentRoDataStart );
        _HIDAN_room_5SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_5.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_5SegmentSDataEnd = .;
        _HIDAN_room_5SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_5.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_5SegmentOvlEnd - _HIDAN_room_5SegmentTextStart );
    _HIDAN_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_5.bss ADDR(..HIDAN_room_5) + SIZEOF(..HIDAN_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_5SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_5.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_5.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_5.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_5.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_5SegmentBssEnd = .;
        _HIDAN_room_5SegmentEnd = .;
    }
    _HIDAN_room_5SegmentBssSize = ABSOLUTE( _HIDAN_room_5SegmentBssEnd - _HIDAN_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_6SegmentRomStart = _RomSize;
    ..HIDAN_room_6 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_6SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_6.o (.text)
        _HIDAN_room_6SegmentTextEnd = .;
    _HIDAN_room_6SegmentTextSize = ABSOLUTE( _HIDAN_room_6SegmentTextEnd - _HIDAN_room_6SegmentTextStart );
        _HIDAN_room_6SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_6.o (.data)
        _HIDAN_room_6SegmentDataEnd = .;
    _HIDAN_room_6SegmentDataSize = ABSOLUTE( _HIDAN_room_6SegmentDataEnd - _HIDAN_room_6SegmentDataStart );
        _HIDAN_room_6SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_6.o (.rodata)
        _HIDAN_room_6SegmentRoDataEnd = .;
    _HIDAN_room_6SegmentRoDataSize = ABSOLUTE( _HIDAN_room_6SegmentRoDataEnd - _HIDAN_room_6SegmentRoDataStart );
        _HIDAN_room_6SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_6.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_6SegmentSDataEnd = .;
        _HIDAN_room_6SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_6.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_6SegmentOvlEnd - _HIDAN_room_6SegmentTextStart );
    _HIDAN_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_6.bss ADDR(..HIDAN_room_6) + SIZEOF(..HIDAN_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_6SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_6.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_6.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_6.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_6.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_6SegmentBssEnd = .;
        _HIDAN_room_6SegmentEnd = .;
    }
    _HIDAN_room_6SegmentBssSize = ABSOLUTE( _HIDAN_room_6SegmentBssEnd - _HIDAN_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_7SegmentRomStart = _RomSize;
    ..HIDAN_room_7 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_7SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_7SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_7.o (.text)
        _HIDAN_room_7SegmentTextEnd = .;
    _HIDAN_room_7SegmentTextSize = ABSOLUTE( _HIDAN_room_7SegmentTextEnd - _HIDAN_room_7SegmentTextStart );
        _HIDAN_room_7SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_7.o (.data)
        _HIDAN_room_7SegmentDataEnd = .;
    _HIDAN_room_7SegmentDataSize = ABSOLUTE( _HIDAN_room_7SegmentDataEnd - _HIDAN_room_7SegmentDataStart );
        _HIDAN_room_7SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_7.o (.rodata)
        _HIDAN_room_7SegmentRoDataEnd = .;
    _HIDAN_room_7SegmentRoDataSize = ABSOLUTE( _HIDAN_room_7SegmentRoDataEnd - _HIDAN_room_7SegmentRoDataStart );
        _HIDAN_room_7SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_7.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_7SegmentSDataEnd = .;
        _HIDAN_room_7SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_7.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_7SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_7SegmentOvlEnd - _HIDAN_room_7SegmentTextStart );
    _HIDAN_room_7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_7.bss ADDR(..HIDAN_room_7) + SIZEOF(..HIDAN_room_7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_7SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_7.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_7.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_7.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_7.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_7SegmentBssEnd = .;
        _HIDAN_room_7SegmentEnd = .;
    }
    _HIDAN_room_7SegmentBssSize = ABSOLUTE( _HIDAN_room_7SegmentBssEnd - _HIDAN_room_7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_8SegmentRomStart = _RomSize;
    ..HIDAN_room_8 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_8SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_8SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_8.o (.text)
        _HIDAN_room_8SegmentTextEnd = .;
    _HIDAN_room_8SegmentTextSize = ABSOLUTE( _HIDAN_room_8SegmentTextEnd - _HIDAN_room_8SegmentTextStart );
        _HIDAN_room_8SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_8.o (.data)
        _HIDAN_room_8SegmentDataEnd = .;
    _HIDAN_room_8SegmentDataSize = ABSOLUTE( _HIDAN_room_8SegmentDataEnd - _HIDAN_room_8SegmentDataStart );
        _HIDAN_room_8SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_8.o (.rodata)
        _HIDAN_room_8SegmentRoDataEnd = .;
    _HIDAN_room_8SegmentRoDataSize = ABSOLUTE( _HIDAN_room_8SegmentRoDataEnd - _HIDAN_room_8SegmentRoDataStart );
        _HIDAN_room_8SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_8.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_8SegmentSDataEnd = .;
        _HIDAN_room_8SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_8.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_8SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_8SegmentOvlEnd - _HIDAN_room_8SegmentTextStart );
    _HIDAN_room_8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_8.bss ADDR(..HIDAN_room_8) + SIZEOF(..HIDAN_room_8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_8SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_8.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_8.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_8.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_8.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_8SegmentBssEnd = .;
        _HIDAN_room_8SegmentEnd = .;
    }
    _HIDAN_room_8SegmentBssSize = ABSOLUTE( _HIDAN_room_8SegmentBssEnd - _HIDAN_room_8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_9SegmentRomStart = _RomSize;
    ..HIDAN_room_9 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_9SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_9SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_9.o (.text)
        _HIDAN_room_9SegmentTextEnd = .;
    _HIDAN_room_9SegmentTextSize = ABSOLUTE( _HIDAN_room_9SegmentTextEnd - _HIDAN_room_9SegmentTextStart );
        _HIDAN_room_9SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_9.o (.data)
        _HIDAN_room_9SegmentDataEnd = .;
    _HIDAN_room_9SegmentDataSize = ABSOLUTE( _HIDAN_room_9SegmentDataEnd - _HIDAN_room_9SegmentDataStart );
        _HIDAN_room_9SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_9.o (.rodata)
        _HIDAN_room_9SegmentRoDataEnd = .;
    _HIDAN_room_9SegmentRoDataSize = ABSOLUTE( _HIDAN_room_9SegmentRoDataEnd - _HIDAN_room_9SegmentRoDataStart );
        _HIDAN_room_9SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_9.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_9SegmentSDataEnd = .;
        _HIDAN_room_9SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_9.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_9SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_9SegmentOvlEnd - _HIDAN_room_9SegmentTextStart );
    _HIDAN_room_9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_9.bss ADDR(..HIDAN_room_9) + SIZEOF(..HIDAN_room_9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_9SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_9.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_9.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_9.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_9.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_9SegmentBssEnd = .;
        _HIDAN_room_9SegmentEnd = .;
    }
    _HIDAN_room_9SegmentBssSize = ABSOLUTE( _HIDAN_room_9SegmentBssEnd - _HIDAN_room_9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_10SegmentRomStart = _RomSize;
    ..HIDAN_room_10 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_10SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_10SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_10.o (.text)
        _HIDAN_room_10SegmentTextEnd = .;
    _HIDAN_room_10SegmentTextSize = ABSOLUTE( _HIDAN_room_10SegmentTextEnd - _HIDAN_room_10SegmentTextStart );
        _HIDAN_room_10SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_10.o (.data)
        _HIDAN_room_10SegmentDataEnd = .;
    _HIDAN_room_10SegmentDataSize = ABSOLUTE( _HIDAN_room_10SegmentDataEnd - _HIDAN_room_10SegmentDataStart );
        _HIDAN_room_10SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_10.o (.rodata)
        _HIDAN_room_10SegmentRoDataEnd = .;
    _HIDAN_room_10SegmentRoDataSize = ABSOLUTE( _HIDAN_room_10SegmentRoDataEnd - _HIDAN_room_10SegmentRoDataStart );
        _HIDAN_room_10SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_10.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_10SegmentSDataEnd = .;
        _HIDAN_room_10SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_10.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_10SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_10SegmentOvlEnd - _HIDAN_room_10SegmentTextStart );
    _HIDAN_room_10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_10.bss ADDR(..HIDAN_room_10) + SIZEOF(..HIDAN_room_10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_10SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_10.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_10.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_10.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_10.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_10SegmentBssEnd = .;
        _HIDAN_room_10SegmentEnd = .;
    }
    _HIDAN_room_10SegmentBssSize = ABSOLUTE( _HIDAN_room_10SegmentBssEnd - _HIDAN_room_10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_11SegmentRomStart = _RomSize;
    ..HIDAN_room_11 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_11SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_11SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_11.o (.text)
        _HIDAN_room_11SegmentTextEnd = .;
    _HIDAN_room_11SegmentTextSize = ABSOLUTE( _HIDAN_room_11SegmentTextEnd - _HIDAN_room_11SegmentTextStart );
        _HIDAN_room_11SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_11.o (.data)
        _HIDAN_room_11SegmentDataEnd = .;
    _HIDAN_room_11SegmentDataSize = ABSOLUTE( _HIDAN_room_11SegmentDataEnd - _HIDAN_room_11SegmentDataStart );
        _HIDAN_room_11SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_11.o (.rodata)
        _HIDAN_room_11SegmentRoDataEnd = .;
    _HIDAN_room_11SegmentRoDataSize = ABSOLUTE( _HIDAN_room_11SegmentRoDataEnd - _HIDAN_room_11SegmentRoDataStart );
        _HIDAN_room_11SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_11.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_11SegmentSDataEnd = .;
        _HIDAN_room_11SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_11.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_11SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_11SegmentOvlEnd - _HIDAN_room_11SegmentTextStart );
    _HIDAN_room_11SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_11.bss ADDR(..HIDAN_room_11) + SIZEOF(..HIDAN_room_11) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_11SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_11.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_11.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_11.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_11.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_11SegmentBssEnd = .;
        _HIDAN_room_11SegmentEnd = .;
    }
    _HIDAN_room_11SegmentBssSize = ABSOLUTE( _HIDAN_room_11SegmentBssEnd - _HIDAN_room_11SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_12SegmentRomStart = _RomSize;
    ..HIDAN_room_12 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_12SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_12SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_12.o (.text)
        _HIDAN_room_12SegmentTextEnd = .;
    _HIDAN_room_12SegmentTextSize = ABSOLUTE( _HIDAN_room_12SegmentTextEnd - _HIDAN_room_12SegmentTextStart );
        _HIDAN_room_12SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_12.o (.data)
        _HIDAN_room_12SegmentDataEnd = .;
    _HIDAN_room_12SegmentDataSize = ABSOLUTE( _HIDAN_room_12SegmentDataEnd - _HIDAN_room_12SegmentDataStart );
        _HIDAN_room_12SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_12.o (.rodata)
        _HIDAN_room_12SegmentRoDataEnd = .;
    _HIDAN_room_12SegmentRoDataSize = ABSOLUTE( _HIDAN_room_12SegmentRoDataEnd - _HIDAN_room_12SegmentRoDataStart );
        _HIDAN_room_12SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_12.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_12SegmentSDataEnd = .;
        _HIDAN_room_12SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_12.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_12SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_12SegmentOvlEnd - _HIDAN_room_12SegmentTextStart );
    _HIDAN_room_12SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_12.bss ADDR(..HIDAN_room_12) + SIZEOF(..HIDAN_room_12) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_12SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_12.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_12.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_12.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_12.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_12SegmentBssEnd = .;
        _HIDAN_room_12SegmentEnd = .;
    }
    _HIDAN_room_12SegmentBssSize = ABSOLUTE( _HIDAN_room_12SegmentBssEnd - _HIDAN_room_12SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_13SegmentRomStart = _RomSize;
    ..HIDAN_room_13 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_13SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_13SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_13.o (.text)
        _HIDAN_room_13SegmentTextEnd = .;
    _HIDAN_room_13SegmentTextSize = ABSOLUTE( _HIDAN_room_13SegmentTextEnd - _HIDAN_room_13SegmentTextStart );
        _HIDAN_room_13SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_13.o (.data)
        _HIDAN_room_13SegmentDataEnd = .;
    _HIDAN_room_13SegmentDataSize = ABSOLUTE( _HIDAN_room_13SegmentDataEnd - _HIDAN_room_13SegmentDataStart );
        _HIDAN_room_13SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_13.o (.rodata)
        _HIDAN_room_13SegmentRoDataEnd = .;
    _HIDAN_room_13SegmentRoDataSize = ABSOLUTE( _HIDAN_room_13SegmentRoDataEnd - _HIDAN_room_13SegmentRoDataStart );
        _HIDAN_room_13SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_13.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_13SegmentSDataEnd = .;
        _HIDAN_room_13SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_13.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_13SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_13SegmentOvlEnd - _HIDAN_room_13SegmentTextStart );
    _HIDAN_room_13SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_13.bss ADDR(..HIDAN_room_13) + SIZEOF(..HIDAN_room_13) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_13SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_13.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_13.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_13.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_13.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_13SegmentBssEnd = .;
        _HIDAN_room_13SegmentEnd = .;
    }
    _HIDAN_room_13SegmentBssSize = ABSOLUTE( _HIDAN_room_13SegmentBssEnd - _HIDAN_room_13SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_14SegmentRomStart = _RomSize;
    ..HIDAN_room_14 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_14SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_14SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_14.o (.text)
        _HIDAN_room_14SegmentTextEnd = .;
    _HIDAN_room_14SegmentTextSize = ABSOLUTE( _HIDAN_room_14SegmentTextEnd - _HIDAN_room_14SegmentTextStart );
        _HIDAN_room_14SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_14.o (.data)
        _HIDAN_room_14SegmentDataEnd = .;
    _HIDAN_room_14SegmentDataSize = ABSOLUTE( _HIDAN_room_14SegmentDataEnd - _HIDAN_room_14SegmentDataStart );
        _HIDAN_room_14SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_14.o (.rodata)
        _HIDAN_room_14SegmentRoDataEnd = .;
    _HIDAN_room_14SegmentRoDataSize = ABSOLUTE( _HIDAN_room_14SegmentRoDataEnd - _HIDAN_room_14SegmentRoDataStart );
        _HIDAN_room_14SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_14.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_14SegmentSDataEnd = .;
        _HIDAN_room_14SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_14.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_14SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_14SegmentOvlEnd - _HIDAN_room_14SegmentTextStart );
    _HIDAN_room_14SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_14.bss ADDR(..HIDAN_room_14) + SIZEOF(..HIDAN_room_14) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_14SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_14.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_14.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_14.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_14.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_14SegmentBssEnd = .;
        _HIDAN_room_14SegmentEnd = .;
    }
    _HIDAN_room_14SegmentBssSize = ABSOLUTE( _HIDAN_room_14SegmentBssEnd - _HIDAN_room_14SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_15SegmentRomStart = _RomSize;
    ..HIDAN_room_15 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_15SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_15SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_15.o (.text)
        _HIDAN_room_15SegmentTextEnd = .;
    _HIDAN_room_15SegmentTextSize = ABSOLUTE( _HIDAN_room_15SegmentTextEnd - _HIDAN_room_15SegmentTextStart );
        _HIDAN_room_15SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_15.o (.data)
        _HIDAN_room_15SegmentDataEnd = .;
    _HIDAN_room_15SegmentDataSize = ABSOLUTE( _HIDAN_room_15SegmentDataEnd - _HIDAN_room_15SegmentDataStart );
        _HIDAN_room_15SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_15.o (.rodata)
        _HIDAN_room_15SegmentRoDataEnd = .;
    _HIDAN_room_15SegmentRoDataSize = ABSOLUTE( _HIDAN_room_15SegmentRoDataEnd - _HIDAN_room_15SegmentRoDataStart );
        _HIDAN_room_15SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_15.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_15SegmentSDataEnd = .;
        _HIDAN_room_15SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_15.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_15SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_15SegmentOvlEnd - _HIDAN_room_15SegmentTextStart );
    _HIDAN_room_15SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_15.bss ADDR(..HIDAN_room_15) + SIZEOF(..HIDAN_room_15) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_15SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_15.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_15.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_15.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_15.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_15SegmentBssEnd = .;
        _HIDAN_room_15SegmentEnd = .;
    }
    _HIDAN_room_15SegmentBssSize = ABSOLUTE( _HIDAN_room_15SegmentBssEnd - _HIDAN_room_15SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_16SegmentRomStart = _RomSize;
    ..HIDAN_room_16 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_16SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_16SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_16.o (.text)
        _HIDAN_room_16SegmentTextEnd = .;
    _HIDAN_room_16SegmentTextSize = ABSOLUTE( _HIDAN_room_16SegmentTextEnd - _HIDAN_room_16SegmentTextStart );
        _HIDAN_room_16SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_16.o (.data)
        _HIDAN_room_16SegmentDataEnd = .;
    _HIDAN_room_16SegmentDataSize = ABSOLUTE( _HIDAN_room_16SegmentDataEnd - _HIDAN_room_16SegmentDataStart );
        _HIDAN_room_16SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_16.o (.rodata)
        _HIDAN_room_16SegmentRoDataEnd = .;
    _HIDAN_room_16SegmentRoDataSize = ABSOLUTE( _HIDAN_room_16SegmentRoDataEnd - _HIDAN_room_16SegmentRoDataStart );
        _HIDAN_room_16SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_16.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_16SegmentSDataEnd = .;
        _HIDAN_room_16SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_16.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_16SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_16SegmentOvlEnd - _HIDAN_room_16SegmentTextStart );
    _HIDAN_room_16SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_16.bss ADDR(..HIDAN_room_16) + SIZEOF(..HIDAN_room_16) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_16SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_16.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_16.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_16.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_16.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_16SegmentBssEnd = .;
        _HIDAN_room_16SegmentEnd = .;
    }
    _HIDAN_room_16SegmentBssSize = ABSOLUTE( _HIDAN_room_16SegmentBssEnd - _HIDAN_room_16SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_17SegmentRomStart = _RomSize;
    ..HIDAN_room_17 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_17SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_17SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_17.o (.text)
        _HIDAN_room_17SegmentTextEnd = .;
    _HIDAN_room_17SegmentTextSize = ABSOLUTE( _HIDAN_room_17SegmentTextEnd - _HIDAN_room_17SegmentTextStart );
        _HIDAN_room_17SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_17.o (.data)
        _HIDAN_room_17SegmentDataEnd = .;
    _HIDAN_room_17SegmentDataSize = ABSOLUTE( _HIDAN_room_17SegmentDataEnd - _HIDAN_room_17SegmentDataStart );
        _HIDAN_room_17SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_17.o (.rodata)
        _HIDAN_room_17SegmentRoDataEnd = .;
    _HIDAN_room_17SegmentRoDataSize = ABSOLUTE( _HIDAN_room_17SegmentRoDataEnd - _HIDAN_room_17SegmentRoDataStart );
        _HIDAN_room_17SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_17.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_17SegmentSDataEnd = .;
        _HIDAN_room_17SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_17.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_17SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_17SegmentOvlEnd - _HIDAN_room_17SegmentTextStart );
    _HIDAN_room_17SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_17.bss ADDR(..HIDAN_room_17) + SIZEOF(..HIDAN_room_17) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_17SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_17.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_17.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_17.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_17.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_17SegmentBssEnd = .;
        _HIDAN_room_17SegmentEnd = .;
    }
    _HIDAN_room_17SegmentBssSize = ABSOLUTE( _HIDAN_room_17SegmentBssEnd - _HIDAN_room_17SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_18SegmentRomStart = _RomSize;
    ..HIDAN_room_18 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_18SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_18SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_18.o (.text)
        _HIDAN_room_18SegmentTextEnd = .;
    _HIDAN_room_18SegmentTextSize = ABSOLUTE( _HIDAN_room_18SegmentTextEnd - _HIDAN_room_18SegmentTextStart );
        _HIDAN_room_18SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_18.o (.data)
        _HIDAN_room_18SegmentDataEnd = .;
    _HIDAN_room_18SegmentDataSize = ABSOLUTE( _HIDAN_room_18SegmentDataEnd - _HIDAN_room_18SegmentDataStart );
        _HIDAN_room_18SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_18.o (.rodata)
        _HIDAN_room_18SegmentRoDataEnd = .;
    _HIDAN_room_18SegmentRoDataSize = ABSOLUTE( _HIDAN_room_18SegmentRoDataEnd - _HIDAN_room_18SegmentRoDataStart );
        _HIDAN_room_18SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_18.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_18SegmentSDataEnd = .;
        _HIDAN_room_18SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_18.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_18SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_18SegmentOvlEnd - _HIDAN_room_18SegmentTextStart );
    _HIDAN_room_18SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_18.bss ADDR(..HIDAN_room_18) + SIZEOF(..HIDAN_room_18) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_18SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_18.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_18.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_18.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_18.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_18SegmentBssEnd = .;
        _HIDAN_room_18SegmentEnd = .;
    }
    _HIDAN_room_18SegmentBssSize = ABSOLUTE( _HIDAN_room_18SegmentBssEnd - _HIDAN_room_18SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_19SegmentRomStart = _RomSize;
    ..HIDAN_room_19 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_19SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_19SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_19.o (.text)
        _HIDAN_room_19SegmentTextEnd = .;
    _HIDAN_room_19SegmentTextSize = ABSOLUTE( _HIDAN_room_19SegmentTextEnd - _HIDAN_room_19SegmentTextStart );
        _HIDAN_room_19SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_19.o (.data)
        _HIDAN_room_19SegmentDataEnd = .;
    _HIDAN_room_19SegmentDataSize = ABSOLUTE( _HIDAN_room_19SegmentDataEnd - _HIDAN_room_19SegmentDataStart );
        _HIDAN_room_19SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_19.o (.rodata)
        _HIDAN_room_19SegmentRoDataEnd = .;
    _HIDAN_room_19SegmentRoDataSize = ABSOLUTE( _HIDAN_room_19SegmentRoDataEnd - _HIDAN_room_19SegmentRoDataStart );
        _HIDAN_room_19SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_19.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_19SegmentSDataEnd = .;
        _HIDAN_room_19SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_19.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_19SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_19SegmentOvlEnd - _HIDAN_room_19SegmentTextStart );
    _HIDAN_room_19SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_19.bss ADDR(..HIDAN_room_19) + SIZEOF(..HIDAN_room_19) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_19SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_19.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_19.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_19.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_19.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_19SegmentBssEnd = .;
        _HIDAN_room_19SegmentEnd = .;
    }
    _HIDAN_room_19SegmentBssSize = ABSOLUTE( _HIDAN_room_19SegmentBssEnd - _HIDAN_room_19SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_20SegmentRomStart = _RomSize;
    ..HIDAN_room_20 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_20SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_20SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_20.o (.text)
        _HIDAN_room_20SegmentTextEnd = .;
    _HIDAN_room_20SegmentTextSize = ABSOLUTE( _HIDAN_room_20SegmentTextEnd - _HIDAN_room_20SegmentTextStart );
        _HIDAN_room_20SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_20.o (.data)
        _HIDAN_room_20SegmentDataEnd = .;
    _HIDAN_room_20SegmentDataSize = ABSOLUTE( _HIDAN_room_20SegmentDataEnd - _HIDAN_room_20SegmentDataStart );
        _HIDAN_room_20SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_20.o (.rodata)
        _HIDAN_room_20SegmentRoDataEnd = .;
    _HIDAN_room_20SegmentRoDataSize = ABSOLUTE( _HIDAN_room_20SegmentRoDataEnd - _HIDAN_room_20SegmentRoDataStart );
        _HIDAN_room_20SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_20.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_20SegmentSDataEnd = .;
        _HIDAN_room_20SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_20.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_20SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_20SegmentOvlEnd - _HIDAN_room_20SegmentTextStart );
    _HIDAN_room_20SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_20.bss ADDR(..HIDAN_room_20) + SIZEOF(..HIDAN_room_20) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_20SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_20.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_20.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_20.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_20.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_20SegmentBssEnd = .;
        _HIDAN_room_20SegmentEnd = .;
    }
    _HIDAN_room_20SegmentBssSize = ABSOLUTE( _HIDAN_room_20SegmentBssEnd - _HIDAN_room_20SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_21SegmentRomStart = _RomSize;
    ..HIDAN_room_21 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_21SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_21SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_21.o (.text)
        _HIDAN_room_21SegmentTextEnd = .;
    _HIDAN_room_21SegmentTextSize = ABSOLUTE( _HIDAN_room_21SegmentTextEnd - _HIDAN_room_21SegmentTextStart );
        _HIDAN_room_21SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_21.o (.data)
        _HIDAN_room_21SegmentDataEnd = .;
    _HIDAN_room_21SegmentDataSize = ABSOLUTE( _HIDAN_room_21SegmentDataEnd - _HIDAN_room_21SegmentDataStart );
        _HIDAN_room_21SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_21.o (.rodata)
        _HIDAN_room_21SegmentRoDataEnd = .;
    _HIDAN_room_21SegmentRoDataSize = ABSOLUTE( _HIDAN_room_21SegmentRoDataEnd - _HIDAN_room_21SegmentRoDataStart );
        _HIDAN_room_21SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_21.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_21SegmentSDataEnd = .;
        _HIDAN_room_21SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_21.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_21SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_21SegmentOvlEnd - _HIDAN_room_21SegmentTextStart );
    _HIDAN_room_21SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_21.bss ADDR(..HIDAN_room_21) + SIZEOF(..HIDAN_room_21) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_21SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_21.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_21.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_21.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_21.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_21SegmentBssEnd = .;
        _HIDAN_room_21SegmentEnd = .;
    }
    _HIDAN_room_21SegmentBssSize = ABSOLUTE( _HIDAN_room_21SegmentBssEnd - _HIDAN_room_21SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_22SegmentRomStart = _RomSize;
    ..HIDAN_room_22 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_22SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_22SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_22.o (.text)
        _HIDAN_room_22SegmentTextEnd = .;
    _HIDAN_room_22SegmentTextSize = ABSOLUTE( _HIDAN_room_22SegmentTextEnd - _HIDAN_room_22SegmentTextStart );
        _HIDAN_room_22SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_22.o (.data)
        _HIDAN_room_22SegmentDataEnd = .;
    _HIDAN_room_22SegmentDataSize = ABSOLUTE( _HIDAN_room_22SegmentDataEnd - _HIDAN_room_22SegmentDataStart );
        _HIDAN_room_22SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_22.o (.rodata)
        _HIDAN_room_22SegmentRoDataEnd = .;
    _HIDAN_room_22SegmentRoDataSize = ABSOLUTE( _HIDAN_room_22SegmentRoDataEnd - _HIDAN_room_22SegmentRoDataStart );
        _HIDAN_room_22SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_22.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_22SegmentSDataEnd = .;
        _HIDAN_room_22SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_22.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_22SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_22SegmentOvlEnd - _HIDAN_room_22SegmentTextStart );
    _HIDAN_room_22SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_22.bss ADDR(..HIDAN_room_22) + SIZEOF(..HIDAN_room_22) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_22SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_22.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_22.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_22.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_22.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_22SegmentBssEnd = .;
        _HIDAN_room_22SegmentEnd = .;
    }
    _HIDAN_room_22SegmentBssSize = ABSOLUTE( _HIDAN_room_22SegmentBssEnd - _HIDAN_room_22SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_23SegmentRomStart = _RomSize;
    ..HIDAN_room_23 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_23SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_23SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_23.o (.text)
        _HIDAN_room_23SegmentTextEnd = .;
    _HIDAN_room_23SegmentTextSize = ABSOLUTE( _HIDAN_room_23SegmentTextEnd - _HIDAN_room_23SegmentTextStart );
        _HIDAN_room_23SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_23.o (.data)
        _HIDAN_room_23SegmentDataEnd = .;
    _HIDAN_room_23SegmentDataSize = ABSOLUTE( _HIDAN_room_23SegmentDataEnd - _HIDAN_room_23SegmentDataStart );
        _HIDAN_room_23SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_23.o (.rodata)
        _HIDAN_room_23SegmentRoDataEnd = .;
    _HIDAN_room_23SegmentRoDataSize = ABSOLUTE( _HIDAN_room_23SegmentRoDataEnd - _HIDAN_room_23SegmentRoDataStart );
        _HIDAN_room_23SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_23.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_23SegmentSDataEnd = .;
        _HIDAN_room_23SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_23.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_23SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_23SegmentOvlEnd - _HIDAN_room_23SegmentTextStart );
    _HIDAN_room_23SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_23.bss ADDR(..HIDAN_room_23) + SIZEOF(..HIDAN_room_23) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_23SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_23.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_23.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_23.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_23.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_23SegmentBssEnd = .;
        _HIDAN_room_23SegmentEnd = .;
    }
    _HIDAN_room_23SegmentBssSize = ABSOLUTE( _HIDAN_room_23SegmentBssEnd - _HIDAN_room_23SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_24SegmentRomStart = _RomSize;
    ..HIDAN_room_24 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_24SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_24SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_24.o (.text)
        _HIDAN_room_24SegmentTextEnd = .;
    _HIDAN_room_24SegmentTextSize = ABSOLUTE( _HIDAN_room_24SegmentTextEnd - _HIDAN_room_24SegmentTextStart );
        _HIDAN_room_24SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_24.o (.data)
        _HIDAN_room_24SegmentDataEnd = .;
    _HIDAN_room_24SegmentDataSize = ABSOLUTE( _HIDAN_room_24SegmentDataEnd - _HIDAN_room_24SegmentDataStart );
        _HIDAN_room_24SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_24.o (.rodata)
        _HIDAN_room_24SegmentRoDataEnd = .;
    _HIDAN_room_24SegmentRoDataSize = ABSOLUTE( _HIDAN_room_24SegmentRoDataEnd - _HIDAN_room_24SegmentRoDataStart );
        _HIDAN_room_24SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_24.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_24SegmentSDataEnd = .;
        _HIDAN_room_24SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_24.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_24SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_24SegmentOvlEnd - _HIDAN_room_24SegmentTextStart );
    _HIDAN_room_24SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_24.bss ADDR(..HIDAN_room_24) + SIZEOF(..HIDAN_room_24) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_24SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_24.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_24.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_24.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_24.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_24SegmentBssEnd = .;
        _HIDAN_room_24SegmentEnd = .;
    }
    _HIDAN_room_24SegmentBssSize = ABSOLUTE( _HIDAN_room_24SegmentBssEnd - _HIDAN_room_24SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_25SegmentRomStart = _RomSize;
    ..HIDAN_room_25 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_25SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_25SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_25.o (.text)
        _HIDAN_room_25SegmentTextEnd = .;
    _HIDAN_room_25SegmentTextSize = ABSOLUTE( _HIDAN_room_25SegmentTextEnd - _HIDAN_room_25SegmentTextStart );
        _HIDAN_room_25SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_25.o (.data)
        _HIDAN_room_25SegmentDataEnd = .;
    _HIDAN_room_25SegmentDataSize = ABSOLUTE( _HIDAN_room_25SegmentDataEnd - _HIDAN_room_25SegmentDataStart );
        _HIDAN_room_25SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_25.o (.rodata)
        _HIDAN_room_25SegmentRoDataEnd = .;
    _HIDAN_room_25SegmentRoDataSize = ABSOLUTE( _HIDAN_room_25SegmentRoDataEnd - _HIDAN_room_25SegmentRoDataStart );
        _HIDAN_room_25SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_25.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_25SegmentSDataEnd = .;
        _HIDAN_room_25SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_25.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_25SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_25SegmentOvlEnd - _HIDAN_room_25SegmentTextStart );
    _HIDAN_room_25SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_25.bss ADDR(..HIDAN_room_25) + SIZEOF(..HIDAN_room_25) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_25SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_25.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_25.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_25.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_25.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_25SegmentBssEnd = .;
        _HIDAN_room_25SegmentEnd = .;
    }
    _HIDAN_room_25SegmentBssSize = ABSOLUTE( _HIDAN_room_25SegmentBssEnd - _HIDAN_room_25SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HIDAN_room_26SegmentRomStart = _RomSize;
    ..HIDAN_room_26 0x03000000 : AT(_RomSize)
    {
        _HIDAN_room_26SegmentStart = .;
        . = ALIGN(0x10);
        _HIDAN_room_26SegmentTextStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_26.o (.text)
        _HIDAN_room_26SegmentTextEnd = .;
    _HIDAN_room_26SegmentTextSize = ABSOLUTE( _HIDAN_room_26SegmentTextEnd - _HIDAN_room_26SegmentTextStart );
        _HIDAN_room_26SegmentDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_26.o (.data)
        _HIDAN_room_26SegmentDataEnd = .;
    _HIDAN_room_26SegmentDataSize = ABSOLUTE( _HIDAN_room_26SegmentDataEnd - _HIDAN_room_26SegmentDataStart );
        _HIDAN_room_26SegmentRoDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_26.o (.rodata)
        _HIDAN_room_26SegmentRoDataEnd = .;
    _HIDAN_room_26SegmentRoDataSize = ABSOLUTE( _HIDAN_room_26SegmentRoDataEnd - _HIDAN_room_26SegmentRoDataStart );
        _HIDAN_room_26SegmentSDataStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_26.o (.sdata)
        . = ALIGN(0x10);
        _HIDAN_room_26SegmentSDataEnd = .;
        _HIDAN_room_26SegmentOvlStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_26.o (.ovl)
        . = ALIGN(0x10);
        _HIDAN_room_26SegmentOvlEnd = .;
    }
    _RomSize += ( _HIDAN_room_26SegmentOvlEnd - _HIDAN_room_26SegmentTextStart );
    _HIDAN_room_26SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HIDAN_room_26.bss ADDR(..HIDAN_room_26) + SIZEOF(..HIDAN_room_26) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HIDAN_room_26SegmentBssStart = .;
            build/scenes/dungeons/HIDAN/HIDAN_room_26.o (.sbss)
            build/scenes/dungeons/HIDAN/HIDAN_room_26.o (.scommon)
            build/scenes/dungeons/HIDAN/HIDAN_room_26.o (.bss)
            build/scenes/dungeons/HIDAN/HIDAN_room_26.o (COMMON)
        . = ALIGN(0x10);
        _HIDAN_room_26SegmentBssEnd = .;
        _HIDAN_room_26SegmentEnd = .;
    }
    _HIDAN_room_26SegmentBssSize = ABSOLUTE( _HIDAN_room_26SegmentBssEnd - _HIDAN_room_26SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_sceneSegmentRomStart = _RomSize;
    ..MIZUsin_scene 0x02000000 : AT(_RomSize)
    {
        _MIZUsin_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_sceneSegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_scene.o (.text)
        _MIZUsin_sceneSegmentTextEnd = .;
    _MIZUsin_sceneSegmentTextSize = ABSOLUTE( _MIZUsin_sceneSegmentTextEnd - _MIZUsin_sceneSegmentTextStart );
        _MIZUsin_sceneSegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_scene.o (.data)
        _MIZUsin_sceneSegmentDataEnd = .;
    _MIZUsin_sceneSegmentDataSize = ABSOLUTE( _MIZUsin_sceneSegmentDataEnd - _MIZUsin_sceneSegmentDataStart );
        _MIZUsin_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_scene.o (.rodata)
        _MIZUsin_sceneSegmentRoDataEnd = .;
    _MIZUsin_sceneSegmentRoDataSize = ABSOLUTE( _MIZUsin_sceneSegmentRoDataEnd - _MIZUsin_sceneSegmentRoDataStart );
        _MIZUsin_sceneSegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_scene.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_sceneSegmentSDataEnd = .;
        _MIZUsin_sceneSegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_scene.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_sceneSegmentOvlEnd - _MIZUsin_sceneSegmentTextStart );
    _MIZUsin_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_scene.bss ADDR(..MIZUsin_scene) + SIZEOF(..MIZUsin_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_sceneSegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_scene.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_scene.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_scene.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_scene.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_sceneSegmentBssEnd = .;
        _MIZUsin_sceneSegmentEnd = .;
    }
    _MIZUsin_sceneSegmentBssSize = ABSOLUTE( _MIZUsin_sceneSegmentBssEnd - _MIZUsin_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_0SegmentRomStart = _RomSize;
    ..MIZUsin_room_0 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_0SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_0.o (.text)
        _MIZUsin_room_0SegmentTextEnd = .;
    _MIZUsin_room_0SegmentTextSize = ABSOLUTE( _MIZUsin_room_0SegmentTextEnd - _MIZUsin_room_0SegmentTextStart );
        _MIZUsin_room_0SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_0.o (.data)
        _MIZUsin_room_0SegmentDataEnd = .;
    _MIZUsin_room_0SegmentDataSize = ABSOLUTE( _MIZUsin_room_0SegmentDataEnd - _MIZUsin_room_0SegmentDataStart );
        _MIZUsin_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_0.o (.rodata)
        _MIZUsin_room_0SegmentRoDataEnd = .;
    _MIZUsin_room_0SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_0SegmentRoDataEnd - _MIZUsin_room_0SegmentRoDataStart );
        _MIZUsin_room_0SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_0.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_0SegmentSDataEnd = .;
        _MIZUsin_room_0SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_0.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_0SegmentOvlEnd - _MIZUsin_room_0SegmentTextStart );
    _MIZUsin_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_0.bss ADDR(..MIZUsin_room_0) + SIZEOF(..MIZUsin_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_0SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_0.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_0.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_0.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_0.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_0SegmentBssEnd = .;
        _MIZUsin_room_0SegmentEnd = .;
    }
    _MIZUsin_room_0SegmentBssSize = ABSOLUTE( _MIZUsin_room_0SegmentBssEnd - _MIZUsin_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_1SegmentRomStart = _RomSize;
    ..MIZUsin_room_1 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_1SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_1.o (.text)
        _MIZUsin_room_1SegmentTextEnd = .;
    _MIZUsin_room_1SegmentTextSize = ABSOLUTE( _MIZUsin_room_1SegmentTextEnd - _MIZUsin_room_1SegmentTextStart );
        _MIZUsin_room_1SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_1.o (.data)
        _MIZUsin_room_1SegmentDataEnd = .;
    _MIZUsin_room_1SegmentDataSize = ABSOLUTE( _MIZUsin_room_1SegmentDataEnd - _MIZUsin_room_1SegmentDataStart );
        _MIZUsin_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_1.o (.rodata)
        _MIZUsin_room_1SegmentRoDataEnd = .;
    _MIZUsin_room_1SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_1SegmentRoDataEnd - _MIZUsin_room_1SegmentRoDataStart );
        _MIZUsin_room_1SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_1.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_1SegmentSDataEnd = .;
        _MIZUsin_room_1SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_1.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_1SegmentOvlEnd - _MIZUsin_room_1SegmentTextStart );
    _MIZUsin_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_1.bss ADDR(..MIZUsin_room_1) + SIZEOF(..MIZUsin_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_1SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_1.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_1.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_1.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_1.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_1SegmentBssEnd = .;
        _MIZUsin_room_1SegmentEnd = .;
    }
    _MIZUsin_room_1SegmentBssSize = ABSOLUTE( _MIZUsin_room_1SegmentBssEnd - _MIZUsin_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_2SegmentRomStart = _RomSize;
    ..MIZUsin_room_2 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_2SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_2.o (.text)
        _MIZUsin_room_2SegmentTextEnd = .;
    _MIZUsin_room_2SegmentTextSize = ABSOLUTE( _MIZUsin_room_2SegmentTextEnd - _MIZUsin_room_2SegmentTextStart );
        _MIZUsin_room_2SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_2.o (.data)
        _MIZUsin_room_2SegmentDataEnd = .;
    _MIZUsin_room_2SegmentDataSize = ABSOLUTE( _MIZUsin_room_2SegmentDataEnd - _MIZUsin_room_2SegmentDataStart );
        _MIZUsin_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_2.o (.rodata)
        _MIZUsin_room_2SegmentRoDataEnd = .;
    _MIZUsin_room_2SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_2SegmentRoDataEnd - _MIZUsin_room_2SegmentRoDataStart );
        _MIZUsin_room_2SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_2.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_2SegmentSDataEnd = .;
        _MIZUsin_room_2SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_2.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_2SegmentOvlEnd - _MIZUsin_room_2SegmentTextStart );
    _MIZUsin_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_2.bss ADDR(..MIZUsin_room_2) + SIZEOF(..MIZUsin_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_2SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_2.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_2.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_2.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_2.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_2SegmentBssEnd = .;
        _MIZUsin_room_2SegmentEnd = .;
    }
    _MIZUsin_room_2SegmentBssSize = ABSOLUTE( _MIZUsin_room_2SegmentBssEnd - _MIZUsin_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_3SegmentRomStart = _RomSize;
    ..MIZUsin_room_3 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_3SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_3.o (.text)
        _MIZUsin_room_3SegmentTextEnd = .;
    _MIZUsin_room_3SegmentTextSize = ABSOLUTE( _MIZUsin_room_3SegmentTextEnd - _MIZUsin_room_3SegmentTextStart );
        _MIZUsin_room_3SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_3.o (.data)
        _MIZUsin_room_3SegmentDataEnd = .;
    _MIZUsin_room_3SegmentDataSize = ABSOLUTE( _MIZUsin_room_3SegmentDataEnd - _MIZUsin_room_3SegmentDataStart );
        _MIZUsin_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_3.o (.rodata)
        _MIZUsin_room_3SegmentRoDataEnd = .;
    _MIZUsin_room_3SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_3SegmentRoDataEnd - _MIZUsin_room_3SegmentRoDataStart );
        _MIZUsin_room_3SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_3.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_3SegmentSDataEnd = .;
        _MIZUsin_room_3SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_3.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_3SegmentOvlEnd - _MIZUsin_room_3SegmentTextStart );
    _MIZUsin_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_3.bss ADDR(..MIZUsin_room_3) + SIZEOF(..MIZUsin_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_3SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_3.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_3.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_3.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_3.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_3SegmentBssEnd = .;
        _MIZUsin_room_3SegmentEnd = .;
    }
    _MIZUsin_room_3SegmentBssSize = ABSOLUTE( _MIZUsin_room_3SegmentBssEnd - _MIZUsin_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_4SegmentRomStart = _RomSize;
    ..MIZUsin_room_4 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_4SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_4.o (.text)
        _MIZUsin_room_4SegmentTextEnd = .;
    _MIZUsin_room_4SegmentTextSize = ABSOLUTE( _MIZUsin_room_4SegmentTextEnd - _MIZUsin_room_4SegmentTextStart );
        _MIZUsin_room_4SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_4.o (.data)
        _MIZUsin_room_4SegmentDataEnd = .;
    _MIZUsin_room_4SegmentDataSize = ABSOLUTE( _MIZUsin_room_4SegmentDataEnd - _MIZUsin_room_4SegmentDataStart );
        _MIZUsin_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_4.o (.rodata)
        _MIZUsin_room_4SegmentRoDataEnd = .;
    _MIZUsin_room_4SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_4SegmentRoDataEnd - _MIZUsin_room_4SegmentRoDataStart );
        _MIZUsin_room_4SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_4.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_4SegmentSDataEnd = .;
        _MIZUsin_room_4SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_4.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_4SegmentOvlEnd - _MIZUsin_room_4SegmentTextStart );
    _MIZUsin_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_4.bss ADDR(..MIZUsin_room_4) + SIZEOF(..MIZUsin_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_4SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_4.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_4.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_4.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_4.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_4SegmentBssEnd = .;
        _MIZUsin_room_4SegmentEnd = .;
    }
    _MIZUsin_room_4SegmentBssSize = ABSOLUTE( _MIZUsin_room_4SegmentBssEnd - _MIZUsin_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_5SegmentRomStart = _RomSize;
    ..MIZUsin_room_5 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_5SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_5.o (.text)
        _MIZUsin_room_5SegmentTextEnd = .;
    _MIZUsin_room_5SegmentTextSize = ABSOLUTE( _MIZUsin_room_5SegmentTextEnd - _MIZUsin_room_5SegmentTextStart );
        _MIZUsin_room_5SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_5.o (.data)
        _MIZUsin_room_5SegmentDataEnd = .;
    _MIZUsin_room_5SegmentDataSize = ABSOLUTE( _MIZUsin_room_5SegmentDataEnd - _MIZUsin_room_5SegmentDataStart );
        _MIZUsin_room_5SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_5.o (.rodata)
        _MIZUsin_room_5SegmentRoDataEnd = .;
    _MIZUsin_room_5SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_5SegmentRoDataEnd - _MIZUsin_room_5SegmentRoDataStart );
        _MIZUsin_room_5SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_5.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_5SegmentSDataEnd = .;
        _MIZUsin_room_5SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_5.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_5SegmentOvlEnd - _MIZUsin_room_5SegmentTextStart );
    _MIZUsin_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_5.bss ADDR(..MIZUsin_room_5) + SIZEOF(..MIZUsin_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_5SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_5.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_5.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_5.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_5.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_5SegmentBssEnd = .;
        _MIZUsin_room_5SegmentEnd = .;
    }
    _MIZUsin_room_5SegmentBssSize = ABSOLUTE( _MIZUsin_room_5SegmentBssEnd - _MIZUsin_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_6SegmentRomStart = _RomSize;
    ..MIZUsin_room_6 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_6SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_6.o (.text)
        _MIZUsin_room_6SegmentTextEnd = .;
    _MIZUsin_room_6SegmentTextSize = ABSOLUTE( _MIZUsin_room_6SegmentTextEnd - _MIZUsin_room_6SegmentTextStart );
        _MIZUsin_room_6SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_6.o (.data)
        _MIZUsin_room_6SegmentDataEnd = .;
    _MIZUsin_room_6SegmentDataSize = ABSOLUTE( _MIZUsin_room_6SegmentDataEnd - _MIZUsin_room_6SegmentDataStart );
        _MIZUsin_room_6SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_6.o (.rodata)
        _MIZUsin_room_6SegmentRoDataEnd = .;
    _MIZUsin_room_6SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_6SegmentRoDataEnd - _MIZUsin_room_6SegmentRoDataStart );
        _MIZUsin_room_6SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_6.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_6SegmentSDataEnd = .;
        _MIZUsin_room_6SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_6.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_6SegmentOvlEnd - _MIZUsin_room_6SegmentTextStart );
    _MIZUsin_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_6.bss ADDR(..MIZUsin_room_6) + SIZEOF(..MIZUsin_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_6SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_6.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_6.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_6.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_6.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_6SegmentBssEnd = .;
        _MIZUsin_room_6SegmentEnd = .;
    }
    _MIZUsin_room_6SegmentBssSize = ABSOLUTE( _MIZUsin_room_6SegmentBssEnd - _MIZUsin_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_7SegmentRomStart = _RomSize;
    ..MIZUsin_room_7 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_7SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_7SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_7.o (.text)
        _MIZUsin_room_7SegmentTextEnd = .;
    _MIZUsin_room_7SegmentTextSize = ABSOLUTE( _MIZUsin_room_7SegmentTextEnd - _MIZUsin_room_7SegmentTextStart );
        _MIZUsin_room_7SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_7.o (.data)
        _MIZUsin_room_7SegmentDataEnd = .;
    _MIZUsin_room_7SegmentDataSize = ABSOLUTE( _MIZUsin_room_7SegmentDataEnd - _MIZUsin_room_7SegmentDataStart );
        _MIZUsin_room_7SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_7.o (.rodata)
        _MIZUsin_room_7SegmentRoDataEnd = .;
    _MIZUsin_room_7SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_7SegmentRoDataEnd - _MIZUsin_room_7SegmentRoDataStart );
        _MIZUsin_room_7SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_7.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_7SegmentSDataEnd = .;
        _MIZUsin_room_7SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_7.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_7SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_7SegmentOvlEnd - _MIZUsin_room_7SegmentTextStart );
    _MIZUsin_room_7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_7.bss ADDR(..MIZUsin_room_7) + SIZEOF(..MIZUsin_room_7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_7SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_7.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_7.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_7.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_7.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_7SegmentBssEnd = .;
        _MIZUsin_room_7SegmentEnd = .;
    }
    _MIZUsin_room_7SegmentBssSize = ABSOLUTE( _MIZUsin_room_7SegmentBssEnd - _MIZUsin_room_7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_8SegmentRomStart = _RomSize;
    ..MIZUsin_room_8 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_8SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_8SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_8.o (.text)
        _MIZUsin_room_8SegmentTextEnd = .;
    _MIZUsin_room_8SegmentTextSize = ABSOLUTE( _MIZUsin_room_8SegmentTextEnd - _MIZUsin_room_8SegmentTextStart );
        _MIZUsin_room_8SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_8.o (.data)
        _MIZUsin_room_8SegmentDataEnd = .;
    _MIZUsin_room_8SegmentDataSize = ABSOLUTE( _MIZUsin_room_8SegmentDataEnd - _MIZUsin_room_8SegmentDataStart );
        _MIZUsin_room_8SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_8.o (.rodata)
        _MIZUsin_room_8SegmentRoDataEnd = .;
    _MIZUsin_room_8SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_8SegmentRoDataEnd - _MIZUsin_room_8SegmentRoDataStart );
        _MIZUsin_room_8SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_8.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_8SegmentSDataEnd = .;
        _MIZUsin_room_8SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_8.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_8SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_8SegmentOvlEnd - _MIZUsin_room_8SegmentTextStart );
    _MIZUsin_room_8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_8.bss ADDR(..MIZUsin_room_8) + SIZEOF(..MIZUsin_room_8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_8SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_8.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_8.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_8.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_8.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_8SegmentBssEnd = .;
        _MIZUsin_room_8SegmentEnd = .;
    }
    _MIZUsin_room_8SegmentBssSize = ABSOLUTE( _MIZUsin_room_8SegmentBssEnd - _MIZUsin_room_8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_9SegmentRomStart = _RomSize;
    ..MIZUsin_room_9 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_9SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_9SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_9.o (.text)
        _MIZUsin_room_9SegmentTextEnd = .;
    _MIZUsin_room_9SegmentTextSize = ABSOLUTE( _MIZUsin_room_9SegmentTextEnd - _MIZUsin_room_9SegmentTextStart );
        _MIZUsin_room_9SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_9.o (.data)
        _MIZUsin_room_9SegmentDataEnd = .;
    _MIZUsin_room_9SegmentDataSize = ABSOLUTE( _MIZUsin_room_9SegmentDataEnd - _MIZUsin_room_9SegmentDataStart );
        _MIZUsin_room_9SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_9.o (.rodata)
        _MIZUsin_room_9SegmentRoDataEnd = .;
    _MIZUsin_room_9SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_9SegmentRoDataEnd - _MIZUsin_room_9SegmentRoDataStart );
        _MIZUsin_room_9SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_9.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_9SegmentSDataEnd = .;
        _MIZUsin_room_9SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_9.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_9SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_9SegmentOvlEnd - _MIZUsin_room_9SegmentTextStart );
    _MIZUsin_room_9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_9.bss ADDR(..MIZUsin_room_9) + SIZEOF(..MIZUsin_room_9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_9SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_9.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_9.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_9.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_9.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_9SegmentBssEnd = .;
        _MIZUsin_room_9SegmentEnd = .;
    }
    _MIZUsin_room_9SegmentBssSize = ABSOLUTE( _MIZUsin_room_9SegmentBssEnd - _MIZUsin_room_9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_10SegmentRomStart = _RomSize;
    ..MIZUsin_room_10 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_10SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_10SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_10.o (.text)
        _MIZUsin_room_10SegmentTextEnd = .;
    _MIZUsin_room_10SegmentTextSize = ABSOLUTE( _MIZUsin_room_10SegmentTextEnd - _MIZUsin_room_10SegmentTextStart );
        _MIZUsin_room_10SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_10.o (.data)
        _MIZUsin_room_10SegmentDataEnd = .;
    _MIZUsin_room_10SegmentDataSize = ABSOLUTE( _MIZUsin_room_10SegmentDataEnd - _MIZUsin_room_10SegmentDataStart );
        _MIZUsin_room_10SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_10.o (.rodata)
        _MIZUsin_room_10SegmentRoDataEnd = .;
    _MIZUsin_room_10SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_10SegmentRoDataEnd - _MIZUsin_room_10SegmentRoDataStart );
        _MIZUsin_room_10SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_10.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_10SegmentSDataEnd = .;
        _MIZUsin_room_10SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_10.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_10SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_10SegmentOvlEnd - _MIZUsin_room_10SegmentTextStart );
    _MIZUsin_room_10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_10.bss ADDR(..MIZUsin_room_10) + SIZEOF(..MIZUsin_room_10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_10SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_10.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_10.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_10.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_10.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_10SegmentBssEnd = .;
        _MIZUsin_room_10SegmentEnd = .;
    }
    _MIZUsin_room_10SegmentBssSize = ABSOLUTE( _MIZUsin_room_10SegmentBssEnd - _MIZUsin_room_10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_11SegmentRomStart = _RomSize;
    ..MIZUsin_room_11 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_11SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_11SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_11.o (.text)
        _MIZUsin_room_11SegmentTextEnd = .;
    _MIZUsin_room_11SegmentTextSize = ABSOLUTE( _MIZUsin_room_11SegmentTextEnd - _MIZUsin_room_11SegmentTextStart );
        _MIZUsin_room_11SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_11.o (.data)
        _MIZUsin_room_11SegmentDataEnd = .;
    _MIZUsin_room_11SegmentDataSize = ABSOLUTE( _MIZUsin_room_11SegmentDataEnd - _MIZUsin_room_11SegmentDataStart );
        _MIZUsin_room_11SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_11.o (.rodata)
        _MIZUsin_room_11SegmentRoDataEnd = .;
    _MIZUsin_room_11SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_11SegmentRoDataEnd - _MIZUsin_room_11SegmentRoDataStart );
        _MIZUsin_room_11SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_11.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_11SegmentSDataEnd = .;
        _MIZUsin_room_11SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_11.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_11SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_11SegmentOvlEnd - _MIZUsin_room_11SegmentTextStart );
    _MIZUsin_room_11SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_11.bss ADDR(..MIZUsin_room_11) + SIZEOF(..MIZUsin_room_11) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_11SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_11.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_11.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_11.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_11.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_11SegmentBssEnd = .;
        _MIZUsin_room_11SegmentEnd = .;
    }
    _MIZUsin_room_11SegmentBssSize = ABSOLUTE( _MIZUsin_room_11SegmentBssEnd - _MIZUsin_room_11SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_12SegmentRomStart = _RomSize;
    ..MIZUsin_room_12 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_12SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_12SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_12.o (.text)
        _MIZUsin_room_12SegmentTextEnd = .;
    _MIZUsin_room_12SegmentTextSize = ABSOLUTE( _MIZUsin_room_12SegmentTextEnd - _MIZUsin_room_12SegmentTextStart );
        _MIZUsin_room_12SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_12.o (.data)
        _MIZUsin_room_12SegmentDataEnd = .;
    _MIZUsin_room_12SegmentDataSize = ABSOLUTE( _MIZUsin_room_12SegmentDataEnd - _MIZUsin_room_12SegmentDataStart );
        _MIZUsin_room_12SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_12.o (.rodata)
        _MIZUsin_room_12SegmentRoDataEnd = .;
    _MIZUsin_room_12SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_12SegmentRoDataEnd - _MIZUsin_room_12SegmentRoDataStart );
        _MIZUsin_room_12SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_12.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_12SegmentSDataEnd = .;
        _MIZUsin_room_12SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_12.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_12SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_12SegmentOvlEnd - _MIZUsin_room_12SegmentTextStart );
    _MIZUsin_room_12SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_12.bss ADDR(..MIZUsin_room_12) + SIZEOF(..MIZUsin_room_12) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_12SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_12.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_12.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_12.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_12.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_12SegmentBssEnd = .;
        _MIZUsin_room_12SegmentEnd = .;
    }
    _MIZUsin_room_12SegmentBssSize = ABSOLUTE( _MIZUsin_room_12SegmentBssEnd - _MIZUsin_room_12SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_13SegmentRomStart = _RomSize;
    ..MIZUsin_room_13 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_13SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_13SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_13.o (.text)
        _MIZUsin_room_13SegmentTextEnd = .;
    _MIZUsin_room_13SegmentTextSize = ABSOLUTE( _MIZUsin_room_13SegmentTextEnd - _MIZUsin_room_13SegmentTextStart );
        _MIZUsin_room_13SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_13.o (.data)
        _MIZUsin_room_13SegmentDataEnd = .;
    _MIZUsin_room_13SegmentDataSize = ABSOLUTE( _MIZUsin_room_13SegmentDataEnd - _MIZUsin_room_13SegmentDataStart );
        _MIZUsin_room_13SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_13.o (.rodata)
        _MIZUsin_room_13SegmentRoDataEnd = .;
    _MIZUsin_room_13SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_13SegmentRoDataEnd - _MIZUsin_room_13SegmentRoDataStart );
        _MIZUsin_room_13SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_13.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_13SegmentSDataEnd = .;
        _MIZUsin_room_13SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_13.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_13SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_13SegmentOvlEnd - _MIZUsin_room_13SegmentTextStart );
    _MIZUsin_room_13SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_13.bss ADDR(..MIZUsin_room_13) + SIZEOF(..MIZUsin_room_13) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_13SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_13.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_13.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_13.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_13.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_13SegmentBssEnd = .;
        _MIZUsin_room_13SegmentEnd = .;
    }
    _MIZUsin_room_13SegmentBssSize = ABSOLUTE( _MIZUsin_room_13SegmentBssEnd - _MIZUsin_room_13SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_14SegmentRomStart = _RomSize;
    ..MIZUsin_room_14 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_14SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_14SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_14.o (.text)
        _MIZUsin_room_14SegmentTextEnd = .;
    _MIZUsin_room_14SegmentTextSize = ABSOLUTE( _MIZUsin_room_14SegmentTextEnd - _MIZUsin_room_14SegmentTextStart );
        _MIZUsin_room_14SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_14.o (.data)
        _MIZUsin_room_14SegmentDataEnd = .;
    _MIZUsin_room_14SegmentDataSize = ABSOLUTE( _MIZUsin_room_14SegmentDataEnd - _MIZUsin_room_14SegmentDataStart );
        _MIZUsin_room_14SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_14.o (.rodata)
        _MIZUsin_room_14SegmentRoDataEnd = .;
    _MIZUsin_room_14SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_14SegmentRoDataEnd - _MIZUsin_room_14SegmentRoDataStart );
        _MIZUsin_room_14SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_14.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_14SegmentSDataEnd = .;
        _MIZUsin_room_14SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_14.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_14SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_14SegmentOvlEnd - _MIZUsin_room_14SegmentTextStart );
    _MIZUsin_room_14SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_14.bss ADDR(..MIZUsin_room_14) + SIZEOF(..MIZUsin_room_14) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_14SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_14.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_14.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_14.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_14.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_14SegmentBssEnd = .;
        _MIZUsin_room_14SegmentEnd = .;
    }
    _MIZUsin_room_14SegmentBssSize = ABSOLUTE( _MIZUsin_room_14SegmentBssEnd - _MIZUsin_room_14SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_15SegmentRomStart = _RomSize;
    ..MIZUsin_room_15 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_15SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_15SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_15.o (.text)
        _MIZUsin_room_15SegmentTextEnd = .;
    _MIZUsin_room_15SegmentTextSize = ABSOLUTE( _MIZUsin_room_15SegmentTextEnd - _MIZUsin_room_15SegmentTextStart );
        _MIZUsin_room_15SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_15.o (.data)
        _MIZUsin_room_15SegmentDataEnd = .;
    _MIZUsin_room_15SegmentDataSize = ABSOLUTE( _MIZUsin_room_15SegmentDataEnd - _MIZUsin_room_15SegmentDataStart );
        _MIZUsin_room_15SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_15.o (.rodata)
        _MIZUsin_room_15SegmentRoDataEnd = .;
    _MIZUsin_room_15SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_15SegmentRoDataEnd - _MIZUsin_room_15SegmentRoDataStart );
        _MIZUsin_room_15SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_15.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_15SegmentSDataEnd = .;
        _MIZUsin_room_15SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_15.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_15SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_15SegmentOvlEnd - _MIZUsin_room_15SegmentTextStart );
    _MIZUsin_room_15SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_15.bss ADDR(..MIZUsin_room_15) + SIZEOF(..MIZUsin_room_15) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_15SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_15.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_15.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_15.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_15.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_15SegmentBssEnd = .;
        _MIZUsin_room_15SegmentEnd = .;
    }
    _MIZUsin_room_15SegmentBssSize = ABSOLUTE( _MIZUsin_room_15SegmentBssEnd - _MIZUsin_room_15SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_16SegmentRomStart = _RomSize;
    ..MIZUsin_room_16 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_16SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_16SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_16.o (.text)
        _MIZUsin_room_16SegmentTextEnd = .;
    _MIZUsin_room_16SegmentTextSize = ABSOLUTE( _MIZUsin_room_16SegmentTextEnd - _MIZUsin_room_16SegmentTextStart );
        _MIZUsin_room_16SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_16.o (.data)
        _MIZUsin_room_16SegmentDataEnd = .;
    _MIZUsin_room_16SegmentDataSize = ABSOLUTE( _MIZUsin_room_16SegmentDataEnd - _MIZUsin_room_16SegmentDataStart );
        _MIZUsin_room_16SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_16.o (.rodata)
        _MIZUsin_room_16SegmentRoDataEnd = .;
    _MIZUsin_room_16SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_16SegmentRoDataEnd - _MIZUsin_room_16SegmentRoDataStart );
        _MIZUsin_room_16SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_16.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_16SegmentSDataEnd = .;
        _MIZUsin_room_16SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_16.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_16SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_16SegmentOvlEnd - _MIZUsin_room_16SegmentTextStart );
    _MIZUsin_room_16SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_16.bss ADDR(..MIZUsin_room_16) + SIZEOF(..MIZUsin_room_16) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_16SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_16.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_16.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_16.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_16.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_16SegmentBssEnd = .;
        _MIZUsin_room_16SegmentEnd = .;
    }
    _MIZUsin_room_16SegmentBssSize = ABSOLUTE( _MIZUsin_room_16SegmentBssEnd - _MIZUsin_room_16SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_17SegmentRomStart = _RomSize;
    ..MIZUsin_room_17 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_17SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_17SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_17.o (.text)
        _MIZUsin_room_17SegmentTextEnd = .;
    _MIZUsin_room_17SegmentTextSize = ABSOLUTE( _MIZUsin_room_17SegmentTextEnd - _MIZUsin_room_17SegmentTextStart );
        _MIZUsin_room_17SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_17.o (.data)
        _MIZUsin_room_17SegmentDataEnd = .;
    _MIZUsin_room_17SegmentDataSize = ABSOLUTE( _MIZUsin_room_17SegmentDataEnd - _MIZUsin_room_17SegmentDataStart );
        _MIZUsin_room_17SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_17.o (.rodata)
        _MIZUsin_room_17SegmentRoDataEnd = .;
    _MIZUsin_room_17SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_17SegmentRoDataEnd - _MIZUsin_room_17SegmentRoDataStart );
        _MIZUsin_room_17SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_17.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_17SegmentSDataEnd = .;
        _MIZUsin_room_17SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_17.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_17SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_17SegmentOvlEnd - _MIZUsin_room_17SegmentTextStart );
    _MIZUsin_room_17SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_17.bss ADDR(..MIZUsin_room_17) + SIZEOF(..MIZUsin_room_17) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_17SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_17.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_17.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_17.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_17.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_17SegmentBssEnd = .;
        _MIZUsin_room_17SegmentEnd = .;
    }
    _MIZUsin_room_17SegmentBssSize = ABSOLUTE( _MIZUsin_room_17SegmentBssEnd - _MIZUsin_room_17SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_18SegmentRomStart = _RomSize;
    ..MIZUsin_room_18 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_18SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_18SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_18.o (.text)
        _MIZUsin_room_18SegmentTextEnd = .;
    _MIZUsin_room_18SegmentTextSize = ABSOLUTE( _MIZUsin_room_18SegmentTextEnd - _MIZUsin_room_18SegmentTextStart );
        _MIZUsin_room_18SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_18.o (.data)
        _MIZUsin_room_18SegmentDataEnd = .;
    _MIZUsin_room_18SegmentDataSize = ABSOLUTE( _MIZUsin_room_18SegmentDataEnd - _MIZUsin_room_18SegmentDataStart );
        _MIZUsin_room_18SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_18.o (.rodata)
        _MIZUsin_room_18SegmentRoDataEnd = .;
    _MIZUsin_room_18SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_18SegmentRoDataEnd - _MIZUsin_room_18SegmentRoDataStart );
        _MIZUsin_room_18SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_18.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_18SegmentSDataEnd = .;
        _MIZUsin_room_18SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_18.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_18SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_18SegmentOvlEnd - _MIZUsin_room_18SegmentTextStart );
    _MIZUsin_room_18SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_18.bss ADDR(..MIZUsin_room_18) + SIZEOF(..MIZUsin_room_18) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_18SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_18.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_18.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_18.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_18.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_18SegmentBssEnd = .;
        _MIZUsin_room_18SegmentEnd = .;
    }
    _MIZUsin_room_18SegmentBssSize = ABSOLUTE( _MIZUsin_room_18SegmentBssEnd - _MIZUsin_room_18SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_19SegmentRomStart = _RomSize;
    ..MIZUsin_room_19 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_19SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_19SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_19.o (.text)
        _MIZUsin_room_19SegmentTextEnd = .;
    _MIZUsin_room_19SegmentTextSize = ABSOLUTE( _MIZUsin_room_19SegmentTextEnd - _MIZUsin_room_19SegmentTextStart );
        _MIZUsin_room_19SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_19.o (.data)
        _MIZUsin_room_19SegmentDataEnd = .;
    _MIZUsin_room_19SegmentDataSize = ABSOLUTE( _MIZUsin_room_19SegmentDataEnd - _MIZUsin_room_19SegmentDataStart );
        _MIZUsin_room_19SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_19.o (.rodata)
        _MIZUsin_room_19SegmentRoDataEnd = .;
    _MIZUsin_room_19SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_19SegmentRoDataEnd - _MIZUsin_room_19SegmentRoDataStart );
        _MIZUsin_room_19SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_19.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_19SegmentSDataEnd = .;
        _MIZUsin_room_19SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_19.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_19SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_19SegmentOvlEnd - _MIZUsin_room_19SegmentTextStart );
    _MIZUsin_room_19SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_19.bss ADDR(..MIZUsin_room_19) + SIZEOF(..MIZUsin_room_19) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_19SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_19.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_19.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_19.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_19.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_19SegmentBssEnd = .;
        _MIZUsin_room_19SegmentEnd = .;
    }
    _MIZUsin_room_19SegmentBssSize = ABSOLUTE( _MIZUsin_room_19SegmentBssEnd - _MIZUsin_room_19SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_20SegmentRomStart = _RomSize;
    ..MIZUsin_room_20 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_20SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_20SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_20.o (.text)
        _MIZUsin_room_20SegmentTextEnd = .;
    _MIZUsin_room_20SegmentTextSize = ABSOLUTE( _MIZUsin_room_20SegmentTextEnd - _MIZUsin_room_20SegmentTextStart );
        _MIZUsin_room_20SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_20.o (.data)
        _MIZUsin_room_20SegmentDataEnd = .;
    _MIZUsin_room_20SegmentDataSize = ABSOLUTE( _MIZUsin_room_20SegmentDataEnd - _MIZUsin_room_20SegmentDataStart );
        _MIZUsin_room_20SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_20.o (.rodata)
        _MIZUsin_room_20SegmentRoDataEnd = .;
    _MIZUsin_room_20SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_20SegmentRoDataEnd - _MIZUsin_room_20SegmentRoDataStart );
        _MIZUsin_room_20SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_20.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_20SegmentSDataEnd = .;
        _MIZUsin_room_20SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_20.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_20SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_20SegmentOvlEnd - _MIZUsin_room_20SegmentTextStart );
    _MIZUsin_room_20SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_20.bss ADDR(..MIZUsin_room_20) + SIZEOF(..MIZUsin_room_20) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_20SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_20.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_20.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_20.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_20.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_20SegmentBssEnd = .;
        _MIZUsin_room_20SegmentEnd = .;
    }
    _MIZUsin_room_20SegmentBssSize = ABSOLUTE( _MIZUsin_room_20SegmentBssEnd - _MIZUsin_room_20SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_21SegmentRomStart = _RomSize;
    ..MIZUsin_room_21 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_21SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_21SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_21.o (.text)
        _MIZUsin_room_21SegmentTextEnd = .;
    _MIZUsin_room_21SegmentTextSize = ABSOLUTE( _MIZUsin_room_21SegmentTextEnd - _MIZUsin_room_21SegmentTextStart );
        _MIZUsin_room_21SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_21.o (.data)
        _MIZUsin_room_21SegmentDataEnd = .;
    _MIZUsin_room_21SegmentDataSize = ABSOLUTE( _MIZUsin_room_21SegmentDataEnd - _MIZUsin_room_21SegmentDataStart );
        _MIZUsin_room_21SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_21.o (.rodata)
        _MIZUsin_room_21SegmentRoDataEnd = .;
    _MIZUsin_room_21SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_21SegmentRoDataEnd - _MIZUsin_room_21SegmentRoDataStart );
        _MIZUsin_room_21SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_21.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_21SegmentSDataEnd = .;
        _MIZUsin_room_21SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_21.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_21SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_21SegmentOvlEnd - _MIZUsin_room_21SegmentTextStart );
    _MIZUsin_room_21SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_21.bss ADDR(..MIZUsin_room_21) + SIZEOF(..MIZUsin_room_21) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_21SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_21.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_21.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_21.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_21.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_21SegmentBssEnd = .;
        _MIZUsin_room_21SegmentEnd = .;
    }
    _MIZUsin_room_21SegmentBssSize = ABSOLUTE( _MIZUsin_room_21SegmentBssEnd - _MIZUsin_room_21SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_room_22SegmentRomStart = _RomSize;
    ..MIZUsin_room_22 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_room_22SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_room_22SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_22.o (.text)
        _MIZUsin_room_22SegmentTextEnd = .;
    _MIZUsin_room_22SegmentTextSize = ABSOLUTE( _MIZUsin_room_22SegmentTextEnd - _MIZUsin_room_22SegmentTextStart );
        _MIZUsin_room_22SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_22.o (.data)
        _MIZUsin_room_22SegmentDataEnd = .;
    _MIZUsin_room_22SegmentDataSize = ABSOLUTE( _MIZUsin_room_22SegmentDataEnd - _MIZUsin_room_22SegmentDataStart );
        _MIZUsin_room_22SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_22.o (.rodata)
        _MIZUsin_room_22SegmentRoDataEnd = .;
    _MIZUsin_room_22SegmentRoDataSize = ABSOLUTE( _MIZUsin_room_22SegmentRoDataEnd - _MIZUsin_room_22SegmentRoDataStart );
        _MIZUsin_room_22SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_22.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_room_22SegmentSDataEnd = .;
        _MIZUsin_room_22SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_22.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_room_22SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_room_22SegmentOvlEnd - _MIZUsin_room_22SegmentTextStart );
    _MIZUsin_room_22SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_room_22.bss ADDR(..MIZUsin_room_22) + SIZEOF(..MIZUsin_room_22) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_room_22SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin/MIZUsin_room_22.o (.sbss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_22.o (.scommon)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_22.o (.bss)
            build/scenes/dungeons/MIZUsin/MIZUsin_room_22.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_room_22SegmentBssEnd = .;
        _MIZUsin_room_22SegmentEnd = .;
    }
    _MIZUsin_room_22SegmentBssSize = ABSOLUTE( _MIZUsin_room_22SegmentBssEnd - _MIZUsin_room_22SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_sceneSegmentRomStart = _RomSize;
    ..jyasinzou_scene 0x02000000 : AT(_RomSize)
    {
        _jyasinzou_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_sceneSegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_scene.o (.text)
        _jyasinzou_sceneSegmentTextEnd = .;
    _jyasinzou_sceneSegmentTextSize = ABSOLUTE( _jyasinzou_sceneSegmentTextEnd - _jyasinzou_sceneSegmentTextStart );
        _jyasinzou_sceneSegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_scene.o (.data)
        _jyasinzou_sceneSegmentDataEnd = .;
    _jyasinzou_sceneSegmentDataSize = ABSOLUTE( _jyasinzou_sceneSegmentDataEnd - _jyasinzou_sceneSegmentDataStart );
        _jyasinzou_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_scene.o (.rodata)
        _jyasinzou_sceneSegmentRoDataEnd = .;
    _jyasinzou_sceneSegmentRoDataSize = ABSOLUTE( _jyasinzou_sceneSegmentRoDataEnd - _jyasinzou_sceneSegmentRoDataStart );
        _jyasinzou_sceneSegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_scene.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_sceneSegmentSDataEnd = .;
        _jyasinzou_sceneSegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_scene.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_sceneSegmentOvlEnd - _jyasinzou_sceneSegmentTextStart );
    _jyasinzou_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_scene.bss ADDR(..jyasinzou_scene) + SIZEOF(..jyasinzou_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_sceneSegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_scene.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_scene.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_scene.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_scene.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_sceneSegmentBssEnd = .;
        _jyasinzou_sceneSegmentEnd = .;
    }
    _jyasinzou_sceneSegmentBssSize = ABSOLUTE( _jyasinzou_sceneSegmentBssEnd - _jyasinzou_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_0SegmentRomStart = _RomSize;
    ..jyasinzou_room_0 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_0SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_0.o (.text)
        _jyasinzou_room_0SegmentTextEnd = .;
    _jyasinzou_room_0SegmentTextSize = ABSOLUTE( _jyasinzou_room_0SegmentTextEnd - _jyasinzou_room_0SegmentTextStart );
        _jyasinzou_room_0SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_0.o (.data)
        _jyasinzou_room_0SegmentDataEnd = .;
    _jyasinzou_room_0SegmentDataSize = ABSOLUTE( _jyasinzou_room_0SegmentDataEnd - _jyasinzou_room_0SegmentDataStart );
        _jyasinzou_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_0.o (.rodata)
        _jyasinzou_room_0SegmentRoDataEnd = .;
    _jyasinzou_room_0SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_0SegmentRoDataEnd - _jyasinzou_room_0SegmentRoDataStart );
        _jyasinzou_room_0SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_0.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_0SegmentSDataEnd = .;
        _jyasinzou_room_0SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_0.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_0SegmentOvlEnd - _jyasinzou_room_0SegmentTextStart );
    _jyasinzou_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_0.bss ADDR(..jyasinzou_room_0) + SIZEOF(..jyasinzou_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_0SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_0.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_0.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_0.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_0.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_0SegmentBssEnd = .;
        _jyasinzou_room_0SegmentEnd = .;
    }
    _jyasinzou_room_0SegmentBssSize = ABSOLUTE( _jyasinzou_room_0SegmentBssEnd - _jyasinzou_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_1SegmentRomStart = _RomSize;
    ..jyasinzou_room_1 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_1SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_1.o (.text)
        _jyasinzou_room_1SegmentTextEnd = .;
    _jyasinzou_room_1SegmentTextSize = ABSOLUTE( _jyasinzou_room_1SegmentTextEnd - _jyasinzou_room_1SegmentTextStart );
        _jyasinzou_room_1SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_1.o (.data)
        _jyasinzou_room_1SegmentDataEnd = .;
    _jyasinzou_room_1SegmentDataSize = ABSOLUTE( _jyasinzou_room_1SegmentDataEnd - _jyasinzou_room_1SegmentDataStart );
        _jyasinzou_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_1.o (.rodata)
        _jyasinzou_room_1SegmentRoDataEnd = .;
    _jyasinzou_room_1SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_1SegmentRoDataEnd - _jyasinzou_room_1SegmentRoDataStart );
        _jyasinzou_room_1SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_1.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_1SegmentSDataEnd = .;
        _jyasinzou_room_1SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_1.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_1SegmentOvlEnd - _jyasinzou_room_1SegmentTextStart );
    _jyasinzou_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_1.bss ADDR(..jyasinzou_room_1) + SIZEOF(..jyasinzou_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_1SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_1.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_1.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_1.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_1.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_1SegmentBssEnd = .;
        _jyasinzou_room_1SegmentEnd = .;
    }
    _jyasinzou_room_1SegmentBssSize = ABSOLUTE( _jyasinzou_room_1SegmentBssEnd - _jyasinzou_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_2SegmentRomStart = _RomSize;
    ..jyasinzou_room_2 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_2SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_2.o (.text)
        _jyasinzou_room_2SegmentTextEnd = .;
    _jyasinzou_room_2SegmentTextSize = ABSOLUTE( _jyasinzou_room_2SegmentTextEnd - _jyasinzou_room_2SegmentTextStart );
        _jyasinzou_room_2SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_2.o (.data)
        _jyasinzou_room_2SegmentDataEnd = .;
    _jyasinzou_room_2SegmentDataSize = ABSOLUTE( _jyasinzou_room_2SegmentDataEnd - _jyasinzou_room_2SegmentDataStart );
        _jyasinzou_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_2.o (.rodata)
        _jyasinzou_room_2SegmentRoDataEnd = .;
    _jyasinzou_room_2SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_2SegmentRoDataEnd - _jyasinzou_room_2SegmentRoDataStart );
        _jyasinzou_room_2SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_2.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_2SegmentSDataEnd = .;
        _jyasinzou_room_2SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_2.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_2SegmentOvlEnd - _jyasinzou_room_2SegmentTextStart );
    _jyasinzou_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_2.bss ADDR(..jyasinzou_room_2) + SIZEOF(..jyasinzou_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_2SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_2.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_2.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_2.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_2.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_2SegmentBssEnd = .;
        _jyasinzou_room_2SegmentEnd = .;
    }
    _jyasinzou_room_2SegmentBssSize = ABSOLUTE( _jyasinzou_room_2SegmentBssEnd - _jyasinzou_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_3SegmentRomStart = _RomSize;
    ..jyasinzou_room_3 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_3SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_3.o (.text)
        _jyasinzou_room_3SegmentTextEnd = .;
    _jyasinzou_room_3SegmentTextSize = ABSOLUTE( _jyasinzou_room_3SegmentTextEnd - _jyasinzou_room_3SegmentTextStart );
        _jyasinzou_room_3SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_3.o (.data)
        _jyasinzou_room_3SegmentDataEnd = .;
    _jyasinzou_room_3SegmentDataSize = ABSOLUTE( _jyasinzou_room_3SegmentDataEnd - _jyasinzou_room_3SegmentDataStart );
        _jyasinzou_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_3.o (.rodata)
        _jyasinzou_room_3SegmentRoDataEnd = .;
    _jyasinzou_room_3SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_3SegmentRoDataEnd - _jyasinzou_room_3SegmentRoDataStart );
        _jyasinzou_room_3SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_3.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_3SegmentSDataEnd = .;
        _jyasinzou_room_3SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_3.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_3SegmentOvlEnd - _jyasinzou_room_3SegmentTextStart );
    _jyasinzou_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_3.bss ADDR(..jyasinzou_room_3) + SIZEOF(..jyasinzou_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_3SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_3.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_3.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_3.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_3.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_3SegmentBssEnd = .;
        _jyasinzou_room_3SegmentEnd = .;
    }
    _jyasinzou_room_3SegmentBssSize = ABSOLUTE( _jyasinzou_room_3SegmentBssEnd - _jyasinzou_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_4SegmentRomStart = _RomSize;
    ..jyasinzou_room_4 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_4SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_4.o (.text)
        _jyasinzou_room_4SegmentTextEnd = .;
    _jyasinzou_room_4SegmentTextSize = ABSOLUTE( _jyasinzou_room_4SegmentTextEnd - _jyasinzou_room_4SegmentTextStart );
        _jyasinzou_room_4SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_4.o (.data)
        _jyasinzou_room_4SegmentDataEnd = .;
    _jyasinzou_room_4SegmentDataSize = ABSOLUTE( _jyasinzou_room_4SegmentDataEnd - _jyasinzou_room_4SegmentDataStart );
        _jyasinzou_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_4.o (.rodata)
        _jyasinzou_room_4SegmentRoDataEnd = .;
    _jyasinzou_room_4SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_4SegmentRoDataEnd - _jyasinzou_room_4SegmentRoDataStart );
        _jyasinzou_room_4SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_4.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_4SegmentSDataEnd = .;
        _jyasinzou_room_4SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_4.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_4SegmentOvlEnd - _jyasinzou_room_4SegmentTextStart );
    _jyasinzou_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_4.bss ADDR(..jyasinzou_room_4) + SIZEOF(..jyasinzou_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_4SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_4.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_4.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_4.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_4.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_4SegmentBssEnd = .;
        _jyasinzou_room_4SegmentEnd = .;
    }
    _jyasinzou_room_4SegmentBssSize = ABSOLUTE( _jyasinzou_room_4SegmentBssEnd - _jyasinzou_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_5SegmentRomStart = _RomSize;
    ..jyasinzou_room_5 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_5SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_5.o (.text)
        _jyasinzou_room_5SegmentTextEnd = .;
    _jyasinzou_room_5SegmentTextSize = ABSOLUTE( _jyasinzou_room_5SegmentTextEnd - _jyasinzou_room_5SegmentTextStart );
        _jyasinzou_room_5SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_5.o (.data)
        _jyasinzou_room_5SegmentDataEnd = .;
    _jyasinzou_room_5SegmentDataSize = ABSOLUTE( _jyasinzou_room_5SegmentDataEnd - _jyasinzou_room_5SegmentDataStart );
        _jyasinzou_room_5SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_5.o (.rodata)
        _jyasinzou_room_5SegmentRoDataEnd = .;
    _jyasinzou_room_5SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_5SegmentRoDataEnd - _jyasinzou_room_5SegmentRoDataStart );
        _jyasinzou_room_5SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_5.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_5SegmentSDataEnd = .;
        _jyasinzou_room_5SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_5.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_5SegmentOvlEnd - _jyasinzou_room_5SegmentTextStart );
    _jyasinzou_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_5.bss ADDR(..jyasinzou_room_5) + SIZEOF(..jyasinzou_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_5SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_5.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_5.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_5.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_5.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_5SegmentBssEnd = .;
        _jyasinzou_room_5SegmentEnd = .;
    }
    _jyasinzou_room_5SegmentBssSize = ABSOLUTE( _jyasinzou_room_5SegmentBssEnd - _jyasinzou_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_6SegmentRomStart = _RomSize;
    ..jyasinzou_room_6 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_6SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_6.o (.text)
        _jyasinzou_room_6SegmentTextEnd = .;
    _jyasinzou_room_6SegmentTextSize = ABSOLUTE( _jyasinzou_room_6SegmentTextEnd - _jyasinzou_room_6SegmentTextStart );
        _jyasinzou_room_6SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_6.o (.data)
        _jyasinzou_room_6SegmentDataEnd = .;
    _jyasinzou_room_6SegmentDataSize = ABSOLUTE( _jyasinzou_room_6SegmentDataEnd - _jyasinzou_room_6SegmentDataStart );
        _jyasinzou_room_6SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_6.o (.rodata)
        _jyasinzou_room_6SegmentRoDataEnd = .;
    _jyasinzou_room_6SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_6SegmentRoDataEnd - _jyasinzou_room_6SegmentRoDataStart );
        _jyasinzou_room_6SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_6.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_6SegmentSDataEnd = .;
        _jyasinzou_room_6SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_6.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_6SegmentOvlEnd - _jyasinzou_room_6SegmentTextStart );
    _jyasinzou_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_6.bss ADDR(..jyasinzou_room_6) + SIZEOF(..jyasinzou_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_6SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_6.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_6.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_6.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_6.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_6SegmentBssEnd = .;
        _jyasinzou_room_6SegmentEnd = .;
    }
    _jyasinzou_room_6SegmentBssSize = ABSOLUTE( _jyasinzou_room_6SegmentBssEnd - _jyasinzou_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_7SegmentRomStart = _RomSize;
    ..jyasinzou_room_7 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_7SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_7SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_7.o (.text)
        _jyasinzou_room_7SegmentTextEnd = .;
    _jyasinzou_room_7SegmentTextSize = ABSOLUTE( _jyasinzou_room_7SegmentTextEnd - _jyasinzou_room_7SegmentTextStart );
        _jyasinzou_room_7SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_7.o (.data)
        _jyasinzou_room_7SegmentDataEnd = .;
    _jyasinzou_room_7SegmentDataSize = ABSOLUTE( _jyasinzou_room_7SegmentDataEnd - _jyasinzou_room_7SegmentDataStart );
        _jyasinzou_room_7SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_7.o (.rodata)
        _jyasinzou_room_7SegmentRoDataEnd = .;
    _jyasinzou_room_7SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_7SegmentRoDataEnd - _jyasinzou_room_7SegmentRoDataStart );
        _jyasinzou_room_7SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_7.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_7SegmentSDataEnd = .;
        _jyasinzou_room_7SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_7.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_7SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_7SegmentOvlEnd - _jyasinzou_room_7SegmentTextStart );
    _jyasinzou_room_7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_7.bss ADDR(..jyasinzou_room_7) + SIZEOF(..jyasinzou_room_7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_7SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_7.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_7.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_7.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_7.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_7SegmentBssEnd = .;
        _jyasinzou_room_7SegmentEnd = .;
    }
    _jyasinzou_room_7SegmentBssSize = ABSOLUTE( _jyasinzou_room_7SegmentBssEnd - _jyasinzou_room_7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_8SegmentRomStart = _RomSize;
    ..jyasinzou_room_8 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_8SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_8SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_8.o (.text)
        _jyasinzou_room_8SegmentTextEnd = .;
    _jyasinzou_room_8SegmentTextSize = ABSOLUTE( _jyasinzou_room_8SegmentTextEnd - _jyasinzou_room_8SegmentTextStart );
        _jyasinzou_room_8SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_8.o (.data)
        _jyasinzou_room_8SegmentDataEnd = .;
    _jyasinzou_room_8SegmentDataSize = ABSOLUTE( _jyasinzou_room_8SegmentDataEnd - _jyasinzou_room_8SegmentDataStart );
        _jyasinzou_room_8SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_8.o (.rodata)
        _jyasinzou_room_8SegmentRoDataEnd = .;
    _jyasinzou_room_8SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_8SegmentRoDataEnd - _jyasinzou_room_8SegmentRoDataStart );
        _jyasinzou_room_8SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_8.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_8SegmentSDataEnd = .;
        _jyasinzou_room_8SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_8.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_8SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_8SegmentOvlEnd - _jyasinzou_room_8SegmentTextStart );
    _jyasinzou_room_8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_8.bss ADDR(..jyasinzou_room_8) + SIZEOF(..jyasinzou_room_8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_8SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_8.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_8.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_8.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_8.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_8SegmentBssEnd = .;
        _jyasinzou_room_8SegmentEnd = .;
    }
    _jyasinzou_room_8SegmentBssSize = ABSOLUTE( _jyasinzou_room_8SegmentBssEnd - _jyasinzou_room_8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_9SegmentRomStart = _RomSize;
    ..jyasinzou_room_9 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_9SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_9SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_9.o (.text)
        _jyasinzou_room_9SegmentTextEnd = .;
    _jyasinzou_room_9SegmentTextSize = ABSOLUTE( _jyasinzou_room_9SegmentTextEnd - _jyasinzou_room_9SegmentTextStart );
        _jyasinzou_room_9SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_9.o (.data)
        _jyasinzou_room_9SegmentDataEnd = .;
    _jyasinzou_room_9SegmentDataSize = ABSOLUTE( _jyasinzou_room_9SegmentDataEnd - _jyasinzou_room_9SegmentDataStart );
        _jyasinzou_room_9SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_9.o (.rodata)
        _jyasinzou_room_9SegmentRoDataEnd = .;
    _jyasinzou_room_9SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_9SegmentRoDataEnd - _jyasinzou_room_9SegmentRoDataStart );
        _jyasinzou_room_9SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_9.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_9SegmentSDataEnd = .;
        _jyasinzou_room_9SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_9.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_9SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_9SegmentOvlEnd - _jyasinzou_room_9SegmentTextStart );
    _jyasinzou_room_9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_9.bss ADDR(..jyasinzou_room_9) + SIZEOF(..jyasinzou_room_9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_9SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_9.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_9.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_9.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_9.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_9SegmentBssEnd = .;
        _jyasinzou_room_9SegmentEnd = .;
    }
    _jyasinzou_room_9SegmentBssSize = ABSOLUTE( _jyasinzou_room_9SegmentBssEnd - _jyasinzou_room_9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_10SegmentRomStart = _RomSize;
    ..jyasinzou_room_10 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_10SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_10SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_10.o (.text)
        _jyasinzou_room_10SegmentTextEnd = .;
    _jyasinzou_room_10SegmentTextSize = ABSOLUTE( _jyasinzou_room_10SegmentTextEnd - _jyasinzou_room_10SegmentTextStart );
        _jyasinzou_room_10SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_10.o (.data)
        _jyasinzou_room_10SegmentDataEnd = .;
    _jyasinzou_room_10SegmentDataSize = ABSOLUTE( _jyasinzou_room_10SegmentDataEnd - _jyasinzou_room_10SegmentDataStart );
        _jyasinzou_room_10SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_10.o (.rodata)
        _jyasinzou_room_10SegmentRoDataEnd = .;
    _jyasinzou_room_10SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_10SegmentRoDataEnd - _jyasinzou_room_10SegmentRoDataStart );
        _jyasinzou_room_10SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_10.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_10SegmentSDataEnd = .;
        _jyasinzou_room_10SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_10.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_10SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_10SegmentOvlEnd - _jyasinzou_room_10SegmentTextStart );
    _jyasinzou_room_10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_10.bss ADDR(..jyasinzou_room_10) + SIZEOF(..jyasinzou_room_10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_10SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_10.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_10.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_10.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_10.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_10SegmentBssEnd = .;
        _jyasinzou_room_10SegmentEnd = .;
    }
    _jyasinzou_room_10SegmentBssSize = ABSOLUTE( _jyasinzou_room_10SegmentBssEnd - _jyasinzou_room_10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_11SegmentRomStart = _RomSize;
    ..jyasinzou_room_11 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_11SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_11SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_11.o (.text)
        _jyasinzou_room_11SegmentTextEnd = .;
    _jyasinzou_room_11SegmentTextSize = ABSOLUTE( _jyasinzou_room_11SegmentTextEnd - _jyasinzou_room_11SegmentTextStart );
        _jyasinzou_room_11SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_11.o (.data)
        _jyasinzou_room_11SegmentDataEnd = .;
    _jyasinzou_room_11SegmentDataSize = ABSOLUTE( _jyasinzou_room_11SegmentDataEnd - _jyasinzou_room_11SegmentDataStart );
        _jyasinzou_room_11SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_11.o (.rodata)
        _jyasinzou_room_11SegmentRoDataEnd = .;
    _jyasinzou_room_11SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_11SegmentRoDataEnd - _jyasinzou_room_11SegmentRoDataStart );
        _jyasinzou_room_11SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_11.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_11SegmentSDataEnd = .;
        _jyasinzou_room_11SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_11.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_11SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_11SegmentOvlEnd - _jyasinzou_room_11SegmentTextStart );
    _jyasinzou_room_11SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_11.bss ADDR(..jyasinzou_room_11) + SIZEOF(..jyasinzou_room_11) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_11SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_11.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_11.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_11.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_11.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_11SegmentBssEnd = .;
        _jyasinzou_room_11SegmentEnd = .;
    }
    _jyasinzou_room_11SegmentBssSize = ABSOLUTE( _jyasinzou_room_11SegmentBssEnd - _jyasinzou_room_11SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_12SegmentRomStart = _RomSize;
    ..jyasinzou_room_12 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_12SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_12SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_12.o (.text)
        _jyasinzou_room_12SegmentTextEnd = .;
    _jyasinzou_room_12SegmentTextSize = ABSOLUTE( _jyasinzou_room_12SegmentTextEnd - _jyasinzou_room_12SegmentTextStart );
        _jyasinzou_room_12SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_12.o (.data)
        _jyasinzou_room_12SegmentDataEnd = .;
    _jyasinzou_room_12SegmentDataSize = ABSOLUTE( _jyasinzou_room_12SegmentDataEnd - _jyasinzou_room_12SegmentDataStart );
        _jyasinzou_room_12SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_12.o (.rodata)
        _jyasinzou_room_12SegmentRoDataEnd = .;
    _jyasinzou_room_12SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_12SegmentRoDataEnd - _jyasinzou_room_12SegmentRoDataStart );
        _jyasinzou_room_12SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_12.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_12SegmentSDataEnd = .;
        _jyasinzou_room_12SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_12.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_12SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_12SegmentOvlEnd - _jyasinzou_room_12SegmentTextStart );
    _jyasinzou_room_12SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_12.bss ADDR(..jyasinzou_room_12) + SIZEOF(..jyasinzou_room_12) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_12SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_12.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_12.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_12.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_12.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_12SegmentBssEnd = .;
        _jyasinzou_room_12SegmentEnd = .;
    }
    _jyasinzou_room_12SegmentBssSize = ABSOLUTE( _jyasinzou_room_12SegmentBssEnd - _jyasinzou_room_12SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_13SegmentRomStart = _RomSize;
    ..jyasinzou_room_13 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_13SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_13SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_13.o (.text)
        _jyasinzou_room_13SegmentTextEnd = .;
    _jyasinzou_room_13SegmentTextSize = ABSOLUTE( _jyasinzou_room_13SegmentTextEnd - _jyasinzou_room_13SegmentTextStart );
        _jyasinzou_room_13SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_13.o (.data)
        _jyasinzou_room_13SegmentDataEnd = .;
    _jyasinzou_room_13SegmentDataSize = ABSOLUTE( _jyasinzou_room_13SegmentDataEnd - _jyasinzou_room_13SegmentDataStart );
        _jyasinzou_room_13SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_13.o (.rodata)
        _jyasinzou_room_13SegmentRoDataEnd = .;
    _jyasinzou_room_13SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_13SegmentRoDataEnd - _jyasinzou_room_13SegmentRoDataStart );
        _jyasinzou_room_13SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_13.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_13SegmentSDataEnd = .;
        _jyasinzou_room_13SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_13.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_13SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_13SegmentOvlEnd - _jyasinzou_room_13SegmentTextStart );
    _jyasinzou_room_13SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_13.bss ADDR(..jyasinzou_room_13) + SIZEOF(..jyasinzou_room_13) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_13SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_13.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_13.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_13.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_13.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_13SegmentBssEnd = .;
        _jyasinzou_room_13SegmentEnd = .;
    }
    _jyasinzou_room_13SegmentBssSize = ABSOLUTE( _jyasinzou_room_13SegmentBssEnd - _jyasinzou_room_13SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_14SegmentRomStart = _RomSize;
    ..jyasinzou_room_14 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_14SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_14SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_14.o (.text)
        _jyasinzou_room_14SegmentTextEnd = .;
    _jyasinzou_room_14SegmentTextSize = ABSOLUTE( _jyasinzou_room_14SegmentTextEnd - _jyasinzou_room_14SegmentTextStart );
        _jyasinzou_room_14SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_14.o (.data)
        _jyasinzou_room_14SegmentDataEnd = .;
    _jyasinzou_room_14SegmentDataSize = ABSOLUTE( _jyasinzou_room_14SegmentDataEnd - _jyasinzou_room_14SegmentDataStart );
        _jyasinzou_room_14SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_14.o (.rodata)
        _jyasinzou_room_14SegmentRoDataEnd = .;
    _jyasinzou_room_14SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_14SegmentRoDataEnd - _jyasinzou_room_14SegmentRoDataStart );
        _jyasinzou_room_14SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_14.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_14SegmentSDataEnd = .;
        _jyasinzou_room_14SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_14.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_14SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_14SegmentOvlEnd - _jyasinzou_room_14SegmentTextStart );
    _jyasinzou_room_14SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_14.bss ADDR(..jyasinzou_room_14) + SIZEOF(..jyasinzou_room_14) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_14SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_14.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_14.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_14.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_14.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_14SegmentBssEnd = .;
        _jyasinzou_room_14SegmentEnd = .;
    }
    _jyasinzou_room_14SegmentBssSize = ABSOLUTE( _jyasinzou_room_14SegmentBssEnd - _jyasinzou_room_14SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_15SegmentRomStart = _RomSize;
    ..jyasinzou_room_15 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_15SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_15SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_15.o (.text)
        _jyasinzou_room_15SegmentTextEnd = .;
    _jyasinzou_room_15SegmentTextSize = ABSOLUTE( _jyasinzou_room_15SegmentTextEnd - _jyasinzou_room_15SegmentTextStart );
        _jyasinzou_room_15SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_15.o (.data)
        _jyasinzou_room_15SegmentDataEnd = .;
    _jyasinzou_room_15SegmentDataSize = ABSOLUTE( _jyasinzou_room_15SegmentDataEnd - _jyasinzou_room_15SegmentDataStart );
        _jyasinzou_room_15SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_15.o (.rodata)
        _jyasinzou_room_15SegmentRoDataEnd = .;
    _jyasinzou_room_15SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_15SegmentRoDataEnd - _jyasinzou_room_15SegmentRoDataStart );
        _jyasinzou_room_15SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_15.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_15SegmentSDataEnd = .;
        _jyasinzou_room_15SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_15.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_15SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_15SegmentOvlEnd - _jyasinzou_room_15SegmentTextStart );
    _jyasinzou_room_15SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_15.bss ADDR(..jyasinzou_room_15) + SIZEOF(..jyasinzou_room_15) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_15SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_15.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_15.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_15.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_15.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_15SegmentBssEnd = .;
        _jyasinzou_room_15SegmentEnd = .;
    }
    _jyasinzou_room_15SegmentBssSize = ABSOLUTE( _jyasinzou_room_15SegmentBssEnd - _jyasinzou_room_15SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_16SegmentRomStart = _RomSize;
    ..jyasinzou_room_16 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_16SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_16SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_16.o (.text)
        _jyasinzou_room_16SegmentTextEnd = .;
    _jyasinzou_room_16SegmentTextSize = ABSOLUTE( _jyasinzou_room_16SegmentTextEnd - _jyasinzou_room_16SegmentTextStart );
        _jyasinzou_room_16SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_16.o (.data)
        _jyasinzou_room_16SegmentDataEnd = .;
    _jyasinzou_room_16SegmentDataSize = ABSOLUTE( _jyasinzou_room_16SegmentDataEnd - _jyasinzou_room_16SegmentDataStart );
        _jyasinzou_room_16SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_16.o (.rodata)
        _jyasinzou_room_16SegmentRoDataEnd = .;
    _jyasinzou_room_16SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_16SegmentRoDataEnd - _jyasinzou_room_16SegmentRoDataStart );
        _jyasinzou_room_16SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_16.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_16SegmentSDataEnd = .;
        _jyasinzou_room_16SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_16.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_16SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_16SegmentOvlEnd - _jyasinzou_room_16SegmentTextStart );
    _jyasinzou_room_16SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_16.bss ADDR(..jyasinzou_room_16) + SIZEOF(..jyasinzou_room_16) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_16SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_16.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_16.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_16.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_16.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_16SegmentBssEnd = .;
        _jyasinzou_room_16SegmentEnd = .;
    }
    _jyasinzou_room_16SegmentBssSize = ABSOLUTE( _jyasinzou_room_16SegmentBssEnd - _jyasinzou_room_16SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_17SegmentRomStart = _RomSize;
    ..jyasinzou_room_17 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_17SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_17SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_17.o (.text)
        _jyasinzou_room_17SegmentTextEnd = .;
    _jyasinzou_room_17SegmentTextSize = ABSOLUTE( _jyasinzou_room_17SegmentTextEnd - _jyasinzou_room_17SegmentTextStart );
        _jyasinzou_room_17SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_17.o (.data)
        _jyasinzou_room_17SegmentDataEnd = .;
    _jyasinzou_room_17SegmentDataSize = ABSOLUTE( _jyasinzou_room_17SegmentDataEnd - _jyasinzou_room_17SegmentDataStart );
        _jyasinzou_room_17SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_17.o (.rodata)
        _jyasinzou_room_17SegmentRoDataEnd = .;
    _jyasinzou_room_17SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_17SegmentRoDataEnd - _jyasinzou_room_17SegmentRoDataStart );
        _jyasinzou_room_17SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_17.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_17SegmentSDataEnd = .;
        _jyasinzou_room_17SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_17.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_17SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_17SegmentOvlEnd - _jyasinzou_room_17SegmentTextStart );
    _jyasinzou_room_17SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_17.bss ADDR(..jyasinzou_room_17) + SIZEOF(..jyasinzou_room_17) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_17SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_17.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_17.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_17.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_17.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_17SegmentBssEnd = .;
        _jyasinzou_room_17SegmentEnd = .;
    }
    _jyasinzou_room_17SegmentBssSize = ABSOLUTE( _jyasinzou_room_17SegmentBssEnd - _jyasinzou_room_17SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_18SegmentRomStart = _RomSize;
    ..jyasinzou_room_18 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_18SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_18SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_18.o (.text)
        _jyasinzou_room_18SegmentTextEnd = .;
    _jyasinzou_room_18SegmentTextSize = ABSOLUTE( _jyasinzou_room_18SegmentTextEnd - _jyasinzou_room_18SegmentTextStart );
        _jyasinzou_room_18SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_18.o (.data)
        _jyasinzou_room_18SegmentDataEnd = .;
    _jyasinzou_room_18SegmentDataSize = ABSOLUTE( _jyasinzou_room_18SegmentDataEnd - _jyasinzou_room_18SegmentDataStart );
        _jyasinzou_room_18SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_18.o (.rodata)
        _jyasinzou_room_18SegmentRoDataEnd = .;
    _jyasinzou_room_18SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_18SegmentRoDataEnd - _jyasinzou_room_18SegmentRoDataStart );
        _jyasinzou_room_18SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_18.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_18SegmentSDataEnd = .;
        _jyasinzou_room_18SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_18.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_18SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_18SegmentOvlEnd - _jyasinzou_room_18SegmentTextStart );
    _jyasinzou_room_18SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_18.bss ADDR(..jyasinzou_room_18) + SIZEOF(..jyasinzou_room_18) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_18SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_18.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_18.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_18.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_18.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_18SegmentBssEnd = .;
        _jyasinzou_room_18SegmentEnd = .;
    }
    _jyasinzou_room_18SegmentBssSize = ABSOLUTE( _jyasinzou_room_18SegmentBssEnd - _jyasinzou_room_18SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_19SegmentRomStart = _RomSize;
    ..jyasinzou_room_19 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_19SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_19SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_19.o (.text)
        _jyasinzou_room_19SegmentTextEnd = .;
    _jyasinzou_room_19SegmentTextSize = ABSOLUTE( _jyasinzou_room_19SegmentTextEnd - _jyasinzou_room_19SegmentTextStart );
        _jyasinzou_room_19SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_19.o (.data)
        _jyasinzou_room_19SegmentDataEnd = .;
    _jyasinzou_room_19SegmentDataSize = ABSOLUTE( _jyasinzou_room_19SegmentDataEnd - _jyasinzou_room_19SegmentDataStart );
        _jyasinzou_room_19SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_19.o (.rodata)
        _jyasinzou_room_19SegmentRoDataEnd = .;
    _jyasinzou_room_19SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_19SegmentRoDataEnd - _jyasinzou_room_19SegmentRoDataStart );
        _jyasinzou_room_19SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_19.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_19SegmentSDataEnd = .;
        _jyasinzou_room_19SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_19.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_19SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_19SegmentOvlEnd - _jyasinzou_room_19SegmentTextStart );
    _jyasinzou_room_19SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_19.bss ADDR(..jyasinzou_room_19) + SIZEOF(..jyasinzou_room_19) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_19SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_19.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_19.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_19.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_19.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_19SegmentBssEnd = .;
        _jyasinzou_room_19SegmentEnd = .;
    }
    _jyasinzou_room_19SegmentBssSize = ABSOLUTE( _jyasinzou_room_19SegmentBssEnd - _jyasinzou_room_19SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_20SegmentRomStart = _RomSize;
    ..jyasinzou_room_20 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_20SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_20SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_20.o (.text)
        _jyasinzou_room_20SegmentTextEnd = .;
    _jyasinzou_room_20SegmentTextSize = ABSOLUTE( _jyasinzou_room_20SegmentTextEnd - _jyasinzou_room_20SegmentTextStart );
        _jyasinzou_room_20SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_20.o (.data)
        _jyasinzou_room_20SegmentDataEnd = .;
    _jyasinzou_room_20SegmentDataSize = ABSOLUTE( _jyasinzou_room_20SegmentDataEnd - _jyasinzou_room_20SegmentDataStart );
        _jyasinzou_room_20SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_20.o (.rodata)
        _jyasinzou_room_20SegmentRoDataEnd = .;
    _jyasinzou_room_20SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_20SegmentRoDataEnd - _jyasinzou_room_20SegmentRoDataStart );
        _jyasinzou_room_20SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_20.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_20SegmentSDataEnd = .;
        _jyasinzou_room_20SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_20.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_20SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_20SegmentOvlEnd - _jyasinzou_room_20SegmentTextStart );
    _jyasinzou_room_20SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_20.bss ADDR(..jyasinzou_room_20) + SIZEOF(..jyasinzou_room_20) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_20SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_20.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_20.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_20.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_20.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_20SegmentBssEnd = .;
        _jyasinzou_room_20SegmentEnd = .;
    }
    _jyasinzou_room_20SegmentBssSize = ABSOLUTE( _jyasinzou_room_20SegmentBssEnd - _jyasinzou_room_20SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_21SegmentRomStart = _RomSize;
    ..jyasinzou_room_21 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_21SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_21SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_21.o (.text)
        _jyasinzou_room_21SegmentTextEnd = .;
    _jyasinzou_room_21SegmentTextSize = ABSOLUTE( _jyasinzou_room_21SegmentTextEnd - _jyasinzou_room_21SegmentTextStart );
        _jyasinzou_room_21SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_21.o (.data)
        _jyasinzou_room_21SegmentDataEnd = .;
    _jyasinzou_room_21SegmentDataSize = ABSOLUTE( _jyasinzou_room_21SegmentDataEnd - _jyasinzou_room_21SegmentDataStart );
        _jyasinzou_room_21SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_21.o (.rodata)
        _jyasinzou_room_21SegmentRoDataEnd = .;
    _jyasinzou_room_21SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_21SegmentRoDataEnd - _jyasinzou_room_21SegmentRoDataStart );
        _jyasinzou_room_21SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_21.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_21SegmentSDataEnd = .;
        _jyasinzou_room_21SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_21.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_21SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_21SegmentOvlEnd - _jyasinzou_room_21SegmentTextStart );
    _jyasinzou_room_21SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_21.bss ADDR(..jyasinzou_room_21) + SIZEOF(..jyasinzou_room_21) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_21SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_21.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_21.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_21.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_21.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_21SegmentBssEnd = .;
        _jyasinzou_room_21SegmentEnd = .;
    }
    _jyasinzou_room_21SegmentBssSize = ABSOLUTE( _jyasinzou_room_21SegmentBssEnd - _jyasinzou_room_21SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_22SegmentRomStart = _RomSize;
    ..jyasinzou_room_22 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_22SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_22SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_22.o (.text)
        _jyasinzou_room_22SegmentTextEnd = .;
    _jyasinzou_room_22SegmentTextSize = ABSOLUTE( _jyasinzou_room_22SegmentTextEnd - _jyasinzou_room_22SegmentTextStart );
        _jyasinzou_room_22SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_22.o (.data)
        _jyasinzou_room_22SegmentDataEnd = .;
    _jyasinzou_room_22SegmentDataSize = ABSOLUTE( _jyasinzou_room_22SegmentDataEnd - _jyasinzou_room_22SegmentDataStart );
        _jyasinzou_room_22SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_22.o (.rodata)
        _jyasinzou_room_22SegmentRoDataEnd = .;
    _jyasinzou_room_22SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_22SegmentRoDataEnd - _jyasinzou_room_22SegmentRoDataStart );
        _jyasinzou_room_22SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_22.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_22SegmentSDataEnd = .;
        _jyasinzou_room_22SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_22.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_22SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_22SegmentOvlEnd - _jyasinzou_room_22SegmentTextStart );
    _jyasinzou_room_22SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_22.bss ADDR(..jyasinzou_room_22) + SIZEOF(..jyasinzou_room_22) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_22SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_22.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_22.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_22.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_22.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_22SegmentBssEnd = .;
        _jyasinzou_room_22SegmentEnd = .;
    }
    _jyasinzou_room_22SegmentBssSize = ABSOLUTE( _jyasinzou_room_22SegmentBssEnd - _jyasinzou_room_22SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_23SegmentRomStart = _RomSize;
    ..jyasinzou_room_23 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_23SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_23SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_23.o (.text)
        _jyasinzou_room_23SegmentTextEnd = .;
    _jyasinzou_room_23SegmentTextSize = ABSOLUTE( _jyasinzou_room_23SegmentTextEnd - _jyasinzou_room_23SegmentTextStart );
        _jyasinzou_room_23SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_23.o (.data)
        _jyasinzou_room_23SegmentDataEnd = .;
    _jyasinzou_room_23SegmentDataSize = ABSOLUTE( _jyasinzou_room_23SegmentDataEnd - _jyasinzou_room_23SegmentDataStart );
        _jyasinzou_room_23SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_23.o (.rodata)
        _jyasinzou_room_23SegmentRoDataEnd = .;
    _jyasinzou_room_23SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_23SegmentRoDataEnd - _jyasinzou_room_23SegmentRoDataStart );
        _jyasinzou_room_23SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_23.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_23SegmentSDataEnd = .;
        _jyasinzou_room_23SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_23.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_23SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_23SegmentOvlEnd - _jyasinzou_room_23SegmentTextStart );
    _jyasinzou_room_23SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_23.bss ADDR(..jyasinzou_room_23) + SIZEOF(..jyasinzou_room_23) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_23SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_23.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_23.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_23.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_23.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_23SegmentBssEnd = .;
        _jyasinzou_room_23SegmentEnd = .;
    }
    _jyasinzou_room_23SegmentBssSize = ABSOLUTE( _jyasinzou_room_23SegmentBssEnd - _jyasinzou_room_23SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_24SegmentRomStart = _RomSize;
    ..jyasinzou_room_24 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_24SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_24SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_24.o (.text)
        _jyasinzou_room_24SegmentTextEnd = .;
    _jyasinzou_room_24SegmentTextSize = ABSOLUTE( _jyasinzou_room_24SegmentTextEnd - _jyasinzou_room_24SegmentTextStart );
        _jyasinzou_room_24SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_24.o (.data)
        _jyasinzou_room_24SegmentDataEnd = .;
    _jyasinzou_room_24SegmentDataSize = ABSOLUTE( _jyasinzou_room_24SegmentDataEnd - _jyasinzou_room_24SegmentDataStart );
        _jyasinzou_room_24SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_24.o (.rodata)
        _jyasinzou_room_24SegmentRoDataEnd = .;
    _jyasinzou_room_24SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_24SegmentRoDataEnd - _jyasinzou_room_24SegmentRoDataStart );
        _jyasinzou_room_24SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_24.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_24SegmentSDataEnd = .;
        _jyasinzou_room_24SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_24.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_24SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_24SegmentOvlEnd - _jyasinzou_room_24SegmentTextStart );
    _jyasinzou_room_24SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_24.bss ADDR(..jyasinzou_room_24) + SIZEOF(..jyasinzou_room_24) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_24SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_24.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_24.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_24.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_24.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_24SegmentBssEnd = .;
        _jyasinzou_room_24SegmentEnd = .;
    }
    _jyasinzou_room_24SegmentBssSize = ABSOLUTE( _jyasinzou_room_24SegmentBssEnd - _jyasinzou_room_24SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_25SegmentRomStart = _RomSize;
    ..jyasinzou_room_25 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_25SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_25SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_25.o (.text)
        _jyasinzou_room_25SegmentTextEnd = .;
    _jyasinzou_room_25SegmentTextSize = ABSOLUTE( _jyasinzou_room_25SegmentTextEnd - _jyasinzou_room_25SegmentTextStart );
        _jyasinzou_room_25SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_25.o (.data)
        _jyasinzou_room_25SegmentDataEnd = .;
    _jyasinzou_room_25SegmentDataSize = ABSOLUTE( _jyasinzou_room_25SegmentDataEnd - _jyasinzou_room_25SegmentDataStart );
        _jyasinzou_room_25SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_25.o (.rodata)
        _jyasinzou_room_25SegmentRoDataEnd = .;
    _jyasinzou_room_25SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_25SegmentRoDataEnd - _jyasinzou_room_25SegmentRoDataStart );
        _jyasinzou_room_25SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_25.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_25SegmentSDataEnd = .;
        _jyasinzou_room_25SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_25.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_25SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_25SegmentOvlEnd - _jyasinzou_room_25SegmentTextStart );
    _jyasinzou_room_25SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_25.bss ADDR(..jyasinzou_room_25) + SIZEOF(..jyasinzou_room_25) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_25SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_25.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_25.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_25.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_25.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_25SegmentBssEnd = .;
        _jyasinzou_room_25SegmentEnd = .;
    }
    _jyasinzou_room_25SegmentBssSize = ABSOLUTE( _jyasinzou_room_25SegmentBssEnd - _jyasinzou_room_25SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_26SegmentRomStart = _RomSize;
    ..jyasinzou_room_26 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_26SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_26SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_26.o (.text)
        _jyasinzou_room_26SegmentTextEnd = .;
    _jyasinzou_room_26SegmentTextSize = ABSOLUTE( _jyasinzou_room_26SegmentTextEnd - _jyasinzou_room_26SegmentTextStart );
        _jyasinzou_room_26SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_26.o (.data)
        _jyasinzou_room_26SegmentDataEnd = .;
    _jyasinzou_room_26SegmentDataSize = ABSOLUTE( _jyasinzou_room_26SegmentDataEnd - _jyasinzou_room_26SegmentDataStart );
        _jyasinzou_room_26SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_26.o (.rodata)
        _jyasinzou_room_26SegmentRoDataEnd = .;
    _jyasinzou_room_26SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_26SegmentRoDataEnd - _jyasinzou_room_26SegmentRoDataStart );
        _jyasinzou_room_26SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_26.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_26SegmentSDataEnd = .;
        _jyasinzou_room_26SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_26.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_26SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_26SegmentOvlEnd - _jyasinzou_room_26SegmentTextStart );
    _jyasinzou_room_26SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_26.bss ADDR(..jyasinzou_room_26) + SIZEOF(..jyasinzou_room_26) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_26SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_26.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_26.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_26.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_26.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_26SegmentBssEnd = .;
        _jyasinzou_room_26SegmentEnd = .;
    }
    _jyasinzou_room_26SegmentBssSize = ABSOLUTE( _jyasinzou_room_26SegmentBssEnd - _jyasinzou_room_26SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_27SegmentRomStart = _RomSize;
    ..jyasinzou_room_27 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_27SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_27SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_27.o (.text)
        _jyasinzou_room_27SegmentTextEnd = .;
    _jyasinzou_room_27SegmentTextSize = ABSOLUTE( _jyasinzou_room_27SegmentTextEnd - _jyasinzou_room_27SegmentTextStart );
        _jyasinzou_room_27SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_27.o (.data)
        _jyasinzou_room_27SegmentDataEnd = .;
    _jyasinzou_room_27SegmentDataSize = ABSOLUTE( _jyasinzou_room_27SegmentDataEnd - _jyasinzou_room_27SegmentDataStart );
        _jyasinzou_room_27SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_27.o (.rodata)
        _jyasinzou_room_27SegmentRoDataEnd = .;
    _jyasinzou_room_27SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_27SegmentRoDataEnd - _jyasinzou_room_27SegmentRoDataStart );
        _jyasinzou_room_27SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_27.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_27SegmentSDataEnd = .;
        _jyasinzou_room_27SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_27.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_27SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_27SegmentOvlEnd - _jyasinzou_room_27SegmentTextStart );
    _jyasinzou_room_27SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_27.bss ADDR(..jyasinzou_room_27) + SIZEOF(..jyasinzou_room_27) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_27SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_27.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_27.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_27.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_27.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_27SegmentBssEnd = .;
        _jyasinzou_room_27SegmentEnd = .;
    }
    _jyasinzou_room_27SegmentBssSize = ABSOLUTE( _jyasinzou_room_27SegmentBssEnd - _jyasinzou_room_27SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinzou_room_28SegmentRomStart = _RomSize;
    ..jyasinzou_room_28 0x03000000 : AT(_RomSize)
    {
        _jyasinzou_room_28SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinzou_room_28SegmentTextStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_28.o (.text)
        _jyasinzou_room_28SegmentTextEnd = .;
    _jyasinzou_room_28SegmentTextSize = ABSOLUTE( _jyasinzou_room_28SegmentTextEnd - _jyasinzou_room_28SegmentTextStart );
        _jyasinzou_room_28SegmentDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_28.o (.data)
        _jyasinzou_room_28SegmentDataEnd = .;
    _jyasinzou_room_28SegmentDataSize = ABSOLUTE( _jyasinzou_room_28SegmentDataEnd - _jyasinzou_room_28SegmentDataStart );
        _jyasinzou_room_28SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_28.o (.rodata)
        _jyasinzou_room_28SegmentRoDataEnd = .;
    _jyasinzou_room_28SegmentRoDataSize = ABSOLUTE( _jyasinzou_room_28SegmentRoDataEnd - _jyasinzou_room_28SegmentRoDataStart );
        _jyasinzou_room_28SegmentSDataStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_28.o (.sdata)
        . = ALIGN(0x10);
        _jyasinzou_room_28SegmentSDataEnd = .;
        _jyasinzou_room_28SegmentOvlStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_28.o (.ovl)
        . = ALIGN(0x10);
        _jyasinzou_room_28SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinzou_room_28SegmentOvlEnd - _jyasinzou_room_28SegmentTextStart );
    _jyasinzou_room_28SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinzou_room_28.bss ADDR(..jyasinzou_room_28) + SIZEOF(..jyasinzou_room_28) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinzou_room_28SegmentBssStart = .;
            build/scenes/dungeons/jyasinzou/jyasinzou_room_28.o (.sbss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_28.o (.scommon)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_28.o (.bss)
            build/scenes/dungeons/jyasinzou/jyasinzou_room_28.o (COMMON)
        . = ALIGN(0x10);
        _jyasinzou_room_28SegmentBssEnd = .;
        _jyasinzou_room_28SegmentEnd = .;
    }
    _jyasinzou_room_28SegmentBssSize = ABSOLUTE( _jyasinzou_room_28SegmentBssEnd - _jyasinzou_room_28SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_sceneSegmentRomStart = _RomSize;
    ..HAKAdan_scene 0x02000000 : AT(_RomSize)
    {
        _HAKAdan_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_sceneSegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_scene.o (.text)
        _HAKAdan_sceneSegmentTextEnd = .;
    _HAKAdan_sceneSegmentTextSize = ABSOLUTE( _HAKAdan_sceneSegmentTextEnd - _HAKAdan_sceneSegmentTextStart );
        _HAKAdan_sceneSegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_scene.o (.data)
        _HAKAdan_sceneSegmentDataEnd = .;
    _HAKAdan_sceneSegmentDataSize = ABSOLUTE( _HAKAdan_sceneSegmentDataEnd - _HAKAdan_sceneSegmentDataStart );
        _HAKAdan_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_scene.o (.rodata)
        _HAKAdan_sceneSegmentRoDataEnd = .;
    _HAKAdan_sceneSegmentRoDataSize = ABSOLUTE( _HAKAdan_sceneSegmentRoDataEnd - _HAKAdan_sceneSegmentRoDataStart );
        _HAKAdan_sceneSegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_scene.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_sceneSegmentSDataEnd = .;
        _HAKAdan_sceneSegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_scene.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_sceneSegmentOvlEnd - _HAKAdan_sceneSegmentTextStart );
    _HAKAdan_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_scene.bss ADDR(..HAKAdan_scene) + SIZEOF(..HAKAdan_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_sceneSegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_scene.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_scene.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_scene.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_scene.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_sceneSegmentBssEnd = .;
        _HAKAdan_sceneSegmentEnd = .;
    }
    _HAKAdan_sceneSegmentBssSize = ABSOLUTE( _HAKAdan_sceneSegmentBssEnd - _HAKAdan_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_0SegmentRomStart = _RomSize;
    ..HAKAdan_room_0 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_0SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_0.o (.text)
        _HAKAdan_room_0SegmentTextEnd = .;
    _HAKAdan_room_0SegmentTextSize = ABSOLUTE( _HAKAdan_room_0SegmentTextEnd - _HAKAdan_room_0SegmentTextStart );
        _HAKAdan_room_0SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_0.o (.data)
        _HAKAdan_room_0SegmentDataEnd = .;
    _HAKAdan_room_0SegmentDataSize = ABSOLUTE( _HAKAdan_room_0SegmentDataEnd - _HAKAdan_room_0SegmentDataStart );
        _HAKAdan_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_0.o (.rodata)
        _HAKAdan_room_0SegmentRoDataEnd = .;
    _HAKAdan_room_0SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_0SegmentRoDataEnd - _HAKAdan_room_0SegmentRoDataStart );
        _HAKAdan_room_0SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_0.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_0SegmentSDataEnd = .;
        _HAKAdan_room_0SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_0.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_0SegmentOvlEnd - _HAKAdan_room_0SegmentTextStart );
    _HAKAdan_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_0.bss ADDR(..HAKAdan_room_0) + SIZEOF(..HAKAdan_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_0SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_0.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_0.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_0.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_0.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_0SegmentBssEnd = .;
        _HAKAdan_room_0SegmentEnd = .;
    }
    _HAKAdan_room_0SegmentBssSize = ABSOLUTE( _HAKAdan_room_0SegmentBssEnd - _HAKAdan_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_1SegmentRomStart = _RomSize;
    ..HAKAdan_room_1 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_1SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_1.o (.text)
        _HAKAdan_room_1SegmentTextEnd = .;
    _HAKAdan_room_1SegmentTextSize = ABSOLUTE( _HAKAdan_room_1SegmentTextEnd - _HAKAdan_room_1SegmentTextStart );
        _HAKAdan_room_1SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_1.o (.data)
        _HAKAdan_room_1SegmentDataEnd = .;
    _HAKAdan_room_1SegmentDataSize = ABSOLUTE( _HAKAdan_room_1SegmentDataEnd - _HAKAdan_room_1SegmentDataStart );
        _HAKAdan_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_1.o (.rodata)
        _HAKAdan_room_1SegmentRoDataEnd = .;
    _HAKAdan_room_1SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_1SegmentRoDataEnd - _HAKAdan_room_1SegmentRoDataStart );
        _HAKAdan_room_1SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_1.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_1SegmentSDataEnd = .;
        _HAKAdan_room_1SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_1.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_1SegmentOvlEnd - _HAKAdan_room_1SegmentTextStart );
    _HAKAdan_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_1.bss ADDR(..HAKAdan_room_1) + SIZEOF(..HAKAdan_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_1SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_1.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_1.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_1.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_1.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_1SegmentBssEnd = .;
        _HAKAdan_room_1SegmentEnd = .;
    }
    _HAKAdan_room_1SegmentBssSize = ABSOLUTE( _HAKAdan_room_1SegmentBssEnd - _HAKAdan_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_2SegmentRomStart = _RomSize;
    ..HAKAdan_room_2 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_2SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_2.o (.text)
        _HAKAdan_room_2SegmentTextEnd = .;
    _HAKAdan_room_2SegmentTextSize = ABSOLUTE( _HAKAdan_room_2SegmentTextEnd - _HAKAdan_room_2SegmentTextStart );
        _HAKAdan_room_2SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_2.o (.data)
        _HAKAdan_room_2SegmentDataEnd = .;
    _HAKAdan_room_2SegmentDataSize = ABSOLUTE( _HAKAdan_room_2SegmentDataEnd - _HAKAdan_room_2SegmentDataStart );
        _HAKAdan_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_2.o (.rodata)
        _HAKAdan_room_2SegmentRoDataEnd = .;
    _HAKAdan_room_2SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_2SegmentRoDataEnd - _HAKAdan_room_2SegmentRoDataStart );
        _HAKAdan_room_2SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_2.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_2SegmentSDataEnd = .;
        _HAKAdan_room_2SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_2.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_2SegmentOvlEnd - _HAKAdan_room_2SegmentTextStart );
    _HAKAdan_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_2.bss ADDR(..HAKAdan_room_2) + SIZEOF(..HAKAdan_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_2SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_2.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_2.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_2.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_2.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_2SegmentBssEnd = .;
        _HAKAdan_room_2SegmentEnd = .;
    }
    _HAKAdan_room_2SegmentBssSize = ABSOLUTE( _HAKAdan_room_2SegmentBssEnd - _HAKAdan_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_3SegmentRomStart = _RomSize;
    ..HAKAdan_room_3 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_3SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_3.o (.text)
        _HAKAdan_room_3SegmentTextEnd = .;
    _HAKAdan_room_3SegmentTextSize = ABSOLUTE( _HAKAdan_room_3SegmentTextEnd - _HAKAdan_room_3SegmentTextStart );
        _HAKAdan_room_3SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_3.o (.data)
        _HAKAdan_room_3SegmentDataEnd = .;
    _HAKAdan_room_3SegmentDataSize = ABSOLUTE( _HAKAdan_room_3SegmentDataEnd - _HAKAdan_room_3SegmentDataStart );
        _HAKAdan_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_3.o (.rodata)
        _HAKAdan_room_3SegmentRoDataEnd = .;
    _HAKAdan_room_3SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_3SegmentRoDataEnd - _HAKAdan_room_3SegmentRoDataStart );
        _HAKAdan_room_3SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_3.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_3SegmentSDataEnd = .;
        _HAKAdan_room_3SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_3.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_3SegmentOvlEnd - _HAKAdan_room_3SegmentTextStart );
    _HAKAdan_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_3.bss ADDR(..HAKAdan_room_3) + SIZEOF(..HAKAdan_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_3SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_3.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_3.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_3.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_3.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_3SegmentBssEnd = .;
        _HAKAdan_room_3SegmentEnd = .;
    }
    _HAKAdan_room_3SegmentBssSize = ABSOLUTE( _HAKAdan_room_3SegmentBssEnd - _HAKAdan_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_4SegmentRomStart = _RomSize;
    ..HAKAdan_room_4 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_4SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_4.o (.text)
        _HAKAdan_room_4SegmentTextEnd = .;
    _HAKAdan_room_4SegmentTextSize = ABSOLUTE( _HAKAdan_room_4SegmentTextEnd - _HAKAdan_room_4SegmentTextStart );
        _HAKAdan_room_4SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_4.o (.data)
        _HAKAdan_room_4SegmentDataEnd = .;
    _HAKAdan_room_4SegmentDataSize = ABSOLUTE( _HAKAdan_room_4SegmentDataEnd - _HAKAdan_room_4SegmentDataStart );
        _HAKAdan_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_4.o (.rodata)
        _HAKAdan_room_4SegmentRoDataEnd = .;
    _HAKAdan_room_4SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_4SegmentRoDataEnd - _HAKAdan_room_4SegmentRoDataStart );
        _HAKAdan_room_4SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_4.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_4SegmentSDataEnd = .;
        _HAKAdan_room_4SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_4.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_4SegmentOvlEnd - _HAKAdan_room_4SegmentTextStart );
    _HAKAdan_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_4.bss ADDR(..HAKAdan_room_4) + SIZEOF(..HAKAdan_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_4SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_4.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_4.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_4.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_4.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_4SegmentBssEnd = .;
        _HAKAdan_room_4SegmentEnd = .;
    }
    _HAKAdan_room_4SegmentBssSize = ABSOLUTE( _HAKAdan_room_4SegmentBssEnd - _HAKAdan_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_5SegmentRomStart = _RomSize;
    ..HAKAdan_room_5 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_5SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_5.o (.text)
        _HAKAdan_room_5SegmentTextEnd = .;
    _HAKAdan_room_5SegmentTextSize = ABSOLUTE( _HAKAdan_room_5SegmentTextEnd - _HAKAdan_room_5SegmentTextStart );
        _HAKAdan_room_5SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_5.o (.data)
        _HAKAdan_room_5SegmentDataEnd = .;
    _HAKAdan_room_5SegmentDataSize = ABSOLUTE( _HAKAdan_room_5SegmentDataEnd - _HAKAdan_room_5SegmentDataStart );
        _HAKAdan_room_5SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_5.o (.rodata)
        _HAKAdan_room_5SegmentRoDataEnd = .;
    _HAKAdan_room_5SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_5SegmentRoDataEnd - _HAKAdan_room_5SegmentRoDataStart );
        _HAKAdan_room_5SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_5.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_5SegmentSDataEnd = .;
        _HAKAdan_room_5SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_5.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_5SegmentOvlEnd - _HAKAdan_room_5SegmentTextStart );
    _HAKAdan_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_5.bss ADDR(..HAKAdan_room_5) + SIZEOF(..HAKAdan_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_5SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_5.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_5.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_5.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_5.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_5SegmentBssEnd = .;
        _HAKAdan_room_5SegmentEnd = .;
    }
    _HAKAdan_room_5SegmentBssSize = ABSOLUTE( _HAKAdan_room_5SegmentBssEnd - _HAKAdan_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_6SegmentRomStart = _RomSize;
    ..HAKAdan_room_6 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_6SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_6.o (.text)
        _HAKAdan_room_6SegmentTextEnd = .;
    _HAKAdan_room_6SegmentTextSize = ABSOLUTE( _HAKAdan_room_6SegmentTextEnd - _HAKAdan_room_6SegmentTextStart );
        _HAKAdan_room_6SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_6.o (.data)
        _HAKAdan_room_6SegmentDataEnd = .;
    _HAKAdan_room_6SegmentDataSize = ABSOLUTE( _HAKAdan_room_6SegmentDataEnd - _HAKAdan_room_6SegmentDataStart );
        _HAKAdan_room_6SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_6.o (.rodata)
        _HAKAdan_room_6SegmentRoDataEnd = .;
    _HAKAdan_room_6SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_6SegmentRoDataEnd - _HAKAdan_room_6SegmentRoDataStart );
        _HAKAdan_room_6SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_6.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_6SegmentSDataEnd = .;
        _HAKAdan_room_6SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_6.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_6SegmentOvlEnd - _HAKAdan_room_6SegmentTextStart );
    _HAKAdan_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_6.bss ADDR(..HAKAdan_room_6) + SIZEOF(..HAKAdan_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_6SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_6.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_6.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_6.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_6.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_6SegmentBssEnd = .;
        _HAKAdan_room_6SegmentEnd = .;
    }
    _HAKAdan_room_6SegmentBssSize = ABSOLUTE( _HAKAdan_room_6SegmentBssEnd - _HAKAdan_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_7SegmentRomStart = _RomSize;
    ..HAKAdan_room_7 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_7SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_7SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_7.o (.text)
        _HAKAdan_room_7SegmentTextEnd = .;
    _HAKAdan_room_7SegmentTextSize = ABSOLUTE( _HAKAdan_room_7SegmentTextEnd - _HAKAdan_room_7SegmentTextStart );
        _HAKAdan_room_7SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_7.o (.data)
        _HAKAdan_room_7SegmentDataEnd = .;
    _HAKAdan_room_7SegmentDataSize = ABSOLUTE( _HAKAdan_room_7SegmentDataEnd - _HAKAdan_room_7SegmentDataStart );
        _HAKAdan_room_7SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_7.o (.rodata)
        _HAKAdan_room_7SegmentRoDataEnd = .;
    _HAKAdan_room_7SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_7SegmentRoDataEnd - _HAKAdan_room_7SegmentRoDataStart );
        _HAKAdan_room_7SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_7.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_7SegmentSDataEnd = .;
        _HAKAdan_room_7SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_7.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_7SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_7SegmentOvlEnd - _HAKAdan_room_7SegmentTextStart );
    _HAKAdan_room_7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_7.bss ADDR(..HAKAdan_room_7) + SIZEOF(..HAKAdan_room_7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_7SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_7.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_7.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_7.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_7.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_7SegmentBssEnd = .;
        _HAKAdan_room_7SegmentEnd = .;
    }
    _HAKAdan_room_7SegmentBssSize = ABSOLUTE( _HAKAdan_room_7SegmentBssEnd - _HAKAdan_room_7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_8SegmentRomStart = _RomSize;
    ..HAKAdan_room_8 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_8SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_8SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_8.o (.text)
        _HAKAdan_room_8SegmentTextEnd = .;
    _HAKAdan_room_8SegmentTextSize = ABSOLUTE( _HAKAdan_room_8SegmentTextEnd - _HAKAdan_room_8SegmentTextStart );
        _HAKAdan_room_8SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_8.o (.data)
        _HAKAdan_room_8SegmentDataEnd = .;
    _HAKAdan_room_8SegmentDataSize = ABSOLUTE( _HAKAdan_room_8SegmentDataEnd - _HAKAdan_room_8SegmentDataStart );
        _HAKAdan_room_8SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_8.o (.rodata)
        _HAKAdan_room_8SegmentRoDataEnd = .;
    _HAKAdan_room_8SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_8SegmentRoDataEnd - _HAKAdan_room_8SegmentRoDataStart );
        _HAKAdan_room_8SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_8.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_8SegmentSDataEnd = .;
        _HAKAdan_room_8SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_8.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_8SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_8SegmentOvlEnd - _HAKAdan_room_8SegmentTextStart );
    _HAKAdan_room_8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_8.bss ADDR(..HAKAdan_room_8) + SIZEOF(..HAKAdan_room_8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_8SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_8.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_8.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_8.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_8.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_8SegmentBssEnd = .;
        _HAKAdan_room_8SegmentEnd = .;
    }
    _HAKAdan_room_8SegmentBssSize = ABSOLUTE( _HAKAdan_room_8SegmentBssEnd - _HAKAdan_room_8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_9SegmentRomStart = _RomSize;
    ..HAKAdan_room_9 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_9SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_9SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_9.o (.text)
        _HAKAdan_room_9SegmentTextEnd = .;
    _HAKAdan_room_9SegmentTextSize = ABSOLUTE( _HAKAdan_room_9SegmentTextEnd - _HAKAdan_room_9SegmentTextStart );
        _HAKAdan_room_9SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_9.o (.data)
        _HAKAdan_room_9SegmentDataEnd = .;
    _HAKAdan_room_9SegmentDataSize = ABSOLUTE( _HAKAdan_room_9SegmentDataEnd - _HAKAdan_room_9SegmentDataStart );
        _HAKAdan_room_9SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_9.o (.rodata)
        _HAKAdan_room_9SegmentRoDataEnd = .;
    _HAKAdan_room_9SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_9SegmentRoDataEnd - _HAKAdan_room_9SegmentRoDataStart );
        _HAKAdan_room_9SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_9.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_9SegmentSDataEnd = .;
        _HAKAdan_room_9SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_9.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_9SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_9SegmentOvlEnd - _HAKAdan_room_9SegmentTextStart );
    _HAKAdan_room_9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_9.bss ADDR(..HAKAdan_room_9) + SIZEOF(..HAKAdan_room_9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_9SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_9.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_9.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_9.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_9.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_9SegmentBssEnd = .;
        _HAKAdan_room_9SegmentEnd = .;
    }
    _HAKAdan_room_9SegmentBssSize = ABSOLUTE( _HAKAdan_room_9SegmentBssEnd - _HAKAdan_room_9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_10SegmentRomStart = _RomSize;
    ..HAKAdan_room_10 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_10SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_10SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_10.o (.text)
        _HAKAdan_room_10SegmentTextEnd = .;
    _HAKAdan_room_10SegmentTextSize = ABSOLUTE( _HAKAdan_room_10SegmentTextEnd - _HAKAdan_room_10SegmentTextStart );
        _HAKAdan_room_10SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_10.o (.data)
        _HAKAdan_room_10SegmentDataEnd = .;
    _HAKAdan_room_10SegmentDataSize = ABSOLUTE( _HAKAdan_room_10SegmentDataEnd - _HAKAdan_room_10SegmentDataStart );
        _HAKAdan_room_10SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_10.o (.rodata)
        _HAKAdan_room_10SegmentRoDataEnd = .;
    _HAKAdan_room_10SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_10SegmentRoDataEnd - _HAKAdan_room_10SegmentRoDataStart );
        _HAKAdan_room_10SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_10.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_10SegmentSDataEnd = .;
        _HAKAdan_room_10SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_10.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_10SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_10SegmentOvlEnd - _HAKAdan_room_10SegmentTextStart );
    _HAKAdan_room_10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_10.bss ADDR(..HAKAdan_room_10) + SIZEOF(..HAKAdan_room_10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_10SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_10.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_10.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_10.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_10.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_10SegmentBssEnd = .;
        _HAKAdan_room_10SegmentEnd = .;
    }
    _HAKAdan_room_10SegmentBssSize = ABSOLUTE( _HAKAdan_room_10SegmentBssEnd - _HAKAdan_room_10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_11SegmentRomStart = _RomSize;
    ..HAKAdan_room_11 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_11SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_11SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_11.o (.text)
        _HAKAdan_room_11SegmentTextEnd = .;
    _HAKAdan_room_11SegmentTextSize = ABSOLUTE( _HAKAdan_room_11SegmentTextEnd - _HAKAdan_room_11SegmentTextStart );
        _HAKAdan_room_11SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_11.o (.data)
        _HAKAdan_room_11SegmentDataEnd = .;
    _HAKAdan_room_11SegmentDataSize = ABSOLUTE( _HAKAdan_room_11SegmentDataEnd - _HAKAdan_room_11SegmentDataStart );
        _HAKAdan_room_11SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_11.o (.rodata)
        _HAKAdan_room_11SegmentRoDataEnd = .;
    _HAKAdan_room_11SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_11SegmentRoDataEnd - _HAKAdan_room_11SegmentRoDataStart );
        _HAKAdan_room_11SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_11.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_11SegmentSDataEnd = .;
        _HAKAdan_room_11SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_11.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_11SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_11SegmentOvlEnd - _HAKAdan_room_11SegmentTextStart );
    _HAKAdan_room_11SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_11.bss ADDR(..HAKAdan_room_11) + SIZEOF(..HAKAdan_room_11) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_11SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_11.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_11.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_11.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_11.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_11SegmentBssEnd = .;
        _HAKAdan_room_11SegmentEnd = .;
    }
    _HAKAdan_room_11SegmentBssSize = ABSOLUTE( _HAKAdan_room_11SegmentBssEnd - _HAKAdan_room_11SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_12SegmentRomStart = _RomSize;
    ..HAKAdan_room_12 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_12SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_12SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_12.o (.text)
        _HAKAdan_room_12SegmentTextEnd = .;
    _HAKAdan_room_12SegmentTextSize = ABSOLUTE( _HAKAdan_room_12SegmentTextEnd - _HAKAdan_room_12SegmentTextStart );
        _HAKAdan_room_12SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_12.o (.data)
        _HAKAdan_room_12SegmentDataEnd = .;
    _HAKAdan_room_12SegmentDataSize = ABSOLUTE( _HAKAdan_room_12SegmentDataEnd - _HAKAdan_room_12SegmentDataStart );
        _HAKAdan_room_12SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_12.o (.rodata)
        _HAKAdan_room_12SegmentRoDataEnd = .;
    _HAKAdan_room_12SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_12SegmentRoDataEnd - _HAKAdan_room_12SegmentRoDataStart );
        _HAKAdan_room_12SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_12.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_12SegmentSDataEnd = .;
        _HAKAdan_room_12SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_12.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_12SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_12SegmentOvlEnd - _HAKAdan_room_12SegmentTextStart );
    _HAKAdan_room_12SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_12.bss ADDR(..HAKAdan_room_12) + SIZEOF(..HAKAdan_room_12) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_12SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_12.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_12.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_12.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_12.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_12SegmentBssEnd = .;
        _HAKAdan_room_12SegmentEnd = .;
    }
    _HAKAdan_room_12SegmentBssSize = ABSOLUTE( _HAKAdan_room_12SegmentBssEnd - _HAKAdan_room_12SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_13SegmentRomStart = _RomSize;
    ..HAKAdan_room_13 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_13SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_13SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_13.o (.text)
        _HAKAdan_room_13SegmentTextEnd = .;
    _HAKAdan_room_13SegmentTextSize = ABSOLUTE( _HAKAdan_room_13SegmentTextEnd - _HAKAdan_room_13SegmentTextStart );
        _HAKAdan_room_13SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_13.o (.data)
        _HAKAdan_room_13SegmentDataEnd = .;
    _HAKAdan_room_13SegmentDataSize = ABSOLUTE( _HAKAdan_room_13SegmentDataEnd - _HAKAdan_room_13SegmentDataStart );
        _HAKAdan_room_13SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_13.o (.rodata)
        _HAKAdan_room_13SegmentRoDataEnd = .;
    _HAKAdan_room_13SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_13SegmentRoDataEnd - _HAKAdan_room_13SegmentRoDataStart );
        _HAKAdan_room_13SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_13.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_13SegmentSDataEnd = .;
        _HAKAdan_room_13SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_13.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_13SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_13SegmentOvlEnd - _HAKAdan_room_13SegmentTextStart );
    _HAKAdan_room_13SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_13.bss ADDR(..HAKAdan_room_13) + SIZEOF(..HAKAdan_room_13) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_13SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_13.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_13.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_13.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_13.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_13SegmentBssEnd = .;
        _HAKAdan_room_13SegmentEnd = .;
    }
    _HAKAdan_room_13SegmentBssSize = ABSOLUTE( _HAKAdan_room_13SegmentBssEnd - _HAKAdan_room_13SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_14SegmentRomStart = _RomSize;
    ..HAKAdan_room_14 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_14SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_14SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_14.o (.text)
        _HAKAdan_room_14SegmentTextEnd = .;
    _HAKAdan_room_14SegmentTextSize = ABSOLUTE( _HAKAdan_room_14SegmentTextEnd - _HAKAdan_room_14SegmentTextStart );
        _HAKAdan_room_14SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_14.o (.data)
        _HAKAdan_room_14SegmentDataEnd = .;
    _HAKAdan_room_14SegmentDataSize = ABSOLUTE( _HAKAdan_room_14SegmentDataEnd - _HAKAdan_room_14SegmentDataStart );
        _HAKAdan_room_14SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_14.o (.rodata)
        _HAKAdan_room_14SegmentRoDataEnd = .;
    _HAKAdan_room_14SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_14SegmentRoDataEnd - _HAKAdan_room_14SegmentRoDataStart );
        _HAKAdan_room_14SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_14.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_14SegmentSDataEnd = .;
        _HAKAdan_room_14SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_14.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_14SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_14SegmentOvlEnd - _HAKAdan_room_14SegmentTextStart );
    _HAKAdan_room_14SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_14.bss ADDR(..HAKAdan_room_14) + SIZEOF(..HAKAdan_room_14) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_14SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_14.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_14.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_14.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_14.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_14SegmentBssEnd = .;
        _HAKAdan_room_14SegmentEnd = .;
    }
    _HAKAdan_room_14SegmentBssSize = ABSOLUTE( _HAKAdan_room_14SegmentBssEnd - _HAKAdan_room_14SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_15SegmentRomStart = _RomSize;
    ..HAKAdan_room_15 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_15SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_15SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_15.o (.text)
        _HAKAdan_room_15SegmentTextEnd = .;
    _HAKAdan_room_15SegmentTextSize = ABSOLUTE( _HAKAdan_room_15SegmentTextEnd - _HAKAdan_room_15SegmentTextStart );
        _HAKAdan_room_15SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_15.o (.data)
        _HAKAdan_room_15SegmentDataEnd = .;
    _HAKAdan_room_15SegmentDataSize = ABSOLUTE( _HAKAdan_room_15SegmentDataEnd - _HAKAdan_room_15SegmentDataStart );
        _HAKAdan_room_15SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_15.o (.rodata)
        _HAKAdan_room_15SegmentRoDataEnd = .;
    _HAKAdan_room_15SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_15SegmentRoDataEnd - _HAKAdan_room_15SegmentRoDataStart );
        _HAKAdan_room_15SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_15.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_15SegmentSDataEnd = .;
        _HAKAdan_room_15SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_15.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_15SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_15SegmentOvlEnd - _HAKAdan_room_15SegmentTextStart );
    _HAKAdan_room_15SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_15.bss ADDR(..HAKAdan_room_15) + SIZEOF(..HAKAdan_room_15) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_15SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_15.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_15.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_15.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_15.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_15SegmentBssEnd = .;
        _HAKAdan_room_15SegmentEnd = .;
    }
    _HAKAdan_room_15SegmentBssSize = ABSOLUTE( _HAKAdan_room_15SegmentBssEnd - _HAKAdan_room_15SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_16SegmentRomStart = _RomSize;
    ..HAKAdan_room_16 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_16SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_16SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_16.o (.text)
        _HAKAdan_room_16SegmentTextEnd = .;
    _HAKAdan_room_16SegmentTextSize = ABSOLUTE( _HAKAdan_room_16SegmentTextEnd - _HAKAdan_room_16SegmentTextStart );
        _HAKAdan_room_16SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_16.o (.data)
        _HAKAdan_room_16SegmentDataEnd = .;
    _HAKAdan_room_16SegmentDataSize = ABSOLUTE( _HAKAdan_room_16SegmentDataEnd - _HAKAdan_room_16SegmentDataStart );
        _HAKAdan_room_16SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_16.o (.rodata)
        _HAKAdan_room_16SegmentRoDataEnd = .;
    _HAKAdan_room_16SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_16SegmentRoDataEnd - _HAKAdan_room_16SegmentRoDataStart );
        _HAKAdan_room_16SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_16.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_16SegmentSDataEnd = .;
        _HAKAdan_room_16SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_16.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_16SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_16SegmentOvlEnd - _HAKAdan_room_16SegmentTextStart );
    _HAKAdan_room_16SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_16.bss ADDR(..HAKAdan_room_16) + SIZEOF(..HAKAdan_room_16) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_16SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_16.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_16.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_16.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_16.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_16SegmentBssEnd = .;
        _HAKAdan_room_16SegmentEnd = .;
    }
    _HAKAdan_room_16SegmentBssSize = ABSOLUTE( _HAKAdan_room_16SegmentBssEnd - _HAKAdan_room_16SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_17SegmentRomStart = _RomSize;
    ..HAKAdan_room_17 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_17SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_17SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_17.o (.text)
        _HAKAdan_room_17SegmentTextEnd = .;
    _HAKAdan_room_17SegmentTextSize = ABSOLUTE( _HAKAdan_room_17SegmentTextEnd - _HAKAdan_room_17SegmentTextStart );
        _HAKAdan_room_17SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_17.o (.data)
        _HAKAdan_room_17SegmentDataEnd = .;
    _HAKAdan_room_17SegmentDataSize = ABSOLUTE( _HAKAdan_room_17SegmentDataEnd - _HAKAdan_room_17SegmentDataStart );
        _HAKAdan_room_17SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_17.o (.rodata)
        _HAKAdan_room_17SegmentRoDataEnd = .;
    _HAKAdan_room_17SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_17SegmentRoDataEnd - _HAKAdan_room_17SegmentRoDataStart );
        _HAKAdan_room_17SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_17.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_17SegmentSDataEnd = .;
        _HAKAdan_room_17SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_17.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_17SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_17SegmentOvlEnd - _HAKAdan_room_17SegmentTextStart );
    _HAKAdan_room_17SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_17.bss ADDR(..HAKAdan_room_17) + SIZEOF(..HAKAdan_room_17) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_17SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_17.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_17.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_17.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_17.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_17SegmentBssEnd = .;
        _HAKAdan_room_17SegmentEnd = .;
    }
    _HAKAdan_room_17SegmentBssSize = ABSOLUTE( _HAKAdan_room_17SegmentBssEnd - _HAKAdan_room_17SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_18SegmentRomStart = _RomSize;
    ..HAKAdan_room_18 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_18SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_18SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_18.o (.text)
        _HAKAdan_room_18SegmentTextEnd = .;
    _HAKAdan_room_18SegmentTextSize = ABSOLUTE( _HAKAdan_room_18SegmentTextEnd - _HAKAdan_room_18SegmentTextStart );
        _HAKAdan_room_18SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_18.o (.data)
        _HAKAdan_room_18SegmentDataEnd = .;
    _HAKAdan_room_18SegmentDataSize = ABSOLUTE( _HAKAdan_room_18SegmentDataEnd - _HAKAdan_room_18SegmentDataStart );
        _HAKAdan_room_18SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_18.o (.rodata)
        _HAKAdan_room_18SegmentRoDataEnd = .;
    _HAKAdan_room_18SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_18SegmentRoDataEnd - _HAKAdan_room_18SegmentRoDataStart );
        _HAKAdan_room_18SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_18.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_18SegmentSDataEnd = .;
        _HAKAdan_room_18SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_18.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_18SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_18SegmentOvlEnd - _HAKAdan_room_18SegmentTextStart );
    _HAKAdan_room_18SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_18.bss ADDR(..HAKAdan_room_18) + SIZEOF(..HAKAdan_room_18) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_18SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_18.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_18.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_18.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_18.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_18SegmentBssEnd = .;
        _HAKAdan_room_18SegmentEnd = .;
    }
    _HAKAdan_room_18SegmentBssSize = ABSOLUTE( _HAKAdan_room_18SegmentBssEnd - _HAKAdan_room_18SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_19SegmentRomStart = _RomSize;
    ..HAKAdan_room_19 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_19SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_19SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_19.o (.text)
        _HAKAdan_room_19SegmentTextEnd = .;
    _HAKAdan_room_19SegmentTextSize = ABSOLUTE( _HAKAdan_room_19SegmentTextEnd - _HAKAdan_room_19SegmentTextStart );
        _HAKAdan_room_19SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_19.o (.data)
        _HAKAdan_room_19SegmentDataEnd = .;
    _HAKAdan_room_19SegmentDataSize = ABSOLUTE( _HAKAdan_room_19SegmentDataEnd - _HAKAdan_room_19SegmentDataStart );
        _HAKAdan_room_19SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_19.o (.rodata)
        _HAKAdan_room_19SegmentRoDataEnd = .;
    _HAKAdan_room_19SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_19SegmentRoDataEnd - _HAKAdan_room_19SegmentRoDataStart );
        _HAKAdan_room_19SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_19.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_19SegmentSDataEnd = .;
        _HAKAdan_room_19SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_19.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_19SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_19SegmentOvlEnd - _HAKAdan_room_19SegmentTextStart );
    _HAKAdan_room_19SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_19.bss ADDR(..HAKAdan_room_19) + SIZEOF(..HAKAdan_room_19) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_19SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_19.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_19.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_19.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_19.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_19SegmentBssEnd = .;
        _HAKAdan_room_19SegmentEnd = .;
    }
    _HAKAdan_room_19SegmentBssSize = ABSOLUTE( _HAKAdan_room_19SegmentBssEnd - _HAKAdan_room_19SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_20SegmentRomStart = _RomSize;
    ..HAKAdan_room_20 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_20SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_20SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_20.o (.text)
        _HAKAdan_room_20SegmentTextEnd = .;
    _HAKAdan_room_20SegmentTextSize = ABSOLUTE( _HAKAdan_room_20SegmentTextEnd - _HAKAdan_room_20SegmentTextStart );
        _HAKAdan_room_20SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_20.o (.data)
        _HAKAdan_room_20SegmentDataEnd = .;
    _HAKAdan_room_20SegmentDataSize = ABSOLUTE( _HAKAdan_room_20SegmentDataEnd - _HAKAdan_room_20SegmentDataStart );
        _HAKAdan_room_20SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_20.o (.rodata)
        _HAKAdan_room_20SegmentRoDataEnd = .;
    _HAKAdan_room_20SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_20SegmentRoDataEnd - _HAKAdan_room_20SegmentRoDataStart );
        _HAKAdan_room_20SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_20.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_20SegmentSDataEnd = .;
        _HAKAdan_room_20SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_20.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_20SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_20SegmentOvlEnd - _HAKAdan_room_20SegmentTextStart );
    _HAKAdan_room_20SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_20.bss ADDR(..HAKAdan_room_20) + SIZEOF(..HAKAdan_room_20) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_20SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_20.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_20.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_20.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_20.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_20SegmentBssEnd = .;
        _HAKAdan_room_20SegmentEnd = .;
    }
    _HAKAdan_room_20SegmentBssSize = ABSOLUTE( _HAKAdan_room_20SegmentBssEnd - _HAKAdan_room_20SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_21SegmentRomStart = _RomSize;
    ..HAKAdan_room_21 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_21SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_21SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_21.o (.text)
        _HAKAdan_room_21SegmentTextEnd = .;
    _HAKAdan_room_21SegmentTextSize = ABSOLUTE( _HAKAdan_room_21SegmentTextEnd - _HAKAdan_room_21SegmentTextStart );
        _HAKAdan_room_21SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_21.o (.data)
        _HAKAdan_room_21SegmentDataEnd = .;
    _HAKAdan_room_21SegmentDataSize = ABSOLUTE( _HAKAdan_room_21SegmentDataEnd - _HAKAdan_room_21SegmentDataStart );
        _HAKAdan_room_21SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_21.o (.rodata)
        _HAKAdan_room_21SegmentRoDataEnd = .;
    _HAKAdan_room_21SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_21SegmentRoDataEnd - _HAKAdan_room_21SegmentRoDataStart );
        _HAKAdan_room_21SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_21.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_21SegmentSDataEnd = .;
        _HAKAdan_room_21SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_21.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_21SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_21SegmentOvlEnd - _HAKAdan_room_21SegmentTextStart );
    _HAKAdan_room_21SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_21.bss ADDR(..HAKAdan_room_21) + SIZEOF(..HAKAdan_room_21) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_21SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_21.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_21.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_21.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_21.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_21SegmentBssEnd = .;
        _HAKAdan_room_21SegmentEnd = .;
    }
    _HAKAdan_room_21SegmentBssSize = ABSOLUTE( _HAKAdan_room_21SegmentBssEnd - _HAKAdan_room_21SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_room_22SegmentRomStart = _RomSize;
    ..HAKAdan_room_22 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_room_22SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_room_22SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_22.o (.text)
        _HAKAdan_room_22SegmentTextEnd = .;
    _HAKAdan_room_22SegmentTextSize = ABSOLUTE( _HAKAdan_room_22SegmentTextEnd - _HAKAdan_room_22SegmentTextStart );
        _HAKAdan_room_22SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_22.o (.data)
        _HAKAdan_room_22SegmentDataEnd = .;
    _HAKAdan_room_22SegmentDataSize = ABSOLUTE( _HAKAdan_room_22SegmentDataEnd - _HAKAdan_room_22SegmentDataStart );
        _HAKAdan_room_22SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_22.o (.rodata)
        _HAKAdan_room_22SegmentRoDataEnd = .;
    _HAKAdan_room_22SegmentRoDataSize = ABSOLUTE( _HAKAdan_room_22SegmentRoDataEnd - _HAKAdan_room_22SegmentRoDataStart );
        _HAKAdan_room_22SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_22.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_room_22SegmentSDataEnd = .;
        _HAKAdan_room_22SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_22.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_room_22SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_room_22SegmentOvlEnd - _HAKAdan_room_22SegmentTextStart );
    _HAKAdan_room_22SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_room_22.bss ADDR(..HAKAdan_room_22) + SIZEOF(..HAKAdan_room_22) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_room_22SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan/HAKAdan_room_22.o (.sbss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_22.o (.scommon)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_22.o (.bss)
            build/scenes/dungeons/HAKAdan/HAKAdan_room_22.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_room_22SegmentBssEnd = .;
        _HAKAdan_room_22SegmentEnd = .;
    }
    _HAKAdan_room_22SegmentBssSize = ABSOLUTE( _HAKAdan_room_22SegmentBssEnd - _HAKAdan_room_22SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdanCH_sceneSegmentRomStart = _RomSize;
    ..HAKAdanCH_scene 0x02000000 : AT(_RomSize)
    {
        _HAKAdanCH_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdanCH_sceneSegmentTextStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_scene.o (.text)
        _HAKAdanCH_sceneSegmentTextEnd = .;
    _HAKAdanCH_sceneSegmentTextSize = ABSOLUTE( _HAKAdanCH_sceneSegmentTextEnd - _HAKAdanCH_sceneSegmentTextStart );
        _HAKAdanCH_sceneSegmentDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_scene.o (.data)
        _HAKAdanCH_sceneSegmentDataEnd = .;
    _HAKAdanCH_sceneSegmentDataSize = ABSOLUTE( _HAKAdanCH_sceneSegmentDataEnd - _HAKAdanCH_sceneSegmentDataStart );
        _HAKAdanCH_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_scene.o (.rodata)
        _HAKAdanCH_sceneSegmentRoDataEnd = .;
    _HAKAdanCH_sceneSegmentRoDataSize = ABSOLUTE( _HAKAdanCH_sceneSegmentRoDataEnd - _HAKAdanCH_sceneSegmentRoDataStart );
        _HAKAdanCH_sceneSegmentSDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_scene.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdanCH_sceneSegmentSDataEnd = .;
        _HAKAdanCH_sceneSegmentOvlStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_scene.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdanCH_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdanCH_sceneSegmentOvlEnd - _HAKAdanCH_sceneSegmentTextStart );
    _HAKAdanCH_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdanCH_scene.bss ADDR(..HAKAdanCH_scene) + SIZEOF(..HAKAdanCH_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdanCH_sceneSegmentBssStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_scene.o (.sbss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_scene.o (.scommon)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_scene.o (.bss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_scene.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdanCH_sceneSegmentBssEnd = .;
        _HAKAdanCH_sceneSegmentEnd = .;
    }
    _HAKAdanCH_sceneSegmentBssSize = ABSOLUTE( _HAKAdanCH_sceneSegmentBssEnd - _HAKAdanCH_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdanCH_room_0SegmentRomStart = _RomSize;
    ..HAKAdanCH_room_0 0x03000000 : AT(_RomSize)
    {
        _HAKAdanCH_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdanCH_room_0SegmentTextStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_0.o (.text)
        _HAKAdanCH_room_0SegmentTextEnd = .;
    _HAKAdanCH_room_0SegmentTextSize = ABSOLUTE( _HAKAdanCH_room_0SegmentTextEnd - _HAKAdanCH_room_0SegmentTextStart );
        _HAKAdanCH_room_0SegmentDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_0.o (.data)
        _HAKAdanCH_room_0SegmentDataEnd = .;
    _HAKAdanCH_room_0SegmentDataSize = ABSOLUTE( _HAKAdanCH_room_0SegmentDataEnd - _HAKAdanCH_room_0SegmentDataStart );
        _HAKAdanCH_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_0.o (.rodata)
        _HAKAdanCH_room_0SegmentRoDataEnd = .;
    _HAKAdanCH_room_0SegmentRoDataSize = ABSOLUTE( _HAKAdanCH_room_0SegmentRoDataEnd - _HAKAdanCH_room_0SegmentRoDataStart );
        _HAKAdanCH_room_0SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_0.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdanCH_room_0SegmentSDataEnd = .;
        _HAKAdanCH_room_0SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_0.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdanCH_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdanCH_room_0SegmentOvlEnd - _HAKAdanCH_room_0SegmentTextStart );
    _HAKAdanCH_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdanCH_room_0.bss ADDR(..HAKAdanCH_room_0) + SIZEOF(..HAKAdanCH_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdanCH_room_0SegmentBssStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_0.o (.sbss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_0.o (.scommon)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_0.o (.bss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_0.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdanCH_room_0SegmentBssEnd = .;
        _HAKAdanCH_room_0SegmentEnd = .;
    }
    _HAKAdanCH_room_0SegmentBssSize = ABSOLUTE( _HAKAdanCH_room_0SegmentBssEnd - _HAKAdanCH_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdanCH_room_1SegmentRomStart = _RomSize;
    ..HAKAdanCH_room_1 0x03000000 : AT(_RomSize)
    {
        _HAKAdanCH_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdanCH_room_1SegmentTextStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_1.o (.text)
        _HAKAdanCH_room_1SegmentTextEnd = .;
    _HAKAdanCH_room_1SegmentTextSize = ABSOLUTE( _HAKAdanCH_room_1SegmentTextEnd - _HAKAdanCH_room_1SegmentTextStart );
        _HAKAdanCH_room_1SegmentDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_1.o (.data)
        _HAKAdanCH_room_1SegmentDataEnd = .;
    _HAKAdanCH_room_1SegmentDataSize = ABSOLUTE( _HAKAdanCH_room_1SegmentDataEnd - _HAKAdanCH_room_1SegmentDataStart );
        _HAKAdanCH_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_1.o (.rodata)
        _HAKAdanCH_room_1SegmentRoDataEnd = .;
    _HAKAdanCH_room_1SegmentRoDataSize = ABSOLUTE( _HAKAdanCH_room_1SegmentRoDataEnd - _HAKAdanCH_room_1SegmentRoDataStart );
        _HAKAdanCH_room_1SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_1.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdanCH_room_1SegmentSDataEnd = .;
        _HAKAdanCH_room_1SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_1.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdanCH_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdanCH_room_1SegmentOvlEnd - _HAKAdanCH_room_1SegmentTextStart );
    _HAKAdanCH_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdanCH_room_1.bss ADDR(..HAKAdanCH_room_1) + SIZEOF(..HAKAdanCH_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdanCH_room_1SegmentBssStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_1.o (.sbss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_1.o (.scommon)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_1.o (.bss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_1.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdanCH_room_1SegmentBssEnd = .;
        _HAKAdanCH_room_1SegmentEnd = .;
    }
    _HAKAdanCH_room_1SegmentBssSize = ABSOLUTE( _HAKAdanCH_room_1SegmentBssEnd - _HAKAdanCH_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdanCH_room_2SegmentRomStart = _RomSize;
    ..HAKAdanCH_room_2 0x03000000 : AT(_RomSize)
    {
        _HAKAdanCH_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdanCH_room_2SegmentTextStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_2.o (.text)
        _HAKAdanCH_room_2SegmentTextEnd = .;
    _HAKAdanCH_room_2SegmentTextSize = ABSOLUTE( _HAKAdanCH_room_2SegmentTextEnd - _HAKAdanCH_room_2SegmentTextStart );
        _HAKAdanCH_room_2SegmentDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_2.o (.data)
        _HAKAdanCH_room_2SegmentDataEnd = .;
    _HAKAdanCH_room_2SegmentDataSize = ABSOLUTE( _HAKAdanCH_room_2SegmentDataEnd - _HAKAdanCH_room_2SegmentDataStart );
        _HAKAdanCH_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_2.o (.rodata)
        _HAKAdanCH_room_2SegmentRoDataEnd = .;
    _HAKAdanCH_room_2SegmentRoDataSize = ABSOLUTE( _HAKAdanCH_room_2SegmentRoDataEnd - _HAKAdanCH_room_2SegmentRoDataStart );
        _HAKAdanCH_room_2SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_2.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdanCH_room_2SegmentSDataEnd = .;
        _HAKAdanCH_room_2SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_2.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdanCH_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdanCH_room_2SegmentOvlEnd - _HAKAdanCH_room_2SegmentTextStart );
    _HAKAdanCH_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdanCH_room_2.bss ADDR(..HAKAdanCH_room_2) + SIZEOF(..HAKAdanCH_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdanCH_room_2SegmentBssStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_2.o (.sbss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_2.o (.scommon)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_2.o (.bss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_2.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdanCH_room_2SegmentBssEnd = .;
        _HAKAdanCH_room_2SegmentEnd = .;
    }
    _HAKAdanCH_room_2SegmentBssSize = ABSOLUTE( _HAKAdanCH_room_2SegmentBssEnd - _HAKAdanCH_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdanCH_room_3SegmentRomStart = _RomSize;
    ..HAKAdanCH_room_3 0x03000000 : AT(_RomSize)
    {
        _HAKAdanCH_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdanCH_room_3SegmentTextStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_3.o (.text)
        _HAKAdanCH_room_3SegmentTextEnd = .;
    _HAKAdanCH_room_3SegmentTextSize = ABSOLUTE( _HAKAdanCH_room_3SegmentTextEnd - _HAKAdanCH_room_3SegmentTextStart );
        _HAKAdanCH_room_3SegmentDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_3.o (.data)
        _HAKAdanCH_room_3SegmentDataEnd = .;
    _HAKAdanCH_room_3SegmentDataSize = ABSOLUTE( _HAKAdanCH_room_3SegmentDataEnd - _HAKAdanCH_room_3SegmentDataStart );
        _HAKAdanCH_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_3.o (.rodata)
        _HAKAdanCH_room_3SegmentRoDataEnd = .;
    _HAKAdanCH_room_3SegmentRoDataSize = ABSOLUTE( _HAKAdanCH_room_3SegmentRoDataEnd - _HAKAdanCH_room_3SegmentRoDataStart );
        _HAKAdanCH_room_3SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_3.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdanCH_room_3SegmentSDataEnd = .;
        _HAKAdanCH_room_3SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_3.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdanCH_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdanCH_room_3SegmentOvlEnd - _HAKAdanCH_room_3SegmentTextStart );
    _HAKAdanCH_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdanCH_room_3.bss ADDR(..HAKAdanCH_room_3) + SIZEOF(..HAKAdanCH_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdanCH_room_3SegmentBssStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_3.o (.sbss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_3.o (.scommon)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_3.o (.bss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_3.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdanCH_room_3SegmentBssEnd = .;
        _HAKAdanCH_room_3SegmentEnd = .;
    }
    _HAKAdanCH_room_3SegmentBssSize = ABSOLUTE( _HAKAdanCH_room_3SegmentBssEnd - _HAKAdanCH_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdanCH_room_4SegmentRomStart = _RomSize;
    ..HAKAdanCH_room_4 0x03000000 : AT(_RomSize)
    {
        _HAKAdanCH_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdanCH_room_4SegmentTextStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_4.o (.text)
        _HAKAdanCH_room_4SegmentTextEnd = .;
    _HAKAdanCH_room_4SegmentTextSize = ABSOLUTE( _HAKAdanCH_room_4SegmentTextEnd - _HAKAdanCH_room_4SegmentTextStart );
        _HAKAdanCH_room_4SegmentDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_4.o (.data)
        _HAKAdanCH_room_4SegmentDataEnd = .;
    _HAKAdanCH_room_4SegmentDataSize = ABSOLUTE( _HAKAdanCH_room_4SegmentDataEnd - _HAKAdanCH_room_4SegmentDataStart );
        _HAKAdanCH_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_4.o (.rodata)
        _HAKAdanCH_room_4SegmentRoDataEnd = .;
    _HAKAdanCH_room_4SegmentRoDataSize = ABSOLUTE( _HAKAdanCH_room_4SegmentRoDataEnd - _HAKAdanCH_room_4SegmentRoDataStart );
        _HAKAdanCH_room_4SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_4.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdanCH_room_4SegmentSDataEnd = .;
        _HAKAdanCH_room_4SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_4.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdanCH_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdanCH_room_4SegmentOvlEnd - _HAKAdanCH_room_4SegmentTextStart );
    _HAKAdanCH_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdanCH_room_4.bss ADDR(..HAKAdanCH_room_4) + SIZEOF(..HAKAdanCH_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdanCH_room_4SegmentBssStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_4.o (.sbss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_4.o (.scommon)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_4.o (.bss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_4.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdanCH_room_4SegmentBssEnd = .;
        _HAKAdanCH_room_4SegmentEnd = .;
    }
    _HAKAdanCH_room_4SegmentBssSize = ABSOLUTE( _HAKAdanCH_room_4SegmentBssEnd - _HAKAdanCH_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdanCH_room_5SegmentRomStart = _RomSize;
    ..HAKAdanCH_room_5 0x03000000 : AT(_RomSize)
    {
        _HAKAdanCH_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdanCH_room_5SegmentTextStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_5.o (.text)
        _HAKAdanCH_room_5SegmentTextEnd = .;
    _HAKAdanCH_room_5SegmentTextSize = ABSOLUTE( _HAKAdanCH_room_5SegmentTextEnd - _HAKAdanCH_room_5SegmentTextStart );
        _HAKAdanCH_room_5SegmentDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_5.o (.data)
        _HAKAdanCH_room_5SegmentDataEnd = .;
    _HAKAdanCH_room_5SegmentDataSize = ABSOLUTE( _HAKAdanCH_room_5SegmentDataEnd - _HAKAdanCH_room_5SegmentDataStart );
        _HAKAdanCH_room_5SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_5.o (.rodata)
        _HAKAdanCH_room_5SegmentRoDataEnd = .;
    _HAKAdanCH_room_5SegmentRoDataSize = ABSOLUTE( _HAKAdanCH_room_5SegmentRoDataEnd - _HAKAdanCH_room_5SegmentRoDataStart );
        _HAKAdanCH_room_5SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_5.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdanCH_room_5SegmentSDataEnd = .;
        _HAKAdanCH_room_5SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_5.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdanCH_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdanCH_room_5SegmentOvlEnd - _HAKAdanCH_room_5SegmentTextStart );
    _HAKAdanCH_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdanCH_room_5.bss ADDR(..HAKAdanCH_room_5) + SIZEOF(..HAKAdanCH_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdanCH_room_5SegmentBssStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_5.o (.sbss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_5.o (.scommon)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_5.o (.bss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_5.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdanCH_room_5SegmentBssEnd = .;
        _HAKAdanCH_room_5SegmentEnd = .;
    }
    _HAKAdanCH_room_5SegmentBssSize = ABSOLUTE( _HAKAdanCH_room_5SegmentBssEnd - _HAKAdanCH_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdanCH_room_6SegmentRomStart = _RomSize;
    ..HAKAdanCH_room_6 0x03000000 : AT(_RomSize)
    {
        _HAKAdanCH_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdanCH_room_6SegmentTextStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_6.o (.text)
        _HAKAdanCH_room_6SegmentTextEnd = .;
    _HAKAdanCH_room_6SegmentTextSize = ABSOLUTE( _HAKAdanCH_room_6SegmentTextEnd - _HAKAdanCH_room_6SegmentTextStart );
        _HAKAdanCH_room_6SegmentDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_6.o (.data)
        _HAKAdanCH_room_6SegmentDataEnd = .;
    _HAKAdanCH_room_6SegmentDataSize = ABSOLUTE( _HAKAdanCH_room_6SegmentDataEnd - _HAKAdanCH_room_6SegmentDataStart );
        _HAKAdanCH_room_6SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_6.o (.rodata)
        _HAKAdanCH_room_6SegmentRoDataEnd = .;
    _HAKAdanCH_room_6SegmentRoDataSize = ABSOLUTE( _HAKAdanCH_room_6SegmentRoDataEnd - _HAKAdanCH_room_6SegmentRoDataStart );
        _HAKAdanCH_room_6SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_6.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdanCH_room_6SegmentSDataEnd = .;
        _HAKAdanCH_room_6SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_6.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdanCH_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdanCH_room_6SegmentOvlEnd - _HAKAdanCH_room_6SegmentTextStart );
    _HAKAdanCH_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdanCH_room_6.bss ADDR(..HAKAdanCH_room_6) + SIZEOF(..HAKAdanCH_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdanCH_room_6SegmentBssStart = .;
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_6.o (.sbss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_6.o (.scommon)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_6.o (.bss)
            build/scenes/dungeons/HAKAdanCH/HAKAdanCH_room_6.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdanCH_room_6SegmentBssEnd = .;
        _HAKAdanCH_room_6SegmentEnd = .;
    }
    _HAKAdanCH_room_6SegmentBssSize = ABSOLUTE( _HAKAdanCH_room_6SegmentBssEnd - _HAKAdanCH_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ice_doukutu_sceneSegmentRomStart = _RomSize;
    ..ice_doukutu_scene 0x02000000 : AT(_RomSize)
    {
        _ice_doukutu_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _ice_doukutu_sceneSegmentTextStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_scene.o (.text)
        _ice_doukutu_sceneSegmentTextEnd = .;
    _ice_doukutu_sceneSegmentTextSize = ABSOLUTE( _ice_doukutu_sceneSegmentTextEnd - _ice_doukutu_sceneSegmentTextStart );
        _ice_doukutu_sceneSegmentDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_scene.o (.data)
        _ice_doukutu_sceneSegmentDataEnd = .;
    _ice_doukutu_sceneSegmentDataSize = ABSOLUTE( _ice_doukutu_sceneSegmentDataEnd - _ice_doukutu_sceneSegmentDataStart );
        _ice_doukutu_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_scene.o (.rodata)
        _ice_doukutu_sceneSegmentRoDataEnd = .;
    _ice_doukutu_sceneSegmentRoDataSize = ABSOLUTE( _ice_doukutu_sceneSegmentRoDataEnd - _ice_doukutu_sceneSegmentRoDataStart );
        _ice_doukutu_sceneSegmentSDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_scene.o (.sdata)
        . = ALIGN(0x10);
        _ice_doukutu_sceneSegmentSDataEnd = .;
        _ice_doukutu_sceneSegmentOvlStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_scene.o (.ovl)
        . = ALIGN(0x10);
        _ice_doukutu_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _ice_doukutu_sceneSegmentOvlEnd - _ice_doukutu_sceneSegmentTextStart );
    _ice_doukutu_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ice_doukutu_scene.bss ADDR(..ice_doukutu_scene) + SIZEOF(..ice_doukutu_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ice_doukutu_sceneSegmentBssStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_scene.o (.sbss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_scene.o (.scommon)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_scene.o (.bss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_scene.o (COMMON)
        . = ALIGN(0x10);
        _ice_doukutu_sceneSegmentBssEnd = .;
        _ice_doukutu_sceneSegmentEnd = .;
    }
    _ice_doukutu_sceneSegmentBssSize = ABSOLUTE( _ice_doukutu_sceneSegmentBssEnd - _ice_doukutu_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ice_doukutu_room_0SegmentRomStart = _RomSize;
    ..ice_doukutu_room_0 0x03000000 : AT(_RomSize)
    {
        _ice_doukutu_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _ice_doukutu_room_0SegmentTextStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_0.o (.text)
        _ice_doukutu_room_0SegmentTextEnd = .;
    _ice_doukutu_room_0SegmentTextSize = ABSOLUTE( _ice_doukutu_room_0SegmentTextEnd - _ice_doukutu_room_0SegmentTextStart );
        _ice_doukutu_room_0SegmentDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_0.o (.data)
        _ice_doukutu_room_0SegmentDataEnd = .;
    _ice_doukutu_room_0SegmentDataSize = ABSOLUTE( _ice_doukutu_room_0SegmentDataEnd - _ice_doukutu_room_0SegmentDataStart );
        _ice_doukutu_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_0.o (.rodata)
        _ice_doukutu_room_0SegmentRoDataEnd = .;
    _ice_doukutu_room_0SegmentRoDataSize = ABSOLUTE( _ice_doukutu_room_0SegmentRoDataEnd - _ice_doukutu_room_0SegmentRoDataStart );
        _ice_doukutu_room_0SegmentSDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_0.o (.sdata)
        . = ALIGN(0x10);
        _ice_doukutu_room_0SegmentSDataEnd = .;
        _ice_doukutu_room_0SegmentOvlStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_0.o (.ovl)
        . = ALIGN(0x10);
        _ice_doukutu_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _ice_doukutu_room_0SegmentOvlEnd - _ice_doukutu_room_0SegmentTextStart );
    _ice_doukutu_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ice_doukutu_room_0.bss ADDR(..ice_doukutu_room_0) + SIZEOF(..ice_doukutu_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ice_doukutu_room_0SegmentBssStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_0.o (.sbss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_0.o (.scommon)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_0.o (.bss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_0.o (COMMON)
        . = ALIGN(0x10);
        _ice_doukutu_room_0SegmentBssEnd = .;
        _ice_doukutu_room_0SegmentEnd = .;
    }
    _ice_doukutu_room_0SegmentBssSize = ABSOLUTE( _ice_doukutu_room_0SegmentBssEnd - _ice_doukutu_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ice_doukutu_room_1SegmentRomStart = _RomSize;
    ..ice_doukutu_room_1 0x03000000 : AT(_RomSize)
    {
        _ice_doukutu_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _ice_doukutu_room_1SegmentTextStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_1.o (.text)
        _ice_doukutu_room_1SegmentTextEnd = .;
    _ice_doukutu_room_1SegmentTextSize = ABSOLUTE( _ice_doukutu_room_1SegmentTextEnd - _ice_doukutu_room_1SegmentTextStart );
        _ice_doukutu_room_1SegmentDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_1.o (.data)
        _ice_doukutu_room_1SegmentDataEnd = .;
    _ice_doukutu_room_1SegmentDataSize = ABSOLUTE( _ice_doukutu_room_1SegmentDataEnd - _ice_doukutu_room_1SegmentDataStart );
        _ice_doukutu_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_1.o (.rodata)
        _ice_doukutu_room_1SegmentRoDataEnd = .;
    _ice_doukutu_room_1SegmentRoDataSize = ABSOLUTE( _ice_doukutu_room_1SegmentRoDataEnd - _ice_doukutu_room_1SegmentRoDataStart );
        _ice_doukutu_room_1SegmentSDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_1.o (.sdata)
        . = ALIGN(0x10);
        _ice_doukutu_room_1SegmentSDataEnd = .;
        _ice_doukutu_room_1SegmentOvlStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_1.o (.ovl)
        . = ALIGN(0x10);
        _ice_doukutu_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _ice_doukutu_room_1SegmentOvlEnd - _ice_doukutu_room_1SegmentTextStart );
    _ice_doukutu_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ice_doukutu_room_1.bss ADDR(..ice_doukutu_room_1) + SIZEOF(..ice_doukutu_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ice_doukutu_room_1SegmentBssStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_1.o (.sbss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_1.o (.scommon)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_1.o (.bss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_1.o (COMMON)
        . = ALIGN(0x10);
        _ice_doukutu_room_1SegmentBssEnd = .;
        _ice_doukutu_room_1SegmentEnd = .;
    }
    _ice_doukutu_room_1SegmentBssSize = ABSOLUTE( _ice_doukutu_room_1SegmentBssEnd - _ice_doukutu_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ice_doukutu_room_2SegmentRomStart = _RomSize;
    ..ice_doukutu_room_2 0x03000000 : AT(_RomSize)
    {
        _ice_doukutu_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _ice_doukutu_room_2SegmentTextStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_2.o (.text)
        _ice_doukutu_room_2SegmentTextEnd = .;
    _ice_doukutu_room_2SegmentTextSize = ABSOLUTE( _ice_doukutu_room_2SegmentTextEnd - _ice_doukutu_room_2SegmentTextStart );
        _ice_doukutu_room_2SegmentDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_2.o (.data)
        _ice_doukutu_room_2SegmentDataEnd = .;
    _ice_doukutu_room_2SegmentDataSize = ABSOLUTE( _ice_doukutu_room_2SegmentDataEnd - _ice_doukutu_room_2SegmentDataStart );
        _ice_doukutu_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_2.o (.rodata)
        _ice_doukutu_room_2SegmentRoDataEnd = .;
    _ice_doukutu_room_2SegmentRoDataSize = ABSOLUTE( _ice_doukutu_room_2SegmentRoDataEnd - _ice_doukutu_room_2SegmentRoDataStart );
        _ice_doukutu_room_2SegmentSDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_2.o (.sdata)
        . = ALIGN(0x10);
        _ice_doukutu_room_2SegmentSDataEnd = .;
        _ice_doukutu_room_2SegmentOvlStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_2.o (.ovl)
        . = ALIGN(0x10);
        _ice_doukutu_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _ice_doukutu_room_2SegmentOvlEnd - _ice_doukutu_room_2SegmentTextStart );
    _ice_doukutu_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ice_doukutu_room_2.bss ADDR(..ice_doukutu_room_2) + SIZEOF(..ice_doukutu_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ice_doukutu_room_2SegmentBssStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_2.o (.sbss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_2.o (.scommon)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_2.o (.bss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_2.o (COMMON)
        . = ALIGN(0x10);
        _ice_doukutu_room_2SegmentBssEnd = .;
        _ice_doukutu_room_2SegmentEnd = .;
    }
    _ice_doukutu_room_2SegmentBssSize = ABSOLUTE( _ice_doukutu_room_2SegmentBssEnd - _ice_doukutu_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ice_doukutu_room_3SegmentRomStart = _RomSize;
    ..ice_doukutu_room_3 0x03000000 : AT(_RomSize)
    {
        _ice_doukutu_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _ice_doukutu_room_3SegmentTextStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_3.o (.text)
        _ice_doukutu_room_3SegmentTextEnd = .;
    _ice_doukutu_room_3SegmentTextSize = ABSOLUTE( _ice_doukutu_room_3SegmentTextEnd - _ice_doukutu_room_3SegmentTextStart );
        _ice_doukutu_room_3SegmentDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_3.o (.data)
        _ice_doukutu_room_3SegmentDataEnd = .;
    _ice_doukutu_room_3SegmentDataSize = ABSOLUTE( _ice_doukutu_room_3SegmentDataEnd - _ice_doukutu_room_3SegmentDataStart );
        _ice_doukutu_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_3.o (.rodata)
        _ice_doukutu_room_3SegmentRoDataEnd = .;
    _ice_doukutu_room_3SegmentRoDataSize = ABSOLUTE( _ice_doukutu_room_3SegmentRoDataEnd - _ice_doukutu_room_3SegmentRoDataStart );
        _ice_doukutu_room_3SegmentSDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_3.o (.sdata)
        . = ALIGN(0x10);
        _ice_doukutu_room_3SegmentSDataEnd = .;
        _ice_doukutu_room_3SegmentOvlStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_3.o (.ovl)
        . = ALIGN(0x10);
        _ice_doukutu_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _ice_doukutu_room_3SegmentOvlEnd - _ice_doukutu_room_3SegmentTextStart );
    _ice_doukutu_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ice_doukutu_room_3.bss ADDR(..ice_doukutu_room_3) + SIZEOF(..ice_doukutu_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ice_doukutu_room_3SegmentBssStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_3.o (.sbss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_3.o (.scommon)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_3.o (.bss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_3.o (COMMON)
        . = ALIGN(0x10);
        _ice_doukutu_room_3SegmentBssEnd = .;
        _ice_doukutu_room_3SegmentEnd = .;
    }
    _ice_doukutu_room_3SegmentBssSize = ABSOLUTE( _ice_doukutu_room_3SegmentBssEnd - _ice_doukutu_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ice_doukutu_room_4SegmentRomStart = _RomSize;
    ..ice_doukutu_room_4 0x03000000 : AT(_RomSize)
    {
        _ice_doukutu_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _ice_doukutu_room_4SegmentTextStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_4.o (.text)
        _ice_doukutu_room_4SegmentTextEnd = .;
    _ice_doukutu_room_4SegmentTextSize = ABSOLUTE( _ice_doukutu_room_4SegmentTextEnd - _ice_doukutu_room_4SegmentTextStart );
        _ice_doukutu_room_4SegmentDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_4.o (.data)
        _ice_doukutu_room_4SegmentDataEnd = .;
    _ice_doukutu_room_4SegmentDataSize = ABSOLUTE( _ice_doukutu_room_4SegmentDataEnd - _ice_doukutu_room_4SegmentDataStart );
        _ice_doukutu_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_4.o (.rodata)
        _ice_doukutu_room_4SegmentRoDataEnd = .;
    _ice_doukutu_room_4SegmentRoDataSize = ABSOLUTE( _ice_doukutu_room_4SegmentRoDataEnd - _ice_doukutu_room_4SegmentRoDataStart );
        _ice_doukutu_room_4SegmentSDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_4.o (.sdata)
        . = ALIGN(0x10);
        _ice_doukutu_room_4SegmentSDataEnd = .;
        _ice_doukutu_room_4SegmentOvlStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_4.o (.ovl)
        . = ALIGN(0x10);
        _ice_doukutu_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _ice_doukutu_room_4SegmentOvlEnd - _ice_doukutu_room_4SegmentTextStart );
    _ice_doukutu_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ice_doukutu_room_4.bss ADDR(..ice_doukutu_room_4) + SIZEOF(..ice_doukutu_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ice_doukutu_room_4SegmentBssStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_4.o (.sbss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_4.o (.scommon)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_4.o (.bss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_4.o (COMMON)
        . = ALIGN(0x10);
        _ice_doukutu_room_4SegmentBssEnd = .;
        _ice_doukutu_room_4SegmentEnd = .;
    }
    _ice_doukutu_room_4SegmentBssSize = ABSOLUTE( _ice_doukutu_room_4SegmentBssEnd - _ice_doukutu_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ice_doukutu_room_5SegmentRomStart = _RomSize;
    ..ice_doukutu_room_5 0x03000000 : AT(_RomSize)
    {
        _ice_doukutu_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _ice_doukutu_room_5SegmentTextStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_5.o (.text)
        _ice_doukutu_room_5SegmentTextEnd = .;
    _ice_doukutu_room_5SegmentTextSize = ABSOLUTE( _ice_doukutu_room_5SegmentTextEnd - _ice_doukutu_room_5SegmentTextStart );
        _ice_doukutu_room_5SegmentDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_5.o (.data)
        _ice_doukutu_room_5SegmentDataEnd = .;
    _ice_doukutu_room_5SegmentDataSize = ABSOLUTE( _ice_doukutu_room_5SegmentDataEnd - _ice_doukutu_room_5SegmentDataStart );
        _ice_doukutu_room_5SegmentRoDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_5.o (.rodata)
        _ice_doukutu_room_5SegmentRoDataEnd = .;
    _ice_doukutu_room_5SegmentRoDataSize = ABSOLUTE( _ice_doukutu_room_5SegmentRoDataEnd - _ice_doukutu_room_5SegmentRoDataStart );
        _ice_doukutu_room_5SegmentSDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_5.o (.sdata)
        . = ALIGN(0x10);
        _ice_doukutu_room_5SegmentSDataEnd = .;
        _ice_doukutu_room_5SegmentOvlStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_5.o (.ovl)
        . = ALIGN(0x10);
        _ice_doukutu_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _ice_doukutu_room_5SegmentOvlEnd - _ice_doukutu_room_5SegmentTextStart );
    _ice_doukutu_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ice_doukutu_room_5.bss ADDR(..ice_doukutu_room_5) + SIZEOF(..ice_doukutu_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ice_doukutu_room_5SegmentBssStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_5.o (.sbss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_5.o (.scommon)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_5.o (.bss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_5.o (COMMON)
        . = ALIGN(0x10);
        _ice_doukutu_room_5SegmentBssEnd = .;
        _ice_doukutu_room_5SegmentEnd = .;
    }
    _ice_doukutu_room_5SegmentBssSize = ABSOLUTE( _ice_doukutu_room_5SegmentBssEnd - _ice_doukutu_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ice_doukutu_room_6SegmentRomStart = _RomSize;
    ..ice_doukutu_room_6 0x03000000 : AT(_RomSize)
    {
        _ice_doukutu_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _ice_doukutu_room_6SegmentTextStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_6.o (.text)
        _ice_doukutu_room_6SegmentTextEnd = .;
    _ice_doukutu_room_6SegmentTextSize = ABSOLUTE( _ice_doukutu_room_6SegmentTextEnd - _ice_doukutu_room_6SegmentTextStart );
        _ice_doukutu_room_6SegmentDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_6.o (.data)
        _ice_doukutu_room_6SegmentDataEnd = .;
    _ice_doukutu_room_6SegmentDataSize = ABSOLUTE( _ice_doukutu_room_6SegmentDataEnd - _ice_doukutu_room_6SegmentDataStart );
        _ice_doukutu_room_6SegmentRoDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_6.o (.rodata)
        _ice_doukutu_room_6SegmentRoDataEnd = .;
    _ice_doukutu_room_6SegmentRoDataSize = ABSOLUTE( _ice_doukutu_room_6SegmentRoDataEnd - _ice_doukutu_room_6SegmentRoDataStart );
        _ice_doukutu_room_6SegmentSDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_6.o (.sdata)
        . = ALIGN(0x10);
        _ice_doukutu_room_6SegmentSDataEnd = .;
        _ice_doukutu_room_6SegmentOvlStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_6.o (.ovl)
        . = ALIGN(0x10);
        _ice_doukutu_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _ice_doukutu_room_6SegmentOvlEnd - _ice_doukutu_room_6SegmentTextStart );
    _ice_doukutu_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ice_doukutu_room_6.bss ADDR(..ice_doukutu_room_6) + SIZEOF(..ice_doukutu_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ice_doukutu_room_6SegmentBssStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_6.o (.sbss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_6.o (.scommon)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_6.o (.bss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_6.o (COMMON)
        . = ALIGN(0x10);
        _ice_doukutu_room_6SegmentBssEnd = .;
        _ice_doukutu_room_6SegmentEnd = .;
    }
    _ice_doukutu_room_6SegmentBssSize = ABSOLUTE( _ice_doukutu_room_6SegmentBssEnd - _ice_doukutu_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ice_doukutu_room_7SegmentRomStart = _RomSize;
    ..ice_doukutu_room_7 0x03000000 : AT(_RomSize)
    {
        _ice_doukutu_room_7SegmentStart = .;
        . = ALIGN(0x10);
        _ice_doukutu_room_7SegmentTextStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_7.o (.text)
        _ice_doukutu_room_7SegmentTextEnd = .;
    _ice_doukutu_room_7SegmentTextSize = ABSOLUTE( _ice_doukutu_room_7SegmentTextEnd - _ice_doukutu_room_7SegmentTextStart );
        _ice_doukutu_room_7SegmentDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_7.o (.data)
        _ice_doukutu_room_7SegmentDataEnd = .;
    _ice_doukutu_room_7SegmentDataSize = ABSOLUTE( _ice_doukutu_room_7SegmentDataEnd - _ice_doukutu_room_7SegmentDataStart );
        _ice_doukutu_room_7SegmentRoDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_7.o (.rodata)
        _ice_doukutu_room_7SegmentRoDataEnd = .;
    _ice_doukutu_room_7SegmentRoDataSize = ABSOLUTE( _ice_doukutu_room_7SegmentRoDataEnd - _ice_doukutu_room_7SegmentRoDataStart );
        _ice_doukutu_room_7SegmentSDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_7.o (.sdata)
        . = ALIGN(0x10);
        _ice_doukutu_room_7SegmentSDataEnd = .;
        _ice_doukutu_room_7SegmentOvlStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_7.o (.ovl)
        . = ALIGN(0x10);
        _ice_doukutu_room_7SegmentOvlEnd = .;
    }
    _RomSize += ( _ice_doukutu_room_7SegmentOvlEnd - _ice_doukutu_room_7SegmentTextStart );
    _ice_doukutu_room_7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ice_doukutu_room_7.bss ADDR(..ice_doukutu_room_7) + SIZEOF(..ice_doukutu_room_7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ice_doukutu_room_7SegmentBssStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_7.o (.sbss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_7.o (.scommon)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_7.o (.bss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_7.o (COMMON)
        . = ALIGN(0x10);
        _ice_doukutu_room_7SegmentBssEnd = .;
        _ice_doukutu_room_7SegmentEnd = .;
    }
    _ice_doukutu_room_7SegmentBssSize = ABSOLUTE( _ice_doukutu_room_7SegmentBssEnd - _ice_doukutu_room_7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ice_doukutu_room_8SegmentRomStart = _RomSize;
    ..ice_doukutu_room_8 0x03000000 : AT(_RomSize)
    {
        _ice_doukutu_room_8SegmentStart = .;
        . = ALIGN(0x10);
        _ice_doukutu_room_8SegmentTextStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_8.o (.text)
        _ice_doukutu_room_8SegmentTextEnd = .;
    _ice_doukutu_room_8SegmentTextSize = ABSOLUTE( _ice_doukutu_room_8SegmentTextEnd - _ice_doukutu_room_8SegmentTextStart );
        _ice_doukutu_room_8SegmentDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_8.o (.data)
        _ice_doukutu_room_8SegmentDataEnd = .;
    _ice_doukutu_room_8SegmentDataSize = ABSOLUTE( _ice_doukutu_room_8SegmentDataEnd - _ice_doukutu_room_8SegmentDataStart );
        _ice_doukutu_room_8SegmentRoDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_8.o (.rodata)
        _ice_doukutu_room_8SegmentRoDataEnd = .;
    _ice_doukutu_room_8SegmentRoDataSize = ABSOLUTE( _ice_doukutu_room_8SegmentRoDataEnd - _ice_doukutu_room_8SegmentRoDataStart );
        _ice_doukutu_room_8SegmentSDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_8.o (.sdata)
        . = ALIGN(0x10);
        _ice_doukutu_room_8SegmentSDataEnd = .;
        _ice_doukutu_room_8SegmentOvlStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_8.o (.ovl)
        . = ALIGN(0x10);
        _ice_doukutu_room_8SegmentOvlEnd = .;
    }
    _RomSize += ( _ice_doukutu_room_8SegmentOvlEnd - _ice_doukutu_room_8SegmentTextStart );
    _ice_doukutu_room_8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ice_doukutu_room_8.bss ADDR(..ice_doukutu_room_8) + SIZEOF(..ice_doukutu_room_8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ice_doukutu_room_8SegmentBssStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_8.o (.sbss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_8.o (.scommon)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_8.o (.bss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_8.o (COMMON)
        . = ALIGN(0x10);
        _ice_doukutu_room_8SegmentBssEnd = .;
        _ice_doukutu_room_8SegmentEnd = .;
    }
    _ice_doukutu_room_8SegmentBssSize = ABSOLUTE( _ice_doukutu_room_8SegmentBssEnd - _ice_doukutu_room_8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ice_doukutu_room_9SegmentRomStart = _RomSize;
    ..ice_doukutu_room_9 0x03000000 : AT(_RomSize)
    {
        _ice_doukutu_room_9SegmentStart = .;
        . = ALIGN(0x10);
        _ice_doukutu_room_9SegmentTextStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_9.o (.text)
        _ice_doukutu_room_9SegmentTextEnd = .;
    _ice_doukutu_room_9SegmentTextSize = ABSOLUTE( _ice_doukutu_room_9SegmentTextEnd - _ice_doukutu_room_9SegmentTextStart );
        _ice_doukutu_room_9SegmentDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_9.o (.data)
        _ice_doukutu_room_9SegmentDataEnd = .;
    _ice_doukutu_room_9SegmentDataSize = ABSOLUTE( _ice_doukutu_room_9SegmentDataEnd - _ice_doukutu_room_9SegmentDataStart );
        _ice_doukutu_room_9SegmentRoDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_9.o (.rodata)
        _ice_doukutu_room_9SegmentRoDataEnd = .;
    _ice_doukutu_room_9SegmentRoDataSize = ABSOLUTE( _ice_doukutu_room_9SegmentRoDataEnd - _ice_doukutu_room_9SegmentRoDataStart );
        _ice_doukutu_room_9SegmentSDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_9.o (.sdata)
        . = ALIGN(0x10);
        _ice_doukutu_room_9SegmentSDataEnd = .;
        _ice_doukutu_room_9SegmentOvlStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_9.o (.ovl)
        . = ALIGN(0x10);
        _ice_doukutu_room_9SegmentOvlEnd = .;
    }
    _RomSize += ( _ice_doukutu_room_9SegmentOvlEnd - _ice_doukutu_room_9SegmentTextStart );
    _ice_doukutu_room_9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ice_doukutu_room_9.bss ADDR(..ice_doukutu_room_9) + SIZEOF(..ice_doukutu_room_9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ice_doukutu_room_9SegmentBssStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_9.o (.sbss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_9.o (.scommon)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_9.o (.bss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_9.o (COMMON)
        . = ALIGN(0x10);
        _ice_doukutu_room_9SegmentBssEnd = .;
        _ice_doukutu_room_9SegmentEnd = .;
    }
    _ice_doukutu_room_9SegmentBssSize = ABSOLUTE( _ice_doukutu_room_9SegmentBssEnd - _ice_doukutu_room_9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ice_doukutu_room_10SegmentRomStart = _RomSize;
    ..ice_doukutu_room_10 0x03000000 : AT(_RomSize)
    {
        _ice_doukutu_room_10SegmentStart = .;
        . = ALIGN(0x10);
        _ice_doukutu_room_10SegmentTextStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_10.o (.text)
        _ice_doukutu_room_10SegmentTextEnd = .;
    _ice_doukutu_room_10SegmentTextSize = ABSOLUTE( _ice_doukutu_room_10SegmentTextEnd - _ice_doukutu_room_10SegmentTextStart );
        _ice_doukutu_room_10SegmentDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_10.o (.data)
        _ice_doukutu_room_10SegmentDataEnd = .;
    _ice_doukutu_room_10SegmentDataSize = ABSOLUTE( _ice_doukutu_room_10SegmentDataEnd - _ice_doukutu_room_10SegmentDataStart );
        _ice_doukutu_room_10SegmentRoDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_10.o (.rodata)
        _ice_doukutu_room_10SegmentRoDataEnd = .;
    _ice_doukutu_room_10SegmentRoDataSize = ABSOLUTE( _ice_doukutu_room_10SegmentRoDataEnd - _ice_doukutu_room_10SegmentRoDataStart );
        _ice_doukutu_room_10SegmentSDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_10.o (.sdata)
        . = ALIGN(0x10);
        _ice_doukutu_room_10SegmentSDataEnd = .;
        _ice_doukutu_room_10SegmentOvlStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_10.o (.ovl)
        . = ALIGN(0x10);
        _ice_doukutu_room_10SegmentOvlEnd = .;
    }
    _RomSize += ( _ice_doukutu_room_10SegmentOvlEnd - _ice_doukutu_room_10SegmentTextStart );
    _ice_doukutu_room_10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ice_doukutu_room_10.bss ADDR(..ice_doukutu_room_10) + SIZEOF(..ice_doukutu_room_10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ice_doukutu_room_10SegmentBssStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_10.o (.sbss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_10.o (.scommon)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_10.o (.bss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_10.o (COMMON)
        . = ALIGN(0x10);
        _ice_doukutu_room_10SegmentBssEnd = .;
        _ice_doukutu_room_10SegmentEnd = .;
    }
    _ice_doukutu_room_10SegmentBssSize = ABSOLUTE( _ice_doukutu_room_10SegmentBssEnd - _ice_doukutu_room_10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ice_doukutu_room_11SegmentRomStart = _RomSize;
    ..ice_doukutu_room_11 0x03000000 : AT(_RomSize)
    {
        _ice_doukutu_room_11SegmentStart = .;
        . = ALIGN(0x10);
        _ice_doukutu_room_11SegmentTextStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_11.o (.text)
        _ice_doukutu_room_11SegmentTextEnd = .;
    _ice_doukutu_room_11SegmentTextSize = ABSOLUTE( _ice_doukutu_room_11SegmentTextEnd - _ice_doukutu_room_11SegmentTextStart );
        _ice_doukutu_room_11SegmentDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_11.o (.data)
        _ice_doukutu_room_11SegmentDataEnd = .;
    _ice_doukutu_room_11SegmentDataSize = ABSOLUTE( _ice_doukutu_room_11SegmentDataEnd - _ice_doukutu_room_11SegmentDataStart );
        _ice_doukutu_room_11SegmentRoDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_11.o (.rodata)
        _ice_doukutu_room_11SegmentRoDataEnd = .;
    _ice_doukutu_room_11SegmentRoDataSize = ABSOLUTE( _ice_doukutu_room_11SegmentRoDataEnd - _ice_doukutu_room_11SegmentRoDataStart );
        _ice_doukutu_room_11SegmentSDataStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_11.o (.sdata)
        . = ALIGN(0x10);
        _ice_doukutu_room_11SegmentSDataEnd = .;
        _ice_doukutu_room_11SegmentOvlStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_11.o (.ovl)
        . = ALIGN(0x10);
        _ice_doukutu_room_11SegmentOvlEnd = .;
    }
    _RomSize += ( _ice_doukutu_room_11SegmentOvlEnd - _ice_doukutu_room_11SegmentTextStart );
    _ice_doukutu_room_11SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ice_doukutu_room_11.bss ADDR(..ice_doukutu_room_11) + SIZEOF(..ice_doukutu_room_11) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ice_doukutu_room_11SegmentBssStart = .;
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_11.o (.sbss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_11.o (.scommon)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_11.o (.bss)
            build/scenes/dungeons/ice_doukutu/ice_doukutu_room_11.o (COMMON)
        . = ALIGN(0x10);
        _ice_doukutu_room_11SegmentBssEnd = .;
        _ice_doukutu_room_11SegmentEnd = .;
    }
    _ice_doukutu_room_11SegmentBssSize = ABSOLUTE( _ice_doukutu_room_11SegmentBssEnd - _ice_doukutu_room_11SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _men_sceneSegmentRomStart = _RomSize;
    ..men_scene 0x02000000 : AT(_RomSize)
    {
        _men_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _men_sceneSegmentTextStart = .;
            build/scenes/dungeons/men/men_scene.o (.text)
        _men_sceneSegmentTextEnd = .;
    _men_sceneSegmentTextSize = ABSOLUTE( _men_sceneSegmentTextEnd - _men_sceneSegmentTextStart );
        _men_sceneSegmentDataStart = .;
            build/scenes/dungeons/men/men_scene.o (.data)
        _men_sceneSegmentDataEnd = .;
    _men_sceneSegmentDataSize = ABSOLUTE( _men_sceneSegmentDataEnd - _men_sceneSegmentDataStart );
        _men_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/men/men_scene.o (.rodata)
        _men_sceneSegmentRoDataEnd = .;
    _men_sceneSegmentRoDataSize = ABSOLUTE( _men_sceneSegmentRoDataEnd - _men_sceneSegmentRoDataStart );
        _men_sceneSegmentSDataStart = .;
            build/scenes/dungeons/men/men_scene.o (.sdata)
        . = ALIGN(0x10);
        _men_sceneSegmentSDataEnd = .;
        _men_sceneSegmentOvlStart = .;
            build/scenes/dungeons/men/men_scene.o (.ovl)
        . = ALIGN(0x10);
        _men_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _men_sceneSegmentOvlEnd - _men_sceneSegmentTextStart );
    _men_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..men_scene.bss ADDR(..men_scene) + SIZEOF(..men_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _men_sceneSegmentBssStart = .;
            build/scenes/dungeons/men/men_scene.o (.sbss)
            build/scenes/dungeons/men/men_scene.o (.scommon)
            build/scenes/dungeons/men/men_scene.o (.bss)
            build/scenes/dungeons/men/men_scene.o (COMMON)
        . = ALIGN(0x10);
        _men_sceneSegmentBssEnd = .;
        _men_sceneSegmentEnd = .;
    }
    _men_sceneSegmentBssSize = ABSOLUTE( _men_sceneSegmentBssEnd - _men_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _men_room_0SegmentRomStart = _RomSize;
    ..men_room_0 0x03000000 : AT(_RomSize)
    {
        _men_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _men_room_0SegmentTextStart = .;
            build/scenes/dungeons/men/men_room_0.o (.text)
        _men_room_0SegmentTextEnd = .;
    _men_room_0SegmentTextSize = ABSOLUTE( _men_room_0SegmentTextEnd - _men_room_0SegmentTextStart );
        _men_room_0SegmentDataStart = .;
            build/scenes/dungeons/men/men_room_0.o (.data)
        _men_room_0SegmentDataEnd = .;
    _men_room_0SegmentDataSize = ABSOLUTE( _men_room_0SegmentDataEnd - _men_room_0SegmentDataStart );
        _men_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/men/men_room_0.o (.rodata)
        _men_room_0SegmentRoDataEnd = .;
    _men_room_0SegmentRoDataSize = ABSOLUTE( _men_room_0SegmentRoDataEnd - _men_room_0SegmentRoDataStart );
        _men_room_0SegmentSDataStart = .;
            build/scenes/dungeons/men/men_room_0.o (.sdata)
        . = ALIGN(0x10);
        _men_room_0SegmentSDataEnd = .;
        _men_room_0SegmentOvlStart = .;
            build/scenes/dungeons/men/men_room_0.o (.ovl)
        . = ALIGN(0x10);
        _men_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _men_room_0SegmentOvlEnd - _men_room_0SegmentTextStart );
    _men_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..men_room_0.bss ADDR(..men_room_0) + SIZEOF(..men_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _men_room_0SegmentBssStart = .;
            build/scenes/dungeons/men/men_room_0.o (.sbss)
            build/scenes/dungeons/men/men_room_0.o (.scommon)
            build/scenes/dungeons/men/men_room_0.o (.bss)
            build/scenes/dungeons/men/men_room_0.o (COMMON)
        . = ALIGN(0x10);
        _men_room_0SegmentBssEnd = .;
        _men_room_0SegmentEnd = .;
    }
    _men_room_0SegmentBssSize = ABSOLUTE( _men_room_0SegmentBssEnd - _men_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _men_room_1SegmentRomStart = _RomSize;
    ..men_room_1 0x03000000 : AT(_RomSize)
    {
        _men_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _men_room_1SegmentTextStart = .;
            build/scenes/dungeons/men/men_room_1.o (.text)
        _men_room_1SegmentTextEnd = .;
    _men_room_1SegmentTextSize = ABSOLUTE( _men_room_1SegmentTextEnd - _men_room_1SegmentTextStart );
        _men_room_1SegmentDataStart = .;
            build/scenes/dungeons/men/men_room_1.o (.data)
        _men_room_1SegmentDataEnd = .;
    _men_room_1SegmentDataSize = ABSOLUTE( _men_room_1SegmentDataEnd - _men_room_1SegmentDataStart );
        _men_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/men/men_room_1.o (.rodata)
        _men_room_1SegmentRoDataEnd = .;
    _men_room_1SegmentRoDataSize = ABSOLUTE( _men_room_1SegmentRoDataEnd - _men_room_1SegmentRoDataStart );
        _men_room_1SegmentSDataStart = .;
            build/scenes/dungeons/men/men_room_1.o (.sdata)
        . = ALIGN(0x10);
        _men_room_1SegmentSDataEnd = .;
        _men_room_1SegmentOvlStart = .;
            build/scenes/dungeons/men/men_room_1.o (.ovl)
        . = ALIGN(0x10);
        _men_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _men_room_1SegmentOvlEnd - _men_room_1SegmentTextStart );
    _men_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..men_room_1.bss ADDR(..men_room_1) + SIZEOF(..men_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _men_room_1SegmentBssStart = .;
            build/scenes/dungeons/men/men_room_1.o (.sbss)
            build/scenes/dungeons/men/men_room_1.o (.scommon)
            build/scenes/dungeons/men/men_room_1.o (.bss)
            build/scenes/dungeons/men/men_room_1.o (COMMON)
        . = ALIGN(0x10);
        _men_room_1SegmentBssEnd = .;
        _men_room_1SegmentEnd = .;
    }
    _men_room_1SegmentBssSize = ABSOLUTE( _men_room_1SegmentBssEnd - _men_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _men_room_2SegmentRomStart = _RomSize;
    ..men_room_2 0x03000000 : AT(_RomSize)
    {
        _men_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _men_room_2SegmentTextStart = .;
            build/scenes/dungeons/men/men_room_2.o (.text)
        _men_room_2SegmentTextEnd = .;
    _men_room_2SegmentTextSize = ABSOLUTE( _men_room_2SegmentTextEnd - _men_room_2SegmentTextStart );
        _men_room_2SegmentDataStart = .;
            build/scenes/dungeons/men/men_room_2.o (.data)
        _men_room_2SegmentDataEnd = .;
    _men_room_2SegmentDataSize = ABSOLUTE( _men_room_2SegmentDataEnd - _men_room_2SegmentDataStart );
        _men_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/men/men_room_2.o (.rodata)
        _men_room_2SegmentRoDataEnd = .;
    _men_room_2SegmentRoDataSize = ABSOLUTE( _men_room_2SegmentRoDataEnd - _men_room_2SegmentRoDataStart );
        _men_room_2SegmentSDataStart = .;
            build/scenes/dungeons/men/men_room_2.o (.sdata)
        . = ALIGN(0x10);
        _men_room_2SegmentSDataEnd = .;
        _men_room_2SegmentOvlStart = .;
            build/scenes/dungeons/men/men_room_2.o (.ovl)
        . = ALIGN(0x10);
        _men_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _men_room_2SegmentOvlEnd - _men_room_2SegmentTextStart );
    _men_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..men_room_2.bss ADDR(..men_room_2) + SIZEOF(..men_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _men_room_2SegmentBssStart = .;
            build/scenes/dungeons/men/men_room_2.o (.sbss)
            build/scenes/dungeons/men/men_room_2.o (.scommon)
            build/scenes/dungeons/men/men_room_2.o (.bss)
            build/scenes/dungeons/men/men_room_2.o (COMMON)
        . = ALIGN(0x10);
        _men_room_2SegmentBssEnd = .;
        _men_room_2SegmentEnd = .;
    }
    _men_room_2SegmentBssSize = ABSOLUTE( _men_room_2SegmentBssEnd - _men_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _men_room_3SegmentRomStart = _RomSize;
    ..men_room_3 0x03000000 : AT(_RomSize)
    {
        _men_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _men_room_3SegmentTextStart = .;
            build/scenes/dungeons/men/men_room_3.o (.text)
        _men_room_3SegmentTextEnd = .;
    _men_room_3SegmentTextSize = ABSOLUTE( _men_room_3SegmentTextEnd - _men_room_3SegmentTextStart );
        _men_room_3SegmentDataStart = .;
            build/scenes/dungeons/men/men_room_3.o (.data)
        _men_room_3SegmentDataEnd = .;
    _men_room_3SegmentDataSize = ABSOLUTE( _men_room_3SegmentDataEnd - _men_room_3SegmentDataStart );
        _men_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/men/men_room_3.o (.rodata)
        _men_room_3SegmentRoDataEnd = .;
    _men_room_3SegmentRoDataSize = ABSOLUTE( _men_room_3SegmentRoDataEnd - _men_room_3SegmentRoDataStart );
        _men_room_3SegmentSDataStart = .;
            build/scenes/dungeons/men/men_room_3.o (.sdata)
        . = ALIGN(0x10);
        _men_room_3SegmentSDataEnd = .;
        _men_room_3SegmentOvlStart = .;
            build/scenes/dungeons/men/men_room_3.o (.ovl)
        . = ALIGN(0x10);
        _men_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _men_room_3SegmentOvlEnd - _men_room_3SegmentTextStart );
    _men_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..men_room_3.bss ADDR(..men_room_3) + SIZEOF(..men_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _men_room_3SegmentBssStart = .;
            build/scenes/dungeons/men/men_room_3.o (.sbss)
            build/scenes/dungeons/men/men_room_3.o (.scommon)
            build/scenes/dungeons/men/men_room_3.o (.bss)
            build/scenes/dungeons/men/men_room_3.o (COMMON)
        . = ALIGN(0x10);
        _men_room_3SegmentBssEnd = .;
        _men_room_3SegmentEnd = .;
    }
    _men_room_3SegmentBssSize = ABSOLUTE( _men_room_3SegmentBssEnd - _men_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _men_room_4SegmentRomStart = _RomSize;
    ..men_room_4 0x03000000 : AT(_RomSize)
    {
        _men_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _men_room_4SegmentTextStart = .;
            build/scenes/dungeons/men/men_room_4.o (.text)
        _men_room_4SegmentTextEnd = .;
    _men_room_4SegmentTextSize = ABSOLUTE( _men_room_4SegmentTextEnd - _men_room_4SegmentTextStart );
        _men_room_4SegmentDataStart = .;
            build/scenes/dungeons/men/men_room_4.o (.data)
        _men_room_4SegmentDataEnd = .;
    _men_room_4SegmentDataSize = ABSOLUTE( _men_room_4SegmentDataEnd - _men_room_4SegmentDataStart );
        _men_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/men/men_room_4.o (.rodata)
        _men_room_4SegmentRoDataEnd = .;
    _men_room_4SegmentRoDataSize = ABSOLUTE( _men_room_4SegmentRoDataEnd - _men_room_4SegmentRoDataStart );
        _men_room_4SegmentSDataStart = .;
            build/scenes/dungeons/men/men_room_4.o (.sdata)
        . = ALIGN(0x10);
        _men_room_4SegmentSDataEnd = .;
        _men_room_4SegmentOvlStart = .;
            build/scenes/dungeons/men/men_room_4.o (.ovl)
        . = ALIGN(0x10);
        _men_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _men_room_4SegmentOvlEnd - _men_room_4SegmentTextStart );
    _men_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..men_room_4.bss ADDR(..men_room_4) + SIZEOF(..men_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _men_room_4SegmentBssStart = .;
            build/scenes/dungeons/men/men_room_4.o (.sbss)
            build/scenes/dungeons/men/men_room_4.o (.scommon)
            build/scenes/dungeons/men/men_room_4.o (.bss)
            build/scenes/dungeons/men/men_room_4.o (COMMON)
        . = ALIGN(0x10);
        _men_room_4SegmentBssEnd = .;
        _men_room_4SegmentEnd = .;
    }
    _men_room_4SegmentBssSize = ABSOLUTE( _men_room_4SegmentBssEnd - _men_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _men_room_5SegmentRomStart = _RomSize;
    ..men_room_5 0x03000000 : AT(_RomSize)
    {
        _men_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _men_room_5SegmentTextStart = .;
            build/scenes/dungeons/men/men_room_5.o (.text)
        _men_room_5SegmentTextEnd = .;
    _men_room_5SegmentTextSize = ABSOLUTE( _men_room_5SegmentTextEnd - _men_room_5SegmentTextStart );
        _men_room_5SegmentDataStart = .;
            build/scenes/dungeons/men/men_room_5.o (.data)
        _men_room_5SegmentDataEnd = .;
    _men_room_5SegmentDataSize = ABSOLUTE( _men_room_5SegmentDataEnd - _men_room_5SegmentDataStart );
        _men_room_5SegmentRoDataStart = .;
            build/scenes/dungeons/men/men_room_5.o (.rodata)
        _men_room_5SegmentRoDataEnd = .;
    _men_room_5SegmentRoDataSize = ABSOLUTE( _men_room_5SegmentRoDataEnd - _men_room_5SegmentRoDataStart );
        _men_room_5SegmentSDataStart = .;
            build/scenes/dungeons/men/men_room_5.o (.sdata)
        . = ALIGN(0x10);
        _men_room_5SegmentSDataEnd = .;
        _men_room_5SegmentOvlStart = .;
            build/scenes/dungeons/men/men_room_5.o (.ovl)
        . = ALIGN(0x10);
        _men_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _men_room_5SegmentOvlEnd - _men_room_5SegmentTextStart );
    _men_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..men_room_5.bss ADDR(..men_room_5) + SIZEOF(..men_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _men_room_5SegmentBssStart = .;
            build/scenes/dungeons/men/men_room_5.o (.sbss)
            build/scenes/dungeons/men/men_room_5.o (.scommon)
            build/scenes/dungeons/men/men_room_5.o (.bss)
            build/scenes/dungeons/men/men_room_5.o (COMMON)
        . = ALIGN(0x10);
        _men_room_5SegmentBssEnd = .;
        _men_room_5SegmentEnd = .;
    }
    _men_room_5SegmentBssSize = ABSOLUTE( _men_room_5SegmentBssEnd - _men_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _men_room_6SegmentRomStart = _RomSize;
    ..men_room_6 0x03000000 : AT(_RomSize)
    {
        _men_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _men_room_6SegmentTextStart = .;
            build/scenes/dungeons/men/men_room_6.o (.text)
        _men_room_6SegmentTextEnd = .;
    _men_room_6SegmentTextSize = ABSOLUTE( _men_room_6SegmentTextEnd - _men_room_6SegmentTextStart );
        _men_room_6SegmentDataStart = .;
            build/scenes/dungeons/men/men_room_6.o (.data)
        _men_room_6SegmentDataEnd = .;
    _men_room_6SegmentDataSize = ABSOLUTE( _men_room_6SegmentDataEnd - _men_room_6SegmentDataStart );
        _men_room_6SegmentRoDataStart = .;
            build/scenes/dungeons/men/men_room_6.o (.rodata)
        _men_room_6SegmentRoDataEnd = .;
    _men_room_6SegmentRoDataSize = ABSOLUTE( _men_room_6SegmentRoDataEnd - _men_room_6SegmentRoDataStart );
        _men_room_6SegmentSDataStart = .;
            build/scenes/dungeons/men/men_room_6.o (.sdata)
        . = ALIGN(0x10);
        _men_room_6SegmentSDataEnd = .;
        _men_room_6SegmentOvlStart = .;
            build/scenes/dungeons/men/men_room_6.o (.ovl)
        . = ALIGN(0x10);
        _men_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _men_room_6SegmentOvlEnd - _men_room_6SegmentTextStart );
    _men_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..men_room_6.bss ADDR(..men_room_6) + SIZEOF(..men_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _men_room_6SegmentBssStart = .;
            build/scenes/dungeons/men/men_room_6.o (.sbss)
            build/scenes/dungeons/men/men_room_6.o (.scommon)
            build/scenes/dungeons/men/men_room_6.o (.bss)
            build/scenes/dungeons/men/men_room_6.o (COMMON)
        . = ALIGN(0x10);
        _men_room_6SegmentBssEnd = .;
        _men_room_6SegmentEnd = .;
    }
    _men_room_6SegmentBssSize = ABSOLUTE( _men_room_6SegmentBssEnd - _men_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _men_room_7SegmentRomStart = _RomSize;
    ..men_room_7 0x03000000 : AT(_RomSize)
    {
        _men_room_7SegmentStart = .;
        . = ALIGN(0x10);
        _men_room_7SegmentTextStart = .;
            build/scenes/dungeons/men/men_room_7.o (.text)
        _men_room_7SegmentTextEnd = .;
    _men_room_7SegmentTextSize = ABSOLUTE( _men_room_7SegmentTextEnd - _men_room_7SegmentTextStart );
        _men_room_7SegmentDataStart = .;
            build/scenes/dungeons/men/men_room_7.o (.data)
        _men_room_7SegmentDataEnd = .;
    _men_room_7SegmentDataSize = ABSOLUTE( _men_room_7SegmentDataEnd - _men_room_7SegmentDataStart );
        _men_room_7SegmentRoDataStart = .;
            build/scenes/dungeons/men/men_room_7.o (.rodata)
        _men_room_7SegmentRoDataEnd = .;
    _men_room_7SegmentRoDataSize = ABSOLUTE( _men_room_7SegmentRoDataEnd - _men_room_7SegmentRoDataStart );
        _men_room_7SegmentSDataStart = .;
            build/scenes/dungeons/men/men_room_7.o (.sdata)
        . = ALIGN(0x10);
        _men_room_7SegmentSDataEnd = .;
        _men_room_7SegmentOvlStart = .;
            build/scenes/dungeons/men/men_room_7.o (.ovl)
        . = ALIGN(0x10);
        _men_room_7SegmentOvlEnd = .;
    }
    _RomSize += ( _men_room_7SegmentOvlEnd - _men_room_7SegmentTextStart );
    _men_room_7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..men_room_7.bss ADDR(..men_room_7) + SIZEOF(..men_room_7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _men_room_7SegmentBssStart = .;
            build/scenes/dungeons/men/men_room_7.o (.sbss)
            build/scenes/dungeons/men/men_room_7.o (.scommon)
            build/scenes/dungeons/men/men_room_7.o (.bss)
            build/scenes/dungeons/men/men_room_7.o (COMMON)
        . = ALIGN(0x10);
        _men_room_7SegmentBssEnd = .;
        _men_room_7SegmentEnd = .;
    }
    _men_room_7SegmentBssSize = ABSOLUTE( _men_room_7SegmentBssEnd - _men_room_7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _men_room_8SegmentRomStart = _RomSize;
    ..men_room_8 0x03000000 : AT(_RomSize)
    {
        _men_room_8SegmentStart = .;
        . = ALIGN(0x10);
        _men_room_8SegmentTextStart = .;
            build/scenes/dungeons/men/men_room_8.o (.text)
        _men_room_8SegmentTextEnd = .;
    _men_room_8SegmentTextSize = ABSOLUTE( _men_room_8SegmentTextEnd - _men_room_8SegmentTextStart );
        _men_room_8SegmentDataStart = .;
            build/scenes/dungeons/men/men_room_8.o (.data)
        _men_room_8SegmentDataEnd = .;
    _men_room_8SegmentDataSize = ABSOLUTE( _men_room_8SegmentDataEnd - _men_room_8SegmentDataStart );
        _men_room_8SegmentRoDataStart = .;
            build/scenes/dungeons/men/men_room_8.o (.rodata)
        _men_room_8SegmentRoDataEnd = .;
    _men_room_8SegmentRoDataSize = ABSOLUTE( _men_room_8SegmentRoDataEnd - _men_room_8SegmentRoDataStart );
        _men_room_8SegmentSDataStart = .;
            build/scenes/dungeons/men/men_room_8.o (.sdata)
        . = ALIGN(0x10);
        _men_room_8SegmentSDataEnd = .;
        _men_room_8SegmentOvlStart = .;
            build/scenes/dungeons/men/men_room_8.o (.ovl)
        . = ALIGN(0x10);
        _men_room_8SegmentOvlEnd = .;
    }
    _RomSize += ( _men_room_8SegmentOvlEnd - _men_room_8SegmentTextStart );
    _men_room_8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..men_room_8.bss ADDR(..men_room_8) + SIZEOF(..men_room_8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _men_room_8SegmentBssStart = .;
            build/scenes/dungeons/men/men_room_8.o (.sbss)
            build/scenes/dungeons/men/men_room_8.o (.scommon)
            build/scenes/dungeons/men/men_room_8.o (.bss)
            build/scenes/dungeons/men/men_room_8.o (COMMON)
        . = ALIGN(0x10);
        _men_room_8SegmentBssEnd = .;
        _men_room_8SegmentEnd = .;
    }
    _men_room_8SegmentBssSize = ABSOLUTE( _men_room_8SegmentBssEnd - _men_room_8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _men_room_9SegmentRomStart = _RomSize;
    ..men_room_9 0x03000000 : AT(_RomSize)
    {
        _men_room_9SegmentStart = .;
        . = ALIGN(0x10);
        _men_room_9SegmentTextStart = .;
            build/scenes/dungeons/men/men_room_9.o (.text)
        _men_room_9SegmentTextEnd = .;
    _men_room_9SegmentTextSize = ABSOLUTE( _men_room_9SegmentTextEnd - _men_room_9SegmentTextStart );
        _men_room_9SegmentDataStart = .;
            build/scenes/dungeons/men/men_room_9.o (.data)
        _men_room_9SegmentDataEnd = .;
    _men_room_9SegmentDataSize = ABSOLUTE( _men_room_9SegmentDataEnd - _men_room_9SegmentDataStart );
        _men_room_9SegmentRoDataStart = .;
            build/scenes/dungeons/men/men_room_9.o (.rodata)
        _men_room_9SegmentRoDataEnd = .;
    _men_room_9SegmentRoDataSize = ABSOLUTE( _men_room_9SegmentRoDataEnd - _men_room_9SegmentRoDataStart );
        _men_room_9SegmentSDataStart = .;
            build/scenes/dungeons/men/men_room_9.o (.sdata)
        . = ALIGN(0x10);
        _men_room_9SegmentSDataEnd = .;
        _men_room_9SegmentOvlStart = .;
            build/scenes/dungeons/men/men_room_9.o (.ovl)
        . = ALIGN(0x10);
        _men_room_9SegmentOvlEnd = .;
    }
    _RomSize += ( _men_room_9SegmentOvlEnd - _men_room_9SegmentTextStart );
    _men_room_9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..men_room_9.bss ADDR(..men_room_9) + SIZEOF(..men_room_9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _men_room_9SegmentBssStart = .;
            build/scenes/dungeons/men/men_room_9.o (.sbss)
            build/scenes/dungeons/men/men_room_9.o (.scommon)
            build/scenes/dungeons/men/men_room_9.o (.bss)
            build/scenes/dungeons/men/men_room_9.o (COMMON)
        . = ALIGN(0x10);
        _men_room_9SegmentBssEnd = .;
        _men_room_9SegmentEnd = .;
    }
    _men_room_9SegmentBssSize = ABSOLUTE( _men_room_9SegmentBssEnd - _men_room_9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _men_room_10SegmentRomStart = _RomSize;
    ..men_room_10 0x03000000 : AT(_RomSize)
    {
        _men_room_10SegmentStart = .;
        . = ALIGN(0x10);
        _men_room_10SegmentTextStart = .;
            build/scenes/dungeons/men/men_room_10.o (.text)
        _men_room_10SegmentTextEnd = .;
    _men_room_10SegmentTextSize = ABSOLUTE( _men_room_10SegmentTextEnd - _men_room_10SegmentTextStart );
        _men_room_10SegmentDataStart = .;
            build/scenes/dungeons/men/men_room_10.o (.data)
        _men_room_10SegmentDataEnd = .;
    _men_room_10SegmentDataSize = ABSOLUTE( _men_room_10SegmentDataEnd - _men_room_10SegmentDataStart );
        _men_room_10SegmentRoDataStart = .;
            build/scenes/dungeons/men/men_room_10.o (.rodata)
        _men_room_10SegmentRoDataEnd = .;
    _men_room_10SegmentRoDataSize = ABSOLUTE( _men_room_10SegmentRoDataEnd - _men_room_10SegmentRoDataStart );
        _men_room_10SegmentSDataStart = .;
            build/scenes/dungeons/men/men_room_10.o (.sdata)
        . = ALIGN(0x10);
        _men_room_10SegmentSDataEnd = .;
        _men_room_10SegmentOvlStart = .;
            build/scenes/dungeons/men/men_room_10.o (.ovl)
        . = ALIGN(0x10);
        _men_room_10SegmentOvlEnd = .;
    }
    _RomSize += ( _men_room_10SegmentOvlEnd - _men_room_10SegmentTextStart );
    _men_room_10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..men_room_10.bss ADDR(..men_room_10) + SIZEOF(..men_room_10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _men_room_10SegmentBssStart = .;
            build/scenes/dungeons/men/men_room_10.o (.sbss)
            build/scenes/dungeons/men/men_room_10.o (.scommon)
            build/scenes/dungeons/men/men_room_10.o (.bss)
            build/scenes/dungeons/men/men_room_10.o (COMMON)
        . = ALIGN(0x10);
        _men_room_10SegmentBssEnd = .;
        _men_room_10SegmentEnd = .;
    }
    _men_room_10SegmentBssSize = ABSOLUTE( _men_room_10SegmentBssEnd - _men_room_10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_sceneSegmentRomStart = _RomSize;
    ..ganontika_scene 0x02000000 : AT(_RomSize)
    {
        _ganontika_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_sceneSegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_scene.o (.text)
        _ganontika_sceneSegmentTextEnd = .;
    _ganontika_sceneSegmentTextSize = ABSOLUTE( _ganontika_sceneSegmentTextEnd - _ganontika_sceneSegmentTextStart );
        _ganontika_sceneSegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_scene.o (.data)
        _ganontika_sceneSegmentDataEnd = .;
    _ganontika_sceneSegmentDataSize = ABSOLUTE( _ganontika_sceneSegmentDataEnd - _ganontika_sceneSegmentDataStart );
        _ganontika_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_scene.o (.rodata)
        _ganontika_sceneSegmentRoDataEnd = .;
    _ganontika_sceneSegmentRoDataSize = ABSOLUTE( _ganontika_sceneSegmentRoDataEnd - _ganontika_sceneSegmentRoDataStart );
        _ganontika_sceneSegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_scene.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_sceneSegmentSDataEnd = .;
        _ganontika_sceneSegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_scene.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_sceneSegmentOvlEnd - _ganontika_sceneSegmentTextStart );
    _ganontika_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_scene.bss ADDR(..ganontika_scene) + SIZEOF(..ganontika_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_sceneSegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_scene.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_scene.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_scene.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_scene.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_sceneSegmentBssEnd = .;
        _ganontika_sceneSegmentEnd = .;
    }
    _ganontika_sceneSegmentBssSize = ABSOLUTE( _ganontika_sceneSegmentBssEnd - _ganontika_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_0SegmentRomStart = _RomSize;
    ..ganontika_room_0 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_0SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_0.o (.text)
        _ganontika_room_0SegmentTextEnd = .;
    _ganontika_room_0SegmentTextSize = ABSOLUTE( _ganontika_room_0SegmentTextEnd - _ganontika_room_0SegmentTextStart );
        _ganontika_room_0SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_0.o (.data)
        _ganontika_room_0SegmentDataEnd = .;
    _ganontika_room_0SegmentDataSize = ABSOLUTE( _ganontika_room_0SegmentDataEnd - _ganontika_room_0SegmentDataStart );
        _ganontika_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_0.o (.rodata)
        _ganontika_room_0SegmentRoDataEnd = .;
    _ganontika_room_0SegmentRoDataSize = ABSOLUTE( _ganontika_room_0SegmentRoDataEnd - _ganontika_room_0SegmentRoDataStart );
        _ganontika_room_0SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_0.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_0SegmentSDataEnd = .;
        _ganontika_room_0SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_0.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_0SegmentOvlEnd - _ganontika_room_0SegmentTextStart );
    _ganontika_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_0.bss ADDR(..ganontika_room_0) + SIZEOF(..ganontika_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_0SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_0.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_0.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_0.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_0.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_0SegmentBssEnd = .;
        _ganontika_room_0SegmentEnd = .;
    }
    _ganontika_room_0SegmentBssSize = ABSOLUTE( _ganontika_room_0SegmentBssEnd - _ganontika_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_1SegmentRomStart = _RomSize;
    ..ganontika_room_1 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_1SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_1.o (.text)
        _ganontika_room_1SegmentTextEnd = .;
    _ganontika_room_1SegmentTextSize = ABSOLUTE( _ganontika_room_1SegmentTextEnd - _ganontika_room_1SegmentTextStart );
        _ganontika_room_1SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_1.o (.data)
        _ganontika_room_1SegmentDataEnd = .;
    _ganontika_room_1SegmentDataSize = ABSOLUTE( _ganontika_room_1SegmentDataEnd - _ganontika_room_1SegmentDataStart );
        _ganontika_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_1.o (.rodata)
        _ganontika_room_1SegmentRoDataEnd = .;
    _ganontika_room_1SegmentRoDataSize = ABSOLUTE( _ganontika_room_1SegmentRoDataEnd - _ganontika_room_1SegmentRoDataStart );
        _ganontika_room_1SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_1.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_1SegmentSDataEnd = .;
        _ganontika_room_1SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_1.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_1SegmentOvlEnd - _ganontika_room_1SegmentTextStart );
    _ganontika_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_1.bss ADDR(..ganontika_room_1) + SIZEOF(..ganontika_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_1SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_1.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_1.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_1.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_1.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_1SegmentBssEnd = .;
        _ganontika_room_1SegmentEnd = .;
    }
    _ganontika_room_1SegmentBssSize = ABSOLUTE( _ganontika_room_1SegmentBssEnd - _ganontika_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_2SegmentRomStart = _RomSize;
    ..ganontika_room_2 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_2SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_2.o (.text)
        _ganontika_room_2SegmentTextEnd = .;
    _ganontika_room_2SegmentTextSize = ABSOLUTE( _ganontika_room_2SegmentTextEnd - _ganontika_room_2SegmentTextStart );
        _ganontika_room_2SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_2.o (.data)
        _ganontika_room_2SegmentDataEnd = .;
    _ganontika_room_2SegmentDataSize = ABSOLUTE( _ganontika_room_2SegmentDataEnd - _ganontika_room_2SegmentDataStart );
        _ganontika_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_2.o (.rodata)
        _ganontika_room_2SegmentRoDataEnd = .;
    _ganontika_room_2SegmentRoDataSize = ABSOLUTE( _ganontika_room_2SegmentRoDataEnd - _ganontika_room_2SegmentRoDataStart );
        _ganontika_room_2SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_2.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_2SegmentSDataEnd = .;
        _ganontika_room_2SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_2.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_2SegmentOvlEnd - _ganontika_room_2SegmentTextStart );
    _ganontika_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_2.bss ADDR(..ganontika_room_2) + SIZEOF(..ganontika_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_2SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_2.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_2.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_2.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_2.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_2SegmentBssEnd = .;
        _ganontika_room_2SegmentEnd = .;
    }
    _ganontika_room_2SegmentBssSize = ABSOLUTE( _ganontika_room_2SegmentBssEnd - _ganontika_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_3SegmentRomStart = _RomSize;
    ..ganontika_room_3 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_3SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_3.o (.text)
        _ganontika_room_3SegmentTextEnd = .;
    _ganontika_room_3SegmentTextSize = ABSOLUTE( _ganontika_room_3SegmentTextEnd - _ganontika_room_3SegmentTextStart );
        _ganontika_room_3SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_3.o (.data)
        _ganontika_room_3SegmentDataEnd = .;
    _ganontika_room_3SegmentDataSize = ABSOLUTE( _ganontika_room_3SegmentDataEnd - _ganontika_room_3SegmentDataStart );
        _ganontika_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_3.o (.rodata)
        _ganontika_room_3SegmentRoDataEnd = .;
    _ganontika_room_3SegmentRoDataSize = ABSOLUTE( _ganontika_room_3SegmentRoDataEnd - _ganontika_room_3SegmentRoDataStart );
        _ganontika_room_3SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_3.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_3SegmentSDataEnd = .;
        _ganontika_room_3SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_3.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_3SegmentOvlEnd - _ganontika_room_3SegmentTextStart );
    _ganontika_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_3.bss ADDR(..ganontika_room_3) + SIZEOF(..ganontika_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_3SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_3.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_3.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_3.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_3.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_3SegmentBssEnd = .;
        _ganontika_room_3SegmentEnd = .;
    }
    _ganontika_room_3SegmentBssSize = ABSOLUTE( _ganontika_room_3SegmentBssEnd - _ganontika_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_4SegmentRomStart = _RomSize;
    ..ganontika_room_4 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_4SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_4.o (.text)
        _ganontika_room_4SegmentTextEnd = .;
    _ganontika_room_4SegmentTextSize = ABSOLUTE( _ganontika_room_4SegmentTextEnd - _ganontika_room_4SegmentTextStart );
        _ganontika_room_4SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_4.o (.data)
        _ganontika_room_4SegmentDataEnd = .;
    _ganontika_room_4SegmentDataSize = ABSOLUTE( _ganontika_room_4SegmentDataEnd - _ganontika_room_4SegmentDataStart );
        _ganontika_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_4.o (.rodata)
        _ganontika_room_4SegmentRoDataEnd = .;
    _ganontika_room_4SegmentRoDataSize = ABSOLUTE( _ganontika_room_4SegmentRoDataEnd - _ganontika_room_4SegmentRoDataStart );
        _ganontika_room_4SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_4.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_4SegmentSDataEnd = .;
        _ganontika_room_4SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_4.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_4SegmentOvlEnd - _ganontika_room_4SegmentTextStart );
    _ganontika_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_4.bss ADDR(..ganontika_room_4) + SIZEOF(..ganontika_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_4SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_4.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_4.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_4.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_4.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_4SegmentBssEnd = .;
        _ganontika_room_4SegmentEnd = .;
    }
    _ganontika_room_4SegmentBssSize = ABSOLUTE( _ganontika_room_4SegmentBssEnd - _ganontika_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_5SegmentRomStart = _RomSize;
    ..ganontika_room_5 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_5SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_5.o (.text)
        _ganontika_room_5SegmentTextEnd = .;
    _ganontika_room_5SegmentTextSize = ABSOLUTE( _ganontika_room_5SegmentTextEnd - _ganontika_room_5SegmentTextStart );
        _ganontika_room_5SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_5.o (.data)
        _ganontika_room_5SegmentDataEnd = .;
    _ganontika_room_5SegmentDataSize = ABSOLUTE( _ganontika_room_5SegmentDataEnd - _ganontika_room_5SegmentDataStart );
        _ganontika_room_5SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_5.o (.rodata)
        _ganontika_room_5SegmentRoDataEnd = .;
    _ganontika_room_5SegmentRoDataSize = ABSOLUTE( _ganontika_room_5SegmentRoDataEnd - _ganontika_room_5SegmentRoDataStart );
        _ganontika_room_5SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_5.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_5SegmentSDataEnd = .;
        _ganontika_room_5SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_5.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_5SegmentOvlEnd - _ganontika_room_5SegmentTextStart );
    _ganontika_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_5.bss ADDR(..ganontika_room_5) + SIZEOF(..ganontika_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_5SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_5.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_5.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_5.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_5.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_5SegmentBssEnd = .;
        _ganontika_room_5SegmentEnd = .;
    }
    _ganontika_room_5SegmentBssSize = ABSOLUTE( _ganontika_room_5SegmentBssEnd - _ganontika_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_6SegmentRomStart = _RomSize;
    ..ganontika_room_6 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_6SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_6.o (.text)
        _ganontika_room_6SegmentTextEnd = .;
    _ganontika_room_6SegmentTextSize = ABSOLUTE( _ganontika_room_6SegmentTextEnd - _ganontika_room_6SegmentTextStart );
        _ganontika_room_6SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_6.o (.data)
        _ganontika_room_6SegmentDataEnd = .;
    _ganontika_room_6SegmentDataSize = ABSOLUTE( _ganontika_room_6SegmentDataEnd - _ganontika_room_6SegmentDataStart );
        _ganontika_room_6SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_6.o (.rodata)
        _ganontika_room_6SegmentRoDataEnd = .;
    _ganontika_room_6SegmentRoDataSize = ABSOLUTE( _ganontika_room_6SegmentRoDataEnd - _ganontika_room_6SegmentRoDataStart );
        _ganontika_room_6SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_6.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_6SegmentSDataEnd = .;
        _ganontika_room_6SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_6.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_6SegmentOvlEnd - _ganontika_room_6SegmentTextStart );
    _ganontika_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_6.bss ADDR(..ganontika_room_6) + SIZEOF(..ganontika_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_6SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_6.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_6.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_6.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_6.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_6SegmentBssEnd = .;
        _ganontika_room_6SegmentEnd = .;
    }
    _ganontika_room_6SegmentBssSize = ABSOLUTE( _ganontika_room_6SegmentBssEnd - _ganontika_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_7SegmentRomStart = _RomSize;
    ..ganontika_room_7 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_7SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_7SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_7.o (.text)
        _ganontika_room_7SegmentTextEnd = .;
    _ganontika_room_7SegmentTextSize = ABSOLUTE( _ganontika_room_7SegmentTextEnd - _ganontika_room_7SegmentTextStart );
        _ganontika_room_7SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_7.o (.data)
        _ganontika_room_7SegmentDataEnd = .;
    _ganontika_room_7SegmentDataSize = ABSOLUTE( _ganontika_room_7SegmentDataEnd - _ganontika_room_7SegmentDataStart );
        _ganontika_room_7SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_7.o (.rodata)
        _ganontika_room_7SegmentRoDataEnd = .;
    _ganontika_room_7SegmentRoDataSize = ABSOLUTE( _ganontika_room_7SegmentRoDataEnd - _ganontika_room_7SegmentRoDataStart );
        _ganontika_room_7SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_7.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_7SegmentSDataEnd = .;
        _ganontika_room_7SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_7.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_7SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_7SegmentOvlEnd - _ganontika_room_7SegmentTextStart );
    _ganontika_room_7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_7.bss ADDR(..ganontika_room_7) + SIZEOF(..ganontika_room_7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_7SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_7.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_7.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_7.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_7.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_7SegmentBssEnd = .;
        _ganontika_room_7SegmentEnd = .;
    }
    _ganontika_room_7SegmentBssSize = ABSOLUTE( _ganontika_room_7SegmentBssEnd - _ganontika_room_7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_8SegmentRomStart = _RomSize;
    ..ganontika_room_8 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_8SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_8SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_8.o (.text)
        _ganontika_room_8SegmentTextEnd = .;
    _ganontika_room_8SegmentTextSize = ABSOLUTE( _ganontika_room_8SegmentTextEnd - _ganontika_room_8SegmentTextStart );
        _ganontika_room_8SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_8.o (.data)
        _ganontika_room_8SegmentDataEnd = .;
    _ganontika_room_8SegmentDataSize = ABSOLUTE( _ganontika_room_8SegmentDataEnd - _ganontika_room_8SegmentDataStart );
        _ganontika_room_8SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_8.o (.rodata)
        _ganontika_room_8SegmentRoDataEnd = .;
    _ganontika_room_8SegmentRoDataSize = ABSOLUTE( _ganontika_room_8SegmentRoDataEnd - _ganontika_room_8SegmentRoDataStart );
        _ganontika_room_8SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_8.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_8SegmentSDataEnd = .;
        _ganontika_room_8SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_8.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_8SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_8SegmentOvlEnd - _ganontika_room_8SegmentTextStart );
    _ganontika_room_8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_8.bss ADDR(..ganontika_room_8) + SIZEOF(..ganontika_room_8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_8SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_8.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_8.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_8.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_8.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_8SegmentBssEnd = .;
        _ganontika_room_8SegmentEnd = .;
    }
    _ganontika_room_8SegmentBssSize = ABSOLUTE( _ganontika_room_8SegmentBssEnd - _ganontika_room_8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_9SegmentRomStart = _RomSize;
    ..ganontika_room_9 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_9SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_9SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_9.o (.text)
        _ganontika_room_9SegmentTextEnd = .;
    _ganontika_room_9SegmentTextSize = ABSOLUTE( _ganontika_room_9SegmentTextEnd - _ganontika_room_9SegmentTextStart );
        _ganontika_room_9SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_9.o (.data)
        _ganontika_room_9SegmentDataEnd = .;
    _ganontika_room_9SegmentDataSize = ABSOLUTE( _ganontika_room_9SegmentDataEnd - _ganontika_room_9SegmentDataStart );
        _ganontika_room_9SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_9.o (.rodata)
        _ganontika_room_9SegmentRoDataEnd = .;
    _ganontika_room_9SegmentRoDataSize = ABSOLUTE( _ganontika_room_9SegmentRoDataEnd - _ganontika_room_9SegmentRoDataStart );
        _ganontika_room_9SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_9.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_9SegmentSDataEnd = .;
        _ganontika_room_9SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_9.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_9SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_9SegmentOvlEnd - _ganontika_room_9SegmentTextStart );
    _ganontika_room_9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_9.bss ADDR(..ganontika_room_9) + SIZEOF(..ganontika_room_9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_9SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_9.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_9.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_9.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_9.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_9SegmentBssEnd = .;
        _ganontika_room_9SegmentEnd = .;
    }
    _ganontika_room_9SegmentBssSize = ABSOLUTE( _ganontika_room_9SegmentBssEnd - _ganontika_room_9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_10SegmentRomStart = _RomSize;
    ..ganontika_room_10 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_10SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_10SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_10.o (.text)
        _ganontika_room_10SegmentTextEnd = .;
    _ganontika_room_10SegmentTextSize = ABSOLUTE( _ganontika_room_10SegmentTextEnd - _ganontika_room_10SegmentTextStart );
        _ganontika_room_10SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_10.o (.data)
        _ganontika_room_10SegmentDataEnd = .;
    _ganontika_room_10SegmentDataSize = ABSOLUTE( _ganontika_room_10SegmentDataEnd - _ganontika_room_10SegmentDataStart );
        _ganontika_room_10SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_10.o (.rodata)
        _ganontika_room_10SegmentRoDataEnd = .;
    _ganontika_room_10SegmentRoDataSize = ABSOLUTE( _ganontika_room_10SegmentRoDataEnd - _ganontika_room_10SegmentRoDataStart );
        _ganontika_room_10SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_10.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_10SegmentSDataEnd = .;
        _ganontika_room_10SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_10.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_10SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_10SegmentOvlEnd - _ganontika_room_10SegmentTextStart );
    _ganontika_room_10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_10.bss ADDR(..ganontika_room_10) + SIZEOF(..ganontika_room_10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_10SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_10.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_10.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_10.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_10.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_10SegmentBssEnd = .;
        _ganontika_room_10SegmentEnd = .;
    }
    _ganontika_room_10SegmentBssSize = ABSOLUTE( _ganontika_room_10SegmentBssEnd - _ganontika_room_10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_11SegmentRomStart = _RomSize;
    ..ganontika_room_11 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_11SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_11SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_11.o (.text)
        _ganontika_room_11SegmentTextEnd = .;
    _ganontika_room_11SegmentTextSize = ABSOLUTE( _ganontika_room_11SegmentTextEnd - _ganontika_room_11SegmentTextStart );
        _ganontika_room_11SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_11.o (.data)
        _ganontika_room_11SegmentDataEnd = .;
    _ganontika_room_11SegmentDataSize = ABSOLUTE( _ganontika_room_11SegmentDataEnd - _ganontika_room_11SegmentDataStart );
        _ganontika_room_11SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_11.o (.rodata)
        _ganontika_room_11SegmentRoDataEnd = .;
    _ganontika_room_11SegmentRoDataSize = ABSOLUTE( _ganontika_room_11SegmentRoDataEnd - _ganontika_room_11SegmentRoDataStart );
        _ganontika_room_11SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_11.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_11SegmentSDataEnd = .;
        _ganontika_room_11SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_11.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_11SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_11SegmentOvlEnd - _ganontika_room_11SegmentTextStart );
    _ganontika_room_11SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_11.bss ADDR(..ganontika_room_11) + SIZEOF(..ganontika_room_11) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_11SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_11.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_11.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_11.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_11.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_11SegmentBssEnd = .;
        _ganontika_room_11SegmentEnd = .;
    }
    _ganontika_room_11SegmentBssSize = ABSOLUTE( _ganontika_room_11SegmentBssEnd - _ganontika_room_11SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_12SegmentRomStart = _RomSize;
    ..ganontika_room_12 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_12SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_12SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_12.o (.text)
        _ganontika_room_12SegmentTextEnd = .;
    _ganontika_room_12SegmentTextSize = ABSOLUTE( _ganontika_room_12SegmentTextEnd - _ganontika_room_12SegmentTextStart );
        _ganontika_room_12SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_12.o (.data)
        _ganontika_room_12SegmentDataEnd = .;
    _ganontika_room_12SegmentDataSize = ABSOLUTE( _ganontika_room_12SegmentDataEnd - _ganontika_room_12SegmentDataStart );
        _ganontika_room_12SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_12.o (.rodata)
        _ganontika_room_12SegmentRoDataEnd = .;
    _ganontika_room_12SegmentRoDataSize = ABSOLUTE( _ganontika_room_12SegmentRoDataEnd - _ganontika_room_12SegmentRoDataStart );
        _ganontika_room_12SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_12.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_12SegmentSDataEnd = .;
        _ganontika_room_12SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_12.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_12SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_12SegmentOvlEnd - _ganontika_room_12SegmentTextStart );
    _ganontika_room_12SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_12.bss ADDR(..ganontika_room_12) + SIZEOF(..ganontika_room_12) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_12SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_12.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_12.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_12.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_12.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_12SegmentBssEnd = .;
        _ganontika_room_12SegmentEnd = .;
    }
    _ganontika_room_12SegmentBssSize = ABSOLUTE( _ganontika_room_12SegmentBssEnd - _ganontika_room_12SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_13SegmentRomStart = _RomSize;
    ..ganontika_room_13 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_13SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_13SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_13.o (.text)
        _ganontika_room_13SegmentTextEnd = .;
    _ganontika_room_13SegmentTextSize = ABSOLUTE( _ganontika_room_13SegmentTextEnd - _ganontika_room_13SegmentTextStart );
        _ganontika_room_13SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_13.o (.data)
        _ganontika_room_13SegmentDataEnd = .;
    _ganontika_room_13SegmentDataSize = ABSOLUTE( _ganontika_room_13SegmentDataEnd - _ganontika_room_13SegmentDataStart );
        _ganontika_room_13SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_13.o (.rodata)
        _ganontika_room_13SegmentRoDataEnd = .;
    _ganontika_room_13SegmentRoDataSize = ABSOLUTE( _ganontika_room_13SegmentRoDataEnd - _ganontika_room_13SegmentRoDataStart );
        _ganontika_room_13SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_13.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_13SegmentSDataEnd = .;
        _ganontika_room_13SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_13.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_13SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_13SegmentOvlEnd - _ganontika_room_13SegmentTextStart );
    _ganontika_room_13SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_13.bss ADDR(..ganontika_room_13) + SIZEOF(..ganontika_room_13) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_13SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_13.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_13.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_13.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_13.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_13SegmentBssEnd = .;
        _ganontika_room_13SegmentEnd = .;
    }
    _ganontika_room_13SegmentBssSize = ABSOLUTE( _ganontika_room_13SegmentBssEnd - _ganontika_room_13SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_14SegmentRomStart = _RomSize;
    ..ganontika_room_14 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_14SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_14SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_14.o (.text)
        _ganontika_room_14SegmentTextEnd = .;
    _ganontika_room_14SegmentTextSize = ABSOLUTE( _ganontika_room_14SegmentTextEnd - _ganontika_room_14SegmentTextStart );
        _ganontika_room_14SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_14.o (.data)
        _ganontika_room_14SegmentDataEnd = .;
    _ganontika_room_14SegmentDataSize = ABSOLUTE( _ganontika_room_14SegmentDataEnd - _ganontika_room_14SegmentDataStart );
        _ganontika_room_14SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_14.o (.rodata)
        _ganontika_room_14SegmentRoDataEnd = .;
    _ganontika_room_14SegmentRoDataSize = ABSOLUTE( _ganontika_room_14SegmentRoDataEnd - _ganontika_room_14SegmentRoDataStart );
        _ganontika_room_14SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_14.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_14SegmentSDataEnd = .;
        _ganontika_room_14SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_14.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_14SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_14SegmentOvlEnd - _ganontika_room_14SegmentTextStart );
    _ganontika_room_14SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_14.bss ADDR(..ganontika_room_14) + SIZEOF(..ganontika_room_14) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_14SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_14.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_14.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_14.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_14.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_14SegmentBssEnd = .;
        _ganontika_room_14SegmentEnd = .;
    }
    _ganontika_room_14SegmentBssSize = ABSOLUTE( _ganontika_room_14SegmentBssEnd - _ganontika_room_14SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_15SegmentRomStart = _RomSize;
    ..ganontika_room_15 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_15SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_15SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_15.o (.text)
        _ganontika_room_15SegmentTextEnd = .;
    _ganontika_room_15SegmentTextSize = ABSOLUTE( _ganontika_room_15SegmentTextEnd - _ganontika_room_15SegmentTextStart );
        _ganontika_room_15SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_15.o (.data)
        _ganontika_room_15SegmentDataEnd = .;
    _ganontika_room_15SegmentDataSize = ABSOLUTE( _ganontika_room_15SegmentDataEnd - _ganontika_room_15SegmentDataStart );
        _ganontika_room_15SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_15.o (.rodata)
        _ganontika_room_15SegmentRoDataEnd = .;
    _ganontika_room_15SegmentRoDataSize = ABSOLUTE( _ganontika_room_15SegmentRoDataEnd - _ganontika_room_15SegmentRoDataStart );
        _ganontika_room_15SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_15.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_15SegmentSDataEnd = .;
        _ganontika_room_15SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_15.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_15SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_15SegmentOvlEnd - _ganontika_room_15SegmentTextStart );
    _ganontika_room_15SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_15.bss ADDR(..ganontika_room_15) + SIZEOF(..ganontika_room_15) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_15SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_15.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_15.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_15.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_15.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_15SegmentBssEnd = .;
        _ganontika_room_15SegmentEnd = .;
    }
    _ganontika_room_15SegmentBssSize = ABSOLUTE( _ganontika_room_15SegmentBssEnd - _ganontika_room_15SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_16SegmentRomStart = _RomSize;
    ..ganontika_room_16 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_16SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_16SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_16.o (.text)
        _ganontika_room_16SegmentTextEnd = .;
    _ganontika_room_16SegmentTextSize = ABSOLUTE( _ganontika_room_16SegmentTextEnd - _ganontika_room_16SegmentTextStart );
        _ganontika_room_16SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_16.o (.data)
        _ganontika_room_16SegmentDataEnd = .;
    _ganontika_room_16SegmentDataSize = ABSOLUTE( _ganontika_room_16SegmentDataEnd - _ganontika_room_16SegmentDataStart );
        _ganontika_room_16SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_16.o (.rodata)
        _ganontika_room_16SegmentRoDataEnd = .;
    _ganontika_room_16SegmentRoDataSize = ABSOLUTE( _ganontika_room_16SegmentRoDataEnd - _ganontika_room_16SegmentRoDataStart );
        _ganontika_room_16SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_16.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_16SegmentSDataEnd = .;
        _ganontika_room_16SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_16.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_16SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_16SegmentOvlEnd - _ganontika_room_16SegmentTextStart );
    _ganontika_room_16SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_16.bss ADDR(..ganontika_room_16) + SIZEOF(..ganontika_room_16) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_16SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_16.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_16.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_16.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_16.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_16SegmentBssEnd = .;
        _ganontika_room_16SegmentEnd = .;
    }
    _ganontika_room_16SegmentBssSize = ABSOLUTE( _ganontika_room_16SegmentBssEnd - _ganontika_room_16SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_17SegmentRomStart = _RomSize;
    ..ganontika_room_17 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_17SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_17SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_17.o (.text)
        _ganontika_room_17SegmentTextEnd = .;
    _ganontika_room_17SegmentTextSize = ABSOLUTE( _ganontika_room_17SegmentTextEnd - _ganontika_room_17SegmentTextStart );
        _ganontika_room_17SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_17.o (.data)
        _ganontika_room_17SegmentDataEnd = .;
    _ganontika_room_17SegmentDataSize = ABSOLUTE( _ganontika_room_17SegmentDataEnd - _ganontika_room_17SegmentDataStart );
        _ganontika_room_17SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_17.o (.rodata)
        _ganontika_room_17SegmentRoDataEnd = .;
    _ganontika_room_17SegmentRoDataSize = ABSOLUTE( _ganontika_room_17SegmentRoDataEnd - _ganontika_room_17SegmentRoDataStart );
        _ganontika_room_17SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_17.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_17SegmentSDataEnd = .;
        _ganontika_room_17SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_17.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_17SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_17SegmentOvlEnd - _ganontika_room_17SegmentTextStart );
    _ganontika_room_17SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_17.bss ADDR(..ganontika_room_17) + SIZEOF(..ganontika_room_17) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_17SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_17.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_17.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_17.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_17.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_17SegmentBssEnd = .;
        _ganontika_room_17SegmentEnd = .;
    }
    _ganontika_room_17SegmentBssSize = ABSOLUTE( _ganontika_room_17SegmentBssEnd - _ganontika_room_17SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_18SegmentRomStart = _RomSize;
    ..ganontika_room_18 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_18SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_18SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_18.o (.text)
        _ganontika_room_18SegmentTextEnd = .;
    _ganontika_room_18SegmentTextSize = ABSOLUTE( _ganontika_room_18SegmentTextEnd - _ganontika_room_18SegmentTextStart );
        _ganontika_room_18SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_18.o (.data)
        _ganontika_room_18SegmentDataEnd = .;
    _ganontika_room_18SegmentDataSize = ABSOLUTE( _ganontika_room_18SegmentDataEnd - _ganontika_room_18SegmentDataStart );
        _ganontika_room_18SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_18.o (.rodata)
        _ganontika_room_18SegmentRoDataEnd = .;
    _ganontika_room_18SegmentRoDataSize = ABSOLUTE( _ganontika_room_18SegmentRoDataEnd - _ganontika_room_18SegmentRoDataStart );
        _ganontika_room_18SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_18.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_18SegmentSDataEnd = .;
        _ganontika_room_18SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_18.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_18SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_18SegmentOvlEnd - _ganontika_room_18SegmentTextStart );
    _ganontika_room_18SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_18.bss ADDR(..ganontika_room_18) + SIZEOF(..ganontika_room_18) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_18SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_18.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_18.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_18.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_18.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_18SegmentBssEnd = .;
        _ganontika_room_18SegmentEnd = .;
    }
    _ganontika_room_18SegmentBssSize = ABSOLUTE( _ganontika_room_18SegmentBssEnd - _ganontika_room_18SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontika_room_19SegmentRomStart = _RomSize;
    ..ganontika_room_19 0x03000000 : AT(_RomSize)
    {
        _ganontika_room_19SegmentStart = .;
        . = ALIGN(0x10);
        _ganontika_room_19SegmentTextStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_19.o (.text)
        _ganontika_room_19SegmentTextEnd = .;
    _ganontika_room_19SegmentTextSize = ABSOLUTE( _ganontika_room_19SegmentTextEnd - _ganontika_room_19SegmentTextStart );
        _ganontika_room_19SegmentDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_19.o (.data)
        _ganontika_room_19SegmentDataEnd = .;
    _ganontika_room_19SegmentDataSize = ABSOLUTE( _ganontika_room_19SegmentDataEnd - _ganontika_room_19SegmentDataStart );
        _ganontika_room_19SegmentRoDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_19.o (.rodata)
        _ganontika_room_19SegmentRoDataEnd = .;
    _ganontika_room_19SegmentRoDataSize = ABSOLUTE( _ganontika_room_19SegmentRoDataEnd - _ganontika_room_19SegmentRoDataStart );
        _ganontika_room_19SegmentSDataStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_19.o (.sdata)
        . = ALIGN(0x10);
        _ganontika_room_19SegmentSDataEnd = .;
        _ganontika_room_19SegmentOvlStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_19.o (.ovl)
        . = ALIGN(0x10);
        _ganontika_room_19SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontika_room_19SegmentOvlEnd - _ganontika_room_19SegmentTextStart );
    _ganontika_room_19SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontika_room_19.bss ADDR(..ganontika_room_19) + SIZEOF(..ganontika_room_19) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontika_room_19SegmentBssStart = .;
            build/scenes/dungeons/ganontika/ganontika_room_19.o (.sbss)
            build/scenes/dungeons/ganontika/ganontika_room_19.o (.scommon)
            build/scenes/dungeons/ganontika/ganontika_room_19.o (.bss)
            build/scenes/dungeons/ganontika/ganontika_room_19.o (COMMON)
        . = ALIGN(0x10);
        _ganontika_room_19SegmentBssEnd = .;
        _ganontika_room_19SegmentEnd = .;
    }
    _ganontika_room_19SegmentBssSize = ABSOLUTE( _ganontika_room_19SegmentBssEnd - _ganontika_room_19SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _syotes_sceneSegmentRomStart = _RomSize;
    ..syotes_scene 0x02000000 : AT(_RomSize)
    {
        _syotes_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _syotes_sceneSegmentTextStart = .;
            build/scenes/test_levels/syotes/syotes_scene.o (.text)
        _syotes_sceneSegmentTextEnd = .;
    _syotes_sceneSegmentTextSize = ABSOLUTE( _syotes_sceneSegmentTextEnd - _syotes_sceneSegmentTextStart );
        _syotes_sceneSegmentDataStart = .;
            build/scenes/test_levels/syotes/syotes_scene.o (.data)
        _syotes_sceneSegmentDataEnd = .;
    _syotes_sceneSegmentDataSize = ABSOLUTE( _syotes_sceneSegmentDataEnd - _syotes_sceneSegmentDataStart );
        _syotes_sceneSegmentRoDataStart = .;
            build/scenes/test_levels/syotes/syotes_scene.o (.rodata)
        _syotes_sceneSegmentRoDataEnd = .;
    _syotes_sceneSegmentRoDataSize = ABSOLUTE( _syotes_sceneSegmentRoDataEnd - _syotes_sceneSegmentRoDataStart );
        _syotes_sceneSegmentSDataStart = .;
            build/scenes/test_levels/syotes/syotes_scene.o (.sdata)
        . = ALIGN(0x10);
        _syotes_sceneSegmentSDataEnd = .;
        _syotes_sceneSegmentOvlStart = .;
            build/scenes/test_levels/syotes/syotes_scene.o (.ovl)
        . = ALIGN(0x10);
        _syotes_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _syotes_sceneSegmentOvlEnd - _syotes_sceneSegmentTextStart );
    _syotes_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..syotes_scene.bss ADDR(..syotes_scene) + SIZEOF(..syotes_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _syotes_sceneSegmentBssStart = .;
            build/scenes/test_levels/syotes/syotes_scene.o (.sbss)
            build/scenes/test_levels/syotes/syotes_scene.o (.scommon)
            build/scenes/test_levels/syotes/syotes_scene.o (.bss)
            build/scenes/test_levels/syotes/syotes_scene.o (COMMON)
        . = ALIGN(0x10);
        _syotes_sceneSegmentBssEnd = .;
        _syotes_sceneSegmentEnd = .;
    }
    _syotes_sceneSegmentBssSize = ABSOLUTE( _syotes_sceneSegmentBssEnd - _syotes_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _syotes_room_0SegmentRomStart = _RomSize;
    ..syotes_room_0 0x03000000 : AT(_RomSize)
    {
        _syotes_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _syotes_room_0SegmentTextStart = .;
            build/scenes/test_levels/syotes/syotes_room_0.o (.text)
        _syotes_room_0SegmentTextEnd = .;
    _syotes_room_0SegmentTextSize = ABSOLUTE( _syotes_room_0SegmentTextEnd - _syotes_room_0SegmentTextStart );
        _syotes_room_0SegmentDataStart = .;
            build/scenes/test_levels/syotes/syotes_room_0.o (.data)
        _syotes_room_0SegmentDataEnd = .;
    _syotes_room_0SegmentDataSize = ABSOLUTE( _syotes_room_0SegmentDataEnd - _syotes_room_0SegmentDataStart );
        _syotes_room_0SegmentRoDataStart = .;
            build/scenes/test_levels/syotes/syotes_room_0.o (.rodata)
        _syotes_room_0SegmentRoDataEnd = .;
    _syotes_room_0SegmentRoDataSize = ABSOLUTE( _syotes_room_0SegmentRoDataEnd - _syotes_room_0SegmentRoDataStart );
        _syotes_room_0SegmentSDataStart = .;
            build/scenes/test_levels/syotes/syotes_room_0.o (.sdata)
        . = ALIGN(0x10);
        _syotes_room_0SegmentSDataEnd = .;
        _syotes_room_0SegmentOvlStart = .;
            build/scenes/test_levels/syotes/syotes_room_0.o (.ovl)
        . = ALIGN(0x10);
        _syotes_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _syotes_room_0SegmentOvlEnd - _syotes_room_0SegmentTextStart );
    _syotes_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..syotes_room_0.bss ADDR(..syotes_room_0) + SIZEOF(..syotes_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _syotes_room_0SegmentBssStart = .;
            build/scenes/test_levels/syotes/syotes_room_0.o (.sbss)
            build/scenes/test_levels/syotes/syotes_room_0.o (.scommon)
            build/scenes/test_levels/syotes/syotes_room_0.o (.bss)
            build/scenes/test_levels/syotes/syotes_room_0.o (COMMON)
        . = ALIGN(0x10);
        _syotes_room_0SegmentBssEnd = .;
        _syotes_room_0SegmentEnd = .;
    }
    _syotes_room_0SegmentBssSize = ABSOLUTE( _syotes_room_0SegmentBssEnd - _syotes_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _syotes2_sceneSegmentRomStart = _RomSize;
    ..syotes2_scene 0x02000000 : AT(_RomSize)
    {
        _syotes2_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _syotes2_sceneSegmentTextStart = .;
            build/scenes/test_levels/syotes2/syotes2_scene.o (.text)
        _syotes2_sceneSegmentTextEnd = .;
    _syotes2_sceneSegmentTextSize = ABSOLUTE( _syotes2_sceneSegmentTextEnd - _syotes2_sceneSegmentTextStart );
        _syotes2_sceneSegmentDataStart = .;
            build/scenes/test_levels/syotes2/syotes2_scene.o (.data)
        _syotes2_sceneSegmentDataEnd = .;
    _syotes2_sceneSegmentDataSize = ABSOLUTE( _syotes2_sceneSegmentDataEnd - _syotes2_sceneSegmentDataStart );
        _syotes2_sceneSegmentRoDataStart = .;
            build/scenes/test_levels/syotes2/syotes2_scene.o (.rodata)
        _syotes2_sceneSegmentRoDataEnd = .;
    _syotes2_sceneSegmentRoDataSize = ABSOLUTE( _syotes2_sceneSegmentRoDataEnd - _syotes2_sceneSegmentRoDataStart );
        _syotes2_sceneSegmentSDataStart = .;
            build/scenes/test_levels/syotes2/syotes2_scene.o (.sdata)
        . = ALIGN(0x10);
        _syotes2_sceneSegmentSDataEnd = .;
        _syotes2_sceneSegmentOvlStart = .;
            build/scenes/test_levels/syotes2/syotes2_scene.o (.ovl)
        . = ALIGN(0x10);
        _syotes2_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _syotes2_sceneSegmentOvlEnd - _syotes2_sceneSegmentTextStart );
    _syotes2_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..syotes2_scene.bss ADDR(..syotes2_scene) + SIZEOF(..syotes2_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _syotes2_sceneSegmentBssStart = .;
            build/scenes/test_levels/syotes2/syotes2_scene.o (.sbss)
            build/scenes/test_levels/syotes2/syotes2_scene.o (.scommon)
            build/scenes/test_levels/syotes2/syotes2_scene.o (.bss)
            build/scenes/test_levels/syotes2/syotes2_scene.o (COMMON)
        . = ALIGN(0x10);
        _syotes2_sceneSegmentBssEnd = .;
        _syotes2_sceneSegmentEnd = .;
    }
    _syotes2_sceneSegmentBssSize = ABSOLUTE( _syotes2_sceneSegmentBssEnd - _syotes2_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _syotes2_room_0SegmentRomStart = _RomSize;
    ..syotes2_room_0 0x03000000 : AT(_RomSize)
    {
        _syotes2_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _syotes2_room_0SegmentTextStart = .;
            build/scenes/test_levels/syotes2/syotes2_room_0.o (.text)
        _syotes2_room_0SegmentTextEnd = .;
    _syotes2_room_0SegmentTextSize = ABSOLUTE( _syotes2_room_0SegmentTextEnd - _syotes2_room_0SegmentTextStart );
        _syotes2_room_0SegmentDataStart = .;
            build/scenes/test_levels/syotes2/syotes2_room_0.o (.data)
        _syotes2_room_0SegmentDataEnd = .;
    _syotes2_room_0SegmentDataSize = ABSOLUTE( _syotes2_room_0SegmentDataEnd - _syotes2_room_0SegmentDataStart );
        _syotes2_room_0SegmentRoDataStart = .;
            build/scenes/test_levels/syotes2/syotes2_room_0.o (.rodata)
        _syotes2_room_0SegmentRoDataEnd = .;
    _syotes2_room_0SegmentRoDataSize = ABSOLUTE( _syotes2_room_0SegmentRoDataEnd - _syotes2_room_0SegmentRoDataStart );
        _syotes2_room_0SegmentSDataStart = .;
            build/scenes/test_levels/syotes2/syotes2_room_0.o (.sdata)
        . = ALIGN(0x10);
        _syotes2_room_0SegmentSDataEnd = .;
        _syotes2_room_0SegmentOvlStart = .;
            build/scenes/test_levels/syotes2/syotes2_room_0.o (.ovl)
        . = ALIGN(0x10);
        _syotes2_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _syotes2_room_0SegmentOvlEnd - _syotes2_room_0SegmentTextStart );
    _syotes2_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..syotes2_room_0.bss ADDR(..syotes2_room_0) + SIZEOF(..syotes2_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _syotes2_room_0SegmentBssStart = .;
            build/scenes/test_levels/syotes2/syotes2_room_0.o (.sbss)
            build/scenes/test_levels/syotes2/syotes2_room_0.o (.scommon)
            build/scenes/test_levels/syotes2/syotes2_room_0.o (.bss)
            build/scenes/test_levels/syotes2/syotes2_room_0.o (COMMON)
        . = ALIGN(0x10);
        _syotes2_room_0SegmentBssEnd = .;
        _syotes2_room_0SegmentEnd = .;
    }
    _syotes2_room_0SegmentBssSize = ABSOLUTE( _syotes2_room_0SegmentBssEnd - _syotes2_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _depth_test_sceneSegmentRomStart = _RomSize;
    ..depth_test_scene 0x02000000 : AT(_RomSize)
    {
        _depth_test_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _depth_test_sceneSegmentTextStart = .;
            build/scenes/test_levels/depth_test/depth_test_scene.o (.text)
        _depth_test_sceneSegmentTextEnd = .;
    _depth_test_sceneSegmentTextSize = ABSOLUTE( _depth_test_sceneSegmentTextEnd - _depth_test_sceneSegmentTextStart );
        _depth_test_sceneSegmentDataStart = .;
            build/scenes/test_levels/depth_test/depth_test_scene.o (.data)
        _depth_test_sceneSegmentDataEnd = .;
    _depth_test_sceneSegmentDataSize = ABSOLUTE( _depth_test_sceneSegmentDataEnd - _depth_test_sceneSegmentDataStart );
        _depth_test_sceneSegmentRoDataStart = .;
            build/scenes/test_levels/depth_test/depth_test_scene.o (.rodata)
        _depth_test_sceneSegmentRoDataEnd = .;
    _depth_test_sceneSegmentRoDataSize = ABSOLUTE( _depth_test_sceneSegmentRoDataEnd - _depth_test_sceneSegmentRoDataStart );
        _depth_test_sceneSegmentSDataStart = .;
            build/scenes/test_levels/depth_test/depth_test_scene.o (.sdata)
        . = ALIGN(0x10);
        _depth_test_sceneSegmentSDataEnd = .;
        _depth_test_sceneSegmentOvlStart = .;
            build/scenes/test_levels/depth_test/depth_test_scene.o (.ovl)
        . = ALIGN(0x10);
        _depth_test_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _depth_test_sceneSegmentOvlEnd - _depth_test_sceneSegmentTextStart );
    _depth_test_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..depth_test_scene.bss ADDR(..depth_test_scene) + SIZEOF(..depth_test_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _depth_test_sceneSegmentBssStart = .;
            build/scenes/test_levels/depth_test/depth_test_scene.o (.sbss)
            build/scenes/test_levels/depth_test/depth_test_scene.o (.scommon)
            build/scenes/test_levels/depth_test/depth_test_scene.o (.bss)
            build/scenes/test_levels/depth_test/depth_test_scene.o (COMMON)
        . = ALIGN(0x10);
        _depth_test_sceneSegmentBssEnd = .;
        _depth_test_sceneSegmentEnd = .;
    }
    _depth_test_sceneSegmentBssSize = ABSOLUTE( _depth_test_sceneSegmentBssEnd - _depth_test_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _depth_test_room_0SegmentRomStart = _RomSize;
    ..depth_test_room_0 0x03000000 : AT(_RomSize)
    {
        _depth_test_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _depth_test_room_0SegmentTextStart = .;
            build/scenes/test_levels/depth_test/depth_test_room_0.o (.text)
        _depth_test_room_0SegmentTextEnd = .;
    _depth_test_room_0SegmentTextSize = ABSOLUTE( _depth_test_room_0SegmentTextEnd - _depth_test_room_0SegmentTextStart );
        _depth_test_room_0SegmentDataStart = .;
            build/scenes/test_levels/depth_test/depth_test_room_0.o (.data)
        _depth_test_room_0SegmentDataEnd = .;
    _depth_test_room_0SegmentDataSize = ABSOLUTE( _depth_test_room_0SegmentDataEnd - _depth_test_room_0SegmentDataStart );
        _depth_test_room_0SegmentRoDataStart = .;
            build/scenes/test_levels/depth_test/depth_test_room_0.o (.rodata)
        _depth_test_room_0SegmentRoDataEnd = .;
    _depth_test_room_0SegmentRoDataSize = ABSOLUTE( _depth_test_room_0SegmentRoDataEnd - _depth_test_room_0SegmentRoDataStart );
        _depth_test_room_0SegmentSDataStart = .;
            build/scenes/test_levels/depth_test/depth_test_room_0.o (.sdata)
        . = ALIGN(0x10);
        _depth_test_room_0SegmentSDataEnd = .;
        _depth_test_room_0SegmentOvlStart = .;
            build/scenes/test_levels/depth_test/depth_test_room_0.o (.ovl)
        . = ALIGN(0x10);
        _depth_test_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _depth_test_room_0SegmentOvlEnd - _depth_test_room_0SegmentTextStart );
    _depth_test_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..depth_test_room_0.bss ADDR(..depth_test_room_0) + SIZEOF(..depth_test_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _depth_test_room_0SegmentBssStart = .;
            build/scenes/test_levels/depth_test/depth_test_room_0.o (.sbss)
            build/scenes/test_levels/depth_test/depth_test_room_0.o (.scommon)
            build/scenes/test_levels/depth_test/depth_test_room_0.o (.bss)
            build/scenes/test_levels/depth_test/depth_test_room_0.o (COMMON)
        . = ALIGN(0x10);
        _depth_test_room_0SegmentBssEnd = .;
        _depth_test_room_0SegmentEnd = .;
    }
    _depth_test_room_0SegmentBssSize = ABSOLUTE( _depth_test_room_0SegmentBssEnd - _depth_test_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot00_sceneSegmentRomStart = _RomSize;
    ..spot00_scene 0x02000000 : AT(_RomSize)
    {
        _spot00_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot00_sceneSegmentTextStart = .;
            build/scenes/overworld/spot00/spot00_scene.o (.text)
        _spot00_sceneSegmentTextEnd = .;
    _spot00_sceneSegmentTextSize = ABSOLUTE( _spot00_sceneSegmentTextEnd - _spot00_sceneSegmentTextStart );
        _spot00_sceneSegmentDataStart = .;
            build/scenes/overworld/spot00/spot00_scene.o (.data)
        _spot00_sceneSegmentDataEnd = .;
    _spot00_sceneSegmentDataSize = ABSOLUTE( _spot00_sceneSegmentDataEnd - _spot00_sceneSegmentDataStart );
        _spot00_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot00/spot00_scene.o (.rodata)
        _spot00_sceneSegmentRoDataEnd = .;
    _spot00_sceneSegmentRoDataSize = ABSOLUTE( _spot00_sceneSegmentRoDataEnd - _spot00_sceneSegmentRoDataStart );
        _spot00_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot00/spot00_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot00_sceneSegmentSDataEnd = .;
        _spot00_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot00/spot00_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot00_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot00_sceneSegmentOvlEnd - _spot00_sceneSegmentTextStart );
    _spot00_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot00_scene.bss ADDR(..spot00_scene) + SIZEOF(..spot00_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot00_sceneSegmentBssStart = .;
            build/scenes/overworld/spot00/spot00_scene.o (.sbss)
            build/scenes/overworld/spot00/spot00_scene.o (.scommon)
            build/scenes/overworld/spot00/spot00_scene.o (.bss)
            build/scenes/overworld/spot00/spot00_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot00_sceneSegmentBssEnd = .;
        _spot00_sceneSegmentEnd = .;
    }
    _spot00_sceneSegmentBssSize = ABSOLUTE( _spot00_sceneSegmentBssEnd - _spot00_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot00_room_0SegmentRomStart = _RomSize;
    ..spot00_room_0 0x03000000 : AT(_RomSize)
    {
        _spot00_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot00_room_0SegmentTextStart = .;
            build/scenes/overworld/spot00/spot00_room_0.o (.text)
        _spot00_room_0SegmentTextEnd = .;
    _spot00_room_0SegmentTextSize = ABSOLUTE( _spot00_room_0SegmentTextEnd - _spot00_room_0SegmentTextStart );
        _spot00_room_0SegmentDataStart = .;
            build/scenes/overworld/spot00/spot00_room_0.o (.data)
        _spot00_room_0SegmentDataEnd = .;
    _spot00_room_0SegmentDataSize = ABSOLUTE( _spot00_room_0SegmentDataEnd - _spot00_room_0SegmentDataStart );
        _spot00_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot00/spot00_room_0.o (.rodata)
        _spot00_room_0SegmentRoDataEnd = .;
    _spot00_room_0SegmentRoDataSize = ABSOLUTE( _spot00_room_0SegmentRoDataEnd - _spot00_room_0SegmentRoDataStart );
        _spot00_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot00/spot00_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot00_room_0SegmentSDataEnd = .;
        _spot00_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot00/spot00_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot00_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot00_room_0SegmentOvlEnd - _spot00_room_0SegmentTextStart );
    _spot00_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot00_room_0.bss ADDR(..spot00_room_0) + SIZEOF(..spot00_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot00_room_0SegmentBssStart = .;
            build/scenes/overworld/spot00/spot00_room_0.o (.sbss)
            build/scenes/overworld/spot00/spot00_room_0.o (.scommon)
            build/scenes/overworld/spot00/spot00_room_0.o (.bss)
            build/scenes/overworld/spot00/spot00_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot00_room_0SegmentBssEnd = .;
        _spot00_room_0SegmentEnd = .;
    }
    _spot00_room_0SegmentBssSize = ABSOLUTE( _spot00_room_0SegmentBssEnd - _spot00_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot01_sceneSegmentRomStart = _RomSize;
    ..spot01_scene 0x02000000 : AT(_RomSize)
    {
        _spot01_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot01_sceneSegmentTextStart = .;
            build/scenes/overworld/spot01/spot01_scene.o (.text)
        _spot01_sceneSegmentTextEnd = .;
    _spot01_sceneSegmentTextSize = ABSOLUTE( _spot01_sceneSegmentTextEnd - _spot01_sceneSegmentTextStart );
        _spot01_sceneSegmentDataStart = .;
            build/scenes/overworld/spot01/spot01_scene.o (.data)
        _spot01_sceneSegmentDataEnd = .;
    _spot01_sceneSegmentDataSize = ABSOLUTE( _spot01_sceneSegmentDataEnd - _spot01_sceneSegmentDataStart );
        _spot01_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot01/spot01_scene.o (.rodata)
        _spot01_sceneSegmentRoDataEnd = .;
    _spot01_sceneSegmentRoDataSize = ABSOLUTE( _spot01_sceneSegmentRoDataEnd - _spot01_sceneSegmentRoDataStart );
        _spot01_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot01/spot01_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot01_sceneSegmentSDataEnd = .;
        _spot01_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot01/spot01_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot01_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot01_sceneSegmentOvlEnd - _spot01_sceneSegmentTextStart );
    _spot01_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot01_scene.bss ADDR(..spot01_scene) + SIZEOF(..spot01_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot01_sceneSegmentBssStart = .;
            build/scenes/overworld/spot01/spot01_scene.o (.sbss)
            build/scenes/overworld/spot01/spot01_scene.o (.scommon)
            build/scenes/overworld/spot01/spot01_scene.o (.bss)
            build/scenes/overworld/spot01/spot01_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot01_sceneSegmentBssEnd = .;
        _spot01_sceneSegmentEnd = .;
    }
    _spot01_sceneSegmentBssSize = ABSOLUTE( _spot01_sceneSegmentBssEnd - _spot01_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot01_room_0SegmentRomStart = _RomSize;
    ..spot01_room_0 0x03000000 : AT(_RomSize)
    {
        _spot01_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot01_room_0SegmentTextStart = .;
            build/scenes/overworld/spot01/spot01_room_0.o (.text)
        _spot01_room_0SegmentTextEnd = .;
    _spot01_room_0SegmentTextSize = ABSOLUTE( _spot01_room_0SegmentTextEnd - _spot01_room_0SegmentTextStart );
        _spot01_room_0SegmentDataStart = .;
            build/scenes/overworld/spot01/spot01_room_0.o (.data)
        _spot01_room_0SegmentDataEnd = .;
    _spot01_room_0SegmentDataSize = ABSOLUTE( _spot01_room_0SegmentDataEnd - _spot01_room_0SegmentDataStart );
        _spot01_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot01/spot01_room_0.o (.rodata)
        _spot01_room_0SegmentRoDataEnd = .;
    _spot01_room_0SegmentRoDataSize = ABSOLUTE( _spot01_room_0SegmentRoDataEnd - _spot01_room_0SegmentRoDataStart );
        _spot01_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot01/spot01_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot01_room_0SegmentSDataEnd = .;
        _spot01_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot01/spot01_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot01_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot01_room_0SegmentOvlEnd - _spot01_room_0SegmentTextStart );
    _spot01_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot01_room_0.bss ADDR(..spot01_room_0) + SIZEOF(..spot01_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot01_room_0SegmentBssStart = .;
            build/scenes/overworld/spot01/spot01_room_0.o (.sbss)
            build/scenes/overworld/spot01/spot01_room_0.o (.scommon)
            build/scenes/overworld/spot01/spot01_room_0.o (.bss)
            build/scenes/overworld/spot01/spot01_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot01_room_0SegmentBssEnd = .;
        _spot01_room_0SegmentEnd = .;
    }
    _spot01_room_0SegmentBssSize = ABSOLUTE( _spot01_room_0SegmentBssEnd - _spot01_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot02_sceneSegmentRomStart = _RomSize;
    ..spot02_scene 0x02000000 : AT(_RomSize)
    {
        _spot02_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot02_sceneSegmentTextStart = .;
            build/scenes/overworld/spot02/spot02_scene.o (.text)
        _spot02_sceneSegmentTextEnd = .;
    _spot02_sceneSegmentTextSize = ABSOLUTE( _spot02_sceneSegmentTextEnd - _spot02_sceneSegmentTextStart );
        _spot02_sceneSegmentDataStart = .;
            build/scenes/overworld/spot02/spot02_scene.o (.data)
        _spot02_sceneSegmentDataEnd = .;
    _spot02_sceneSegmentDataSize = ABSOLUTE( _spot02_sceneSegmentDataEnd - _spot02_sceneSegmentDataStart );
        _spot02_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot02/spot02_scene.o (.rodata)
        _spot02_sceneSegmentRoDataEnd = .;
    _spot02_sceneSegmentRoDataSize = ABSOLUTE( _spot02_sceneSegmentRoDataEnd - _spot02_sceneSegmentRoDataStart );
        _spot02_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot02/spot02_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot02_sceneSegmentSDataEnd = .;
        _spot02_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot02/spot02_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot02_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot02_sceneSegmentOvlEnd - _spot02_sceneSegmentTextStart );
    _spot02_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot02_scene.bss ADDR(..spot02_scene) + SIZEOF(..spot02_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot02_sceneSegmentBssStart = .;
            build/scenes/overworld/spot02/spot02_scene.o (.sbss)
            build/scenes/overworld/spot02/spot02_scene.o (.scommon)
            build/scenes/overworld/spot02/spot02_scene.o (.bss)
            build/scenes/overworld/spot02/spot02_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot02_sceneSegmentBssEnd = .;
        _spot02_sceneSegmentEnd = .;
    }
    _spot02_sceneSegmentBssSize = ABSOLUTE( _spot02_sceneSegmentBssEnd - _spot02_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot02_room_0SegmentRomStart = _RomSize;
    ..spot02_room_0 0x03000000 : AT(_RomSize)
    {
        _spot02_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot02_room_0SegmentTextStart = .;
            build/scenes/overworld/spot02/spot02_room_0.o (.text)
        _spot02_room_0SegmentTextEnd = .;
    _spot02_room_0SegmentTextSize = ABSOLUTE( _spot02_room_0SegmentTextEnd - _spot02_room_0SegmentTextStart );
        _spot02_room_0SegmentDataStart = .;
            build/scenes/overworld/spot02/spot02_room_0.o (.data)
        _spot02_room_0SegmentDataEnd = .;
    _spot02_room_0SegmentDataSize = ABSOLUTE( _spot02_room_0SegmentDataEnd - _spot02_room_0SegmentDataStart );
        _spot02_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot02/spot02_room_0.o (.rodata)
        _spot02_room_0SegmentRoDataEnd = .;
    _spot02_room_0SegmentRoDataSize = ABSOLUTE( _spot02_room_0SegmentRoDataEnd - _spot02_room_0SegmentRoDataStart );
        _spot02_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot02/spot02_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot02_room_0SegmentSDataEnd = .;
        _spot02_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot02/spot02_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot02_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot02_room_0SegmentOvlEnd - _spot02_room_0SegmentTextStart );
    _spot02_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot02_room_0.bss ADDR(..spot02_room_0) + SIZEOF(..spot02_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot02_room_0SegmentBssStart = .;
            build/scenes/overworld/spot02/spot02_room_0.o (.sbss)
            build/scenes/overworld/spot02/spot02_room_0.o (.scommon)
            build/scenes/overworld/spot02/spot02_room_0.o (.bss)
            build/scenes/overworld/spot02/spot02_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot02_room_0SegmentBssEnd = .;
        _spot02_room_0SegmentEnd = .;
    }
    _spot02_room_0SegmentBssSize = ABSOLUTE( _spot02_room_0SegmentBssEnd - _spot02_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot02_room_1SegmentRomStart = _RomSize;
    ..spot02_room_1 0x03000000 : AT(_RomSize)
    {
        _spot02_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _spot02_room_1SegmentTextStart = .;
            build/scenes/overworld/spot02/spot02_room_1.o (.text)
        _spot02_room_1SegmentTextEnd = .;
    _spot02_room_1SegmentTextSize = ABSOLUTE( _spot02_room_1SegmentTextEnd - _spot02_room_1SegmentTextStart );
        _spot02_room_1SegmentDataStart = .;
            build/scenes/overworld/spot02/spot02_room_1.o (.data)
        _spot02_room_1SegmentDataEnd = .;
    _spot02_room_1SegmentDataSize = ABSOLUTE( _spot02_room_1SegmentDataEnd - _spot02_room_1SegmentDataStart );
        _spot02_room_1SegmentRoDataStart = .;
            build/scenes/overworld/spot02/spot02_room_1.o (.rodata)
        _spot02_room_1SegmentRoDataEnd = .;
    _spot02_room_1SegmentRoDataSize = ABSOLUTE( _spot02_room_1SegmentRoDataEnd - _spot02_room_1SegmentRoDataStart );
        _spot02_room_1SegmentSDataStart = .;
            build/scenes/overworld/spot02/spot02_room_1.o (.sdata)
        . = ALIGN(0x10);
        _spot02_room_1SegmentSDataEnd = .;
        _spot02_room_1SegmentOvlStart = .;
            build/scenes/overworld/spot02/spot02_room_1.o (.ovl)
        . = ALIGN(0x10);
        _spot02_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _spot02_room_1SegmentOvlEnd - _spot02_room_1SegmentTextStart );
    _spot02_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot02_room_1.bss ADDR(..spot02_room_1) + SIZEOF(..spot02_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot02_room_1SegmentBssStart = .;
            build/scenes/overworld/spot02/spot02_room_1.o (.sbss)
            build/scenes/overworld/spot02/spot02_room_1.o (.scommon)
            build/scenes/overworld/spot02/spot02_room_1.o (.bss)
            build/scenes/overworld/spot02/spot02_room_1.o (COMMON)
        . = ALIGN(0x10);
        _spot02_room_1SegmentBssEnd = .;
        _spot02_room_1SegmentEnd = .;
    }
    _spot02_room_1SegmentBssSize = ABSOLUTE( _spot02_room_1SegmentBssEnd - _spot02_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot03_sceneSegmentRomStart = _RomSize;
    ..spot03_scene 0x02000000 : AT(_RomSize)
    {
        _spot03_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot03_sceneSegmentTextStart = .;
            build/scenes/overworld/spot03/spot03_scene.o (.text)
        _spot03_sceneSegmentTextEnd = .;
    _spot03_sceneSegmentTextSize = ABSOLUTE( _spot03_sceneSegmentTextEnd - _spot03_sceneSegmentTextStart );
        _spot03_sceneSegmentDataStart = .;
            build/scenes/overworld/spot03/spot03_scene.o (.data)
        _spot03_sceneSegmentDataEnd = .;
    _spot03_sceneSegmentDataSize = ABSOLUTE( _spot03_sceneSegmentDataEnd - _spot03_sceneSegmentDataStart );
        _spot03_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot03/spot03_scene.o (.rodata)
        _spot03_sceneSegmentRoDataEnd = .;
    _spot03_sceneSegmentRoDataSize = ABSOLUTE( _spot03_sceneSegmentRoDataEnd - _spot03_sceneSegmentRoDataStart );
        _spot03_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot03/spot03_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot03_sceneSegmentSDataEnd = .;
        _spot03_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot03/spot03_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot03_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot03_sceneSegmentOvlEnd - _spot03_sceneSegmentTextStart );
    _spot03_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot03_scene.bss ADDR(..spot03_scene) + SIZEOF(..spot03_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot03_sceneSegmentBssStart = .;
            build/scenes/overworld/spot03/spot03_scene.o (.sbss)
            build/scenes/overworld/spot03/spot03_scene.o (.scommon)
            build/scenes/overworld/spot03/spot03_scene.o (.bss)
            build/scenes/overworld/spot03/spot03_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot03_sceneSegmentBssEnd = .;
        _spot03_sceneSegmentEnd = .;
    }
    _spot03_sceneSegmentBssSize = ABSOLUTE( _spot03_sceneSegmentBssEnd - _spot03_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot03_room_0SegmentRomStart = _RomSize;
    ..spot03_room_0 0x03000000 : AT(_RomSize)
    {
        _spot03_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot03_room_0SegmentTextStart = .;
            build/scenes/overworld/spot03/spot03_room_0.o (.text)
        _spot03_room_0SegmentTextEnd = .;
    _spot03_room_0SegmentTextSize = ABSOLUTE( _spot03_room_0SegmentTextEnd - _spot03_room_0SegmentTextStart );
        _spot03_room_0SegmentDataStart = .;
            build/scenes/overworld/spot03/spot03_room_0.o (.data)
        _spot03_room_0SegmentDataEnd = .;
    _spot03_room_0SegmentDataSize = ABSOLUTE( _spot03_room_0SegmentDataEnd - _spot03_room_0SegmentDataStart );
        _spot03_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot03/spot03_room_0.o (.rodata)
        _spot03_room_0SegmentRoDataEnd = .;
    _spot03_room_0SegmentRoDataSize = ABSOLUTE( _spot03_room_0SegmentRoDataEnd - _spot03_room_0SegmentRoDataStart );
        _spot03_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot03/spot03_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot03_room_0SegmentSDataEnd = .;
        _spot03_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot03/spot03_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot03_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot03_room_0SegmentOvlEnd - _spot03_room_0SegmentTextStart );
    _spot03_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot03_room_0.bss ADDR(..spot03_room_0) + SIZEOF(..spot03_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot03_room_0SegmentBssStart = .;
            build/scenes/overworld/spot03/spot03_room_0.o (.sbss)
            build/scenes/overworld/spot03/spot03_room_0.o (.scommon)
            build/scenes/overworld/spot03/spot03_room_0.o (.bss)
            build/scenes/overworld/spot03/spot03_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot03_room_0SegmentBssEnd = .;
        _spot03_room_0SegmentEnd = .;
    }
    _spot03_room_0SegmentBssSize = ABSOLUTE( _spot03_room_0SegmentBssEnd - _spot03_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot03_room_1SegmentRomStart = _RomSize;
    ..spot03_room_1 0x03000000 : AT(_RomSize)
    {
        _spot03_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _spot03_room_1SegmentTextStart = .;
            build/scenes/overworld/spot03/spot03_room_1.o (.text)
        _spot03_room_1SegmentTextEnd = .;
    _spot03_room_1SegmentTextSize = ABSOLUTE( _spot03_room_1SegmentTextEnd - _spot03_room_1SegmentTextStart );
        _spot03_room_1SegmentDataStart = .;
            build/scenes/overworld/spot03/spot03_room_1.o (.data)
        _spot03_room_1SegmentDataEnd = .;
    _spot03_room_1SegmentDataSize = ABSOLUTE( _spot03_room_1SegmentDataEnd - _spot03_room_1SegmentDataStart );
        _spot03_room_1SegmentRoDataStart = .;
            build/scenes/overworld/spot03/spot03_room_1.o (.rodata)
        _spot03_room_1SegmentRoDataEnd = .;
    _spot03_room_1SegmentRoDataSize = ABSOLUTE( _spot03_room_1SegmentRoDataEnd - _spot03_room_1SegmentRoDataStart );
        _spot03_room_1SegmentSDataStart = .;
            build/scenes/overworld/spot03/spot03_room_1.o (.sdata)
        . = ALIGN(0x10);
        _spot03_room_1SegmentSDataEnd = .;
        _spot03_room_1SegmentOvlStart = .;
            build/scenes/overworld/spot03/spot03_room_1.o (.ovl)
        . = ALIGN(0x10);
        _spot03_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _spot03_room_1SegmentOvlEnd - _spot03_room_1SegmentTextStart );
    _spot03_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot03_room_1.bss ADDR(..spot03_room_1) + SIZEOF(..spot03_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot03_room_1SegmentBssStart = .;
            build/scenes/overworld/spot03/spot03_room_1.o (.sbss)
            build/scenes/overworld/spot03/spot03_room_1.o (.scommon)
            build/scenes/overworld/spot03/spot03_room_1.o (.bss)
            build/scenes/overworld/spot03/spot03_room_1.o (COMMON)
        . = ALIGN(0x10);
        _spot03_room_1SegmentBssEnd = .;
        _spot03_room_1SegmentEnd = .;
    }
    _spot03_room_1SegmentBssSize = ABSOLUTE( _spot03_room_1SegmentBssEnd - _spot03_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot04_sceneSegmentRomStart = _RomSize;
    ..spot04_scene 0x02000000 : AT(_RomSize)
    {
        _spot04_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot04_sceneSegmentTextStart = .;
            build/scenes/overworld/spot04/spot04_scene.o (.text)
        _spot04_sceneSegmentTextEnd = .;
    _spot04_sceneSegmentTextSize = ABSOLUTE( _spot04_sceneSegmentTextEnd - _spot04_sceneSegmentTextStart );
        _spot04_sceneSegmentDataStart = .;
            build/scenes/overworld/spot04/spot04_scene.o (.data)
        _spot04_sceneSegmentDataEnd = .;
    _spot04_sceneSegmentDataSize = ABSOLUTE( _spot04_sceneSegmentDataEnd - _spot04_sceneSegmentDataStart );
        _spot04_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot04/spot04_scene.o (.rodata)
        _spot04_sceneSegmentRoDataEnd = .;
    _spot04_sceneSegmentRoDataSize = ABSOLUTE( _spot04_sceneSegmentRoDataEnd - _spot04_sceneSegmentRoDataStart );
        _spot04_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot04/spot04_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot04_sceneSegmentSDataEnd = .;
        _spot04_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot04/spot04_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot04_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot04_sceneSegmentOvlEnd - _spot04_sceneSegmentTextStart );
    _spot04_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot04_scene.bss ADDR(..spot04_scene) + SIZEOF(..spot04_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot04_sceneSegmentBssStart = .;
            build/scenes/overworld/spot04/spot04_scene.o (.sbss)
            build/scenes/overworld/spot04/spot04_scene.o (.scommon)
            build/scenes/overworld/spot04/spot04_scene.o (.bss)
            build/scenes/overworld/spot04/spot04_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot04_sceneSegmentBssEnd = .;
        _spot04_sceneSegmentEnd = .;
    }
    _spot04_sceneSegmentBssSize = ABSOLUTE( _spot04_sceneSegmentBssEnd - _spot04_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot04_room_0SegmentRomStart = _RomSize;
    ..spot04_room_0 0x03000000 : AT(_RomSize)
    {
        _spot04_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot04_room_0SegmentTextStart = .;
            build/scenes/overworld/spot04/spot04_room_0.o (.text)
        _spot04_room_0SegmentTextEnd = .;
    _spot04_room_0SegmentTextSize = ABSOLUTE( _spot04_room_0SegmentTextEnd - _spot04_room_0SegmentTextStart );
        _spot04_room_0SegmentDataStart = .;
            build/scenes/overworld/spot04/spot04_room_0.o (.data)
        _spot04_room_0SegmentDataEnd = .;
    _spot04_room_0SegmentDataSize = ABSOLUTE( _spot04_room_0SegmentDataEnd - _spot04_room_0SegmentDataStart );
        _spot04_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot04/spot04_room_0.o (.rodata)
        _spot04_room_0SegmentRoDataEnd = .;
    _spot04_room_0SegmentRoDataSize = ABSOLUTE( _spot04_room_0SegmentRoDataEnd - _spot04_room_0SegmentRoDataStart );
        _spot04_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot04/spot04_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot04_room_0SegmentSDataEnd = .;
        _spot04_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot04/spot04_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot04_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot04_room_0SegmentOvlEnd - _spot04_room_0SegmentTextStart );
    _spot04_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot04_room_0.bss ADDR(..spot04_room_0) + SIZEOF(..spot04_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot04_room_0SegmentBssStart = .;
            build/scenes/overworld/spot04/spot04_room_0.o (.sbss)
            build/scenes/overworld/spot04/spot04_room_0.o (.scommon)
            build/scenes/overworld/spot04/spot04_room_0.o (.bss)
            build/scenes/overworld/spot04/spot04_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot04_room_0SegmentBssEnd = .;
        _spot04_room_0SegmentEnd = .;
    }
    _spot04_room_0SegmentBssSize = ABSOLUTE( _spot04_room_0SegmentBssEnd - _spot04_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot04_room_1SegmentRomStart = _RomSize;
    ..spot04_room_1 0x03000000 : AT(_RomSize)
    {
        _spot04_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _spot04_room_1SegmentTextStart = .;
            build/scenes/overworld/spot04/spot04_room_1.o (.text)
        _spot04_room_1SegmentTextEnd = .;
    _spot04_room_1SegmentTextSize = ABSOLUTE( _spot04_room_1SegmentTextEnd - _spot04_room_1SegmentTextStart );
        _spot04_room_1SegmentDataStart = .;
            build/scenes/overworld/spot04/spot04_room_1.o (.data)
        _spot04_room_1SegmentDataEnd = .;
    _spot04_room_1SegmentDataSize = ABSOLUTE( _spot04_room_1SegmentDataEnd - _spot04_room_1SegmentDataStart );
        _spot04_room_1SegmentRoDataStart = .;
            build/scenes/overworld/spot04/spot04_room_1.o (.rodata)
        _spot04_room_1SegmentRoDataEnd = .;
    _spot04_room_1SegmentRoDataSize = ABSOLUTE( _spot04_room_1SegmentRoDataEnd - _spot04_room_1SegmentRoDataStart );
        _spot04_room_1SegmentSDataStart = .;
            build/scenes/overworld/spot04/spot04_room_1.o (.sdata)
        . = ALIGN(0x10);
        _spot04_room_1SegmentSDataEnd = .;
        _spot04_room_1SegmentOvlStart = .;
            build/scenes/overworld/spot04/spot04_room_1.o (.ovl)
        . = ALIGN(0x10);
        _spot04_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _spot04_room_1SegmentOvlEnd - _spot04_room_1SegmentTextStart );
    _spot04_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot04_room_1.bss ADDR(..spot04_room_1) + SIZEOF(..spot04_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot04_room_1SegmentBssStart = .;
            build/scenes/overworld/spot04/spot04_room_1.o (.sbss)
            build/scenes/overworld/spot04/spot04_room_1.o (.scommon)
            build/scenes/overworld/spot04/spot04_room_1.o (.bss)
            build/scenes/overworld/spot04/spot04_room_1.o (COMMON)
        . = ALIGN(0x10);
        _spot04_room_1SegmentBssEnd = .;
        _spot04_room_1SegmentEnd = .;
    }
    _spot04_room_1SegmentBssSize = ABSOLUTE( _spot04_room_1SegmentBssEnd - _spot04_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot04_room_2SegmentRomStart = _RomSize;
    ..spot04_room_2 0x03000000 : AT(_RomSize)
    {
        _spot04_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _spot04_room_2SegmentTextStart = .;
            build/scenes/overworld/spot04/spot04_room_2.o (.text)
        _spot04_room_2SegmentTextEnd = .;
    _spot04_room_2SegmentTextSize = ABSOLUTE( _spot04_room_2SegmentTextEnd - _spot04_room_2SegmentTextStart );
        _spot04_room_2SegmentDataStart = .;
            build/scenes/overworld/spot04/spot04_room_2.o (.data)
        _spot04_room_2SegmentDataEnd = .;
    _spot04_room_2SegmentDataSize = ABSOLUTE( _spot04_room_2SegmentDataEnd - _spot04_room_2SegmentDataStart );
        _spot04_room_2SegmentRoDataStart = .;
            build/scenes/overworld/spot04/spot04_room_2.o (.rodata)
        _spot04_room_2SegmentRoDataEnd = .;
    _spot04_room_2SegmentRoDataSize = ABSOLUTE( _spot04_room_2SegmentRoDataEnd - _spot04_room_2SegmentRoDataStart );
        _spot04_room_2SegmentSDataStart = .;
            build/scenes/overworld/spot04/spot04_room_2.o (.sdata)
        . = ALIGN(0x10);
        _spot04_room_2SegmentSDataEnd = .;
        _spot04_room_2SegmentOvlStart = .;
            build/scenes/overworld/spot04/spot04_room_2.o (.ovl)
        . = ALIGN(0x10);
        _spot04_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _spot04_room_2SegmentOvlEnd - _spot04_room_2SegmentTextStart );
    _spot04_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot04_room_2.bss ADDR(..spot04_room_2) + SIZEOF(..spot04_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot04_room_2SegmentBssStart = .;
            build/scenes/overworld/spot04/spot04_room_2.o (.sbss)
            build/scenes/overworld/spot04/spot04_room_2.o (.scommon)
            build/scenes/overworld/spot04/spot04_room_2.o (.bss)
            build/scenes/overworld/spot04/spot04_room_2.o (COMMON)
        . = ALIGN(0x10);
        _spot04_room_2SegmentBssEnd = .;
        _spot04_room_2SegmentEnd = .;
    }
    _spot04_room_2SegmentBssSize = ABSOLUTE( _spot04_room_2SegmentBssEnd - _spot04_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot05_sceneSegmentRomStart = _RomSize;
    ..spot05_scene 0x02000000 : AT(_RomSize)
    {
        _spot05_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot05_sceneSegmentTextStart = .;
            build/scenes/overworld/spot05/spot05_scene.o (.text)
        _spot05_sceneSegmentTextEnd = .;
    _spot05_sceneSegmentTextSize = ABSOLUTE( _spot05_sceneSegmentTextEnd - _spot05_sceneSegmentTextStart );
        _spot05_sceneSegmentDataStart = .;
            build/scenes/overworld/spot05/spot05_scene.o (.data)
        _spot05_sceneSegmentDataEnd = .;
    _spot05_sceneSegmentDataSize = ABSOLUTE( _spot05_sceneSegmentDataEnd - _spot05_sceneSegmentDataStart );
        _spot05_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot05/spot05_scene.o (.rodata)
        _spot05_sceneSegmentRoDataEnd = .;
    _spot05_sceneSegmentRoDataSize = ABSOLUTE( _spot05_sceneSegmentRoDataEnd - _spot05_sceneSegmentRoDataStart );
        _spot05_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot05/spot05_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot05_sceneSegmentSDataEnd = .;
        _spot05_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot05/spot05_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot05_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot05_sceneSegmentOvlEnd - _spot05_sceneSegmentTextStart );
    _spot05_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot05_scene.bss ADDR(..spot05_scene) + SIZEOF(..spot05_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot05_sceneSegmentBssStart = .;
            build/scenes/overworld/spot05/spot05_scene.o (.sbss)
            build/scenes/overworld/spot05/spot05_scene.o (.scommon)
            build/scenes/overworld/spot05/spot05_scene.o (.bss)
            build/scenes/overworld/spot05/spot05_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot05_sceneSegmentBssEnd = .;
        _spot05_sceneSegmentEnd = .;
    }
    _spot05_sceneSegmentBssSize = ABSOLUTE( _spot05_sceneSegmentBssEnd - _spot05_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot05_room_0SegmentRomStart = _RomSize;
    ..spot05_room_0 0x03000000 : AT(_RomSize)
    {
        _spot05_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot05_room_0SegmentTextStart = .;
            build/scenes/overworld/spot05/spot05_room_0.o (.text)
        _spot05_room_0SegmentTextEnd = .;
    _spot05_room_0SegmentTextSize = ABSOLUTE( _spot05_room_0SegmentTextEnd - _spot05_room_0SegmentTextStart );
        _spot05_room_0SegmentDataStart = .;
            build/scenes/overworld/spot05/spot05_room_0.o (.data)
        _spot05_room_0SegmentDataEnd = .;
    _spot05_room_0SegmentDataSize = ABSOLUTE( _spot05_room_0SegmentDataEnd - _spot05_room_0SegmentDataStart );
        _spot05_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot05/spot05_room_0.o (.rodata)
        _spot05_room_0SegmentRoDataEnd = .;
    _spot05_room_0SegmentRoDataSize = ABSOLUTE( _spot05_room_0SegmentRoDataEnd - _spot05_room_0SegmentRoDataStart );
        _spot05_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot05/spot05_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot05_room_0SegmentSDataEnd = .;
        _spot05_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot05/spot05_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot05_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot05_room_0SegmentOvlEnd - _spot05_room_0SegmentTextStart );
    _spot05_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot05_room_0.bss ADDR(..spot05_room_0) + SIZEOF(..spot05_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot05_room_0SegmentBssStart = .;
            build/scenes/overworld/spot05/spot05_room_0.o (.sbss)
            build/scenes/overworld/spot05/spot05_room_0.o (.scommon)
            build/scenes/overworld/spot05/spot05_room_0.o (.bss)
            build/scenes/overworld/spot05/spot05_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot05_room_0SegmentBssEnd = .;
        _spot05_room_0SegmentEnd = .;
    }
    _spot05_room_0SegmentBssSize = ABSOLUTE( _spot05_room_0SegmentBssEnd - _spot05_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot06_sceneSegmentRomStart = _RomSize;
    ..spot06_scene 0x02000000 : AT(_RomSize)
    {
        _spot06_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot06_sceneSegmentTextStart = .;
            build/scenes/overworld/spot06/spot06_scene.o (.text)
        _spot06_sceneSegmentTextEnd = .;
    _spot06_sceneSegmentTextSize = ABSOLUTE( _spot06_sceneSegmentTextEnd - _spot06_sceneSegmentTextStart );
        _spot06_sceneSegmentDataStart = .;
            build/scenes/overworld/spot06/spot06_scene.o (.data)
        _spot06_sceneSegmentDataEnd = .;
    _spot06_sceneSegmentDataSize = ABSOLUTE( _spot06_sceneSegmentDataEnd - _spot06_sceneSegmentDataStart );
        _spot06_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot06/spot06_scene.o (.rodata)
        _spot06_sceneSegmentRoDataEnd = .;
    _spot06_sceneSegmentRoDataSize = ABSOLUTE( _spot06_sceneSegmentRoDataEnd - _spot06_sceneSegmentRoDataStart );
        _spot06_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot06/spot06_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot06_sceneSegmentSDataEnd = .;
        _spot06_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot06/spot06_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot06_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot06_sceneSegmentOvlEnd - _spot06_sceneSegmentTextStart );
    _spot06_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot06_scene.bss ADDR(..spot06_scene) + SIZEOF(..spot06_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot06_sceneSegmentBssStart = .;
            build/scenes/overworld/spot06/spot06_scene.o (.sbss)
            build/scenes/overworld/spot06/spot06_scene.o (.scommon)
            build/scenes/overworld/spot06/spot06_scene.o (.bss)
            build/scenes/overworld/spot06/spot06_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot06_sceneSegmentBssEnd = .;
        _spot06_sceneSegmentEnd = .;
    }
    _spot06_sceneSegmentBssSize = ABSOLUTE( _spot06_sceneSegmentBssEnd - _spot06_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot06_room_0SegmentRomStart = _RomSize;
    ..spot06_room_0 0x03000000 : AT(_RomSize)
    {
        _spot06_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot06_room_0SegmentTextStart = .;
            build/scenes/overworld/spot06/spot06_room_0.o (.text)
        _spot06_room_0SegmentTextEnd = .;
    _spot06_room_0SegmentTextSize = ABSOLUTE( _spot06_room_0SegmentTextEnd - _spot06_room_0SegmentTextStart );
        _spot06_room_0SegmentDataStart = .;
            build/scenes/overworld/spot06/spot06_room_0.o (.data)
        _spot06_room_0SegmentDataEnd = .;
    _spot06_room_0SegmentDataSize = ABSOLUTE( _spot06_room_0SegmentDataEnd - _spot06_room_0SegmentDataStart );
        _spot06_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot06/spot06_room_0.o (.rodata)
        _spot06_room_0SegmentRoDataEnd = .;
    _spot06_room_0SegmentRoDataSize = ABSOLUTE( _spot06_room_0SegmentRoDataEnd - _spot06_room_0SegmentRoDataStart );
        _spot06_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot06/spot06_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot06_room_0SegmentSDataEnd = .;
        _spot06_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot06/spot06_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot06_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot06_room_0SegmentOvlEnd - _spot06_room_0SegmentTextStart );
    _spot06_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot06_room_0.bss ADDR(..spot06_room_0) + SIZEOF(..spot06_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot06_room_0SegmentBssStart = .;
            build/scenes/overworld/spot06/spot06_room_0.o (.sbss)
            build/scenes/overworld/spot06/spot06_room_0.o (.scommon)
            build/scenes/overworld/spot06/spot06_room_0.o (.bss)
            build/scenes/overworld/spot06/spot06_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot06_room_0SegmentBssEnd = .;
        _spot06_room_0SegmentEnd = .;
    }
    _spot06_room_0SegmentBssSize = ABSOLUTE( _spot06_room_0SegmentBssEnd - _spot06_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot07_sceneSegmentRomStart = _RomSize;
    ..spot07_scene 0x02000000 : AT(_RomSize)
    {
        _spot07_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot07_sceneSegmentTextStart = .;
            build/scenes/overworld/spot07/spot07_scene.o (.text)
        _spot07_sceneSegmentTextEnd = .;
    _spot07_sceneSegmentTextSize = ABSOLUTE( _spot07_sceneSegmentTextEnd - _spot07_sceneSegmentTextStart );
        _spot07_sceneSegmentDataStart = .;
            build/scenes/overworld/spot07/spot07_scene.o (.data)
        _spot07_sceneSegmentDataEnd = .;
    _spot07_sceneSegmentDataSize = ABSOLUTE( _spot07_sceneSegmentDataEnd - _spot07_sceneSegmentDataStart );
        _spot07_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot07/spot07_scene.o (.rodata)
        _spot07_sceneSegmentRoDataEnd = .;
    _spot07_sceneSegmentRoDataSize = ABSOLUTE( _spot07_sceneSegmentRoDataEnd - _spot07_sceneSegmentRoDataStart );
        _spot07_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot07/spot07_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot07_sceneSegmentSDataEnd = .;
        _spot07_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot07/spot07_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot07_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot07_sceneSegmentOvlEnd - _spot07_sceneSegmentTextStart );
    _spot07_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot07_scene.bss ADDR(..spot07_scene) + SIZEOF(..spot07_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot07_sceneSegmentBssStart = .;
            build/scenes/overworld/spot07/spot07_scene.o (.sbss)
            build/scenes/overworld/spot07/spot07_scene.o (.scommon)
            build/scenes/overworld/spot07/spot07_scene.o (.bss)
            build/scenes/overworld/spot07/spot07_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot07_sceneSegmentBssEnd = .;
        _spot07_sceneSegmentEnd = .;
    }
    _spot07_sceneSegmentBssSize = ABSOLUTE( _spot07_sceneSegmentBssEnd - _spot07_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot07_room_0SegmentRomStart = _RomSize;
    ..spot07_room_0 0x03000000 : AT(_RomSize)
    {
        _spot07_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot07_room_0SegmentTextStart = .;
            build/scenes/overworld/spot07/spot07_room_0.o (.text)
        _spot07_room_0SegmentTextEnd = .;
    _spot07_room_0SegmentTextSize = ABSOLUTE( _spot07_room_0SegmentTextEnd - _spot07_room_0SegmentTextStart );
        _spot07_room_0SegmentDataStart = .;
            build/scenes/overworld/spot07/spot07_room_0.o (.data)
        _spot07_room_0SegmentDataEnd = .;
    _spot07_room_0SegmentDataSize = ABSOLUTE( _spot07_room_0SegmentDataEnd - _spot07_room_0SegmentDataStart );
        _spot07_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot07/spot07_room_0.o (.rodata)
        _spot07_room_0SegmentRoDataEnd = .;
    _spot07_room_0SegmentRoDataSize = ABSOLUTE( _spot07_room_0SegmentRoDataEnd - _spot07_room_0SegmentRoDataStart );
        _spot07_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot07/spot07_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot07_room_0SegmentSDataEnd = .;
        _spot07_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot07/spot07_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot07_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot07_room_0SegmentOvlEnd - _spot07_room_0SegmentTextStart );
    _spot07_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot07_room_0.bss ADDR(..spot07_room_0) + SIZEOF(..spot07_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot07_room_0SegmentBssStart = .;
            build/scenes/overworld/spot07/spot07_room_0.o (.sbss)
            build/scenes/overworld/spot07/spot07_room_0.o (.scommon)
            build/scenes/overworld/spot07/spot07_room_0.o (.bss)
            build/scenes/overworld/spot07/spot07_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot07_room_0SegmentBssEnd = .;
        _spot07_room_0SegmentEnd = .;
    }
    _spot07_room_0SegmentBssSize = ABSOLUTE( _spot07_room_0SegmentBssEnd - _spot07_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot07_room_1SegmentRomStart = _RomSize;
    ..spot07_room_1 0x03000000 : AT(_RomSize)
    {
        _spot07_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _spot07_room_1SegmentTextStart = .;
            build/scenes/overworld/spot07/spot07_room_1.o (.text)
        _spot07_room_1SegmentTextEnd = .;
    _spot07_room_1SegmentTextSize = ABSOLUTE( _spot07_room_1SegmentTextEnd - _spot07_room_1SegmentTextStart );
        _spot07_room_1SegmentDataStart = .;
            build/scenes/overworld/spot07/spot07_room_1.o (.data)
        _spot07_room_1SegmentDataEnd = .;
    _spot07_room_1SegmentDataSize = ABSOLUTE( _spot07_room_1SegmentDataEnd - _spot07_room_1SegmentDataStart );
        _spot07_room_1SegmentRoDataStart = .;
            build/scenes/overworld/spot07/spot07_room_1.o (.rodata)
        _spot07_room_1SegmentRoDataEnd = .;
    _spot07_room_1SegmentRoDataSize = ABSOLUTE( _spot07_room_1SegmentRoDataEnd - _spot07_room_1SegmentRoDataStart );
        _spot07_room_1SegmentSDataStart = .;
            build/scenes/overworld/spot07/spot07_room_1.o (.sdata)
        . = ALIGN(0x10);
        _spot07_room_1SegmentSDataEnd = .;
        _spot07_room_1SegmentOvlStart = .;
            build/scenes/overworld/spot07/spot07_room_1.o (.ovl)
        . = ALIGN(0x10);
        _spot07_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _spot07_room_1SegmentOvlEnd - _spot07_room_1SegmentTextStart );
    _spot07_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot07_room_1.bss ADDR(..spot07_room_1) + SIZEOF(..spot07_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot07_room_1SegmentBssStart = .;
            build/scenes/overworld/spot07/spot07_room_1.o (.sbss)
            build/scenes/overworld/spot07/spot07_room_1.o (.scommon)
            build/scenes/overworld/spot07/spot07_room_1.o (.bss)
            build/scenes/overworld/spot07/spot07_room_1.o (COMMON)
        . = ALIGN(0x10);
        _spot07_room_1SegmentBssEnd = .;
        _spot07_room_1SegmentEnd = .;
    }
    _spot07_room_1SegmentBssSize = ABSOLUTE( _spot07_room_1SegmentBssEnd - _spot07_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot08_sceneSegmentRomStart = _RomSize;
    ..spot08_scene 0x02000000 : AT(_RomSize)
    {
        _spot08_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot08_sceneSegmentTextStart = .;
            build/scenes/overworld/spot08/spot08_scene.o (.text)
        _spot08_sceneSegmentTextEnd = .;
    _spot08_sceneSegmentTextSize = ABSOLUTE( _spot08_sceneSegmentTextEnd - _spot08_sceneSegmentTextStart );
        _spot08_sceneSegmentDataStart = .;
            build/scenes/overworld/spot08/spot08_scene.o (.data)
        _spot08_sceneSegmentDataEnd = .;
    _spot08_sceneSegmentDataSize = ABSOLUTE( _spot08_sceneSegmentDataEnd - _spot08_sceneSegmentDataStart );
        _spot08_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot08/spot08_scene.o (.rodata)
        _spot08_sceneSegmentRoDataEnd = .;
    _spot08_sceneSegmentRoDataSize = ABSOLUTE( _spot08_sceneSegmentRoDataEnd - _spot08_sceneSegmentRoDataStart );
        _spot08_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot08/spot08_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot08_sceneSegmentSDataEnd = .;
        _spot08_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot08/spot08_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot08_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot08_sceneSegmentOvlEnd - _spot08_sceneSegmentTextStart );
    _spot08_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot08_scene.bss ADDR(..spot08_scene) + SIZEOF(..spot08_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot08_sceneSegmentBssStart = .;
            build/scenes/overworld/spot08/spot08_scene.o (.sbss)
            build/scenes/overworld/spot08/spot08_scene.o (.scommon)
            build/scenes/overworld/spot08/spot08_scene.o (.bss)
            build/scenes/overworld/spot08/spot08_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot08_sceneSegmentBssEnd = .;
        _spot08_sceneSegmentEnd = .;
    }
    _spot08_sceneSegmentBssSize = ABSOLUTE( _spot08_sceneSegmentBssEnd - _spot08_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot08_room_0SegmentRomStart = _RomSize;
    ..spot08_room_0 0x03000000 : AT(_RomSize)
    {
        _spot08_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot08_room_0SegmentTextStart = .;
            build/scenes/overworld/spot08/spot08_room_0.o (.text)
        _spot08_room_0SegmentTextEnd = .;
    _spot08_room_0SegmentTextSize = ABSOLUTE( _spot08_room_0SegmentTextEnd - _spot08_room_0SegmentTextStart );
        _spot08_room_0SegmentDataStart = .;
            build/scenes/overworld/spot08/spot08_room_0.o (.data)
        _spot08_room_0SegmentDataEnd = .;
    _spot08_room_0SegmentDataSize = ABSOLUTE( _spot08_room_0SegmentDataEnd - _spot08_room_0SegmentDataStart );
        _spot08_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot08/spot08_room_0.o (.rodata)
        _spot08_room_0SegmentRoDataEnd = .;
    _spot08_room_0SegmentRoDataSize = ABSOLUTE( _spot08_room_0SegmentRoDataEnd - _spot08_room_0SegmentRoDataStart );
        _spot08_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot08/spot08_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot08_room_0SegmentSDataEnd = .;
        _spot08_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot08/spot08_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot08_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot08_room_0SegmentOvlEnd - _spot08_room_0SegmentTextStart );
    _spot08_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot08_room_0.bss ADDR(..spot08_room_0) + SIZEOF(..spot08_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot08_room_0SegmentBssStart = .;
            build/scenes/overworld/spot08/spot08_room_0.o (.sbss)
            build/scenes/overworld/spot08/spot08_room_0.o (.scommon)
            build/scenes/overworld/spot08/spot08_room_0.o (.bss)
            build/scenes/overworld/spot08/spot08_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot08_room_0SegmentBssEnd = .;
        _spot08_room_0SegmentEnd = .;
    }
    _spot08_room_0SegmentBssSize = ABSOLUTE( _spot08_room_0SegmentBssEnd - _spot08_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot09_sceneSegmentRomStart = _RomSize;
    ..spot09_scene 0x02000000 : AT(_RomSize)
    {
        _spot09_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot09_sceneSegmentTextStart = .;
            build/scenes/overworld/spot09/spot09_scene.o (.text)
        _spot09_sceneSegmentTextEnd = .;
    _spot09_sceneSegmentTextSize = ABSOLUTE( _spot09_sceneSegmentTextEnd - _spot09_sceneSegmentTextStart );
        _spot09_sceneSegmentDataStart = .;
            build/scenes/overworld/spot09/spot09_scene.o (.data)
        _spot09_sceneSegmentDataEnd = .;
    _spot09_sceneSegmentDataSize = ABSOLUTE( _spot09_sceneSegmentDataEnd - _spot09_sceneSegmentDataStart );
        _spot09_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot09/spot09_scene.o (.rodata)
        _spot09_sceneSegmentRoDataEnd = .;
    _spot09_sceneSegmentRoDataSize = ABSOLUTE( _spot09_sceneSegmentRoDataEnd - _spot09_sceneSegmentRoDataStart );
        _spot09_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot09/spot09_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot09_sceneSegmentSDataEnd = .;
        _spot09_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot09/spot09_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot09_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot09_sceneSegmentOvlEnd - _spot09_sceneSegmentTextStart );
    _spot09_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot09_scene.bss ADDR(..spot09_scene) + SIZEOF(..spot09_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot09_sceneSegmentBssStart = .;
            build/scenes/overworld/spot09/spot09_scene.o (.sbss)
            build/scenes/overworld/spot09/spot09_scene.o (.scommon)
            build/scenes/overworld/spot09/spot09_scene.o (.bss)
            build/scenes/overworld/spot09/spot09_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot09_sceneSegmentBssEnd = .;
        _spot09_sceneSegmentEnd = .;
    }
    _spot09_sceneSegmentBssSize = ABSOLUTE( _spot09_sceneSegmentBssEnd - _spot09_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot09_room_0SegmentRomStart = _RomSize;
    ..spot09_room_0 0x03000000 : AT(_RomSize)
    {
        _spot09_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot09_room_0SegmentTextStart = .;
            build/scenes/overworld/spot09/spot09_room_0.o (.text)
        _spot09_room_0SegmentTextEnd = .;
    _spot09_room_0SegmentTextSize = ABSOLUTE( _spot09_room_0SegmentTextEnd - _spot09_room_0SegmentTextStart );
        _spot09_room_0SegmentDataStart = .;
            build/scenes/overworld/spot09/spot09_room_0.o (.data)
        _spot09_room_0SegmentDataEnd = .;
    _spot09_room_0SegmentDataSize = ABSOLUTE( _spot09_room_0SegmentDataEnd - _spot09_room_0SegmentDataStart );
        _spot09_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot09/spot09_room_0.o (.rodata)
        _spot09_room_0SegmentRoDataEnd = .;
    _spot09_room_0SegmentRoDataSize = ABSOLUTE( _spot09_room_0SegmentRoDataEnd - _spot09_room_0SegmentRoDataStart );
        _spot09_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot09/spot09_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot09_room_0SegmentSDataEnd = .;
        _spot09_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot09/spot09_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot09_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot09_room_0SegmentOvlEnd - _spot09_room_0SegmentTextStart );
    _spot09_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot09_room_0.bss ADDR(..spot09_room_0) + SIZEOF(..spot09_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot09_room_0SegmentBssStart = .;
            build/scenes/overworld/spot09/spot09_room_0.o (.sbss)
            build/scenes/overworld/spot09/spot09_room_0.o (.scommon)
            build/scenes/overworld/spot09/spot09_room_0.o (.bss)
            build/scenes/overworld/spot09/spot09_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot09_room_0SegmentBssEnd = .;
        _spot09_room_0SegmentEnd = .;
    }
    _spot09_room_0SegmentBssSize = ABSOLUTE( _spot09_room_0SegmentBssEnd - _spot09_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot10_sceneSegmentRomStart = _RomSize;
    ..spot10_scene 0x02000000 : AT(_RomSize)
    {
        _spot10_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot10_sceneSegmentTextStart = .;
            build/scenes/overworld/spot10/spot10_scene.o (.text)
        _spot10_sceneSegmentTextEnd = .;
    _spot10_sceneSegmentTextSize = ABSOLUTE( _spot10_sceneSegmentTextEnd - _spot10_sceneSegmentTextStart );
        _spot10_sceneSegmentDataStart = .;
            build/scenes/overworld/spot10/spot10_scene.o (.data)
        _spot10_sceneSegmentDataEnd = .;
    _spot10_sceneSegmentDataSize = ABSOLUTE( _spot10_sceneSegmentDataEnd - _spot10_sceneSegmentDataStart );
        _spot10_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot10/spot10_scene.o (.rodata)
        _spot10_sceneSegmentRoDataEnd = .;
    _spot10_sceneSegmentRoDataSize = ABSOLUTE( _spot10_sceneSegmentRoDataEnd - _spot10_sceneSegmentRoDataStart );
        _spot10_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot10/spot10_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot10_sceneSegmentSDataEnd = .;
        _spot10_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot10/spot10_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot10_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot10_sceneSegmentOvlEnd - _spot10_sceneSegmentTextStart );
    _spot10_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot10_scene.bss ADDR(..spot10_scene) + SIZEOF(..spot10_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot10_sceneSegmentBssStart = .;
            build/scenes/overworld/spot10/spot10_scene.o (.sbss)
            build/scenes/overworld/spot10/spot10_scene.o (.scommon)
            build/scenes/overworld/spot10/spot10_scene.o (.bss)
            build/scenes/overworld/spot10/spot10_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot10_sceneSegmentBssEnd = .;
        _spot10_sceneSegmentEnd = .;
    }
    _spot10_sceneSegmentBssSize = ABSOLUTE( _spot10_sceneSegmentBssEnd - _spot10_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot10_room_0SegmentRomStart = _RomSize;
    ..spot10_room_0 0x03000000 : AT(_RomSize)
    {
        _spot10_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot10_room_0SegmentTextStart = .;
            build/scenes/overworld/spot10/spot10_room_0.o (.text)
        _spot10_room_0SegmentTextEnd = .;
    _spot10_room_0SegmentTextSize = ABSOLUTE( _spot10_room_0SegmentTextEnd - _spot10_room_0SegmentTextStart );
        _spot10_room_0SegmentDataStart = .;
            build/scenes/overworld/spot10/spot10_room_0.o (.data)
        _spot10_room_0SegmentDataEnd = .;
    _spot10_room_0SegmentDataSize = ABSOLUTE( _spot10_room_0SegmentDataEnd - _spot10_room_0SegmentDataStart );
        _spot10_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot10/spot10_room_0.o (.rodata)
        _spot10_room_0SegmentRoDataEnd = .;
    _spot10_room_0SegmentRoDataSize = ABSOLUTE( _spot10_room_0SegmentRoDataEnd - _spot10_room_0SegmentRoDataStart );
        _spot10_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot10/spot10_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot10_room_0SegmentSDataEnd = .;
        _spot10_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot10/spot10_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot10_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot10_room_0SegmentOvlEnd - _spot10_room_0SegmentTextStart );
    _spot10_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot10_room_0.bss ADDR(..spot10_room_0) + SIZEOF(..spot10_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot10_room_0SegmentBssStart = .;
            build/scenes/overworld/spot10/spot10_room_0.o (.sbss)
            build/scenes/overworld/spot10/spot10_room_0.o (.scommon)
            build/scenes/overworld/spot10/spot10_room_0.o (.bss)
            build/scenes/overworld/spot10/spot10_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot10_room_0SegmentBssEnd = .;
        _spot10_room_0SegmentEnd = .;
    }
    _spot10_room_0SegmentBssSize = ABSOLUTE( _spot10_room_0SegmentBssEnd - _spot10_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot10_room_1SegmentRomStart = _RomSize;
    ..spot10_room_1 0x03000000 : AT(_RomSize)
    {
        _spot10_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _spot10_room_1SegmentTextStart = .;
            build/scenes/overworld/spot10/spot10_room_1.o (.text)
        _spot10_room_1SegmentTextEnd = .;
    _spot10_room_1SegmentTextSize = ABSOLUTE( _spot10_room_1SegmentTextEnd - _spot10_room_1SegmentTextStart );
        _spot10_room_1SegmentDataStart = .;
            build/scenes/overworld/spot10/spot10_room_1.o (.data)
        _spot10_room_1SegmentDataEnd = .;
    _spot10_room_1SegmentDataSize = ABSOLUTE( _spot10_room_1SegmentDataEnd - _spot10_room_1SegmentDataStart );
        _spot10_room_1SegmentRoDataStart = .;
            build/scenes/overworld/spot10/spot10_room_1.o (.rodata)
        _spot10_room_1SegmentRoDataEnd = .;
    _spot10_room_1SegmentRoDataSize = ABSOLUTE( _spot10_room_1SegmentRoDataEnd - _spot10_room_1SegmentRoDataStart );
        _spot10_room_1SegmentSDataStart = .;
            build/scenes/overworld/spot10/spot10_room_1.o (.sdata)
        . = ALIGN(0x10);
        _spot10_room_1SegmentSDataEnd = .;
        _spot10_room_1SegmentOvlStart = .;
            build/scenes/overworld/spot10/spot10_room_1.o (.ovl)
        . = ALIGN(0x10);
        _spot10_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _spot10_room_1SegmentOvlEnd - _spot10_room_1SegmentTextStart );
    _spot10_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot10_room_1.bss ADDR(..spot10_room_1) + SIZEOF(..spot10_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot10_room_1SegmentBssStart = .;
            build/scenes/overworld/spot10/spot10_room_1.o (.sbss)
            build/scenes/overworld/spot10/spot10_room_1.o (.scommon)
            build/scenes/overworld/spot10/spot10_room_1.o (.bss)
            build/scenes/overworld/spot10/spot10_room_1.o (COMMON)
        . = ALIGN(0x10);
        _spot10_room_1SegmentBssEnd = .;
        _spot10_room_1SegmentEnd = .;
    }
    _spot10_room_1SegmentBssSize = ABSOLUTE( _spot10_room_1SegmentBssEnd - _spot10_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot10_room_2SegmentRomStart = _RomSize;
    ..spot10_room_2 0x03000000 : AT(_RomSize)
    {
        _spot10_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _spot10_room_2SegmentTextStart = .;
            build/scenes/overworld/spot10/spot10_room_2.o (.text)
        _spot10_room_2SegmentTextEnd = .;
    _spot10_room_2SegmentTextSize = ABSOLUTE( _spot10_room_2SegmentTextEnd - _spot10_room_2SegmentTextStart );
        _spot10_room_2SegmentDataStart = .;
            build/scenes/overworld/spot10/spot10_room_2.o (.data)
        _spot10_room_2SegmentDataEnd = .;
    _spot10_room_2SegmentDataSize = ABSOLUTE( _spot10_room_2SegmentDataEnd - _spot10_room_2SegmentDataStart );
        _spot10_room_2SegmentRoDataStart = .;
            build/scenes/overworld/spot10/spot10_room_2.o (.rodata)
        _spot10_room_2SegmentRoDataEnd = .;
    _spot10_room_2SegmentRoDataSize = ABSOLUTE( _spot10_room_2SegmentRoDataEnd - _spot10_room_2SegmentRoDataStart );
        _spot10_room_2SegmentSDataStart = .;
            build/scenes/overworld/spot10/spot10_room_2.o (.sdata)
        . = ALIGN(0x10);
        _spot10_room_2SegmentSDataEnd = .;
        _spot10_room_2SegmentOvlStart = .;
            build/scenes/overworld/spot10/spot10_room_2.o (.ovl)
        . = ALIGN(0x10);
        _spot10_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _spot10_room_2SegmentOvlEnd - _spot10_room_2SegmentTextStart );
    _spot10_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot10_room_2.bss ADDR(..spot10_room_2) + SIZEOF(..spot10_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot10_room_2SegmentBssStart = .;
            build/scenes/overworld/spot10/spot10_room_2.o (.sbss)
            build/scenes/overworld/spot10/spot10_room_2.o (.scommon)
            build/scenes/overworld/spot10/spot10_room_2.o (.bss)
            build/scenes/overworld/spot10/spot10_room_2.o (COMMON)
        . = ALIGN(0x10);
        _spot10_room_2SegmentBssEnd = .;
        _spot10_room_2SegmentEnd = .;
    }
    _spot10_room_2SegmentBssSize = ABSOLUTE( _spot10_room_2SegmentBssEnd - _spot10_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot10_room_3SegmentRomStart = _RomSize;
    ..spot10_room_3 0x03000000 : AT(_RomSize)
    {
        _spot10_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _spot10_room_3SegmentTextStart = .;
            build/scenes/overworld/spot10/spot10_room_3.o (.text)
        _spot10_room_3SegmentTextEnd = .;
    _spot10_room_3SegmentTextSize = ABSOLUTE( _spot10_room_3SegmentTextEnd - _spot10_room_3SegmentTextStart );
        _spot10_room_3SegmentDataStart = .;
            build/scenes/overworld/spot10/spot10_room_3.o (.data)
        _spot10_room_3SegmentDataEnd = .;
    _spot10_room_3SegmentDataSize = ABSOLUTE( _spot10_room_3SegmentDataEnd - _spot10_room_3SegmentDataStart );
        _spot10_room_3SegmentRoDataStart = .;
            build/scenes/overworld/spot10/spot10_room_3.o (.rodata)
        _spot10_room_3SegmentRoDataEnd = .;
    _spot10_room_3SegmentRoDataSize = ABSOLUTE( _spot10_room_3SegmentRoDataEnd - _spot10_room_3SegmentRoDataStart );
        _spot10_room_3SegmentSDataStart = .;
            build/scenes/overworld/spot10/spot10_room_3.o (.sdata)
        . = ALIGN(0x10);
        _spot10_room_3SegmentSDataEnd = .;
        _spot10_room_3SegmentOvlStart = .;
            build/scenes/overworld/spot10/spot10_room_3.o (.ovl)
        . = ALIGN(0x10);
        _spot10_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _spot10_room_3SegmentOvlEnd - _spot10_room_3SegmentTextStart );
    _spot10_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot10_room_3.bss ADDR(..spot10_room_3) + SIZEOF(..spot10_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot10_room_3SegmentBssStart = .;
            build/scenes/overworld/spot10/spot10_room_3.o (.sbss)
            build/scenes/overworld/spot10/spot10_room_3.o (.scommon)
            build/scenes/overworld/spot10/spot10_room_3.o (.bss)
            build/scenes/overworld/spot10/spot10_room_3.o (COMMON)
        . = ALIGN(0x10);
        _spot10_room_3SegmentBssEnd = .;
        _spot10_room_3SegmentEnd = .;
    }
    _spot10_room_3SegmentBssSize = ABSOLUTE( _spot10_room_3SegmentBssEnd - _spot10_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot10_room_4SegmentRomStart = _RomSize;
    ..spot10_room_4 0x03000000 : AT(_RomSize)
    {
        _spot10_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _spot10_room_4SegmentTextStart = .;
            build/scenes/overworld/spot10/spot10_room_4.o (.text)
        _spot10_room_4SegmentTextEnd = .;
    _spot10_room_4SegmentTextSize = ABSOLUTE( _spot10_room_4SegmentTextEnd - _spot10_room_4SegmentTextStart );
        _spot10_room_4SegmentDataStart = .;
            build/scenes/overworld/spot10/spot10_room_4.o (.data)
        _spot10_room_4SegmentDataEnd = .;
    _spot10_room_4SegmentDataSize = ABSOLUTE( _spot10_room_4SegmentDataEnd - _spot10_room_4SegmentDataStart );
        _spot10_room_4SegmentRoDataStart = .;
            build/scenes/overworld/spot10/spot10_room_4.o (.rodata)
        _spot10_room_4SegmentRoDataEnd = .;
    _spot10_room_4SegmentRoDataSize = ABSOLUTE( _spot10_room_4SegmentRoDataEnd - _spot10_room_4SegmentRoDataStart );
        _spot10_room_4SegmentSDataStart = .;
            build/scenes/overworld/spot10/spot10_room_4.o (.sdata)
        . = ALIGN(0x10);
        _spot10_room_4SegmentSDataEnd = .;
        _spot10_room_4SegmentOvlStart = .;
            build/scenes/overworld/spot10/spot10_room_4.o (.ovl)
        . = ALIGN(0x10);
        _spot10_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _spot10_room_4SegmentOvlEnd - _spot10_room_4SegmentTextStart );
    _spot10_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot10_room_4.bss ADDR(..spot10_room_4) + SIZEOF(..spot10_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot10_room_4SegmentBssStart = .;
            build/scenes/overworld/spot10/spot10_room_4.o (.sbss)
            build/scenes/overworld/spot10/spot10_room_4.o (.scommon)
            build/scenes/overworld/spot10/spot10_room_4.o (.bss)
            build/scenes/overworld/spot10/spot10_room_4.o (COMMON)
        . = ALIGN(0x10);
        _spot10_room_4SegmentBssEnd = .;
        _spot10_room_4SegmentEnd = .;
    }
    _spot10_room_4SegmentBssSize = ABSOLUTE( _spot10_room_4SegmentBssEnd - _spot10_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot10_room_5SegmentRomStart = _RomSize;
    ..spot10_room_5 0x03000000 : AT(_RomSize)
    {
        _spot10_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _spot10_room_5SegmentTextStart = .;
            build/scenes/overworld/spot10/spot10_room_5.o (.text)
        _spot10_room_5SegmentTextEnd = .;
    _spot10_room_5SegmentTextSize = ABSOLUTE( _spot10_room_5SegmentTextEnd - _spot10_room_5SegmentTextStart );
        _spot10_room_5SegmentDataStart = .;
            build/scenes/overworld/spot10/spot10_room_5.o (.data)
        _spot10_room_5SegmentDataEnd = .;
    _spot10_room_5SegmentDataSize = ABSOLUTE( _spot10_room_5SegmentDataEnd - _spot10_room_5SegmentDataStart );
        _spot10_room_5SegmentRoDataStart = .;
            build/scenes/overworld/spot10/spot10_room_5.o (.rodata)
        _spot10_room_5SegmentRoDataEnd = .;
    _spot10_room_5SegmentRoDataSize = ABSOLUTE( _spot10_room_5SegmentRoDataEnd - _spot10_room_5SegmentRoDataStart );
        _spot10_room_5SegmentSDataStart = .;
            build/scenes/overworld/spot10/spot10_room_5.o (.sdata)
        . = ALIGN(0x10);
        _spot10_room_5SegmentSDataEnd = .;
        _spot10_room_5SegmentOvlStart = .;
            build/scenes/overworld/spot10/spot10_room_5.o (.ovl)
        . = ALIGN(0x10);
        _spot10_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _spot10_room_5SegmentOvlEnd - _spot10_room_5SegmentTextStart );
    _spot10_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot10_room_5.bss ADDR(..spot10_room_5) + SIZEOF(..spot10_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot10_room_5SegmentBssStart = .;
            build/scenes/overworld/spot10/spot10_room_5.o (.sbss)
            build/scenes/overworld/spot10/spot10_room_5.o (.scommon)
            build/scenes/overworld/spot10/spot10_room_5.o (.bss)
            build/scenes/overworld/spot10/spot10_room_5.o (COMMON)
        . = ALIGN(0x10);
        _spot10_room_5SegmentBssEnd = .;
        _spot10_room_5SegmentEnd = .;
    }
    _spot10_room_5SegmentBssSize = ABSOLUTE( _spot10_room_5SegmentBssEnd - _spot10_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot10_room_6SegmentRomStart = _RomSize;
    ..spot10_room_6 0x03000000 : AT(_RomSize)
    {
        _spot10_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _spot10_room_6SegmentTextStart = .;
            build/scenes/overworld/spot10/spot10_room_6.o (.text)
        _spot10_room_6SegmentTextEnd = .;
    _spot10_room_6SegmentTextSize = ABSOLUTE( _spot10_room_6SegmentTextEnd - _spot10_room_6SegmentTextStart );
        _spot10_room_6SegmentDataStart = .;
            build/scenes/overworld/spot10/spot10_room_6.o (.data)
        _spot10_room_6SegmentDataEnd = .;
    _spot10_room_6SegmentDataSize = ABSOLUTE( _spot10_room_6SegmentDataEnd - _spot10_room_6SegmentDataStart );
        _spot10_room_6SegmentRoDataStart = .;
            build/scenes/overworld/spot10/spot10_room_6.o (.rodata)
        _spot10_room_6SegmentRoDataEnd = .;
    _spot10_room_6SegmentRoDataSize = ABSOLUTE( _spot10_room_6SegmentRoDataEnd - _spot10_room_6SegmentRoDataStart );
        _spot10_room_6SegmentSDataStart = .;
            build/scenes/overworld/spot10/spot10_room_6.o (.sdata)
        . = ALIGN(0x10);
        _spot10_room_6SegmentSDataEnd = .;
        _spot10_room_6SegmentOvlStart = .;
            build/scenes/overworld/spot10/spot10_room_6.o (.ovl)
        . = ALIGN(0x10);
        _spot10_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _spot10_room_6SegmentOvlEnd - _spot10_room_6SegmentTextStart );
    _spot10_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot10_room_6.bss ADDR(..spot10_room_6) + SIZEOF(..spot10_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot10_room_6SegmentBssStart = .;
            build/scenes/overworld/spot10/spot10_room_6.o (.sbss)
            build/scenes/overworld/spot10/spot10_room_6.o (.scommon)
            build/scenes/overworld/spot10/spot10_room_6.o (.bss)
            build/scenes/overworld/spot10/spot10_room_6.o (COMMON)
        . = ALIGN(0x10);
        _spot10_room_6SegmentBssEnd = .;
        _spot10_room_6SegmentEnd = .;
    }
    _spot10_room_6SegmentBssSize = ABSOLUTE( _spot10_room_6SegmentBssEnd - _spot10_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot10_room_7SegmentRomStart = _RomSize;
    ..spot10_room_7 0x03000000 : AT(_RomSize)
    {
        _spot10_room_7SegmentStart = .;
        . = ALIGN(0x10);
        _spot10_room_7SegmentTextStart = .;
            build/scenes/overworld/spot10/spot10_room_7.o (.text)
        _spot10_room_7SegmentTextEnd = .;
    _spot10_room_7SegmentTextSize = ABSOLUTE( _spot10_room_7SegmentTextEnd - _spot10_room_7SegmentTextStart );
        _spot10_room_7SegmentDataStart = .;
            build/scenes/overworld/spot10/spot10_room_7.o (.data)
        _spot10_room_7SegmentDataEnd = .;
    _spot10_room_7SegmentDataSize = ABSOLUTE( _spot10_room_7SegmentDataEnd - _spot10_room_7SegmentDataStart );
        _spot10_room_7SegmentRoDataStart = .;
            build/scenes/overworld/spot10/spot10_room_7.o (.rodata)
        _spot10_room_7SegmentRoDataEnd = .;
    _spot10_room_7SegmentRoDataSize = ABSOLUTE( _spot10_room_7SegmentRoDataEnd - _spot10_room_7SegmentRoDataStart );
        _spot10_room_7SegmentSDataStart = .;
            build/scenes/overworld/spot10/spot10_room_7.o (.sdata)
        . = ALIGN(0x10);
        _spot10_room_7SegmentSDataEnd = .;
        _spot10_room_7SegmentOvlStart = .;
            build/scenes/overworld/spot10/spot10_room_7.o (.ovl)
        . = ALIGN(0x10);
        _spot10_room_7SegmentOvlEnd = .;
    }
    _RomSize += ( _spot10_room_7SegmentOvlEnd - _spot10_room_7SegmentTextStart );
    _spot10_room_7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot10_room_7.bss ADDR(..spot10_room_7) + SIZEOF(..spot10_room_7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot10_room_7SegmentBssStart = .;
            build/scenes/overworld/spot10/spot10_room_7.o (.sbss)
            build/scenes/overworld/spot10/spot10_room_7.o (.scommon)
            build/scenes/overworld/spot10/spot10_room_7.o (.bss)
            build/scenes/overworld/spot10/spot10_room_7.o (COMMON)
        . = ALIGN(0x10);
        _spot10_room_7SegmentBssEnd = .;
        _spot10_room_7SegmentEnd = .;
    }
    _spot10_room_7SegmentBssSize = ABSOLUTE( _spot10_room_7SegmentBssEnd - _spot10_room_7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot10_room_8SegmentRomStart = _RomSize;
    ..spot10_room_8 0x03000000 : AT(_RomSize)
    {
        _spot10_room_8SegmentStart = .;
        . = ALIGN(0x10);
        _spot10_room_8SegmentTextStart = .;
            build/scenes/overworld/spot10/spot10_room_8.o (.text)
        _spot10_room_8SegmentTextEnd = .;
    _spot10_room_8SegmentTextSize = ABSOLUTE( _spot10_room_8SegmentTextEnd - _spot10_room_8SegmentTextStart );
        _spot10_room_8SegmentDataStart = .;
            build/scenes/overworld/spot10/spot10_room_8.o (.data)
        _spot10_room_8SegmentDataEnd = .;
    _spot10_room_8SegmentDataSize = ABSOLUTE( _spot10_room_8SegmentDataEnd - _spot10_room_8SegmentDataStart );
        _spot10_room_8SegmentRoDataStart = .;
            build/scenes/overworld/spot10/spot10_room_8.o (.rodata)
        _spot10_room_8SegmentRoDataEnd = .;
    _spot10_room_8SegmentRoDataSize = ABSOLUTE( _spot10_room_8SegmentRoDataEnd - _spot10_room_8SegmentRoDataStart );
        _spot10_room_8SegmentSDataStart = .;
            build/scenes/overworld/spot10/spot10_room_8.o (.sdata)
        . = ALIGN(0x10);
        _spot10_room_8SegmentSDataEnd = .;
        _spot10_room_8SegmentOvlStart = .;
            build/scenes/overworld/spot10/spot10_room_8.o (.ovl)
        . = ALIGN(0x10);
        _spot10_room_8SegmentOvlEnd = .;
    }
    _RomSize += ( _spot10_room_8SegmentOvlEnd - _spot10_room_8SegmentTextStart );
    _spot10_room_8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot10_room_8.bss ADDR(..spot10_room_8) + SIZEOF(..spot10_room_8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot10_room_8SegmentBssStart = .;
            build/scenes/overworld/spot10/spot10_room_8.o (.sbss)
            build/scenes/overworld/spot10/spot10_room_8.o (.scommon)
            build/scenes/overworld/spot10/spot10_room_8.o (.bss)
            build/scenes/overworld/spot10/spot10_room_8.o (COMMON)
        . = ALIGN(0x10);
        _spot10_room_8SegmentBssEnd = .;
        _spot10_room_8SegmentEnd = .;
    }
    _spot10_room_8SegmentBssSize = ABSOLUTE( _spot10_room_8SegmentBssEnd - _spot10_room_8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot10_room_9SegmentRomStart = _RomSize;
    ..spot10_room_9 0x03000000 : AT(_RomSize)
    {
        _spot10_room_9SegmentStart = .;
        . = ALIGN(0x10);
        _spot10_room_9SegmentTextStart = .;
            build/scenes/overworld/spot10/spot10_room_9.o (.text)
        _spot10_room_9SegmentTextEnd = .;
    _spot10_room_9SegmentTextSize = ABSOLUTE( _spot10_room_9SegmentTextEnd - _spot10_room_9SegmentTextStart );
        _spot10_room_9SegmentDataStart = .;
            build/scenes/overworld/spot10/spot10_room_9.o (.data)
        _spot10_room_9SegmentDataEnd = .;
    _spot10_room_9SegmentDataSize = ABSOLUTE( _spot10_room_9SegmentDataEnd - _spot10_room_9SegmentDataStart );
        _spot10_room_9SegmentRoDataStart = .;
            build/scenes/overworld/spot10/spot10_room_9.o (.rodata)
        _spot10_room_9SegmentRoDataEnd = .;
    _spot10_room_9SegmentRoDataSize = ABSOLUTE( _spot10_room_9SegmentRoDataEnd - _spot10_room_9SegmentRoDataStart );
        _spot10_room_9SegmentSDataStart = .;
            build/scenes/overworld/spot10/spot10_room_9.o (.sdata)
        . = ALIGN(0x10);
        _spot10_room_9SegmentSDataEnd = .;
        _spot10_room_9SegmentOvlStart = .;
            build/scenes/overworld/spot10/spot10_room_9.o (.ovl)
        . = ALIGN(0x10);
        _spot10_room_9SegmentOvlEnd = .;
    }
    _RomSize += ( _spot10_room_9SegmentOvlEnd - _spot10_room_9SegmentTextStart );
    _spot10_room_9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot10_room_9.bss ADDR(..spot10_room_9) + SIZEOF(..spot10_room_9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot10_room_9SegmentBssStart = .;
            build/scenes/overworld/spot10/spot10_room_9.o (.sbss)
            build/scenes/overworld/spot10/spot10_room_9.o (.scommon)
            build/scenes/overworld/spot10/spot10_room_9.o (.bss)
            build/scenes/overworld/spot10/spot10_room_9.o (COMMON)
        . = ALIGN(0x10);
        _spot10_room_9SegmentBssEnd = .;
        _spot10_room_9SegmentEnd = .;
    }
    _spot10_room_9SegmentBssSize = ABSOLUTE( _spot10_room_9SegmentBssEnd - _spot10_room_9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot11_sceneSegmentRomStart = _RomSize;
    ..spot11_scene 0x02000000 : AT(_RomSize)
    {
        _spot11_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot11_sceneSegmentTextStart = .;
            build/scenes/overworld/spot11/spot11_scene.o (.text)
        _spot11_sceneSegmentTextEnd = .;
    _spot11_sceneSegmentTextSize = ABSOLUTE( _spot11_sceneSegmentTextEnd - _spot11_sceneSegmentTextStart );
        _spot11_sceneSegmentDataStart = .;
            build/scenes/overworld/spot11/spot11_scene.o (.data)
        _spot11_sceneSegmentDataEnd = .;
    _spot11_sceneSegmentDataSize = ABSOLUTE( _spot11_sceneSegmentDataEnd - _spot11_sceneSegmentDataStart );
        _spot11_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot11/spot11_scene.o (.rodata)
        _spot11_sceneSegmentRoDataEnd = .;
    _spot11_sceneSegmentRoDataSize = ABSOLUTE( _spot11_sceneSegmentRoDataEnd - _spot11_sceneSegmentRoDataStart );
        _spot11_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot11/spot11_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot11_sceneSegmentSDataEnd = .;
        _spot11_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot11/spot11_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot11_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot11_sceneSegmentOvlEnd - _spot11_sceneSegmentTextStart );
    _spot11_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot11_scene.bss ADDR(..spot11_scene) + SIZEOF(..spot11_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot11_sceneSegmentBssStart = .;
            build/scenes/overworld/spot11/spot11_scene.o (.sbss)
            build/scenes/overworld/spot11/spot11_scene.o (.scommon)
            build/scenes/overworld/spot11/spot11_scene.o (.bss)
            build/scenes/overworld/spot11/spot11_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot11_sceneSegmentBssEnd = .;
        _spot11_sceneSegmentEnd = .;
    }
    _spot11_sceneSegmentBssSize = ABSOLUTE( _spot11_sceneSegmentBssEnd - _spot11_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot11_room_0SegmentRomStart = _RomSize;
    ..spot11_room_0 0x03000000 : AT(_RomSize)
    {
        _spot11_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot11_room_0SegmentTextStart = .;
            build/scenes/overworld/spot11/spot11_room_0.o (.text)
        _spot11_room_0SegmentTextEnd = .;
    _spot11_room_0SegmentTextSize = ABSOLUTE( _spot11_room_0SegmentTextEnd - _spot11_room_0SegmentTextStart );
        _spot11_room_0SegmentDataStart = .;
            build/scenes/overworld/spot11/spot11_room_0.o (.data)
        _spot11_room_0SegmentDataEnd = .;
    _spot11_room_0SegmentDataSize = ABSOLUTE( _spot11_room_0SegmentDataEnd - _spot11_room_0SegmentDataStart );
        _spot11_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot11/spot11_room_0.o (.rodata)
        _spot11_room_0SegmentRoDataEnd = .;
    _spot11_room_0SegmentRoDataSize = ABSOLUTE( _spot11_room_0SegmentRoDataEnd - _spot11_room_0SegmentRoDataStart );
        _spot11_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot11/spot11_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot11_room_0SegmentSDataEnd = .;
        _spot11_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot11/spot11_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot11_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot11_room_0SegmentOvlEnd - _spot11_room_0SegmentTextStart );
    _spot11_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot11_room_0.bss ADDR(..spot11_room_0) + SIZEOF(..spot11_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot11_room_0SegmentBssStart = .;
            build/scenes/overworld/spot11/spot11_room_0.o (.sbss)
            build/scenes/overworld/spot11/spot11_room_0.o (.scommon)
            build/scenes/overworld/spot11/spot11_room_0.o (.bss)
            build/scenes/overworld/spot11/spot11_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot11_room_0SegmentBssEnd = .;
        _spot11_room_0SegmentEnd = .;
    }
    _spot11_room_0SegmentBssSize = ABSOLUTE( _spot11_room_0SegmentBssEnd - _spot11_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot12_sceneSegmentRomStart = _RomSize;
    ..spot12_scene 0x02000000 : AT(_RomSize)
    {
        _spot12_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot12_sceneSegmentTextStart = .;
            build/scenes/overworld/spot12/spot12_scene.o (.text)
        _spot12_sceneSegmentTextEnd = .;
    _spot12_sceneSegmentTextSize = ABSOLUTE( _spot12_sceneSegmentTextEnd - _spot12_sceneSegmentTextStart );
        _spot12_sceneSegmentDataStart = .;
            build/scenes/overworld/spot12/spot12_scene.o (.data)
        _spot12_sceneSegmentDataEnd = .;
    _spot12_sceneSegmentDataSize = ABSOLUTE( _spot12_sceneSegmentDataEnd - _spot12_sceneSegmentDataStart );
        _spot12_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot12/spot12_scene.o (.rodata)
        _spot12_sceneSegmentRoDataEnd = .;
    _spot12_sceneSegmentRoDataSize = ABSOLUTE( _spot12_sceneSegmentRoDataEnd - _spot12_sceneSegmentRoDataStart );
        _spot12_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot12/spot12_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot12_sceneSegmentSDataEnd = .;
        _spot12_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot12/spot12_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot12_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot12_sceneSegmentOvlEnd - _spot12_sceneSegmentTextStart );
    _spot12_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot12_scene.bss ADDR(..spot12_scene) + SIZEOF(..spot12_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot12_sceneSegmentBssStart = .;
            build/scenes/overworld/spot12/spot12_scene.o (.sbss)
            build/scenes/overworld/spot12/spot12_scene.o (.scommon)
            build/scenes/overworld/spot12/spot12_scene.o (.bss)
            build/scenes/overworld/spot12/spot12_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot12_sceneSegmentBssEnd = .;
        _spot12_sceneSegmentEnd = .;
    }
    _spot12_sceneSegmentBssSize = ABSOLUTE( _spot12_sceneSegmentBssEnd - _spot12_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot12_room_0SegmentRomStart = _RomSize;
    ..spot12_room_0 0x03000000 : AT(_RomSize)
    {
        _spot12_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot12_room_0SegmentTextStart = .;
            build/scenes/overworld/spot12/spot12_room_0.o (.text)
        _spot12_room_0SegmentTextEnd = .;
    _spot12_room_0SegmentTextSize = ABSOLUTE( _spot12_room_0SegmentTextEnd - _spot12_room_0SegmentTextStart );
        _spot12_room_0SegmentDataStart = .;
            build/scenes/overworld/spot12/spot12_room_0.o (.data)
        _spot12_room_0SegmentDataEnd = .;
    _spot12_room_0SegmentDataSize = ABSOLUTE( _spot12_room_0SegmentDataEnd - _spot12_room_0SegmentDataStart );
        _spot12_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot12/spot12_room_0.o (.rodata)
        _spot12_room_0SegmentRoDataEnd = .;
    _spot12_room_0SegmentRoDataSize = ABSOLUTE( _spot12_room_0SegmentRoDataEnd - _spot12_room_0SegmentRoDataStart );
        _spot12_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot12/spot12_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot12_room_0SegmentSDataEnd = .;
        _spot12_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot12/spot12_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot12_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot12_room_0SegmentOvlEnd - _spot12_room_0SegmentTextStart );
    _spot12_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot12_room_0.bss ADDR(..spot12_room_0) + SIZEOF(..spot12_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot12_room_0SegmentBssStart = .;
            build/scenes/overworld/spot12/spot12_room_0.o (.sbss)
            build/scenes/overworld/spot12/spot12_room_0.o (.scommon)
            build/scenes/overworld/spot12/spot12_room_0.o (.bss)
            build/scenes/overworld/spot12/spot12_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot12_room_0SegmentBssEnd = .;
        _spot12_room_0SegmentEnd = .;
    }
    _spot12_room_0SegmentBssSize = ABSOLUTE( _spot12_room_0SegmentBssEnd - _spot12_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot12_room_1SegmentRomStart = _RomSize;
    ..spot12_room_1 0x03000000 : AT(_RomSize)
    {
        _spot12_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _spot12_room_1SegmentTextStart = .;
            build/scenes/overworld/spot12/spot12_room_1.o (.text)
        _spot12_room_1SegmentTextEnd = .;
    _spot12_room_1SegmentTextSize = ABSOLUTE( _spot12_room_1SegmentTextEnd - _spot12_room_1SegmentTextStart );
        _spot12_room_1SegmentDataStart = .;
            build/scenes/overworld/spot12/spot12_room_1.o (.data)
        _spot12_room_1SegmentDataEnd = .;
    _spot12_room_1SegmentDataSize = ABSOLUTE( _spot12_room_1SegmentDataEnd - _spot12_room_1SegmentDataStart );
        _spot12_room_1SegmentRoDataStart = .;
            build/scenes/overworld/spot12/spot12_room_1.o (.rodata)
        _spot12_room_1SegmentRoDataEnd = .;
    _spot12_room_1SegmentRoDataSize = ABSOLUTE( _spot12_room_1SegmentRoDataEnd - _spot12_room_1SegmentRoDataStart );
        _spot12_room_1SegmentSDataStart = .;
            build/scenes/overworld/spot12/spot12_room_1.o (.sdata)
        . = ALIGN(0x10);
        _spot12_room_1SegmentSDataEnd = .;
        _spot12_room_1SegmentOvlStart = .;
            build/scenes/overworld/spot12/spot12_room_1.o (.ovl)
        . = ALIGN(0x10);
        _spot12_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _spot12_room_1SegmentOvlEnd - _spot12_room_1SegmentTextStart );
    _spot12_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot12_room_1.bss ADDR(..spot12_room_1) + SIZEOF(..spot12_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot12_room_1SegmentBssStart = .;
            build/scenes/overworld/spot12/spot12_room_1.o (.sbss)
            build/scenes/overworld/spot12/spot12_room_1.o (.scommon)
            build/scenes/overworld/spot12/spot12_room_1.o (.bss)
            build/scenes/overworld/spot12/spot12_room_1.o (COMMON)
        . = ALIGN(0x10);
        _spot12_room_1SegmentBssEnd = .;
        _spot12_room_1SegmentEnd = .;
    }
    _spot12_room_1SegmentBssSize = ABSOLUTE( _spot12_room_1SegmentBssEnd - _spot12_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot13_sceneSegmentRomStart = _RomSize;
    ..spot13_scene 0x02000000 : AT(_RomSize)
    {
        _spot13_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot13_sceneSegmentTextStart = .;
            build/scenes/overworld/spot13/spot13_scene.o (.text)
        _spot13_sceneSegmentTextEnd = .;
    _spot13_sceneSegmentTextSize = ABSOLUTE( _spot13_sceneSegmentTextEnd - _spot13_sceneSegmentTextStart );
        _spot13_sceneSegmentDataStart = .;
            build/scenes/overworld/spot13/spot13_scene.o (.data)
        _spot13_sceneSegmentDataEnd = .;
    _spot13_sceneSegmentDataSize = ABSOLUTE( _spot13_sceneSegmentDataEnd - _spot13_sceneSegmentDataStart );
        _spot13_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot13/spot13_scene.o (.rodata)
        _spot13_sceneSegmentRoDataEnd = .;
    _spot13_sceneSegmentRoDataSize = ABSOLUTE( _spot13_sceneSegmentRoDataEnd - _spot13_sceneSegmentRoDataStart );
        _spot13_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot13/spot13_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot13_sceneSegmentSDataEnd = .;
        _spot13_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot13/spot13_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot13_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot13_sceneSegmentOvlEnd - _spot13_sceneSegmentTextStart );
    _spot13_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot13_scene.bss ADDR(..spot13_scene) + SIZEOF(..spot13_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot13_sceneSegmentBssStart = .;
            build/scenes/overworld/spot13/spot13_scene.o (.sbss)
            build/scenes/overworld/spot13/spot13_scene.o (.scommon)
            build/scenes/overworld/spot13/spot13_scene.o (.bss)
            build/scenes/overworld/spot13/spot13_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot13_sceneSegmentBssEnd = .;
        _spot13_sceneSegmentEnd = .;
    }
    _spot13_sceneSegmentBssSize = ABSOLUTE( _spot13_sceneSegmentBssEnd - _spot13_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot13_room_0SegmentRomStart = _RomSize;
    ..spot13_room_0 0x03000000 : AT(_RomSize)
    {
        _spot13_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot13_room_0SegmentTextStart = .;
            build/scenes/overworld/spot13/spot13_room_0.o (.text)
        _spot13_room_0SegmentTextEnd = .;
    _spot13_room_0SegmentTextSize = ABSOLUTE( _spot13_room_0SegmentTextEnd - _spot13_room_0SegmentTextStart );
        _spot13_room_0SegmentDataStart = .;
            build/scenes/overworld/spot13/spot13_room_0.o (.data)
        _spot13_room_0SegmentDataEnd = .;
    _spot13_room_0SegmentDataSize = ABSOLUTE( _spot13_room_0SegmentDataEnd - _spot13_room_0SegmentDataStart );
        _spot13_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot13/spot13_room_0.o (.rodata)
        _spot13_room_0SegmentRoDataEnd = .;
    _spot13_room_0SegmentRoDataSize = ABSOLUTE( _spot13_room_0SegmentRoDataEnd - _spot13_room_0SegmentRoDataStart );
        _spot13_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot13/spot13_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot13_room_0SegmentSDataEnd = .;
        _spot13_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot13/spot13_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot13_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot13_room_0SegmentOvlEnd - _spot13_room_0SegmentTextStart );
    _spot13_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot13_room_0.bss ADDR(..spot13_room_0) + SIZEOF(..spot13_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot13_room_0SegmentBssStart = .;
            build/scenes/overworld/spot13/spot13_room_0.o (.sbss)
            build/scenes/overworld/spot13/spot13_room_0.o (.scommon)
            build/scenes/overworld/spot13/spot13_room_0.o (.bss)
            build/scenes/overworld/spot13/spot13_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot13_room_0SegmentBssEnd = .;
        _spot13_room_0SegmentEnd = .;
    }
    _spot13_room_0SegmentBssSize = ABSOLUTE( _spot13_room_0SegmentBssEnd - _spot13_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot13_room_1SegmentRomStart = _RomSize;
    ..spot13_room_1 0x03000000 : AT(_RomSize)
    {
        _spot13_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _spot13_room_1SegmentTextStart = .;
            build/scenes/overworld/spot13/spot13_room_1.o (.text)
        _spot13_room_1SegmentTextEnd = .;
    _spot13_room_1SegmentTextSize = ABSOLUTE( _spot13_room_1SegmentTextEnd - _spot13_room_1SegmentTextStart );
        _spot13_room_1SegmentDataStart = .;
            build/scenes/overworld/spot13/spot13_room_1.o (.data)
        _spot13_room_1SegmentDataEnd = .;
    _spot13_room_1SegmentDataSize = ABSOLUTE( _spot13_room_1SegmentDataEnd - _spot13_room_1SegmentDataStart );
        _spot13_room_1SegmentRoDataStart = .;
            build/scenes/overworld/spot13/spot13_room_1.o (.rodata)
        _spot13_room_1SegmentRoDataEnd = .;
    _spot13_room_1SegmentRoDataSize = ABSOLUTE( _spot13_room_1SegmentRoDataEnd - _spot13_room_1SegmentRoDataStart );
        _spot13_room_1SegmentSDataStart = .;
            build/scenes/overworld/spot13/spot13_room_1.o (.sdata)
        . = ALIGN(0x10);
        _spot13_room_1SegmentSDataEnd = .;
        _spot13_room_1SegmentOvlStart = .;
            build/scenes/overworld/spot13/spot13_room_1.o (.ovl)
        . = ALIGN(0x10);
        _spot13_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _spot13_room_1SegmentOvlEnd - _spot13_room_1SegmentTextStart );
    _spot13_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot13_room_1.bss ADDR(..spot13_room_1) + SIZEOF(..spot13_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot13_room_1SegmentBssStart = .;
            build/scenes/overworld/spot13/spot13_room_1.o (.sbss)
            build/scenes/overworld/spot13/spot13_room_1.o (.scommon)
            build/scenes/overworld/spot13/spot13_room_1.o (.bss)
            build/scenes/overworld/spot13/spot13_room_1.o (COMMON)
        . = ALIGN(0x10);
        _spot13_room_1SegmentBssEnd = .;
        _spot13_room_1SegmentEnd = .;
    }
    _spot13_room_1SegmentBssSize = ABSOLUTE( _spot13_room_1SegmentBssEnd - _spot13_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot15_sceneSegmentRomStart = _RomSize;
    ..spot15_scene 0x02000000 : AT(_RomSize)
    {
        _spot15_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot15_sceneSegmentTextStart = .;
            build/scenes/overworld/spot15/spot15_scene.o (.text)
        _spot15_sceneSegmentTextEnd = .;
    _spot15_sceneSegmentTextSize = ABSOLUTE( _spot15_sceneSegmentTextEnd - _spot15_sceneSegmentTextStart );
        _spot15_sceneSegmentDataStart = .;
            build/scenes/overworld/spot15/spot15_scene.o (.data)
        _spot15_sceneSegmentDataEnd = .;
    _spot15_sceneSegmentDataSize = ABSOLUTE( _spot15_sceneSegmentDataEnd - _spot15_sceneSegmentDataStart );
        _spot15_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot15/spot15_scene.o (.rodata)
        _spot15_sceneSegmentRoDataEnd = .;
    _spot15_sceneSegmentRoDataSize = ABSOLUTE( _spot15_sceneSegmentRoDataEnd - _spot15_sceneSegmentRoDataStart );
        _spot15_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot15/spot15_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot15_sceneSegmentSDataEnd = .;
        _spot15_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot15/spot15_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot15_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot15_sceneSegmentOvlEnd - _spot15_sceneSegmentTextStart );
    _spot15_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot15_scene.bss ADDR(..spot15_scene) + SIZEOF(..spot15_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot15_sceneSegmentBssStart = .;
            build/scenes/overworld/spot15/spot15_scene.o (.sbss)
            build/scenes/overworld/spot15/spot15_scene.o (.scommon)
            build/scenes/overworld/spot15/spot15_scene.o (.bss)
            build/scenes/overworld/spot15/spot15_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot15_sceneSegmentBssEnd = .;
        _spot15_sceneSegmentEnd = .;
    }
    _spot15_sceneSegmentBssSize = ABSOLUTE( _spot15_sceneSegmentBssEnd - _spot15_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot15_room_0SegmentRomStart = _RomSize;
    ..spot15_room_0 0x03000000 : AT(_RomSize)
    {
        _spot15_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot15_room_0SegmentTextStart = .;
            build/scenes/overworld/spot15/spot15_room_0.o (.text)
        _spot15_room_0SegmentTextEnd = .;
    _spot15_room_0SegmentTextSize = ABSOLUTE( _spot15_room_0SegmentTextEnd - _spot15_room_0SegmentTextStart );
        _spot15_room_0SegmentDataStart = .;
            build/scenes/overworld/spot15/spot15_room_0.o (.data)
        _spot15_room_0SegmentDataEnd = .;
    _spot15_room_0SegmentDataSize = ABSOLUTE( _spot15_room_0SegmentDataEnd - _spot15_room_0SegmentDataStart );
        _spot15_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot15/spot15_room_0.o (.rodata)
        _spot15_room_0SegmentRoDataEnd = .;
    _spot15_room_0SegmentRoDataSize = ABSOLUTE( _spot15_room_0SegmentRoDataEnd - _spot15_room_0SegmentRoDataStart );
        _spot15_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot15/spot15_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot15_room_0SegmentSDataEnd = .;
        _spot15_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot15/spot15_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot15_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot15_room_0SegmentOvlEnd - _spot15_room_0SegmentTextStart );
    _spot15_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot15_room_0.bss ADDR(..spot15_room_0) + SIZEOF(..spot15_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot15_room_0SegmentBssStart = .;
            build/scenes/overworld/spot15/spot15_room_0.o (.sbss)
            build/scenes/overworld/spot15/spot15_room_0.o (.scommon)
            build/scenes/overworld/spot15/spot15_room_0.o (.bss)
            build/scenes/overworld/spot15/spot15_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot15_room_0SegmentBssEnd = .;
        _spot15_room_0SegmentEnd = .;
    }
    _spot15_room_0SegmentBssSize = ABSOLUTE( _spot15_room_0SegmentBssEnd - _spot15_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot16_sceneSegmentRomStart = _RomSize;
    ..spot16_scene 0x02000000 : AT(_RomSize)
    {
        _spot16_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot16_sceneSegmentTextStart = .;
            build/scenes/overworld/spot16/spot16_scene.o (.text)
        _spot16_sceneSegmentTextEnd = .;
    _spot16_sceneSegmentTextSize = ABSOLUTE( _spot16_sceneSegmentTextEnd - _spot16_sceneSegmentTextStart );
        _spot16_sceneSegmentDataStart = .;
            build/scenes/overworld/spot16/spot16_scene.o (.data)
        _spot16_sceneSegmentDataEnd = .;
    _spot16_sceneSegmentDataSize = ABSOLUTE( _spot16_sceneSegmentDataEnd - _spot16_sceneSegmentDataStart );
        _spot16_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot16/spot16_scene.o (.rodata)
        _spot16_sceneSegmentRoDataEnd = .;
    _spot16_sceneSegmentRoDataSize = ABSOLUTE( _spot16_sceneSegmentRoDataEnd - _spot16_sceneSegmentRoDataStart );
        _spot16_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot16/spot16_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot16_sceneSegmentSDataEnd = .;
        _spot16_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot16/spot16_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot16_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot16_sceneSegmentOvlEnd - _spot16_sceneSegmentTextStart );
    _spot16_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot16_scene.bss ADDR(..spot16_scene) + SIZEOF(..spot16_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot16_sceneSegmentBssStart = .;
            build/scenes/overworld/spot16/spot16_scene.o (.sbss)
            build/scenes/overworld/spot16/spot16_scene.o (.scommon)
            build/scenes/overworld/spot16/spot16_scene.o (.bss)
            build/scenes/overworld/spot16/spot16_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot16_sceneSegmentBssEnd = .;
        _spot16_sceneSegmentEnd = .;
    }
    _spot16_sceneSegmentBssSize = ABSOLUTE( _spot16_sceneSegmentBssEnd - _spot16_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot16_room_0SegmentRomStart = _RomSize;
    ..spot16_room_0 0x03000000 : AT(_RomSize)
    {
        _spot16_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot16_room_0SegmentTextStart = .;
            build/scenes/overworld/spot16/spot16_room_0.o (.text)
        _spot16_room_0SegmentTextEnd = .;
    _spot16_room_0SegmentTextSize = ABSOLUTE( _spot16_room_0SegmentTextEnd - _spot16_room_0SegmentTextStart );
        _spot16_room_0SegmentDataStart = .;
            build/scenes/overworld/spot16/spot16_room_0.o (.data)
        _spot16_room_0SegmentDataEnd = .;
    _spot16_room_0SegmentDataSize = ABSOLUTE( _spot16_room_0SegmentDataEnd - _spot16_room_0SegmentDataStart );
        _spot16_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot16/spot16_room_0.o (.rodata)
        _spot16_room_0SegmentRoDataEnd = .;
    _spot16_room_0SegmentRoDataSize = ABSOLUTE( _spot16_room_0SegmentRoDataEnd - _spot16_room_0SegmentRoDataStart );
        _spot16_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot16/spot16_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot16_room_0SegmentSDataEnd = .;
        _spot16_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot16/spot16_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot16_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot16_room_0SegmentOvlEnd - _spot16_room_0SegmentTextStart );
    _spot16_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot16_room_0.bss ADDR(..spot16_room_0) + SIZEOF(..spot16_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot16_room_0SegmentBssStart = .;
            build/scenes/overworld/spot16/spot16_room_0.o (.sbss)
            build/scenes/overworld/spot16/spot16_room_0.o (.scommon)
            build/scenes/overworld/spot16/spot16_room_0.o (.bss)
            build/scenes/overworld/spot16/spot16_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot16_room_0SegmentBssEnd = .;
        _spot16_room_0SegmentEnd = .;
    }
    _spot16_room_0SegmentBssSize = ABSOLUTE( _spot16_room_0SegmentBssEnd - _spot16_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot17_sceneSegmentRomStart = _RomSize;
    ..spot17_scene 0x02000000 : AT(_RomSize)
    {
        _spot17_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot17_sceneSegmentTextStart = .;
            build/scenes/overworld/spot17/spot17_scene.o (.text)
        _spot17_sceneSegmentTextEnd = .;
    _spot17_sceneSegmentTextSize = ABSOLUTE( _spot17_sceneSegmentTextEnd - _spot17_sceneSegmentTextStart );
        _spot17_sceneSegmentDataStart = .;
            build/scenes/overworld/spot17/spot17_scene.o (.data)
        _spot17_sceneSegmentDataEnd = .;
    _spot17_sceneSegmentDataSize = ABSOLUTE( _spot17_sceneSegmentDataEnd - _spot17_sceneSegmentDataStart );
        _spot17_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot17/spot17_scene.o (.rodata)
        _spot17_sceneSegmentRoDataEnd = .;
    _spot17_sceneSegmentRoDataSize = ABSOLUTE( _spot17_sceneSegmentRoDataEnd - _spot17_sceneSegmentRoDataStart );
        _spot17_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot17/spot17_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot17_sceneSegmentSDataEnd = .;
        _spot17_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot17/spot17_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot17_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot17_sceneSegmentOvlEnd - _spot17_sceneSegmentTextStart );
    _spot17_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot17_scene.bss ADDR(..spot17_scene) + SIZEOF(..spot17_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot17_sceneSegmentBssStart = .;
            build/scenes/overworld/spot17/spot17_scene.o (.sbss)
            build/scenes/overworld/spot17/spot17_scene.o (.scommon)
            build/scenes/overworld/spot17/spot17_scene.o (.bss)
            build/scenes/overworld/spot17/spot17_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot17_sceneSegmentBssEnd = .;
        _spot17_sceneSegmentEnd = .;
    }
    _spot17_sceneSegmentBssSize = ABSOLUTE( _spot17_sceneSegmentBssEnd - _spot17_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot17_room_0SegmentRomStart = _RomSize;
    ..spot17_room_0 0x03000000 : AT(_RomSize)
    {
        _spot17_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot17_room_0SegmentTextStart = .;
            build/scenes/overworld/spot17/spot17_room_0.o (.text)
        _spot17_room_0SegmentTextEnd = .;
    _spot17_room_0SegmentTextSize = ABSOLUTE( _spot17_room_0SegmentTextEnd - _spot17_room_0SegmentTextStart );
        _spot17_room_0SegmentDataStart = .;
            build/scenes/overworld/spot17/spot17_room_0.o (.data)
        _spot17_room_0SegmentDataEnd = .;
    _spot17_room_0SegmentDataSize = ABSOLUTE( _spot17_room_0SegmentDataEnd - _spot17_room_0SegmentDataStart );
        _spot17_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot17/spot17_room_0.o (.rodata)
        _spot17_room_0SegmentRoDataEnd = .;
    _spot17_room_0SegmentRoDataSize = ABSOLUTE( _spot17_room_0SegmentRoDataEnd - _spot17_room_0SegmentRoDataStart );
        _spot17_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot17/spot17_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot17_room_0SegmentSDataEnd = .;
        _spot17_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot17/spot17_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot17_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot17_room_0SegmentOvlEnd - _spot17_room_0SegmentTextStart );
    _spot17_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot17_room_0.bss ADDR(..spot17_room_0) + SIZEOF(..spot17_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot17_room_0SegmentBssStart = .;
            build/scenes/overworld/spot17/spot17_room_0.o (.sbss)
            build/scenes/overworld/spot17/spot17_room_0.o (.scommon)
            build/scenes/overworld/spot17/spot17_room_0.o (.bss)
            build/scenes/overworld/spot17/spot17_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot17_room_0SegmentBssEnd = .;
        _spot17_room_0SegmentEnd = .;
    }
    _spot17_room_0SegmentBssSize = ABSOLUTE( _spot17_room_0SegmentBssEnd - _spot17_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot17_room_1SegmentRomStart = _RomSize;
    ..spot17_room_1 0x03000000 : AT(_RomSize)
    {
        _spot17_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _spot17_room_1SegmentTextStart = .;
            build/scenes/overworld/spot17/spot17_room_1.o (.text)
        _spot17_room_1SegmentTextEnd = .;
    _spot17_room_1SegmentTextSize = ABSOLUTE( _spot17_room_1SegmentTextEnd - _spot17_room_1SegmentTextStart );
        _spot17_room_1SegmentDataStart = .;
            build/scenes/overworld/spot17/spot17_room_1.o (.data)
        _spot17_room_1SegmentDataEnd = .;
    _spot17_room_1SegmentDataSize = ABSOLUTE( _spot17_room_1SegmentDataEnd - _spot17_room_1SegmentDataStart );
        _spot17_room_1SegmentRoDataStart = .;
            build/scenes/overworld/spot17/spot17_room_1.o (.rodata)
        _spot17_room_1SegmentRoDataEnd = .;
    _spot17_room_1SegmentRoDataSize = ABSOLUTE( _spot17_room_1SegmentRoDataEnd - _spot17_room_1SegmentRoDataStart );
        _spot17_room_1SegmentSDataStart = .;
            build/scenes/overworld/spot17/spot17_room_1.o (.sdata)
        . = ALIGN(0x10);
        _spot17_room_1SegmentSDataEnd = .;
        _spot17_room_1SegmentOvlStart = .;
            build/scenes/overworld/spot17/spot17_room_1.o (.ovl)
        . = ALIGN(0x10);
        _spot17_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _spot17_room_1SegmentOvlEnd - _spot17_room_1SegmentTextStart );
    _spot17_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot17_room_1.bss ADDR(..spot17_room_1) + SIZEOF(..spot17_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot17_room_1SegmentBssStart = .;
            build/scenes/overworld/spot17/spot17_room_1.o (.sbss)
            build/scenes/overworld/spot17/spot17_room_1.o (.scommon)
            build/scenes/overworld/spot17/spot17_room_1.o (.bss)
            build/scenes/overworld/spot17/spot17_room_1.o (COMMON)
        . = ALIGN(0x10);
        _spot17_room_1SegmentBssEnd = .;
        _spot17_room_1SegmentEnd = .;
    }
    _spot17_room_1SegmentBssSize = ABSOLUTE( _spot17_room_1SegmentBssEnd - _spot17_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot18_sceneSegmentRomStart = _RomSize;
    ..spot18_scene 0x02000000 : AT(_RomSize)
    {
        _spot18_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot18_sceneSegmentTextStart = .;
            build/scenes/overworld/spot18/spot18_scene.o (.text)
        _spot18_sceneSegmentTextEnd = .;
    _spot18_sceneSegmentTextSize = ABSOLUTE( _spot18_sceneSegmentTextEnd - _spot18_sceneSegmentTextStart );
        _spot18_sceneSegmentDataStart = .;
            build/scenes/overworld/spot18/spot18_scene.o (.data)
        _spot18_sceneSegmentDataEnd = .;
    _spot18_sceneSegmentDataSize = ABSOLUTE( _spot18_sceneSegmentDataEnd - _spot18_sceneSegmentDataStart );
        _spot18_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot18/spot18_scene.o (.rodata)
        _spot18_sceneSegmentRoDataEnd = .;
    _spot18_sceneSegmentRoDataSize = ABSOLUTE( _spot18_sceneSegmentRoDataEnd - _spot18_sceneSegmentRoDataStart );
        _spot18_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot18/spot18_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot18_sceneSegmentSDataEnd = .;
        _spot18_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot18/spot18_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot18_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot18_sceneSegmentOvlEnd - _spot18_sceneSegmentTextStart );
    _spot18_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot18_scene.bss ADDR(..spot18_scene) + SIZEOF(..spot18_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot18_sceneSegmentBssStart = .;
            build/scenes/overworld/spot18/spot18_scene.o (.sbss)
            build/scenes/overworld/spot18/spot18_scene.o (.scommon)
            build/scenes/overworld/spot18/spot18_scene.o (.bss)
            build/scenes/overworld/spot18/spot18_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot18_sceneSegmentBssEnd = .;
        _spot18_sceneSegmentEnd = .;
    }
    _spot18_sceneSegmentBssSize = ABSOLUTE( _spot18_sceneSegmentBssEnd - _spot18_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot18_room_0SegmentRomStart = _RomSize;
    ..spot18_room_0 0x03000000 : AT(_RomSize)
    {
        _spot18_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot18_room_0SegmentTextStart = .;
            build/scenes/overworld/spot18/spot18_room_0.o (.text)
        _spot18_room_0SegmentTextEnd = .;
    _spot18_room_0SegmentTextSize = ABSOLUTE( _spot18_room_0SegmentTextEnd - _spot18_room_0SegmentTextStart );
        _spot18_room_0SegmentDataStart = .;
            build/scenes/overworld/spot18/spot18_room_0.o (.data)
        _spot18_room_0SegmentDataEnd = .;
    _spot18_room_0SegmentDataSize = ABSOLUTE( _spot18_room_0SegmentDataEnd - _spot18_room_0SegmentDataStart );
        _spot18_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot18/spot18_room_0.o (.rodata)
        _spot18_room_0SegmentRoDataEnd = .;
    _spot18_room_0SegmentRoDataSize = ABSOLUTE( _spot18_room_0SegmentRoDataEnd - _spot18_room_0SegmentRoDataStart );
        _spot18_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot18/spot18_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot18_room_0SegmentSDataEnd = .;
        _spot18_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot18/spot18_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot18_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot18_room_0SegmentOvlEnd - _spot18_room_0SegmentTextStart );
    _spot18_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot18_room_0.bss ADDR(..spot18_room_0) + SIZEOF(..spot18_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot18_room_0SegmentBssStart = .;
            build/scenes/overworld/spot18/spot18_room_0.o (.sbss)
            build/scenes/overworld/spot18/spot18_room_0.o (.scommon)
            build/scenes/overworld/spot18/spot18_room_0.o (.bss)
            build/scenes/overworld/spot18/spot18_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot18_room_0SegmentBssEnd = .;
        _spot18_room_0SegmentEnd = .;
    }
    _spot18_room_0SegmentBssSize = ABSOLUTE( _spot18_room_0SegmentBssEnd - _spot18_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot18_room_1SegmentRomStart = _RomSize;
    ..spot18_room_1 0x03000000 : AT(_RomSize)
    {
        _spot18_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _spot18_room_1SegmentTextStart = .;
            build/scenes/overworld/spot18/spot18_room_1.o (.text)
        _spot18_room_1SegmentTextEnd = .;
    _spot18_room_1SegmentTextSize = ABSOLUTE( _spot18_room_1SegmentTextEnd - _spot18_room_1SegmentTextStart );
        _spot18_room_1SegmentDataStart = .;
            build/scenes/overworld/spot18/spot18_room_1.o (.data)
        _spot18_room_1SegmentDataEnd = .;
    _spot18_room_1SegmentDataSize = ABSOLUTE( _spot18_room_1SegmentDataEnd - _spot18_room_1SegmentDataStart );
        _spot18_room_1SegmentRoDataStart = .;
            build/scenes/overworld/spot18/spot18_room_1.o (.rodata)
        _spot18_room_1SegmentRoDataEnd = .;
    _spot18_room_1SegmentRoDataSize = ABSOLUTE( _spot18_room_1SegmentRoDataEnd - _spot18_room_1SegmentRoDataStart );
        _spot18_room_1SegmentSDataStart = .;
            build/scenes/overworld/spot18/spot18_room_1.o (.sdata)
        . = ALIGN(0x10);
        _spot18_room_1SegmentSDataEnd = .;
        _spot18_room_1SegmentOvlStart = .;
            build/scenes/overworld/spot18/spot18_room_1.o (.ovl)
        . = ALIGN(0x10);
        _spot18_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _spot18_room_1SegmentOvlEnd - _spot18_room_1SegmentTextStart );
    _spot18_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot18_room_1.bss ADDR(..spot18_room_1) + SIZEOF(..spot18_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot18_room_1SegmentBssStart = .;
            build/scenes/overworld/spot18/spot18_room_1.o (.sbss)
            build/scenes/overworld/spot18/spot18_room_1.o (.scommon)
            build/scenes/overworld/spot18/spot18_room_1.o (.bss)
            build/scenes/overworld/spot18/spot18_room_1.o (COMMON)
        . = ALIGN(0x10);
        _spot18_room_1SegmentBssEnd = .;
        _spot18_room_1SegmentEnd = .;
    }
    _spot18_room_1SegmentBssSize = ABSOLUTE( _spot18_room_1SegmentBssEnd - _spot18_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot18_room_2SegmentRomStart = _RomSize;
    ..spot18_room_2 0x03000000 : AT(_RomSize)
    {
        _spot18_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _spot18_room_2SegmentTextStart = .;
            build/scenes/overworld/spot18/spot18_room_2.o (.text)
        _spot18_room_2SegmentTextEnd = .;
    _spot18_room_2SegmentTextSize = ABSOLUTE( _spot18_room_2SegmentTextEnd - _spot18_room_2SegmentTextStart );
        _spot18_room_2SegmentDataStart = .;
            build/scenes/overworld/spot18/spot18_room_2.o (.data)
        _spot18_room_2SegmentDataEnd = .;
    _spot18_room_2SegmentDataSize = ABSOLUTE( _spot18_room_2SegmentDataEnd - _spot18_room_2SegmentDataStart );
        _spot18_room_2SegmentRoDataStart = .;
            build/scenes/overworld/spot18/spot18_room_2.o (.rodata)
        _spot18_room_2SegmentRoDataEnd = .;
    _spot18_room_2SegmentRoDataSize = ABSOLUTE( _spot18_room_2SegmentRoDataEnd - _spot18_room_2SegmentRoDataStart );
        _spot18_room_2SegmentSDataStart = .;
            build/scenes/overworld/spot18/spot18_room_2.o (.sdata)
        . = ALIGN(0x10);
        _spot18_room_2SegmentSDataEnd = .;
        _spot18_room_2SegmentOvlStart = .;
            build/scenes/overworld/spot18/spot18_room_2.o (.ovl)
        . = ALIGN(0x10);
        _spot18_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _spot18_room_2SegmentOvlEnd - _spot18_room_2SegmentTextStart );
    _spot18_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot18_room_2.bss ADDR(..spot18_room_2) + SIZEOF(..spot18_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot18_room_2SegmentBssStart = .;
            build/scenes/overworld/spot18/spot18_room_2.o (.sbss)
            build/scenes/overworld/spot18/spot18_room_2.o (.scommon)
            build/scenes/overworld/spot18/spot18_room_2.o (.bss)
            build/scenes/overworld/spot18/spot18_room_2.o (COMMON)
        . = ALIGN(0x10);
        _spot18_room_2SegmentBssEnd = .;
        _spot18_room_2SegmentEnd = .;
    }
    _spot18_room_2SegmentBssSize = ABSOLUTE( _spot18_room_2SegmentBssEnd - _spot18_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot18_room_3SegmentRomStart = _RomSize;
    ..spot18_room_3 0x03000000 : AT(_RomSize)
    {
        _spot18_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _spot18_room_3SegmentTextStart = .;
            build/scenes/overworld/spot18/spot18_room_3.o (.text)
        _spot18_room_3SegmentTextEnd = .;
    _spot18_room_3SegmentTextSize = ABSOLUTE( _spot18_room_3SegmentTextEnd - _spot18_room_3SegmentTextStart );
        _spot18_room_3SegmentDataStart = .;
            build/scenes/overworld/spot18/spot18_room_3.o (.data)
        _spot18_room_3SegmentDataEnd = .;
    _spot18_room_3SegmentDataSize = ABSOLUTE( _spot18_room_3SegmentDataEnd - _spot18_room_3SegmentDataStart );
        _spot18_room_3SegmentRoDataStart = .;
            build/scenes/overworld/spot18/spot18_room_3.o (.rodata)
        _spot18_room_3SegmentRoDataEnd = .;
    _spot18_room_3SegmentRoDataSize = ABSOLUTE( _spot18_room_3SegmentRoDataEnd - _spot18_room_3SegmentRoDataStart );
        _spot18_room_3SegmentSDataStart = .;
            build/scenes/overworld/spot18/spot18_room_3.o (.sdata)
        . = ALIGN(0x10);
        _spot18_room_3SegmentSDataEnd = .;
        _spot18_room_3SegmentOvlStart = .;
            build/scenes/overworld/spot18/spot18_room_3.o (.ovl)
        . = ALIGN(0x10);
        _spot18_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _spot18_room_3SegmentOvlEnd - _spot18_room_3SegmentTextStart );
    _spot18_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot18_room_3.bss ADDR(..spot18_room_3) + SIZEOF(..spot18_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot18_room_3SegmentBssStart = .;
            build/scenes/overworld/spot18/spot18_room_3.o (.sbss)
            build/scenes/overworld/spot18/spot18_room_3.o (.scommon)
            build/scenes/overworld/spot18/spot18_room_3.o (.bss)
            build/scenes/overworld/spot18/spot18_room_3.o (COMMON)
        . = ALIGN(0x10);
        _spot18_room_3SegmentBssEnd = .;
        _spot18_room_3SegmentEnd = .;
    }
    _spot18_room_3SegmentBssSize = ABSOLUTE( _spot18_room_3SegmentBssEnd - _spot18_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _market_day_sceneSegmentRomStart = _RomSize;
    ..market_day_scene 0x02000000 : AT(_RomSize)
    {
        _market_day_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _market_day_sceneSegmentTextStart = .;
            build/scenes/misc/market_day/market_day_scene.o (.text)
        _market_day_sceneSegmentTextEnd = .;
    _market_day_sceneSegmentTextSize = ABSOLUTE( _market_day_sceneSegmentTextEnd - _market_day_sceneSegmentTextStart );
        _market_day_sceneSegmentDataStart = .;
            build/scenes/misc/market_day/market_day_scene.o (.data)
        _market_day_sceneSegmentDataEnd = .;
    _market_day_sceneSegmentDataSize = ABSOLUTE( _market_day_sceneSegmentDataEnd - _market_day_sceneSegmentDataStart );
        _market_day_sceneSegmentRoDataStart = .;
            build/scenes/misc/market_day/market_day_scene.o (.rodata)
        _market_day_sceneSegmentRoDataEnd = .;
    _market_day_sceneSegmentRoDataSize = ABSOLUTE( _market_day_sceneSegmentRoDataEnd - _market_day_sceneSegmentRoDataStart );
        _market_day_sceneSegmentSDataStart = .;
            build/scenes/misc/market_day/market_day_scene.o (.sdata)
        . = ALIGN(0x10);
        _market_day_sceneSegmentSDataEnd = .;
        _market_day_sceneSegmentOvlStart = .;
            build/scenes/misc/market_day/market_day_scene.o (.ovl)
        . = ALIGN(0x10);
        _market_day_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _market_day_sceneSegmentOvlEnd - _market_day_sceneSegmentTextStart );
    _market_day_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..market_day_scene.bss ADDR(..market_day_scene) + SIZEOF(..market_day_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _market_day_sceneSegmentBssStart = .;
            build/scenes/misc/market_day/market_day_scene.o (.sbss)
            build/scenes/misc/market_day/market_day_scene.o (.scommon)
            build/scenes/misc/market_day/market_day_scene.o (.bss)
            build/scenes/misc/market_day/market_day_scene.o (COMMON)
        . = ALIGN(0x10);
        _market_day_sceneSegmentBssEnd = .;
        _market_day_sceneSegmentEnd = .;
    }
    _market_day_sceneSegmentBssSize = ABSOLUTE( _market_day_sceneSegmentBssEnd - _market_day_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _market_day_room_0SegmentRomStart = _RomSize;
    ..market_day_room_0 0x03000000 : AT(_RomSize)
    {
        _market_day_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _market_day_room_0SegmentTextStart = .;
            build/scenes/misc/market_day/market_day_room_0.o (.text)
        _market_day_room_0SegmentTextEnd = .;
    _market_day_room_0SegmentTextSize = ABSOLUTE( _market_day_room_0SegmentTextEnd - _market_day_room_0SegmentTextStart );
        _market_day_room_0SegmentDataStart = .;
            build/scenes/misc/market_day/market_day_room_0.o (.data)
        _market_day_room_0SegmentDataEnd = .;
    _market_day_room_0SegmentDataSize = ABSOLUTE( _market_day_room_0SegmentDataEnd - _market_day_room_0SegmentDataStart );
        _market_day_room_0SegmentRoDataStart = .;
            build/scenes/misc/market_day/market_day_room_0.o (.rodata)
        _market_day_room_0SegmentRoDataEnd = .;
    _market_day_room_0SegmentRoDataSize = ABSOLUTE( _market_day_room_0SegmentRoDataEnd - _market_day_room_0SegmentRoDataStart );
        _market_day_room_0SegmentSDataStart = .;
            build/scenes/misc/market_day/market_day_room_0.o (.sdata)
        . = ALIGN(0x10);
        _market_day_room_0SegmentSDataEnd = .;
        _market_day_room_0SegmentOvlStart = .;
            build/scenes/misc/market_day/market_day_room_0.o (.ovl)
        . = ALIGN(0x10);
        _market_day_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _market_day_room_0SegmentOvlEnd - _market_day_room_0SegmentTextStart );
    _market_day_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..market_day_room_0.bss ADDR(..market_day_room_0) + SIZEOF(..market_day_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _market_day_room_0SegmentBssStart = .;
            build/scenes/misc/market_day/market_day_room_0.o (.sbss)
            build/scenes/misc/market_day/market_day_room_0.o (.scommon)
            build/scenes/misc/market_day/market_day_room_0.o (.bss)
            build/scenes/misc/market_day/market_day_room_0.o (COMMON)
        . = ALIGN(0x10);
        _market_day_room_0SegmentBssEnd = .;
        _market_day_room_0SegmentEnd = .;
    }
    _market_day_room_0SegmentBssSize = ABSOLUTE( _market_day_room_0SegmentBssEnd - _market_day_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _market_night_sceneSegmentRomStart = _RomSize;
    ..market_night_scene 0x02000000 : AT(_RomSize)
    {
        _market_night_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _market_night_sceneSegmentTextStart = .;
            build/scenes/misc/market_night/market_night_scene.o (.text)
        _market_night_sceneSegmentTextEnd = .;
    _market_night_sceneSegmentTextSize = ABSOLUTE( _market_night_sceneSegmentTextEnd - _market_night_sceneSegmentTextStart );
        _market_night_sceneSegmentDataStart = .;
            build/scenes/misc/market_night/market_night_scene.o (.data)
        _market_night_sceneSegmentDataEnd = .;
    _market_night_sceneSegmentDataSize = ABSOLUTE( _market_night_sceneSegmentDataEnd - _market_night_sceneSegmentDataStart );
        _market_night_sceneSegmentRoDataStart = .;
            build/scenes/misc/market_night/market_night_scene.o (.rodata)
        _market_night_sceneSegmentRoDataEnd = .;
    _market_night_sceneSegmentRoDataSize = ABSOLUTE( _market_night_sceneSegmentRoDataEnd - _market_night_sceneSegmentRoDataStart );
        _market_night_sceneSegmentSDataStart = .;
            build/scenes/misc/market_night/market_night_scene.o (.sdata)
        . = ALIGN(0x10);
        _market_night_sceneSegmentSDataEnd = .;
        _market_night_sceneSegmentOvlStart = .;
            build/scenes/misc/market_night/market_night_scene.o (.ovl)
        . = ALIGN(0x10);
        _market_night_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _market_night_sceneSegmentOvlEnd - _market_night_sceneSegmentTextStart );
    _market_night_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..market_night_scene.bss ADDR(..market_night_scene) + SIZEOF(..market_night_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _market_night_sceneSegmentBssStart = .;
            build/scenes/misc/market_night/market_night_scene.o (.sbss)
            build/scenes/misc/market_night/market_night_scene.o (.scommon)
            build/scenes/misc/market_night/market_night_scene.o (.bss)
            build/scenes/misc/market_night/market_night_scene.o (COMMON)
        . = ALIGN(0x10);
        _market_night_sceneSegmentBssEnd = .;
        _market_night_sceneSegmentEnd = .;
    }
    _market_night_sceneSegmentBssSize = ABSOLUTE( _market_night_sceneSegmentBssEnd - _market_night_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _market_night_room_0SegmentRomStart = _RomSize;
    ..market_night_room_0 0x03000000 : AT(_RomSize)
    {
        _market_night_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _market_night_room_0SegmentTextStart = .;
            build/scenes/misc/market_night/market_night_room_0.o (.text)
        _market_night_room_0SegmentTextEnd = .;
    _market_night_room_0SegmentTextSize = ABSOLUTE( _market_night_room_0SegmentTextEnd - _market_night_room_0SegmentTextStart );
        _market_night_room_0SegmentDataStart = .;
            build/scenes/misc/market_night/market_night_room_0.o (.data)
        _market_night_room_0SegmentDataEnd = .;
    _market_night_room_0SegmentDataSize = ABSOLUTE( _market_night_room_0SegmentDataEnd - _market_night_room_0SegmentDataStart );
        _market_night_room_0SegmentRoDataStart = .;
            build/scenes/misc/market_night/market_night_room_0.o (.rodata)
        _market_night_room_0SegmentRoDataEnd = .;
    _market_night_room_0SegmentRoDataSize = ABSOLUTE( _market_night_room_0SegmentRoDataEnd - _market_night_room_0SegmentRoDataStart );
        _market_night_room_0SegmentSDataStart = .;
            build/scenes/misc/market_night/market_night_room_0.o (.sdata)
        . = ALIGN(0x10);
        _market_night_room_0SegmentSDataEnd = .;
        _market_night_room_0SegmentOvlStart = .;
            build/scenes/misc/market_night/market_night_room_0.o (.ovl)
        . = ALIGN(0x10);
        _market_night_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _market_night_room_0SegmentOvlEnd - _market_night_room_0SegmentTextStart );
    _market_night_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..market_night_room_0.bss ADDR(..market_night_room_0) + SIZEOF(..market_night_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _market_night_room_0SegmentBssStart = .;
            build/scenes/misc/market_night/market_night_room_0.o (.sbss)
            build/scenes/misc/market_night/market_night_room_0.o (.scommon)
            build/scenes/misc/market_night/market_night_room_0.o (.bss)
            build/scenes/misc/market_night/market_night_room_0.o (COMMON)
        . = ALIGN(0x10);
        _market_night_room_0SegmentBssEnd = .;
        _market_night_room_0SegmentEnd = .;
    }
    _market_night_room_0SegmentBssSize = ABSOLUTE( _market_night_room_0SegmentBssEnd - _market_night_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _testroom_sceneSegmentRomStart = _RomSize;
    ..testroom_scene 0x02000000 : AT(_RomSize)
    {
        _testroom_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _testroom_sceneSegmentTextStart = .;
            build/scenes/test_levels/testroom/testroom_scene.o (.text)
        _testroom_sceneSegmentTextEnd = .;
    _testroom_sceneSegmentTextSize = ABSOLUTE( _testroom_sceneSegmentTextEnd - _testroom_sceneSegmentTextStart );
        _testroom_sceneSegmentDataStart = .;
            build/scenes/test_levels/testroom/testroom_scene.o (.data)
        _testroom_sceneSegmentDataEnd = .;
    _testroom_sceneSegmentDataSize = ABSOLUTE( _testroom_sceneSegmentDataEnd - _testroom_sceneSegmentDataStart );
        _testroom_sceneSegmentRoDataStart = .;
            build/scenes/test_levels/testroom/testroom_scene.o (.rodata)
        _testroom_sceneSegmentRoDataEnd = .;
    _testroom_sceneSegmentRoDataSize = ABSOLUTE( _testroom_sceneSegmentRoDataEnd - _testroom_sceneSegmentRoDataStart );
        _testroom_sceneSegmentSDataStart = .;
            build/scenes/test_levels/testroom/testroom_scene.o (.sdata)
        . = ALIGN(0x10);
        _testroom_sceneSegmentSDataEnd = .;
        _testroom_sceneSegmentOvlStart = .;
            build/scenes/test_levels/testroom/testroom_scene.o (.ovl)
        . = ALIGN(0x10);
        _testroom_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _testroom_sceneSegmentOvlEnd - _testroom_sceneSegmentTextStart );
    _testroom_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..testroom_scene.bss ADDR(..testroom_scene) + SIZEOF(..testroom_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _testroom_sceneSegmentBssStart = .;
            build/scenes/test_levels/testroom/testroom_scene.o (.sbss)
            build/scenes/test_levels/testroom/testroom_scene.o (.scommon)
            build/scenes/test_levels/testroom/testroom_scene.o (.bss)
            build/scenes/test_levels/testroom/testroom_scene.o (COMMON)
        . = ALIGN(0x10);
        _testroom_sceneSegmentBssEnd = .;
        _testroom_sceneSegmentEnd = .;
    }
    _testroom_sceneSegmentBssSize = ABSOLUTE( _testroom_sceneSegmentBssEnd - _testroom_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _testroom_room_0SegmentRomStart = _RomSize;
    ..testroom_room_0 0x03000000 : AT(_RomSize)
    {
        _testroom_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _testroom_room_0SegmentTextStart = .;
            build/scenes/test_levels/testroom/testroom_room_0.o (.text)
        _testroom_room_0SegmentTextEnd = .;
    _testroom_room_0SegmentTextSize = ABSOLUTE( _testroom_room_0SegmentTextEnd - _testroom_room_0SegmentTextStart );
        _testroom_room_0SegmentDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_0.o (.data)
        _testroom_room_0SegmentDataEnd = .;
    _testroom_room_0SegmentDataSize = ABSOLUTE( _testroom_room_0SegmentDataEnd - _testroom_room_0SegmentDataStart );
        _testroom_room_0SegmentRoDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_0.o (.rodata)
        _testroom_room_0SegmentRoDataEnd = .;
    _testroom_room_0SegmentRoDataSize = ABSOLUTE( _testroom_room_0SegmentRoDataEnd - _testroom_room_0SegmentRoDataStart );
        _testroom_room_0SegmentSDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_0.o (.sdata)
        . = ALIGN(0x10);
        _testroom_room_0SegmentSDataEnd = .;
        _testroom_room_0SegmentOvlStart = .;
            build/scenes/test_levels/testroom/testroom_room_0.o (.ovl)
        . = ALIGN(0x10);
        _testroom_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _testroom_room_0SegmentOvlEnd - _testroom_room_0SegmentTextStart );
    _testroom_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..testroom_room_0.bss ADDR(..testroom_room_0) + SIZEOF(..testroom_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _testroom_room_0SegmentBssStart = .;
            build/scenes/test_levels/testroom/testroom_room_0.o (.sbss)
            build/scenes/test_levels/testroom/testroom_room_0.o (.scommon)
            build/scenes/test_levels/testroom/testroom_room_0.o (.bss)
            build/scenes/test_levels/testroom/testroom_room_0.o (COMMON)
        . = ALIGN(0x10);
        _testroom_room_0SegmentBssEnd = .;
        _testroom_room_0SegmentEnd = .;
    }
    _testroom_room_0SegmentBssSize = ABSOLUTE( _testroom_room_0SegmentBssEnd - _testroom_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _testroom_room_1SegmentRomStart = _RomSize;
    ..testroom_room_1 0x03000000 : AT(_RomSize)
    {
        _testroom_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _testroom_room_1SegmentTextStart = .;
            build/scenes/test_levels/testroom/testroom_room_1.o (.text)
        _testroom_room_1SegmentTextEnd = .;
    _testroom_room_1SegmentTextSize = ABSOLUTE( _testroom_room_1SegmentTextEnd - _testroom_room_1SegmentTextStart );
        _testroom_room_1SegmentDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_1.o (.data)
        _testroom_room_1SegmentDataEnd = .;
    _testroom_room_1SegmentDataSize = ABSOLUTE( _testroom_room_1SegmentDataEnd - _testroom_room_1SegmentDataStart );
        _testroom_room_1SegmentRoDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_1.o (.rodata)
        _testroom_room_1SegmentRoDataEnd = .;
    _testroom_room_1SegmentRoDataSize = ABSOLUTE( _testroom_room_1SegmentRoDataEnd - _testroom_room_1SegmentRoDataStart );
        _testroom_room_1SegmentSDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_1.o (.sdata)
        . = ALIGN(0x10);
        _testroom_room_1SegmentSDataEnd = .;
        _testroom_room_1SegmentOvlStart = .;
            build/scenes/test_levels/testroom/testroom_room_1.o (.ovl)
        . = ALIGN(0x10);
        _testroom_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _testroom_room_1SegmentOvlEnd - _testroom_room_1SegmentTextStart );
    _testroom_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..testroom_room_1.bss ADDR(..testroom_room_1) + SIZEOF(..testroom_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _testroom_room_1SegmentBssStart = .;
            build/scenes/test_levels/testroom/testroom_room_1.o (.sbss)
            build/scenes/test_levels/testroom/testroom_room_1.o (.scommon)
            build/scenes/test_levels/testroom/testroom_room_1.o (.bss)
            build/scenes/test_levels/testroom/testroom_room_1.o (COMMON)
        . = ALIGN(0x10);
        _testroom_room_1SegmentBssEnd = .;
        _testroom_room_1SegmentEnd = .;
    }
    _testroom_room_1SegmentBssSize = ABSOLUTE( _testroom_room_1SegmentBssEnd - _testroom_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _testroom_room_2SegmentRomStart = _RomSize;
    ..testroom_room_2 0x03000000 : AT(_RomSize)
    {
        _testroom_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _testroom_room_2SegmentTextStart = .;
            build/scenes/test_levels/testroom/testroom_room_2.o (.text)
        _testroom_room_2SegmentTextEnd = .;
    _testroom_room_2SegmentTextSize = ABSOLUTE( _testroom_room_2SegmentTextEnd - _testroom_room_2SegmentTextStart );
        _testroom_room_2SegmentDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_2.o (.data)
        _testroom_room_2SegmentDataEnd = .;
    _testroom_room_2SegmentDataSize = ABSOLUTE( _testroom_room_2SegmentDataEnd - _testroom_room_2SegmentDataStart );
        _testroom_room_2SegmentRoDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_2.o (.rodata)
        _testroom_room_2SegmentRoDataEnd = .;
    _testroom_room_2SegmentRoDataSize = ABSOLUTE( _testroom_room_2SegmentRoDataEnd - _testroom_room_2SegmentRoDataStart );
        _testroom_room_2SegmentSDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_2.o (.sdata)
        . = ALIGN(0x10);
        _testroom_room_2SegmentSDataEnd = .;
        _testroom_room_2SegmentOvlStart = .;
            build/scenes/test_levels/testroom/testroom_room_2.o (.ovl)
        . = ALIGN(0x10);
        _testroom_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _testroom_room_2SegmentOvlEnd - _testroom_room_2SegmentTextStart );
    _testroom_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..testroom_room_2.bss ADDR(..testroom_room_2) + SIZEOF(..testroom_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _testroom_room_2SegmentBssStart = .;
            build/scenes/test_levels/testroom/testroom_room_2.o (.sbss)
            build/scenes/test_levels/testroom/testroom_room_2.o (.scommon)
            build/scenes/test_levels/testroom/testroom_room_2.o (.bss)
            build/scenes/test_levels/testroom/testroom_room_2.o (COMMON)
        . = ALIGN(0x10);
        _testroom_room_2SegmentBssEnd = .;
        _testroom_room_2SegmentEnd = .;
    }
    _testroom_room_2SegmentBssSize = ABSOLUTE( _testroom_room_2SegmentBssEnd - _testroom_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _testroom_room_3SegmentRomStart = _RomSize;
    ..testroom_room_3 0x03000000 : AT(_RomSize)
    {
        _testroom_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _testroom_room_3SegmentTextStart = .;
            build/scenes/test_levels/testroom/testroom_room_3.o (.text)
        _testroom_room_3SegmentTextEnd = .;
    _testroom_room_3SegmentTextSize = ABSOLUTE( _testroom_room_3SegmentTextEnd - _testroom_room_3SegmentTextStart );
        _testroom_room_3SegmentDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_3.o (.data)
        _testroom_room_3SegmentDataEnd = .;
    _testroom_room_3SegmentDataSize = ABSOLUTE( _testroom_room_3SegmentDataEnd - _testroom_room_3SegmentDataStart );
        _testroom_room_3SegmentRoDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_3.o (.rodata)
        _testroom_room_3SegmentRoDataEnd = .;
    _testroom_room_3SegmentRoDataSize = ABSOLUTE( _testroom_room_3SegmentRoDataEnd - _testroom_room_3SegmentRoDataStart );
        _testroom_room_3SegmentSDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_3.o (.sdata)
        . = ALIGN(0x10);
        _testroom_room_3SegmentSDataEnd = .;
        _testroom_room_3SegmentOvlStart = .;
            build/scenes/test_levels/testroom/testroom_room_3.o (.ovl)
        . = ALIGN(0x10);
        _testroom_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _testroom_room_3SegmentOvlEnd - _testroom_room_3SegmentTextStart );
    _testroom_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..testroom_room_3.bss ADDR(..testroom_room_3) + SIZEOF(..testroom_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _testroom_room_3SegmentBssStart = .;
            build/scenes/test_levels/testroom/testroom_room_3.o (.sbss)
            build/scenes/test_levels/testroom/testroom_room_3.o (.scommon)
            build/scenes/test_levels/testroom/testroom_room_3.o (.bss)
            build/scenes/test_levels/testroom/testroom_room_3.o (COMMON)
        . = ALIGN(0x10);
        _testroom_room_3SegmentBssEnd = .;
        _testroom_room_3SegmentEnd = .;
    }
    _testroom_room_3SegmentBssSize = ABSOLUTE( _testroom_room_3SegmentBssEnd - _testroom_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _testroom_room_4SegmentRomStart = _RomSize;
    ..testroom_room_4 0x03000000 : AT(_RomSize)
    {
        _testroom_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _testroom_room_4SegmentTextStart = .;
            build/scenes/test_levels/testroom/testroom_room_4.o (.text)
        _testroom_room_4SegmentTextEnd = .;
    _testroom_room_4SegmentTextSize = ABSOLUTE( _testroom_room_4SegmentTextEnd - _testroom_room_4SegmentTextStart );
        _testroom_room_4SegmentDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_4.o (.data)
        _testroom_room_4SegmentDataEnd = .;
    _testroom_room_4SegmentDataSize = ABSOLUTE( _testroom_room_4SegmentDataEnd - _testroom_room_4SegmentDataStart );
        _testroom_room_4SegmentRoDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_4.o (.rodata)
        _testroom_room_4SegmentRoDataEnd = .;
    _testroom_room_4SegmentRoDataSize = ABSOLUTE( _testroom_room_4SegmentRoDataEnd - _testroom_room_4SegmentRoDataStart );
        _testroom_room_4SegmentSDataStart = .;
            build/scenes/test_levels/testroom/testroom_room_4.o (.sdata)
        . = ALIGN(0x10);
        _testroom_room_4SegmentSDataEnd = .;
        _testroom_room_4SegmentOvlStart = .;
            build/scenes/test_levels/testroom/testroom_room_4.o (.ovl)
        . = ALIGN(0x10);
        _testroom_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _testroom_room_4SegmentOvlEnd - _testroom_room_4SegmentTextStart );
    _testroom_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..testroom_room_4.bss ADDR(..testroom_room_4) + SIZEOF(..testroom_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _testroom_room_4SegmentBssStart = .;
            build/scenes/test_levels/testroom/testroom_room_4.o (.sbss)
            build/scenes/test_levels/testroom/testroom_room_4.o (.scommon)
            build/scenes/test_levels/testroom/testroom_room_4.o (.bss)
            build/scenes/test_levels/testroom/testroom_room_4.o (COMMON)
        . = ALIGN(0x10);
        _testroom_room_4SegmentBssEnd = .;
        _testroom_room_4SegmentEnd = .;
    }
    _testroom_room_4SegmentBssSize = ABSOLUTE( _testroom_room_4SegmentBssEnd - _testroom_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kenjyanoma_sceneSegmentRomStart = _RomSize;
    ..kenjyanoma_scene 0x02000000 : AT(_RomSize)
    {
        _kenjyanoma_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _kenjyanoma_sceneSegmentTextStart = .;
            build/scenes/indoors/kenjyanoma/kenjyanoma_scene.o (.text)
        _kenjyanoma_sceneSegmentTextEnd = .;
    _kenjyanoma_sceneSegmentTextSize = ABSOLUTE( _kenjyanoma_sceneSegmentTextEnd - _kenjyanoma_sceneSegmentTextStart );
        _kenjyanoma_sceneSegmentDataStart = .;
            build/scenes/indoors/kenjyanoma/kenjyanoma_scene.o (.data)
        _kenjyanoma_sceneSegmentDataEnd = .;
    _kenjyanoma_sceneSegmentDataSize = ABSOLUTE( _kenjyanoma_sceneSegmentDataEnd - _kenjyanoma_sceneSegmentDataStart );
        _kenjyanoma_sceneSegmentRoDataStart = .;
            build/scenes/indoors/kenjyanoma/kenjyanoma_scene.o (.rodata)
        _kenjyanoma_sceneSegmentRoDataEnd = .;
    _kenjyanoma_sceneSegmentRoDataSize = ABSOLUTE( _kenjyanoma_sceneSegmentRoDataEnd - _kenjyanoma_sceneSegmentRoDataStart );
        _kenjyanoma_sceneSegmentSDataStart = .;
            build/scenes/indoors/kenjyanoma/kenjyanoma_scene.o (.sdata)
        . = ALIGN(0x10);
        _kenjyanoma_sceneSegmentSDataEnd = .;
        _kenjyanoma_sceneSegmentOvlStart = .;
            build/scenes/indoors/kenjyanoma/kenjyanoma_scene.o (.ovl)
        . = ALIGN(0x10);
        _kenjyanoma_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _kenjyanoma_sceneSegmentOvlEnd - _kenjyanoma_sceneSegmentTextStart );
    _kenjyanoma_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kenjyanoma_scene.bss ADDR(..kenjyanoma_scene) + SIZEOF(..kenjyanoma_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kenjyanoma_sceneSegmentBssStart = .;
            build/scenes/indoors/kenjyanoma/kenjyanoma_scene.o (.sbss)
            build/scenes/indoors/kenjyanoma/kenjyanoma_scene.o (.scommon)
            build/scenes/indoors/kenjyanoma/kenjyanoma_scene.o (.bss)
            build/scenes/indoors/kenjyanoma/kenjyanoma_scene.o (COMMON)
        . = ALIGN(0x10);
        _kenjyanoma_sceneSegmentBssEnd = .;
        _kenjyanoma_sceneSegmentEnd = .;
    }
    _kenjyanoma_sceneSegmentBssSize = ABSOLUTE( _kenjyanoma_sceneSegmentBssEnd - _kenjyanoma_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kenjyanoma_room_0SegmentRomStart = _RomSize;
    ..kenjyanoma_room_0 0x03000000 : AT(_RomSize)
    {
        _kenjyanoma_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _kenjyanoma_room_0SegmentTextStart = .;
            build/scenes/indoors/kenjyanoma/kenjyanoma_room_0.o (.text)
        _kenjyanoma_room_0SegmentTextEnd = .;
    _kenjyanoma_room_0SegmentTextSize = ABSOLUTE( _kenjyanoma_room_0SegmentTextEnd - _kenjyanoma_room_0SegmentTextStart );
        _kenjyanoma_room_0SegmentDataStart = .;
            build/scenes/indoors/kenjyanoma/kenjyanoma_room_0.o (.data)
        _kenjyanoma_room_0SegmentDataEnd = .;
    _kenjyanoma_room_0SegmentDataSize = ABSOLUTE( _kenjyanoma_room_0SegmentDataEnd - _kenjyanoma_room_0SegmentDataStart );
        _kenjyanoma_room_0SegmentRoDataStart = .;
            build/scenes/indoors/kenjyanoma/kenjyanoma_room_0.o (.rodata)
        _kenjyanoma_room_0SegmentRoDataEnd = .;
    _kenjyanoma_room_0SegmentRoDataSize = ABSOLUTE( _kenjyanoma_room_0SegmentRoDataEnd - _kenjyanoma_room_0SegmentRoDataStart );
        _kenjyanoma_room_0SegmentSDataStart = .;
            build/scenes/indoors/kenjyanoma/kenjyanoma_room_0.o (.sdata)
        . = ALIGN(0x10);
        _kenjyanoma_room_0SegmentSDataEnd = .;
        _kenjyanoma_room_0SegmentOvlStart = .;
            build/scenes/indoors/kenjyanoma/kenjyanoma_room_0.o (.ovl)
        . = ALIGN(0x10);
        _kenjyanoma_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _kenjyanoma_room_0SegmentOvlEnd - _kenjyanoma_room_0SegmentTextStart );
    _kenjyanoma_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kenjyanoma_room_0.bss ADDR(..kenjyanoma_room_0) + SIZEOF(..kenjyanoma_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kenjyanoma_room_0SegmentBssStart = .;
            build/scenes/indoors/kenjyanoma/kenjyanoma_room_0.o (.sbss)
            build/scenes/indoors/kenjyanoma/kenjyanoma_room_0.o (.scommon)
            build/scenes/indoors/kenjyanoma/kenjyanoma_room_0.o (.bss)
            build/scenes/indoors/kenjyanoma/kenjyanoma_room_0.o (COMMON)
        . = ALIGN(0x10);
        _kenjyanoma_room_0SegmentBssEnd = .;
        _kenjyanoma_room_0SegmentEnd = .;
    }
    _kenjyanoma_room_0SegmentBssSize = ABSOLUTE( _kenjyanoma_room_0SegmentBssEnd - _kenjyanoma_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _tokinoma_sceneSegmentRomStart = _RomSize;
    ..tokinoma_scene 0x02000000 : AT(_RomSize)
    {
        _tokinoma_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _tokinoma_sceneSegmentTextStart = .;
            build/scenes/indoors/tokinoma/tokinoma_scene.o (.text)
        _tokinoma_sceneSegmentTextEnd = .;
    _tokinoma_sceneSegmentTextSize = ABSOLUTE( _tokinoma_sceneSegmentTextEnd - _tokinoma_sceneSegmentTextStart );
        _tokinoma_sceneSegmentDataStart = .;
            build/scenes/indoors/tokinoma/tokinoma_scene.o (.data)
        _tokinoma_sceneSegmentDataEnd = .;
    _tokinoma_sceneSegmentDataSize = ABSOLUTE( _tokinoma_sceneSegmentDataEnd - _tokinoma_sceneSegmentDataStart );
        _tokinoma_sceneSegmentRoDataStart = .;
            build/scenes/indoors/tokinoma/tokinoma_scene.o (.rodata)
        _tokinoma_sceneSegmentRoDataEnd = .;
    _tokinoma_sceneSegmentRoDataSize = ABSOLUTE( _tokinoma_sceneSegmentRoDataEnd - _tokinoma_sceneSegmentRoDataStart );
        _tokinoma_sceneSegmentSDataStart = .;
            build/scenes/indoors/tokinoma/tokinoma_scene.o (.sdata)
        . = ALIGN(0x10);
        _tokinoma_sceneSegmentSDataEnd = .;
        _tokinoma_sceneSegmentOvlStart = .;
            build/scenes/indoors/tokinoma/tokinoma_scene.o (.ovl)
        . = ALIGN(0x10);
        _tokinoma_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _tokinoma_sceneSegmentOvlEnd - _tokinoma_sceneSegmentTextStart );
    _tokinoma_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..tokinoma_scene.bss ADDR(..tokinoma_scene) + SIZEOF(..tokinoma_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _tokinoma_sceneSegmentBssStart = .;
            build/scenes/indoors/tokinoma/tokinoma_scene.o (.sbss)
            build/scenes/indoors/tokinoma/tokinoma_scene.o (.scommon)
            build/scenes/indoors/tokinoma/tokinoma_scene.o (.bss)
            build/scenes/indoors/tokinoma/tokinoma_scene.o (COMMON)
        . = ALIGN(0x10);
        _tokinoma_sceneSegmentBssEnd = .;
        _tokinoma_sceneSegmentEnd = .;
    }
    _tokinoma_sceneSegmentBssSize = ABSOLUTE( _tokinoma_sceneSegmentBssEnd - _tokinoma_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _tokinoma_room_0SegmentRomStart = _RomSize;
    ..tokinoma_room_0 0x03000000 : AT(_RomSize)
    {
        _tokinoma_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _tokinoma_room_0SegmentTextStart = .;
            build/scenes/indoors/tokinoma/tokinoma_room_0.o (.text)
        _tokinoma_room_0SegmentTextEnd = .;
    _tokinoma_room_0SegmentTextSize = ABSOLUTE( _tokinoma_room_0SegmentTextEnd - _tokinoma_room_0SegmentTextStart );
        _tokinoma_room_0SegmentDataStart = .;
            build/scenes/indoors/tokinoma/tokinoma_room_0.o (.data)
        _tokinoma_room_0SegmentDataEnd = .;
    _tokinoma_room_0SegmentDataSize = ABSOLUTE( _tokinoma_room_0SegmentDataEnd - _tokinoma_room_0SegmentDataStart );
        _tokinoma_room_0SegmentRoDataStart = .;
            build/scenes/indoors/tokinoma/tokinoma_room_0.o (.rodata)
        _tokinoma_room_0SegmentRoDataEnd = .;
    _tokinoma_room_0SegmentRoDataSize = ABSOLUTE( _tokinoma_room_0SegmentRoDataEnd - _tokinoma_room_0SegmentRoDataStart );
        _tokinoma_room_0SegmentSDataStart = .;
            build/scenes/indoors/tokinoma/tokinoma_room_0.o (.sdata)
        . = ALIGN(0x10);
        _tokinoma_room_0SegmentSDataEnd = .;
        _tokinoma_room_0SegmentOvlStart = .;
            build/scenes/indoors/tokinoma/tokinoma_room_0.o (.ovl)
        . = ALIGN(0x10);
        _tokinoma_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _tokinoma_room_0SegmentOvlEnd - _tokinoma_room_0SegmentTextStart );
    _tokinoma_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..tokinoma_room_0.bss ADDR(..tokinoma_room_0) + SIZEOF(..tokinoma_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _tokinoma_room_0SegmentBssStart = .;
            build/scenes/indoors/tokinoma/tokinoma_room_0.o (.sbss)
            build/scenes/indoors/tokinoma/tokinoma_room_0.o (.scommon)
            build/scenes/indoors/tokinoma/tokinoma_room_0.o (.bss)
            build/scenes/indoors/tokinoma/tokinoma_room_0.o (COMMON)
        . = ALIGN(0x10);
        _tokinoma_room_0SegmentBssEnd = .;
        _tokinoma_room_0SegmentEnd = .;
    }
    _tokinoma_room_0SegmentBssSize = ABSOLUTE( _tokinoma_room_0SegmentBssEnd - _tokinoma_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _tokinoma_room_1SegmentRomStart = _RomSize;
    ..tokinoma_room_1 0x03000000 : AT(_RomSize)
    {
        _tokinoma_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _tokinoma_room_1SegmentTextStart = .;
            build/scenes/indoors/tokinoma/tokinoma_room_1.o (.text)
        _tokinoma_room_1SegmentTextEnd = .;
    _tokinoma_room_1SegmentTextSize = ABSOLUTE( _tokinoma_room_1SegmentTextEnd - _tokinoma_room_1SegmentTextStart );
        _tokinoma_room_1SegmentDataStart = .;
            build/scenes/indoors/tokinoma/tokinoma_room_1.o (.data)
        _tokinoma_room_1SegmentDataEnd = .;
    _tokinoma_room_1SegmentDataSize = ABSOLUTE( _tokinoma_room_1SegmentDataEnd - _tokinoma_room_1SegmentDataStart );
        _tokinoma_room_1SegmentRoDataStart = .;
            build/scenes/indoors/tokinoma/tokinoma_room_1.o (.rodata)
        _tokinoma_room_1SegmentRoDataEnd = .;
    _tokinoma_room_1SegmentRoDataSize = ABSOLUTE( _tokinoma_room_1SegmentRoDataEnd - _tokinoma_room_1SegmentRoDataStart );
        _tokinoma_room_1SegmentSDataStart = .;
            build/scenes/indoors/tokinoma/tokinoma_room_1.o (.sdata)
        . = ALIGN(0x10);
        _tokinoma_room_1SegmentSDataEnd = .;
        _tokinoma_room_1SegmentOvlStart = .;
            build/scenes/indoors/tokinoma/tokinoma_room_1.o (.ovl)
        . = ALIGN(0x10);
        _tokinoma_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _tokinoma_room_1SegmentOvlEnd - _tokinoma_room_1SegmentTextStart );
    _tokinoma_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..tokinoma_room_1.bss ADDR(..tokinoma_room_1) + SIZEOF(..tokinoma_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _tokinoma_room_1SegmentBssStart = .;
            build/scenes/indoors/tokinoma/tokinoma_room_1.o (.sbss)
            build/scenes/indoors/tokinoma/tokinoma_room_1.o (.scommon)
            build/scenes/indoors/tokinoma/tokinoma_room_1.o (.bss)
            build/scenes/indoors/tokinoma/tokinoma_room_1.o (COMMON)
        . = ALIGN(0x10);
        _tokinoma_room_1SegmentBssEnd = .;
        _tokinoma_room_1SegmentEnd = .;
    }
    _tokinoma_room_1SegmentBssSize = ABSOLUTE( _tokinoma_room_1SegmentBssEnd - _tokinoma_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _sutaru_sceneSegmentRomStart = _RomSize;
    ..sutaru_scene 0x02000000 : AT(_RomSize)
    {
        _sutaru_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _sutaru_sceneSegmentTextStart = .;
            build/scenes/test_levels/sutaru/sutaru_scene.o (.text)
        _sutaru_sceneSegmentTextEnd = .;
    _sutaru_sceneSegmentTextSize = ABSOLUTE( _sutaru_sceneSegmentTextEnd - _sutaru_sceneSegmentTextStart );
        _sutaru_sceneSegmentDataStart = .;
            build/scenes/test_levels/sutaru/sutaru_scene.o (.data)
        _sutaru_sceneSegmentDataEnd = .;
    _sutaru_sceneSegmentDataSize = ABSOLUTE( _sutaru_sceneSegmentDataEnd - _sutaru_sceneSegmentDataStart );
        _sutaru_sceneSegmentRoDataStart = .;
            build/scenes/test_levels/sutaru/sutaru_scene.o (.rodata)
        _sutaru_sceneSegmentRoDataEnd = .;
    _sutaru_sceneSegmentRoDataSize = ABSOLUTE( _sutaru_sceneSegmentRoDataEnd - _sutaru_sceneSegmentRoDataStart );
        _sutaru_sceneSegmentSDataStart = .;
            build/scenes/test_levels/sutaru/sutaru_scene.o (.sdata)
        . = ALIGN(0x10);
        _sutaru_sceneSegmentSDataEnd = .;
        _sutaru_sceneSegmentOvlStart = .;
            build/scenes/test_levels/sutaru/sutaru_scene.o (.ovl)
        . = ALIGN(0x10);
        _sutaru_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _sutaru_sceneSegmentOvlEnd - _sutaru_sceneSegmentTextStart );
    _sutaru_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..sutaru_scene.bss ADDR(..sutaru_scene) + SIZEOF(..sutaru_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _sutaru_sceneSegmentBssStart = .;
            build/scenes/test_levels/sutaru/sutaru_scene.o (.sbss)
            build/scenes/test_levels/sutaru/sutaru_scene.o (.scommon)
            build/scenes/test_levels/sutaru/sutaru_scene.o (.bss)
            build/scenes/test_levels/sutaru/sutaru_scene.o (COMMON)
        . = ALIGN(0x10);
        _sutaru_sceneSegmentBssEnd = .;
        _sutaru_sceneSegmentEnd = .;
    }
    _sutaru_sceneSegmentBssSize = ABSOLUTE( _sutaru_sceneSegmentBssEnd - _sutaru_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _sutaru_room_0SegmentRomStart = _RomSize;
    ..sutaru_room_0 0x03000000 : AT(_RomSize)
    {
        _sutaru_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _sutaru_room_0SegmentTextStart = .;
            build/scenes/test_levels/sutaru/sutaru_room_0.o (.text)
        _sutaru_room_0SegmentTextEnd = .;
    _sutaru_room_0SegmentTextSize = ABSOLUTE( _sutaru_room_0SegmentTextEnd - _sutaru_room_0SegmentTextStart );
        _sutaru_room_0SegmentDataStart = .;
            build/scenes/test_levels/sutaru/sutaru_room_0.o (.data)
        _sutaru_room_0SegmentDataEnd = .;
    _sutaru_room_0SegmentDataSize = ABSOLUTE( _sutaru_room_0SegmentDataEnd - _sutaru_room_0SegmentDataStart );
        _sutaru_room_0SegmentRoDataStart = .;
            build/scenes/test_levels/sutaru/sutaru_room_0.o (.rodata)
        _sutaru_room_0SegmentRoDataEnd = .;
    _sutaru_room_0SegmentRoDataSize = ABSOLUTE( _sutaru_room_0SegmentRoDataEnd - _sutaru_room_0SegmentRoDataStart );
        _sutaru_room_0SegmentSDataStart = .;
            build/scenes/test_levels/sutaru/sutaru_room_0.o (.sdata)
        . = ALIGN(0x10);
        _sutaru_room_0SegmentSDataEnd = .;
        _sutaru_room_0SegmentOvlStart = .;
            build/scenes/test_levels/sutaru/sutaru_room_0.o (.ovl)
        . = ALIGN(0x10);
        _sutaru_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _sutaru_room_0SegmentOvlEnd - _sutaru_room_0SegmentTextStart );
    _sutaru_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..sutaru_room_0.bss ADDR(..sutaru_room_0) + SIZEOF(..sutaru_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _sutaru_room_0SegmentBssStart = .;
            build/scenes/test_levels/sutaru/sutaru_room_0.o (.sbss)
            build/scenes/test_levels/sutaru/sutaru_room_0.o (.scommon)
            build/scenes/test_levels/sutaru/sutaru_room_0.o (.bss)
            build/scenes/test_levels/sutaru/sutaru_room_0.o (COMMON)
        . = ALIGN(0x10);
        _sutaru_room_0SegmentBssEnd = .;
        _sutaru_room_0SegmentEnd = .;
    }
    _sutaru_room_0SegmentBssSize = ABSOLUTE( _sutaru_room_0SegmentBssEnd - _sutaru_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _link_home_sceneSegmentRomStart = _RomSize;
    ..link_home_scene 0x02000000 : AT(_RomSize)
    {
        _link_home_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _link_home_sceneSegmentTextStart = .;
            build/scenes/indoors/link_home/link_home_scene.o (.text)
        _link_home_sceneSegmentTextEnd = .;
    _link_home_sceneSegmentTextSize = ABSOLUTE( _link_home_sceneSegmentTextEnd - _link_home_sceneSegmentTextStart );
        _link_home_sceneSegmentDataStart = .;
            build/scenes/indoors/link_home/link_home_scene.o (.data)
        _link_home_sceneSegmentDataEnd = .;
    _link_home_sceneSegmentDataSize = ABSOLUTE( _link_home_sceneSegmentDataEnd - _link_home_sceneSegmentDataStart );
        _link_home_sceneSegmentRoDataStart = .;
            build/scenes/indoors/link_home/link_home_scene.o (.rodata)
        _link_home_sceneSegmentRoDataEnd = .;
    _link_home_sceneSegmentRoDataSize = ABSOLUTE( _link_home_sceneSegmentRoDataEnd - _link_home_sceneSegmentRoDataStart );
        _link_home_sceneSegmentSDataStart = .;
            build/scenes/indoors/link_home/link_home_scene.o (.sdata)
        . = ALIGN(0x10);
        _link_home_sceneSegmentSDataEnd = .;
        _link_home_sceneSegmentOvlStart = .;
            build/scenes/indoors/link_home/link_home_scene.o (.ovl)
        . = ALIGN(0x10);
        _link_home_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _link_home_sceneSegmentOvlEnd - _link_home_sceneSegmentTextStart );
    _link_home_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..link_home_scene.bss ADDR(..link_home_scene) + SIZEOF(..link_home_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _link_home_sceneSegmentBssStart = .;
            build/scenes/indoors/link_home/link_home_scene.o (.sbss)
            build/scenes/indoors/link_home/link_home_scene.o (.scommon)
            build/scenes/indoors/link_home/link_home_scene.o (.bss)
            build/scenes/indoors/link_home/link_home_scene.o (COMMON)
        . = ALIGN(0x10);
        _link_home_sceneSegmentBssEnd = .;
        _link_home_sceneSegmentEnd = .;
    }
    _link_home_sceneSegmentBssSize = ABSOLUTE( _link_home_sceneSegmentBssEnd - _link_home_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _link_home_room_0SegmentRomStart = _RomSize;
    ..link_home_room_0 0x03000000 : AT(_RomSize)
    {
        _link_home_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _link_home_room_0SegmentTextStart = .;
            build/scenes/indoors/link_home/link_home_room_0.o (.text)
        _link_home_room_0SegmentTextEnd = .;
    _link_home_room_0SegmentTextSize = ABSOLUTE( _link_home_room_0SegmentTextEnd - _link_home_room_0SegmentTextStart );
        _link_home_room_0SegmentDataStart = .;
            build/scenes/indoors/link_home/link_home_room_0.o (.data)
        _link_home_room_0SegmentDataEnd = .;
    _link_home_room_0SegmentDataSize = ABSOLUTE( _link_home_room_0SegmentDataEnd - _link_home_room_0SegmentDataStart );
        _link_home_room_0SegmentRoDataStart = .;
            build/scenes/indoors/link_home/link_home_room_0.o (.rodata)
        _link_home_room_0SegmentRoDataEnd = .;
    _link_home_room_0SegmentRoDataSize = ABSOLUTE( _link_home_room_0SegmentRoDataEnd - _link_home_room_0SegmentRoDataStart );
        _link_home_room_0SegmentSDataStart = .;
            build/scenes/indoors/link_home/link_home_room_0.o (.sdata)
        . = ALIGN(0x10);
        _link_home_room_0SegmentSDataEnd = .;
        _link_home_room_0SegmentOvlStart = .;
            build/scenes/indoors/link_home/link_home_room_0.o (.ovl)
        . = ALIGN(0x10);
        _link_home_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _link_home_room_0SegmentOvlEnd - _link_home_room_0SegmentTextStart );
    _link_home_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..link_home_room_0.bss ADDR(..link_home_room_0) + SIZEOF(..link_home_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _link_home_room_0SegmentBssStart = .;
            build/scenes/indoors/link_home/link_home_room_0.o (.sbss)
            build/scenes/indoors/link_home/link_home_room_0.o (.scommon)
            build/scenes/indoors/link_home/link_home_room_0.o (.bss)
            build/scenes/indoors/link_home/link_home_room_0.o (COMMON)
        . = ALIGN(0x10);
        _link_home_room_0SegmentBssEnd = .;
        _link_home_room_0SegmentEnd = .;
    }
    _link_home_room_0SegmentBssSize = ABSOLUTE( _link_home_room_0SegmentBssEnd - _link_home_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kokiri_shop_sceneSegmentRomStart = _RomSize;
    ..kokiri_shop_scene 0x02000000 : AT(_RomSize)
    {
        _kokiri_shop_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _kokiri_shop_sceneSegmentTextStart = .;
            build/scenes/shops/kokiri_shop/kokiri_shop_scene.o (.text)
        _kokiri_shop_sceneSegmentTextEnd = .;
    _kokiri_shop_sceneSegmentTextSize = ABSOLUTE( _kokiri_shop_sceneSegmentTextEnd - _kokiri_shop_sceneSegmentTextStart );
        _kokiri_shop_sceneSegmentDataStart = .;
            build/scenes/shops/kokiri_shop/kokiri_shop_scene.o (.data)
        _kokiri_shop_sceneSegmentDataEnd = .;
    _kokiri_shop_sceneSegmentDataSize = ABSOLUTE( _kokiri_shop_sceneSegmentDataEnd - _kokiri_shop_sceneSegmentDataStart );
        _kokiri_shop_sceneSegmentRoDataStart = .;
            build/scenes/shops/kokiri_shop/kokiri_shop_scene.o (.rodata)
        _kokiri_shop_sceneSegmentRoDataEnd = .;
    _kokiri_shop_sceneSegmentRoDataSize = ABSOLUTE( _kokiri_shop_sceneSegmentRoDataEnd - _kokiri_shop_sceneSegmentRoDataStart );
        _kokiri_shop_sceneSegmentSDataStart = .;
            build/scenes/shops/kokiri_shop/kokiri_shop_scene.o (.sdata)
        . = ALIGN(0x10);
        _kokiri_shop_sceneSegmentSDataEnd = .;
        _kokiri_shop_sceneSegmentOvlStart = .;
            build/scenes/shops/kokiri_shop/kokiri_shop_scene.o (.ovl)
        . = ALIGN(0x10);
        _kokiri_shop_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _kokiri_shop_sceneSegmentOvlEnd - _kokiri_shop_sceneSegmentTextStart );
    _kokiri_shop_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kokiri_shop_scene.bss ADDR(..kokiri_shop_scene) + SIZEOF(..kokiri_shop_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kokiri_shop_sceneSegmentBssStart = .;
            build/scenes/shops/kokiri_shop/kokiri_shop_scene.o (.sbss)
            build/scenes/shops/kokiri_shop/kokiri_shop_scene.o (.scommon)
            build/scenes/shops/kokiri_shop/kokiri_shop_scene.o (.bss)
            build/scenes/shops/kokiri_shop/kokiri_shop_scene.o (COMMON)
        . = ALIGN(0x10);
        _kokiri_shop_sceneSegmentBssEnd = .;
        _kokiri_shop_sceneSegmentEnd = .;
    }
    _kokiri_shop_sceneSegmentBssSize = ABSOLUTE( _kokiri_shop_sceneSegmentBssEnd - _kokiri_shop_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kokiri_shop_room_0SegmentRomStart = _RomSize;
    ..kokiri_shop_room_0 0x03000000 : AT(_RomSize)
    {
        _kokiri_shop_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _kokiri_shop_room_0SegmentTextStart = .;
            build/scenes/shops/kokiri_shop/kokiri_shop_room_0.o (.text)
        _kokiri_shop_room_0SegmentTextEnd = .;
    _kokiri_shop_room_0SegmentTextSize = ABSOLUTE( _kokiri_shop_room_0SegmentTextEnd - _kokiri_shop_room_0SegmentTextStart );
        _kokiri_shop_room_0SegmentDataStart = .;
            build/scenes/shops/kokiri_shop/kokiri_shop_room_0.o (.data)
        _kokiri_shop_room_0SegmentDataEnd = .;
    _kokiri_shop_room_0SegmentDataSize = ABSOLUTE( _kokiri_shop_room_0SegmentDataEnd - _kokiri_shop_room_0SegmentDataStart );
        _kokiri_shop_room_0SegmentRoDataStart = .;
            build/scenes/shops/kokiri_shop/kokiri_shop_room_0.o (.rodata)
        _kokiri_shop_room_0SegmentRoDataEnd = .;
    _kokiri_shop_room_0SegmentRoDataSize = ABSOLUTE( _kokiri_shop_room_0SegmentRoDataEnd - _kokiri_shop_room_0SegmentRoDataStart );
        _kokiri_shop_room_0SegmentSDataStart = .;
            build/scenes/shops/kokiri_shop/kokiri_shop_room_0.o (.sdata)
        . = ALIGN(0x10);
        _kokiri_shop_room_0SegmentSDataEnd = .;
        _kokiri_shop_room_0SegmentOvlStart = .;
            build/scenes/shops/kokiri_shop/kokiri_shop_room_0.o (.ovl)
        . = ALIGN(0x10);
        _kokiri_shop_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _kokiri_shop_room_0SegmentOvlEnd - _kokiri_shop_room_0SegmentTextStart );
    _kokiri_shop_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kokiri_shop_room_0.bss ADDR(..kokiri_shop_room_0) + SIZEOF(..kokiri_shop_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kokiri_shop_room_0SegmentBssStart = .;
            build/scenes/shops/kokiri_shop/kokiri_shop_room_0.o (.sbss)
            build/scenes/shops/kokiri_shop/kokiri_shop_room_0.o (.scommon)
            build/scenes/shops/kokiri_shop/kokiri_shop_room_0.o (.bss)
            build/scenes/shops/kokiri_shop/kokiri_shop_room_0.o (COMMON)
        . = ALIGN(0x10);
        _kokiri_shop_room_0SegmentBssEnd = .;
        _kokiri_shop_room_0SegmentEnd = .;
    }
    _kokiri_shop_room_0SegmentBssSize = ABSOLUTE( _kokiri_shop_room_0SegmentBssEnd - _kokiri_shop_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kokiri_home_sceneSegmentRomStart = _RomSize;
    ..kokiri_home_scene 0x02000000 : AT(_RomSize)
    {
        _kokiri_home_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _kokiri_home_sceneSegmentTextStart = .;
            build/scenes/indoors/kokiri_home/kokiri_home_scene.o (.text)
        _kokiri_home_sceneSegmentTextEnd = .;
    _kokiri_home_sceneSegmentTextSize = ABSOLUTE( _kokiri_home_sceneSegmentTextEnd - _kokiri_home_sceneSegmentTextStart );
        _kokiri_home_sceneSegmentDataStart = .;
            build/scenes/indoors/kokiri_home/kokiri_home_scene.o (.data)
        _kokiri_home_sceneSegmentDataEnd = .;
    _kokiri_home_sceneSegmentDataSize = ABSOLUTE( _kokiri_home_sceneSegmentDataEnd - _kokiri_home_sceneSegmentDataStart );
        _kokiri_home_sceneSegmentRoDataStart = .;
            build/scenes/indoors/kokiri_home/kokiri_home_scene.o (.rodata)
        _kokiri_home_sceneSegmentRoDataEnd = .;
    _kokiri_home_sceneSegmentRoDataSize = ABSOLUTE( _kokiri_home_sceneSegmentRoDataEnd - _kokiri_home_sceneSegmentRoDataStart );
        _kokiri_home_sceneSegmentSDataStart = .;
            build/scenes/indoors/kokiri_home/kokiri_home_scene.o (.sdata)
        . = ALIGN(0x10);
        _kokiri_home_sceneSegmentSDataEnd = .;
        _kokiri_home_sceneSegmentOvlStart = .;
            build/scenes/indoors/kokiri_home/kokiri_home_scene.o (.ovl)
        . = ALIGN(0x10);
        _kokiri_home_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _kokiri_home_sceneSegmentOvlEnd - _kokiri_home_sceneSegmentTextStart );
    _kokiri_home_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kokiri_home_scene.bss ADDR(..kokiri_home_scene) + SIZEOF(..kokiri_home_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kokiri_home_sceneSegmentBssStart = .;
            build/scenes/indoors/kokiri_home/kokiri_home_scene.o (.sbss)
            build/scenes/indoors/kokiri_home/kokiri_home_scene.o (.scommon)
            build/scenes/indoors/kokiri_home/kokiri_home_scene.o (.bss)
            build/scenes/indoors/kokiri_home/kokiri_home_scene.o (COMMON)
        . = ALIGN(0x10);
        _kokiri_home_sceneSegmentBssEnd = .;
        _kokiri_home_sceneSegmentEnd = .;
    }
    _kokiri_home_sceneSegmentBssSize = ABSOLUTE( _kokiri_home_sceneSegmentBssEnd - _kokiri_home_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kokiri_home_room_0SegmentRomStart = _RomSize;
    ..kokiri_home_room_0 0x03000000 : AT(_RomSize)
    {
        _kokiri_home_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _kokiri_home_room_0SegmentTextStart = .;
            build/scenes/indoors/kokiri_home/kokiri_home_room_0.o (.text)
        _kokiri_home_room_0SegmentTextEnd = .;
    _kokiri_home_room_0SegmentTextSize = ABSOLUTE( _kokiri_home_room_0SegmentTextEnd - _kokiri_home_room_0SegmentTextStart );
        _kokiri_home_room_0SegmentDataStart = .;
            build/scenes/indoors/kokiri_home/kokiri_home_room_0.o (.data)
        _kokiri_home_room_0SegmentDataEnd = .;
    _kokiri_home_room_0SegmentDataSize = ABSOLUTE( _kokiri_home_room_0SegmentDataEnd - _kokiri_home_room_0SegmentDataStart );
        _kokiri_home_room_0SegmentRoDataStart = .;
            build/scenes/indoors/kokiri_home/kokiri_home_room_0.o (.rodata)
        _kokiri_home_room_0SegmentRoDataEnd = .;
    _kokiri_home_room_0SegmentRoDataSize = ABSOLUTE( _kokiri_home_room_0SegmentRoDataEnd - _kokiri_home_room_0SegmentRoDataStart );
        _kokiri_home_room_0SegmentSDataStart = .;
            build/scenes/indoors/kokiri_home/kokiri_home_room_0.o (.sdata)
        . = ALIGN(0x10);
        _kokiri_home_room_0SegmentSDataEnd = .;
        _kokiri_home_room_0SegmentOvlStart = .;
            build/scenes/indoors/kokiri_home/kokiri_home_room_0.o (.ovl)
        . = ALIGN(0x10);
        _kokiri_home_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _kokiri_home_room_0SegmentOvlEnd - _kokiri_home_room_0SegmentTextStart );
    _kokiri_home_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kokiri_home_room_0.bss ADDR(..kokiri_home_room_0) + SIZEOF(..kokiri_home_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kokiri_home_room_0SegmentBssStart = .;
            build/scenes/indoors/kokiri_home/kokiri_home_room_0.o (.sbss)
            build/scenes/indoors/kokiri_home/kokiri_home_room_0.o (.scommon)
            build/scenes/indoors/kokiri_home/kokiri_home_room_0.o (.bss)
            build/scenes/indoors/kokiri_home/kokiri_home_room_0.o (COMMON)
        . = ALIGN(0x10);
        _kokiri_home_room_0SegmentBssEnd = .;
        _kokiri_home_room_0SegmentEnd = .;
    }
    _kokiri_home_room_0SegmentBssSize = ABSOLUTE( _kokiri_home_room_0SegmentBssEnd - _kokiri_home_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_sceneSegmentRomStart = _RomSize;
    ..kakusiana_scene 0x02000000 : AT(_RomSize)
    {
        _kakusiana_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_sceneSegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_scene.o (.text)
        _kakusiana_sceneSegmentTextEnd = .;
    _kakusiana_sceneSegmentTextSize = ABSOLUTE( _kakusiana_sceneSegmentTextEnd - _kakusiana_sceneSegmentTextStart );
        _kakusiana_sceneSegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_scene.o (.data)
        _kakusiana_sceneSegmentDataEnd = .;
    _kakusiana_sceneSegmentDataSize = ABSOLUTE( _kakusiana_sceneSegmentDataEnd - _kakusiana_sceneSegmentDataStart );
        _kakusiana_sceneSegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_scene.o (.rodata)
        _kakusiana_sceneSegmentRoDataEnd = .;
    _kakusiana_sceneSegmentRoDataSize = ABSOLUTE( _kakusiana_sceneSegmentRoDataEnd - _kakusiana_sceneSegmentRoDataStart );
        _kakusiana_sceneSegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_scene.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_sceneSegmentSDataEnd = .;
        _kakusiana_sceneSegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_scene.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_sceneSegmentOvlEnd - _kakusiana_sceneSegmentTextStart );
    _kakusiana_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_scene.bss ADDR(..kakusiana_scene) + SIZEOF(..kakusiana_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_sceneSegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_scene.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_scene.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_scene.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_scene.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_sceneSegmentBssEnd = .;
        _kakusiana_sceneSegmentEnd = .;
    }
    _kakusiana_sceneSegmentBssSize = ABSOLUTE( _kakusiana_sceneSegmentBssEnd - _kakusiana_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_room_0SegmentRomStart = _RomSize;
    ..kakusiana_room_0 0x03000000 : AT(_RomSize)
    {
        _kakusiana_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_room_0SegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_0.o (.text)
        _kakusiana_room_0SegmentTextEnd = .;
    _kakusiana_room_0SegmentTextSize = ABSOLUTE( _kakusiana_room_0SegmentTextEnd - _kakusiana_room_0SegmentTextStart );
        _kakusiana_room_0SegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_0.o (.data)
        _kakusiana_room_0SegmentDataEnd = .;
    _kakusiana_room_0SegmentDataSize = ABSOLUTE( _kakusiana_room_0SegmentDataEnd - _kakusiana_room_0SegmentDataStart );
        _kakusiana_room_0SegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_0.o (.rodata)
        _kakusiana_room_0SegmentRoDataEnd = .;
    _kakusiana_room_0SegmentRoDataSize = ABSOLUTE( _kakusiana_room_0SegmentRoDataEnd - _kakusiana_room_0SegmentRoDataStart );
        _kakusiana_room_0SegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_0.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_room_0SegmentSDataEnd = .;
        _kakusiana_room_0SegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_0.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_room_0SegmentOvlEnd - _kakusiana_room_0SegmentTextStart );
    _kakusiana_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_room_0.bss ADDR(..kakusiana_room_0) + SIZEOF(..kakusiana_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_room_0SegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_0.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_room_0.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_room_0.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_room_0.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_room_0SegmentBssEnd = .;
        _kakusiana_room_0SegmentEnd = .;
    }
    _kakusiana_room_0SegmentBssSize = ABSOLUTE( _kakusiana_room_0SegmentBssEnd - _kakusiana_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_room_1SegmentRomStart = _RomSize;
    ..kakusiana_room_1 0x03000000 : AT(_RomSize)
    {
        _kakusiana_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_room_1SegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_1.o (.text)
        _kakusiana_room_1SegmentTextEnd = .;
    _kakusiana_room_1SegmentTextSize = ABSOLUTE( _kakusiana_room_1SegmentTextEnd - _kakusiana_room_1SegmentTextStart );
        _kakusiana_room_1SegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_1.o (.data)
        _kakusiana_room_1SegmentDataEnd = .;
    _kakusiana_room_1SegmentDataSize = ABSOLUTE( _kakusiana_room_1SegmentDataEnd - _kakusiana_room_1SegmentDataStart );
        _kakusiana_room_1SegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_1.o (.rodata)
        _kakusiana_room_1SegmentRoDataEnd = .;
    _kakusiana_room_1SegmentRoDataSize = ABSOLUTE( _kakusiana_room_1SegmentRoDataEnd - _kakusiana_room_1SegmentRoDataStart );
        _kakusiana_room_1SegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_1.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_room_1SegmentSDataEnd = .;
        _kakusiana_room_1SegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_1.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_room_1SegmentOvlEnd - _kakusiana_room_1SegmentTextStart );
    _kakusiana_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_room_1.bss ADDR(..kakusiana_room_1) + SIZEOF(..kakusiana_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_room_1SegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_1.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_room_1.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_room_1.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_room_1.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_room_1SegmentBssEnd = .;
        _kakusiana_room_1SegmentEnd = .;
    }
    _kakusiana_room_1SegmentBssSize = ABSOLUTE( _kakusiana_room_1SegmentBssEnd - _kakusiana_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_room_2SegmentRomStart = _RomSize;
    ..kakusiana_room_2 0x03000000 : AT(_RomSize)
    {
        _kakusiana_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_room_2SegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_2.o (.text)
        _kakusiana_room_2SegmentTextEnd = .;
    _kakusiana_room_2SegmentTextSize = ABSOLUTE( _kakusiana_room_2SegmentTextEnd - _kakusiana_room_2SegmentTextStart );
        _kakusiana_room_2SegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_2.o (.data)
        _kakusiana_room_2SegmentDataEnd = .;
    _kakusiana_room_2SegmentDataSize = ABSOLUTE( _kakusiana_room_2SegmentDataEnd - _kakusiana_room_2SegmentDataStart );
        _kakusiana_room_2SegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_2.o (.rodata)
        _kakusiana_room_2SegmentRoDataEnd = .;
    _kakusiana_room_2SegmentRoDataSize = ABSOLUTE( _kakusiana_room_2SegmentRoDataEnd - _kakusiana_room_2SegmentRoDataStart );
        _kakusiana_room_2SegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_2.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_room_2SegmentSDataEnd = .;
        _kakusiana_room_2SegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_2.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_room_2SegmentOvlEnd - _kakusiana_room_2SegmentTextStart );
    _kakusiana_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_room_2.bss ADDR(..kakusiana_room_2) + SIZEOF(..kakusiana_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_room_2SegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_2.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_room_2.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_room_2.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_room_2.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_room_2SegmentBssEnd = .;
        _kakusiana_room_2SegmentEnd = .;
    }
    _kakusiana_room_2SegmentBssSize = ABSOLUTE( _kakusiana_room_2SegmentBssEnd - _kakusiana_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_room_3SegmentRomStart = _RomSize;
    ..kakusiana_room_3 0x03000000 : AT(_RomSize)
    {
        _kakusiana_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_room_3SegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_3.o (.text)
        _kakusiana_room_3SegmentTextEnd = .;
    _kakusiana_room_3SegmentTextSize = ABSOLUTE( _kakusiana_room_3SegmentTextEnd - _kakusiana_room_3SegmentTextStart );
        _kakusiana_room_3SegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_3.o (.data)
        _kakusiana_room_3SegmentDataEnd = .;
    _kakusiana_room_3SegmentDataSize = ABSOLUTE( _kakusiana_room_3SegmentDataEnd - _kakusiana_room_3SegmentDataStart );
        _kakusiana_room_3SegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_3.o (.rodata)
        _kakusiana_room_3SegmentRoDataEnd = .;
    _kakusiana_room_3SegmentRoDataSize = ABSOLUTE( _kakusiana_room_3SegmentRoDataEnd - _kakusiana_room_3SegmentRoDataStart );
        _kakusiana_room_3SegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_3.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_room_3SegmentSDataEnd = .;
        _kakusiana_room_3SegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_3.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_room_3SegmentOvlEnd - _kakusiana_room_3SegmentTextStart );
    _kakusiana_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_room_3.bss ADDR(..kakusiana_room_3) + SIZEOF(..kakusiana_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_room_3SegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_3.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_room_3.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_room_3.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_room_3.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_room_3SegmentBssEnd = .;
        _kakusiana_room_3SegmentEnd = .;
    }
    _kakusiana_room_3SegmentBssSize = ABSOLUTE( _kakusiana_room_3SegmentBssEnd - _kakusiana_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_room_4SegmentRomStart = _RomSize;
    ..kakusiana_room_4 0x03000000 : AT(_RomSize)
    {
        _kakusiana_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_room_4SegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_4.o (.text)
        _kakusiana_room_4SegmentTextEnd = .;
    _kakusiana_room_4SegmentTextSize = ABSOLUTE( _kakusiana_room_4SegmentTextEnd - _kakusiana_room_4SegmentTextStart );
        _kakusiana_room_4SegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_4.o (.data)
        _kakusiana_room_4SegmentDataEnd = .;
    _kakusiana_room_4SegmentDataSize = ABSOLUTE( _kakusiana_room_4SegmentDataEnd - _kakusiana_room_4SegmentDataStart );
        _kakusiana_room_4SegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_4.o (.rodata)
        _kakusiana_room_4SegmentRoDataEnd = .;
    _kakusiana_room_4SegmentRoDataSize = ABSOLUTE( _kakusiana_room_4SegmentRoDataEnd - _kakusiana_room_4SegmentRoDataStart );
        _kakusiana_room_4SegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_4.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_room_4SegmentSDataEnd = .;
        _kakusiana_room_4SegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_4.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_room_4SegmentOvlEnd - _kakusiana_room_4SegmentTextStart );
    _kakusiana_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_room_4.bss ADDR(..kakusiana_room_4) + SIZEOF(..kakusiana_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_room_4SegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_4.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_room_4.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_room_4.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_room_4.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_room_4SegmentBssEnd = .;
        _kakusiana_room_4SegmentEnd = .;
    }
    _kakusiana_room_4SegmentBssSize = ABSOLUTE( _kakusiana_room_4SegmentBssEnd - _kakusiana_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_room_5SegmentRomStart = _RomSize;
    ..kakusiana_room_5 0x03000000 : AT(_RomSize)
    {
        _kakusiana_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_room_5SegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_5.o (.text)
        _kakusiana_room_5SegmentTextEnd = .;
    _kakusiana_room_5SegmentTextSize = ABSOLUTE( _kakusiana_room_5SegmentTextEnd - _kakusiana_room_5SegmentTextStart );
        _kakusiana_room_5SegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_5.o (.data)
        _kakusiana_room_5SegmentDataEnd = .;
    _kakusiana_room_5SegmentDataSize = ABSOLUTE( _kakusiana_room_5SegmentDataEnd - _kakusiana_room_5SegmentDataStart );
        _kakusiana_room_5SegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_5.o (.rodata)
        _kakusiana_room_5SegmentRoDataEnd = .;
    _kakusiana_room_5SegmentRoDataSize = ABSOLUTE( _kakusiana_room_5SegmentRoDataEnd - _kakusiana_room_5SegmentRoDataStart );
        _kakusiana_room_5SegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_5.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_room_5SegmentSDataEnd = .;
        _kakusiana_room_5SegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_5.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_room_5SegmentOvlEnd - _kakusiana_room_5SegmentTextStart );
    _kakusiana_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_room_5.bss ADDR(..kakusiana_room_5) + SIZEOF(..kakusiana_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_room_5SegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_5.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_room_5.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_room_5.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_room_5.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_room_5SegmentBssEnd = .;
        _kakusiana_room_5SegmentEnd = .;
    }
    _kakusiana_room_5SegmentBssSize = ABSOLUTE( _kakusiana_room_5SegmentBssEnd - _kakusiana_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_room_6SegmentRomStart = _RomSize;
    ..kakusiana_room_6 0x03000000 : AT(_RomSize)
    {
        _kakusiana_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_room_6SegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_6.o (.text)
        _kakusiana_room_6SegmentTextEnd = .;
    _kakusiana_room_6SegmentTextSize = ABSOLUTE( _kakusiana_room_6SegmentTextEnd - _kakusiana_room_6SegmentTextStart );
        _kakusiana_room_6SegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_6.o (.data)
        _kakusiana_room_6SegmentDataEnd = .;
    _kakusiana_room_6SegmentDataSize = ABSOLUTE( _kakusiana_room_6SegmentDataEnd - _kakusiana_room_6SegmentDataStart );
        _kakusiana_room_6SegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_6.o (.rodata)
        _kakusiana_room_6SegmentRoDataEnd = .;
    _kakusiana_room_6SegmentRoDataSize = ABSOLUTE( _kakusiana_room_6SegmentRoDataEnd - _kakusiana_room_6SegmentRoDataStart );
        _kakusiana_room_6SegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_6.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_room_6SegmentSDataEnd = .;
        _kakusiana_room_6SegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_6.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_room_6SegmentOvlEnd - _kakusiana_room_6SegmentTextStart );
    _kakusiana_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_room_6.bss ADDR(..kakusiana_room_6) + SIZEOF(..kakusiana_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_room_6SegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_6.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_room_6.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_room_6.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_room_6.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_room_6SegmentBssEnd = .;
        _kakusiana_room_6SegmentEnd = .;
    }
    _kakusiana_room_6SegmentBssSize = ABSOLUTE( _kakusiana_room_6SegmentBssEnd - _kakusiana_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_room_7SegmentRomStart = _RomSize;
    ..kakusiana_room_7 0x03000000 : AT(_RomSize)
    {
        _kakusiana_room_7SegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_room_7SegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_7.o (.text)
        _kakusiana_room_7SegmentTextEnd = .;
    _kakusiana_room_7SegmentTextSize = ABSOLUTE( _kakusiana_room_7SegmentTextEnd - _kakusiana_room_7SegmentTextStart );
        _kakusiana_room_7SegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_7.o (.data)
        _kakusiana_room_7SegmentDataEnd = .;
    _kakusiana_room_7SegmentDataSize = ABSOLUTE( _kakusiana_room_7SegmentDataEnd - _kakusiana_room_7SegmentDataStart );
        _kakusiana_room_7SegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_7.o (.rodata)
        _kakusiana_room_7SegmentRoDataEnd = .;
    _kakusiana_room_7SegmentRoDataSize = ABSOLUTE( _kakusiana_room_7SegmentRoDataEnd - _kakusiana_room_7SegmentRoDataStart );
        _kakusiana_room_7SegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_7.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_room_7SegmentSDataEnd = .;
        _kakusiana_room_7SegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_7.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_room_7SegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_room_7SegmentOvlEnd - _kakusiana_room_7SegmentTextStart );
    _kakusiana_room_7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_room_7.bss ADDR(..kakusiana_room_7) + SIZEOF(..kakusiana_room_7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_room_7SegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_7.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_room_7.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_room_7.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_room_7.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_room_7SegmentBssEnd = .;
        _kakusiana_room_7SegmentEnd = .;
    }
    _kakusiana_room_7SegmentBssSize = ABSOLUTE( _kakusiana_room_7SegmentBssEnd - _kakusiana_room_7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_room_8SegmentRomStart = _RomSize;
    ..kakusiana_room_8 0x03000000 : AT(_RomSize)
    {
        _kakusiana_room_8SegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_room_8SegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_8.o (.text)
        _kakusiana_room_8SegmentTextEnd = .;
    _kakusiana_room_8SegmentTextSize = ABSOLUTE( _kakusiana_room_8SegmentTextEnd - _kakusiana_room_8SegmentTextStart );
        _kakusiana_room_8SegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_8.o (.data)
        _kakusiana_room_8SegmentDataEnd = .;
    _kakusiana_room_8SegmentDataSize = ABSOLUTE( _kakusiana_room_8SegmentDataEnd - _kakusiana_room_8SegmentDataStart );
        _kakusiana_room_8SegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_8.o (.rodata)
        _kakusiana_room_8SegmentRoDataEnd = .;
    _kakusiana_room_8SegmentRoDataSize = ABSOLUTE( _kakusiana_room_8SegmentRoDataEnd - _kakusiana_room_8SegmentRoDataStart );
        _kakusiana_room_8SegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_8.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_room_8SegmentSDataEnd = .;
        _kakusiana_room_8SegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_8.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_room_8SegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_room_8SegmentOvlEnd - _kakusiana_room_8SegmentTextStart );
    _kakusiana_room_8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_room_8.bss ADDR(..kakusiana_room_8) + SIZEOF(..kakusiana_room_8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_room_8SegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_8.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_room_8.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_room_8.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_room_8.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_room_8SegmentBssEnd = .;
        _kakusiana_room_8SegmentEnd = .;
    }
    _kakusiana_room_8SegmentBssSize = ABSOLUTE( _kakusiana_room_8SegmentBssEnd - _kakusiana_room_8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_room_9SegmentRomStart = _RomSize;
    ..kakusiana_room_9 0x03000000 : AT(_RomSize)
    {
        _kakusiana_room_9SegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_room_9SegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_9.o (.text)
        _kakusiana_room_9SegmentTextEnd = .;
    _kakusiana_room_9SegmentTextSize = ABSOLUTE( _kakusiana_room_9SegmentTextEnd - _kakusiana_room_9SegmentTextStart );
        _kakusiana_room_9SegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_9.o (.data)
        _kakusiana_room_9SegmentDataEnd = .;
    _kakusiana_room_9SegmentDataSize = ABSOLUTE( _kakusiana_room_9SegmentDataEnd - _kakusiana_room_9SegmentDataStart );
        _kakusiana_room_9SegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_9.o (.rodata)
        _kakusiana_room_9SegmentRoDataEnd = .;
    _kakusiana_room_9SegmentRoDataSize = ABSOLUTE( _kakusiana_room_9SegmentRoDataEnd - _kakusiana_room_9SegmentRoDataStart );
        _kakusiana_room_9SegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_9.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_room_9SegmentSDataEnd = .;
        _kakusiana_room_9SegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_9.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_room_9SegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_room_9SegmentOvlEnd - _kakusiana_room_9SegmentTextStart );
    _kakusiana_room_9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_room_9.bss ADDR(..kakusiana_room_9) + SIZEOF(..kakusiana_room_9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_room_9SegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_9.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_room_9.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_room_9.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_room_9.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_room_9SegmentBssEnd = .;
        _kakusiana_room_9SegmentEnd = .;
    }
    _kakusiana_room_9SegmentBssSize = ABSOLUTE( _kakusiana_room_9SegmentBssEnd - _kakusiana_room_9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_room_10SegmentRomStart = _RomSize;
    ..kakusiana_room_10 0x03000000 : AT(_RomSize)
    {
        _kakusiana_room_10SegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_room_10SegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_10.o (.text)
        _kakusiana_room_10SegmentTextEnd = .;
    _kakusiana_room_10SegmentTextSize = ABSOLUTE( _kakusiana_room_10SegmentTextEnd - _kakusiana_room_10SegmentTextStart );
        _kakusiana_room_10SegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_10.o (.data)
        _kakusiana_room_10SegmentDataEnd = .;
    _kakusiana_room_10SegmentDataSize = ABSOLUTE( _kakusiana_room_10SegmentDataEnd - _kakusiana_room_10SegmentDataStart );
        _kakusiana_room_10SegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_10.o (.rodata)
        _kakusiana_room_10SegmentRoDataEnd = .;
    _kakusiana_room_10SegmentRoDataSize = ABSOLUTE( _kakusiana_room_10SegmentRoDataEnd - _kakusiana_room_10SegmentRoDataStart );
        _kakusiana_room_10SegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_10.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_room_10SegmentSDataEnd = .;
        _kakusiana_room_10SegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_10.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_room_10SegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_room_10SegmentOvlEnd - _kakusiana_room_10SegmentTextStart );
    _kakusiana_room_10SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_room_10.bss ADDR(..kakusiana_room_10) + SIZEOF(..kakusiana_room_10) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_room_10SegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_10.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_room_10.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_room_10.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_room_10.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_room_10SegmentBssEnd = .;
        _kakusiana_room_10SegmentEnd = .;
    }
    _kakusiana_room_10SegmentBssSize = ABSOLUTE( _kakusiana_room_10SegmentBssEnd - _kakusiana_room_10SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_room_11SegmentRomStart = _RomSize;
    ..kakusiana_room_11 0x03000000 : AT(_RomSize)
    {
        _kakusiana_room_11SegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_room_11SegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_11.o (.text)
        _kakusiana_room_11SegmentTextEnd = .;
    _kakusiana_room_11SegmentTextSize = ABSOLUTE( _kakusiana_room_11SegmentTextEnd - _kakusiana_room_11SegmentTextStart );
        _kakusiana_room_11SegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_11.o (.data)
        _kakusiana_room_11SegmentDataEnd = .;
    _kakusiana_room_11SegmentDataSize = ABSOLUTE( _kakusiana_room_11SegmentDataEnd - _kakusiana_room_11SegmentDataStart );
        _kakusiana_room_11SegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_11.o (.rodata)
        _kakusiana_room_11SegmentRoDataEnd = .;
    _kakusiana_room_11SegmentRoDataSize = ABSOLUTE( _kakusiana_room_11SegmentRoDataEnd - _kakusiana_room_11SegmentRoDataStart );
        _kakusiana_room_11SegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_11.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_room_11SegmentSDataEnd = .;
        _kakusiana_room_11SegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_11.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_room_11SegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_room_11SegmentOvlEnd - _kakusiana_room_11SegmentTextStart );
    _kakusiana_room_11SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_room_11.bss ADDR(..kakusiana_room_11) + SIZEOF(..kakusiana_room_11) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_room_11SegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_11.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_room_11.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_room_11.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_room_11.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_room_11SegmentBssEnd = .;
        _kakusiana_room_11SegmentEnd = .;
    }
    _kakusiana_room_11SegmentBssSize = ABSOLUTE( _kakusiana_room_11SegmentBssEnd - _kakusiana_room_11SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_room_12SegmentRomStart = _RomSize;
    ..kakusiana_room_12 0x03000000 : AT(_RomSize)
    {
        _kakusiana_room_12SegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_room_12SegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_12.o (.text)
        _kakusiana_room_12SegmentTextEnd = .;
    _kakusiana_room_12SegmentTextSize = ABSOLUTE( _kakusiana_room_12SegmentTextEnd - _kakusiana_room_12SegmentTextStart );
        _kakusiana_room_12SegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_12.o (.data)
        _kakusiana_room_12SegmentDataEnd = .;
    _kakusiana_room_12SegmentDataSize = ABSOLUTE( _kakusiana_room_12SegmentDataEnd - _kakusiana_room_12SegmentDataStart );
        _kakusiana_room_12SegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_12.o (.rodata)
        _kakusiana_room_12SegmentRoDataEnd = .;
    _kakusiana_room_12SegmentRoDataSize = ABSOLUTE( _kakusiana_room_12SegmentRoDataEnd - _kakusiana_room_12SegmentRoDataStart );
        _kakusiana_room_12SegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_12.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_room_12SegmentSDataEnd = .;
        _kakusiana_room_12SegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_12.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_room_12SegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_room_12SegmentOvlEnd - _kakusiana_room_12SegmentTextStart );
    _kakusiana_room_12SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_room_12.bss ADDR(..kakusiana_room_12) + SIZEOF(..kakusiana_room_12) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_room_12SegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_12.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_room_12.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_room_12.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_room_12.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_room_12SegmentBssEnd = .;
        _kakusiana_room_12SegmentEnd = .;
    }
    _kakusiana_room_12SegmentBssSize = ABSOLUTE( _kakusiana_room_12SegmentBssEnd - _kakusiana_room_12SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakusiana_room_13SegmentRomStart = _RomSize;
    ..kakusiana_room_13 0x03000000 : AT(_RomSize)
    {
        _kakusiana_room_13SegmentStart = .;
        . = ALIGN(0x10);
        _kakusiana_room_13SegmentTextStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_13.o (.text)
        _kakusiana_room_13SegmentTextEnd = .;
    _kakusiana_room_13SegmentTextSize = ABSOLUTE( _kakusiana_room_13SegmentTextEnd - _kakusiana_room_13SegmentTextStart );
        _kakusiana_room_13SegmentDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_13.o (.data)
        _kakusiana_room_13SegmentDataEnd = .;
    _kakusiana_room_13SegmentDataSize = ABSOLUTE( _kakusiana_room_13SegmentDataEnd - _kakusiana_room_13SegmentDataStart );
        _kakusiana_room_13SegmentRoDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_13.o (.rodata)
        _kakusiana_room_13SegmentRoDataEnd = .;
    _kakusiana_room_13SegmentRoDataSize = ABSOLUTE( _kakusiana_room_13SegmentRoDataEnd - _kakusiana_room_13SegmentRoDataStart );
        _kakusiana_room_13SegmentSDataStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_13.o (.sdata)
        . = ALIGN(0x10);
        _kakusiana_room_13SegmentSDataEnd = .;
        _kakusiana_room_13SegmentOvlStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_13.o (.ovl)
        . = ALIGN(0x10);
        _kakusiana_room_13SegmentOvlEnd = .;
    }
    _RomSize += ( _kakusiana_room_13SegmentOvlEnd - _kakusiana_room_13SegmentTextStart );
    _kakusiana_room_13SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakusiana_room_13.bss ADDR(..kakusiana_room_13) + SIZEOF(..kakusiana_room_13) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakusiana_room_13SegmentBssStart = .;
            build/scenes/misc/kakusiana/kakusiana_room_13.o (.sbss)
            build/scenes/misc/kakusiana/kakusiana_room_13.o (.scommon)
            build/scenes/misc/kakusiana/kakusiana_room_13.o (.bss)
            build/scenes/misc/kakusiana/kakusiana_room_13.o (COMMON)
        . = ALIGN(0x10);
        _kakusiana_room_13SegmentBssEnd = .;
        _kakusiana_room_13SegmentEnd = .;
    }
    _kakusiana_room_13SegmentBssSize = ABSOLUTE( _kakusiana_room_13SegmentBssEnd - _kakusiana_room_13SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _entra_sceneSegmentRomStart = _RomSize;
    ..entra_scene 0x02000000 : AT(_RomSize)
    {
        _entra_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _entra_sceneSegmentTextStart = .;
            build/scenes/overworld/entra/entra_scene.o (.text)
        _entra_sceneSegmentTextEnd = .;
    _entra_sceneSegmentTextSize = ABSOLUTE( _entra_sceneSegmentTextEnd - _entra_sceneSegmentTextStart );
        _entra_sceneSegmentDataStart = .;
            build/scenes/overworld/entra/entra_scene.o (.data)
        _entra_sceneSegmentDataEnd = .;
    _entra_sceneSegmentDataSize = ABSOLUTE( _entra_sceneSegmentDataEnd - _entra_sceneSegmentDataStart );
        _entra_sceneSegmentRoDataStart = .;
            build/scenes/overworld/entra/entra_scene.o (.rodata)
        _entra_sceneSegmentRoDataEnd = .;
    _entra_sceneSegmentRoDataSize = ABSOLUTE( _entra_sceneSegmentRoDataEnd - _entra_sceneSegmentRoDataStart );
        _entra_sceneSegmentSDataStart = .;
            build/scenes/overworld/entra/entra_scene.o (.sdata)
        . = ALIGN(0x10);
        _entra_sceneSegmentSDataEnd = .;
        _entra_sceneSegmentOvlStart = .;
            build/scenes/overworld/entra/entra_scene.o (.ovl)
        . = ALIGN(0x10);
        _entra_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _entra_sceneSegmentOvlEnd - _entra_sceneSegmentTextStart );
    _entra_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..entra_scene.bss ADDR(..entra_scene) + SIZEOF(..entra_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _entra_sceneSegmentBssStart = .;
            build/scenes/overworld/entra/entra_scene.o (.sbss)
            build/scenes/overworld/entra/entra_scene.o (.scommon)
            build/scenes/overworld/entra/entra_scene.o (.bss)
            build/scenes/overworld/entra/entra_scene.o (COMMON)
        . = ALIGN(0x10);
        _entra_sceneSegmentBssEnd = .;
        _entra_sceneSegmentEnd = .;
    }
    _entra_sceneSegmentBssSize = ABSOLUTE( _entra_sceneSegmentBssEnd - _entra_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _entra_room_0SegmentRomStart = _RomSize;
    ..entra_room_0 0x03000000 : AT(_RomSize)
    {
        _entra_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _entra_room_0SegmentTextStart = .;
            build/scenes/overworld/entra/entra_room_0.o (.text)
        _entra_room_0SegmentTextEnd = .;
    _entra_room_0SegmentTextSize = ABSOLUTE( _entra_room_0SegmentTextEnd - _entra_room_0SegmentTextStart );
        _entra_room_0SegmentDataStart = .;
            build/scenes/overworld/entra/entra_room_0.o (.data)
        _entra_room_0SegmentDataEnd = .;
    _entra_room_0SegmentDataSize = ABSOLUTE( _entra_room_0SegmentDataEnd - _entra_room_0SegmentDataStart );
        _entra_room_0SegmentRoDataStart = .;
            build/scenes/overworld/entra/entra_room_0.o (.rodata)
        _entra_room_0SegmentRoDataEnd = .;
    _entra_room_0SegmentRoDataSize = ABSOLUTE( _entra_room_0SegmentRoDataEnd - _entra_room_0SegmentRoDataStart );
        _entra_room_0SegmentSDataStart = .;
            build/scenes/overworld/entra/entra_room_0.o (.sdata)
        . = ALIGN(0x10);
        _entra_room_0SegmentSDataEnd = .;
        _entra_room_0SegmentOvlStart = .;
            build/scenes/overworld/entra/entra_room_0.o (.ovl)
        . = ALIGN(0x10);
        _entra_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _entra_room_0SegmentOvlEnd - _entra_room_0SegmentTextStart );
    _entra_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..entra_room_0.bss ADDR(..entra_room_0) + SIZEOF(..entra_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _entra_room_0SegmentBssStart = .;
            build/scenes/overworld/entra/entra_room_0.o (.sbss)
            build/scenes/overworld/entra/entra_room_0.o (.scommon)
            build/scenes/overworld/entra/entra_room_0.o (.bss)
            build/scenes/overworld/entra/entra_room_0.o (COMMON)
        . = ALIGN(0x10);
        _entra_room_0SegmentBssEnd = .;
        _entra_room_0SegmentEnd = .;
    }
    _entra_room_0SegmentBssSize = ABSOLUTE( _entra_room_0SegmentBssEnd - _entra_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _moribossroom_sceneSegmentRomStart = _RomSize;
    ..moribossroom_scene 0x02000000 : AT(_RomSize)
    {
        _moribossroom_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _moribossroom_sceneSegmentTextStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_scene.o (.text)
        _moribossroom_sceneSegmentTextEnd = .;
    _moribossroom_sceneSegmentTextSize = ABSOLUTE( _moribossroom_sceneSegmentTextEnd - _moribossroom_sceneSegmentTextStart );
        _moribossroom_sceneSegmentDataStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_scene.o (.data)
        _moribossroom_sceneSegmentDataEnd = .;
    _moribossroom_sceneSegmentDataSize = ABSOLUTE( _moribossroom_sceneSegmentDataEnd - _moribossroom_sceneSegmentDataStart );
        _moribossroom_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_scene.o (.rodata)
        _moribossroom_sceneSegmentRoDataEnd = .;
    _moribossroom_sceneSegmentRoDataSize = ABSOLUTE( _moribossroom_sceneSegmentRoDataEnd - _moribossroom_sceneSegmentRoDataStart );
        _moribossroom_sceneSegmentSDataStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_scene.o (.sdata)
        . = ALIGN(0x10);
        _moribossroom_sceneSegmentSDataEnd = .;
        _moribossroom_sceneSegmentOvlStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_scene.o (.ovl)
        . = ALIGN(0x10);
        _moribossroom_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _moribossroom_sceneSegmentOvlEnd - _moribossroom_sceneSegmentTextStart );
    _moribossroom_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..moribossroom_scene.bss ADDR(..moribossroom_scene) + SIZEOF(..moribossroom_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _moribossroom_sceneSegmentBssStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_scene.o (.sbss)
            build/scenes/dungeons/moribossroom/moribossroom_scene.o (.scommon)
            build/scenes/dungeons/moribossroom/moribossroom_scene.o (.bss)
            build/scenes/dungeons/moribossroom/moribossroom_scene.o (COMMON)
        . = ALIGN(0x10);
        _moribossroom_sceneSegmentBssEnd = .;
        _moribossroom_sceneSegmentEnd = .;
    }
    _moribossroom_sceneSegmentBssSize = ABSOLUTE( _moribossroom_sceneSegmentBssEnd - _moribossroom_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _moribossroom_room_0SegmentRomStart = _RomSize;
    ..moribossroom_room_0 0x03000000 : AT(_RomSize)
    {
        _moribossroom_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _moribossroom_room_0SegmentTextStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_room_0.o (.text)
        _moribossroom_room_0SegmentTextEnd = .;
    _moribossroom_room_0SegmentTextSize = ABSOLUTE( _moribossroom_room_0SegmentTextEnd - _moribossroom_room_0SegmentTextStart );
        _moribossroom_room_0SegmentDataStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_room_0.o (.data)
        _moribossroom_room_0SegmentDataEnd = .;
    _moribossroom_room_0SegmentDataSize = ABSOLUTE( _moribossroom_room_0SegmentDataEnd - _moribossroom_room_0SegmentDataStart );
        _moribossroom_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_room_0.o (.rodata)
        _moribossroom_room_0SegmentRoDataEnd = .;
    _moribossroom_room_0SegmentRoDataSize = ABSOLUTE( _moribossroom_room_0SegmentRoDataEnd - _moribossroom_room_0SegmentRoDataStart );
        _moribossroom_room_0SegmentSDataStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_room_0.o (.sdata)
        . = ALIGN(0x10);
        _moribossroom_room_0SegmentSDataEnd = .;
        _moribossroom_room_0SegmentOvlStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_room_0.o (.ovl)
        . = ALIGN(0x10);
        _moribossroom_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _moribossroom_room_0SegmentOvlEnd - _moribossroom_room_0SegmentTextStart );
    _moribossroom_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..moribossroom_room_0.bss ADDR(..moribossroom_room_0) + SIZEOF(..moribossroom_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _moribossroom_room_0SegmentBssStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_room_0.o (.sbss)
            build/scenes/dungeons/moribossroom/moribossroom_room_0.o (.scommon)
            build/scenes/dungeons/moribossroom/moribossroom_room_0.o (.bss)
            build/scenes/dungeons/moribossroom/moribossroom_room_0.o (COMMON)
        . = ALIGN(0x10);
        _moribossroom_room_0SegmentBssEnd = .;
        _moribossroom_room_0SegmentEnd = .;
    }
    _moribossroom_room_0SegmentBssSize = ABSOLUTE( _moribossroom_room_0SegmentBssEnd - _moribossroom_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _moribossroom_room_1SegmentRomStart = _RomSize;
    ..moribossroom_room_1 0x03000000 : AT(_RomSize)
    {
        _moribossroom_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _moribossroom_room_1SegmentTextStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_room_1.o (.text)
        _moribossroom_room_1SegmentTextEnd = .;
    _moribossroom_room_1SegmentTextSize = ABSOLUTE( _moribossroom_room_1SegmentTextEnd - _moribossroom_room_1SegmentTextStart );
        _moribossroom_room_1SegmentDataStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_room_1.o (.data)
        _moribossroom_room_1SegmentDataEnd = .;
    _moribossroom_room_1SegmentDataSize = ABSOLUTE( _moribossroom_room_1SegmentDataEnd - _moribossroom_room_1SegmentDataStart );
        _moribossroom_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_room_1.o (.rodata)
        _moribossroom_room_1SegmentRoDataEnd = .;
    _moribossroom_room_1SegmentRoDataSize = ABSOLUTE( _moribossroom_room_1SegmentRoDataEnd - _moribossroom_room_1SegmentRoDataStart );
        _moribossroom_room_1SegmentSDataStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_room_1.o (.sdata)
        . = ALIGN(0x10);
        _moribossroom_room_1SegmentSDataEnd = .;
        _moribossroom_room_1SegmentOvlStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_room_1.o (.ovl)
        . = ALIGN(0x10);
        _moribossroom_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _moribossroom_room_1SegmentOvlEnd - _moribossroom_room_1SegmentTextStart );
    _moribossroom_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..moribossroom_room_1.bss ADDR(..moribossroom_room_1) + SIZEOF(..moribossroom_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _moribossroom_room_1SegmentBssStart = .;
            build/scenes/dungeons/moribossroom/moribossroom_room_1.o (.sbss)
            build/scenes/dungeons/moribossroom/moribossroom_room_1.o (.scommon)
            build/scenes/dungeons/moribossroom/moribossroom_room_1.o (.bss)
            build/scenes/dungeons/moribossroom/moribossroom_room_1.o (COMMON)
        . = ALIGN(0x10);
        _moribossroom_room_1SegmentBssEnd = .;
        _moribossroom_room_1SegmentEnd = .;
    }
    _moribossroom_room_1SegmentBssSize = ABSOLUTE( _moribossroom_room_1SegmentBssEnd - _moribossroom_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _syatekijyou_sceneSegmentRomStart = _RomSize;
    ..syatekijyou_scene 0x02000000 : AT(_RomSize)
    {
        _syatekijyou_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _syatekijyou_sceneSegmentTextStart = .;
            build/scenes/indoors/syatekijyou/syatekijyou_scene.o (.text)
        _syatekijyou_sceneSegmentTextEnd = .;
    _syatekijyou_sceneSegmentTextSize = ABSOLUTE( _syatekijyou_sceneSegmentTextEnd - _syatekijyou_sceneSegmentTextStart );
        _syatekijyou_sceneSegmentDataStart = .;
            build/scenes/indoors/syatekijyou/syatekijyou_scene.o (.data)
        _syatekijyou_sceneSegmentDataEnd = .;
    _syatekijyou_sceneSegmentDataSize = ABSOLUTE( _syatekijyou_sceneSegmentDataEnd - _syatekijyou_sceneSegmentDataStart );
        _syatekijyou_sceneSegmentRoDataStart = .;
            build/scenes/indoors/syatekijyou/syatekijyou_scene.o (.rodata)
        _syatekijyou_sceneSegmentRoDataEnd = .;
    _syatekijyou_sceneSegmentRoDataSize = ABSOLUTE( _syatekijyou_sceneSegmentRoDataEnd - _syatekijyou_sceneSegmentRoDataStart );
        _syatekijyou_sceneSegmentSDataStart = .;
            build/scenes/indoors/syatekijyou/syatekijyou_scene.o (.sdata)
        . = ALIGN(0x10);
        _syatekijyou_sceneSegmentSDataEnd = .;
        _syatekijyou_sceneSegmentOvlStart = .;
            build/scenes/indoors/syatekijyou/syatekijyou_scene.o (.ovl)
        . = ALIGN(0x10);
        _syatekijyou_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _syatekijyou_sceneSegmentOvlEnd - _syatekijyou_sceneSegmentTextStart );
    _syatekijyou_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..syatekijyou_scene.bss ADDR(..syatekijyou_scene) + SIZEOF(..syatekijyou_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _syatekijyou_sceneSegmentBssStart = .;
            build/scenes/indoors/syatekijyou/syatekijyou_scene.o (.sbss)
            build/scenes/indoors/syatekijyou/syatekijyou_scene.o (.scommon)
            build/scenes/indoors/syatekijyou/syatekijyou_scene.o (.bss)
            build/scenes/indoors/syatekijyou/syatekijyou_scene.o (COMMON)
        . = ALIGN(0x10);
        _syatekijyou_sceneSegmentBssEnd = .;
        _syatekijyou_sceneSegmentEnd = .;
    }
    _syatekijyou_sceneSegmentBssSize = ABSOLUTE( _syatekijyou_sceneSegmentBssEnd - _syatekijyou_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _syatekijyou_room_0SegmentRomStart = _RomSize;
    ..syatekijyou_room_0 0x03000000 : AT(_RomSize)
    {
        _syatekijyou_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _syatekijyou_room_0SegmentTextStart = .;
            build/scenes/indoors/syatekijyou/syatekijyou_room_0.o (.text)
        _syatekijyou_room_0SegmentTextEnd = .;
    _syatekijyou_room_0SegmentTextSize = ABSOLUTE( _syatekijyou_room_0SegmentTextEnd - _syatekijyou_room_0SegmentTextStart );
        _syatekijyou_room_0SegmentDataStart = .;
            build/scenes/indoors/syatekijyou/syatekijyou_room_0.o (.data)
        _syatekijyou_room_0SegmentDataEnd = .;
    _syatekijyou_room_0SegmentDataSize = ABSOLUTE( _syatekijyou_room_0SegmentDataEnd - _syatekijyou_room_0SegmentDataStart );
        _syatekijyou_room_0SegmentRoDataStart = .;
            build/scenes/indoors/syatekijyou/syatekijyou_room_0.o (.rodata)
        _syatekijyou_room_0SegmentRoDataEnd = .;
    _syatekijyou_room_0SegmentRoDataSize = ABSOLUTE( _syatekijyou_room_0SegmentRoDataEnd - _syatekijyou_room_0SegmentRoDataStart );
        _syatekijyou_room_0SegmentSDataStart = .;
            build/scenes/indoors/syatekijyou/syatekijyou_room_0.o (.sdata)
        . = ALIGN(0x10);
        _syatekijyou_room_0SegmentSDataEnd = .;
        _syatekijyou_room_0SegmentOvlStart = .;
            build/scenes/indoors/syatekijyou/syatekijyou_room_0.o (.ovl)
        . = ALIGN(0x10);
        _syatekijyou_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _syatekijyou_room_0SegmentOvlEnd - _syatekijyou_room_0SegmentTextStart );
    _syatekijyou_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..syatekijyou_room_0.bss ADDR(..syatekijyou_room_0) + SIZEOF(..syatekijyou_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _syatekijyou_room_0SegmentBssStart = .;
            build/scenes/indoors/syatekijyou/syatekijyou_room_0.o (.sbss)
            build/scenes/indoors/syatekijyou/syatekijyou_room_0.o (.scommon)
            build/scenes/indoors/syatekijyou/syatekijyou_room_0.o (.bss)
            build/scenes/indoors/syatekijyou/syatekijyou_room_0.o (COMMON)
        . = ALIGN(0x10);
        _syatekijyou_room_0SegmentBssEnd = .;
        _syatekijyou_room_0SegmentEnd = .;
    }
    _syatekijyou_room_0SegmentBssSize = ABSOLUTE( _syatekijyou_room_0SegmentBssEnd - _syatekijyou_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _shop1_sceneSegmentRomStart = _RomSize;
    ..shop1_scene 0x02000000 : AT(_RomSize)
    {
        _shop1_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _shop1_sceneSegmentTextStart = .;
            build/scenes/shops/shop1/shop1_scene.o (.text)
        _shop1_sceneSegmentTextEnd = .;
    _shop1_sceneSegmentTextSize = ABSOLUTE( _shop1_sceneSegmentTextEnd - _shop1_sceneSegmentTextStart );
        _shop1_sceneSegmentDataStart = .;
            build/scenes/shops/shop1/shop1_scene.o (.data)
        _shop1_sceneSegmentDataEnd = .;
    _shop1_sceneSegmentDataSize = ABSOLUTE( _shop1_sceneSegmentDataEnd - _shop1_sceneSegmentDataStart );
        _shop1_sceneSegmentRoDataStart = .;
            build/scenes/shops/shop1/shop1_scene.o (.rodata)
        _shop1_sceneSegmentRoDataEnd = .;
    _shop1_sceneSegmentRoDataSize = ABSOLUTE( _shop1_sceneSegmentRoDataEnd - _shop1_sceneSegmentRoDataStart );
        _shop1_sceneSegmentSDataStart = .;
            build/scenes/shops/shop1/shop1_scene.o (.sdata)
        . = ALIGN(0x10);
        _shop1_sceneSegmentSDataEnd = .;
        _shop1_sceneSegmentOvlStart = .;
            build/scenes/shops/shop1/shop1_scene.o (.ovl)
        . = ALIGN(0x10);
        _shop1_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _shop1_sceneSegmentOvlEnd - _shop1_sceneSegmentTextStart );
    _shop1_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..shop1_scene.bss ADDR(..shop1_scene) + SIZEOF(..shop1_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _shop1_sceneSegmentBssStart = .;
            build/scenes/shops/shop1/shop1_scene.o (.sbss)
            build/scenes/shops/shop1/shop1_scene.o (.scommon)
            build/scenes/shops/shop1/shop1_scene.o (.bss)
            build/scenes/shops/shop1/shop1_scene.o (COMMON)
        . = ALIGN(0x10);
        _shop1_sceneSegmentBssEnd = .;
        _shop1_sceneSegmentEnd = .;
    }
    _shop1_sceneSegmentBssSize = ABSOLUTE( _shop1_sceneSegmentBssEnd - _shop1_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _shop1_room_0SegmentRomStart = _RomSize;
    ..shop1_room_0 0x03000000 : AT(_RomSize)
    {
        _shop1_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _shop1_room_0SegmentTextStart = .;
            build/scenes/shops/shop1/shop1_room_0.o (.text)
        _shop1_room_0SegmentTextEnd = .;
    _shop1_room_0SegmentTextSize = ABSOLUTE( _shop1_room_0SegmentTextEnd - _shop1_room_0SegmentTextStart );
        _shop1_room_0SegmentDataStart = .;
            build/scenes/shops/shop1/shop1_room_0.o (.data)
        _shop1_room_0SegmentDataEnd = .;
    _shop1_room_0SegmentDataSize = ABSOLUTE( _shop1_room_0SegmentDataEnd - _shop1_room_0SegmentDataStart );
        _shop1_room_0SegmentRoDataStart = .;
            build/scenes/shops/shop1/shop1_room_0.o (.rodata)
        _shop1_room_0SegmentRoDataEnd = .;
    _shop1_room_0SegmentRoDataSize = ABSOLUTE( _shop1_room_0SegmentRoDataEnd - _shop1_room_0SegmentRoDataStart );
        _shop1_room_0SegmentSDataStart = .;
            build/scenes/shops/shop1/shop1_room_0.o (.sdata)
        . = ALIGN(0x10);
        _shop1_room_0SegmentSDataEnd = .;
        _shop1_room_0SegmentOvlStart = .;
            build/scenes/shops/shop1/shop1_room_0.o (.ovl)
        . = ALIGN(0x10);
        _shop1_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _shop1_room_0SegmentOvlEnd - _shop1_room_0SegmentTextStart );
    _shop1_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..shop1_room_0.bss ADDR(..shop1_room_0) + SIZEOF(..shop1_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _shop1_room_0SegmentBssStart = .;
            build/scenes/shops/shop1/shop1_room_0.o (.sbss)
            build/scenes/shops/shop1/shop1_room_0.o (.scommon)
            build/scenes/shops/shop1/shop1_room_0.o (.bss)
            build/scenes/shops/shop1/shop1_room_0.o (COMMON)
        . = ALIGN(0x10);
        _shop1_room_0SegmentBssEnd = .;
        _shop1_room_0SegmentEnd = .;
    }
    _shop1_room_0SegmentBssSize = ABSOLUTE( _shop1_room_0SegmentBssEnd - _shop1_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hairal_niwa_sceneSegmentRomStart = _RomSize;
    ..hairal_niwa_scene 0x02000000 : AT(_RomSize)
    {
        _hairal_niwa_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _hairal_niwa_sceneSegmentTextStart = .;
            build/scenes/indoors/hairal_niwa/hairal_niwa_scene.o (.text)
        _hairal_niwa_sceneSegmentTextEnd = .;
    _hairal_niwa_sceneSegmentTextSize = ABSOLUTE( _hairal_niwa_sceneSegmentTextEnd - _hairal_niwa_sceneSegmentTextStart );
        _hairal_niwa_sceneSegmentDataStart = .;
            build/scenes/indoors/hairal_niwa/hairal_niwa_scene.o (.data)
        _hairal_niwa_sceneSegmentDataEnd = .;
    _hairal_niwa_sceneSegmentDataSize = ABSOLUTE( _hairal_niwa_sceneSegmentDataEnd - _hairal_niwa_sceneSegmentDataStart );
        _hairal_niwa_sceneSegmentRoDataStart = .;
            build/scenes/indoors/hairal_niwa/hairal_niwa_scene.o (.rodata)
        _hairal_niwa_sceneSegmentRoDataEnd = .;
    _hairal_niwa_sceneSegmentRoDataSize = ABSOLUTE( _hairal_niwa_sceneSegmentRoDataEnd - _hairal_niwa_sceneSegmentRoDataStart );
        _hairal_niwa_sceneSegmentSDataStart = .;
            build/scenes/indoors/hairal_niwa/hairal_niwa_scene.o (.sdata)
        . = ALIGN(0x10);
        _hairal_niwa_sceneSegmentSDataEnd = .;
        _hairal_niwa_sceneSegmentOvlStart = .;
            build/scenes/indoors/hairal_niwa/hairal_niwa_scene.o (.ovl)
        . = ALIGN(0x10);
        _hairal_niwa_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _hairal_niwa_sceneSegmentOvlEnd - _hairal_niwa_sceneSegmentTextStart );
    _hairal_niwa_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hairal_niwa_scene.bss ADDR(..hairal_niwa_scene) + SIZEOF(..hairal_niwa_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hairal_niwa_sceneSegmentBssStart = .;
            build/scenes/indoors/hairal_niwa/hairal_niwa_scene.o (.sbss)
            build/scenes/indoors/hairal_niwa/hairal_niwa_scene.o (.scommon)
            build/scenes/indoors/hairal_niwa/hairal_niwa_scene.o (.bss)
            build/scenes/indoors/hairal_niwa/hairal_niwa_scene.o (COMMON)
        . = ALIGN(0x10);
        _hairal_niwa_sceneSegmentBssEnd = .;
        _hairal_niwa_sceneSegmentEnd = .;
    }
    _hairal_niwa_sceneSegmentBssSize = ABSOLUTE( _hairal_niwa_sceneSegmentBssEnd - _hairal_niwa_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hairal_niwa_room_0SegmentRomStart = _RomSize;
    ..hairal_niwa_room_0 0x03000000 : AT(_RomSize)
    {
        _hairal_niwa_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _hairal_niwa_room_0SegmentTextStart = .;
            build/scenes/indoors/hairal_niwa/hairal_niwa_room_0.o (.text)
        _hairal_niwa_room_0SegmentTextEnd = .;
    _hairal_niwa_room_0SegmentTextSize = ABSOLUTE( _hairal_niwa_room_0SegmentTextEnd - _hairal_niwa_room_0SegmentTextStart );
        _hairal_niwa_room_0SegmentDataStart = .;
            build/scenes/indoors/hairal_niwa/hairal_niwa_room_0.o (.data)
        _hairal_niwa_room_0SegmentDataEnd = .;
    _hairal_niwa_room_0SegmentDataSize = ABSOLUTE( _hairal_niwa_room_0SegmentDataEnd - _hairal_niwa_room_0SegmentDataStart );
        _hairal_niwa_room_0SegmentRoDataStart = .;
            build/scenes/indoors/hairal_niwa/hairal_niwa_room_0.o (.rodata)
        _hairal_niwa_room_0SegmentRoDataEnd = .;
    _hairal_niwa_room_0SegmentRoDataSize = ABSOLUTE( _hairal_niwa_room_0SegmentRoDataEnd - _hairal_niwa_room_0SegmentRoDataStart );
        _hairal_niwa_room_0SegmentSDataStart = .;
            build/scenes/indoors/hairal_niwa/hairal_niwa_room_0.o (.sdata)
        . = ALIGN(0x10);
        _hairal_niwa_room_0SegmentSDataEnd = .;
        _hairal_niwa_room_0SegmentOvlStart = .;
            build/scenes/indoors/hairal_niwa/hairal_niwa_room_0.o (.ovl)
        . = ALIGN(0x10);
        _hairal_niwa_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _hairal_niwa_room_0SegmentOvlEnd - _hairal_niwa_room_0SegmentTextStart );
    _hairal_niwa_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hairal_niwa_room_0.bss ADDR(..hairal_niwa_room_0) + SIZEOF(..hairal_niwa_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hairal_niwa_room_0SegmentBssStart = .;
            build/scenes/indoors/hairal_niwa/hairal_niwa_room_0.o (.sbss)
            build/scenes/indoors/hairal_niwa/hairal_niwa_room_0.o (.scommon)
            build/scenes/indoors/hairal_niwa/hairal_niwa_room_0.o (.bss)
            build/scenes/indoors/hairal_niwa/hairal_niwa_room_0.o (COMMON)
        . = ALIGN(0x10);
        _hairal_niwa_room_0SegmentBssEnd = .;
        _hairal_niwa_room_0SegmentEnd = .;
    }
    _hairal_niwa_room_0SegmentBssSize = ABSOLUTE( _hairal_niwa_room_0SegmentBssEnd - _hairal_niwa_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_tou_sceneSegmentRomStart = _RomSize;
    ..ganon_tou_scene 0x02000000 : AT(_RomSize)
    {
        _ganon_tou_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _ganon_tou_sceneSegmentTextStart = .;
            build/scenes/dungeons/ganon_tou/ganon_tou_scene.o (.text)
        _ganon_tou_sceneSegmentTextEnd = .;
    _ganon_tou_sceneSegmentTextSize = ABSOLUTE( _ganon_tou_sceneSegmentTextEnd - _ganon_tou_sceneSegmentTextStart );
        _ganon_tou_sceneSegmentDataStart = .;
            build/scenes/dungeons/ganon_tou/ganon_tou_scene.o (.data)
        _ganon_tou_sceneSegmentDataEnd = .;
    _ganon_tou_sceneSegmentDataSize = ABSOLUTE( _ganon_tou_sceneSegmentDataEnd - _ganon_tou_sceneSegmentDataStart );
        _ganon_tou_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/ganon_tou/ganon_tou_scene.o (.rodata)
        _ganon_tou_sceneSegmentRoDataEnd = .;
    _ganon_tou_sceneSegmentRoDataSize = ABSOLUTE( _ganon_tou_sceneSegmentRoDataEnd - _ganon_tou_sceneSegmentRoDataStart );
        _ganon_tou_sceneSegmentSDataStart = .;
            build/scenes/dungeons/ganon_tou/ganon_tou_scene.o (.sdata)
        . = ALIGN(0x10);
        _ganon_tou_sceneSegmentSDataEnd = .;
        _ganon_tou_sceneSegmentOvlStart = .;
            build/scenes/dungeons/ganon_tou/ganon_tou_scene.o (.ovl)
        . = ALIGN(0x10);
        _ganon_tou_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_tou_sceneSegmentOvlEnd - _ganon_tou_sceneSegmentTextStart );
    _ganon_tou_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_tou_scene.bss ADDR(..ganon_tou_scene) + SIZEOF(..ganon_tou_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_tou_sceneSegmentBssStart = .;
            build/scenes/dungeons/ganon_tou/ganon_tou_scene.o (.sbss)
            build/scenes/dungeons/ganon_tou/ganon_tou_scene.o (.scommon)
            build/scenes/dungeons/ganon_tou/ganon_tou_scene.o (.bss)
            build/scenes/dungeons/ganon_tou/ganon_tou_scene.o (COMMON)
        . = ALIGN(0x10);
        _ganon_tou_sceneSegmentBssEnd = .;
        _ganon_tou_sceneSegmentEnd = .;
    }
    _ganon_tou_sceneSegmentBssSize = ABSOLUTE( _ganon_tou_sceneSegmentBssEnd - _ganon_tou_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_tou_room_0SegmentRomStart = _RomSize;
    ..ganon_tou_room_0 0x03000000 : AT(_RomSize)
    {
        _ganon_tou_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_tou_room_0SegmentTextStart = .;
            build/scenes/dungeons/ganon_tou/ganon_tou_room_0.o (.text)
        _ganon_tou_room_0SegmentTextEnd = .;
    _ganon_tou_room_0SegmentTextSize = ABSOLUTE( _ganon_tou_room_0SegmentTextEnd - _ganon_tou_room_0SegmentTextStart );
        _ganon_tou_room_0SegmentDataStart = .;
            build/scenes/dungeons/ganon_tou/ganon_tou_room_0.o (.data)
        _ganon_tou_room_0SegmentDataEnd = .;
    _ganon_tou_room_0SegmentDataSize = ABSOLUTE( _ganon_tou_room_0SegmentDataEnd - _ganon_tou_room_0SegmentDataStart );
        _ganon_tou_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/ganon_tou/ganon_tou_room_0.o (.rodata)
        _ganon_tou_room_0SegmentRoDataEnd = .;
    _ganon_tou_room_0SegmentRoDataSize = ABSOLUTE( _ganon_tou_room_0SegmentRoDataEnd - _ganon_tou_room_0SegmentRoDataStart );
        _ganon_tou_room_0SegmentSDataStart = .;
            build/scenes/dungeons/ganon_tou/ganon_tou_room_0.o (.sdata)
        . = ALIGN(0x10);
        _ganon_tou_room_0SegmentSDataEnd = .;
        _ganon_tou_room_0SegmentOvlStart = .;
            build/scenes/dungeons/ganon_tou/ganon_tou_room_0.o (.ovl)
        . = ALIGN(0x10);
        _ganon_tou_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_tou_room_0SegmentOvlEnd - _ganon_tou_room_0SegmentTextStart );
    _ganon_tou_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_tou_room_0.bss ADDR(..ganon_tou_room_0) + SIZEOF(..ganon_tou_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_tou_room_0SegmentBssStart = .;
            build/scenes/dungeons/ganon_tou/ganon_tou_room_0.o (.sbss)
            build/scenes/dungeons/ganon_tou/ganon_tou_room_0.o (.scommon)
            build/scenes/dungeons/ganon_tou/ganon_tou_room_0.o (.bss)
            build/scenes/dungeons/ganon_tou/ganon_tou_room_0.o (COMMON)
        . = ALIGN(0x10);
        _ganon_tou_room_0SegmentBssEnd = .;
        _ganon_tou_room_0SegmentEnd = .;
    }
    _ganon_tou_room_0SegmentBssSize = ABSOLUTE( _ganon_tou_room_0SegmentBssEnd - _ganon_tou_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _sasatest_sceneSegmentRomStart = _RomSize;
    ..sasatest_scene 0x02000000 : AT(_RomSize)
    {
        _sasatest_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _sasatest_sceneSegmentTextStart = .;
            build/scenes/test_levels/sasatest/sasatest_scene.o (.text)
        _sasatest_sceneSegmentTextEnd = .;
    _sasatest_sceneSegmentTextSize = ABSOLUTE( _sasatest_sceneSegmentTextEnd - _sasatest_sceneSegmentTextStart );
        _sasatest_sceneSegmentDataStart = .;
            build/scenes/test_levels/sasatest/sasatest_scene.o (.data)
        _sasatest_sceneSegmentDataEnd = .;
    _sasatest_sceneSegmentDataSize = ABSOLUTE( _sasatest_sceneSegmentDataEnd - _sasatest_sceneSegmentDataStart );
        _sasatest_sceneSegmentRoDataStart = .;
            build/scenes/test_levels/sasatest/sasatest_scene.o (.rodata)
        _sasatest_sceneSegmentRoDataEnd = .;
    _sasatest_sceneSegmentRoDataSize = ABSOLUTE( _sasatest_sceneSegmentRoDataEnd - _sasatest_sceneSegmentRoDataStart );
        _sasatest_sceneSegmentSDataStart = .;
            build/scenes/test_levels/sasatest/sasatest_scene.o (.sdata)
        . = ALIGN(0x10);
        _sasatest_sceneSegmentSDataEnd = .;
        _sasatest_sceneSegmentOvlStart = .;
            build/scenes/test_levels/sasatest/sasatest_scene.o (.ovl)
        . = ALIGN(0x10);
        _sasatest_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _sasatest_sceneSegmentOvlEnd - _sasatest_sceneSegmentTextStart );
    _sasatest_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..sasatest_scene.bss ADDR(..sasatest_scene) + SIZEOF(..sasatest_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _sasatest_sceneSegmentBssStart = .;
            build/scenes/test_levels/sasatest/sasatest_scene.o (.sbss)
            build/scenes/test_levels/sasatest/sasatest_scene.o (.scommon)
            build/scenes/test_levels/sasatest/sasatest_scene.o (.bss)
            build/scenes/test_levels/sasatest/sasatest_scene.o (COMMON)
        . = ALIGN(0x10);
        _sasatest_sceneSegmentBssEnd = .;
        _sasatest_sceneSegmentEnd = .;
    }
    _sasatest_sceneSegmentBssSize = ABSOLUTE( _sasatest_sceneSegmentBssEnd - _sasatest_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _sasatest_room_0SegmentRomStart = _RomSize;
    ..sasatest_room_0 0x03000000 : AT(_RomSize)
    {
        _sasatest_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _sasatest_room_0SegmentTextStart = .;
            build/scenes/test_levels/sasatest/sasatest_room_0.o (.text)
        _sasatest_room_0SegmentTextEnd = .;
    _sasatest_room_0SegmentTextSize = ABSOLUTE( _sasatest_room_0SegmentTextEnd - _sasatest_room_0SegmentTextStart );
        _sasatest_room_0SegmentDataStart = .;
            build/scenes/test_levels/sasatest/sasatest_room_0.o (.data)
        _sasatest_room_0SegmentDataEnd = .;
    _sasatest_room_0SegmentDataSize = ABSOLUTE( _sasatest_room_0SegmentDataEnd - _sasatest_room_0SegmentDataStart );
        _sasatest_room_0SegmentRoDataStart = .;
            build/scenes/test_levels/sasatest/sasatest_room_0.o (.rodata)
        _sasatest_room_0SegmentRoDataEnd = .;
    _sasatest_room_0SegmentRoDataSize = ABSOLUTE( _sasatest_room_0SegmentRoDataEnd - _sasatest_room_0SegmentRoDataStart );
        _sasatest_room_0SegmentSDataStart = .;
            build/scenes/test_levels/sasatest/sasatest_room_0.o (.sdata)
        . = ALIGN(0x10);
        _sasatest_room_0SegmentSDataEnd = .;
        _sasatest_room_0SegmentOvlStart = .;
            build/scenes/test_levels/sasatest/sasatest_room_0.o (.ovl)
        . = ALIGN(0x10);
        _sasatest_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _sasatest_room_0SegmentOvlEnd - _sasatest_room_0SegmentTextStart );
    _sasatest_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..sasatest_room_0.bss ADDR(..sasatest_room_0) + SIZEOF(..sasatest_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _sasatest_room_0SegmentBssStart = .;
            build/scenes/test_levels/sasatest/sasatest_room_0.o (.sbss)
            build/scenes/test_levels/sasatest/sasatest_room_0.o (.scommon)
            build/scenes/test_levels/sasatest/sasatest_room_0.o (.bss)
            build/scenes/test_levels/sasatest/sasatest_room_0.o (COMMON)
        . = ALIGN(0x10);
        _sasatest_room_0SegmentBssEnd = .;
        _sasatest_room_0SegmentEnd = .;
    }
    _sasatest_room_0SegmentBssSize = ABSOLUTE( _sasatest_room_0SegmentBssEnd - _sasatest_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _market_alley_sceneSegmentRomStart = _RomSize;
    ..market_alley_scene 0x02000000 : AT(_RomSize)
    {
        _market_alley_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _market_alley_sceneSegmentTextStart = .;
            build/scenes/misc/market_alley/market_alley_scene.o (.text)
        _market_alley_sceneSegmentTextEnd = .;
    _market_alley_sceneSegmentTextSize = ABSOLUTE( _market_alley_sceneSegmentTextEnd - _market_alley_sceneSegmentTextStart );
        _market_alley_sceneSegmentDataStart = .;
            build/scenes/misc/market_alley/market_alley_scene.o (.data)
        _market_alley_sceneSegmentDataEnd = .;
    _market_alley_sceneSegmentDataSize = ABSOLUTE( _market_alley_sceneSegmentDataEnd - _market_alley_sceneSegmentDataStart );
        _market_alley_sceneSegmentRoDataStart = .;
            build/scenes/misc/market_alley/market_alley_scene.o (.rodata)
        _market_alley_sceneSegmentRoDataEnd = .;
    _market_alley_sceneSegmentRoDataSize = ABSOLUTE( _market_alley_sceneSegmentRoDataEnd - _market_alley_sceneSegmentRoDataStart );
        _market_alley_sceneSegmentSDataStart = .;
            build/scenes/misc/market_alley/market_alley_scene.o (.sdata)
        . = ALIGN(0x10);
        _market_alley_sceneSegmentSDataEnd = .;
        _market_alley_sceneSegmentOvlStart = .;
            build/scenes/misc/market_alley/market_alley_scene.o (.ovl)
        . = ALIGN(0x10);
        _market_alley_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _market_alley_sceneSegmentOvlEnd - _market_alley_sceneSegmentTextStart );
    _market_alley_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..market_alley_scene.bss ADDR(..market_alley_scene) + SIZEOF(..market_alley_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _market_alley_sceneSegmentBssStart = .;
            build/scenes/misc/market_alley/market_alley_scene.o (.sbss)
            build/scenes/misc/market_alley/market_alley_scene.o (.scommon)
            build/scenes/misc/market_alley/market_alley_scene.o (.bss)
            build/scenes/misc/market_alley/market_alley_scene.o (COMMON)
        . = ALIGN(0x10);
        _market_alley_sceneSegmentBssEnd = .;
        _market_alley_sceneSegmentEnd = .;
    }
    _market_alley_sceneSegmentBssSize = ABSOLUTE( _market_alley_sceneSegmentBssEnd - _market_alley_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _market_alley_room_0SegmentRomStart = _RomSize;
    ..market_alley_room_0 0x03000000 : AT(_RomSize)
    {
        _market_alley_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _market_alley_room_0SegmentTextStart = .;
            build/scenes/misc/market_alley/market_alley_room_0.o (.text)
        _market_alley_room_0SegmentTextEnd = .;
    _market_alley_room_0SegmentTextSize = ABSOLUTE( _market_alley_room_0SegmentTextEnd - _market_alley_room_0SegmentTextStart );
        _market_alley_room_0SegmentDataStart = .;
            build/scenes/misc/market_alley/market_alley_room_0.o (.data)
        _market_alley_room_0SegmentDataEnd = .;
    _market_alley_room_0SegmentDataSize = ABSOLUTE( _market_alley_room_0SegmentDataEnd - _market_alley_room_0SegmentDataStart );
        _market_alley_room_0SegmentRoDataStart = .;
            build/scenes/misc/market_alley/market_alley_room_0.o (.rodata)
        _market_alley_room_0SegmentRoDataEnd = .;
    _market_alley_room_0SegmentRoDataSize = ABSOLUTE( _market_alley_room_0SegmentRoDataEnd - _market_alley_room_0SegmentRoDataStart );
        _market_alley_room_0SegmentSDataStart = .;
            build/scenes/misc/market_alley/market_alley_room_0.o (.sdata)
        . = ALIGN(0x10);
        _market_alley_room_0SegmentSDataEnd = .;
        _market_alley_room_0SegmentOvlStart = .;
            build/scenes/misc/market_alley/market_alley_room_0.o (.ovl)
        . = ALIGN(0x10);
        _market_alley_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _market_alley_room_0SegmentOvlEnd - _market_alley_room_0SegmentTextStart );
    _market_alley_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..market_alley_room_0.bss ADDR(..market_alley_room_0) + SIZEOF(..market_alley_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _market_alley_room_0SegmentBssStart = .;
            build/scenes/misc/market_alley/market_alley_room_0.o (.sbss)
            build/scenes/misc/market_alley/market_alley_room_0.o (.scommon)
            build/scenes/misc/market_alley/market_alley_room_0.o (.bss)
            build/scenes/misc/market_alley/market_alley_room_0.o (COMMON)
        . = ALIGN(0x10);
        _market_alley_room_0SegmentBssEnd = .;
        _market_alley_room_0SegmentEnd = .;
    }
    _market_alley_room_0SegmentBssSize = ABSOLUTE( _market_alley_room_0SegmentBssEnd - _market_alley_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot20_sceneSegmentRomStart = _RomSize;
    ..spot20_scene 0x02000000 : AT(_RomSize)
    {
        _spot20_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _spot20_sceneSegmentTextStart = .;
            build/scenes/overworld/spot20/spot20_scene.o (.text)
        _spot20_sceneSegmentTextEnd = .;
    _spot20_sceneSegmentTextSize = ABSOLUTE( _spot20_sceneSegmentTextEnd - _spot20_sceneSegmentTextStart );
        _spot20_sceneSegmentDataStart = .;
            build/scenes/overworld/spot20/spot20_scene.o (.data)
        _spot20_sceneSegmentDataEnd = .;
    _spot20_sceneSegmentDataSize = ABSOLUTE( _spot20_sceneSegmentDataEnd - _spot20_sceneSegmentDataStart );
        _spot20_sceneSegmentRoDataStart = .;
            build/scenes/overworld/spot20/spot20_scene.o (.rodata)
        _spot20_sceneSegmentRoDataEnd = .;
    _spot20_sceneSegmentRoDataSize = ABSOLUTE( _spot20_sceneSegmentRoDataEnd - _spot20_sceneSegmentRoDataStart );
        _spot20_sceneSegmentSDataStart = .;
            build/scenes/overworld/spot20/spot20_scene.o (.sdata)
        . = ALIGN(0x10);
        _spot20_sceneSegmentSDataEnd = .;
        _spot20_sceneSegmentOvlStart = .;
            build/scenes/overworld/spot20/spot20_scene.o (.ovl)
        . = ALIGN(0x10);
        _spot20_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _spot20_sceneSegmentOvlEnd - _spot20_sceneSegmentTextStart );
    _spot20_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot20_scene.bss ADDR(..spot20_scene) + SIZEOF(..spot20_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot20_sceneSegmentBssStart = .;
            build/scenes/overworld/spot20/spot20_scene.o (.sbss)
            build/scenes/overworld/spot20/spot20_scene.o (.scommon)
            build/scenes/overworld/spot20/spot20_scene.o (.bss)
            build/scenes/overworld/spot20/spot20_scene.o (COMMON)
        . = ALIGN(0x10);
        _spot20_sceneSegmentBssEnd = .;
        _spot20_sceneSegmentEnd = .;
    }
    _spot20_sceneSegmentBssSize = ABSOLUTE( _spot20_sceneSegmentBssEnd - _spot20_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _spot20_room_0SegmentRomStart = _RomSize;
    ..spot20_room_0 0x03000000 : AT(_RomSize)
    {
        _spot20_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _spot20_room_0SegmentTextStart = .;
            build/scenes/overworld/spot20/spot20_room_0.o (.text)
        _spot20_room_0SegmentTextEnd = .;
    _spot20_room_0SegmentTextSize = ABSOLUTE( _spot20_room_0SegmentTextEnd - _spot20_room_0SegmentTextStart );
        _spot20_room_0SegmentDataStart = .;
            build/scenes/overworld/spot20/spot20_room_0.o (.data)
        _spot20_room_0SegmentDataEnd = .;
    _spot20_room_0SegmentDataSize = ABSOLUTE( _spot20_room_0SegmentDataEnd - _spot20_room_0SegmentDataStart );
        _spot20_room_0SegmentRoDataStart = .;
            build/scenes/overworld/spot20/spot20_room_0.o (.rodata)
        _spot20_room_0SegmentRoDataEnd = .;
    _spot20_room_0SegmentRoDataSize = ABSOLUTE( _spot20_room_0SegmentRoDataEnd - _spot20_room_0SegmentRoDataStart );
        _spot20_room_0SegmentSDataStart = .;
            build/scenes/overworld/spot20/spot20_room_0.o (.sdata)
        . = ALIGN(0x10);
        _spot20_room_0SegmentSDataEnd = .;
        _spot20_room_0SegmentOvlStart = .;
            build/scenes/overworld/spot20/spot20_room_0.o (.ovl)
        . = ALIGN(0x10);
        _spot20_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _spot20_room_0SegmentOvlEnd - _spot20_room_0SegmentTextStart );
    _spot20_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..spot20_room_0.bss ADDR(..spot20_room_0) + SIZEOF(..spot20_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _spot20_room_0SegmentBssStart = .;
            build/scenes/overworld/spot20/spot20_room_0.o (.sbss)
            build/scenes/overworld/spot20/spot20_room_0.o (.scommon)
            build/scenes/overworld/spot20/spot20_room_0.o (.bss)
            build/scenes/overworld/spot20/spot20_room_0.o (COMMON)
        . = ALIGN(0x10);
        _spot20_room_0SegmentBssEnd = .;
        _spot20_room_0SegmentEnd = .;
    }
    _spot20_room_0SegmentBssSize = ABSOLUTE( _spot20_room_0SegmentBssEnd - _spot20_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _market_ruins_sceneSegmentRomStart = _RomSize;
    ..market_ruins_scene 0x02000000 : AT(_RomSize)
    {
        _market_ruins_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _market_ruins_sceneSegmentTextStart = .;
            build/scenes/misc/market_ruins/market_ruins_scene.o (.text)
        _market_ruins_sceneSegmentTextEnd = .;
    _market_ruins_sceneSegmentTextSize = ABSOLUTE( _market_ruins_sceneSegmentTextEnd - _market_ruins_sceneSegmentTextStart );
        _market_ruins_sceneSegmentDataStart = .;
            build/scenes/misc/market_ruins/market_ruins_scene.o (.data)
        _market_ruins_sceneSegmentDataEnd = .;
    _market_ruins_sceneSegmentDataSize = ABSOLUTE( _market_ruins_sceneSegmentDataEnd - _market_ruins_sceneSegmentDataStart );
        _market_ruins_sceneSegmentRoDataStart = .;
            build/scenes/misc/market_ruins/market_ruins_scene.o (.rodata)
        _market_ruins_sceneSegmentRoDataEnd = .;
    _market_ruins_sceneSegmentRoDataSize = ABSOLUTE( _market_ruins_sceneSegmentRoDataEnd - _market_ruins_sceneSegmentRoDataStart );
        _market_ruins_sceneSegmentSDataStart = .;
            build/scenes/misc/market_ruins/market_ruins_scene.o (.sdata)
        . = ALIGN(0x10);
        _market_ruins_sceneSegmentSDataEnd = .;
        _market_ruins_sceneSegmentOvlStart = .;
            build/scenes/misc/market_ruins/market_ruins_scene.o (.ovl)
        . = ALIGN(0x10);
        _market_ruins_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _market_ruins_sceneSegmentOvlEnd - _market_ruins_sceneSegmentTextStart );
    _market_ruins_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..market_ruins_scene.bss ADDR(..market_ruins_scene) + SIZEOF(..market_ruins_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _market_ruins_sceneSegmentBssStart = .;
            build/scenes/misc/market_ruins/market_ruins_scene.o (.sbss)
            build/scenes/misc/market_ruins/market_ruins_scene.o (.scommon)
            build/scenes/misc/market_ruins/market_ruins_scene.o (.bss)
            build/scenes/misc/market_ruins/market_ruins_scene.o (COMMON)
        . = ALIGN(0x10);
        _market_ruins_sceneSegmentBssEnd = .;
        _market_ruins_sceneSegmentEnd = .;
    }
    _market_ruins_sceneSegmentBssSize = ABSOLUTE( _market_ruins_sceneSegmentBssEnd - _market_ruins_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _market_ruins_room_0SegmentRomStart = _RomSize;
    ..market_ruins_room_0 0x03000000 : AT(_RomSize)
    {
        _market_ruins_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _market_ruins_room_0SegmentTextStart = .;
            build/scenes/misc/market_ruins/market_ruins_room_0.o (.text)
        _market_ruins_room_0SegmentTextEnd = .;
    _market_ruins_room_0SegmentTextSize = ABSOLUTE( _market_ruins_room_0SegmentTextEnd - _market_ruins_room_0SegmentTextStart );
        _market_ruins_room_0SegmentDataStart = .;
            build/scenes/misc/market_ruins/market_ruins_room_0.o (.data)
        _market_ruins_room_0SegmentDataEnd = .;
    _market_ruins_room_0SegmentDataSize = ABSOLUTE( _market_ruins_room_0SegmentDataEnd - _market_ruins_room_0SegmentDataStart );
        _market_ruins_room_0SegmentRoDataStart = .;
            build/scenes/misc/market_ruins/market_ruins_room_0.o (.rodata)
        _market_ruins_room_0SegmentRoDataEnd = .;
    _market_ruins_room_0SegmentRoDataSize = ABSOLUTE( _market_ruins_room_0SegmentRoDataEnd - _market_ruins_room_0SegmentRoDataStart );
        _market_ruins_room_0SegmentSDataStart = .;
            build/scenes/misc/market_ruins/market_ruins_room_0.o (.sdata)
        . = ALIGN(0x10);
        _market_ruins_room_0SegmentSDataEnd = .;
        _market_ruins_room_0SegmentOvlStart = .;
            build/scenes/misc/market_ruins/market_ruins_room_0.o (.ovl)
        . = ALIGN(0x10);
        _market_ruins_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _market_ruins_room_0SegmentOvlEnd - _market_ruins_room_0SegmentTextStart );
    _market_ruins_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..market_ruins_room_0.bss ADDR(..market_ruins_room_0) + SIZEOF(..market_ruins_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _market_ruins_room_0SegmentBssStart = .;
            build/scenes/misc/market_ruins/market_ruins_room_0.o (.sbss)
            build/scenes/misc/market_ruins/market_ruins_room_0.o (.scommon)
            build/scenes/misc/market_ruins/market_ruins_room_0.o (.bss)
            build/scenes/misc/market_ruins/market_ruins_room_0.o (COMMON)
        . = ALIGN(0x10);
        _market_ruins_room_0SegmentBssEnd = .;
        _market_ruins_room_0SegmentEnd = .;
    }
    _market_ruins_room_0SegmentBssSize = ABSOLUTE( _market_ruins_room_0SegmentBssEnd - _market_ruins_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _entra_n_sceneSegmentRomStart = _RomSize;
    ..entra_n_scene 0x02000000 : AT(_RomSize)
    {
        _entra_n_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _entra_n_sceneSegmentTextStart = .;
            build/scenes/misc/entra_n/entra_n_scene.o (.text)
        _entra_n_sceneSegmentTextEnd = .;
    _entra_n_sceneSegmentTextSize = ABSOLUTE( _entra_n_sceneSegmentTextEnd - _entra_n_sceneSegmentTextStart );
        _entra_n_sceneSegmentDataStart = .;
            build/scenes/misc/entra_n/entra_n_scene.o (.data)
        _entra_n_sceneSegmentDataEnd = .;
    _entra_n_sceneSegmentDataSize = ABSOLUTE( _entra_n_sceneSegmentDataEnd - _entra_n_sceneSegmentDataStart );
        _entra_n_sceneSegmentRoDataStart = .;
            build/scenes/misc/entra_n/entra_n_scene.o (.rodata)
        _entra_n_sceneSegmentRoDataEnd = .;
    _entra_n_sceneSegmentRoDataSize = ABSOLUTE( _entra_n_sceneSegmentRoDataEnd - _entra_n_sceneSegmentRoDataStart );
        _entra_n_sceneSegmentSDataStart = .;
            build/scenes/misc/entra_n/entra_n_scene.o (.sdata)
        . = ALIGN(0x10);
        _entra_n_sceneSegmentSDataEnd = .;
        _entra_n_sceneSegmentOvlStart = .;
            build/scenes/misc/entra_n/entra_n_scene.o (.ovl)
        . = ALIGN(0x10);
        _entra_n_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _entra_n_sceneSegmentOvlEnd - _entra_n_sceneSegmentTextStart );
    _entra_n_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..entra_n_scene.bss ADDR(..entra_n_scene) + SIZEOF(..entra_n_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _entra_n_sceneSegmentBssStart = .;
            build/scenes/misc/entra_n/entra_n_scene.o (.sbss)
            build/scenes/misc/entra_n/entra_n_scene.o (.scommon)
            build/scenes/misc/entra_n/entra_n_scene.o (.bss)
            build/scenes/misc/entra_n/entra_n_scene.o (COMMON)
        . = ALIGN(0x10);
        _entra_n_sceneSegmentBssEnd = .;
        _entra_n_sceneSegmentEnd = .;
    }
    _entra_n_sceneSegmentBssSize = ABSOLUTE( _entra_n_sceneSegmentBssEnd - _entra_n_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _entra_n_room_0SegmentRomStart = _RomSize;
    ..entra_n_room_0 0x03000000 : AT(_RomSize)
    {
        _entra_n_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _entra_n_room_0SegmentTextStart = .;
            build/scenes/misc/entra_n/entra_n_room_0.o (.text)
        _entra_n_room_0SegmentTextEnd = .;
    _entra_n_room_0SegmentTextSize = ABSOLUTE( _entra_n_room_0SegmentTextEnd - _entra_n_room_0SegmentTextStart );
        _entra_n_room_0SegmentDataStart = .;
            build/scenes/misc/entra_n/entra_n_room_0.o (.data)
        _entra_n_room_0SegmentDataEnd = .;
    _entra_n_room_0SegmentDataSize = ABSOLUTE( _entra_n_room_0SegmentDataEnd - _entra_n_room_0SegmentDataStart );
        _entra_n_room_0SegmentRoDataStart = .;
            build/scenes/misc/entra_n/entra_n_room_0.o (.rodata)
        _entra_n_room_0SegmentRoDataEnd = .;
    _entra_n_room_0SegmentRoDataSize = ABSOLUTE( _entra_n_room_0SegmentRoDataEnd - _entra_n_room_0SegmentRoDataStart );
        _entra_n_room_0SegmentSDataStart = .;
            build/scenes/misc/entra_n/entra_n_room_0.o (.sdata)
        . = ALIGN(0x10);
        _entra_n_room_0SegmentSDataEnd = .;
        _entra_n_room_0SegmentOvlStart = .;
            build/scenes/misc/entra_n/entra_n_room_0.o (.ovl)
        . = ALIGN(0x10);
        _entra_n_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _entra_n_room_0SegmentOvlEnd - _entra_n_room_0SegmentTextStart );
    _entra_n_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..entra_n_room_0.bss ADDR(..entra_n_room_0) + SIZEOF(..entra_n_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _entra_n_room_0SegmentBssStart = .;
            build/scenes/misc/entra_n/entra_n_room_0.o (.sbss)
            build/scenes/misc/entra_n/entra_n_room_0.o (.scommon)
            build/scenes/misc/entra_n/entra_n_room_0.o (.bss)
            build/scenes/misc/entra_n/entra_n_room_0.o (COMMON)
        . = ALIGN(0x10);
        _entra_n_room_0SegmentBssEnd = .;
        _entra_n_room_0SegmentEnd = .;
    }
    _entra_n_room_0SegmentBssSize = ABSOLUTE( _entra_n_room_0SegmentBssEnd - _entra_n_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _enrui_sceneSegmentRomStart = _RomSize;
    ..enrui_scene 0x02000000 : AT(_RomSize)
    {
        _enrui_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _enrui_sceneSegmentTextStart = .;
            build/scenes/misc/enrui/enrui_scene.o (.text)
        _enrui_sceneSegmentTextEnd = .;
    _enrui_sceneSegmentTextSize = ABSOLUTE( _enrui_sceneSegmentTextEnd - _enrui_sceneSegmentTextStart );
        _enrui_sceneSegmentDataStart = .;
            build/scenes/misc/enrui/enrui_scene.o (.data)
        _enrui_sceneSegmentDataEnd = .;
    _enrui_sceneSegmentDataSize = ABSOLUTE( _enrui_sceneSegmentDataEnd - _enrui_sceneSegmentDataStart );
        _enrui_sceneSegmentRoDataStart = .;
            build/scenes/misc/enrui/enrui_scene.o (.rodata)
        _enrui_sceneSegmentRoDataEnd = .;
    _enrui_sceneSegmentRoDataSize = ABSOLUTE( _enrui_sceneSegmentRoDataEnd - _enrui_sceneSegmentRoDataStart );
        _enrui_sceneSegmentSDataStart = .;
            build/scenes/misc/enrui/enrui_scene.o (.sdata)
        . = ALIGN(0x10);
        _enrui_sceneSegmentSDataEnd = .;
        _enrui_sceneSegmentOvlStart = .;
            build/scenes/misc/enrui/enrui_scene.o (.ovl)
        . = ALIGN(0x10);
        _enrui_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _enrui_sceneSegmentOvlEnd - _enrui_sceneSegmentTextStart );
    _enrui_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..enrui_scene.bss ADDR(..enrui_scene) + SIZEOF(..enrui_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _enrui_sceneSegmentBssStart = .;
            build/scenes/misc/enrui/enrui_scene.o (.sbss)
            build/scenes/misc/enrui/enrui_scene.o (.scommon)
            build/scenes/misc/enrui/enrui_scene.o (.bss)
            build/scenes/misc/enrui/enrui_scene.o (COMMON)
        . = ALIGN(0x10);
        _enrui_sceneSegmentBssEnd = .;
        _enrui_sceneSegmentEnd = .;
    }
    _enrui_sceneSegmentBssSize = ABSOLUTE( _enrui_sceneSegmentBssEnd - _enrui_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _enrui_room_0SegmentRomStart = _RomSize;
    ..enrui_room_0 0x03000000 : AT(_RomSize)
    {
        _enrui_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _enrui_room_0SegmentTextStart = .;
            build/scenes/misc/enrui/enrui_room_0.o (.text)
        _enrui_room_0SegmentTextEnd = .;
    _enrui_room_0SegmentTextSize = ABSOLUTE( _enrui_room_0SegmentTextEnd - _enrui_room_0SegmentTextStart );
        _enrui_room_0SegmentDataStart = .;
            build/scenes/misc/enrui/enrui_room_0.o (.data)
        _enrui_room_0SegmentDataEnd = .;
    _enrui_room_0SegmentDataSize = ABSOLUTE( _enrui_room_0SegmentDataEnd - _enrui_room_0SegmentDataStart );
        _enrui_room_0SegmentRoDataStart = .;
            build/scenes/misc/enrui/enrui_room_0.o (.rodata)
        _enrui_room_0SegmentRoDataEnd = .;
    _enrui_room_0SegmentRoDataSize = ABSOLUTE( _enrui_room_0SegmentRoDataEnd - _enrui_room_0SegmentRoDataStart );
        _enrui_room_0SegmentSDataStart = .;
            build/scenes/misc/enrui/enrui_room_0.o (.sdata)
        . = ALIGN(0x10);
        _enrui_room_0SegmentSDataEnd = .;
        _enrui_room_0SegmentOvlStart = .;
            build/scenes/misc/enrui/enrui_room_0.o (.ovl)
        . = ALIGN(0x10);
        _enrui_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _enrui_room_0SegmentOvlEnd - _enrui_room_0SegmentTextStart );
    _enrui_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..enrui_room_0.bss ADDR(..enrui_room_0) + SIZEOF(..enrui_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _enrui_room_0SegmentBssStart = .;
            build/scenes/misc/enrui/enrui_room_0.o (.sbss)
            build/scenes/misc/enrui/enrui_room_0.o (.scommon)
            build/scenes/misc/enrui/enrui_room_0.o (.bss)
            build/scenes/misc/enrui/enrui_room_0.o (COMMON)
        . = ALIGN(0x10);
        _enrui_room_0SegmentBssEnd = .;
        _enrui_room_0SegmentEnd = .;
    }
    _enrui_room_0SegmentBssSize = ABSOLUTE( _enrui_room_0SegmentBssEnd - _enrui_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _market_alley_n_sceneSegmentRomStart = _RomSize;
    ..market_alley_n_scene 0x02000000 : AT(_RomSize)
    {
        _market_alley_n_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _market_alley_n_sceneSegmentTextStart = .;
            build/scenes/misc/market_alley_n/market_alley_n_scene.o (.text)
        _market_alley_n_sceneSegmentTextEnd = .;
    _market_alley_n_sceneSegmentTextSize = ABSOLUTE( _market_alley_n_sceneSegmentTextEnd - _market_alley_n_sceneSegmentTextStart );
        _market_alley_n_sceneSegmentDataStart = .;
            build/scenes/misc/market_alley_n/market_alley_n_scene.o (.data)
        _market_alley_n_sceneSegmentDataEnd = .;
    _market_alley_n_sceneSegmentDataSize = ABSOLUTE( _market_alley_n_sceneSegmentDataEnd - _market_alley_n_sceneSegmentDataStart );
        _market_alley_n_sceneSegmentRoDataStart = .;
            build/scenes/misc/market_alley_n/market_alley_n_scene.o (.rodata)
        _market_alley_n_sceneSegmentRoDataEnd = .;
    _market_alley_n_sceneSegmentRoDataSize = ABSOLUTE( _market_alley_n_sceneSegmentRoDataEnd - _market_alley_n_sceneSegmentRoDataStart );
        _market_alley_n_sceneSegmentSDataStart = .;
            build/scenes/misc/market_alley_n/market_alley_n_scene.o (.sdata)
        . = ALIGN(0x10);
        _market_alley_n_sceneSegmentSDataEnd = .;
        _market_alley_n_sceneSegmentOvlStart = .;
            build/scenes/misc/market_alley_n/market_alley_n_scene.o (.ovl)
        . = ALIGN(0x10);
        _market_alley_n_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _market_alley_n_sceneSegmentOvlEnd - _market_alley_n_sceneSegmentTextStart );
    _market_alley_n_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..market_alley_n_scene.bss ADDR(..market_alley_n_scene) + SIZEOF(..market_alley_n_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _market_alley_n_sceneSegmentBssStart = .;
            build/scenes/misc/market_alley_n/market_alley_n_scene.o (.sbss)
            build/scenes/misc/market_alley_n/market_alley_n_scene.o (.scommon)
            build/scenes/misc/market_alley_n/market_alley_n_scene.o (.bss)
            build/scenes/misc/market_alley_n/market_alley_n_scene.o (COMMON)
        . = ALIGN(0x10);
        _market_alley_n_sceneSegmentBssEnd = .;
        _market_alley_n_sceneSegmentEnd = .;
    }
    _market_alley_n_sceneSegmentBssSize = ABSOLUTE( _market_alley_n_sceneSegmentBssEnd - _market_alley_n_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _market_alley_n_room_0SegmentRomStart = _RomSize;
    ..market_alley_n_room_0 0x03000000 : AT(_RomSize)
    {
        _market_alley_n_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _market_alley_n_room_0SegmentTextStart = .;
            build/scenes/misc/market_alley_n/market_alley_n_room_0.o (.text)
        _market_alley_n_room_0SegmentTextEnd = .;
    _market_alley_n_room_0SegmentTextSize = ABSOLUTE( _market_alley_n_room_0SegmentTextEnd - _market_alley_n_room_0SegmentTextStart );
        _market_alley_n_room_0SegmentDataStart = .;
            build/scenes/misc/market_alley_n/market_alley_n_room_0.o (.data)
        _market_alley_n_room_0SegmentDataEnd = .;
    _market_alley_n_room_0SegmentDataSize = ABSOLUTE( _market_alley_n_room_0SegmentDataEnd - _market_alley_n_room_0SegmentDataStart );
        _market_alley_n_room_0SegmentRoDataStart = .;
            build/scenes/misc/market_alley_n/market_alley_n_room_0.o (.rodata)
        _market_alley_n_room_0SegmentRoDataEnd = .;
    _market_alley_n_room_0SegmentRoDataSize = ABSOLUTE( _market_alley_n_room_0SegmentRoDataEnd - _market_alley_n_room_0SegmentRoDataStart );
        _market_alley_n_room_0SegmentSDataStart = .;
            build/scenes/misc/market_alley_n/market_alley_n_room_0.o (.sdata)
        . = ALIGN(0x10);
        _market_alley_n_room_0SegmentSDataEnd = .;
        _market_alley_n_room_0SegmentOvlStart = .;
            build/scenes/misc/market_alley_n/market_alley_n_room_0.o (.ovl)
        . = ALIGN(0x10);
        _market_alley_n_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _market_alley_n_room_0SegmentOvlEnd - _market_alley_n_room_0SegmentTextStart );
    _market_alley_n_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..market_alley_n_room_0.bss ADDR(..market_alley_n_room_0) + SIZEOF(..market_alley_n_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _market_alley_n_room_0SegmentBssStart = .;
            build/scenes/misc/market_alley_n/market_alley_n_room_0.o (.sbss)
            build/scenes/misc/market_alley_n/market_alley_n_room_0.o (.scommon)
            build/scenes/misc/market_alley_n/market_alley_n_room_0.o (.bss)
            build/scenes/misc/market_alley_n/market_alley_n_room_0.o (COMMON)
        . = ALIGN(0x10);
        _market_alley_n_room_0SegmentBssEnd = .;
        _market_alley_n_room_0SegmentEnd = .;
    }
    _market_alley_n_room_0SegmentBssSize = ABSOLUTE( _market_alley_n_room_0SegmentBssEnd - _market_alley_n_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hiral_demo_sceneSegmentRomStart = _RomSize;
    ..hiral_demo_scene 0x02000000 : AT(_RomSize)
    {
        _hiral_demo_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _hiral_demo_sceneSegmentTextStart = .;
            build/scenes/misc/hiral_demo/hiral_demo_scene.o (.text)
        _hiral_demo_sceneSegmentTextEnd = .;
    _hiral_demo_sceneSegmentTextSize = ABSOLUTE( _hiral_demo_sceneSegmentTextEnd - _hiral_demo_sceneSegmentTextStart );
        _hiral_demo_sceneSegmentDataStart = .;
            build/scenes/misc/hiral_demo/hiral_demo_scene.o (.data)
        _hiral_demo_sceneSegmentDataEnd = .;
    _hiral_demo_sceneSegmentDataSize = ABSOLUTE( _hiral_demo_sceneSegmentDataEnd - _hiral_demo_sceneSegmentDataStart );
        _hiral_demo_sceneSegmentRoDataStart = .;
            build/scenes/misc/hiral_demo/hiral_demo_scene.o (.rodata)
        _hiral_demo_sceneSegmentRoDataEnd = .;
    _hiral_demo_sceneSegmentRoDataSize = ABSOLUTE( _hiral_demo_sceneSegmentRoDataEnd - _hiral_demo_sceneSegmentRoDataStart );
        _hiral_demo_sceneSegmentSDataStart = .;
            build/scenes/misc/hiral_demo/hiral_demo_scene.o (.sdata)
        . = ALIGN(0x10);
        _hiral_demo_sceneSegmentSDataEnd = .;
        _hiral_demo_sceneSegmentOvlStart = .;
            build/scenes/misc/hiral_demo/hiral_demo_scene.o (.ovl)
        . = ALIGN(0x10);
        _hiral_demo_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _hiral_demo_sceneSegmentOvlEnd - _hiral_demo_sceneSegmentTextStart );
    _hiral_demo_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hiral_demo_scene.bss ADDR(..hiral_demo_scene) + SIZEOF(..hiral_demo_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hiral_demo_sceneSegmentBssStart = .;
            build/scenes/misc/hiral_demo/hiral_demo_scene.o (.sbss)
            build/scenes/misc/hiral_demo/hiral_demo_scene.o (.scommon)
            build/scenes/misc/hiral_demo/hiral_demo_scene.o (.bss)
            build/scenes/misc/hiral_demo/hiral_demo_scene.o (COMMON)
        . = ALIGN(0x10);
        _hiral_demo_sceneSegmentBssEnd = .;
        _hiral_demo_sceneSegmentEnd = .;
    }
    _hiral_demo_sceneSegmentBssSize = ABSOLUTE( _hiral_demo_sceneSegmentBssEnd - _hiral_demo_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hiral_demo_room_0SegmentRomStart = _RomSize;
    ..hiral_demo_room_0 0x03000000 : AT(_RomSize)
    {
        _hiral_demo_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _hiral_demo_room_0SegmentTextStart = .;
            build/scenes/misc/hiral_demo/hiral_demo_room_0.o (.text)
        _hiral_demo_room_0SegmentTextEnd = .;
    _hiral_demo_room_0SegmentTextSize = ABSOLUTE( _hiral_demo_room_0SegmentTextEnd - _hiral_demo_room_0SegmentTextStart );
        _hiral_demo_room_0SegmentDataStart = .;
            build/scenes/misc/hiral_demo/hiral_demo_room_0.o (.data)
        _hiral_demo_room_0SegmentDataEnd = .;
    _hiral_demo_room_0SegmentDataSize = ABSOLUTE( _hiral_demo_room_0SegmentDataEnd - _hiral_demo_room_0SegmentDataStart );
        _hiral_demo_room_0SegmentRoDataStart = .;
            build/scenes/misc/hiral_demo/hiral_demo_room_0.o (.rodata)
        _hiral_demo_room_0SegmentRoDataEnd = .;
    _hiral_demo_room_0SegmentRoDataSize = ABSOLUTE( _hiral_demo_room_0SegmentRoDataEnd - _hiral_demo_room_0SegmentRoDataStart );
        _hiral_demo_room_0SegmentSDataStart = .;
            build/scenes/misc/hiral_demo/hiral_demo_room_0.o (.sdata)
        . = ALIGN(0x10);
        _hiral_demo_room_0SegmentSDataEnd = .;
        _hiral_demo_room_0SegmentOvlStart = .;
            build/scenes/misc/hiral_demo/hiral_demo_room_0.o (.ovl)
        . = ALIGN(0x10);
        _hiral_demo_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _hiral_demo_room_0SegmentOvlEnd - _hiral_demo_room_0SegmentTextStart );
    _hiral_demo_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hiral_demo_room_0.bss ADDR(..hiral_demo_room_0) + SIZEOF(..hiral_demo_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hiral_demo_room_0SegmentBssStart = .;
            build/scenes/misc/hiral_demo/hiral_demo_room_0.o (.sbss)
            build/scenes/misc/hiral_demo/hiral_demo_room_0.o (.scommon)
            build/scenes/misc/hiral_demo/hiral_demo_room_0.o (.bss)
            build/scenes/misc/hiral_demo/hiral_demo_room_0.o (COMMON)
        . = ALIGN(0x10);
        _hiral_demo_room_0SegmentBssEnd = .;
        _hiral_demo_room_0SegmentEnd = .;
    }
    _hiral_demo_room_0SegmentBssSize = ABSOLUTE( _hiral_demo_room_0SegmentBssEnd - _hiral_demo_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kokiri_home3_sceneSegmentRomStart = _RomSize;
    ..kokiri_home3_scene 0x02000000 : AT(_RomSize)
    {
        _kokiri_home3_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _kokiri_home3_sceneSegmentTextStart = .;
            build/scenes/indoors/kokiri_home3/kokiri_home3_scene.o (.text)
        _kokiri_home3_sceneSegmentTextEnd = .;
    _kokiri_home3_sceneSegmentTextSize = ABSOLUTE( _kokiri_home3_sceneSegmentTextEnd - _kokiri_home3_sceneSegmentTextStart );
        _kokiri_home3_sceneSegmentDataStart = .;
            build/scenes/indoors/kokiri_home3/kokiri_home3_scene.o (.data)
        _kokiri_home3_sceneSegmentDataEnd = .;
    _kokiri_home3_sceneSegmentDataSize = ABSOLUTE( _kokiri_home3_sceneSegmentDataEnd - _kokiri_home3_sceneSegmentDataStart );
        _kokiri_home3_sceneSegmentRoDataStart = .;
            build/scenes/indoors/kokiri_home3/kokiri_home3_scene.o (.rodata)
        _kokiri_home3_sceneSegmentRoDataEnd = .;
    _kokiri_home3_sceneSegmentRoDataSize = ABSOLUTE( _kokiri_home3_sceneSegmentRoDataEnd - _kokiri_home3_sceneSegmentRoDataStart );
        _kokiri_home3_sceneSegmentSDataStart = .;
            build/scenes/indoors/kokiri_home3/kokiri_home3_scene.o (.sdata)
        . = ALIGN(0x10);
        _kokiri_home3_sceneSegmentSDataEnd = .;
        _kokiri_home3_sceneSegmentOvlStart = .;
            build/scenes/indoors/kokiri_home3/kokiri_home3_scene.o (.ovl)
        . = ALIGN(0x10);
        _kokiri_home3_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _kokiri_home3_sceneSegmentOvlEnd - _kokiri_home3_sceneSegmentTextStart );
    _kokiri_home3_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kokiri_home3_scene.bss ADDR(..kokiri_home3_scene) + SIZEOF(..kokiri_home3_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kokiri_home3_sceneSegmentBssStart = .;
            build/scenes/indoors/kokiri_home3/kokiri_home3_scene.o (.sbss)
            build/scenes/indoors/kokiri_home3/kokiri_home3_scene.o (.scommon)
            build/scenes/indoors/kokiri_home3/kokiri_home3_scene.o (.bss)
            build/scenes/indoors/kokiri_home3/kokiri_home3_scene.o (COMMON)
        . = ALIGN(0x10);
        _kokiri_home3_sceneSegmentBssEnd = .;
        _kokiri_home3_sceneSegmentEnd = .;
    }
    _kokiri_home3_sceneSegmentBssSize = ABSOLUTE( _kokiri_home3_sceneSegmentBssEnd - _kokiri_home3_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kokiri_home3_room_0SegmentRomStart = _RomSize;
    ..kokiri_home3_room_0 0x03000000 : AT(_RomSize)
    {
        _kokiri_home3_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _kokiri_home3_room_0SegmentTextStart = .;
            build/scenes/indoors/kokiri_home3/kokiri_home3_room_0.o (.text)
        _kokiri_home3_room_0SegmentTextEnd = .;
    _kokiri_home3_room_0SegmentTextSize = ABSOLUTE( _kokiri_home3_room_0SegmentTextEnd - _kokiri_home3_room_0SegmentTextStart );
        _kokiri_home3_room_0SegmentDataStart = .;
            build/scenes/indoors/kokiri_home3/kokiri_home3_room_0.o (.data)
        _kokiri_home3_room_0SegmentDataEnd = .;
    _kokiri_home3_room_0SegmentDataSize = ABSOLUTE( _kokiri_home3_room_0SegmentDataEnd - _kokiri_home3_room_0SegmentDataStart );
        _kokiri_home3_room_0SegmentRoDataStart = .;
            build/scenes/indoors/kokiri_home3/kokiri_home3_room_0.o (.rodata)
        _kokiri_home3_room_0SegmentRoDataEnd = .;
    _kokiri_home3_room_0SegmentRoDataSize = ABSOLUTE( _kokiri_home3_room_0SegmentRoDataEnd - _kokiri_home3_room_0SegmentRoDataStart );
        _kokiri_home3_room_0SegmentSDataStart = .;
            build/scenes/indoors/kokiri_home3/kokiri_home3_room_0.o (.sdata)
        . = ALIGN(0x10);
        _kokiri_home3_room_0SegmentSDataEnd = .;
        _kokiri_home3_room_0SegmentOvlStart = .;
            build/scenes/indoors/kokiri_home3/kokiri_home3_room_0.o (.ovl)
        . = ALIGN(0x10);
        _kokiri_home3_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _kokiri_home3_room_0SegmentOvlEnd - _kokiri_home3_room_0SegmentTextStart );
    _kokiri_home3_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kokiri_home3_room_0.bss ADDR(..kokiri_home3_room_0) + SIZEOF(..kokiri_home3_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kokiri_home3_room_0SegmentBssStart = .;
            build/scenes/indoors/kokiri_home3/kokiri_home3_room_0.o (.sbss)
            build/scenes/indoors/kokiri_home3/kokiri_home3_room_0.o (.scommon)
            build/scenes/indoors/kokiri_home3/kokiri_home3_room_0.o (.bss)
            build/scenes/indoors/kokiri_home3/kokiri_home3_room_0.o (COMMON)
        . = ALIGN(0x10);
        _kokiri_home3_room_0SegmentBssEnd = .;
        _kokiri_home3_room_0SegmentEnd = .;
    }
    _kokiri_home3_room_0SegmentBssSize = ABSOLUTE( _kokiri_home3_room_0SegmentBssEnd - _kokiri_home3_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _malon_stable_sceneSegmentRomStart = _RomSize;
    ..malon_stable_scene 0x02000000 : AT(_RomSize)
    {
        _malon_stable_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _malon_stable_sceneSegmentTextStart = .;
            build/scenes/indoors/malon_stable/malon_stable_scene.o (.text)
        _malon_stable_sceneSegmentTextEnd = .;
    _malon_stable_sceneSegmentTextSize = ABSOLUTE( _malon_stable_sceneSegmentTextEnd - _malon_stable_sceneSegmentTextStart );
        _malon_stable_sceneSegmentDataStart = .;
            build/scenes/indoors/malon_stable/malon_stable_scene.o (.data)
        _malon_stable_sceneSegmentDataEnd = .;
    _malon_stable_sceneSegmentDataSize = ABSOLUTE( _malon_stable_sceneSegmentDataEnd - _malon_stable_sceneSegmentDataStart );
        _malon_stable_sceneSegmentRoDataStart = .;
            build/scenes/indoors/malon_stable/malon_stable_scene.o (.rodata)
        _malon_stable_sceneSegmentRoDataEnd = .;
    _malon_stable_sceneSegmentRoDataSize = ABSOLUTE( _malon_stable_sceneSegmentRoDataEnd - _malon_stable_sceneSegmentRoDataStart );
        _malon_stable_sceneSegmentSDataStart = .;
            build/scenes/indoors/malon_stable/malon_stable_scene.o (.sdata)
        . = ALIGN(0x10);
        _malon_stable_sceneSegmentSDataEnd = .;
        _malon_stable_sceneSegmentOvlStart = .;
            build/scenes/indoors/malon_stable/malon_stable_scene.o (.ovl)
        . = ALIGN(0x10);
        _malon_stable_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _malon_stable_sceneSegmentOvlEnd - _malon_stable_sceneSegmentTextStart );
    _malon_stable_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..malon_stable_scene.bss ADDR(..malon_stable_scene) + SIZEOF(..malon_stable_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _malon_stable_sceneSegmentBssStart = .;
            build/scenes/indoors/malon_stable/malon_stable_scene.o (.sbss)
            build/scenes/indoors/malon_stable/malon_stable_scene.o (.scommon)
            build/scenes/indoors/malon_stable/malon_stable_scene.o (.bss)
            build/scenes/indoors/malon_stable/malon_stable_scene.o (COMMON)
        . = ALIGN(0x10);
        _malon_stable_sceneSegmentBssEnd = .;
        _malon_stable_sceneSegmentEnd = .;
    }
    _malon_stable_sceneSegmentBssSize = ABSOLUTE( _malon_stable_sceneSegmentBssEnd - _malon_stable_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _malon_stable_room_0SegmentRomStart = _RomSize;
    ..malon_stable_room_0 0x03000000 : AT(_RomSize)
    {
        _malon_stable_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _malon_stable_room_0SegmentTextStart = .;
            build/scenes/indoors/malon_stable/malon_stable_room_0.o (.text)
        _malon_stable_room_0SegmentTextEnd = .;
    _malon_stable_room_0SegmentTextSize = ABSOLUTE( _malon_stable_room_0SegmentTextEnd - _malon_stable_room_0SegmentTextStart );
        _malon_stable_room_0SegmentDataStart = .;
            build/scenes/indoors/malon_stable/malon_stable_room_0.o (.data)
        _malon_stable_room_0SegmentDataEnd = .;
    _malon_stable_room_0SegmentDataSize = ABSOLUTE( _malon_stable_room_0SegmentDataEnd - _malon_stable_room_0SegmentDataStart );
        _malon_stable_room_0SegmentRoDataStart = .;
            build/scenes/indoors/malon_stable/malon_stable_room_0.o (.rodata)
        _malon_stable_room_0SegmentRoDataEnd = .;
    _malon_stable_room_0SegmentRoDataSize = ABSOLUTE( _malon_stable_room_0SegmentRoDataEnd - _malon_stable_room_0SegmentRoDataStart );
        _malon_stable_room_0SegmentSDataStart = .;
            build/scenes/indoors/malon_stable/malon_stable_room_0.o (.sdata)
        . = ALIGN(0x10);
        _malon_stable_room_0SegmentSDataEnd = .;
        _malon_stable_room_0SegmentOvlStart = .;
            build/scenes/indoors/malon_stable/malon_stable_room_0.o (.ovl)
        . = ALIGN(0x10);
        _malon_stable_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _malon_stable_room_0SegmentOvlEnd - _malon_stable_room_0SegmentTextStart );
    _malon_stable_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..malon_stable_room_0.bss ADDR(..malon_stable_room_0) + SIZEOF(..malon_stable_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _malon_stable_room_0SegmentBssStart = .;
            build/scenes/indoors/malon_stable/malon_stable_room_0.o (.sbss)
            build/scenes/indoors/malon_stable/malon_stable_room_0.o (.scommon)
            build/scenes/indoors/malon_stable/malon_stable_room_0.o (.bss)
            build/scenes/indoors/malon_stable/malon_stable_room_0.o (COMMON)
        . = ALIGN(0x10);
        _malon_stable_room_0SegmentBssEnd = .;
        _malon_stable_room_0SegmentEnd = .;
    }
    _malon_stable_room_0SegmentBssSize = ABSOLUTE( _malon_stable_room_0SegmentBssEnd - _malon_stable_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakariko_sceneSegmentRomStart = _RomSize;
    ..kakariko_scene 0x02000000 : AT(_RomSize)
    {
        _kakariko_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _kakariko_sceneSegmentTextStart = .;
            build/scenes/indoors/kakariko/kakariko_scene.o (.text)
        _kakariko_sceneSegmentTextEnd = .;
    _kakariko_sceneSegmentTextSize = ABSOLUTE( _kakariko_sceneSegmentTextEnd - _kakariko_sceneSegmentTextStart );
        _kakariko_sceneSegmentDataStart = .;
            build/scenes/indoors/kakariko/kakariko_scene.o (.data)
        _kakariko_sceneSegmentDataEnd = .;
    _kakariko_sceneSegmentDataSize = ABSOLUTE( _kakariko_sceneSegmentDataEnd - _kakariko_sceneSegmentDataStart );
        _kakariko_sceneSegmentRoDataStart = .;
            build/scenes/indoors/kakariko/kakariko_scene.o (.rodata)
        _kakariko_sceneSegmentRoDataEnd = .;
    _kakariko_sceneSegmentRoDataSize = ABSOLUTE( _kakariko_sceneSegmentRoDataEnd - _kakariko_sceneSegmentRoDataStart );
        _kakariko_sceneSegmentSDataStart = .;
            build/scenes/indoors/kakariko/kakariko_scene.o (.sdata)
        . = ALIGN(0x10);
        _kakariko_sceneSegmentSDataEnd = .;
        _kakariko_sceneSegmentOvlStart = .;
            build/scenes/indoors/kakariko/kakariko_scene.o (.ovl)
        . = ALIGN(0x10);
        _kakariko_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _kakariko_sceneSegmentOvlEnd - _kakariko_sceneSegmentTextStart );
    _kakariko_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakariko_scene.bss ADDR(..kakariko_scene) + SIZEOF(..kakariko_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakariko_sceneSegmentBssStart = .;
            build/scenes/indoors/kakariko/kakariko_scene.o (.sbss)
            build/scenes/indoors/kakariko/kakariko_scene.o (.scommon)
            build/scenes/indoors/kakariko/kakariko_scene.o (.bss)
            build/scenes/indoors/kakariko/kakariko_scene.o (COMMON)
        . = ALIGN(0x10);
        _kakariko_sceneSegmentBssEnd = .;
        _kakariko_sceneSegmentEnd = .;
    }
    _kakariko_sceneSegmentBssSize = ABSOLUTE( _kakariko_sceneSegmentBssEnd - _kakariko_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakariko_room_0SegmentRomStart = _RomSize;
    ..kakariko_room_0 0x03000000 : AT(_RomSize)
    {
        _kakariko_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _kakariko_room_0SegmentTextStart = .;
            build/scenes/indoors/kakariko/kakariko_room_0.o (.text)
        _kakariko_room_0SegmentTextEnd = .;
    _kakariko_room_0SegmentTextSize = ABSOLUTE( _kakariko_room_0SegmentTextEnd - _kakariko_room_0SegmentTextStart );
        _kakariko_room_0SegmentDataStart = .;
            build/scenes/indoors/kakariko/kakariko_room_0.o (.data)
        _kakariko_room_0SegmentDataEnd = .;
    _kakariko_room_0SegmentDataSize = ABSOLUTE( _kakariko_room_0SegmentDataEnd - _kakariko_room_0SegmentDataStart );
        _kakariko_room_0SegmentRoDataStart = .;
            build/scenes/indoors/kakariko/kakariko_room_0.o (.rodata)
        _kakariko_room_0SegmentRoDataEnd = .;
    _kakariko_room_0SegmentRoDataSize = ABSOLUTE( _kakariko_room_0SegmentRoDataEnd - _kakariko_room_0SegmentRoDataStart );
        _kakariko_room_0SegmentSDataStart = .;
            build/scenes/indoors/kakariko/kakariko_room_0.o (.sdata)
        . = ALIGN(0x10);
        _kakariko_room_0SegmentSDataEnd = .;
        _kakariko_room_0SegmentOvlStart = .;
            build/scenes/indoors/kakariko/kakariko_room_0.o (.ovl)
        . = ALIGN(0x10);
        _kakariko_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _kakariko_room_0SegmentOvlEnd - _kakariko_room_0SegmentTextStart );
    _kakariko_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakariko_room_0.bss ADDR(..kakariko_room_0) + SIZEOF(..kakariko_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakariko_room_0SegmentBssStart = .;
            build/scenes/indoors/kakariko/kakariko_room_0.o (.sbss)
            build/scenes/indoors/kakariko/kakariko_room_0.o (.scommon)
            build/scenes/indoors/kakariko/kakariko_room_0.o (.bss)
            build/scenes/indoors/kakariko/kakariko_room_0.o (COMMON)
        . = ALIGN(0x10);
        _kakariko_room_0SegmentBssEnd = .;
        _kakariko_room_0SegmentEnd = .;
    }
    _kakariko_room_0SegmentBssSize = ABSOLUTE( _kakariko_room_0SegmentBssEnd - _kakariko_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_boss_sceneSegmentRomStart = _RomSize;
    ..bdan_boss_scene 0x02000000 : AT(_RomSize)
    {
        _bdan_boss_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _bdan_boss_sceneSegmentTextStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_scene.o (.text)
        _bdan_boss_sceneSegmentTextEnd = .;
    _bdan_boss_sceneSegmentTextSize = ABSOLUTE( _bdan_boss_sceneSegmentTextEnd - _bdan_boss_sceneSegmentTextStart );
        _bdan_boss_sceneSegmentDataStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_scene.o (.data)
        _bdan_boss_sceneSegmentDataEnd = .;
    _bdan_boss_sceneSegmentDataSize = ABSOLUTE( _bdan_boss_sceneSegmentDataEnd - _bdan_boss_sceneSegmentDataStart );
        _bdan_boss_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_scene.o (.rodata)
        _bdan_boss_sceneSegmentRoDataEnd = .;
    _bdan_boss_sceneSegmentRoDataSize = ABSOLUTE( _bdan_boss_sceneSegmentRoDataEnd - _bdan_boss_sceneSegmentRoDataStart );
        _bdan_boss_sceneSegmentSDataStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_scene.o (.sdata)
        . = ALIGN(0x10);
        _bdan_boss_sceneSegmentSDataEnd = .;
        _bdan_boss_sceneSegmentOvlStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_scene.o (.ovl)
        . = ALIGN(0x10);
        _bdan_boss_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_boss_sceneSegmentOvlEnd - _bdan_boss_sceneSegmentTextStart );
    _bdan_boss_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_boss_scene.bss ADDR(..bdan_boss_scene) + SIZEOF(..bdan_boss_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_boss_sceneSegmentBssStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_scene.o (.sbss)
            build/scenes/dungeons/bdan_boss/bdan_boss_scene.o (.scommon)
            build/scenes/dungeons/bdan_boss/bdan_boss_scene.o (.bss)
            build/scenes/dungeons/bdan_boss/bdan_boss_scene.o (COMMON)
        . = ALIGN(0x10);
        _bdan_boss_sceneSegmentBssEnd = .;
        _bdan_boss_sceneSegmentEnd = .;
    }
    _bdan_boss_sceneSegmentBssSize = ABSOLUTE( _bdan_boss_sceneSegmentBssEnd - _bdan_boss_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_boss_room_0SegmentRomStart = _RomSize;
    ..bdan_boss_room_0 0x03000000 : AT(_RomSize)
    {
        _bdan_boss_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_boss_room_0SegmentTextStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_room_0.o (.text)
        _bdan_boss_room_0SegmentTextEnd = .;
    _bdan_boss_room_0SegmentTextSize = ABSOLUTE( _bdan_boss_room_0SegmentTextEnd - _bdan_boss_room_0SegmentTextStart );
        _bdan_boss_room_0SegmentDataStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_room_0.o (.data)
        _bdan_boss_room_0SegmentDataEnd = .;
    _bdan_boss_room_0SegmentDataSize = ABSOLUTE( _bdan_boss_room_0SegmentDataEnd - _bdan_boss_room_0SegmentDataStart );
        _bdan_boss_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_room_0.o (.rodata)
        _bdan_boss_room_0SegmentRoDataEnd = .;
    _bdan_boss_room_0SegmentRoDataSize = ABSOLUTE( _bdan_boss_room_0SegmentRoDataEnd - _bdan_boss_room_0SegmentRoDataStart );
        _bdan_boss_room_0SegmentSDataStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_room_0.o (.sdata)
        . = ALIGN(0x10);
        _bdan_boss_room_0SegmentSDataEnd = .;
        _bdan_boss_room_0SegmentOvlStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_room_0.o (.ovl)
        . = ALIGN(0x10);
        _bdan_boss_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_boss_room_0SegmentOvlEnd - _bdan_boss_room_0SegmentTextStart );
    _bdan_boss_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_boss_room_0.bss ADDR(..bdan_boss_room_0) + SIZEOF(..bdan_boss_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_boss_room_0SegmentBssStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_room_0.o (.sbss)
            build/scenes/dungeons/bdan_boss/bdan_boss_room_0.o (.scommon)
            build/scenes/dungeons/bdan_boss/bdan_boss_room_0.o (.bss)
            build/scenes/dungeons/bdan_boss/bdan_boss_room_0.o (COMMON)
        . = ALIGN(0x10);
        _bdan_boss_room_0SegmentBssEnd = .;
        _bdan_boss_room_0SegmentEnd = .;
    }
    _bdan_boss_room_0SegmentBssSize = ABSOLUTE( _bdan_boss_room_0SegmentBssEnd - _bdan_boss_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bdan_boss_room_1SegmentRomStart = _RomSize;
    ..bdan_boss_room_1 0x03000000 : AT(_RomSize)
    {
        _bdan_boss_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _bdan_boss_room_1SegmentTextStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_room_1.o (.text)
        _bdan_boss_room_1SegmentTextEnd = .;
    _bdan_boss_room_1SegmentTextSize = ABSOLUTE( _bdan_boss_room_1SegmentTextEnd - _bdan_boss_room_1SegmentTextStart );
        _bdan_boss_room_1SegmentDataStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_room_1.o (.data)
        _bdan_boss_room_1SegmentDataEnd = .;
    _bdan_boss_room_1SegmentDataSize = ABSOLUTE( _bdan_boss_room_1SegmentDataEnd - _bdan_boss_room_1SegmentDataStart );
        _bdan_boss_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_room_1.o (.rodata)
        _bdan_boss_room_1SegmentRoDataEnd = .;
    _bdan_boss_room_1SegmentRoDataSize = ABSOLUTE( _bdan_boss_room_1SegmentRoDataEnd - _bdan_boss_room_1SegmentRoDataStart );
        _bdan_boss_room_1SegmentSDataStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_room_1.o (.sdata)
        . = ALIGN(0x10);
        _bdan_boss_room_1SegmentSDataEnd = .;
        _bdan_boss_room_1SegmentOvlStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_room_1.o (.ovl)
        . = ALIGN(0x10);
        _bdan_boss_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _bdan_boss_room_1SegmentOvlEnd - _bdan_boss_room_1SegmentTextStart );
    _bdan_boss_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bdan_boss_room_1.bss ADDR(..bdan_boss_room_1) + SIZEOF(..bdan_boss_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bdan_boss_room_1SegmentBssStart = .;
            build/scenes/dungeons/bdan_boss/bdan_boss_room_1.o (.sbss)
            build/scenes/dungeons/bdan_boss/bdan_boss_room_1.o (.scommon)
            build/scenes/dungeons/bdan_boss/bdan_boss_room_1.o (.bss)
            build/scenes/dungeons/bdan_boss/bdan_boss_room_1.o (COMMON)
        . = ALIGN(0x10);
        _bdan_boss_room_1SegmentBssEnd = .;
        _bdan_boss_room_1SegmentEnd = .;
    }
    _bdan_boss_room_1SegmentBssSize = ABSOLUTE( _bdan_boss_room_1SegmentBssEnd - _bdan_boss_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _FIRE_bs_sceneSegmentRomStart = _RomSize;
    ..FIRE_bs_scene 0x02000000 : AT(_RomSize)
    {
        _FIRE_bs_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _FIRE_bs_sceneSegmentTextStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_scene.o (.text)
        _FIRE_bs_sceneSegmentTextEnd = .;
    _FIRE_bs_sceneSegmentTextSize = ABSOLUTE( _FIRE_bs_sceneSegmentTextEnd - _FIRE_bs_sceneSegmentTextStart );
        _FIRE_bs_sceneSegmentDataStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_scene.o (.data)
        _FIRE_bs_sceneSegmentDataEnd = .;
    _FIRE_bs_sceneSegmentDataSize = ABSOLUTE( _FIRE_bs_sceneSegmentDataEnd - _FIRE_bs_sceneSegmentDataStart );
        _FIRE_bs_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_scene.o (.rodata)
        _FIRE_bs_sceneSegmentRoDataEnd = .;
    _FIRE_bs_sceneSegmentRoDataSize = ABSOLUTE( _FIRE_bs_sceneSegmentRoDataEnd - _FIRE_bs_sceneSegmentRoDataStart );
        _FIRE_bs_sceneSegmentSDataStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_scene.o (.sdata)
        . = ALIGN(0x10);
        _FIRE_bs_sceneSegmentSDataEnd = .;
        _FIRE_bs_sceneSegmentOvlStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_scene.o (.ovl)
        . = ALIGN(0x10);
        _FIRE_bs_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _FIRE_bs_sceneSegmentOvlEnd - _FIRE_bs_sceneSegmentTextStart );
    _FIRE_bs_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..FIRE_bs_scene.bss ADDR(..FIRE_bs_scene) + SIZEOF(..FIRE_bs_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _FIRE_bs_sceneSegmentBssStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_scene.o (.sbss)
            build/scenes/dungeons/FIRE_bs/FIRE_bs_scene.o (.scommon)
            build/scenes/dungeons/FIRE_bs/FIRE_bs_scene.o (.bss)
            build/scenes/dungeons/FIRE_bs/FIRE_bs_scene.o (COMMON)
        . = ALIGN(0x10);
        _FIRE_bs_sceneSegmentBssEnd = .;
        _FIRE_bs_sceneSegmentEnd = .;
    }
    _FIRE_bs_sceneSegmentBssSize = ABSOLUTE( _FIRE_bs_sceneSegmentBssEnd - _FIRE_bs_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _FIRE_bs_room_0SegmentRomStart = _RomSize;
    ..FIRE_bs_room_0 0x03000000 : AT(_RomSize)
    {
        _FIRE_bs_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _FIRE_bs_room_0SegmentTextStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_0.o (.text)
        _FIRE_bs_room_0SegmentTextEnd = .;
    _FIRE_bs_room_0SegmentTextSize = ABSOLUTE( _FIRE_bs_room_0SegmentTextEnd - _FIRE_bs_room_0SegmentTextStart );
        _FIRE_bs_room_0SegmentDataStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_0.o (.data)
        _FIRE_bs_room_0SegmentDataEnd = .;
    _FIRE_bs_room_0SegmentDataSize = ABSOLUTE( _FIRE_bs_room_0SegmentDataEnd - _FIRE_bs_room_0SegmentDataStart );
        _FIRE_bs_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_0.o (.rodata)
        _FIRE_bs_room_0SegmentRoDataEnd = .;
    _FIRE_bs_room_0SegmentRoDataSize = ABSOLUTE( _FIRE_bs_room_0SegmentRoDataEnd - _FIRE_bs_room_0SegmentRoDataStart );
        _FIRE_bs_room_0SegmentSDataStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_0.o (.sdata)
        . = ALIGN(0x10);
        _FIRE_bs_room_0SegmentSDataEnd = .;
        _FIRE_bs_room_0SegmentOvlStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_0.o (.ovl)
        . = ALIGN(0x10);
        _FIRE_bs_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _FIRE_bs_room_0SegmentOvlEnd - _FIRE_bs_room_0SegmentTextStart );
    _FIRE_bs_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..FIRE_bs_room_0.bss ADDR(..FIRE_bs_room_0) + SIZEOF(..FIRE_bs_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _FIRE_bs_room_0SegmentBssStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_0.o (.sbss)
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_0.o (.scommon)
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_0.o (.bss)
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_0.o (COMMON)
        . = ALIGN(0x10);
        _FIRE_bs_room_0SegmentBssEnd = .;
        _FIRE_bs_room_0SegmentEnd = .;
    }
    _FIRE_bs_room_0SegmentBssSize = ABSOLUTE( _FIRE_bs_room_0SegmentBssEnd - _FIRE_bs_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _FIRE_bs_room_1SegmentRomStart = _RomSize;
    ..FIRE_bs_room_1 0x03000000 : AT(_RomSize)
    {
        _FIRE_bs_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _FIRE_bs_room_1SegmentTextStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_1.o (.text)
        _FIRE_bs_room_1SegmentTextEnd = .;
    _FIRE_bs_room_1SegmentTextSize = ABSOLUTE( _FIRE_bs_room_1SegmentTextEnd - _FIRE_bs_room_1SegmentTextStart );
        _FIRE_bs_room_1SegmentDataStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_1.o (.data)
        _FIRE_bs_room_1SegmentDataEnd = .;
    _FIRE_bs_room_1SegmentDataSize = ABSOLUTE( _FIRE_bs_room_1SegmentDataEnd - _FIRE_bs_room_1SegmentDataStart );
        _FIRE_bs_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_1.o (.rodata)
        _FIRE_bs_room_1SegmentRoDataEnd = .;
    _FIRE_bs_room_1SegmentRoDataSize = ABSOLUTE( _FIRE_bs_room_1SegmentRoDataEnd - _FIRE_bs_room_1SegmentRoDataStart );
        _FIRE_bs_room_1SegmentSDataStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_1.o (.sdata)
        . = ALIGN(0x10);
        _FIRE_bs_room_1SegmentSDataEnd = .;
        _FIRE_bs_room_1SegmentOvlStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_1.o (.ovl)
        . = ALIGN(0x10);
        _FIRE_bs_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _FIRE_bs_room_1SegmentOvlEnd - _FIRE_bs_room_1SegmentTextStart );
    _FIRE_bs_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..FIRE_bs_room_1.bss ADDR(..FIRE_bs_room_1) + SIZEOF(..FIRE_bs_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _FIRE_bs_room_1SegmentBssStart = .;
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_1.o (.sbss)
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_1.o (.scommon)
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_1.o (.bss)
            build/scenes/dungeons/FIRE_bs/FIRE_bs_room_1.o (COMMON)
        . = ALIGN(0x10);
        _FIRE_bs_room_1SegmentBssEnd = .;
        _FIRE_bs_room_1SegmentEnd = .;
    }
    _FIRE_bs_room_1SegmentBssSize = ABSOLUTE( _FIRE_bs_room_1SegmentBssEnd - _FIRE_bs_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hut_sceneSegmentRomStart = _RomSize;
    ..hut_scene 0x02000000 : AT(_RomSize)
    {
        _hut_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _hut_sceneSegmentTextStart = .;
            build/scenes/indoors/hut/hut_scene.o (.text)
        _hut_sceneSegmentTextEnd = .;
    _hut_sceneSegmentTextSize = ABSOLUTE( _hut_sceneSegmentTextEnd - _hut_sceneSegmentTextStart );
        _hut_sceneSegmentDataStart = .;
            build/scenes/indoors/hut/hut_scene.o (.data)
        _hut_sceneSegmentDataEnd = .;
    _hut_sceneSegmentDataSize = ABSOLUTE( _hut_sceneSegmentDataEnd - _hut_sceneSegmentDataStart );
        _hut_sceneSegmentRoDataStart = .;
            build/scenes/indoors/hut/hut_scene.o (.rodata)
        _hut_sceneSegmentRoDataEnd = .;
    _hut_sceneSegmentRoDataSize = ABSOLUTE( _hut_sceneSegmentRoDataEnd - _hut_sceneSegmentRoDataStart );
        _hut_sceneSegmentSDataStart = .;
            build/scenes/indoors/hut/hut_scene.o (.sdata)
        . = ALIGN(0x10);
        _hut_sceneSegmentSDataEnd = .;
        _hut_sceneSegmentOvlStart = .;
            build/scenes/indoors/hut/hut_scene.o (.ovl)
        . = ALIGN(0x10);
        _hut_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _hut_sceneSegmentOvlEnd - _hut_sceneSegmentTextStart );
    _hut_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hut_scene.bss ADDR(..hut_scene) + SIZEOF(..hut_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hut_sceneSegmentBssStart = .;
            build/scenes/indoors/hut/hut_scene.o (.sbss)
            build/scenes/indoors/hut/hut_scene.o (.scommon)
            build/scenes/indoors/hut/hut_scene.o (.bss)
            build/scenes/indoors/hut/hut_scene.o (COMMON)
        . = ALIGN(0x10);
        _hut_sceneSegmentBssEnd = .;
        _hut_sceneSegmentEnd = .;
    }
    _hut_sceneSegmentBssSize = ABSOLUTE( _hut_sceneSegmentBssEnd - _hut_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hut_room_0SegmentRomStart = _RomSize;
    ..hut_room_0 0x03000000 : AT(_RomSize)
    {
        _hut_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _hut_room_0SegmentTextStart = .;
            build/scenes/indoors/hut/hut_room_0.o (.text)
        _hut_room_0SegmentTextEnd = .;
    _hut_room_0SegmentTextSize = ABSOLUTE( _hut_room_0SegmentTextEnd - _hut_room_0SegmentTextStart );
        _hut_room_0SegmentDataStart = .;
            build/scenes/indoors/hut/hut_room_0.o (.data)
        _hut_room_0SegmentDataEnd = .;
    _hut_room_0SegmentDataSize = ABSOLUTE( _hut_room_0SegmentDataEnd - _hut_room_0SegmentDataStart );
        _hut_room_0SegmentRoDataStart = .;
            build/scenes/indoors/hut/hut_room_0.o (.rodata)
        _hut_room_0SegmentRoDataEnd = .;
    _hut_room_0SegmentRoDataSize = ABSOLUTE( _hut_room_0SegmentRoDataEnd - _hut_room_0SegmentRoDataStart );
        _hut_room_0SegmentSDataStart = .;
            build/scenes/indoors/hut/hut_room_0.o (.sdata)
        . = ALIGN(0x10);
        _hut_room_0SegmentSDataEnd = .;
        _hut_room_0SegmentOvlStart = .;
            build/scenes/indoors/hut/hut_room_0.o (.ovl)
        . = ALIGN(0x10);
        _hut_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _hut_room_0SegmentOvlEnd - _hut_room_0SegmentTextStart );
    _hut_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hut_room_0.bss ADDR(..hut_room_0) + SIZEOF(..hut_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hut_room_0SegmentBssStart = .;
            build/scenes/indoors/hut/hut_room_0.o (.sbss)
            build/scenes/indoors/hut/hut_room_0.o (.scommon)
            build/scenes/indoors/hut/hut_room_0.o (.bss)
            build/scenes/indoors/hut/hut_room_0.o (COMMON)
        . = ALIGN(0x10);
        _hut_room_0SegmentBssEnd = .;
        _hut_room_0SegmentEnd = .;
    }
    _hut_room_0SegmentBssSize = ABSOLUTE( _hut_room_0SegmentBssEnd - _hut_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _daiyousei_izumi_sceneSegmentRomStart = _RomSize;
    ..daiyousei_izumi_scene 0x02000000 : AT(_RomSize)
    {
        _daiyousei_izumi_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _daiyousei_izumi_sceneSegmentTextStart = .;
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_scene.o (.text)
        _daiyousei_izumi_sceneSegmentTextEnd = .;
    _daiyousei_izumi_sceneSegmentTextSize = ABSOLUTE( _daiyousei_izumi_sceneSegmentTextEnd - _daiyousei_izumi_sceneSegmentTextStart );
        _daiyousei_izumi_sceneSegmentDataStart = .;
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_scene.o (.data)
        _daiyousei_izumi_sceneSegmentDataEnd = .;
    _daiyousei_izumi_sceneSegmentDataSize = ABSOLUTE( _daiyousei_izumi_sceneSegmentDataEnd - _daiyousei_izumi_sceneSegmentDataStart );
        _daiyousei_izumi_sceneSegmentRoDataStart = .;
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_scene.o (.rodata)
        _daiyousei_izumi_sceneSegmentRoDataEnd = .;
    _daiyousei_izumi_sceneSegmentRoDataSize = ABSOLUTE( _daiyousei_izumi_sceneSegmentRoDataEnd - _daiyousei_izumi_sceneSegmentRoDataStart );
        _daiyousei_izumi_sceneSegmentSDataStart = .;
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_scene.o (.sdata)
        . = ALIGN(0x10);
        _daiyousei_izumi_sceneSegmentSDataEnd = .;
        _daiyousei_izumi_sceneSegmentOvlStart = .;
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_scene.o (.ovl)
        . = ALIGN(0x10);
        _daiyousei_izumi_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _daiyousei_izumi_sceneSegmentOvlEnd - _daiyousei_izumi_sceneSegmentTextStart );
    _daiyousei_izumi_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..daiyousei_izumi_scene.bss ADDR(..daiyousei_izumi_scene) + SIZEOF(..daiyousei_izumi_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _daiyousei_izumi_sceneSegmentBssStart = .;
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_scene.o (.sbss)
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_scene.o (.scommon)
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_scene.o (.bss)
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_scene.o (COMMON)
        . = ALIGN(0x10);
        _daiyousei_izumi_sceneSegmentBssEnd = .;
        _daiyousei_izumi_sceneSegmentEnd = .;
    }
    _daiyousei_izumi_sceneSegmentBssSize = ABSOLUTE( _daiyousei_izumi_sceneSegmentBssEnd - _daiyousei_izumi_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _daiyousei_izumi_room_0SegmentRomStart = _RomSize;
    ..daiyousei_izumi_room_0 0x03000000 : AT(_RomSize)
    {
        _daiyousei_izumi_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _daiyousei_izumi_room_0SegmentTextStart = .;
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_room_0.o (.text)
        _daiyousei_izumi_room_0SegmentTextEnd = .;
    _daiyousei_izumi_room_0SegmentTextSize = ABSOLUTE( _daiyousei_izumi_room_0SegmentTextEnd - _daiyousei_izumi_room_0SegmentTextStart );
        _daiyousei_izumi_room_0SegmentDataStart = .;
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_room_0.o (.data)
        _daiyousei_izumi_room_0SegmentDataEnd = .;
    _daiyousei_izumi_room_0SegmentDataSize = ABSOLUTE( _daiyousei_izumi_room_0SegmentDataEnd - _daiyousei_izumi_room_0SegmentDataStart );
        _daiyousei_izumi_room_0SegmentRoDataStart = .;
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_room_0.o (.rodata)
        _daiyousei_izumi_room_0SegmentRoDataEnd = .;
    _daiyousei_izumi_room_0SegmentRoDataSize = ABSOLUTE( _daiyousei_izumi_room_0SegmentRoDataEnd - _daiyousei_izumi_room_0SegmentRoDataStart );
        _daiyousei_izumi_room_0SegmentSDataStart = .;
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_room_0.o (.sdata)
        . = ALIGN(0x10);
        _daiyousei_izumi_room_0SegmentSDataEnd = .;
        _daiyousei_izumi_room_0SegmentOvlStart = .;
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_room_0.o (.ovl)
        . = ALIGN(0x10);
        _daiyousei_izumi_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _daiyousei_izumi_room_0SegmentOvlEnd - _daiyousei_izumi_room_0SegmentTextStart );
    _daiyousei_izumi_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..daiyousei_izumi_room_0.bss ADDR(..daiyousei_izumi_room_0) + SIZEOF(..daiyousei_izumi_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _daiyousei_izumi_room_0SegmentBssStart = .;
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_room_0.o (.sbss)
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_room_0.o (.scommon)
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_room_0.o (.bss)
            build/scenes/indoors/daiyousei_izumi/daiyousei_izumi_room_0.o (COMMON)
        . = ALIGN(0x10);
        _daiyousei_izumi_room_0SegmentBssEnd = .;
        _daiyousei_izumi_room_0SegmentEnd = .;
    }
    _daiyousei_izumi_room_0SegmentBssSize = ABSOLUTE( _daiyousei_izumi_room_0SegmentBssEnd - _daiyousei_izumi_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakaana_sceneSegmentRomStart = _RomSize;
    ..hakaana_scene 0x02000000 : AT(_RomSize)
    {
        _hakaana_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _hakaana_sceneSegmentTextStart = .;
            build/scenes/misc/hakaana/hakaana_scene.o (.text)
        _hakaana_sceneSegmentTextEnd = .;
    _hakaana_sceneSegmentTextSize = ABSOLUTE( _hakaana_sceneSegmentTextEnd - _hakaana_sceneSegmentTextStart );
        _hakaana_sceneSegmentDataStart = .;
            build/scenes/misc/hakaana/hakaana_scene.o (.data)
        _hakaana_sceneSegmentDataEnd = .;
    _hakaana_sceneSegmentDataSize = ABSOLUTE( _hakaana_sceneSegmentDataEnd - _hakaana_sceneSegmentDataStart );
        _hakaana_sceneSegmentRoDataStart = .;
            build/scenes/misc/hakaana/hakaana_scene.o (.rodata)
        _hakaana_sceneSegmentRoDataEnd = .;
    _hakaana_sceneSegmentRoDataSize = ABSOLUTE( _hakaana_sceneSegmentRoDataEnd - _hakaana_sceneSegmentRoDataStart );
        _hakaana_sceneSegmentSDataStart = .;
            build/scenes/misc/hakaana/hakaana_scene.o (.sdata)
        . = ALIGN(0x10);
        _hakaana_sceneSegmentSDataEnd = .;
        _hakaana_sceneSegmentOvlStart = .;
            build/scenes/misc/hakaana/hakaana_scene.o (.ovl)
        . = ALIGN(0x10);
        _hakaana_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _hakaana_sceneSegmentOvlEnd - _hakaana_sceneSegmentTextStart );
    _hakaana_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakaana_scene.bss ADDR(..hakaana_scene) + SIZEOF(..hakaana_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakaana_sceneSegmentBssStart = .;
            build/scenes/misc/hakaana/hakaana_scene.o (.sbss)
            build/scenes/misc/hakaana/hakaana_scene.o (.scommon)
            build/scenes/misc/hakaana/hakaana_scene.o (.bss)
            build/scenes/misc/hakaana/hakaana_scene.o (COMMON)
        . = ALIGN(0x10);
        _hakaana_sceneSegmentBssEnd = .;
        _hakaana_sceneSegmentEnd = .;
    }
    _hakaana_sceneSegmentBssSize = ABSOLUTE( _hakaana_sceneSegmentBssEnd - _hakaana_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakaana_room_0SegmentRomStart = _RomSize;
    ..hakaana_room_0 0x03000000 : AT(_RomSize)
    {
        _hakaana_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _hakaana_room_0SegmentTextStart = .;
            build/scenes/misc/hakaana/hakaana_room_0.o (.text)
        _hakaana_room_0SegmentTextEnd = .;
    _hakaana_room_0SegmentTextSize = ABSOLUTE( _hakaana_room_0SegmentTextEnd - _hakaana_room_0SegmentTextStart );
        _hakaana_room_0SegmentDataStart = .;
            build/scenes/misc/hakaana/hakaana_room_0.o (.data)
        _hakaana_room_0SegmentDataEnd = .;
    _hakaana_room_0SegmentDataSize = ABSOLUTE( _hakaana_room_0SegmentDataEnd - _hakaana_room_0SegmentDataStart );
        _hakaana_room_0SegmentRoDataStart = .;
            build/scenes/misc/hakaana/hakaana_room_0.o (.rodata)
        _hakaana_room_0SegmentRoDataEnd = .;
    _hakaana_room_0SegmentRoDataSize = ABSOLUTE( _hakaana_room_0SegmentRoDataEnd - _hakaana_room_0SegmentRoDataStart );
        _hakaana_room_0SegmentSDataStart = .;
            build/scenes/misc/hakaana/hakaana_room_0.o (.sdata)
        . = ALIGN(0x10);
        _hakaana_room_0SegmentSDataEnd = .;
        _hakaana_room_0SegmentOvlStart = .;
            build/scenes/misc/hakaana/hakaana_room_0.o (.ovl)
        . = ALIGN(0x10);
        _hakaana_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _hakaana_room_0SegmentOvlEnd - _hakaana_room_0SegmentTextStart );
    _hakaana_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakaana_room_0.bss ADDR(..hakaana_room_0) + SIZEOF(..hakaana_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakaana_room_0SegmentBssStart = .;
            build/scenes/misc/hakaana/hakaana_room_0.o (.sbss)
            build/scenes/misc/hakaana/hakaana_room_0.o (.scommon)
            build/scenes/misc/hakaana/hakaana_room_0.o (.bss)
            build/scenes/misc/hakaana/hakaana_room_0.o (COMMON)
        . = ALIGN(0x10);
        _hakaana_room_0SegmentBssEnd = .;
        _hakaana_room_0SegmentEnd = .;
    }
    _hakaana_room_0SegmentBssSize = ABSOLUTE( _hakaana_room_0SegmentBssEnd - _hakaana_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _yousei_izumi_tate_sceneSegmentRomStart = _RomSize;
    ..yousei_izumi_tate_scene 0x02000000 : AT(_RomSize)
    {
        _yousei_izumi_tate_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _yousei_izumi_tate_sceneSegmentTextStart = .;
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_scene.o (.text)
        _yousei_izumi_tate_sceneSegmentTextEnd = .;
    _yousei_izumi_tate_sceneSegmentTextSize = ABSOLUTE( _yousei_izumi_tate_sceneSegmentTextEnd - _yousei_izumi_tate_sceneSegmentTextStart );
        _yousei_izumi_tate_sceneSegmentDataStart = .;
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_scene.o (.data)
        _yousei_izumi_tate_sceneSegmentDataEnd = .;
    _yousei_izumi_tate_sceneSegmentDataSize = ABSOLUTE( _yousei_izumi_tate_sceneSegmentDataEnd - _yousei_izumi_tate_sceneSegmentDataStart );
        _yousei_izumi_tate_sceneSegmentRoDataStart = .;
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_scene.o (.rodata)
        _yousei_izumi_tate_sceneSegmentRoDataEnd = .;
    _yousei_izumi_tate_sceneSegmentRoDataSize = ABSOLUTE( _yousei_izumi_tate_sceneSegmentRoDataEnd - _yousei_izumi_tate_sceneSegmentRoDataStart );
        _yousei_izumi_tate_sceneSegmentSDataStart = .;
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_scene.o (.sdata)
        . = ALIGN(0x10);
        _yousei_izumi_tate_sceneSegmentSDataEnd = .;
        _yousei_izumi_tate_sceneSegmentOvlStart = .;
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_scene.o (.ovl)
        . = ALIGN(0x10);
        _yousei_izumi_tate_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _yousei_izumi_tate_sceneSegmentOvlEnd - _yousei_izumi_tate_sceneSegmentTextStart );
    _yousei_izumi_tate_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..yousei_izumi_tate_scene.bss ADDR(..yousei_izumi_tate_scene) + SIZEOF(..yousei_izumi_tate_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _yousei_izumi_tate_sceneSegmentBssStart = .;
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_scene.o (.sbss)
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_scene.o (.scommon)
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_scene.o (.bss)
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_scene.o (COMMON)
        . = ALIGN(0x10);
        _yousei_izumi_tate_sceneSegmentBssEnd = .;
        _yousei_izumi_tate_sceneSegmentEnd = .;
    }
    _yousei_izumi_tate_sceneSegmentBssSize = ABSOLUTE( _yousei_izumi_tate_sceneSegmentBssEnd - _yousei_izumi_tate_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _yousei_izumi_tate_room_0SegmentRomStart = _RomSize;
    ..yousei_izumi_tate_room_0 0x03000000 : AT(_RomSize)
    {
        _yousei_izumi_tate_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _yousei_izumi_tate_room_0SegmentTextStart = .;
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_room_0.o (.text)
        _yousei_izumi_tate_room_0SegmentTextEnd = .;
    _yousei_izumi_tate_room_0SegmentTextSize = ABSOLUTE( _yousei_izumi_tate_room_0SegmentTextEnd - _yousei_izumi_tate_room_0SegmentTextStart );
        _yousei_izumi_tate_room_0SegmentDataStart = .;
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_room_0.o (.data)
        _yousei_izumi_tate_room_0SegmentDataEnd = .;
    _yousei_izumi_tate_room_0SegmentDataSize = ABSOLUTE( _yousei_izumi_tate_room_0SegmentDataEnd - _yousei_izumi_tate_room_0SegmentDataStart );
        _yousei_izumi_tate_room_0SegmentRoDataStart = .;
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_room_0.o (.rodata)
        _yousei_izumi_tate_room_0SegmentRoDataEnd = .;
    _yousei_izumi_tate_room_0SegmentRoDataSize = ABSOLUTE( _yousei_izumi_tate_room_0SegmentRoDataEnd - _yousei_izumi_tate_room_0SegmentRoDataStart );
        _yousei_izumi_tate_room_0SegmentSDataStart = .;
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_room_0.o (.sdata)
        . = ALIGN(0x10);
        _yousei_izumi_tate_room_0SegmentSDataEnd = .;
        _yousei_izumi_tate_room_0SegmentOvlStart = .;
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_room_0.o (.ovl)
        . = ALIGN(0x10);
        _yousei_izumi_tate_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _yousei_izumi_tate_room_0SegmentOvlEnd - _yousei_izumi_tate_room_0SegmentTextStart );
    _yousei_izumi_tate_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..yousei_izumi_tate_room_0.bss ADDR(..yousei_izumi_tate_room_0) + SIZEOF(..yousei_izumi_tate_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _yousei_izumi_tate_room_0SegmentBssStart = .;
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_room_0.o (.sbss)
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_room_0.o (.scommon)
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_room_0.o (.bss)
            build/scenes/indoors/yousei_izumi_tate/yousei_izumi_tate_room_0.o (COMMON)
        . = ALIGN(0x10);
        _yousei_izumi_tate_room_0SegmentBssEnd = .;
        _yousei_izumi_tate_room_0SegmentEnd = .;
    }
    _yousei_izumi_tate_room_0SegmentBssSize = ABSOLUTE( _yousei_izumi_tate_room_0SegmentBssEnd - _yousei_izumi_tate_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _yousei_izumi_yoko_sceneSegmentRomStart = _RomSize;
    ..yousei_izumi_yoko_scene 0x02000000 : AT(_RomSize)
    {
        _yousei_izumi_yoko_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _yousei_izumi_yoko_sceneSegmentTextStart = .;
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_scene.o (.text)
        _yousei_izumi_yoko_sceneSegmentTextEnd = .;
    _yousei_izumi_yoko_sceneSegmentTextSize = ABSOLUTE( _yousei_izumi_yoko_sceneSegmentTextEnd - _yousei_izumi_yoko_sceneSegmentTextStart );
        _yousei_izumi_yoko_sceneSegmentDataStart = .;
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_scene.o (.data)
        _yousei_izumi_yoko_sceneSegmentDataEnd = .;
    _yousei_izumi_yoko_sceneSegmentDataSize = ABSOLUTE( _yousei_izumi_yoko_sceneSegmentDataEnd - _yousei_izumi_yoko_sceneSegmentDataStart );
        _yousei_izumi_yoko_sceneSegmentRoDataStart = .;
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_scene.o (.rodata)
        _yousei_izumi_yoko_sceneSegmentRoDataEnd = .;
    _yousei_izumi_yoko_sceneSegmentRoDataSize = ABSOLUTE( _yousei_izumi_yoko_sceneSegmentRoDataEnd - _yousei_izumi_yoko_sceneSegmentRoDataStart );
        _yousei_izumi_yoko_sceneSegmentSDataStart = .;
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_scene.o (.sdata)
        . = ALIGN(0x10);
        _yousei_izumi_yoko_sceneSegmentSDataEnd = .;
        _yousei_izumi_yoko_sceneSegmentOvlStart = .;
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_scene.o (.ovl)
        . = ALIGN(0x10);
        _yousei_izumi_yoko_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _yousei_izumi_yoko_sceneSegmentOvlEnd - _yousei_izumi_yoko_sceneSegmentTextStart );
    _yousei_izumi_yoko_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..yousei_izumi_yoko_scene.bss ADDR(..yousei_izumi_yoko_scene) + SIZEOF(..yousei_izumi_yoko_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _yousei_izumi_yoko_sceneSegmentBssStart = .;
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_scene.o (.sbss)
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_scene.o (.scommon)
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_scene.o (.bss)
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_scene.o (COMMON)
        . = ALIGN(0x10);
        _yousei_izumi_yoko_sceneSegmentBssEnd = .;
        _yousei_izumi_yoko_sceneSegmentEnd = .;
    }
    _yousei_izumi_yoko_sceneSegmentBssSize = ABSOLUTE( _yousei_izumi_yoko_sceneSegmentBssEnd - _yousei_izumi_yoko_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _yousei_izumi_yoko_room_0SegmentRomStart = _RomSize;
    ..yousei_izumi_yoko_room_0 0x03000000 : AT(_RomSize)
    {
        _yousei_izumi_yoko_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _yousei_izumi_yoko_room_0SegmentTextStart = .;
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_room_0.o (.text)
        _yousei_izumi_yoko_room_0SegmentTextEnd = .;
    _yousei_izumi_yoko_room_0SegmentTextSize = ABSOLUTE( _yousei_izumi_yoko_room_0SegmentTextEnd - _yousei_izumi_yoko_room_0SegmentTextStart );
        _yousei_izumi_yoko_room_0SegmentDataStart = .;
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_room_0.o (.data)
        _yousei_izumi_yoko_room_0SegmentDataEnd = .;
    _yousei_izumi_yoko_room_0SegmentDataSize = ABSOLUTE( _yousei_izumi_yoko_room_0SegmentDataEnd - _yousei_izumi_yoko_room_0SegmentDataStart );
        _yousei_izumi_yoko_room_0SegmentRoDataStart = .;
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_room_0.o (.rodata)
        _yousei_izumi_yoko_room_0SegmentRoDataEnd = .;
    _yousei_izumi_yoko_room_0SegmentRoDataSize = ABSOLUTE( _yousei_izumi_yoko_room_0SegmentRoDataEnd - _yousei_izumi_yoko_room_0SegmentRoDataStart );
        _yousei_izumi_yoko_room_0SegmentSDataStart = .;
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_room_0.o (.sdata)
        . = ALIGN(0x10);
        _yousei_izumi_yoko_room_0SegmentSDataEnd = .;
        _yousei_izumi_yoko_room_0SegmentOvlStart = .;
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_room_0.o (.ovl)
        . = ALIGN(0x10);
        _yousei_izumi_yoko_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _yousei_izumi_yoko_room_0SegmentOvlEnd - _yousei_izumi_yoko_room_0SegmentTextStart );
    _yousei_izumi_yoko_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..yousei_izumi_yoko_room_0.bss ADDR(..yousei_izumi_yoko_room_0) + SIZEOF(..yousei_izumi_yoko_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _yousei_izumi_yoko_room_0SegmentBssStart = .;
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_room_0.o (.sbss)
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_room_0.o (.scommon)
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_room_0.o (.bss)
            build/scenes/indoors/yousei_izumi_yoko/yousei_izumi_yoko_room_0.o (COMMON)
        . = ALIGN(0x10);
        _yousei_izumi_yoko_room_0SegmentBssEnd = .;
        _yousei_izumi_yoko_room_0SegmentEnd = .;
    }
    _yousei_izumi_yoko_room_0SegmentBssSize = ABSOLUTE( _yousei_izumi_yoko_room_0SegmentBssEnd - _yousei_izumi_yoko_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _golon_sceneSegmentRomStart = _RomSize;
    ..golon_scene 0x02000000 : AT(_RomSize)
    {
        _golon_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _golon_sceneSegmentTextStart = .;
            build/scenes/shops/golon/golon_scene.o (.text)
        _golon_sceneSegmentTextEnd = .;
    _golon_sceneSegmentTextSize = ABSOLUTE( _golon_sceneSegmentTextEnd - _golon_sceneSegmentTextStart );
        _golon_sceneSegmentDataStart = .;
            build/scenes/shops/golon/golon_scene.o (.data)
        _golon_sceneSegmentDataEnd = .;
    _golon_sceneSegmentDataSize = ABSOLUTE( _golon_sceneSegmentDataEnd - _golon_sceneSegmentDataStart );
        _golon_sceneSegmentRoDataStart = .;
            build/scenes/shops/golon/golon_scene.o (.rodata)
        _golon_sceneSegmentRoDataEnd = .;
    _golon_sceneSegmentRoDataSize = ABSOLUTE( _golon_sceneSegmentRoDataEnd - _golon_sceneSegmentRoDataStart );
        _golon_sceneSegmentSDataStart = .;
            build/scenes/shops/golon/golon_scene.o (.sdata)
        . = ALIGN(0x10);
        _golon_sceneSegmentSDataEnd = .;
        _golon_sceneSegmentOvlStart = .;
            build/scenes/shops/golon/golon_scene.o (.ovl)
        . = ALIGN(0x10);
        _golon_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _golon_sceneSegmentOvlEnd - _golon_sceneSegmentTextStart );
    _golon_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..golon_scene.bss ADDR(..golon_scene) + SIZEOF(..golon_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _golon_sceneSegmentBssStart = .;
            build/scenes/shops/golon/golon_scene.o (.sbss)
            build/scenes/shops/golon/golon_scene.o (.scommon)
            build/scenes/shops/golon/golon_scene.o (.bss)
            build/scenes/shops/golon/golon_scene.o (COMMON)
        . = ALIGN(0x10);
        _golon_sceneSegmentBssEnd = .;
        _golon_sceneSegmentEnd = .;
    }
    _golon_sceneSegmentBssSize = ABSOLUTE( _golon_sceneSegmentBssEnd - _golon_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _golon_room_0SegmentRomStart = _RomSize;
    ..golon_room_0 0x03000000 : AT(_RomSize)
    {
        _golon_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _golon_room_0SegmentTextStart = .;
            build/scenes/shops/golon/golon_room_0.o (.text)
        _golon_room_0SegmentTextEnd = .;
    _golon_room_0SegmentTextSize = ABSOLUTE( _golon_room_0SegmentTextEnd - _golon_room_0SegmentTextStart );
        _golon_room_0SegmentDataStart = .;
            build/scenes/shops/golon/golon_room_0.o (.data)
        _golon_room_0SegmentDataEnd = .;
    _golon_room_0SegmentDataSize = ABSOLUTE( _golon_room_0SegmentDataEnd - _golon_room_0SegmentDataStart );
        _golon_room_0SegmentRoDataStart = .;
            build/scenes/shops/golon/golon_room_0.o (.rodata)
        _golon_room_0SegmentRoDataEnd = .;
    _golon_room_0SegmentRoDataSize = ABSOLUTE( _golon_room_0SegmentRoDataEnd - _golon_room_0SegmentRoDataStart );
        _golon_room_0SegmentSDataStart = .;
            build/scenes/shops/golon/golon_room_0.o (.sdata)
        . = ALIGN(0x10);
        _golon_room_0SegmentSDataEnd = .;
        _golon_room_0SegmentOvlStart = .;
            build/scenes/shops/golon/golon_room_0.o (.ovl)
        . = ALIGN(0x10);
        _golon_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _golon_room_0SegmentOvlEnd - _golon_room_0SegmentTextStart );
    _golon_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..golon_room_0.bss ADDR(..golon_room_0) + SIZEOF(..golon_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _golon_room_0SegmentBssStart = .;
            build/scenes/shops/golon/golon_room_0.o (.sbss)
            build/scenes/shops/golon/golon_room_0.o (.scommon)
            build/scenes/shops/golon/golon_room_0.o (.bss)
            build/scenes/shops/golon/golon_room_0.o (COMMON)
        . = ALIGN(0x10);
        _golon_room_0SegmentBssEnd = .;
        _golon_room_0SegmentEnd = .;
    }
    _golon_room_0SegmentBssSize = ABSOLUTE( _golon_room_0SegmentBssEnd - _golon_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _zoora_sceneSegmentRomStart = _RomSize;
    ..zoora_scene 0x02000000 : AT(_RomSize)
    {
        _zoora_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _zoora_sceneSegmentTextStart = .;
            build/scenes/shops/zoora/zoora_scene.o (.text)
        _zoora_sceneSegmentTextEnd = .;
    _zoora_sceneSegmentTextSize = ABSOLUTE( _zoora_sceneSegmentTextEnd - _zoora_sceneSegmentTextStart );
        _zoora_sceneSegmentDataStart = .;
            build/scenes/shops/zoora/zoora_scene.o (.data)
        _zoora_sceneSegmentDataEnd = .;
    _zoora_sceneSegmentDataSize = ABSOLUTE( _zoora_sceneSegmentDataEnd - _zoora_sceneSegmentDataStart );
        _zoora_sceneSegmentRoDataStart = .;
            build/scenes/shops/zoora/zoora_scene.o (.rodata)
        _zoora_sceneSegmentRoDataEnd = .;
    _zoora_sceneSegmentRoDataSize = ABSOLUTE( _zoora_sceneSegmentRoDataEnd - _zoora_sceneSegmentRoDataStart );
        _zoora_sceneSegmentSDataStart = .;
            build/scenes/shops/zoora/zoora_scene.o (.sdata)
        . = ALIGN(0x10);
        _zoora_sceneSegmentSDataEnd = .;
        _zoora_sceneSegmentOvlStart = .;
            build/scenes/shops/zoora/zoora_scene.o (.ovl)
        . = ALIGN(0x10);
        _zoora_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _zoora_sceneSegmentOvlEnd - _zoora_sceneSegmentTextStart );
    _zoora_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..zoora_scene.bss ADDR(..zoora_scene) + SIZEOF(..zoora_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _zoora_sceneSegmentBssStart = .;
            build/scenes/shops/zoora/zoora_scene.o (.sbss)
            build/scenes/shops/zoora/zoora_scene.o (.scommon)
            build/scenes/shops/zoora/zoora_scene.o (.bss)
            build/scenes/shops/zoora/zoora_scene.o (COMMON)
        . = ALIGN(0x10);
        _zoora_sceneSegmentBssEnd = .;
        _zoora_sceneSegmentEnd = .;
    }
    _zoora_sceneSegmentBssSize = ABSOLUTE( _zoora_sceneSegmentBssEnd - _zoora_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _zoora_room_0SegmentRomStart = _RomSize;
    ..zoora_room_0 0x03000000 : AT(_RomSize)
    {
        _zoora_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _zoora_room_0SegmentTextStart = .;
            build/scenes/shops/zoora/zoora_room_0.o (.text)
        _zoora_room_0SegmentTextEnd = .;
    _zoora_room_0SegmentTextSize = ABSOLUTE( _zoora_room_0SegmentTextEnd - _zoora_room_0SegmentTextStart );
        _zoora_room_0SegmentDataStart = .;
            build/scenes/shops/zoora/zoora_room_0.o (.data)
        _zoora_room_0SegmentDataEnd = .;
    _zoora_room_0SegmentDataSize = ABSOLUTE( _zoora_room_0SegmentDataEnd - _zoora_room_0SegmentDataStart );
        _zoora_room_0SegmentRoDataStart = .;
            build/scenes/shops/zoora/zoora_room_0.o (.rodata)
        _zoora_room_0SegmentRoDataEnd = .;
    _zoora_room_0SegmentRoDataSize = ABSOLUTE( _zoora_room_0SegmentRoDataEnd - _zoora_room_0SegmentRoDataStart );
        _zoora_room_0SegmentSDataStart = .;
            build/scenes/shops/zoora/zoora_room_0.o (.sdata)
        . = ALIGN(0x10);
        _zoora_room_0SegmentSDataEnd = .;
        _zoora_room_0SegmentOvlStart = .;
            build/scenes/shops/zoora/zoora_room_0.o (.ovl)
        . = ALIGN(0x10);
        _zoora_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _zoora_room_0SegmentOvlEnd - _zoora_room_0SegmentTextStart );
    _zoora_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..zoora_room_0.bss ADDR(..zoora_room_0) + SIZEOF(..zoora_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _zoora_room_0SegmentBssStart = .;
            build/scenes/shops/zoora/zoora_room_0.o (.sbss)
            build/scenes/shops/zoora/zoora_room_0.o (.scommon)
            build/scenes/shops/zoora/zoora_room_0.o (.bss)
            build/scenes/shops/zoora/zoora_room_0.o (COMMON)
        . = ALIGN(0x10);
        _zoora_room_0SegmentBssEnd = .;
        _zoora_room_0SegmentEnd = .;
    }
    _zoora_room_0SegmentBssSize = ABSOLUTE( _zoora_room_0SegmentBssEnd - _zoora_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _drag_sceneSegmentRomStart = _RomSize;
    ..drag_scene 0x02000000 : AT(_RomSize)
    {
        _drag_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _drag_sceneSegmentTextStart = .;
            build/scenes/shops/drag/drag_scene.o (.text)
        _drag_sceneSegmentTextEnd = .;
    _drag_sceneSegmentTextSize = ABSOLUTE( _drag_sceneSegmentTextEnd - _drag_sceneSegmentTextStart );
        _drag_sceneSegmentDataStart = .;
            build/scenes/shops/drag/drag_scene.o (.data)
        _drag_sceneSegmentDataEnd = .;
    _drag_sceneSegmentDataSize = ABSOLUTE( _drag_sceneSegmentDataEnd - _drag_sceneSegmentDataStart );
        _drag_sceneSegmentRoDataStart = .;
            build/scenes/shops/drag/drag_scene.o (.rodata)
        _drag_sceneSegmentRoDataEnd = .;
    _drag_sceneSegmentRoDataSize = ABSOLUTE( _drag_sceneSegmentRoDataEnd - _drag_sceneSegmentRoDataStart );
        _drag_sceneSegmentSDataStart = .;
            build/scenes/shops/drag/drag_scene.o (.sdata)
        . = ALIGN(0x10);
        _drag_sceneSegmentSDataEnd = .;
        _drag_sceneSegmentOvlStart = .;
            build/scenes/shops/drag/drag_scene.o (.ovl)
        . = ALIGN(0x10);
        _drag_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _drag_sceneSegmentOvlEnd - _drag_sceneSegmentTextStart );
    _drag_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..drag_scene.bss ADDR(..drag_scene) + SIZEOF(..drag_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _drag_sceneSegmentBssStart = .;
            build/scenes/shops/drag/drag_scene.o (.sbss)
            build/scenes/shops/drag/drag_scene.o (.scommon)
            build/scenes/shops/drag/drag_scene.o (.bss)
            build/scenes/shops/drag/drag_scene.o (COMMON)
        . = ALIGN(0x10);
        _drag_sceneSegmentBssEnd = .;
        _drag_sceneSegmentEnd = .;
    }
    _drag_sceneSegmentBssSize = ABSOLUTE( _drag_sceneSegmentBssEnd - _drag_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _drag_room_0SegmentRomStart = _RomSize;
    ..drag_room_0 0x03000000 : AT(_RomSize)
    {
        _drag_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _drag_room_0SegmentTextStart = .;
            build/scenes/shops/drag/drag_room_0.o (.text)
        _drag_room_0SegmentTextEnd = .;
    _drag_room_0SegmentTextSize = ABSOLUTE( _drag_room_0SegmentTextEnd - _drag_room_0SegmentTextStart );
        _drag_room_0SegmentDataStart = .;
            build/scenes/shops/drag/drag_room_0.o (.data)
        _drag_room_0SegmentDataEnd = .;
    _drag_room_0SegmentDataSize = ABSOLUTE( _drag_room_0SegmentDataEnd - _drag_room_0SegmentDataStart );
        _drag_room_0SegmentRoDataStart = .;
            build/scenes/shops/drag/drag_room_0.o (.rodata)
        _drag_room_0SegmentRoDataEnd = .;
    _drag_room_0SegmentRoDataSize = ABSOLUTE( _drag_room_0SegmentRoDataEnd - _drag_room_0SegmentRoDataStart );
        _drag_room_0SegmentSDataStart = .;
            build/scenes/shops/drag/drag_room_0.o (.sdata)
        . = ALIGN(0x10);
        _drag_room_0SegmentSDataEnd = .;
        _drag_room_0SegmentOvlStart = .;
            build/scenes/shops/drag/drag_room_0.o (.ovl)
        . = ALIGN(0x10);
        _drag_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _drag_room_0SegmentOvlEnd - _drag_room_0SegmentTextStart );
    _drag_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..drag_room_0.bss ADDR(..drag_room_0) + SIZEOF(..drag_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _drag_room_0SegmentBssStart = .;
            build/scenes/shops/drag/drag_room_0.o (.sbss)
            build/scenes/shops/drag/drag_room_0.o (.scommon)
            build/scenes/shops/drag/drag_room_0.o (.bss)
            build/scenes/shops/drag/drag_room_0.o (COMMON)
        . = ALIGN(0x10);
        _drag_room_0SegmentBssEnd = .;
        _drag_room_0SegmentEnd = .;
    }
    _drag_room_0SegmentBssSize = ABSOLUTE( _drag_room_0SegmentBssEnd - _drag_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _alley_shop_sceneSegmentRomStart = _RomSize;
    ..alley_shop_scene 0x02000000 : AT(_RomSize)
    {
        _alley_shop_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _alley_shop_sceneSegmentTextStart = .;
            build/scenes/shops/alley_shop/alley_shop_scene.o (.text)
        _alley_shop_sceneSegmentTextEnd = .;
    _alley_shop_sceneSegmentTextSize = ABSOLUTE( _alley_shop_sceneSegmentTextEnd - _alley_shop_sceneSegmentTextStart );
        _alley_shop_sceneSegmentDataStart = .;
            build/scenes/shops/alley_shop/alley_shop_scene.o (.data)
        _alley_shop_sceneSegmentDataEnd = .;
    _alley_shop_sceneSegmentDataSize = ABSOLUTE( _alley_shop_sceneSegmentDataEnd - _alley_shop_sceneSegmentDataStart );
        _alley_shop_sceneSegmentRoDataStart = .;
            build/scenes/shops/alley_shop/alley_shop_scene.o (.rodata)
        _alley_shop_sceneSegmentRoDataEnd = .;
    _alley_shop_sceneSegmentRoDataSize = ABSOLUTE( _alley_shop_sceneSegmentRoDataEnd - _alley_shop_sceneSegmentRoDataStart );
        _alley_shop_sceneSegmentSDataStart = .;
            build/scenes/shops/alley_shop/alley_shop_scene.o (.sdata)
        . = ALIGN(0x10);
        _alley_shop_sceneSegmentSDataEnd = .;
        _alley_shop_sceneSegmentOvlStart = .;
            build/scenes/shops/alley_shop/alley_shop_scene.o (.ovl)
        . = ALIGN(0x10);
        _alley_shop_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _alley_shop_sceneSegmentOvlEnd - _alley_shop_sceneSegmentTextStart );
    _alley_shop_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..alley_shop_scene.bss ADDR(..alley_shop_scene) + SIZEOF(..alley_shop_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _alley_shop_sceneSegmentBssStart = .;
            build/scenes/shops/alley_shop/alley_shop_scene.o (.sbss)
            build/scenes/shops/alley_shop/alley_shop_scene.o (.scommon)
            build/scenes/shops/alley_shop/alley_shop_scene.o (.bss)
            build/scenes/shops/alley_shop/alley_shop_scene.o (COMMON)
        . = ALIGN(0x10);
        _alley_shop_sceneSegmentBssEnd = .;
        _alley_shop_sceneSegmentEnd = .;
    }
    _alley_shop_sceneSegmentBssSize = ABSOLUTE( _alley_shop_sceneSegmentBssEnd - _alley_shop_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _alley_shop_room_0SegmentRomStart = _RomSize;
    ..alley_shop_room_0 0x03000000 : AT(_RomSize)
    {
        _alley_shop_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _alley_shop_room_0SegmentTextStart = .;
            build/scenes/shops/alley_shop/alley_shop_room_0.o (.text)
        _alley_shop_room_0SegmentTextEnd = .;
    _alley_shop_room_0SegmentTextSize = ABSOLUTE( _alley_shop_room_0SegmentTextEnd - _alley_shop_room_0SegmentTextStart );
        _alley_shop_room_0SegmentDataStart = .;
            build/scenes/shops/alley_shop/alley_shop_room_0.o (.data)
        _alley_shop_room_0SegmentDataEnd = .;
    _alley_shop_room_0SegmentDataSize = ABSOLUTE( _alley_shop_room_0SegmentDataEnd - _alley_shop_room_0SegmentDataStart );
        _alley_shop_room_0SegmentRoDataStart = .;
            build/scenes/shops/alley_shop/alley_shop_room_0.o (.rodata)
        _alley_shop_room_0SegmentRoDataEnd = .;
    _alley_shop_room_0SegmentRoDataSize = ABSOLUTE( _alley_shop_room_0SegmentRoDataEnd - _alley_shop_room_0SegmentRoDataStart );
        _alley_shop_room_0SegmentSDataStart = .;
            build/scenes/shops/alley_shop/alley_shop_room_0.o (.sdata)
        . = ALIGN(0x10);
        _alley_shop_room_0SegmentSDataEnd = .;
        _alley_shop_room_0SegmentOvlStart = .;
            build/scenes/shops/alley_shop/alley_shop_room_0.o (.ovl)
        . = ALIGN(0x10);
        _alley_shop_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _alley_shop_room_0SegmentOvlEnd - _alley_shop_room_0SegmentTextStart );
    _alley_shop_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..alley_shop_room_0.bss ADDR(..alley_shop_room_0) + SIZEOF(..alley_shop_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _alley_shop_room_0SegmentBssStart = .;
            build/scenes/shops/alley_shop/alley_shop_room_0.o (.sbss)
            build/scenes/shops/alley_shop/alley_shop_room_0.o (.scommon)
            build/scenes/shops/alley_shop/alley_shop_room_0.o (.bss)
            build/scenes/shops/alley_shop/alley_shop_room_0.o (COMMON)
        . = ALIGN(0x10);
        _alley_shop_room_0SegmentBssEnd = .;
        _alley_shop_room_0SegmentEnd = .;
    }
    _alley_shop_room_0SegmentBssSize = ABSOLUTE( _alley_shop_room_0SegmentBssEnd - _alley_shop_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _night_shop_sceneSegmentRomStart = _RomSize;
    ..night_shop_scene 0x02000000 : AT(_RomSize)
    {
        _night_shop_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _night_shop_sceneSegmentTextStart = .;
            build/scenes/shops/night_shop/night_shop_scene.o (.text)
        _night_shop_sceneSegmentTextEnd = .;
    _night_shop_sceneSegmentTextSize = ABSOLUTE( _night_shop_sceneSegmentTextEnd - _night_shop_sceneSegmentTextStart );
        _night_shop_sceneSegmentDataStart = .;
            build/scenes/shops/night_shop/night_shop_scene.o (.data)
        _night_shop_sceneSegmentDataEnd = .;
    _night_shop_sceneSegmentDataSize = ABSOLUTE( _night_shop_sceneSegmentDataEnd - _night_shop_sceneSegmentDataStart );
        _night_shop_sceneSegmentRoDataStart = .;
            build/scenes/shops/night_shop/night_shop_scene.o (.rodata)
        _night_shop_sceneSegmentRoDataEnd = .;
    _night_shop_sceneSegmentRoDataSize = ABSOLUTE( _night_shop_sceneSegmentRoDataEnd - _night_shop_sceneSegmentRoDataStart );
        _night_shop_sceneSegmentSDataStart = .;
            build/scenes/shops/night_shop/night_shop_scene.o (.sdata)
        . = ALIGN(0x10);
        _night_shop_sceneSegmentSDataEnd = .;
        _night_shop_sceneSegmentOvlStart = .;
            build/scenes/shops/night_shop/night_shop_scene.o (.ovl)
        . = ALIGN(0x10);
        _night_shop_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _night_shop_sceneSegmentOvlEnd - _night_shop_sceneSegmentTextStart );
    _night_shop_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..night_shop_scene.bss ADDR(..night_shop_scene) + SIZEOF(..night_shop_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _night_shop_sceneSegmentBssStart = .;
            build/scenes/shops/night_shop/night_shop_scene.o (.sbss)
            build/scenes/shops/night_shop/night_shop_scene.o (.scommon)
            build/scenes/shops/night_shop/night_shop_scene.o (.bss)
            build/scenes/shops/night_shop/night_shop_scene.o (COMMON)
        . = ALIGN(0x10);
        _night_shop_sceneSegmentBssEnd = .;
        _night_shop_sceneSegmentEnd = .;
    }
    _night_shop_sceneSegmentBssSize = ABSOLUTE( _night_shop_sceneSegmentBssEnd - _night_shop_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _night_shop_room_0SegmentRomStart = _RomSize;
    ..night_shop_room_0 0x03000000 : AT(_RomSize)
    {
        _night_shop_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _night_shop_room_0SegmentTextStart = .;
            build/scenes/shops/night_shop/night_shop_room_0.o (.text)
        _night_shop_room_0SegmentTextEnd = .;
    _night_shop_room_0SegmentTextSize = ABSOLUTE( _night_shop_room_0SegmentTextEnd - _night_shop_room_0SegmentTextStart );
        _night_shop_room_0SegmentDataStart = .;
            build/scenes/shops/night_shop/night_shop_room_0.o (.data)
        _night_shop_room_0SegmentDataEnd = .;
    _night_shop_room_0SegmentDataSize = ABSOLUTE( _night_shop_room_0SegmentDataEnd - _night_shop_room_0SegmentDataStart );
        _night_shop_room_0SegmentRoDataStart = .;
            build/scenes/shops/night_shop/night_shop_room_0.o (.rodata)
        _night_shop_room_0SegmentRoDataEnd = .;
    _night_shop_room_0SegmentRoDataSize = ABSOLUTE( _night_shop_room_0SegmentRoDataEnd - _night_shop_room_0SegmentRoDataStart );
        _night_shop_room_0SegmentSDataStart = .;
            build/scenes/shops/night_shop/night_shop_room_0.o (.sdata)
        . = ALIGN(0x10);
        _night_shop_room_0SegmentSDataEnd = .;
        _night_shop_room_0SegmentOvlStart = .;
            build/scenes/shops/night_shop/night_shop_room_0.o (.ovl)
        . = ALIGN(0x10);
        _night_shop_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _night_shop_room_0SegmentOvlEnd - _night_shop_room_0SegmentTextStart );
    _night_shop_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..night_shop_room_0.bss ADDR(..night_shop_room_0) + SIZEOF(..night_shop_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _night_shop_room_0SegmentBssStart = .;
            build/scenes/shops/night_shop/night_shop_room_0.o (.sbss)
            build/scenes/shops/night_shop/night_shop_room_0.o (.scommon)
            build/scenes/shops/night_shop/night_shop_room_0.o (.bss)
            build/scenes/shops/night_shop/night_shop_room_0.o (COMMON)
        . = ALIGN(0x10);
        _night_shop_room_0SegmentBssEnd = .;
        _night_shop_room_0SegmentEnd = .;
    }
    _night_shop_room_0SegmentBssSize = ABSOLUTE( _night_shop_room_0SegmentBssEnd - _night_shop_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _impa_sceneSegmentRomStart = _RomSize;
    ..impa_scene 0x02000000 : AT(_RomSize)
    {
        _impa_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _impa_sceneSegmentTextStart = .;
            build/scenes/indoors/impa/impa_scene.o (.text)
        _impa_sceneSegmentTextEnd = .;
    _impa_sceneSegmentTextSize = ABSOLUTE( _impa_sceneSegmentTextEnd - _impa_sceneSegmentTextStart );
        _impa_sceneSegmentDataStart = .;
            build/scenes/indoors/impa/impa_scene.o (.data)
        _impa_sceneSegmentDataEnd = .;
    _impa_sceneSegmentDataSize = ABSOLUTE( _impa_sceneSegmentDataEnd - _impa_sceneSegmentDataStart );
        _impa_sceneSegmentRoDataStart = .;
            build/scenes/indoors/impa/impa_scene.o (.rodata)
        _impa_sceneSegmentRoDataEnd = .;
    _impa_sceneSegmentRoDataSize = ABSOLUTE( _impa_sceneSegmentRoDataEnd - _impa_sceneSegmentRoDataStart );
        _impa_sceneSegmentSDataStart = .;
            build/scenes/indoors/impa/impa_scene.o (.sdata)
        . = ALIGN(0x10);
        _impa_sceneSegmentSDataEnd = .;
        _impa_sceneSegmentOvlStart = .;
            build/scenes/indoors/impa/impa_scene.o (.ovl)
        . = ALIGN(0x10);
        _impa_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _impa_sceneSegmentOvlEnd - _impa_sceneSegmentTextStart );
    _impa_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..impa_scene.bss ADDR(..impa_scene) + SIZEOF(..impa_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _impa_sceneSegmentBssStart = .;
            build/scenes/indoors/impa/impa_scene.o (.sbss)
            build/scenes/indoors/impa/impa_scene.o (.scommon)
            build/scenes/indoors/impa/impa_scene.o (.bss)
            build/scenes/indoors/impa/impa_scene.o (COMMON)
        . = ALIGN(0x10);
        _impa_sceneSegmentBssEnd = .;
        _impa_sceneSegmentEnd = .;
    }
    _impa_sceneSegmentBssSize = ABSOLUTE( _impa_sceneSegmentBssEnd - _impa_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _impa_room_0SegmentRomStart = _RomSize;
    ..impa_room_0 0x03000000 : AT(_RomSize)
    {
        _impa_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _impa_room_0SegmentTextStart = .;
            build/scenes/indoors/impa/impa_room_0.o (.text)
        _impa_room_0SegmentTextEnd = .;
    _impa_room_0SegmentTextSize = ABSOLUTE( _impa_room_0SegmentTextEnd - _impa_room_0SegmentTextStart );
        _impa_room_0SegmentDataStart = .;
            build/scenes/indoors/impa/impa_room_0.o (.data)
        _impa_room_0SegmentDataEnd = .;
    _impa_room_0SegmentDataSize = ABSOLUTE( _impa_room_0SegmentDataEnd - _impa_room_0SegmentDataStart );
        _impa_room_0SegmentRoDataStart = .;
            build/scenes/indoors/impa/impa_room_0.o (.rodata)
        _impa_room_0SegmentRoDataEnd = .;
    _impa_room_0SegmentRoDataSize = ABSOLUTE( _impa_room_0SegmentRoDataEnd - _impa_room_0SegmentRoDataStart );
        _impa_room_0SegmentSDataStart = .;
            build/scenes/indoors/impa/impa_room_0.o (.sdata)
        . = ALIGN(0x10);
        _impa_room_0SegmentSDataEnd = .;
        _impa_room_0SegmentOvlStart = .;
            build/scenes/indoors/impa/impa_room_0.o (.ovl)
        . = ALIGN(0x10);
        _impa_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _impa_room_0SegmentOvlEnd - _impa_room_0SegmentTextStart );
    _impa_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..impa_room_0.bss ADDR(..impa_room_0) + SIZEOF(..impa_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _impa_room_0SegmentBssStart = .;
            build/scenes/indoors/impa/impa_room_0.o (.sbss)
            build/scenes/indoors/impa/impa_room_0.o (.scommon)
            build/scenes/indoors/impa/impa_room_0.o (.bss)
            build/scenes/indoors/impa/impa_room_0.o (COMMON)
        . = ALIGN(0x10);
        _impa_room_0SegmentBssEnd = .;
        _impa_room_0SegmentEnd = .;
    }
    _impa_room_0SegmentBssSize = ABSOLUTE( _impa_room_0SegmentBssEnd - _impa_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _labo_sceneSegmentRomStart = _RomSize;
    ..labo_scene 0x02000000 : AT(_RomSize)
    {
        _labo_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _labo_sceneSegmentTextStart = .;
            build/scenes/indoors/labo/labo_scene.o (.text)
        _labo_sceneSegmentTextEnd = .;
    _labo_sceneSegmentTextSize = ABSOLUTE( _labo_sceneSegmentTextEnd - _labo_sceneSegmentTextStart );
        _labo_sceneSegmentDataStart = .;
            build/scenes/indoors/labo/labo_scene.o (.data)
        _labo_sceneSegmentDataEnd = .;
    _labo_sceneSegmentDataSize = ABSOLUTE( _labo_sceneSegmentDataEnd - _labo_sceneSegmentDataStart );
        _labo_sceneSegmentRoDataStart = .;
            build/scenes/indoors/labo/labo_scene.o (.rodata)
        _labo_sceneSegmentRoDataEnd = .;
    _labo_sceneSegmentRoDataSize = ABSOLUTE( _labo_sceneSegmentRoDataEnd - _labo_sceneSegmentRoDataStart );
        _labo_sceneSegmentSDataStart = .;
            build/scenes/indoors/labo/labo_scene.o (.sdata)
        . = ALIGN(0x10);
        _labo_sceneSegmentSDataEnd = .;
        _labo_sceneSegmentOvlStart = .;
            build/scenes/indoors/labo/labo_scene.o (.ovl)
        . = ALIGN(0x10);
        _labo_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _labo_sceneSegmentOvlEnd - _labo_sceneSegmentTextStart );
    _labo_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..labo_scene.bss ADDR(..labo_scene) + SIZEOF(..labo_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _labo_sceneSegmentBssStart = .;
            build/scenes/indoors/labo/labo_scene.o (.sbss)
            build/scenes/indoors/labo/labo_scene.o (.scommon)
            build/scenes/indoors/labo/labo_scene.o (.bss)
            build/scenes/indoors/labo/labo_scene.o (COMMON)
        . = ALIGN(0x10);
        _labo_sceneSegmentBssEnd = .;
        _labo_sceneSegmentEnd = .;
    }
    _labo_sceneSegmentBssSize = ABSOLUTE( _labo_sceneSegmentBssEnd - _labo_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _labo_room_0SegmentRomStart = _RomSize;
    ..labo_room_0 0x03000000 : AT(_RomSize)
    {
        _labo_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _labo_room_0SegmentTextStart = .;
            build/scenes/indoors/labo/labo_room_0.o (.text)
        _labo_room_0SegmentTextEnd = .;
    _labo_room_0SegmentTextSize = ABSOLUTE( _labo_room_0SegmentTextEnd - _labo_room_0SegmentTextStart );
        _labo_room_0SegmentDataStart = .;
            build/scenes/indoors/labo/labo_room_0.o (.data)
        _labo_room_0SegmentDataEnd = .;
    _labo_room_0SegmentDataSize = ABSOLUTE( _labo_room_0SegmentDataEnd - _labo_room_0SegmentDataStart );
        _labo_room_0SegmentRoDataStart = .;
            build/scenes/indoors/labo/labo_room_0.o (.rodata)
        _labo_room_0SegmentRoDataEnd = .;
    _labo_room_0SegmentRoDataSize = ABSOLUTE( _labo_room_0SegmentRoDataEnd - _labo_room_0SegmentRoDataStart );
        _labo_room_0SegmentSDataStart = .;
            build/scenes/indoors/labo/labo_room_0.o (.sdata)
        . = ALIGN(0x10);
        _labo_room_0SegmentSDataEnd = .;
        _labo_room_0SegmentOvlStart = .;
            build/scenes/indoors/labo/labo_room_0.o (.ovl)
        . = ALIGN(0x10);
        _labo_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _labo_room_0SegmentOvlEnd - _labo_room_0SegmentTextStart );
    _labo_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..labo_room_0.bss ADDR(..labo_room_0) + SIZEOF(..labo_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _labo_room_0SegmentBssStart = .;
            build/scenes/indoors/labo/labo_room_0.o (.sbss)
            build/scenes/indoors/labo/labo_room_0.o (.scommon)
            build/scenes/indoors/labo/labo_room_0.o (.bss)
            build/scenes/indoors/labo/labo_room_0.o (COMMON)
        . = ALIGN(0x10);
        _labo_room_0SegmentBssEnd = .;
        _labo_room_0SegmentEnd = .;
    }
    _labo_room_0SegmentBssSize = ABSOLUTE( _labo_room_0SegmentBssEnd - _labo_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _tent_sceneSegmentRomStart = _RomSize;
    ..tent_scene 0x02000000 : AT(_RomSize)
    {
        _tent_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _tent_sceneSegmentTextStart = .;
            build/scenes/indoors/tent/tent_scene.o (.text)
        _tent_sceneSegmentTextEnd = .;
    _tent_sceneSegmentTextSize = ABSOLUTE( _tent_sceneSegmentTextEnd - _tent_sceneSegmentTextStart );
        _tent_sceneSegmentDataStart = .;
            build/scenes/indoors/tent/tent_scene.o (.data)
        _tent_sceneSegmentDataEnd = .;
    _tent_sceneSegmentDataSize = ABSOLUTE( _tent_sceneSegmentDataEnd - _tent_sceneSegmentDataStart );
        _tent_sceneSegmentRoDataStart = .;
            build/scenes/indoors/tent/tent_scene.o (.rodata)
        _tent_sceneSegmentRoDataEnd = .;
    _tent_sceneSegmentRoDataSize = ABSOLUTE( _tent_sceneSegmentRoDataEnd - _tent_sceneSegmentRoDataStart );
        _tent_sceneSegmentSDataStart = .;
            build/scenes/indoors/tent/tent_scene.o (.sdata)
        . = ALIGN(0x10);
        _tent_sceneSegmentSDataEnd = .;
        _tent_sceneSegmentOvlStart = .;
            build/scenes/indoors/tent/tent_scene.o (.ovl)
        . = ALIGN(0x10);
        _tent_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _tent_sceneSegmentOvlEnd - _tent_sceneSegmentTextStart );
    _tent_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..tent_scene.bss ADDR(..tent_scene) + SIZEOF(..tent_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _tent_sceneSegmentBssStart = .;
            build/scenes/indoors/tent/tent_scene.o (.sbss)
            build/scenes/indoors/tent/tent_scene.o (.scommon)
            build/scenes/indoors/tent/tent_scene.o (.bss)
            build/scenes/indoors/tent/tent_scene.o (COMMON)
        . = ALIGN(0x10);
        _tent_sceneSegmentBssEnd = .;
        _tent_sceneSegmentEnd = .;
    }
    _tent_sceneSegmentBssSize = ABSOLUTE( _tent_sceneSegmentBssEnd - _tent_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _tent_room_0SegmentRomStart = _RomSize;
    ..tent_room_0 0x03000000 : AT(_RomSize)
    {
        _tent_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _tent_room_0SegmentTextStart = .;
            build/scenes/indoors/tent/tent_room_0.o (.text)
        _tent_room_0SegmentTextEnd = .;
    _tent_room_0SegmentTextSize = ABSOLUTE( _tent_room_0SegmentTextEnd - _tent_room_0SegmentTextStart );
        _tent_room_0SegmentDataStart = .;
            build/scenes/indoors/tent/tent_room_0.o (.data)
        _tent_room_0SegmentDataEnd = .;
    _tent_room_0SegmentDataSize = ABSOLUTE( _tent_room_0SegmentDataEnd - _tent_room_0SegmentDataStart );
        _tent_room_0SegmentRoDataStart = .;
            build/scenes/indoors/tent/tent_room_0.o (.rodata)
        _tent_room_0SegmentRoDataEnd = .;
    _tent_room_0SegmentRoDataSize = ABSOLUTE( _tent_room_0SegmentRoDataEnd - _tent_room_0SegmentRoDataStart );
        _tent_room_0SegmentSDataStart = .;
            build/scenes/indoors/tent/tent_room_0.o (.sdata)
        . = ALIGN(0x10);
        _tent_room_0SegmentSDataEnd = .;
        _tent_room_0SegmentOvlStart = .;
            build/scenes/indoors/tent/tent_room_0.o (.ovl)
        . = ALIGN(0x10);
        _tent_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _tent_room_0SegmentOvlEnd - _tent_room_0SegmentTextStart );
    _tent_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..tent_room_0.bss ADDR(..tent_room_0) + SIZEOF(..tent_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _tent_room_0SegmentBssStart = .;
            build/scenes/indoors/tent/tent_room_0.o (.sbss)
            build/scenes/indoors/tent/tent_room_0.o (.scommon)
            build/scenes/indoors/tent/tent_room_0.o (.bss)
            build/scenes/indoors/tent/tent_room_0.o (COMMON)
        . = ALIGN(0x10);
        _tent_room_0SegmentBssEnd = .;
        _tent_room_0SegmentEnd = .;
    }
    _tent_room_0SegmentBssSize = ABSOLUTE( _tent_room_0SegmentBssEnd - _tent_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _nakaniwa_sceneSegmentRomStart = _RomSize;
    ..nakaniwa_scene 0x02000000 : AT(_RomSize)
    {
        _nakaniwa_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _nakaniwa_sceneSegmentTextStart = .;
            build/scenes/indoors/nakaniwa/nakaniwa_scene.o (.text)
        _nakaniwa_sceneSegmentTextEnd = .;
    _nakaniwa_sceneSegmentTextSize = ABSOLUTE( _nakaniwa_sceneSegmentTextEnd - _nakaniwa_sceneSegmentTextStart );
        _nakaniwa_sceneSegmentDataStart = .;
            build/scenes/indoors/nakaniwa/nakaniwa_scene.o (.data)
        _nakaniwa_sceneSegmentDataEnd = .;
    _nakaniwa_sceneSegmentDataSize = ABSOLUTE( _nakaniwa_sceneSegmentDataEnd - _nakaniwa_sceneSegmentDataStart );
        _nakaniwa_sceneSegmentRoDataStart = .;
            build/scenes/indoors/nakaniwa/nakaniwa_scene.o (.rodata)
        _nakaniwa_sceneSegmentRoDataEnd = .;
    _nakaniwa_sceneSegmentRoDataSize = ABSOLUTE( _nakaniwa_sceneSegmentRoDataEnd - _nakaniwa_sceneSegmentRoDataStart );
        _nakaniwa_sceneSegmentSDataStart = .;
            build/scenes/indoors/nakaniwa/nakaniwa_scene.o (.sdata)
        . = ALIGN(0x10);
        _nakaniwa_sceneSegmentSDataEnd = .;
        _nakaniwa_sceneSegmentOvlStart = .;
            build/scenes/indoors/nakaniwa/nakaniwa_scene.o (.ovl)
        . = ALIGN(0x10);
        _nakaniwa_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _nakaniwa_sceneSegmentOvlEnd - _nakaniwa_sceneSegmentTextStart );
    _nakaniwa_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..nakaniwa_scene.bss ADDR(..nakaniwa_scene) + SIZEOF(..nakaniwa_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _nakaniwa_sceneSegmentBssStart = .;
            build/scenes/indoors/nakaniwa/nakaniwa_scene.o (.sbss)
            build/scenes/indoors/nakaniwa/nakaniwa_scene.o (.scommon)
            build/scenes/indoors/nakaniwa/nakaniwa_scene.o (.bss)
            build/scenes/indoors/nakaniwa/nakaniwa_scene.o (COMMON)
        . = ALIGN(0x10);
        _nakaniwa_sceneSegmentBssEnd = .;
        _nakaniwa_sceneSegmentEnd = .;
    }
    _nakaniwa_sceneSegmentBssSize = ABSOLUTE( _nakaniwa_sceneSegmentBssEnd - _nakaniwa_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _nakaniwa_room_0SegmentRomStart = _RomSize;
    ..nakaniwa_room_0 0x03000000 : AT(_RomSize)
    {
        _nakaniwa_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _nakaniwa_room_0SegmentTextStart = .;
            build/scenes/indoors/nakaniwa/nakaniwa_room_0.o (.text)
        _nakaniwa_room_0SegmentTextEnd = .;
    _nakaniwa_room_0SegmentTextSize = ABSOLUTE( _nakaniwa_room_0SegmentTextEnd - _nakaniwa_room_0SegmentTextStart );
        _nakaniwa_room_0SegmentDataStart = .;
            build/scenes/indoors/nakaniwa/nakaniwa_room_0.o (.data)
        _nakaniwa_room_0SegmentDataEnd = .;
    _nakaniwa_room_0SegmentDataSize = ABSOLUTE( _nakaniwa_room_0SegmentDataEnd - _nakaniwa_room_0SegmentDataStart );
        _nakaniwa_room_0SegmentRoDataStart = .;
            build/scenes/indoors/nakaniwa/nakaniwa_room_0.o (.rodata)
        _nakaniwa_room_0SegmentRoDataEnd = .;
    _nakaniwa_room_0SegmentRoDataSize = ABSOLUTE( _nakaniwa_room_0SegmentRoDataEnd - _nakaniwa_room_0SegmentRoDataStart );
        _nakaniwa_room_0SegmentSDataStart = .;
            build/scenes/indoors/nakaniwa/nakaniwa_room_0.o (.sdata)
        . = ALIGN(0x10);
        _nakaniwa_room_0SegmentSDataEnd = .;
        _nakaniwa_room_0SegmentOvlStart = .;
            build/scenes/indoors/nakaniwa/nakaniwa_room_0.o (.ovl)
        . = ALIGN(0x10);
        _nakaniwa_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _nakaniwa_room_0SegmentOvlEnd - _nakaniwa_room_0SegmentTextStart );
    _nakaniwa_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..nakaniwa_room_0.bss ADDR(..nakaniwa_room_0) + SIZEOF(..nakaniwa_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _nakaniwa_room_0SegmentBssStart = .;
            build/scenes/indoors/nakaniwa/nakaniwa_room_0.o (.sbss)
            build/scenes/indoors/nakaniwa/nakaniwa_room_0.o (.scommon)
            build/scenes/indoors/nakaniwa/nakaniwa_room_0.o (.bss)
            build/scenes/indoors/nakaniwa/nakaniwa_room_0.o (COMMON)
        . = ALIGN(0x10);
        _nakaniwa_room_0SegmentBssEnd = .;
        _nakaniwa_room_0SegmentEnd = .;
    }
    _nakaniwa_room_0SegmentBssSize = ABSOLUTE( _nakaniwa_room_0SegmentBssEnd - _nakaniwa_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_boss_sceneSegmentRomStart = _RomSize;
    ..ddan_boss_scene 0x02000000 : AT(_RomSize)
    {
        _ddan_boss_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _ddan_boss_sceneSegmentTextStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_scene.o (.text)
        _ddan_boss_sceneSegmentTextEnd = .;
    _ddan_boss_sceneSegmentTextSize = ABSOLUTE( _ddan_boss_sceneSegmentTextEnd - _ddan_boss_sceneSegmentTextStart );
        _ddan_boss_sceneSegmentDataStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_scene.o (.data)
        _ddan_boss_sceneSegmentDataEnd = .;
    _ddan_boss_sceneSegmentDataSize = ABSOLUTE( _ddan_boss_sceneSegmentDataEnd - _ddan_boss_sceneSegmentDataStart );
        _ddan_boss_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_scene.o (.rodata)
        _ddan_boss_sceneSegmentRoDataEnd = .;
    _ddan_boss_sceneSegmentRoDataSize = ABSOLUTE( _ddan_boss_sceneSegmentRoDataEnd - _ddan_boss_sceneSegmentRoDataStart );
        _ddan_boss_sceneSegmentSDataStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_scene.o (.sdata)
        . = ALIGN(0x10);
        _ddan_boss_sceneSegmentSDataEnd = .;
        _ddan_boss_sceneSegmentOvlStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_scene.o (.ovl)
        . = ALIGN(0x10);
        _ddan_boss_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_boss_sceneSegmentOvlEnd - _ddan_boss_sceneSegmentTextStart );
    _ddan_boss_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_boss_scene.bss ADDR(..ddan_boss_scene) + SIZEOF(..ddan_boss_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_boss_sceneSegmentBssStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_scene.o (.sbss)
            build/scenes/dungeons/ddan_boss/ddan_boss_scene.o (.scommon)
            build/scenes/dungeons/ddan_boss/ddan_boss_scene.o (.bss)
            build/scenes/dungeons/ddan_boss/ddan_boss_scene.o (COMMON)
        . = ALIGN(0x10);
        _ddan_boss_sceneSegmentBssEnd = .;
        _ddan_boss_sceneSegmentEnd = .;
    }
    _ddan_boss_sceneSegmentBssSize = ABSOLUTE( _ddan_boss_sceneSegmentBssEnd - _ddan_boss_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_boss_room_0SegmentRomStart = _RomSize;
    ..ddan_boss_room_0 0x03000000 : AT(_RomSize)
    {
        _ddan_boss_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_boss_room_0SegmentTextStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_room_0.o (.text)
        _ddan_boss_room_0SegmentTextEnd = .;
    _ddan_boss_room_0SegmentTextSize = ABSOLUTE( _ddan_boss_room_0SegmentTextEnd - _ddan_boss_room_0SegmentTextStart );
        _ddan_boss_room_0SegmentDataStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_room_0.o (.data)
        _ddan_boss_room_0SegmentDataEnd = .;
    _ddan_boss_room_0SegmentDataSize = ABSOLUTE( _ddan_boss_room_0SegmentDataEnd - _ddan_boss_room_0SegmentDataStart );
        _ddan_boss_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_room_0.o (.rodata)
        _ddan_boss_room_0SegmentRoDataEnd = .;
    _ddan_boss_room_0SegmentRoDataSize = ABSOLUTE( _ddan_boss_room_0SegmentRoDataEnd - _ddan_boss_room_0SegmentRoDataStart );
        _ddan_boss_room_0SegmentSDataStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_room_0.o (.sdata)
        . = ALIGN(0x10);
        _ddan_boss_room_0SegmentSDataEnd = .;
        _ddan_boss_room_0SegmentOvlStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_room_0.o (.ovl)
        . = ALIGN(0x10);
        _ddan_boss_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_boss_room_0SegmentOvlEnd - _ddan_boss_room_0SegmentTextStart );
    _ddan_boss_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_boss_room_0.bss ADDR(..ddan_boss_room_0) + SIZEOF(..ddan_boss_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_boss_room_0SegmentBssStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_room_0.o (.sbss)
            build/scenes/dungeons/ddan_boss/ddan_boss_room_0.o (.scommon)
            build/scenes/dungeons/ddan_boss/ddan_boss_room_0.o (.bss)
            build/scenes/dungeons/ddan_boss/ddan_boss_room_0.o (COMMON)
        . = ALIGN(0x10);
        _ddan_boss_room_0SegmentBssEnd = .;
        _ddan_boss_room_0SegmentEnd = .;
    }
    _ddan_boss_room_0SegmentBssSize = ABSOLUTE( _ddan_boss_room_0SegmentBssEnd - _ddan_boss_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ddan_boss_room_1SegmentRomStart = _RomSize;
    ..ddan_boss_room_1 0x03000000 : AT(_RomSize)
    {
        _ddan_boss_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _ddan_boss_room_1SegmentTextStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_room_1.o (.text)
        _ddan_boss_room_1SegmentTextEnd = .;
    _ddan_boss_room_1SegmentTextSize = ABSOLUTE( _ddan_boss_room_1SegmentTextEnd - _ddan_boss_room_1SegmentTextStart );
        _ddan_boss_room_1SegmentDataStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_room_1.o (.data)
        _ddan_boss_room_1SegmentDataEnd = .;
    _ddan_boss_room_1SegmentDataSize = ABSOLUTE( _ddan_boss_room_1SegmentDataEnd - _ddan_boss_room_1SegmentDataStart );
        _ddan_boss_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_room_1.o (.rodata)
        _ddan_boss_room_1SegmentRoDataEnd = .;
    _ddan_boss_room_1SegmentRoDataSize = ABSOLUTE( _ddan_boss_room_1SegmentRoDataEnd - _ddan_boss_room_1SegmentRoDataStart );
        _ddan_boss_room_1SegmentSDataStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_room_1.o (.sdata)
        . = ALIGN(0x10);
        _ddan_boss_room_1SegmentSDataEnd = .;
        _ddan_boss_room_1SegmentOvlStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_room_1.o (.ovl)
        . = ALIGN(0x10);
        _ddan_boss_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _ddan_boss_room_1SegmentOvlEnd - _ddan_boss_room_1SegmentTextStart );
    _ddan_boss_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ddan_boss_room_1.bss ADDR(..ddan_boss_room_1) + SIZEOF(..ddan_boss_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ddan_boss_room_1SegmentBssStart = .;
            build/scenes/dungeons/ddan_boss/ddan_boss_room_1.o (.sbss)
            build/scenes/dungeons/ddan_boss/ddan_boss_room_1.o (.scommon)
            build/scenes/dungeons/ddan_boss/ddan_boss_room_1.o (.bss)
            build/scenes/dungeons/ddan_boss/ddan_boss_room_1.o (COMMON)
        . = ALIGN(0x10);
        _ddan_boss_room_1SegmentBssEnd = .;
        _ddan_boss_room_1SegmentEnd = .;
    }
    _ddan_boss_room_1SegmentBssSize = ABSOLUTE( _ddan_boss_room_1SegmentBssEnd - _ddan_boss_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_boss_sceneSegmentRomStart = _RomSize;
    ..ydan_boss_scene 0x02000000 : AT(_RomSize)
    {
        _ydan_boss_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _ydan_boss_sceneSegmentTextStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_scene.o (.text)
        _ydan_boss_sceneSegmentTextEnd = .;
    _ydan_boss_sceneSegmentTextSize = ABSOLUTE( _ydan_boss_sceneSegmentTextEnd - _ydan_boss_sceneSegmentTextStart );
        _ydan_boss_sceneSegmentDataStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_scene.o (.data)
        _ydan_boss_sceneSegmentDataEnd = .;
    _ydan_boss_sceneSegmentDataSize = ABSOLUTE( _ydan_boss_sceneSegmentDataEnd - _ydan_boss_sceneSegmentDataStart );
        _ydan_boss_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_scene.o (.rodata)
        _ydan_boss_sceneSegmentRoDataEnd = .;
    _ydan_boss_sceneSegmentRoDataSize = ABSOLUTE( _ydan_boss_sceneSegmentRoDataEnd - _ydan_boss_sceneSegmentRoDataStart );
        _ydan_boss_sceneSegmentSDataStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_scene.o (.sdata)
        . = ALIGN(0x10);
        _ydan_boss_sceneSegmentSDataEnd = .;
        _ydan_boss_sceneSegmentOvlStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_scene.o (.ovl)
        . = ALIGN(0x10);
        _ydan_boss_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_boss_sceneSegmentOvlEnd - _ydan_boss_sceneSegmentTextStart );
    _ydan_boss_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_boss_scene.bss ADDR(..ydan_boss_scene) + SIZEOF(..ydan_boss_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_boss_sceneSegmentBssStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_scene.o (.sbss)
            build/scenes/dungeons/ydan_boss/ydan_boss_scene.o (.scommon)
            build/scenes/dungeons/ydan_boss/ydan_boss_scene.o (.bss)
            build/scenes/dungeons/ydan_boss/ydan_boss_scene.o (COMMON)
        . = ALIGN(0x10);
        _ydan_boss_sceneSegmentBssEnd = .;
        _ydan_boss_sceneSegmentEnd = .;
    }
    _ydan_boss_sceneSegmentBssSize = ABSOLUTE( _ydan_boss_sceneSegmentBssEnd - _ydan_boss_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_boss_room_0SegmentRomStart = _RomSize;
    ..ydan_boss_room_0 0x03000000 : AT(_RomSize)
    {
        _ydan_boss_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _ydan_boss_room_0SegmentTextStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_room_0.o (.text)
        _ydan_boss_room_0SegmentTextEnd = .;
    _ydan_boss_room_0SegmentTextSize = ABSOLUTE( _ydan_boss_room_0SegmentTextEnd - _ydan_boss_room_0SegmentTextStart );
        _ydan_boss_room_0SegmentDataStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_room_0.o (.data)
        _ydan_boss_room_0SegmentDataEnd = .;
    _ydan_boss_room_0SegmentDataSize = ABSOLUTE( _ydan_boss_room_0SegmentDataEnd - _ydan_boss_room_0SegmentDataStart );
        _ydan_boss_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_room_0.o (.rodata)
        _ydan_boss_room_0SegmentRoDataEnd = .;
    _ydan_boss_room_0SegmentRoDataSize = ABSOLUTE( _ydan_boss_room_0SegmentRoDataEnd - _ydan_boss_room_0SegmentRoDataStart );
        _ydan_boss_room_0SegmentSDataStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_room_0.o (.sdata)
        . = ALIGN(0x10);
        _ydan_boss_room_0SegmentSDataEnd = .;
        _ydan_boss_room_0SegmentOvlStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_room_0.o (.ovl)
        . = ALIGN(0x10);
        _ydan_boss_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_boss_room_0SegmentOvlEnd - _ydan_boss_room_0SegmentTextStart );
    _ydan_boss_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_boss_room_0.bss ADDR(..ydan_boss_room_0) + SIZEOF(..ydan_boss_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_boss_room_0SegmentBssStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_room_0.o (.sbss)
            build/scenes/dungeons/ydan_boss/ydan_boss_room_0.o (.scommon)
            build/scenes/dungeons/ydan_boss/ydan_boss_room_0.o (.bss)
            build/scenes/dungeons/ydan_boss/ydan_boss_room_0.o (COMMON)
        . = ALIGN(0x10);
        _ydan_boss_room_0SegmentBssEnd = .;
        _ydan_boss_room_0SegmentEnd = .;
    }
    _ydan_boss_room_0SegmentBssSize = ABSOLUTE( _ydan_boss_room_0SegmentBssEnd - _ydan_boss_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ydan_boss_room_1SegmentRomStart = _RomSize;
    ..ydan_boss_room_1 0x03000000 : AT(_RomSize)
    {
        _ydan_boss_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _ydan_boss_room_1SegmentTextStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_room_1.o (.text)
        _ydan_boss_room_1SegmentTextEnd = .;
    _ydan_boss_room_1SegmentTextSize = ABSOLUTE( _ydan_boss_room_1SegmentTextEnd - _ydan_boss_room_1SegmentTextStart );
        _ydan_boss_room_1SegmentDataStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_room_1.o (.data)
        _ydan_boss_room_1SegmentDataEnd = .;
    _ydan_boss_room_1SegmentDataSize = ABSOLUTE( _ydan_boss_room_1SegmentDataEnd - _ydan_boss_room_1SegmentDataStart );
        _ydan_boss_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_room_1.o (.rodata)
        _ydan_boss_room_1SegmentRoDataEnd = .;
    _ydan_boss_room_1SegmentRoDataSize = ABSOLUTE( _ydan_boss_room_1SegmentRoDataEnd - _ydan_boss_room_1SegmentRoDataStart );
        _ydan_boss_room_1SegmentSDataStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_room_1.o (.sdata)
        . = ALIGN(0x10);
        _ydan_boss_room_1SegmentSDataEnd = .;
        _ydan_boss_room_1SegmentOvlStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_room_1.o (.ovl)
        . = ALIGN(0x10);
        _ydan_boss_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _ydan_boss_room_1SegmentOvlEnd - _ydan_boss_room_1SegmentTextStart );
    _ydan_boss_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ydan_boss_room_1.bss ADDR(..ydan_boss_room_1) + SIZEOF(..ydan_boss_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ydan_boss_room_1SegmentBssStart = .;
            build/scenes/dungeons/ydan_boss/ydan_boss_room_1.o (.sbss)
            build/scenes/dungeons/ydan_boss/ydan_boss_room_1.o (.scommon)
            build/scenes/dungeons/ydan_boss/ydan_boss_room_1.o (.bss)
            build/scenes/dungeons/ydan_boss/ydan_boss_room_1.o (COMMON)
        . = ALIGN(0x10);
        _ydan_boss_room_1SegmentBssEnd = .;
        _ydan_boss_room_1SegmentEnd = .;
    }
    _ydan_boss_room_1SegmentBssSize = ABSOLUTE( _ydan_boss_room_1SegmentBssEnd - _ydan_boss_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_bs_sceneSegmentRomStart = _RomSize;
    ..HAKAdan_bs_scene 0x02000000 : AT(_RomSize)
    {
        _HAKAdan_bs_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_bs_sceneSegmentTextStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_scene.o (.text)
        _HAKAdan_bs_sceneSegmentTextEnd = .;
    _HAKAdan_bs_sceneSegmentTextSize = ABSOLUTE( _HAKAdan_bs_sceneSegmentTextEnd - _HAKAdan_bs_sceneSegmentTextStart );
        _HAKAdan_bs_sceneSegmentDataStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_scene.o (.data)
        _HAKAdan_bs_sceneSegmentDataEnd = .;
    _HAKAdan_bs_sceneSegmentDataSize = ABSOLUTE( _HAKAdan_bs_sceneSegmentDataEnd - _HAKAdan_bs_sceneSegmentDataStart );
        _HAKAdan_bs_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_scene.o (.rodata)
        _HAKAdan_bs_sceneSegmentRoDataEnd = .;
    _HAKAdan_bs_sceneSegmentRoDataSize = ABSOLUTE( _HAKAdan_bs_sceneSegmentRoDataEnd - _HAKAdan_bs_sceneSegmentRoDataStart );
        _HAKAdan_bs_sceneSegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_scene.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_bs_sceneSegmentSDataEnd = .;
        _HAKAdan_bs_sceneSegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_scene.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_bs_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_bs_sceneSegmentOvlEnd - _HAKAdan_bs_sceneSegmentTextStart );
    _HAKAdan_bs_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_bs_scene.bss ADDR(..HAKAdan_bs_scene) + SIZEOF(..HAKAdan_bs_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_bs_sceneSegmentBssStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_scene.o (.sbss)
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_scene.o (.scommon)
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_scene.o (.bss)
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_scene.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_bs_sceneSegmentBssEnd = .;
        _HAKAdan_bs_sceneSegmentEnd = .;
    }
    _HAKAdan_bs_sceneSegmentBssSize = ABSOLUTE( _HAKAdan_bs_sceneSegmentBssEnd - _HAKAdan_bs_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_bs_room_0SegmentRomStart = _RomSize;
    ..HAKAdan_bs_room_0 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_bs_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_bs_room_0SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_0.o (.text)
        _HAKAdan_bs_room_0SegmentTextEnd = .;
    _HAKAdan_bs_room_0SegmentTextSize = ABSOLUTE( _HAKAdan_bs_room_0SegmentTextEnd - _HAKAdan_bs_room_0SegmentTextStart );
        _HAKAdan_bs_room_0SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_0.o (.data)
        _HAKAdan_bs_room_0SegmentDataEnd = .;
    _HAKAdan_bs_room_0SegmentDataSize = ABSOLUTE( _HAKAdan_bs_room_0SegmentDataEnd - _HAKAdan_bs_room_0SegmentDataStart );
        _HAKAdan_bs_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_0.o (.rodata)
        _HAKAdan_bs_room_0SegmentRoDataEnd = .;
    _HAKAdan_bs_room_0SegmentRoDataSize = ABSOLUTE( _HAKAdan_bs_room_0SegmentRoDataEnd - _HAKAdan_bs_room_0SegmentRoDataStart );
        _HAKAdan_bs_room_0SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_0.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_bs_room_0SegmentSDataEnd = .;
        _HAKAdan_bs_room_0SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_0.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_bs_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_bs_room_0SegmentOvlEnd - _HAKAdan_bs_room_0SegmentTextStart );
    _HAKAdan_bs_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_bs_room_0.bss ADDR(..HAKAdan_bs_room_0) + SIZEOF(..HAKAdan_bs_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_bs_room_0SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_0.o (.sbss)
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_0.o (.scommon)
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_0.o (.bss)
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_0.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_bs_room_0SegmentBssEnd = .;
        _HAKAdan_bs_room_0SegmentEnd = .;
    }
    _HAKAdan_bs_room_0SegmentBssSize = ABSOLUTE( _HAKAdan_bs_room_0SegmentBssEnd - _HAKAdan_bs_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _HAKAdan_bs_room_1SegmentRomStart = _RomSize;
    ..HAKAdan_bs_room_1 0x03000000 : AT(_RomSize)
    {
        _HAKAdan_bs_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _HAKAdan_bs_room_1SegmentTextStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_1.o (.text)
        _HAKAdan_bs_room_1SegmentTextEnd = .;
    _HAKAdan_bs_room_1SegmentTextSize = ABSOLUTE( _HAKAdan_bs_room_1SegmentTextEnd - _HAKAdan_bs_room_1SegmentTextStart );
        _HAKAdan_bs_room_1SegmentDataStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_1.o (.data)
        _HAKAdan_bs_room_1SegmentDataEnd = .;
    _HAKAdan_bs_room_1SegmentDataSize = ABSOLUTE( _HAKAdan_bs_room_1SegmentDataEnd - _HAKAdan_bs_room_1SegmentDataStart );
        _HAKAdan_bs_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_1.o (.rodata)
        _HAKAdan_bs_room_1SegmentRoDataEnd = .;
    _HAKAdan_bs_room_1SegmentRoDataSize = ABSOLUTE( _HAKAdan_bs_room_1SegmentRoDataEnd - _HAKAdan_bs_room_1SegmentRoDataStart );
        _HAKAdan_bs_room_1SegmentSDataStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_1.o (.sdata)
        . = ALIGN(0x10);
        _HAKAdan_bs_room_1SegmentSDataEnd = .;
        _HAKAdan_bs_room_1SegmentOvlStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_1.o (.ovl)
        . = ALIGN(0x10);
        _HAKAdan_bs_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _HAKAdan_bs_room_1SegmentOvlEnd - _HAKAdan_bs_room_1SegmentTextStart );
    _HAKAdan_bs_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..HAKAdan_bs_room_1.bss ADDR(..HAKAdan_bs_room_1) + SIZEOF(..HAKAdan_bs_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _HAKAdan_bs_room_1SegmentBssStart = .;
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_1.o (.sbss)
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_1.o (.scommon)
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_1.o (.bss)
            build/scenes/dungeons/HAKAdan_bs/HAKAdan_bs_room_1.o (COMMON)
        . = ALIGN(0x10);
        _HAKAdan_bs_room_1SegmentBssEnd = .;
        _HAKAdan_bs_room_1SegmentEnd = .;
    }
    _HAKAdan_bs_room_1SegmentBssSize = ABSOLUTE( _HAKAdan_bs_room_1SegmentBssEnd - _HAKAdan_bs_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_bs_sceneSegmentRomStart = _RomSize;
    ..MIZUsin_bs_scene 0x02000000 : AT(_RomSize)
    {
        _MIZUsin_bs_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_bs_sceneSegmentTextStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_scene.o (.text)
        _MIZUsin_bs_sceneSegmentTextEnd = .;
    _MIZUsin_bs_sceneSegmentTextSize = ABSOLUTE( _MIZUsin_bs_sceneSegmentTextEnd - _MIZUsin_bs_sceneSegmentTextStart );
        _MIZUsin_bs_sceneSegmentDataStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_scene.o (.data)
        _MIZUsin_bs_sceneSegmentDataEnd = .;
    _MIZUsin_bs_sceneSegmentDataSize = ABSOLUTE( _MIZUsin_bs_sceneSegmentDataEnd - _MIZUsin_bs_sceneSegmentDataStart );
        _MIZUsin_bs_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_scene.o (.rodata)
        _MIZUsin_bs_sceneSegmentRoDataEnd = .;
    _MIZUsin_bs_sceneSegmentRoDataSize = ABSOLUTE( _MIZUsin_bs_sceneSegmentRoDataEnd - _MIZUsin_bs_sceneSegmentRoDataStart );
        _MIZUsin_bs_sceneSegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_scene.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_bs_sceneSegmentSDataEnd = .;
        _MIZUsin_bs_sceneSegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_scene.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_bs_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_bs_sceneSegmentOvlEnd - _MIZUsin_bs_sceneSegmentTextStart );
    _MIZUsin_bs_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_bs_scene.bss ADDR(..MIZUsin_bs_scene) + SIZEOF(..MIZUsin_bs_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_bs_sceneSegmentBssStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_scene.o (.sbss)
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_scene.o (.scommon)
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_scene.o (.bss)
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_scene.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_bs_sceneSegmentBssEnd = .;
        _MIZUsin_bs_sceneSegmentEnd = .;
    }
    _MIZUsin_bs_sceneSegmentBssSize = ABSOLUTE( _MIZUsin_bs_sceneSegmentBssEnd - _MIZUsin_bs_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_bs_room_0SegmentRomStart = _RomSize;
    ..MIZUsin_bs_room_0 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_bs_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_bs_room_0SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_0.o (.text)
        _MIZUsin_bs_room_0SegmentTextEnd = .;
    _MIZUsin_bs_room_0SegmentTextSize = ABSOLUTE( _MIZUsin_bs_room_0SegmentTextEnd - _MIZUsin_bs_room_0SegmentTextStart );
        _MIZUsin_bs_room_0SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_0.o (.data)
        _MIZUsin_bs_room_0SegmentDataEnd = .;
    _MIZUsin_bs_room_0SegmentDataSize = ABSOLUTE( _MIZUsin_bs_room_0SegmentDataEnd - _MIZUsin_bs_room_0SegmentDataStart );
        _MIZUsin_bs_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_0.o (.rodata)
        _MIZUsin_bs_room_0SegmentRoDataEnd = .;
    _MIZUsin_bs_room_0SegmentRoDataSize = ABSOLUTE( _MIZUsin_bs_room_0SegmentRoDataEnd - _MIZUsin_bs_room_0SegmentRoDataStart );
        _MIZUsin_bs_room_0SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_0.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_bs_room_0SegmentSDataEnd = .;
        _MIZUsin_bs_room_0SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_0.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_bs_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_bs_room_0SegmentOvlEnd - _MIZUsin_bs_room_0SegmentTextStart );
    _MIZUsin_bs_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_bs_room_0.bss ADDR(..MIZUsin_bs_room_0) + SIZEOF(..MIZUsin_bs_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_bs_room_0SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_0.o (.sbss)
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_0.o (.scommon)
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_0.o (.bss)
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_0.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_bs_room_0SegmentBssEnd = .;
        _MIZUsin_bs_room_0SegmentEnd = .;
    }
    _MIZUsin_bs_room_0SegmentBssSize = ABSOLUTE( _MIZUsin_bs_room_0SegmentBssEnd - _MIZUsin_bs_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _MIZUsin_bs_room_1SegmentRomStart = _RomSize;
    ..MIZUsin_bs_room_1 0x03000000 : AT(_RomSize)
    {
        _MIZUsin_bs_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _MIZUsin_bs_room_1SegmentTextStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_1.o (.text)
        _MIZUsin_bs_room_1SegmentTextEnd = .;
    _MIZUsin_bs_room_1SegmentTextSize = ABSOLUTE( _MIZUsin_bs_room_1SegmentTextEnd - _MIZUsin_bs_room_1SegmentTextStart );
        _MIZUsin_bs_room_1SegmentDataStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_1.o (.data)
        _MIZUsin_bs_room_1SegmentDataEnd = .;
    _MIZUsin_bs_room_1SegmentDataSize = ABSOLUTE( _MIZUsin_bs_room_1SegmentDataEnd - _MIZUsin_bs_room_1SegmentDataStart );
        _MIZUsin_bs_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_1.o (.rodata)
        _MIZUsin_bs_room_1SegmentRoDataEnd = .;
    _MIZUsin_bs_room_1SegmentRoDataSize = ABSOLUTE( _MIZUsin_bs_room_1SegmentRoDataEnd - _MIZUsin_bs_room_1SegmentRoDataStart );
        _MIZUsin_bs_room_1SegmentSDataStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_1.o (.sdata)
        . = ALIGN(0x10);
        _MIZUsin_bs_room_1SegmentSDataEnd = .;
        _MIZUsin_bs_room_1SegmentOvlStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_1.o (.ovl)
        . = ALIGN(0x10);
        _MIZUsin_bs_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _MIZUsin_bs_room_1SegmentOvlEnd - _MIZUsin_bs_room_1SegmentTextStart );
    _MIZUsin_bs_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..MIZUsin_bs_room_1.bss ADDR(..MIZUsin_bs_room_1) + SIZEOF(..MIZUsin_bs_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _MIZUsin_bs_room_1SegmentBssStart = .;
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_1.o (.sbss)
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_1.o (.scommon)
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_1.o (.bss)
            build/scenes/dungeons/MIZUsin_bs/MIZUsin_bs_room_1.o (COMMON)
        . = ALIGN(0x10);
        _MIZUsin_bs_room_1SegmentBssEnd = .;
        _MIZUsin_bs_room_1SegmentEnd = .;
    }
    _MIZUsin_bs_room_1SegmentBssSize = ABSOLUTE( _MIZUsin_bs_room_1SegmentBssEnd - _MIZUsin_bs_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_sceneSegmentRomStart = _RomSize;
    ..ganon_scene 0x02000000 : AT(_RomSize)
    {
        _ganon_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _ganon_sceneSegmentTextStart = .;
            build/scenes/dungeons/ganon/ganon_scene.o (.text)
        _ganon_sceneSegmentTextEnd = .;
    _ganon_sceneSegmentTextSize = ABSOLUTE( _ganon_sceneSegmentTextEnd - _ganon_sceneSegmentTextStart );
        _ganon_sceneSegmentDataStart = .;
            build/scenes/dungeons/ganon/ganon_scene.o (.data)
        _ganon_sceneSegmentDataEnd = .;
    _ganon_sceneSegmentDataSize = ABSOLUTE( _ganon_sceneSegmentDataEnd - _ganon_sceneSegmentDataStart );
        _ganon_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/ganon/ganon_scene.o (.rodata)
        _ganon_sceneSegmentRoDataEnd = .;
    _ganon_sceneSegmentRoDataSize = ABSOLUTE( _ganon_sceneSegmentRoDataEnd - _ganon_sceneSegmentRoDataStart );
        _ganon_sceneSegmentSDataStart = .;
            build/scenes/dungeons/ganon/ganon_scene.o (.sdata)
        . = ALIGN(0x10);
        _ganon_sceneSegmentSDataEnd = .;
        _ganon_sceneSegmentOvlStart = .;
            build/scenes/dungeons/ganon/ganon_scene.o (.ovl)
        . = ALIGN(0x10);
        _ganon_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_sceneSegmentOvlEnd - _ganon_sceneSegmentTextStart );
    _ganon_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_scene.bss ADDR(..ganon_scene) + SIZEOF(..ganon_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_sceneSegmentBssStart = .;
            build/scenes/dungeons/ganon/ganon_scene.o (.sbss)
            build/scenes/dungeons/ganon/ganon_scene.o (.scommon)
            build/scenes/dungeons/ganon/ganon_scene.o (.bss)
            build/scenes/dungeons/ganon/ganon_scene.o (COMMON)
        . = ALIGN(0x10);
        _ganon_sceneSegmentBssEnd = .;
        _ganon_sceneSegmentEnd = .;
    }
    _ganon_sceneSegmentBssSize = ABSOLUTE( _ganon_sceneSegmentBssEnd - _ganon_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_room_0SegmentRomStart = _RomSize;
    ..ganon_room_0 0x03000000 : AT(_RomSize)
    {
        _ganon_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_room_0SegmentTextStart = .;
            build/scenes/dungeons/ganon/ganon_room_0.o (.text)
        _ganon_room_0SegmentTextEnd = .;
    _ganon_room_0SegmentTextSize = ABSOLUTE( _ganon_room_0SegmentTextEnd - _ganon_room_0SegmentTextStart );
        _ganon_room_0SegmentDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_0.o (.data)
        _ganon_room_0SegmentDataEnd = .;
    _ganon_room_0SegmentDataSize = ABSOLUTE( _ganon_room_0SegmentDataEnd - _ganon_room_0SegmentDataStart );
        _ganon_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_0.o (.rodata)
        _ganon_room_0SegmentRoDataEnd = .;
    _ganon_room_0SegmentRoDataSize = ABSOLUTE( _ganon_room_0SegmentRoDataEnd - _ganon_room_0SegmentRoDataStart );
        _ganon_room_0SegmentSDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_0.o (.sdata)
        . = ALIGN(0x10);
        _ganon_room_0SegmentSDataEnd = .;
        _ganon_room_0SegmentOvlStart = .;
            build/scenes/dungeons/ganon/ganon_room_0.o (.ovl)
        . = ALIGN(0x10);
        _ganon_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_room_0SegmentOvlEnd - _ganon_room_0SegmentTextStart );
    _ganon_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_room_0.bss ADDR(..ganon_room_0) + SIZEOF(..ganon_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_room_0SegmentBssStart = .;
            build/scenes/dungeons/ganon/ganon_room_0.o (.sbss)
            build/scenes/dungeons/ganon/ganon_room_0.o (.scommon)
            build/scenes/dungeons/ganon/ganon_room_0.o (.bss)
            build/scenes/dungeons/ganon/ganon_room_0.o (COMMON)
        . = ALIGN(0x10);
        _ganon_room_0SegmentBssEnd = .;
        _ganon_room_0SegmentEnd = .;
    }
    _ganon_room_0SegmentBssSize = ABSOLUTE( _ganon_room_0SegmentBssEnd - _ganon_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_room_1SegmentRomStart = _RomSize;
    ..ganon_room_1 0x03000000 : AT(_RomSize)
    {
        _ganon_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_room_1SegmentTextStart = .;
            build/scenes/dungeons/ganon/ganon_room_1.o (.text)
        _ganon_room_1SegmentTextEnd = .;
    _ganon_room_1SegmentTextSize = ABSOLUTE( _ganon_room_1SegmentTextEnd - _ganon_room_1SegmentTextStart );
        _ganon_room_1SegmentDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_1.o (.data)
        _ganon_room_1SegmentDataEnd = .;
    _ganon_room_1SegmentDataSize = ABSOLUTE( _ganon_room_1SegmentDataEnd - _ganon_room_1SegmentDataStart );
        _ganon_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_1.o (.rodata)
        _ganon_room_1SegmentRoDataEnd = .;
    _ganon_room_1SegmentRoDataSize = ABSOLUTE( _ganon_room_1SegmentRoDataEnd - _ganon_room_1SegmentRoDataStart );
        _ganon_room_1SegmentSDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_1.o (.sdata)
        . = ALIGN(0x10);
        _ganon_room_1SegmentSDataEnd = .;
        _ganon_room_1SegmentOvlStart = .;
            build/scenes/dungeons/ganon/ganon_room_1.o (.ovl)
        . = ALIGN(0x10);
        _ganon_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_room_1SegmentOvlEnd - _ganon_room_1SegmentTextStart );
    _ganon_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_room_1.bss ADDR(..ganon_room_1) + SIZEOF(..ganon_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_room_1SegmentBssStart = .;
            build/scenes/dungeons/ganon/ganon_room_1.o (.sbss)
            build/scenes/dungeons/ganon/ganon_room_1.o (.scommon)
            build/scenes/dungeons/ganon/ganon_room_1.o (.bss)
            build/scenes/dungeons/ganon/ganon_room_1.o (COMMON)
        . = ALIGN(0x10);
        _ganon_room_1SegmentBssEnd = .;
        _ganon_room_1SegmentEnd = .;
    }
    _ganon_room_1SegmentBssSize = ABSOLUTE( _ganon_room_1SegmentBssEnd - _ganon_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_room_2SegmentRomStart = _RomSize;
    ..ganon_room_2 0x03000000 : AT(_RomSize)
    {
        _ganon_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_room_2SegmentTextStart = .;
            build/scenes/dungeons/ganon/ganon_room_2.o (.text)
        _ganon_room_2SegmentTextEnd = .;
    _ganon_room_2SegmentTextSize = ABSOLUTE( _ganon_room_2SegmentTextEnd - _ganon_room_2SegmentTextStart );
        _ganon_room_2SegmentDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_2.o (.data)
        _ganon_room_2SegmentDataEnd = .;
    _ganon_room_2SegmentDataSize = ABSOLUTE( _ganon_room_2SegmentDataEnd - _ganon_room_2SegmentDataStart );
        _ganon_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_2.o (.rodata)
        _ganon_room_2SegmentRoDataEnd = .;
    _ganon_room_2SegmentRoDataSize = ABSOLUTE( _ganon_room_2SegmentRoDataEnd - _ganon_room_2SegmentRoDataStart );
        _ganon_room_2SegmentSDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_2.o (.sdata)
        . = ALIGN(0x10);
        _ganon_room_2SegmentSDataEnd = .;
        _ganon_room_2SegmentOvlStart = .;
            build/scenes/dungeons/ganon/ganon_room_2.o (.ovl)
        . = ALIGN(0x10);
        _ganon_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_room_2SegmentOvlEnd - _ganon_room_2SegmentTextStart );
    _ganon_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_room_2.bss ADDR(..ganon_room_2) + SIZEOF(..ganon_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_room_2SegmentBssStart = .;
            build/scenes/dungeons/ganon/ganon_room_2.o (.sbss)
            build/scenes/dungeons/ganon/ganon_room_2.o (.scommon)
            build/scenes/dungeons/ganon/ganon_room_2.o (.bss)
            build/scenes/dungeons/ganon/ganon_room_2.o (COMMON)
        . = ALIGN(0x10);
        _ganon_room_2SegmentBssEnd = .;
        _ganon_room_2SegmentEnd = .;
    }
    _ganon_room_2SegmentBssSize = ABSOLUTE( _ganon_room_2SegmentBssEnd - _ganon_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_room_3SegmentRomStart = _RomSize;
    ..ganon_room_3 0x03000000 : AT(_RomSize)
    {
        _ganon_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_room_3SegmentTextStart = .;
            build/scenes/dungeons/ganon/ganon_room_3.o (.text)
        _ganon_room_3SegmentTextEnd = .;
    _ganon_room_3SegmentTextSize = ABSOLUTE( _ganon_room_3SegmentTextEnd - _ganon_room_3SegmentTextStart );
        _ganon_room_3SegmentDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_3.o (.data)
        _ganon_room_3SegmentDataEnd = .;
    _ganon_room_3SegmentDataSize = ABSOLUTE( _ganon_room_3SegmentDataEnd - _ganon_room_3SegmentDataStart );
        _ganon_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_3.o (.rodata)
        _ganon_room_3SegmentRoDataEnd = .;
    _ganon_room_3SegmentRoDataSize = ABSOLUTE( _ganon_room_3SegmentRoDataEnd - _ganon_room_3SegmentRoDataStart );
        _ganon_room_3SegmentSDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_3.o (.sdata)
        . = ALIGN(0x10);
        _ganon_room_3SegmentSDataEnd = .;
        _ganon_room_3SegmentOvlStart = .;
            build/scenes/dungeons/ganon/ganon_room_3.o (.ovl)
        . = ALIGN(0x10);
        _ganon_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_room_3SegmentOvlEnd - _ganon_room_3SegmentTextStart );
    _ganon_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_room_3.bss ADDR(..ganon_room_3) + SIZEOF(..ganon_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_room_3SegmentBssStart = .;
            build/scenes/dungeons/ganon/ganon_room_3.o (.sbss)
            build/scenes/dungeons/ganon/ganon_room_3.o (.scommon)
            build/scenes/dungeons/ganon/ganon_room_3.o (.bss)
            build/scenes/dungeons/ganon/ganon_room_3.o (COMMON)
        . = ALIGN(0x10);
        _ganon_room_3SegmentBssEnd = .;
        _ganon_room_3SegmentEnd = .;
    }
    _ganon_room_3SegmentBssSize = ABSOLUTE( _ganon_room_3SegmentBssEnd - _ganon_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_room_4SegmentRomStart = _RomSize;
    ..ganon_room_4 0x03000000 : AT(_RomSize)
    {
        _ganon_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_room_4SegmentTextStart = .;
            build/scenes/dungeons/ganon/ganon_room_4.o (.text)
        _ganon_room_4SegmentTextEnd = .;
    _ganon_room_4SegmentTextSize = ABSOLUTE( _ganon_room_4SegmentTextEnd - _ganon_room_4SegmentTextStart );
        _ganon_room_4SegmentDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_4.o (.data)
        _ganon_room_4SegmentDataEnd = .;
    _ganon_room_4SegmentDataSize = ABSOLUTE( _ganon_room_4SegmentDataEnd - _ganon_room_4SegmentDataStart );
        _ganon_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_4.o (.rodata)
        _ganon_room_4SegmentRoDataEnd = .;
    _ganon_room_4SegmentRoDataSize = ABSOLUTE( _ganon_room_4SegmentRoDataEnd - _ganon_room_4SegmentRoDataStart );
        _ganon_room_4SegmentSDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_4.o (.sdata)
        . = ALIGN(0x10);
        _ganon_room_4SegmentSDataEnd = .;
        _ganon_room_4SegmentOvlStart = .;
            build/scenes/dungeons/ganon/ganon_room_4.o (.ovl)
        . = ALIGN(0x10);
        _ganon_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_room_4SegmentOvlEnd - _ganon_room_4SegmentTextStart );
    _ganon_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_room_4.bss ADDR(..ganon_room_4) + SIZEOF(..ganon_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_room_4SegmentBssStart = .;
            build/scenes/dungeons/ganon/ganon_room_4.o (.sbss)
            build/scenes/dungeons/ganon/ganon_room_4.o (.scommon)
            build/scenes/dungeons/ganon/ganon_room_4.o (.bss)
            build/scenes/dungeons/ganon/ganon_room_4.o (COMMON)
        . = ALIGN(0x10);
        _ganon_room_4SegmentBssEnd = .;
        _ganon_room_4SegmentEnd = .;
    }
    _ganon_room_4SegmentBssSize = ABSOLUTE( _ganon_room_4SegmentBssEnd - _ganon_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_room_5SegmentRomStart = _RomSize;
    ..ganon_room_5 0x03000000 : AT(_RomSize)
    {
        _ganon_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_room_5SegmentTextStart = .;
            build/scenes/dungeons/ganon/ganon_room_5.o (.text)
        _ganon_room_5SegmentTextEnd = .;
    _ganon_room_5SegmentTextSize = ABSOLUTE( _ganon_room_5SegmentTextEnd - _ganon_room_5SegmentTextStart );
        _ganon_room_5SegmentDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_5.o (.data)
        _ganon_room_5SegmentDataEnd = .;
    _ganon_room_5SegmentDataSize = ABSOLUTE( _ganon_room_5SegmentDataEnd - _ganon_room_5SegmentDataStart );
        _ganon_room_5SegmentRoDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_5.o (.rodata)
        _ganon_room_5SegmentRoDataEnd = .;
    _ganon_room_5SegmentRoDataSize = ABSOLUTE( _ganon_room_5SegmentRoDataEnd - _ganon_room_5SegmentRoDataStart );
        _ganon_room_5SegmentSDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_5.o (.sdata)
        . = ALIGN(0x10);
        _ganon_room_5SegmentSDataEnd = .;
        _ganon_room_5SegmentOvlStart = .;
            build/scenes/dungeons/ganon/ganon_room_5.o (.ovl)
        . = ALIGN(0x10);
        _ganon_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_room_5SegmentOvlEnd - _ganon_room_5SegmentTextStart );
    _ganon_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_room_5.bss ADDR(..ganon_room_5) + SIZEOF(..ganon_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_room_5SegmentBssStart = .;
            build/scenes/dungeons/ganon/ganon_room_5.o (.sbss)
            build/scenes/dungeons/ganon/ganon_room_5.o (.scommon)
            build/scenes/dungeons/ganon/ganon_room_5.o (.bss)
            build/scenes/dungeons/ganon/ganon_room_5.o (COMMON)
        . = ALIGN(0x10);
        _ganon_room_5SegmentBssEnd = .;
        _ganon_room_5SegmentEnd = .;
    }
    _ganon_room_5SegmentBssSize = ABSOLUTE( _ganon_room_5SegmentBssEnd - _ganon_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_room_6SegmentRomStart = _RomSize;
    ..ganon_room_6 0x03000000 : AT(_RomSize)
    {
        _ganon_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_room_6SegmentTextStart = .;
            build/scenes/dungeons/ganon/ganon_room_6.o (.text)
        _ganon_room_6SegmentTextEnd = .;
    _ganon_room_6SegmentTextSize = ABSOLUTE( _ganon_room_6SegmentTextEnd - _ganon_room_6SegmentTextStart );
        _ganon_room_6SegmentDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_6.o (.data)
        _ganon_room_6SegmentDataEnd = .;
    _ganon_room_6SegmentDataSize = ABSOLUTE( _ganon_room_6SegmentDataEnd - _ganon_room_6SegmentDataStart );
        _ganon_room_6SegmentRoDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_6.o (.rodata)
        _ganon_room_6SegmentRoDataEnd = .;
    _ganon_room_6SegmentRoDataSize = ABSOLUTE( _ganon_room_6SegmentRoDataEnd - _ganon_room_6SegmentRoDataStart );
        _ganon_room_6SegmentSDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_6.o (.sdata)
        . = ALIGN(0x10);
        _ganon_room_6SegmentSDataEnd = .;
        _ganon_room_6SegmentOvlStart = .;
            build/scenes/dungeons/ganon/ganon_room_6.o (.ovl)
        . = ALIGN(0x10);
        _ganon_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_room_6SegmentOvlEnd - _ganon_room_6SegmentTextStart );
    _ganon_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_room_6.bss ADDR(..ganon_room_6) + SIZEOF(..ganon_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_room_6SegmentBssStart = .;
            build/scenes/dungeons/ganon/ganon_room_6.o (.sbss)
            build/scenes/dungeons/ganon/ganon_room_6.o (.scommon)
            build/scenes/dungeons/ganon/ganon_room_6.o (.bss)
            build/scenes/dungeons/ganon/ganon_room_6.o (COMMON)
        . = ALIGN(0x10);
        _ganon_room_6SegmentBssEnd = .;
        _ganon_room_6SegmentEnd = .;
    }
    _ganon_room_6SegmentBssSize = ABSOLUTE( _ganon_room_6SegmentBssEnd - _ganon_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_room_7SegmentRomStart = _RomSize;
    ..ganon_room_7 0x03000000 : AT(_RomSize)
    {
        _ganon_room_7SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_room_7SegmentTextStart = .;
            build/scenes/dungeons/ganon/ganon_room_7.o (.text)
        _ganon_room_7SegmentTextEnd = .;
    _ganon_room_7SegmentTextSize = ABSOLUTE( _ganon_room_7SegmentTextEnd - _ganon_room_7SegmentTextStart );
        _ganon_room_7SegmentDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_7.o (.data)
        _ganon_room_7SegmentDataEnd = .;
    _ganon_room_7SegmentDataSize = ABSOLUTE( _ganon_room_7SegmentDataEnd - _ganon_room_7SegmentDataStart );
        _ganon_room_7SegmentRoDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_7.o (.rodata)
        _ganon_room_7SegmentRoDataEnd = .;
    _ganon_room_7SegmentRoDataSize = ABSOLUTE( _ganon_room_7SegmentRoDataEnd - _ganon_room_7SegmentRoDataStart );
        _ganon_room_7SegmentSDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_7.o (.sdata)
        . = ALIGN(0x10);
        _ganon_room_7SegmentSDataEnd = .;
        _ganon_room_7SegmentOvlStart = .;
            build/scenes/dungeons/ganon/ganon_room_7.o (.ovl)
        . = ALIGN(0x10);
        _ganon_room_7SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_room_7SegmentOvlEnd - _ganon_room_7SegmentTextStart );
    _ganon_room_7SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_room_7.bss ADDR(..ganon_room_7) + SIZEOF(..ganon_room_7) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_room_7SegmentBssStart = .;
            build/scenes/dungeons/ganon/ganon_room_7.o (.sbss)
            build/scenes/dungeons/ganon/ganon_room_7.o (.scommon)
            build/scenes/dungeons/ganon/ganon_room_7.o (.bss)
            build/scenes/dungeons/ganon/ganon_room_7.o (COMMON)
        . = ALIGN(0x10);
        _ganon_room_7SegmentBssEnd = .;
        _ganon_room_7SegmentEnd = .;
    }
    _ganon_room_7SegmentBssSize = ABSOLUTE( _ganon_room_7SegmentBssEnd - _ganon_room_7SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_room_8SegmentRomStart = _RomSize;
    ..ganon_room_8 0x03000000 : AT(_RomSize)
    {
        _ganon_room_8SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_room_8SegmentTextStart = .;
            build/scenes/dungeons/ganon/ganon_room_8.o (.text)
        _ganon_room_8SegmentTextEnd = .;
    _ganon_room_8SegmentTextSize = ABSOLUTE( _ganon_room_8SegmentTextEnd - _ganon_room_8SegmentTextStart );
        _ganon_room_8SegmentDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_8.o (.data)
        _ganon_room_8SegmentDataEnd = .;
    _ganon_room_8SegmentDataSize = ABSOLUTE( _ganon_room_8SegmentDataEnd - _ganon_room_8SegmentDataStart );
        _ganon_room_8SegmentRoDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_8.o (.rodata)
        _ganon_room_8SegmentRoDataEnd = .;
    _ganon_room_8SegmentRoDataSize = ABSOLUTE( _ganon_room_8SegmentRoDataEnd - _ganon_room_8SegmentRoDataStart );
        _ganon_room_8SegmentSDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_8.o (.sdata)
        . = ALIGN(0x10);
        _ganon_room_8SegmentSDataEnd = .;
        _ganon_room_8SegmentOvlStart = .;
            build/scenes/dungeons/ganon/ganon_room_8.o (.ovl)
        . = ALIGN(0x10);
        _ganon_room_8SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_room_8SegmentOvlEnd - _ganon_room_8SegmentTextStart );
    _ganon_room_8SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_room_8.bss ADDR(..ganon_room_8) + SIZEOF(..ganon_room_8) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_room_8SegmentBssStart = .;
            build/scenes/dungeons/ganon/ganon_room_8.o (.sbss)
            build/scenes/dungeons/ganon/ganon_room_8.o (.scommon)
            build/scenes/dungeons/ganon/ganon_room_8.o (.bss)
            build/scenes/dungeons/ganon/ganon_room_8.o (COMMON)
        . = ALIGN(0x10);
        _ganon_room_8SegmentBssEnd = .;
        _ganon_room_8SegmentEnd = .;
    }
    _ganon_room_8SegmentBssSize = ABSOLUTE( _ganon_room_8SegmentBssEnd - _ganon_room_8SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_room_9SegmentRomStart = _RomSize;
    ..ganon_room_9 0x03000000 : AT(_RomSize)
    {
        _ganon_room_9SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_room_9SegmentTextStart = .;
            build/scenes/dungeons/ganon/ganon_room_9.o (.text)
        _ganon_room_9SegmentTextEnd = .;
    _ganon_room_9SegmentTextSize = ABSOLUTE( _ganon_room_9SegmentTextEnd - _ganon_room_9SegmentTextStart );
        _ganon_room_9SegmentDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_9.o (.data)
        _ganon_room_9SegmentDataEnd = .;
    _ganon_room_9SegmentDataSize = ABSOLUTE( _ganon_room_9SegmentDataEnd - _ganon_room_9SegmentDataStart );
        _ganon_room_9SegmentRoDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_9.o (.rodata)
        _ganon_room_9SegmentRoDataEnd = .;
    _ganon_room_9SegmentRoDataSize = ABSOLUTE( _ganon_room_9SegmentRoDataEnd - _ganon_room_9SegmentRoDataStart );
        _ganon_room_9SegmentSDataStart = .;
            build/scenes/dungeons/ganon/ganon_room_9.o (.sdata)
        . = ALIGN(0x10);
        _ganon_room_9SegmentSDataEnd = .;
        _ganon_room_9SegmentOvlStart = .;
            build/scenes/dungeons/ganon/ganon_room_9.o (.ovl)
        . = ALIGN(0x10);
        _ganon_room_9SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_room_9SegmentOvlEnd - _ganon_room_9SegmentTextStart );
    _ganon_room_9SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_room_9.bss ADDR(..ganon_room_9) + SIZEOF(..ganon_room_9) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_room_9SegmentBssStart = .;
            build/scenes/dungeons/ganon/ganon_room_9.o (.sbss)
            build/scenes/dungeons/ganon/ganon_room_9.o (.scommon)
            build/scenes/dungeons/ganon/ganon_room_9.o (.bss)
            build/scenes/dungeons/ganon/ganon_room_9.o (COMMON)
        . = ALIGN(0x10);
        _ganon_room_9SegmentBssEnd = .;
        _ganon_room_9SegmentEnd = .;
    }
    _ganon_room_9SegmentBssSize = ABSOLUTE( _ganon_room_9SegmentBssEnd - _ganon_room_9SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_boss_sceneSegmentRomStart = _RomSize;
    ..ganon_boss_scene 0x02000000 : AT(_RomSize)
    {
        _ganon_boss_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _ganon_boss_sceneSegmentTextStart = .;
            build/scenes/dungeons/ganon_boss/ganon_boss_scene.o (.text)
        _ganon_boss_sceneSegmentTextEnd = .;
    _ganon_boss_sceneSegmentTextSize = ABSOLUTE( _ganon_boss_sceneSegmentTextEnd - _ganon_boss_sceneSegmentTextStart );
        _ganon_boss_sceneSegmentDataStart = .;
            build/scenes/dungeons/ganon_boss/ganon_boss_scene.o (.data)
        _ganon_boss_sceneSegmentDataEnd = .;
    _ganon_boss_sceneSegmentDataSize = ABSOLUTE( _ganon_boss_sceneSegmentDataEnd - _ganon_boss_sceneSegmentDataStart );
        _ganon_boss_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/ganon_boss/ganon_boss_scene.o (.rodata)
        _ganon_boss_sceneSegmentRoDataEnd = .;
    _ganon_boss_sceneSegmentRoDataSize = ABSOLUTE( _ganon_boss_sceneSegmentRoDataEnd - _ganon_boss_sceneSegmentRoDataStart );
        _ganon_boss_sceneSegmentSDataStart = .;
            build/scenes/dungeons/ganon_boss/ganon_boss_scene.o (.sdata)
        . = ALIGN(0x10);
        _ganon_boss_sceneSegmentSDataEnd = .;
        _ganon_boss_sceneSegmentOvlStart = .;
            build/scenes/dungeons/ganon_boss/ganon_boss_scene.o (.ovl)
        . = ALIGN(0x10);
        _ganon_boss_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_boss_sceneSegmentOvlEnd - _ganon_boss_sceneSegmentTextStart );
    _ganon_boss_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_boss_scene.bss ADDR(..ganon_boss_scene) + SIZEOF(..ganon_boss_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_boss_sceneSegmentBssStart = .;
            build/scenes/dungeons/ganon_boss/ganon_boss_scene.o (.sbss)
            build/scenes/dungeons/ganon_boss/ganon_boss_scene.o (.scommon)
            build/scenes/dungeons/ganon_boss/ganon_boss_scene.o (.bss)
            build/scenes/dungeons/ganon_boss/ganon_boss_scene.o (COMMON)
        . = ALIGN(0x10);
        _ganon_boss_sceneSegmentBssEnd = .;
        _ganon_boss_sceneSegmentEnd = .;
    }
    _ganon_boss_sceneSegmentBssSize = ABSOLUTE( _ganon_boss_sceneSegmentBssEnd - _ganon_boss_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_boss_room_0SegmentRomStart = _RomSize;
    ..ganon_boss_room_0 0x03000000 : AT(_RomSize)
    {
        _ganon_boss_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_boss_room_0SegmentTextStart = .;
            build/scenes/dungeons/ganon_boss/ganon_boss_room_0.o (.text)
        _ganon_boss_room_0SegmentTextEnd = .;
    _ganon_boss_room_0SegmentTextSize = ABSOLUTE( _ganon_boss_room_0SegmentTextEnd - _ganon_boss_room_0SegmentTextStart );
        _ganon_boss_room_0SegmentDataStart = .;
            build/scenes/dungeons/ganon_boss/ganon_boss_room_0.o (.data)
        _ganon_boss_room_0SegmentDataEnd = .;
    _ganon_boss_room_0SegmentDataSize = ABSOLUTE( _ganon_boss_room_0SegmentDataEnd - _ganon_boss_room_0SegmentDataStart );
        _ganon_boss_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/ganon_boss/ganon_boss_room_0.o (.rodata)
        _ganon_boss_room_0SegmentRoDataEnd = .;
    _ganon_boss_room_0SegmentRoDataSize = ABSOLUTE( _ganon_boss_room_0SegmentRoDataEnd - _ganon_boss_room_0SegmentRoDataStart );
        _ganon_boss_room_0SegmentSDataStart = .;
            build/scenes/dungeons/ganon_boss/ganon_boss_room_0.o (.sdata)
        . = ALIGN(0x10);
        _ganon_boss_room_0SegmentSDataEnd = .;
        _ganon_boss_room_0SegmentOvlStart = .;
            build/scenes/dungeons/ganon_boss/ganon_boss_room_0.o (.ovl)
        . = ALIGN(0x10);
        _ganon_boss_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_boss_room_0SegmentOvlEnd - _ganon_boss_room_0SegmentTextStart );
    _ganon_boss_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_boss_room_0.bss ADDR(..ganon_boss_room_0) + SIZEOF(..ganon_boss_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_boss_room_0SegmentBssStart = .;
            build/scenes/dungeons/ganon_boss/ganon_boss_room_0.o (.sbss)
            build/scenes/dungeons/ganon_boss/ganon_boss_room_0.o (.scommon)
            build/scenes/dungeons/ganon_boss/ganon_boss_room_0.o (.bss)
            build/scenes/dungeons/ganon_boss/ganon_boss_room_0.o (COMMON)
        . = ALIGN(0x10);
        _ganon_boss_room_0SegmentBssEnd = .;
        _ganon_boss_room_0SegmentEnd = .;
    }
    _ganon_boss_room_0SegmentBssSize = ABSOLUTE( _ganon_boss_room_0SegmentBssEnd - _ganon_boss_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinboss_sceneSegmentRomStart = _RomSize;
    ..jyasinboss_scene 0x02000000 : AT(_RomSize)
    {
        _jyasinboss_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _jyasinboss_sceneSegmentTextStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_scene.o (.text)
        _jyasinboss_sceneSegmentTextEnd = .;
    _jyasinboss_sceneSegmentTextSize = ABSOLUTE( _jyasinboss_sceneSegmentTextEnd - _jyasinboss_sceneSegmentTextStart );
        _jyasinboss_sceneSegmentDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_scene.o (.data)
        _jyasinboss_sceneSegmentDataEnd = .;
    _jyasinboss_sceneSegmentDataSize = ABSOLUTE( _jyasinboss_sceneSegmentDataEnd - _jyasinboss_sceneSegmentDataStart );
        _jyasinboss_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_scene.o (.rodata)
        _jyasinboss_sceneSegmentRoDataEnd = .;
    _jyasinboss_sceneSegmentRoDataSize = ABSOLUTE( _jyasinboss_sceneSegmentRoDataEnd - _jyasinboss_sceneSegmentRoDataStart );
        _jyasinboss_sceneSegmentSDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_scene.o (.sdata)
        . = ALIGN(0x10);
        _jyasinboss_sceneSegmentSDataEnd = .;
        _jyasinboss_sceneSegmentOvlStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_scene.o (.ovl)
        . = ALIGN(0x10);
        _jyasinboss_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinboss_sceneSegmentOvlEnd - _jyasinboss_sceneSegmentTextStart );
    _jyasinboss_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinboss_scene.bss ADDR(..jyasinboss_scene) + SIZEOF(..jyasinboss_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinboss_sceneSegmentBssStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_scene.o (.sbss)
            build/scenes/dungeons/jyasinboss/jyasinboss_scene.o (.scommon)
            build/scenes/dungeons/jyasinboss/jyasinboss_scene.o (.bss)
            build/scenes/dungeons/jyasinboss/jyasinboss_scene.o (COMMON)
        . = ALIGN(0x10);
        _jyasinboss_sceneSegmentBssEnd = .;
        _jyasinboss_sceneSegmentEnd = .;
    }
    _jyasinboss_sceneSegmentBssSize = ABSOLUTE( _jyasinboss_sceneSegmentBssEnd - _jyasinboss_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinboss_room_0SegmentRomStart = _RomSize;
    ..jyasinboss_room_0 0x03000000 : AT(_RomSize)
    {
        _jyasinboss_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinboss_room_0SegmentTextStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_0.o (.text)
        _jyasinboss_room_0SegmentTextEnd = .;
    _jyasinboss_room_0SegmentTextSize = ABSOLUTE( _jyasinboss_room_0SegmentTextEnd - _jyasinboss_room_0SegmentTextStart );
        _jyasinboss_room_0SegmentDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_0.o (.data)
        _jyasinboss_room_0SegmentDataEnd = .;
    _jyasinboss_room_0SegmentDataSize = ABSOLUTE( _jyasinboss_room_0SegmentDataEnd - _jyasinboss_room_0SegmentDataStart );
        _jyasinboss_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_0.o (.rodata)
        _jyasinboss_room_0SegmentRoDataEnd = .;
    _jyasinboss_room_0SegmentRoDataSize = ABSOLUTE( _jyasinboss_room_0SegmentRoDataEnd - _jyasinboss_room_0SegmentRoDataStart );
        _jyasinboss_room_0SegmentSDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_0.o (.sdata)
        . = ALIGN(0x10);
        _jyasinboss_room_0SegmentSDataEnd = .;
        _jyasinboss_room_0SegmentOvlStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_0.o (.ovl)
        . = ALIGN(0x10);
        _jyasinboss_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinboss_room_0SegmentOvlEnd - _jyasinboss_room_0SegmentTextStart );
    _jyasinboss_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinboss_room_0.bss ADDR(..jyasinboss_room_0) + SIZEOF(..jyasinboss_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinboss_room_0SegmentBssStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_0.o (.sbss)
            build/scenes/dungeons/jyasinboss/jyasinboss_room_0.o (.scommon)
            build/scenes/dungeons/jyasinboss/jyasinboss_room_0.o (.bss)
            build/scenes/dungeons/jyasinboss/jyasinboss_room_0.o (COMMON)
        . = ALIGN(0x10);
        _jyasinboss_room_0SegmentBssEnd = .;
        _jyasinboss_room_0SegmentEnd = .;
    }
    _jyasinboss_room_0SegmentBssSize = ABSOLUTE( _jyasinboss_room_0SegmentBssEnd - _jyasinboss_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinboss_room_1SegmentRomStart = _RomSize;
    ..jyasinboss_room_1 0x03000000 : AT(_RomSize)
    {
        _jyasinboss_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinboss_room_1SegmentTextStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_1.o (.text)
        _jyasinboss_room_1SegmentTextEnd = .;
    _jyasinboss_room_1SegmentTextSize = ABSOLUTE( _jyasinboss_room_1SegmentTextEnd - _jyasinboss_room_1SegmentTextStart );
        _jyasinboss_room_1SegmentDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_1.o (.data)
        _jyasinboss_room_1SegmentDataEnd = .;
    _jyasinboss_room_1SegmentDataSize = ABSOLUTE( _jyasinboss_room_1SegmentDataEnd - _jyasinboss_room_1SegmentDataStart );
        _jyasinboss_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_1.o (.rodata)
        _jyasinboss_room_1SegmentRoDataEnd = .;
    _jyasinboss_room_1SegmentRoDataSize = ABSOLUTE( _jyasinboss_room_1SegmentRoDataEnd - _jyasinboss_room_1SegmentRoDataStart );
        _jyasinboss_room_1SegmentSDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_1.o (.sdata)
        . = ALIGN(0x10);
        _jyasinboss_room_1SegmentSDataEnd = .;
        _jyasinboss_room_1SegmentOvlStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_1.o (.ovl)
        . = ALIGN(0x10);
        _jyasinboss_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinboss_room_1SegmentOvlEnd - _jyasinboss_room_1SegmentTextStart );
    _jyasinboss_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinboss_room_1.bss ADDR(..jyasinboss_room_1) + SIZEOF(..jyasinboss_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinboss_room_1SegmentBssStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_1.o (.sbss)
            build/scenes/dungeons/jyasinboss/jyasinboss_room_1.o (.scommon)
            build/scenes/dungeons/jyasinboss/jyasinboss_room_1.o (.bss)
            build/scenes/dungeons/jyasinboss/jyasinboss_room_1.o (COMMON)
        . = ALIGN(0x10);
        _jyasinboss_room_1SegmentBssEnd = .;
        _jyasinboss_room_1SegmentEnd = .;
    }
    _jyasinboss_room_1SegmentBssSize = ABSOLUTE( _jyasinboss_room_1SegmentBssEnd - _jyasinboss_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinboss_room_2SegmentRomStart = _RomSize;
    ..jyasinboss_room_2 0x03000000 : AT(_RomSize)
    {
        _jyasinboss_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinboss_room_2SegmentTextStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_2.o (.text)
        _jyasinboss_room_2SegmentTextEnd = .;
    _jyasinboss_room_2SegmentTextSize = ABSOLUTE( _jyasinboss_room_2SegmentTextEnd - _jyasinboss_room_2SegmentTextStart );
        _jyasinboss_room_2SegmentDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_2.o (.data)
        _jyasinboss_room_2SegmentDataEnd = .;
    _jyasinboss_room_2SegmentDataSize = ABSOLUTE( _jyasinboss_room_2SegmentDataEnd - _jyasinboss_room_2SegmentDataStart );
        _jyasinboss_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_2.o (.rodata)
        _jyasinboss_room_2SegmentRoDataEnd = .;
    _jyasinboss_room_2SegmentRoDataSize = ABSOLUTE( _jyasinboss_room_2SegmentRoDataEnd - _jyasinboss_room_2SegmentRoDataStart );
        _jyasinboss_room_2SegmentSDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_2.o (.sdata)
        . = ALIGN(0x10);
        _jyasinboss_room_2SegmentSDataEnd = .;
        _jyasinboss_room_2SegmentOvlStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_2.o (.ovl)
        . = ALIGN(0x10);
        _jyasinboss_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinboss_room_2SegmentOvlEnd - _jyasinboss_room_2SegmentTextStart );
    _jyasinboss_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinboss_room_2.bss ADDR(..jyasinboss_room_2) + SIZEOF(..jyasinboss_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinboss_room_2SegmentBssStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_2.o (.sbss)
            build/scenes/dungeons/jyasinboss/jyasinboss_room_2.o (.scommon)
            build/scenes/dungeons/jyasinboss/jyasinboss_room_2.o (.bss)
            build/scenes/dungeons/jyasinboss/jyasinboss_room_2.o (COMMON)
        . = ALIGN(0x10);
        _jyasinboss_room_2SegmentBssEnd = .;
        _jyasinboss_room_2SegmentEnd = .;
    }
    _jyasinboss_room_2SegmentBssSize = ABSOLUTE( _jyasinboss_room_2SegmentBssEnd - _jyasinboss_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _jyasinboss_room_3SegmentRomStart = _RomSize;
    ..jyasinboss_room_3 0x03000000 : AT(_RomSize)
    {
        _jyasinboss_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _jyasinboss_room_3SegmentTextStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_3.o (.text)
        _jyasinboss_room_3SegmentTextEnd = .;
    _jyasinboss_room_3SegmentTextSize = ABSOLUTE( _jyasinboss_room_3SegmentTextEnd - _jyasinboss_room_3SegmentTextStart );
        _jyasinboss_room_3SegmentDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_3.o (.data)
        _jyasinboss_room_3SegmentDataEnd = .;
    _jyasinboss_room_3SegmentDataSize = ABSOLUTE( _jyasinboss_room_3SegmentDataEnd - _jyasinboss_room_3SegmentDataStart );
        _jyasinboss_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_3.o (.rodata)
        _jyasinboss_room_3SegmentRoDataEnd = .;
    _jyasinboss_room_3SegmentRoDataSize = ABSOLUTE( _jyasinboss_room_3SegmentRoDataEnd - _jyasinboss_room_3SegmentRoDataStart );
        _jyasinboss_room_3SegmentSDataStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_3.o (.sdata)
        . = ALIGN(0x10);
        _jyasinboss_room_3SegmentSDataEnd = .;
        _jyasinboss_room_3SegmentOvlStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_3.o (.ovl)
        . = ALIGN(0x10);
        _jyasinboss_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _jyasinboss_room_3SegmentOvlEnd - _jyasinboss_room_3SegmentTextStart );
    _jyasinboss_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..jyasinboss_room_3.bss ADDR(..jyasinboss_room_3) + SIZEOF(..jyasinboss_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _jyasinboss_room_3SegmentBssStart = .;
            build/scenes/dungeons/jyasinboss/jyasinboss_room_3.o (.sbss)
            build/scenes/dungeons/jyasinboss/jyasinboss_room_3.o (.scommon)
            build/scenes/dungeons/jyasinboss/jyasinboss_room_3.o (.bss)
            build/scenes/dungeons/jyasinboss/jyasinboss_room_3.o (COMMON)
        . = ALIGN(0x10);
        _jyasinboss_room_3SegmentBssEnd = .;
        _jyasinboss_room_3SegmentEnd = .;
    }
    _jyasinboss_room_3SegmentBssSize = ABSOLUTE( _jyasinboss_room_3SegmentBssEnd - _jyasinboss_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kokiri_home4_sceneSegmentRomStart = _RomSize;
    ..kokiri_home4_scene 0x02000000 : AT(_RomSize)
    {
        _kokiri_home4_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _kokiri_home4_sceneSegmentTextStart = .;
            build/scenes/indoors/kokiri_home4/kokiri_home4_scene.o (.text)
        _kokiri_home4_sceneSegmentTextEnd = .;
    _kokiri_home4_sceneSegmentTextSize = ABSOLUTE( _kokiri_home4_sceneSegmentTextEnd - _kokiri_home4_sceneSegmentTextStart );
        _kokiri_home4_sceneSegmentDataStart = .;
            build/scenes/indoors/kokiri_home4/kokiri_home4_scene.o (.data)
        _kokiri_home4_sceneSegmentDataEnd = .;
    _kokiri_home4_sceneSegmentDataSize = ABSOLUTE( _kokiri_home4_sceneSegmentDataEnd - _kokiri_home4_sceneSegmentDataStart );
        _kokiri_home4_sceneSegmentRoDataStart = .;
            build/scenes/indoors/kokiri_home4/kokiri_home4_scene.o (.rodata)
        _kokiri_home4_sceneSegmentRoDataEnd = .;
    _kokiri_home4_sceneSegmentRoDataSize = ABSOLUTE( _kokiri_home4_sceneSegmentRoDataEnd - _kokiri_home4_sceneSegmentRoDataStart );
        _kokiri_home4_sceneSegmentSDataStart = .;
            build/scenes/indoors/kokiri_home4/kokiri_home4_scene.o (.sdata)
        . = ALIGN(0x10);
        _kokiri_home4_sceneSegmentSDataEnd = .;
        _kokiri_home4_sceneSegmentOvlStart = .;
            build/scenes/indoors/kokiri_home4/kokiri_home4_scene.o (.ovl)
        . = ALIGN(0x10);
        _kokiri_home4_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _kokiri_home4_sceneSegmentOvlEnd - _kokiri_home4_sceneSegmentTextStart );
    _kokiri_home4_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kokiri_home4_scene.bss ADDR(..kokiri_home4_scene) + SIZEOF(..kokiri_home4_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kokiri_home4_sceneSegmentBssStart = .;
            build/scenes/indoors/kokiri_home4/kokiri_home4_scene.o (.sbss)
            build/scenes/indoors/kokiri_home4/kokiri_home4_scene.o (.scommon)
            build/scenes/indoors/kokiri_home4/kokiri_home4_scene.o (.bss)
            build/scenes/indoors/kokiri_home4/kokiri_home4_scene.o (COMMON)
        . = ALIGN(0x10);
        _kokiri_home4_sceneSegmentBssEnd = .;
        _kokiri_home4_sceneSegmentEnd = .;
    }
    _kokiri_home4_sceneSegmentBssSize = ABSOLUTE( _kokiri_home4_sceneSegmentBssEnd - _kokiri_home4_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kokiri_home4_room_0SegmentRomStart = _RomSize;
    ..kokiri_home4_room_0 0x03000000 : AT(_RomSize)
    {
        _kokiri_home4_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _kokiri_home4_room_0SegmentTextStart = .;
            build/scenes/indoors/kokiri_home4/kokiri_home4_room_0.o (.text)
        _kokiri_home4_room_0SegmentTextEnd = .;
    _kokiri_home4_room_0SegmentTextSize = ABSOLUTE( _kokiri_home4_room_0SegmentTextEnd - _kokiri_home4_room_0SegmentTextStart );
        _kokiri_home4_room_0SegmentDataStart = .;
            build/scenes/indoors/kokiri_home4/kokiri_home4_room_0.o (.data)
        _kokiri_home4_room_0SegmentDataEnd = .;
    _kokiri_home4_room_0SegmentDataSize = ABSOLUTE( _kokiri_home4_room_0SegmentDataEnd - _kokiri_home4_room_0SegmentDataStart );
        _kokiri_home4_room_0SegmentRoDataStart = .;
            build/scenes/indoors/kokiri_home4/kokiri_home4_room_0.o (.rodata)
        _kokiri_home4_room_0SegmentRoDataEnd = .;
    _kokiri_home4_room_0SegmentRoDataSize = ABSOLUTE( _kokiri_home4_room_0SegmentRoDataEnd - _kokiri_home4_room_0SegmentRoDataStart );
        _kokiri_home4_room_0SegmentSDataStart = .;
            build/scenes/indoors/kokiri_home4/kokiri_home4_room_0.o (.sdata)
        . = ALIGN(0x10);
        _kokiri_home4_room_0SegmentSDataEnd = .;
        _kokiri_home4_room_0SegmentOvlStart = .;
            build/scenes/indoors/kokiri_home4/kokiri_home4_room_0.o (.ovl)
        . = ALIGN(0x10);
        _kokiri_home4_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _kokiri_home4_room_0SegmentOvlEnd - _kokiri_home4_room_0SegmentTextStart );
    _kokiri_home4_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kokiri_home4_room_0.bss ADDR(..kokiri_home4_room_0) + SIZEOF(..kokiri_home4_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kokiri_home4_room_0SegmentBssStart = .;
            build/scenes/indoors/kokiri_home4/kokiri_home4_room_0.o (.sbss)
            build/scenes/indoors/kokiri_home4/kokiri_home4_room_0.o (.scommon)
            build/scenes/indoors/kokiri_home4/kokiri_home4_room_0.o (.bss)
            build/scenes/indoors/kokiri_home4/kokiri_home4_room_0.o (COMMON)
        . = ALIGN(0x10);
        _kokiri_home4_room_0SegmentBssEnd = .;
        _kokiri_home4_room_0SegmentEnd = .;
    }
    _kokiri_home4_room_0SegmentBssSize = ABSOLUTE( _kokiri_home4_room_0SegmentBssEnd - _kokiri_home4_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kokiri_home5_sceneSegmentRomStart = _RomSize;
    ..kokiri_home5_scene 0x02000000 : AT(_RomSize)
    {
        _kokiri_home5_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _kokiri_home5_sceneSegmentTextStart = .;
            build/scenes/indoors/kokiri_home5/kokiri_home5_scene.o (.text)
        _kokiri_home5_sceneSegmentTextEnd = .;
    _kokiri_home5_sceneSegmentTextSize = ABSOLUTE( _kokiri_home5_sceneSegmentTextEnd - _kokiri_home5_sceneSegmentTextStart );
        _kokiri_home5_sceneSegmentDataStart = .;
            build/scenes/indoors/kokiri_home5/kokiri_home5_scene.o (.data)
        _kokiri_home5_sceneSegmentDataEnd = .;
    _kokiri_home5_sceneSegmentDataSize = ABSOLUTE( _kokiri_home5_sceneSegmentDataEnd - _kokiri_home5_sceneSegmentDataStart );
        _kokiri_home5_sceneSegmentRoDataStart = .;
            build/scenes/indoors/kokiri_home5/kokiri_home5_scene.o (.rodata)
        _kokiri_home5_sceneSegmentRoDataEnd = .;
    _kokiri_home5_sceneSegmentRoDataSize = ABSOLUTE( _kokiri_home5_sceneSegmentRoDataEnd - _kokiri_home5_sceneSegmentRoDataStart );
        _kokiri_home5_sceneSegmentSDataStart = .;
            build/scenes/indoors/kokiri_home5/kokiri_home5_scene.o (.sdata)
        . = ALIGN(0x10);
        _kokiri_home5_sceneSegmentSDataEnd = .;
        _kokiri_home5_sceneSegmentOvlStart = .;
            build/scenes/indoors/kokiri_home5/kokiri_home5_scene.o (.ovl)
        . = ALIGN(0x10);
        _kokiri_home5_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _kokiri_home5_sceneSegmentOvlEnd - _kokiri_home5_sceneSegmentTextStart );
    _kokiri_home5_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kokiri_home5_scene.bss ADDR(..kokiri_home5_scene) + SIZEOF(..kokiri_home5_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kokiri_home5_sceneSegmentBssStart = .;
            build/scenes/indoors/kokiri_home5/kokiri_home5_scene.o (.sbss)
            build/scenes/indoors/kokiri_home5/kokiri_home5_scene.o (.scommon)
            build/scenes/indoors/kokiri_home5/kokiri_home5_scene.o (.bss)
            build/scenes/indoors/kokiri_home5/kokiri_home5_scene.o (COMMON)
        . = ALIGN(0x10);
        _kokiri_home5_sceneSegmentBssEnd = .;
        _kokiri_home5_sceneSegmentEnd = .;
    }
    _kokiri_home5_sceneSegmentBssSize = ABSOLUTE( _kokiri_home5_sceneSegmentBssEnd - _kokiri_home5_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kokiri_home5_room_0SegmentRomStart = _RomSize;
    ..kokiri_home5_room_0 0x03000000 : AT(_RomSize)
    {
        _kokiri_home5_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _kokiri_home5_room_0SegmentTextStart = .;
            build/scenes/indoors/kokiri_home5/kokiri_home5_room_0.o (.text)
        _kokiri_home5_room_0SegmentTextEnd = .;
    _kokiri_home5_room_0SegmentTextSize = ABSOLUTE( _kokiri_home5_room_0SegmentTextEnd - _kokiri_home5_room_0SegmentTextStart );
        _kokiri_home5_room_0SegmentDataStart = .;
            build/scenes/indoors/kokiri_home5/kokiri_home5_room_0.o (.data)
        _kokiri_home5_room_0SegmentDataEnd = .;
    _kokiri_home5_room_0SegmentDataSize = ABSOLUTE( _kokiri_home5_room_0SegmentDataEnd - _kokiri_home5_room_0SegmentDataStart );
        _kokiri_home5_room_0SegmentRoDataStart = .;
            build/scenes/indoors/kokiri_home5/kokiri_home5_room_0.o (.rodata)
        _kokiri_home5_room_0SegmentRoDataEnd = .;
    _kokiri_home5_room_0SegmentRoDataSize = ABSOLUTE( _kokiri_home5_room_0SegmentRoDataEnd - _kokiri_home5_room_0SegmentRoDataStart );
        _kokiri_home5_room_0SegmentSDataStart = .;
            build/scenes/indoors/kokiri_home5/kokiri_home5_room_0.o (.sdata)
        . = ALIGN(0x10);
        _kokiri_home5_room_0SegmentSDataEnd = .;
        _kokiri_home5_room_0SegmentOvlStart = .;
            build/scenes/indoors/kokiri_home5/kokiri_home5_room_0.o (.ovl)
        . = ALIGN(0x10);
        _kokiri_home5_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _kokiri_home5_room_0SegmentOvlEnd - _kokiri_home5_room_0SegmentTextStart );
    _kokiri_home5_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kokiri_home5_room_0.bss ADDR(..kokiri_home5_room_0) + SIZEOF(..kokiri_home5_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kokiri_home5_room_0SegmentBssStart = .;
            build/scenes/indoors/kokiri_home5/kokiri_home5_room_0.o (.sbss)
            build/scenes/indoors/kokiri_home5/kokiri_home5_room_0.o (.scommon)
            build/scenes/indoors/kokiri_home5/kokiri_home5_room_0.o (.bss)
            build/scenes/indoors/kokiri_home5/kokiri_home5_room_0.o (COMMON)
        . = ALIGN(0x10);
        _kokiri_home5_room_0SegmentBssEnd = .;
        _kokiri_home5_room_0SegmentEnd = .;
    }
    _kokiri_home5_room_0SegmentBssSize = ABSOLUTE( _kokiri_home5_room_0SegmentBssEnd - _kokiri_home5_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_final_sceneSegmentRomStart = _RomSize;
    ..ganon_final_scene 0x02000000 : AT(_RomSize)
    {
        _ganon_final_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _ganon_final_sceneSegmentTextStart = .;
            build/scenes/dungeons/ganon_final/ganon_final_scene.o (.text)
        _ganon_final_sceneSegmentTextEnd = .;
    _ganon_final_sceneSegmentTextSize = ABSOLUTE( _ganon_final_sceneSegmentTextEnd - _ganon_final_sceneSegmentTextStart );
        _ganon_final_sceneSegmentDataStart = .;
            build/scenes/dungeons/ganon_final/ganon_final_scene.o (.data)
        _ganon_final_sceneSegmentDataEnd = .;
    _ganon_final_sceneSegmentDataSize = ABSOLUTE( _ganon_final_sceneSegmentDataEnd - _ganon_final_sceneSegmentDataStart );
        _ganon_final_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/ganon_final/ganon_final_scene.o (.rodata)
        _ganon_final_sceneSegmentRoDataEnd = .;
    _ganon_final_sceneSegmentRoDataSize = ABSOLUTE( _ganon_final_sceneSegmentRoDataEnd - _ganon_final_sceneSegmentRoDataStart );
        _ganon_final_sceneSegmentSDataStart = .;
            build/scenes/dungeons/ganon_final/ganon_final_scene.o (.sdata)
        . = ALIGN(0x10);
        _ganon_final_sceneSegmentSDataEnd = .;
        _ganon_final_sceneSegmentOvlStart = .;
            build/scenes/dungeons/ganon_final/ganon_final_scene.o (.ovl)
        . = ALIGN(0x10);
        _ganon_final_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_final_sceneSegmentOvlEnd - _ganon_final_sceneSegmentTextStart );
    _ganon_final_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_final_scene.bss ADDR(..ganon_final_scene) + SIZEOF(..ganon_final_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_final_sceneSegmentBssStart = .;
            build/scenes/dungeons/ganon_final/ganon_final_scene.o (.sbss)
            build/scenes/dungeons/ganon_final/ganon_final_scene.o (.scommon)
            build/scenes/dungeons/ganon_final/ganon_final_scene.o (.bss)
            build/scenes/dungeons/ganon_final/ganon_final_scene.o (COMMON)
        . = ALIGN(0x10);
        _ganon_final_sceneSegmentBssEnd = .;
        _ganon_final_sceneSegmentEnd = .;
    }
    _ganon_final_sceneSegmentBssSize = ABSOLUTE( _ganon_final_sceneSegmentBssEnd - _ganon_final_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_final_room_0SegmentRomStart = _RomSize;
    ..ganon_final_room_0 0x03000000 : AT(_RomSize)
    {
        _ganon_final_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_final_room_0SegmentTextStart = .;
            build/scenes/dungeons/ganon_final/ganon_final_room_0.o (.text)
        _ganon_final_room_0SegmentTextEnd = .;
    _ganon_final_room_0SegmentTextSize = ABSOLUTE( _ganon_final_room_0SegmentTextEnd - _ganon_final_room_0SegmentTextStart );
        _ganon_final_room_0SegmentDataStart = .;
            build/scenes/dungeons/ganon_final/ganon_final_room_0.o (.data)
        _ganon_final_room_0SegmentDataEnd = .;
    _ganon_final_room_0SegmentDataSize = ABSOLUTE( _ganon_final_room_0SegmentDataEnd - _ganon_final_room_0SegmentDataStart );
        _ganon_final_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/ganon_final/ganon_final_room_0.o (.rodata)
        _ganon_final_room_0SegmentRoDataEnd = .;
    _ganon_final_room_0SegmentRoDataSize = ABSOLUTE( _ganon_final_room_0SegmentRoDataEnd - _ganon_final_room_0SegmentRoDataStart );
        _ganon_final_room_0SegmentSDataStart = .;
            build/scenes/dungeons/ganon_final/ganon_final_room_0.o (.sdata)
        . = ALIGN(0x10);
        _ganon_final_room_0SegmentSDataEnd = .;
        _ganon_final_room_0SegmentOvlStart = .;
            build/scenes/dungeons/ganon_final/ganon_final_room_0.o (.ovl)
        . = ALIGN(0x10);
        _ganon_final_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_final_room_0SegmentOvlEnd - _ganon_final_room_0SegmentTextStart );
    _ganon_final_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_final_room_0.bss ADDR(..ganon_final_room_0) + SIZEOF(..ganon_final_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_final_room_0SegmentBssStart = .;
            build/scenes/dungeons/ganon_final/ganon_final_room_0.o (.sbss)
            build/scenes/dungeons/ganon_final/ganon_final_room_0.o (.scommon)
            build/scenes/dungeons/ganon_final/ganon_final_room_0.o (.bss)
            build/scenes/dungeons/ganon_final/ganon_final_room_0.o (COMMON)
        . = ALIGN(0x10);
        _ganon_final_room_0SegmentBssEnd = .;
        _ganon_final_room_0SegmentEnd = .;
    }
    _ganon_final_room_0SegmentBssSize = ABSOLUTE( _ganon_final_room_0SegmentBssEnd - _ganon_final_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakariko3_sceneSegmentRomStart = _RomSize;
    ..kakariko3_scene 0x02000000 : AT(_RomSize)
    {
        _kakariko3_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _kakariko3_sceneSegmentTextStart = .;
            build/scenes/misc/kakariko3/kakariko3_scene.o (.text)
        _kakariko3_sceneSegmentTextEnd = .;
    _kakariko3_sceneSegmentTextSize = ABSOLUTE( _kakariko3_sceneSegmentTextEnd - _kakariko3_sceneSegmentTextStart );
        _kakariko3_sceneSegmentDataStart = .;
            build/scenes/misc/kakariko3/kakariko3_scene.o (.data)
        _kakariko3_sceneSegmentDataEnd = .;
    _kakariko3_sceneSegmentDataSize = ABSOLUTE( _kakariko3_sceneSegmentDataEnd - _kakariko3_sceneSegmentDataStart );
        _kakariko3_sceneSegmentRoDataStart = .;
            build/scenes/misc/kakariko3/kakariko3_scene.o (.rodata)
        _kakariko3_sceneSegmentRoDataEnd = .;
    _kakariko3_sceneSegmentRoDataSize = ABSOLUTE( _kakariko3_sceneSegmentRoDataEnd - _kakariko3_sceneSegmentRoDataStart );
        _kakariko3_sceneSegmentSDataStart = .;
            build/scenes/misc/kakariko3/kakariko3_scene.o (.sdata)
        . = ALIGN(0x10);
        _kakariko3_sceneSegmentSDataEnd = .;
        _kakariko3_sceneSegmentOvlStart = .;
            build/scenes/misc/kakariko3/kakariko3_scene.o (.ovl)
        . = ALIGN(0x10);
        _kakariko3_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _kakariko3_sceneSegmentOvlEnd - _kakariko3_sceneSegmentTextStart );
    _kakariko3_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakariko3_scene.bss ADDR(..kakariko3_scene) + SIZEOF(..kakariko3_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakariko3_sceneSegmentBssStart = .;
            build/scenes/misc/kakariko3/kakariko3_scene.o (.sbss)
            build/scenes/misc/kakariko3/kakariko3_scene.o (.scommon)
            build/scenes/misc/kakariko3/kakariko3_scene.o (.bss)
            build/scenes/misc/kakariko3/kakariko3_scene.o (COMMON)
        . = ALIGN(0x10);
        _kakariko3_sceneSegmentBssEnd = .;
        _kakariko3_sceneSegmentEnd = .;
    }
    _kakariko3_sceneSegmentBssSize = ABSOLUTE( _kakariko3_sceneSegmentBssEnd - _kakariko3_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kakariko3_room_0SegmentRomStart = _RomSize;
    ..kakariko3_room_0 0x03000000 : AT(_RomSize)
    {
        _kakariko3_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _kakariko3_room_0SegmentTextStart = .;
            build/scenes/misc/kakariko3/kakariko3_room_0.o (.text)
        _kakariko3_room_0SegmentTextEnd = .;
    _kakariko3_room_0SegmentTextSize = ABSOLUTE( _kakariko3_room_0SegmentTextEnd - _kakariko3_room_0SegmentTextStart );
        _kakariko3_room_0SegmentDataStart = .;
            build/scenes/misc/kakariko3/kakariko3_room_0.o (.data)
        _kakariko3_room_0SegmentDataEnd = .;
    _kakariko3_room_0SegmentDataSize = ABSOLUTE( _kakariko3_room_0SegmentDataEnd - _kakariko3_room_0SegmentDataStart );
        _kakariko3_room_0SegmentRoDataStart = .;
            build/scenes/misc/kakariko3/kakariko3_room_0.o (.rodata)
        _kakariko3_room_0SegmentRoDataEnd = .;
    _kakariko3_room_0SegmentRoDataSize = ABSOLUTE( _kakariko3_room_0SegmentRoDataEnd - _kakariko3_room_0SegmentRoDataStart );
        _kakariko3_room_0SegmentSDataStart = .;
            build/scenes/misc/kakariko3/kakariko3_room_0.o (.sdata)
        . = ALIGN(0x10);
        _kakariko3_room_0SegmentSDataEnd = .;
        _kakariko3_room_0SegmentOvlStart = .;
            build/scenes/misc/kakariko3/kakariko3_room_0.o (.ovl)
        . = ALIGN(0x10);
        _kakariko3_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _kakariko3_room_0SegmentOvlEnd - _kakariko3_room_0SegmentTextStart );
    _kakariko3_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kakariko3_room_0.bss ADDR(..kakariko3_room_0) + SIZEOF(..kakariko3_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kakariko3_room_0SegmentBssStart = .;
            build/scenes/misc/kakariko3/kakariko3_room_0.o (.sbss)
            build/scenes/misc/kakariko3/kakariko3_room_0.o (.scommon)
            build/scenes/misc/kakariko3/kakariko3_room_0.o (.bss)
            build/scenes/misc/kakariko3/kakariko3_room_0.o (COMMON)
        . = ALIGN(0x10);
        _kakariko3_room_0SegmentBssEnd = .;
        _kakariko3_room_0SegmentEnd = .;
    }
    _kakariko3_room_0SegmentBssSize = ABSOLUTE( _kakariko3_room_0SegmentBssEnd - _kakariko3_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hairal_niwa2_sceneSegmentRomStart = _RomSize;
    ..hairal_niwa2_scene 0x02000000 : AT(_RomSize)
    {
        _hairal_niwa2_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _hairal_niwa2_sceneSegmentTextStart = .;
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_scene.o (.text)
        _hairal_niwa2_sceneSegmentTextEnd = .;
    _hairal_niwa2_sceneSegmentTextSize = ABSOLUTE( _hairal_niwa2_sceneSegmentTextEnd - _hairal_niwa2_sceneSegmentTextStart );
        _hairal_niwa2_sceneSegmentDataStart = .;
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_scene.o (.data)
        _hairal_niwa2_sceneSegmentDataEnd = .;
    _hairal_niwa2_sceneSegmentDataSize = ABSOLUTE( _hairal_niwa2_sceneSegmentDataEnd - _hairal_niwa2_sceneSegmentDataStart );
        _hairal_niwa2_sceneSegmentRoDataStart = .;
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_scene.o (.rodata)
        _hairal_niwa2_sceneSegmentRoDataEnd = .;
    _hairal_niwa2_sceneSegmentRoDataSize = ABSOLUTE( _hairal_niwa2_sceneSegmentRoDataEnd - _hairal_niwa2_sceneSegmentRoDataStart );
        _hairal_niwa2_sceneSegmentSDataStart = .;
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_scene.o (.sdata)
        . = ALIGN(0x10);
        _hairal_niwa2_sceneSegmentSDataEnd = .;
        _hairal_niwa2_sceneSegmentOvlStart = .;
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_scene.o (.ovl)
        . = ALIGN(0x10);
        _hairal_niwa2_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _hairal_niwa2_sceneSegmentOvlEnd - _hairal_niwa2_sceneSegmentTextStart );
    _hairal_niwa2_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hairal_niwa2_scene.bss ADDR(..hairal_niwa2_scene) + SIZEOF(..hairal_niwa2_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hairal_niwa2_sceneSegmentBssStart = .;
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_scene.o (.sbss)
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_scene.o (.scommon)
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_scene.o (.bss)
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_scene.o (COMMON)
        . = ALIGN(0x10);
        _hairal_niwa2_sceneSegmentBssEnd = .;
        _hairal_niwa2_sceneSegmentEnd = .;
    }
    _hairal_niwa2_sceneSegmentBssSize = ABSOLUTE( _hairal_niwa2_sceneSegmentBssEnd - _hairal_niwa2_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hairal_niwa2_room_0SegmentRomStart = _RomSize;
    ..hairal_niwa2_room_0 0x03000000 : AT(_RomSize)
    {
        _hairal_niwa2_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _hairal_niwa2_room_0SegmentTextStart = .;
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_room_0.o (.text)
        _hairal_niwa2_room_0SegmentTextEnd = .;
    _hairal_niwa2_room_0SegmentTextSize = ABSOLUTE( _hairal_niwa2_room_0SegmentTextEnd - _hairal_niwa2_room_0SegmentTextStart );
        _hairal_niwa2_room_0SegmentDataStart = .;
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_room_0.o (.data)
        _hairal_niwa2_room_0SegmentDataEnd = .;
    _hairal_niwa2_room_0SegmentDataSize = ABSOLUTE( _hairal_niwa2_room_0SegmentDataEnd - _hairal_niwa2_room_0SegmentDataStart );
        _hairal_niwa2_room_0SegmentRoDataStart = .;
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_room_0.o (.rodata)
        _hairal_niwa2_room_0SegmentRoDataEnd = .;
    _hairal_niwa2_room_0SegmentRoDataSize = ABSOLUTE( _hairal_niwa2_room_0SegmentRoDataEnd - _hairal_niwa2_room_0SegmentRoDataStart );
        _hairal_niwa2_room_0SegmentSDataStart = .;
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_room_0.o (.sdata)
        . = ALIGN(0x10);
        _hairal_niwa2_room_0SegmentSDataEnd = .;
        _hairal_niwa2_room_0SegmentOvlStart = .;
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_room_0.o (.ovl)
        . = ALIGN(0x10);
        _hairal_niwa2_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _hairal_niwa2_room_0SegmentOvlEnd - _hairal_niwa2_room_0SegmentTextStart );
    _hairal_niwa2_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hairal_niwa2_room_0.bss ADDR(..hairal_niwa2_room_0) + SIZEOF(..hairal_niwa2_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hairal_niwa2_room_0SegmentBssStart = .;
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_room_0.o (.sbss)
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_room_0.o (.scommon)
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_room_0.o (.bss)
            build/scenes/indoors/hairal_niwa2/hairal_niwa2_room_0.o (COMMON)
        . = ALIGN(0x10);
        _hairal_niwa2_room_0SegmentBssEnd = .;
        _hairal_niwa2_room_0SegmentEnd = .;
    }
    _hairal_niwa2_room_0SegmentBssSize = ABSOLUTE( _hairal_niwa2_room_0SegmentBssEnd - _hairal_niwa2_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakasitarelay_sceneSegmentRomStart = _RomSize;
    ..hakasitarelay_scene 0x02000000 : AT(_RomSize)
    {
        _hakasitarelay_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _hakasitarelay_sceneSegmentTextStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_scene.o (.text)
        _hakasitarelay_sceneSegmentTextEnd = .;
    _hakasitarelay_sceneSegmentTextSize = ABSOLUTE( _hakasitarelay_sceneSegmentTextEnd - _hakasitarelay_sceneSegmentTextStart );
        _hakasitarelay_sceneSegmentDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_scene.o (.data)
        _hakasitarelay_sceneSegmentDataEnd = .;
    _hakasitarelay_sceneSegmentDataSize = ABSOLUTE( _hakasitarelay_sceneSegmentDataEnd - _hakasitarelay_sceneSegmentDataStart );
        _hakasitarelay_sceneSegmentRoDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_scene.o (.rodata)
        _hakasitarelay_sceneSegmentRoDataEnd = .;
    _hakasitarelay_sceneSegmentRoDataSize = ABSOLUTE( _hakasitarelay_sceneSegmentRoDataEnd - _hakasitarelay_sceneSegmentRoDataStart );
        _hakasitarelay_sceneSegmentSDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_scene.o (.sdata)
        . = ALIGN(0x10);
        _hakasitarelay_sceneSegmentSDataEnd = .;
        _hakasitarelay_sceneSegmentOvlStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_scene.o (.ovl)
        . = ALIGN(0x10);
        _hakasitarelay_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _hakasitarelay_sceneSegmentOvlEnd - _hakasitarelay_sceneSegmentTextStart );
    _hakasitarelay_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakasitarelay_scene.bss ADDR(..hakasitarelay_scene) + SIZEOF(..hakasitarelay_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakasitarelay_sceneSegmentBssStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_scene.o (.sbss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_scene.o (.scommon)
            build/scenes/indoors/hakasitarelay/hakasitarelay_scene.o (.bss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_scene.o (COMMON)
        . = ALIGN(0x10);
        _hakasitarelay_sceneSegmentBssEnd = .;
        _hakasitarelay_sceneSegmentEnd = .;
    }
    _hakasitarelay_sceneSegmentBssSize = ABSOLUTE( _hakasitarelay_sceneSegmentBssEnd - _hakasitarelay_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakasitarelay_room_0SegmentRomStart = _RomSize;
    ..hakasitarelay_room_0 0x03000000 : AT(_RomSize)
    {
        _hakasitarelay_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _hakasitarelay_room_0SegmentTextStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_0.o (.text)
        _hakasitarelay_room_0SegmentTextEnd = .;
    _hakasitarelay_room_0SegmentTextSize = ABSOLUTE( _hakasitarelay_room_0SegmentTextEnd - _hakasitarelay_room_0SegmentTextStart );
        _hakasitarelay_room_0SegmentDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_0.o (.data)
        _hakasitarelay_room_0SegmentDataEnd = .;
    _hakasitarelay_room_0SegmentDataSize = ABSOLUTE( _hakasitarelay_room_0SegmentDataEnd - _hakasitarelay_room_0SegmentDataStart );
        _hakasitarelay_room_0SegmentRoDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_0.o (.rodata)
        _hakasitarelay_room_0SegmentRoDataEnd = .;
    _hakasitarelay_room_0SegmentRoDataSize = ABSOLUTE( _hakasitarelay_room_0SegmentRoDataEnd - _hakasitarelay_room_0SegmentRoDataStart );
        _hakasitarelay_room_0SegmentSDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_0.o (.sdata)
        . = ALIGN(0x10);
        _hakasitarelay_room_0SegmentSDataEnd = .;
        _hakasitarelay_room_0SegmentOvlStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_0.o (.ovl)
        . = ALIGN(0x10);
        _hakasitarelay_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _hakasitarelay_room_0SegmentOvlEnd - _hakasitarelay_room_0SegmentTextStart );
    _hakasitarelay_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakasitarelay_room_0.bss ADDR(..hakasitarelay_room_0) + SIZEOF(..hakasitarelay_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakasitarelay_room_0SegmentBssStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_0.o (.sbss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_0.o (.scommon)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_0.o (.bss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_0.o (COMMON)
        . = ALIGN(0x10);
        _hakasitarelay_room_0SegmentBssEnd = .;
        _hakasitarelay_room_0SegmentEnd = .;
    }
    _hakasitarelay_room_0SegmentBssSize = ABSOLUTE( _hakasitarelay_room_0SegmentBssEnd - _hakasitarelay_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakasitarelay_room_1SegmentRomStart = _RomSize;
    ..hakasitarelay_room_1 0x03000000 : AT(_RomSize)
    {
        _hakasitarelay_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _hakasitarelay_room_1SegmentTextStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_1.o (.text)
        _hakasitarelay_room_1SegmentTextEnd = .;
    _hakasitarelay_room_1SegmentTextSize = ABSOLUTE( _hakasitarelay_room_1SegmentTextEnd - _hakasitarelay_room_1SegmentTextStart );
        _hakasitarelay_room_1SegmentDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_1.o (.data)
        _hakasitarelay_room_1SegmentDataEnd = .;
    _hakasitarelay_room_1SegmentDataSize = ABSOLUTE( _hakasitarelay_room_1SegmentDataEnd - _hakasitarelay_room_1SegmentDataStart );
        _hakasitarelay_room_1SegmentRoDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_1.o (.rodata)
        _hakasitarelay_room_1SegmentRoDataEnd = .;
    _hakasitarelay_room_1SegmentRoDataSize = ABSOLUTE( _hakasitarelay_room_1SegmentRoDataEnd - _hakasitarelay_room_1SegmentRoDataStart );
        _hakasitarelay_room_1SegmentSDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_1.o (.sdata)
        . = ALIGN(0x10);
        _hakasitarelay_room_1SegmentSDataEnd = .;
        _hakasitarelay_room_1SegmentOvlStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_1.o (.ovl)
        . = ALIGN(0x10);
        _hakasitarelay_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _hakasitarelay_room_1SegmentOvlEnd - _hakasitarelay_room_1SegmentTextStart );
    _hakasitarelay_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakasitarelay_room_1.bss ADDR(..hakasitarelay_room_1) + SIZEOF(..hakasitarelay_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakasitarelay_room_1SegmentBssStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_1.o (.sbss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_1.o (.scommon)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_1.o (.bss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_1.o (COMMON)
        . = ALIGN(0x10);
        _hakasitarelay_room_1SegmentBssEnd = .;
        _hakasitarelay_room_1SegmentEnd = .;
    }
    _hakasitarelay_room_1SegmentBssSize = ABSOLUTE( _hakasitarelay_room_1SegmentBssEnd - _hakasitarelay_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakasitarelay_room_2SegmentRomStart = _RomSize;
    ..hakasitarelay_room_2 0x03000000 : AT(_RomSize)
    {
        _hakasitarelay_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _hakasitarelay_room_2SegmentTextStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_2.o (.text)
        _hakasitarelay_room_2SegmentTextEnd = .;
    _hakasitarelay_room_2SegmentTextSize = ABSOLUTE( _hakasitarelay_room_2SegmentTextEnd - _hakasitarelay_room_2SegmentTextStart );
        _hakasitarelay_room_2SegmentDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_2.o (.data)
        _hakasitarelay_room_2SegmentDataEnd = .;
    _hakasitarelay_room_2SegmentDataSize = ABSOLUTE( _hakasitarelay_room_2SegmentDataEnd - _hakasitarelay_room_2SegmentDataStart );
        _hakasitarelay_room_2SegmentRoDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_2.o (.rodata)
        _hakasitarelay_room_2SegmentRoDataEnd = .;
    _hakasitarelay_room_2SegmentRoDataSize = ABSOLUTE( _hakasitarelay_room_2SegmentRoDataEnd - _hakasitarelay_room_2SegmentRoDataStart );
        _hakasitarelay_room_2SegmentSDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_2.o (.sdata)
        . = ALIGN(0x10);
        _hakasitarelay_room_2SegmentSDataEnd = .;
        _hakasitarelay_room_2SegmentOvlStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_2.o (.ovl)
        . = ALIGN(0x10);
        _hakasitarelay_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _hakasitarelay_room_2SegmentOvlEnd - _hakasitarelay_room_2SegmentTextStart );
    _hakasitarelay_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakasitarelay_room_2.bss ADDR(..hakasitarelay_room_2) + SIZEOF(..hakasitarelay_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakasitarelay_room_2SegmentBssStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_2.o (.sbss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_2.o (.scommon)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_2.o (.bss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_2.o (COMMON)
        . = ALIGN(0x10);
        _hakasitarelay_room_2SegmentBssEnd = .;
        _hakasitarelay_room_2SegmentEnd = .;
    }
    _hakasitarelay_room_2SegmentBssSize = ABSOLUTE( _hakasitarelay_room_2SegmentBssEnd - _hakasitarelay_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakasitarelay_room_3SegmentRomStart = _RomSize;
    ..hakasitarelay_room_3 0x03000000 : AT(_RomSize)
    {
        _hakasitarelay_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _hakasitarelay_room_3SegmentTextStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_3.o (.text)
        _hakasitarelay_room_3SegmentTextEnd = .;
    _hakasitarelay_room_3SegmentTextSize = ABSOLUTE( _hakasitarelay_room_3SegmentTextEnd - _hakasitarelay_room_3SegmentTextStart );
        _hakasitarelay_room_3SegmentDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_3.o (.data)
        _hakasitarelay_room_3SegmentDataEnd = .;
    _hakasitarelay_room_3SegmentDataSize = ABSOLUTE( _hakasitarelay_room_3SegmentDataEnd - _hakasitarelay_room_3SegmentDataStart );
        _hakasitarelay_room_3SegmentRoDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_3.o (.rodata)
        _hakasitarelay_room_3SegmentRoDataEnd = .;
    _hakasitarelay_room_3SegmentRoDataSize = ABSOLUTE( _hakasitarelay_room_3SegmentRoDataEnd - _hakasitarelay_room_3SegmentRoDataStart );
        _hakasitarelay_room_3SegmentSDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_3.o (.sdata)
        . = ALIGN(0x10);
        _hakasitarelay_room_3SegmentSDataEnd = .;
        _hakasitarelay_room_3SegmentOvlStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_3.o (.ovl)
        . = ALIGN(0x10);
        _hakasitarelay_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _hakasitarelay_room_3SegmentOvlEnd - _hakasitarelay_room_3SegmentTextStart );
    _hakasitarelay_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakasitarelay_room_3.bss ADDR(..hakasitarelay_room_3) + SIZEOF(..hakasitarelay_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakasitarelay_room_3SegmentBssStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_3.o (.sbss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_3.o (.scommon)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_3.o (.bss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_3.o (COMMON)
        . = ALIGN(0x10);
        _hakasitarelay_room_3SegmentBssEnd = .;
        _hakasitarelay_room_3SegmentEnd = .;
    }
    _hakasitarelay_room_3SegmentBssSize = ABSOLUTE( _hakasitarelay_room_3SegmentBssEnd - _hakasitarelay_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakasitarelay_room_4SegmentRomStart = _RomSize;
    ..hakasitarelay_room_4 0x03000000 : AT(_RomSize)
    {
        _hakasitarelay_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _hakasitarelay_room_4SegmentTextStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_4.o (.text)
        _hakasitarelay_room_4SegmentTextEnd = .;
    _hakasitarelay_room_4SegmentTextSize = ABSOLUTE( _hakasitarelay_room_4SegmentTextEnd - _hakasitarelay_room_4SegmentTextStart );
        _hakasitarelay_room_4SegmentDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_4.o (.data)
        _hakasitarelay_room_4SegmentDataEnd = .;
    _hakasitarelay_room_4SegmentDataSize = ABSOLUTE( _hakasitarelay_room_4SegmentDataEnd - _hakasitarelay_room_4SegmentDataStart );
        _hakasitarelay_room_4SegmentRoDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_4.o (.rodata)
        _hakasitarelay_room_4SegmentRoDataEnd = .;
    _hakasitarelay_room_4SegmentRoDataSize = ABSOLUTE( _hakasitarelay_room_4SegmentRoDataEnd - _hakasitarelay_room_4SegmentRoDataStart );
        _hakasitarelay_room_4SegmentSDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_4.o (.sdata)
        . = ALIGN(0x10);
        _hakasitarelay_room_4SegmentSDataEnd = .;
        _hakasitarelay_room_4SegmentOvlStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_4.o (.ovl)
        . = ALIGN(0x10);
        _hakasitarelay_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _hakasitarelay_room_4SegmentOvlEnd - _hakasitarelay_room_4SegmentTextStart );
    _hakasitarelay_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakasitarelay_room_4.bss ADDR(..hakasitarelay_room_4) + SIZEOF(..hakasitarelay_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakasitarelay_room_4SegmentBssStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_4.o (.sbss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_4.o (.scommon)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_4.o (.bss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_4.o (COMMON)
        . = ALIGN(0x10);
        _hakasitarelay_room_4SegmentBssEnd = .;
        _hakasitarelay_room_4SegmentEnd = .;
    }
    _hakasitarelay_room_4SegmentBssSize = ABSOLUTE( _hakasitarelay_room_4SegmentBssEnd - _hakasitarelay_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakasitarelay_room_5SegmentRomStart = _RomSize;
    ..hakasitarelay_room_5 0x03000000 : AT(_RomSize)
    {
        _hakasitarelay_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _hakasitarelay_room_5SegmentTextStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_5.o (.text)
        _hakasitarelay_room_5SegmentTextEnd = .;
    _hakasitarelay_room_5SegmentTextSize = ABSOLUTE( _hakasitarelay_room_5SegmentTextEnd - _hakasitarelay_room_5SegmentTextStart );
        _hakasitarelay_room_5SegmentDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_5.o (.data)
        _hakasitarelay_room_5SegmentDataEnd = .;
    _hakasitarelay_room_5SegmentDataSize = ABSOLUTE( _hakasitarelay_room_5SegmentDataEnd - _hakasitarelay_room_5SegmentDataStart );
        _hakasitarelay_room_5SegmentRoDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_5.o (.rodata)
        _hakasitarelay_room_5SegmentRoDataEnd = .;
    _hakasitarelay_room_5SegmentRoDataSize = ABSOLUTE( _hakasitarelay_room_5SegmentRoDataEnd - _hakasitarelay_room_5SegmentRoDataStart );
        _hakasitarelay_room_5SegmentSDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_5.o (.sdata)
        . = ALIGN(0x10);
        _hakasitarelay_room_5SegmentSDataEnd = .;
        _hakasitarelay_room_5SegmentOvlStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_5.o (.ovl)
        . = ALIGN(0x10);
        _hakasitarelay_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _hakasitarelay_room_5SegmentOvlEnd - _hakasitarelay_room_5SegmentTextStart );
    _hakasitarelay_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakasitarelay_room_5.bss ADDR(..hakasitarelay_room_5) + SIZEOF(..hakasitarelay_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakasitarelay_room_5SegmentBssStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_5.o (.sbss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_5.o (.scommon)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_5.o (.bss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_5.o (COMMON)
        . = ALIGN(0x10);
        _hakasitarelay_room_5SegmentBssEnd = .;
        _hakasitarelay_room_5SegmentEnd = .;
    }
    _hakasitarelay_room_5SegmentBssSize = ABSOLUTE( _hakasitarelay_room_5SegmentBssEnd - _hakasitarelay_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakasitarelay_room_6SegmentRomStart = _RomSize;
    ..hakasitarelay_room_6 0x03000000 : AT(_RomSize)
    {
        _hakasitarelay_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _hakasitarelay_room_6SegmentTextStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_6.o (.text)
        _hakasitarelay_room_6SegmentTextEnd = .;
    _hakasitarelay_room_6SegmentTextSize = ABSOLUTE( _hakasitarelay_room_6SegmentTextEnd - _hakasitarelay_room_6SegmentTextStart );
        _hakasitarelay_room_6SegmentDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_6.o (.data)
        _hakasitarelay_room_6SegmentDataEnd = .;
    _hakasitarelay_room_6SegmentDataSize = ABSOLUTE( _hakasitarelay_room_6SegmentDataEnd - _hakasitarelay_room_6SegmentDataStart );
        _hakasitarelay_room_6SegmentRoDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_6.o (.rodata)
        _hakasitarelay_room_6SegmentRoDataEnd = .;
    _hakasitarelay_room_6SegmentRoDataSize = ABSOLUTE( _hakasitarelay_room_6SegmentRoDataEnd - _hakasitarelay_room_6SegmentRoDataStart );
        _hakasitarelay_room_6SegmentSDataStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_6.o (.sdata)
        . = ALIGN(0x10);
        _hakasitarelay_room_6SegmentSDataEnd = .;
        _hakasitarelay_room_6SegmentOvlStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_6.o (.ovl)
        . = ALIGN(0x10);
        _hakasitarelay_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _hakasitarelay_room_6SegmentOvlEnd - _hakasitarelay_room_6SegmentTextStart );
    _hakasitarelay_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakasitarelay_room_6.bss ADDR(..hakasitarelay_room_6) + SIZEOF(..hakasitarelay_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakasitarelay_room_6SegmentBssStart = .;
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_6.o (.sbss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_6.o (.scommon)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_6.o (.bss)
            build/scenes/indoors/hakasitarelay/hakasitarelay_room_6.o (COMMON)
        . = ALIGN(0x10);
        _hakasitarelay_room_6SegmentBssEnd = .;
        _hakasitarelay_room_6SegmentEnd = .;
    }
    _hakasitarelay_room_6SegmentBssSize = ABSOLUTE( _hakasitarelay_room_6SegmentBssEnd - _hakasitarelay_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _shrine_sceneSegmentRomStart = _RomSize;
    ..shrine_scene 0x02000000 : AT(_RomSize)
    {
        _shrine_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _shrine_sceneSegmentTextStart = .;
            build/scenes/misc/shrine/shrine_scene.o (.text)
        _shrine_sceneSegmentTextEnd = .;
    _shrine_sceneSegmentTextSize = ABSOLUTE( _shrine_sceneSegmentTextEnd - _shrine_sceneSegmentTextStart );
        _shrine_sceneSegmentDataStart = .;
            build/scenes/misc/shrine/shrine_scene.o (.data)
        _shrine_sceneSegmentDataEnd = .;
    _shrine_sceneSegmentDataSize = ABSOLUTE( _shrine_sceneSegmentDataEnd - _shrine_sceneSegmentDataStart );
        _shrine_sceneSegmentRoDataStart = .;
            build/scenes/misc/shrine/shrine_scene.o (.rodata)
        _shrine_sceneSegmentRoDataEnd = .;
    _shrine_sceneSegmentRoDataSize = ABSOLUTE( _shrine_sceneSegmentRoDataEnd - _shrine_sceneSegmentRoDataStart );
        _shrine_sceneSegmentSDataStart = .;
            build/scenes/misc/shrine/shrine_scene.o (.sdata)
        . = ALIGN(0x10);
        _shrine_sceneSegmentSDataEnd = .;
        _shrine_sceneSegmentOvlStart = .;
            build/scenes/misc/shrine/shrine_scene.o (.ovl)
        . = ALIGN(0x10);
        _shrine_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _shrine_sceneSegmentOvlEnd - _shrine_sceneSegmentTextStart );
    _shrine_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..shrine_scene.bss ADDR(..shrine_scene) + SIZEOF(..shrine_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _shrine_sceneSegmentBssStart = .;
            build/scenes/misc/shrine/shrine_scene.o (.sbss)
            build/scenes/misc/shrine/shrine_scene.o (.scommon)
            build/scenes/misc/shrine/shrine_scene.o (.bss)
            build/scenes/misc/shrine/shrine_scene.o (COMMON)
        . = ALIGN(0x10);
        _shrine_sceneSegmentBssEnd = .;
        _shrine_sceneSegmentEnd = .;
    }
    _shrine_sceneSegmentBssSize = ABSOLUTE( _shrine_sceneSegmentBssEnd - _shrine_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _shrine_room_0SegmentRomStart = _RomSize;
    ..shrine_room_0 0x03000000 : AT(_RomSize)
    {
        _shrine_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _shrine_room_0SegmentTextStart = .;
            build/scenes/misc/shrine/shrine_room_0.o (.text)
        _shrine_room_0SegmentTextEnd = .;
    _shrine_room_0SegmentTextSize = ABSOLUTE( _shrine_room_0SegmentTextEnd - _shrine_room_0SegmentTextStart );
        _shrine_room_0SegmentDataStart = .;
            build/scenes/misc/shrine/shrine_room_0.o (.data)
        _shrine_room_0SegmentDataEnd = .;
    _shrine_room_0SegmentDataSize = ABSOLUTE( _shrine_room_0SegmentDataEnd - _shrine_room_0SegmentDataStart );
        _shrine_room_0SegmentRoDataStart = .;
            build/scenes/misc/shrine/shrine_room_0.o (.rodata)
        _shrine_room_0SegmentRoDataEnd = .;
    _shrine_room_0SegmentRoDataSize = ABSOLUTE( _shrine_room_0SegmentRoDataEnd - _shrine_room_0SegmentRoDataStart );
        _shrine_room_0SegmentSDataStart = .;
            build/scenes/misc/shrine/shrine_room_0.o (.sdata)
        . = ALIGN(0x10);
        _shrine_room_0SegmentSDataEnd = .;
        _shrine_room_0SegmentOvlStart = .;
            build/scenes/misc/shrine/shrine_room_0.o (.ovl)
        . = ALIGN(0x10);
        _shrine_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _shrine_room_0SegmentOvlEnd - _shrine_room_0SegmentTextStart );
    _shrine_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..shrine_room_0.bss ADDR(..shrine_room_0) + SIZEOF(..shrine_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _shrine_room_0SegmentBssStart = .;
            build/scenes/misc/shrine/shrine_room_0.o (.sbss)
            build/scenes/misc/shrine/shrine_room_0.o (.scommon)
            build/scenes/misc/shrine/shrine_room_0.o (.bss)
            build/scenes/misc/shrine/shrine_room_0.o (COMMON)
        . = ALIGN(0x10);
        _shrine_room_0SegmentBssEnd = .;
        _shrine_room_0SegmentEnd = .;
    }
    _shrine_room_0SegmentBssSize = ABSOLUTE( _shrine_room_0SegmentBssEnd - _shrine_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _turibori_sceneSegmentRomStart = _RomSize;
    ..turibori_scene 0x02000000 : AT(_RomSize)
    {
        _turibori_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _turibori_sceneSegmentTextStart = .;
            build/scenes/misc/turibori/turibori_scene.o (.text)
        _turibori_sceneSegmentTextEnd = .;
    _turibori_sceneSegmentTextSize = ABSOLUTE( _turibori_sceneSegmentTextEnd - _turibori_sceneSegmentTextStart );
        _turibori_sceneSegmentDataStart = .;
            build/scenes/misc/turibori/turibori_scene.o (.data)
        _turibori_sceneSegmentDataEnd = .;
    _turibori_sceneSegmentDataSize = ABSOLUTE( _turibori_sceneSegmentDataEnd - _turibori_sceneSegmentDataStart );
        _turibori_sceneSegmentRoDataStart = .;
            build/scenes/misc/turibori/turibori_scene.o (.rodata)
        _turibori_sceneSegmentRoDataEnd = .;
    _turibori_sceneSegmentRoDataSize = ABSOLUTE( _turibori_sceneSegmentRoDataEnd - _turibori_sceneSegmentRoDataStart );
        _turibori_sceneSegmentSDataStart = .;
            build/scenes/misc/turibori/turibori_scene.o (.sdata)
        . = ALIGN(0x10);
        _turibori_sceneSegmentSDataEnd = .;
        _turibori_sceneSegmentOvlStart = .;
            build/scenes/misc/turibori/turibori_scene.o (.ovl)
        . = ALIGN(0x10);
        _turibori_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _turibori_sceneSegmentOvlEnd - _turibori_sceneSegmentTextStart );
    _turibori_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..turibori_scene.bss ADDR(..turibori_scene) + SIZEOF(..turibori_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _turibori_sceneSegmentBssStart = .;
            build/scenes/misc/turibori/turibori_scene.o (.sbss)
            build/scenes/misc/turibori/turibori_scene.o (.scommon)
            build/scenes/misc/turibori/turibori_scene.o (.bss)
            build/scenes/misc/turibori/turibori_scene.o (COMMON)
        . = ALIGN(0x10);
        _turibori_sceneSegmentBssEnd = .;
        _turibori_sceneSegmentEnd = .;
    }
    _turibori_sceneSegmentBssSize = ABSOLUTE( _turibori_sceneSegmentBssEnd - _turibori_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _turibori_room_0SegmentRomStart = _RomSize;
    ..turibori_room_0 0x03000000 : AT(_RomSize)
    {
        _turibori_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _turibori_room_0SegmentTextStart = .;
            build/scenes/misc/turibori/turibori_room_0.o (.text)
        _turibori_room_0SegmentTextEnd = .;
    _turibori_room_0SegmentTextSize = ABSOLUTE( _turibori_room_0SegmentTextEnd - _turibori_room_0SegmentTextStart );
        _turibori_room_0SegmentDataStart = .;
            build/scenes/misc/turibori/turibori_room_0.o (.data)
        _turibori_room_0SegmentDataEnd = .;
    _turibori_room_0SegmentDataSize = ABSOLUTE( _turibori_room_0SegmentDataEnd - _turibori_room_0SegmentDataStart );
        _turibori_room_0SegmentRoDataStart = .;
            build/scenes/misc/turibori/turibori_room_0.o (.rodata)
        _turibori_room_0SegmentRoDataEnd = .;
    _turibori_room_0SegmentRoDataSize = ABSOLUTE( _turibori_room_0SegmentRoDataEnd - _turibori_room_0SegmentRoDataStart );
        _turibori_room_0SegmentSDataStart = .;
            build/scenes/misc/turibori/turibori_room_0.o (.sdata)
        . = ALIGN(0x10);
        _turibori_room_0SegmentSDataEnd = .;
        _turibori_room_0SegmentOvlStart = .;
            build/scenes/misc/turibori/turibori_room_0.o (.ovl)
        . = ALIGN(0x10);
        _turibori_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _turibori_room_0SegmentOvlEnd - _turibori_room_0SegmentTextStart );
    _turibori_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..turibori_room_0.bss ADDR(..turibori_room_0) + SIZEOF(..turibori_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _turibori_room_0SegmentBssStart = .;
            build/scenes/misc/turibori/turibori_room_0.o (.sbss)
            build/scenes/misc/turibori/turibori_room_0.o (.scommon)
            build/scenes/misc/turibori/turibori_room_0.o (.bss)
            build/scenes/misc/turibori/turibori_room_0.o (COMMON)
        . = ALIGN(0x10);
        _turibori_room_0SegmentBssEnd = .;
        _turibori_room_0SegmentEnd = .;
    }
    _turibori_room_0SegmentBssSize = ABSOLUTE( _turibori_room_0SegmentBssEnd - _turibori_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _shrine_n_sceneSegmentRomStart = _RomSize;
    ..shrine_n_scene 0x02000000 : AT(_RomSize)
    {
        _shrine_n_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _shrine_n_sceneSegmentTextStart = .;
            build/scenes/misc/shrine_n/shrine_n_scene.o (.text)
        _shrine_n_sceneSegmentTextEnd = .;
    _shrine_n_sceneSegmentTextSize = ABSOLUTE( _shrine_n_sceneSegmentTextEnd - _shrine_n_sceneSegmentTextStart );
        _shrine_n_sceneSegmentDataStart = .;
            build/scenes/misc/shrine_n/shrine_n_scene.o (.data)
        _shrine_n_sceneSegmentDataEnd = .;
    _shrine_n_sceneSegmentDataSize = ABSOLUTE( _shrine_n_sceneSegmentDataEnd - _shrine_n_sceneSegmentDataStart );
        _shrine_n_sceneSegmentRoDataStart = .;
            build/scenes/misc/shrine_n/shrine_n_scene.o (.rodata)
        _shrine_n_sceneSegmentRoDataEnd = .;
    _shrine_n_sceneSegmentRoDataSize = ABSOLUTE( _shrine_n_sceneSegmentRoDataEnd - _shrine_n_sceneSegmentRoDataStart );
        _shrine_n_sceneSegmentSDataStart = .;
            build/scenes/misc/shrine_n/shrine_n_scene.o (.sdata)
        . = ALIGN(0x10);
        _shrine_n_sceneSegmentSDataEnd = .;
        _shrine_n_sceneSegmentOvlStart = .;
            build/scenes/misc/shrine_n/shrine_n_scene.o (.ovl)
        . = ALIGN(0x10);
        _shrine_n_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _shrine_n_sceneSegmentOvlEnd - _shrine_n_sceneSegmentTextStart );
    _shrine_n_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..shrine_n_scene.bss ADDR(..shrine_n_scene) + SIZEOF(..shrine_n_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _shrine_n_sceneSegmentBssStart = .;
            build/scenes/misc/shrine_n/shrine_n_scene.o (.sbss)
            build/scenes/misc/shrine_n/shrine_n_scene.o (.scommon)
            build/scenes/misc/shrine_n/shrine_n_scene.o (.bss)
            build/scenes/misc/shrine_n/shrine_n_scene.o (COMMON)
        . = ALIGN(0x10);
        _shrine_n_sceneSegmentBssEnd = .;
        _shrine_n_sceneSegmentEnd = .;
    }
    _shrine_n_sceneSegmentBssSize = ABSOLUTE( _shrine_n_sceneSegmentBssEnd - _shrine_n_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _shrine_n_room_0SegmentRomStart = _RomSize;
    ..shrine_n_room_0 0x03000000 : AT(_RomSize)
    {
        _shrine_n_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _shrine_n_room_0SegmentTextStart = .;
            build/scenes/misc/shrine_n/shrine_n_room_0.o (.text)
        _shrine_n_room_0SegmentTextEnd = .;
    _shrine_n_room_0SegmentTextSize = ABSOLUTE( _shrine_n_room_0SegmentTextEnd - _shrine_n_room_0SegmentTextStart );
        _shrine_n_room_0SegmentDataStart = .;
            build/scenes/misc/shrine_n/shrine_n_room_0.o (.data)
        _shrine_n_room_0SegmentDataEnd = .;
    _shrine_n_room_0SegmentDataSize = ABSOLUTE( _shrine_n_room_0SegmentDataEnd - _shrine_n_room_0SegmentDataStart );
        _shrine_n_room_0SegmentRoDataStart = .;
            build/scenes/misc/shrine_n/shrine_n_room_0.o (.rodata)
        _shrine_n_room_0SegmentRoDataEnd = .;
    _shrine_n_room_0SegmentRoDataSize = ABSOLUTE( _shrine_n_room_0SegmentRoDataEnd - _shrine_n_room_0SegmentRoDataStart );
        _shrine_n_room_0SegmentSDataStart = .;
            build/scenes/misc/shrine_n/shrine_n_room_0.o (.sdata)
        . = ALIGN(0x10);
        _shrine_n_room_0SegmentSDataEnd = .;
        _shrine_n_room_0SegmentOvlStart = .;
            build/scenes/misc/shrine_n/shrine_n_room_0.o (.ovl)
        . = ALIGN(0x10);
        _shrine_n_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _shrine_n_room_0SegmentOvlEnd - _shrine_n_room_0SegmentTextStart );
    _shrine_n_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..shrine_n_room_0.bss ADDR(..shrine_n_room_0) + SIZEOF(..shrine_n_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _shrine_n_room_0SegmentBssStart = .;
            build/scenes/misc/shrine_n/shrine_n_room_0.o (.sbss)
            build/scenes/misc/shrine_n/shrine_n_room_0.o (.scommon)
            build/scenes/misc/shrine_n/shrine_n_room_0.o (.bss)
            build/scenes/misc/shrine_n/shrine_n_room_0.o (COMMON)
        . = ALIGN(0x10);
        _shrine_n_room_0SegmentBssEnd = .;
        _shrine_n_room_0SegmentEnd = .;
    }
    _shrine_n_room_0SegmentBssSize = ABSOLUTE( _shrine_n_room_0SegmentBssEnd - _shrine_n_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _shrine_r_sceneSegmentRomStart = _RomSize;
    ..shrine_r_scene 0x02000000 : AT(_RomSize)
    {
        _shrine_r_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _shrine_r_sceneSegmentTextStart = .;
            build/scenes/misc/shrine_r/shrine_r_scene.o (.text)
        _shrine_r_sceneSegmentTextEnd = .;
    _shrine_r_sceneSegmentTextSize = ABSOLUTE( _shrine_r_sceneSegmentTextEnd - _shrine_r_sceneSegmentTextStart );
        _shrine_r_sceneSegmentDataStart = .;
            build/scenes/misc/shrine_r/shrine_r_scene.o (.data)
        _shrine_r_sceneSegmentDataEnd = .;
    _shrine_r_sceneSegmentDataSize = ABSOLUTE( _shrine_r_sceneSegmentDataEnd - _shrine_r_sceneSegmentDataStart );
        _shrine_r_sceneSegmentRoDataStart = .;
            build/scenes/misc/shrine_r/shrine_r_scene.o (.rodata)
        _shrine_r_sceneSegmentRoDataEnd = .;
    _shrine_r_sceneSegmentRoDataSize = ABSOLUTE( _shrine_r_sceneSegmentRoDataEnd - _shrine_r_sceneSegmentRoDataStart );
        _shrine_r_sceneSegmentSDataStart = .;
            build/scenes/misc/shrine_r/shrine_r_scene.o (.sdata)
        . = ALIGN(0x10);
        _shrine_r_sceneSegmentSDataEnd = .;
        _shrine_r_sceneSegmentOvlStart = .;
            build/scenes/misc/shrine_r/shrine_r_scene.o (.ovl)
        . = ALIGN(0x10);
        _shrine_r_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _shrine_r_sceneSegmentOvlEnd - _shrine_r_sceneSegmentTextStart );
    _shrine_r_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..shrine_r_scene.bss ADDR(..shrine_r_scene) + SIZEOF(..shrine_r_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _shrine_r_sceneSegmentBssStart = .;
            build/scenes/misc/shrine_r/shrine_r_scene.o (.sbss)
            build/scenes/misc/shrine_r/shrine_r_scene.o (.scommon)
            build/scenes/misc/shrine_r/shrine_r_scene.o (.bss)
            build/scenes/misc/shrine_r/shrine_r_scene.o (COMMON)
        . = ALIGN(0x10);
        _shrine_r_sceneSegmentBssEnd = .;
        _shrine_r_sceneSegmentEnd = .;
    }
    _shrine_r_sceneSegmentBssSize = ABSOLUTE( _shrine_r_sceneSegmentBssEnd - _shrine_r_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _shrine_r_room_0SegmentRomStart = _RomSize;
    ..shrine_r_room_0 0x03000000 : AT(_RomSize)
    {
        _shrine_r_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _shrine_r_room_0SegmentTextStart = .;
            build/scenes/misc/shrine_r/shrine_r_room_0.o (.text)
        _shrine_r_room_0SegmentTextEnd = .;
    _shrine_r_room_0SegmentTextSize = ABSOLUTE( _shrine_r_room_0SegmentTextEnd - _shrine_r_room_0SegmentTextStart );
        _shrine_r_room_0SegmentDataStart = .;
            build/scenes/misc/shrine_r/shrine_r_room_0.o (.data)
        _shrine_r_room_0SegmentDataEnd = .;
    _shrine_r_room_0SegmentDataSize = ABSOLUTE( _shrine_r_room_0SegmentDataEnd - _shrine_r_room_0SegmentDataStart );
        _shrine_r_room_0SegmentRoDataStart = .;
            build/scenes/misc/shrine_r/shrine_r_room_0.o (.rodata)
        _shrine_r_room_0SegmentRoDataEnd = .;
    _shrine_r_room_0SegmentRoDataSize = ABSOLUTE( _shrine_r_room_0SegmentRoDataEnd - _shrine_r_room_0SegmentRoDataStart );
        _shrine_r_room_0SegmentSDataStart = .;
            build/scenes/misc/shrine_r/shrine_r_room_0.o (.sdata)
        . = ALIGN(0x10);
        _shrine_r_room_0SegmentSDataEnd = .;
        _shrine_r_room_0SegmentOvlStart = .;
            build/scenes/misc/shrine_r/shrine_r_room_0.o (.ovl)
        . = ALIGN(0x10);
        _shrine_r_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _shrine_r_room_0SegmentOvlEnd - _shrine_r_room_0SegmentTextStart );
    _shrine_r_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..shrine_r_room_0.bss ADDR(..shrine_r_room_0) + SIZEOF(..shrine_r_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _shrine_r_room_0SegmentBssStart = .;
            build/scenes/misc/shrine_r/shrine_r_room_0.o (.sbss)
            build/scenes/misc/shrine_r/shrine_r_room_0.o (.scommon)
            build/scenes/misc/shrine_r/shrine_r_room_0.o (.bss)
            build/scenes/misc/shrine_r/shrine_r_room_0.o (COMMON)
        . = ALIGN(0x10);
        _shrine_r_room_0SegmentBssEnd = .;
        _shrine_r_room_0SegmentEnd = .;
    }
    _shrine_r_room_0SegmentBssSize = ABSOLUTE( _shrine_r_room_0SegmentBssEnd - _shrine_r_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakaana2_sceneSegmentRomStart = _RomSize;
    ..hakaana2_scene 0x02000000 : AT(_RomSize)
    {
        _hakaana2_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _hakaana2_sceneSegmentTextStart = .;
            build/scenes/misc/hakaana2/hakaana2_scene.o (.text)
        _hakaana2_sceneSegmentTextEnd = .;
    _hakaana2_sceneSegmentTextSize = ABSOLUTE( _hakaana2_sceneSegmentTextEnd - _hakaana2_sceneSegmentTextStart );
        _hakaana2_sceneSegmentDataStart = .;
            build/scenes/misc/hakaana2/hakaana2_scene.o (.data)
        _hakaana2_sceneSegmentDataEnd = .;
    _hakaana2_sceneSegmentDataSize = ABSOLUTE( _hakaana2_sceneSegmentDataEnd - _hakaana2_sceneSegmentDataStart );
        _hakaana2_sceneSegmentRoDataStart = .;
            build/scenes/misc/hakaana2/hakaana2_scene.o (.rodata)
        _hakaana2_sceneSegmentRoDataEnd = .;
    _hakaana2_sceneSegmentRoDataSize = ABSOLUTE( _hakaana2_sceneSegmentRoDataEnd - _hakaana2_sceneSegmentRoDataStart );
        _hakaana2_sceneSegmentSDataStart = .;
            build/scenes/misc/hakaana2/hakaana2_scene.o (.sdata)
        . = ALIGN(0x10);
        _hakaana2_sceneSegmentSDataEnd = .;
        _hakaana2_sceneSegmentOvlStart = .;
            build/scenes/misc/hakaana2/hakaana2_scene.o (.ovl)
        . = ALIGN(0x10);
        _hakaana2_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _hakaana2_sceneSegmentOvlEnd - _hakaana2_sceneSegmentTextStart );
    _hakaana2_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakaana2_scene.bss ADDR(..hakaana2_scene) + SIZEOF(..hakaana2_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakaana2_sceneSegmentBssStart = .;
            build/scenes/misc/hakaana2/hakaana2_scene.o (.sbss)
            build/scenes/misc/hakaana2/hakaana2_scene.o (.scommon)
            build/scenes/misc/hakaana2/hakaana2_scene.o (.bss)
            build/scenes/misc/hakaana2/hakaana2_scene.o (COMMON)
        . = ALIGN(0x10);
        _hakaana2_sceneSegmentBssEnd = .;
        _hakaana2_sceneSegmentEnd = .;
    }
    _hakaana2_sceneSegmentBssSize = ABSOLUTE( _hakaana2_sceneSegmentBssEnd - _hakaana2_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakaana2_room_0SegmentRomStart = _RomSize;
    ..hakaana2_room_0 0x03000000 : AT(_RomSize)
    {
        _hakaana2_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _hakaana2_room_0SegmentTextStart = .;
            build/scenes/misc/hakaana2/hakaana2_room_0.o (.text)
        _hakaana2_room_0SegmentTextEnd = .;
    _hakaana2_room_0SegmentTextSize = ABSOLUTE( _hakaana2_room_0SegmentTextEnd - _hakaana2_room_0SegmentTextStart );
        _hakaana2_room_0SegmentDataStart = .;
            build/scenes/misc/hakaana2/hakaana2_room_0.o (.data)
        _hakaana2_room_0SegmentDataEnd = .;
    _hakaana2_room_0SegmentDataSize = ABSOLUTE( _hakaana2_room_0SegmentDataEnd - _hakaana2_room_0SegmentDataStart );
        _hakaana2_room_0SegmentRoDataStart = .;
            build/scenes/misc/hakaana2/hakaana2_room_0.o (.rodata)
        _hakaana2_room_0SegmentRoDataEnd = .;
    _hakaana2_room_0SegmentRoDataSize = ABSOLUTE( _hakaana2_room_0SegmentRoDataEnd - _hakaana2_room_0SegmentRoDataStart );
        _hakaana2_room_0SegmentSDataStart = .;
            build/scenes/misc/hakaana2/hakaana2_room_0.o (.sdata)
        . = ALIGN(0x10);
        _hakaana2_room_0SegmentSDataEnd = .;
        _hakaana2_room_0SegmentOvlStart = .;
            build/scenes/misc/hakaana2/hakaana2_room_0.o (.ovl)
        . = ALIGN(0x10);
        _hakaana2_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _hakaana2_room_0SegmentOvlEnd - _hakaana2_room_0SegmentTextStart );
    _hakaana2_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakaana2_room_0.bss ADDR(..hakaana2_room_0) + SIZEOF(..hakaana2_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakaana2_room_0SegmentBssStart = .;
            build/scenes/misc/hakaana2/hakaana2_room_0.o (.sbss)
            build/scenes/misc/hakaana2/hakaana2_room_0.o (.scommon)
            build/scenes/misc/hakaana2/hakaana2_room_0.o (.bss)
            build/scenes/misc/hakaana2/hakaana2_room_0.o (COMMON)
        . = ALIGN(0x10);
        _hakaana2_room_0SegmentBssEnd = .;
        _hakaana2_room_0SegmentEnd = .;
    }
    _hakaana2_room_0SegmentBssSize = ABSOLUTE( _hakaana2_room_0SegmentBssEnd - _hakaana2_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _gerudoway_sceneSegmentRomStart = _RomSize;
    ..gerudoway_scene 0x02000000 : AT(_RomSize)
    {
        _gerudoway_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _gerudoway_sceneSegmentTextStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_scene.o (.text)
        _gerudoway_sceneSegmentTextEnd = .;
    _gerudoway_sceneSegmentTextSize = ABSOLUTE( _gerudoway_sceneSegmentTextEnd - _gerudoway_sceneSegmentTextStart );
        _gerudoway_sceneSegmentDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_scene.o (.data)
        _gerudoway_sceneSegmentDataEnd = .;
    _gerudoway_sceneSegmentDataSize = ABSOLUTE( _gerudoway_sceneSegmentDataEnd - _gerudoway_sceneSegmentDataStart );
        _gerudoway_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_scene.o (.rodata)
        _gerudoway_sceneSegmentRoDataEnd = .;
    _gerudoway_sceneSegmentRoDataSize = ABSOLUTE( _gerudoway_sceneSegmentRoDataEnd - _gerudoway_sceneSegmentRoDataStart );
        _gerudoway_sceneSegmentSDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_scene.o (.sdata)
        . = ALIGN(0x10);
        _gerudoway_sceneSegmentSDataEnd = .;
        _gerudoway_sceneSegmentOvlStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_scene.o (.ovl)
        . = ALIGN(0x10);
        _gerudoway_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _gerudoway_sceneSegmentOvlEnd - _gerudoway_sceneSegmentTextStart );
    _gerudoway_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..gerudoway_scene.bss ADDR(..gerudoway_scene) + SIZEOF(..gerudoway_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _gerudoway_sceneSegmentBssStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_scene.o (.sbss)
            build/scenes/dungeons/gerudoway/gerudoway_scene.o (.scommon)
            build/scenes/dungeons/gerudoway/gerudoway_scene.o (.bss)
            build/scenes/dungeons/gerudoway/gerudoway_scene.o (COMMON)
        . = ALIGN(0x10);
        _gerudoway_sceneSegmentBssEnd = .;
        _gerudoway_sceneSegmentEnd = .;
    }
    _gerudoway_sceneSegmentBssSize = ABSOLUTE( _gerudoway_sceneSegmentBssEnd - _gerudoway_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _gerudoway_room_0SegmentRomStart = _RomSize;
    ..gerudoway_room_0 0x03000000 : AT(_RomSize)
    {
        _gerudoway_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _gerudoway_room_0SegmentTextStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_0.o (.text)
        _gerudoway_room_0SegmentTextEnd = .;
    _gerudoway_room_0SegmentTextSize = ABSOLUTE( _gerudoway_room_0SegmentTextEnd - _gerudoway_room_0SegmentTextStart );
        _gerudoway_room_0SegmentDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_0.o (.data)
        _gerudoway_room_0SegmentDataEnd = .;
    _gerudoway_room_0SegmentDataSize = ABSOLUTE( _gerudoway_room_0SegmentDataEnd - _gerudoway_room_0SegmentDataStart );
        _gerudoway_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_0.o (.rodata)
        _gerudoway_room_0SegmentRoDataEnd = .;
    _gerudoway_room_0SegmentRoDataSize = ABSOLUTE( _gerudoway_room_0SegmentRoDataEnd - _gerudoway_room_0SegmentRoDataStart );
        _gerudoway_room_0SegmentSDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_0.o (.sdata)
        . = ALIGN(0x10);
        _gerudoway_room_0SegmentSDataEnd = .;
        _gerudoway_room_0SegmentOvlStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_0.o (.ovl)
        . = ALIGN(0x10);
        _gerudoway_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _gerudoway_room_0SegmentOvlEnd - _gerudoway_room_0SegmentTextStart );
    _gerudoway_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..gerudoway_room_0.bss ADDR(..gerudoway_room_0) + SIZEOF(..gerudoway_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _gerudoway_room_0SegmentBssStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_0.o (.sbss)
            build/scenes/dungeons/gerudoway/gerudoway_room_0.o (.scommon)
            build/scenes/dungeons/gerudoway/gerudoway_room_0.o (.bss)
            build/scenes/dungeons/gerudoway/gerudoway_room_0.o (COMMON)
        . = ALIGN(0x10);
        _gerudoway_room_0SegmentBssEnd = .;
        _gerudoway_room_0SegmentEnd = .;
    }
    _gerudoway_room_0SegmentBssSize = ABSOLUTE( _gerudoway_room_0SegmentBssEnd - _gerudoway_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _gerudoway_room_1SegmentRomStart = _RomSize;
    ..gerudoway_room_1 0x03000000 : AT(_RomSize)
    {
        _gerudoway_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _gerudoway_room_1SegmentTextStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_1.o (.text)
        _gerudoway_room_1SegmentTextEnd = .;
    _gerudoway_room_1SegmentTextSize = ABSOLUTE( _gerudoway_room_1SegmentTextEnd - _gerudoway_room_1SegmentTextStart );
        _gerudoway_room_1SegmentDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_1.o (.data)
        _gerudoway_room_1SegmentDataEnd = .;
    _gerudoway_room_1SegmentDataSize = ABSOLUTE( _gerudoway_room_1SegmentDataEnd - _gerudoway_room_1SegmentDataStart );
        _gerudoway_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_1.o (.rodata)
        _gerudoway_room_1SegmentRoDataEnd = .;
    _gerudoway_room_1SegmentRoDataSize = ABSOLUTE( _gerudoway_room_1SegmentRoDataEnd - _gerudoway_room_1SegmentRoDataStart );
        _gerudoway_room_1SegmentSDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_1.o (.sdata)
        . = ALIGN(0x10);
        _gerudoway_room_1SegmentSDataEnd = .;
        _gerudoway_room_1SegmentOvlStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_1.o (.ovl)
        . = ALIGN(0x10);
        _gerudoway_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _gerudoway_room_1SegmentOvlEnd - _gerudoway_room_1SegmentTextStart );
    _gerudoway_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..gerudoway_room_1.bss ADDR(..gerudoway_room_1) + SIZEOF(..gerudoway_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _gerudoway_room_1SegmentBssStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_1.o (.sbss)
            build/scenes/dungeons/gerudoway/gerudoway_room_1.o (.scommon)
            build/scenes/dungeons/gerudoway/gerudoway_room_1.o (.bss)
            build/scenes/dungeons/gerudoway/gerudoway_room_1.o (COMMON)
        . = ALIGN(0x10);
        _gerudoway_room_1SegmentBssEnd = .;
        _gerudoway_room_1SegmentEnd = .;
    }
    _gerudoway_room_1SegmentBssSize = ABSOLUTE( _gerudoway_room_1SegmentBssEnd - _gerudoway_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _gerudoway_room_2SegmentRomStart = _RomSize;
    ..gerudoway_room_2 0x03000000 : AT(_RomSize)
    {
        _gerudoway_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _gerudoway_room_2SegmentTextStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_2.o (.text)
        _gerudoway_room_2SegmentTextEnd = .;
    _gerudoway_room_2SegmentTextSize = ABSOLUTE( _gerudoway_room_2SegmentTextEnd - _gerudoway_room_2SegmentTextStart );
        _gerudoway_room_2SegmentDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_2.o (.data)
        _gerudoway_room_2SegmentDataEnd = .;
    _gerudoway_room_2SegmentDataSize = ABSOLUTE( _gerudoway_room_2SegmentDataEnd - _gerudoway_room_2SegmentDataStart );
        _gerudoway_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_2.o (.rodata)
        _gerudoway_room_2SegmentRoDataEnd = .;
    _gerudoway_room_2SegmentRoDataSize = ABSOLUTE( _gerudoway_room_2SegmentRoDataEnd - _gerudoway_room_2SegmentRoDataStart );
        _gerudoway_room_2SegmentSDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_2.o (.sdata)
        . = ALIGN(0x10);
        _gerudoway_room_2SegmentSDataEnd = .;
        _gerudoway_room_2SegmentOvlStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_2.o (.ovl)
        . = ALIGN(0x10);
        _gerudoway_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _gerudoway_room_2SegmentOvlEnd - _gerudoway_room_2SegmentTextStart );
    _gerudoway_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..gerudoway_room_2.bss ADDR(..gerudoway_room_2) + SIZEOF(..gerudoway_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _gerudoway_room_2SegmentBssStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_2.o (.sbss)
            build/scenes/dungeons/gerudoway/gerudoway_room_2.o (.scommon)
            build/scenes/dungeons/gerudoway/gerudoway_room_2.o (.bss)
            build/scenes/dungeons/gerudoway/gerudoway_room_2.o (COMMON)
        . = ALIGN(0x10);
        _gerudoway_room_2SegmentBssEnd = .;
        _gerudoway_room_2SegmentEnd = .;
    }
    _gerudoway_room_2SegmentBssSize = ABSOLUTE( _gerudoway_room_2SegmentBssEnd - _gerudoway_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _gerudoway_room_3SegmentRomStart = _RomSize;
    ..gerudoway_room_3 0x03000000 : AT(_RomSize)
    {
        _gerudoway_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _gerudoway_room_3SegmentTextStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_3.o (.text)
        _gerudoway_room_3SegmentTextEnd = .;
    _gerudoway_room_3SegmentTextSize = ABSOLUTE( _gerudoway_room_3SegmentTextEnd - _gerudoway_room_3SegmentTextStart );
        _gerudoway_room_3SegmentDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_3.o (.data)
        _gerudoway_room_3SegmentDataEnd = .;
    _gerudoway_room_3SegmentDataSize = ABSOLUTE( _gerudoway_room_3SegmentDataEnd - _gerudoway_room_3SegmentDataStart );
        _gerudoway_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_3.o (.rodata)
        _gerudoway_room_3SegmentRoDataEnd = .;
    _gerudoway_room_3SegmentRoDataSize = ABSOLUTE( _gerudoway_room_3SegmentRoDataEnd - _gerudoway_room_3SegmentRoDataStart );
        _gerudoway_room_3SegmentSDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_3.o (.sdata)
        . = ALIGN(0x10);
        _gerudoway_room_3SegmentSDataEnd = .;
        _gerudoway_room_3SegmentOvlStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_3.o (.ovl)
        . = ALIGN(0x10);
        _gerudoway_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _gerudoway_room_3SegmentOvlEnd - _gerudoway_room_3SegmentTextStart );
    _gerudoway_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..gerudoway_room_3.bss ADDR(..gerudoway_room_3) + SIZEOF(..gerudoway_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _gerudoway_room_3SegmentBssStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_3.o (.sbss)
            build/scenes/dungeons/gerudoway/gerudoway_room_3.o (.scommon)
            build/scenes/dungeons/gerudoway/gerudoway_room_3.o (.bss)
            build/scenes/dungeons/gerudoway/gerudoway_room_3.o (COMMON)
        . = ALIGN(0x10);
        _gerudoway_room_3SegmentBssEnd = .;
        _gerudoway_room_3SegmentEnd = .;
    }
    _gerudoway_room_3SegmentBssSize = ABSOLUTE( _gerudoway_room_3SegmentBssEnd - _gerudoway_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _gerudoway_room_4SegmentRomStart = _RomSize;
    ..gerudoway_room_4 0x03000000 : AT(_RomSize)
    {
        _gerudoway_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _gerudoway_room_4SegmentTextStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_4.o (.text)
        _gerudoway_room_4SegmentTextEnd = .;
    _gerudoway_room_4SegmentTextSize = ABSOLUTE( _gerudoway_room_4SegmentTextEnd - _gerudoway_room_4SegmentTextStart );
        _gerudoway_room_4SegmentDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_4.o (.data)
        _gerudoway_room_4SegmentDataEnd = .;
    _gerudoway_room_4SegmentDataSize = ABSOLUTE( _gerudoway_room_4SegmentDataEnd - _gerudoway_room_4SegmentDataStart );
        _gerudoway_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_4.o (.rodata)
        _gerudoway_room_4SegmentRoDataEnd = .;
    _gerudoway_room_4SegmentRoDataSize = ABSOLUTE( _gerudoway_room_4SegmentRoDataEnd - _gerudoway_room_4SegmentRoDataStart );
        _gerudoway_room_4SegmentSDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_4.o (.sdata)
        . = ALIGN(0x10);
        _gerudoway_room_4SegmentSDataEnd = .;
        _gerudoway_room_4SegmentOvlStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_4.o (.ovl)
        . = ALIGN(0x10);
        _gerudoway_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _gerudoway_room_4SegmentOvlEnd - _gerudoway_room_4SegmentTextStart );
    _gerudoway_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..gerudoway_room_4.bss ADDR(..gerudoway_room_4) + SIZEOF(..gerudoway_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _gerudoway_room_4SegmentBssStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_4.o (.sbss)
            build/scenes/dungeons/gerudoway/gerudoway_room_4.o (.scommon)
            build/scenes/dungeons/gerudoway/gerudoway_room_4.o (.bss)
            build/scenes/dungeons/gerudoway/gerudoway_room_4.o (COMMON)
        . = ALIGN(0x10);
        _gerudoway_room_4SegmentBssEnd = .;
        _gerudoway_room_4SegmentEnd = .;
    }
    _gerudoway_room_4SegmentBssSize = ABSOLUTE( _gerudoway_room_4SegmentBssEnd - _gerudoway_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _gerudoway_room_5SegmentRomStart = _RomSize;
    ..gerudoway_room_5 0x03000000 : AT(_RomSize)
    {
        _gerudoway_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _gerudoway_room_5SegmentTextStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_5.o (.text)
        _gerudoway_room_5SegmentTextEnd = .;
    _gerudoway_room_5SegmentTextSize = ABSOLUTE( _gerudoway_room_5SegmentTextEnd - _gerudoway_room_5SegmentTextStart );
        _gerudoway_room_5SegmentDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_5.o (.data)
        _gerudoway_room_5SegmentDataEnd = .;
    _gerudoway_room_5SegmentDataSize = ABSOLUTE( _gerudoway_room_5SegmentDataEnd - _gerudoway_room_5SegmentDataStart );
        _gerudoway_room_5SegmentRoDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_5.o (.rodata)
        _gerudoway_room_5SegmentRoDataEnd = .;
    _gerudoway_room_5SegmentRoDataSize = ABSOLUTE( _gerudoway_room_5SegmentRoDataEnd - _gerudoway_room_5SegmentRoDataStart );
        _gerudoway_room_5SegmentSDataStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_5.o (.sdata)
        . = ALIGN(0x10);
        _gerudoway_room_5SegmentSDataEnd = .;
        _gerudoway_room_5SegmentOvlStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_5.o (.ovl)
        . = ALIGN(0x10);
        _gerudoway_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _gerudoway_room_5SegmentOvlEnd - _gerudoway_room_5SegmentTextStart );
    _gerudoway_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..gerudoway_room_5.bss ADDR(..gerudoway_room_5) + SIZEOF(..gerudoway_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _gerudoway_room_5SegmentBssStart = .;
            build/scenes/dungeons/gerudoway/gerudoway_room_5.o (.sbss)
            build/scenes/dungeons/gerudoway/gerudoway_room_5.o (.scommon)
            build/scenes/dungeons/gerudoway/gerudoway_room_5.o (.bss)
            build/scenes/dungeons/gerudoway/gerudoway_room_5.o (COMMON)
        . = ALIGN(0x10);
        _gerudoway_room_5SegmentBssEnd = .;
        _gerudoway_room_5SegmentEnd = .;
    }
    _gerudoway_room_5SegmentBssSize = ABSOLUTE( _gerudoway_room_5SegmentBssEnd - _gerudoway_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hairal_niwa_n_sceneSegmentRomStart = _RomSize;
    ..hairal_niwa_n_scene 0x02000000 : AT(_RomSize)
    {
        _hairal_niwa_n_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _hairal_niwa_n_sceneSegmentTextStart = .;
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_scene.o (.text)
        _hairal_niwa_n_sceneSegmentTextEnd = .;
    _hairal_niwa_n_sceneSegmentTextSize = ABSOLUTE( _hairal_niwa_n_sceneSegmentTextEnd - _hairal_niwa_n_sceneSegmentTextStart );
        _hairal_niwa_n_sceneSegmentDataStart = .;
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_scene.o (.data)
        _hairal_niwa_n_sceneSegmentDataEnd = .;
    _hairal_niwa_n_sceneSegmentDataSize = ABSOLUTE( _hairal_niwa_n_sceneSegmentDataEnd - _hairal_niwa_n_sceneSegmentDataStart );
        _hairal_niwa_n_sceneSegmentRoDataStart = .;
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_scene.o (.rodata)
        _hairal_niwa_n_sceneSegmentRoDataEnd = .;
    _hairal_niwa_n_sceneSegmentRoDataSize = ABSOLUTE( _hairal_niwa_n_sceneSegmentRoDataEnd - _hairal_niwa_n_sceneSegmentRoDataStart );
        _hairal_niwa_n_sceneSegmentSDataStart = .;
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_scene.o (.sdata)
        . = ALIGN(0x10);
        _hairal_niwa_n_sceneSegmentSDataEnd = .;
        _hairal_niwa_n_sceneSegmentOvlStart = .;
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_scene.o (.ovl)
        . = ALIGN(0x10);
        _hairal_niwa_n_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _hairal_niwa_n_sceneSegmentOvlEnd - _hairal_niwa_n_sceneSegmentTextStart );
    _hairal_niwa_n_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hairal_niwa_n_scene.bss ADDR(..hairal_niwa_n_scene) + SIZEOF(..hairal_niwa_n_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hairal_niwa_n_sceneSegmentBssStart = .;
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_scene.o (.sbss)
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_scene.o (.scommon)
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_scene.o (.bss)
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_scene.o (COMMON)
        . = ALIGN(0x10);
        _hairal_niwa_n_sceneSegmentBssEnd = .;
        _hairal_niwa_n_sceneSegmentEnd = .;
    }
    _hairal_niwa_n_sceneSegmentBssSize = ABSOLUTE( _hairal_niwa_n_sceneSegmentBssEnd - _hairal_niwa_n_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hairal_niwa_n_room_0SegmentRomStart = _RomSize;
    ..hairal_niwa_n_room_0 0x03000000 : AT(_RomSize)
    {
        _hairal_niwa_n_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _hairal_niwa_n_room_0SegmentTextStart = .;
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_room_0.o (.text)
        _hairal_niwa_n_room_0SegmentTextEnd = .;
    _hairal_niwa_n_room_0SegmentTextSize = ABSOLUTE( _hairal_niwa_n_room_0SegmentTextEnd - _hairal_niwa_n_room_0SegmentTextStart );
        _hairal_niwa_n_room_0SegmentDataStart = .;
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_room_0.o (.data)
        _hairal_niwa_n_room_0SegmentDataEnd = .;
    _hairal_niwa_n_room_0SegmentDataSize = ABSOLUTE( _hairal_niwa_n_room_0SegmentDataEnd - _hairal_niwa_n_room_0SegmentDataStart );
        _hairal_niwa_n_room_0SegmentRoDataStart = .;
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_room_0.o (.rodata)
        _hairal_niwa_n_room_0SegmentRoDataEnd = .;
    _hairal_niwa_n_room_0SegmentRoDataSize = ABSOLUTE( _hairal_niwa_n_room_0SegmentRoDataEnd - _hairal_niwa_n_room_0SegmentRoDataStart );
        _hairal_niwa_n_room_0SegmentSDataStart = .;
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_room_0.o (.sdata)
        . = ALIGN(0x10);
        _hairal_niwa_n_room_0SegmentSDataEnd = .;
        _hairal_niwa_n_room_0SegmentOvlStart = .;
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_room_0.o (.ovl)
        . = ALIGN(0x10);
        _hairal_niwa_n_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _hairal_niwa_n_room_0SegmentOvlEnd - _hairal_niwa_n_room_0SegmentTextStart );
    _hairal_niwa_n_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hairal_niwa_n_room_0.bss ADDR(..hairal_niwa_n_room_0) + SIZEOF(..hairal_niwa_n_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hairal_niwa_n_room_0SegmentBssStart = .;
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_room_0.o (.sbss)
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_room_0.o (.scommon)
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_room_0.o (.bss)
            build/scenes/indoors/hairal_niwa_n/hairal_niwa_n_room_0.o (COMMON)
        . = ALIGN(0x10);
        _hairal_niwa_n_room_0SegmentBssEnd = .;
        _hairal_niwa_n_room_0SegmentEnd = .;
    }
    _hairal_niwa_n_room_0SegmentBssSize = ABSOLUTE( _hairal_niwa_n_room_0SegmentBssEnd - _hairal_niwa_n_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bowling_sceneSegmentRomStart = _RomSize;
    ..bowling_scene 0x02000000 : AT(_RomSize)
    {
        _bowling_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _bowling_sceneSegmentTextStart = .;
            build/scenes/indoors/bowling/bowling_scene.o (.text)
        _bowling_sceneSegmentTextEnd = .;
    _bowling_sceneSegmentTextSize = ABSOLUTE( _bowling_sceneSegmentTextEnd - _bowling_sceneSegmentTextStart );
        _bowling_sceneSegmentDataStart = .;
            build/scenes/indoors/bowling/bowling_scene.o (.data)
        _bowling_sceneSegmentDataEnd = .;
    _bowling_sceneSegmentDataSize = ABSOLUTE( _bowling_sceneSegmentDataEnd - _bowling_sceneSegmentDataStart );
        _bowling_sceneSegmentRoDataStart = .;
            build/scenes/indoors/bowling/bowling_scene.o (.rodata)
        _bowling_sceneSegmentRoDataEnd = .;
    _bowling_sceneSegmentRoDataSize = ABSOLUTE( _bowling_sceneSegmentRoDataEnd - _bowling_sceneSegmentRoDataStart );
        _bowling_sceneSegmentSDataStart = .;
            build/scenes/indoors/bowling/bowling_scene.o (.sdata)
        . = ALIGN(0x10);
        _bowling_sceneSegmentSDataEnd = .;
        _bowling_sceneSegmentOvlStart = .;
            build/scenes/indoors/bowling/bowling_scene.o (.ovl)
        . = ALIGN(0x10);
        _bowling_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _bowling_sceneSegmentOvlEnd - _bowling_sceneSegmentTextStart );
    _bowling_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bowling_scene.bss ADDR(..bowling_scene) + SIZEOF(..bowling_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bowling_sceneSegmentBssStart = .;
            build/scenes/indoors/bowling/bowling_scene.o (.sbss)
            build/scenes/indoors/bowling/bowling_scene.o (.scommon)
            build/scenes/indoors/bowling/bowling_scene.o (.bss)
            build/scenes/indoors/bowling/bowling_scene.o (COMMON)
        . = ALIGN(0x10);
        _bowling_sceneSegmentBssEnd = .;
        _bowling_sceneSegmentEnd = .;
    }
    _bowling_sceneSegmentBssSize = ABSOLUTE( _bowling_sceneSegmentBssEnd - _bowling_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bowling_room_0SegmentRomStart = _RomSize;
    ..bowling_room_0 0x03000000 : AT(_RomSize)
    {
        _bowling_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _bowling_room_0SegmentTextStart = .;
            build/scenes/indoors/bowling/bowling_room_0.o (.text)
        _bowling_room_0SegmentTextEnd = .;
    _bowling_room_0SegmentTextSize = ABSOLUTE( _bowling_room_0SegmentTextEnd - _bowling_room_0SegmentTextStart );
        _bowling_room_0SegmentDataStart = .;
            build/scenes/indoors/bowling/bowling_room_0.o (.data)
        _bowling_room_0SegmentDataEnd = .;
    _bowling_room_0SegmentDataSize = ABSOLUTE( _bowling_room_0SegmentDataEnd - _bowling_room_0SegmentDataStart );
        _bowling_room_0SegmentRoDataStart = .;
            build/scenes/indoors/bowling/bowling_room_0.o (.rodata)
        _bowling_room_0SegmentRoDataEnd = .;
    _bowling_room_0SegmentRoDataSize = ABSOLUTE( _bowling_room_0SegmentRoDataEnd - _bowling_room_0SegmentRoDataStart );
        _bowling_room_0SegmentSDataStart = .;
            build/scenes/indoors/bowling/bowling_room_0.o (.sdata)
        . = ALIGN(0x10);
        _bowling_room_0SegmentSDataEnd = .;
        _bowling_room_0SegmentOvlStart = .;
            build/scenes/indoors/bowling/bowling_room_0.o (.ovl)
        . = ALIGN(0x10);
        _bowling_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _bowling_room_0SegmentOvlEnd - _bowling_room_0SegmentTextStart );
    _bowling_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bowling_room_0.bss ADDR(..bowling_room_0) + SIZEOF(..bowling_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bowling_room_0SegmentBssStart = .;
            build/scenes/indoors/bowling/bowling_room_0.o (.sbss)
            build/scenes/indoors/bowling/bowling_room_0.o (.scommon)
            build/scenes/indoors/bowling/bowling_room_0.o (.bss)
            build/scenes/indoors/bowling/bowling_room_0.o (COMMON)
        . = ALIGN(0x10);
        _bowling_room_0SegmentBssEnd = .;
        _bowling_room_0SegmentEnd = .;
    }
    _bowling_room_0SegmentBssSize = ABSOLUTE( _bowling_room_0SegmentBssEnd - _bowling_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakaana_ouke_sceneSegmentRomStart = _RomSize;
    ..hakaana_ouke_scene 0x02000000 : AT(_RomSize)
    {
        _hakaana_ouke_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _hakaana_ouke_sceneSegmentTextStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_scene.o (.text)
        _hakaana_ouke_sceneSegmentTextEnd = .;
    _hakaana_ouke_sceneSegmentTextSize = ABSOLUTE( _hakaana_ouke_sceneSegmentTextEnd - _hakaana_ouke_sceneSegmentTextStart );
        _hakaana_ouke_sceneSegmentDataStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_scene.o (.data)
        _hakaana_ouke_sceneSegmentDataEnd = .;
    _hakaana_ouke_sceneSegmentDataSize = ABSOLUTE( _hakaana_ouke_sceneSegmentDataEnd - _hakaana_ouke_sceneSegmentDataStart );
        _hakaana_ouke_sceneSegmentRoDataStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_scene.o (.rodata)
        _hakaana_ouke_sceneSegmentRoDataEnd = .;
    _hakaana_ouke_sceneSegmentRoDataSize = ABSOLUTE( _hakaana_ouke_sceneSegmentRoDataEnd - _hakaana_ouke_sceneSegmentRoDataStart );
        _hakaana_ouke_sceneSegmentSDataStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_scene.o (.sdata)
        . = ALIGN(0x10);
        _hakaana_ouke_sceneSegmentSDataEnd = .;
        _hakaana_ouke_sceneSegmentOvlStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_scene.o (.ovl)
        . = ALIGN(0x10);
        _hakaana_ouke_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _hakaana_ouke_sceneSegmentOvlEnd - _hakaana_ouke_sceneSegmentTextStart );
    _hakaana_ouke_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakaana_ouke_scene.bss ADDR(..hakaana_ouke_scene) + SIZEOF(..hakaana_ouke_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakaana_ouke_sceneSegmentBssStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_scene.o (.sbss)
            build/scenes/misc/hakaana_ouke/hakaana_ouke_scene.o (.scommon)
            build/scenes/misc/hakaana_ouke/hakaana_ouke_scene.o (.bss)
            build/scenes/misc/hakaana_ouke/hakaana_ouke_scene.o (COMMON)
        . = ALIGN(0x10);
        _hakaana_ouke_sceneSegmentBssEnd = .;
        _hakaana_ouke_sceneSegmentEnd = .;
    }
    _hakaana_ouke_sceneSegmentBssSize = ABSOLUTE( _hakaana_ouke_sceneSegmentBssEnd - _hakaana_ouke_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakaana_ouke_room_0SegmentRomStart = _RomSize;
    ..hakaana_ouke_room_0 0x03000000 : AT(_RomSize)
    {
        _hakaana_ouke_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _hakaana_ouke_room_0SegmentTextStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_0.o (.text)
        _hakaana_ouke_room_0SegmentTextEnd = .;
    _hakaana_ouke_room_0SegmentTextSize = ABSOLUTE( _hakaana_ouke_room_0SegmentTextEnd - _hakaana_ouke_room_0SegmentTextStart );
        _hakaana_ouke_room_0SegmentDataStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_0.o (.data)
        _hakaana_ouke_room_0SegmentDataEnd = .;
    _hakaana_ouke_room_0SegmentDataSize = ABSOLUTE( _hakaana_ouke_room_0SegmentDataEnd - _hakaana_ouke_room_0SegmentDataStart );
        _hakaana_ouke_room_0SegmentRoDataStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_0.o (.rodata)
        _hakaana_ouke_room_0SegmentRoDataEnd = .;
    _hakaana_ouke_room_0SegmentRoDataSize = ABSOLUTE( _hakaana_ouke_room_0SegmentRoDataEnd - _hakaana_ouke_room_0SegmentRoDataStart );
        _hakaana_ouke_room_0SegmentSDataStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_0.o (.sdata)
        . = ALIGN(0x10);
        _hakaana_ouke_room_0SegmentSDataEnd = .;
        _hakaana_ouke_room_0SegmentOvlStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_0.o (.ovl)
        . = ALIGN(0x10);
        _hakaana_ouke_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _hakaana_ouke_room_0SegmentOvlEnd - _hakaana_ouke_room_0SegmentTextStart );
    _hakaana_ouke_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakaana_ouke_room_0.bss ADDR(..hakaana_ouke_room_0) + SIZEOF(..hakaana_ouke_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakaana_ouke_room_0SegmentBssStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_0.o (.sbss)
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_0.o (.scommon)
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_0.o (.bss)
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_0.o (COMMON)
        . = ALIGN(0x10);
        _hakaana_ouke_room_0SegmentBssEnd = .;
        _hakaana_ouke_room_0SegmentEnd = .;
    }
    _hakaana_ouke_room_0SegmentBssSize = ABSOLUTE( _hakaana_ouke_room_0SegmentBssEnd - _hakaana_ouke_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakaana_ouke_room_1SegmentRomStart = _RomSize;
    ..hakaana_ouke_room_1 0x03000000 : AT(_RomSize)
    {
        _hakaana_ouke_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _hakaana_ouke_room_1SegmentTextStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_1.o (.text)
        _hakaana_ouke_room_1SegmentTextEnd = .;
    _hakaana_ouke_room_1SegmentTextSize = ABSOLUTE( _hakaana_ouke_room_1SegmentTextEnd - _hakaana_ouke_room_1SegmentTextStart );
        _hakaana_ouke_room_1SegmentDataStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_1.o (.data)
        _hakaana_ouke_room_1SegmentDataEnd = .;
    _hakaana_ouke_room_1SegmentDataSize = ABSOLUTE( _hakaana_ouke_room_1SegmentDataEnd - _hakaana_ouke_room_1SegmentDataStart );
        _hakaana_ouke_room_1SegmentRoDataStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_1.o (.rodata)
        _hakaana_ouke_room_1SegmentRoDataEnd = .;
    _hakaana_ouke_room_1SegmentRoDataSize = ABSOLUTE( _hakaana_ouke_room_1SegmentRoDataEnd - _hakaana_ouke_room_1SegmentRoDataStart );
        _hakaana_ouke_room_1SegmentSDataStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_1.o (.sdata)
        . = ALIGN(0x10);
        _hakaana_ouke_room_1SegmentSDataEnd = .;
        _hakaana_ouke_room_1SegmentOvlStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_1.o (.ovl)
        . = ALIGN(0x10);
        _hakaana_ouke_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _hakaana_ouke_room_1SegmentOvlEnd - _hakaana_ouke_room_1SegmentTextStart );
    _hakaana_ouke_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakaana_ouke_room_1.bss ADDR(..hakaana_ouke_room_1) + SIZEOF(..hakaana_ouke_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakaana_ouke_room_1SegmentBssStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_1.o (.sbss)
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_1.o (.scommon)
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_1.o (.bss)
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_1.o (COMMON)
        . = ALIGN(0x10);
        _hakaana_ouke_room_1SegmentBssEnd = .;
        _hakaana_ouke_room_1SegmentEnd = .;
    }
    _hakaana_ouke_room_1SegmentBssSize = ABSOLUTE( _hakaana_ouke_room_1SegmentBssEnd - _hakaana_ouke_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hakaana_ouke_room_2SegmentRomStart = _RomSize;
    ..hakaana_ouke_room_2 0x03000000 : AT(_RomSize)
    {
        _hakaana_ouke_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _hakaana_ouke_room_2SegmentTextStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_2.o (.text)
        _hakaana_ouke_room_2SegmentTextEnd = .;
    _hakaana_ouke_room_2SegmentTextSize = ABSOLUTE( _hakaana_ouke_room_2SegmentTextEnd - _hakaana_ouke_room_2SegmentTextStart );
        _hakaana_ouke_room_2SegmentDataStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_2.o (.data)
        _hakaana_ouke_room_2SegmentDataEnd = .;
    _hakaana_ouke_room_2SegmentDataSize = ABSOLUTE( _hakaana_ouke_room_2SegmentDataEnd - _hakaana_ouke_room_2SegmentDataStart );
        _hakaana_ouke_room_2SegmentRoDataStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_2.o (.rodata)
        _hakaana_ouke_room_2SegmentRoDataEnd = .;
    _hakaana_ouke_room_2SegmentRoDataSize = ABSOLUTE( _hakaana_ouke_room_2SegmentRoDataEnd - _hakaana_ouke_room_2SegmentRoDataStart );
        _hakaana_ouke_room_2SegmentSDataStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_2.o (.sdata)
        . = ALIGN(0x10);
        _hakaana_ouke_room_2SegmentSDataEnd = .;
        _hakaana_ouke_room_2SegmentOvlStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_2.o (.ovl)
        . = ALIGN(0x10);
        _hakaana_ouke_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _hakaana_ouke_room_2SegmentOvlEnd - _hakaana_ouke_room_2SegmentTextStart );
    _hakaana_ouke_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hakaana_ouke_room_2.bss ADDR(..hakaana_ouke_room_2) + SIZEOF(..hakaana_ouke_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hakaana_ouke_room_2SegmentBssStart = .;
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_2.o (.sbss)
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_2.o (.scommon)
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_2.o (.bss)
            build/scenes/misc/hakaana_ouke/hakaana_ouke_room_2.o (COMMON)
        . = ALIGN(0x10);
        _hakaana_ouke_room_2SegmentBssEnd = .;
        _hakaana_ouke_room_2SegmentEnd = .;
    }
    _hakaana_ouke_room_2SegmentBssSize = ABSOLUTE( _hakaana_ouke_room_2SegmentBssEnd - _hakaana_ouke_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hylia_labo_sceneSegmentRomStart = _RomSize;
    ..hylia_labo_scene 0x02000000 : AT(_RomSize)
    {
        _hylia_labo_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _hylia_labo_sceneSegmentTextStart = .;
            build/scenes/indoors/hylia_labo/hylia_labo_scene.o (.text)
        _hylia_labo_sceneSegmentTextEnd = .;
    _hylia_labo_sceneSegmentTextSize = ABSOLUTE( _hylia_labo_sceneSegmentTextEnd - _hylia_labo_sceneSegmentTextStart );
        _hylia_labo_sceneSegmentDataStart = .;
            build/scenes/indoors/hylia_labo/hylia_labo_scene.o (.data)
        _hylia_labo_sceneSegmentDataEnd = .;
    _hylia_labo_sceneSegmentDataSize = ABSOLUTE( _hylia_labo_sceneSegmentDataEnd - _hylia_labo_sceneSegmentDataStart );
        _hylia_labo_sceneSegmentRoDataStart = .;
            build/scenes/indoors/hylia_labo/hylia_labo_scene.o (.rodata)
        _hylia_labo_sceneSegmentRoDataEnd = .;
    _hylia_labo_sceneSegmentRoDataSize = ABSOLUTE( _hylia_labo_sceneSegmentRoDataEnd - _hylia_labo_sceneSegmentRoDataStart );
        _hylia_labo_sceneSegmentSDataStart = .;
            build/scenes/indoors/hylia_labo/hylia_labo_scene.o (.sdata)
        . = ALIGN(0x10);
        _hylia_labo_sceneSegmentSDataEnd = .;
        _hylia_labo_sceneSegmentOvlStart = .;
            build/scenes/indoors/hylia_labo/hylia_labo_scene.o (.ovl)
        . = ALIGN(0x10);
        _hylia_labo_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _hylia_labo_sceneSegmentOvlEnd - _hylia_labo_sceneSegmentTextStart );
    _hylia_labo_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hylia_labo_scene.bss ADDR(..hylia_labo_scene) + SIZEOF(..hylia_labo_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hylia_labo_sceneSegmentBssStart = .;
            build/scenes/indoors/hylia_labo/hylia_labo_scene.o (.sbss)
            build/scenes/indoors/hylia_labo/hylia_labo_scene.o (.scommon)
            build/scenes/indoors/hylia_labo/hylia_labo_scene.o (.bss)
            build/scenes/indoors/hylia_labo/hylia_labo_scene.o (COMMON)
        . = ALIGN(0x10);
        _hylia_labo_sceneSegmentBssEnd = .;
        _hylia_labo_sceneSegmentEnd = .;
    }
    _hylia_labo_sceneSegmentBssSize = ABSOLUTE( _hylia_labo_sceneSegmentBssEnd - _hylia_labo_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _hylia_labo_room_0SegmentRomStart = _RomSize;
    ..hylia_labo_room_0 0x03000000 : AT(_RomSize)
    {
        _hylia_labo_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _hylia_labo_room_0SegmentTextStart = .;
            build/scenes/indoors/hylia_labo/hylia_labo_room_0.o (.text)
        _hylia_labo_room_0SegmentTextEnd = .;
    _hylia_labo_room_0SegmentTextSize = ABSOLUTE( _hylia_labo_room_0SegmentTextEnd - _hylia_labo_room_0SegmentTextStart );
        _hylia_labo_room_0SegmentDataStart = .;
            build/scenes/indoors/hylia_labo/hylia_labo_room_0.o (.data)
        _hylia_labo_room_0SegmentDataEnd = .;
    _hylia_labo_room_0SegmentDataSize = ABSOLUTE( _hylia_labo_room_0SegmentDataEnd - _hylia_labo_room_0SegmentDataStart );
        _hylia_labo_room_0SegmentRoDataStart = .;
            build/scenes/indoors/hylia_labo/hylia_labo_room_0.o (.rodata)
        _hylia_labo_room_0SegmentRoDataEnd = .;
    _hylia_labo_room_0SegmentRoDataSize = ABSOLUTE( _hylia_labo_room_0SegmentRoDataEnd - _hylia_labo_room_0SegmentRoDataStart );
        _hylia_labo_room_0SegmentSDataStart = .;
            build/scenes/indoors/hylia_labo/hylia_labo_room_0.o (.sdata)
        . = ALIGN(0x10);
        _hylia_labo_room_0SegmentSDataEnd = .;
        _hylia_labo_room_0SegmentOvlStart = .;
            build/scenes/indoors/hylia_labo/hylia_labo_room_0.o (.ovl)
        . = ALIGN(0x10);
        _hylia_labo_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _hylia_labo_room_0SegmentOvlEnd - _hylia_labo_room_0SegmentTextStart );
    _hylia_labo_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..hylia_labo_room_0.bss ADDR(..hylia_labo_room_0) + SIZEOF(..hylia_labo_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _hylia_labo_room_0SegmentBssStart = .;
            build/scenes/indoors/hylia_labo/hylia_labo_room_0.o (.sbss)
            build/scenes/indoors/hylia_labo/hylia_labo_room_0.o (.scommon)
            build/scenes/indoors/hylia_labo/hylia_labo_room_0.o (.bss)
            build/scenes/indoors/hylia_labo/hylia_labo_room_0.o (COMMON)
        . = ALIGN(0x10);
        _hylia_labo_room_0SegmentBssEnd = .;
        _hylia_labo_room_0SegmentEnd = .;
    }
    _hylia_labo_room_0SegmentBssSize = ABSOLUTE( _hylia_labo_room_0SegmentBssEnd - _hylia_labo_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _souko_sceneSegmentRomStart = _RomSize;
    ..souko_scene 0x02000000 : AT(_RomSize)
    {
        _souko_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _souko_sceneSegmentTextStart = .;
            build/scenes/overworld/souko/souko_scene.o (.text)
        _souko_sceneSegmentTextEnd = .;
    _souko_sceneSegmentTextSize = ABSOLUTE( _souko_sceneSegmentTextEnd - _souko_sceneSegmentTextStart );
        _souko_sceneSegmentDataStart = .;
            build/scenes/overworld/souko/souko_scene.o (.data)
        _souko_sceneSegmentDataEnd = .;
    _souko_sceneSegmentDataSize = ABSOLUTE( _souko_sceneSegmentDataEnd - _souko_sceneSegmentDataStart );
        _souko_sceneSegmentRoDataStart = .;
            build/scenes/overworld/souko/souko_scene.o (.rodata)
        _souko_sceneSegmentRoDataEnd = .;
    _souko_sceneSegmentRoDataSize = ABSOLUTE( _souko_sceneSegmentRoDataEnd - _souko_sceneSegmentRoDataStart );
        _souko_sceneSegmentSDataStart = .;
            build/scenes/overworld/souko/souko_scene.o (.sdata)
        . = ALIGN(0x10);
        _souko_sceneSegmentSDataEnd = .;
        _souko_sceneSegmentOvlStart = .;
            build/scenes/overworld/souko/souko_scene.o (.ovl)
        . = ALIGN(0x10);
        _souko_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _souko_sceneSegmentOvlEnd - _souko_sceneSegmentTextStart );
    _souko_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..souko_scene.bss ADDR(..souko_scene) + SIZEOF(..souko_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _souko_sceneSegmentBssStart = .;
            build/scenes/overworld/souko/souko_scene.o (.sbss)
            build/scenes/overworld/souko/souko_scene.o (.scommon)
            build/scenes/overworld/souko/souko_scene.o (.bss)
            build/scenes/overworld/souko/souko_scene.o (COMMON)
        . = ALIGN(0x10);
        _souko_sceneSegmentBssEnd = .;
        _souko_sceneSegmentEnd = .;
    }
    _souko_sceneSegmentBssSize = ABSOLUTE( _souko_sceneSegmentBssEnd - _souko_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _souko_room_0SegmentRomStart = _RomSize;
    ..souko_room_0 0x03000000 : AT(_RomSize)
    {
        _souko_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _souko_room_0SegmentTextStart = .;
            build/scenes/overworld/souko/souko_room_0.o (.text)
        _souko_room_0SegmentTextEnd = .;
    _souko_room_0SegmentTextSize = ABSOLUTE( _souko_room_0SegmentTextEnd - _souko_room_0SegmentTextStart );
        _souko_room_0SegmentDataStart = .;
            build/scenes/overworld/souko/souko_room_0.o (.data)
        _souko_room_0SegmentDataEnd = .;
    _souko_room_0SegmentDataSize = ABSOLUTE( _souko_room_0SegmentDataEnd - _souko_room_0SegmentDataStart );
        _souko_room_0SegmentRoDataStart = .;
            build/scenes/overworld/souko/souko_room_0.o (.rodata)
        _souko_room_0SegmentRoDataEnd = .;
    _souko_room_0SegmentRoDataSize = ABSOLUTE( _souko_room_0SegmentRoDataEnd - _souko_room_0SegmentRoDataStart );
        _souko_room_0SegmentSDataStart = .;
            build/scenes/overworld/souko/souko_room_0.o (.sdata)
        . = ALIGN(0x10);
        _souko_room_0SegmentSDataEnd = .;
        _souko_room_0SegmentOvlStart = .;
            build/scenes/overworld/souko/souko_room_0.o (.ovl)
        . = ALIGN(0x10);
        _souko_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _souko_room_0SegmentOvlEnd - _souko_room_0SegmentTextStart );
    _souko_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..souko_room_0.bss ADDR(..souko_room_0) + SIZEOF(..souko_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _souko_room_0SegmentBssStart = .;
            build/scenes/overworld/souko/souko_room_0.o (.sbss)
            build/scenes/overworld/souko/souko_room_0.o (.scommon)
            build/scenes/overworld/souko/souko_room_0.o (.bss)
            build/scenes/overworld/souko/souko_room_0.o (COMMON)
        . = ALIGN(0x10);
        _souko_room_0SegmentBssEnd = .;
        _souko_room_0SegmentEnd = .;
    }
    _souko_room_0SegmentBssSize = ABSOLUTE( _souko_room_0SegmentBssEnd - _souko_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _souko_room_1SegmentRomStart = _RomSize;
    ..souko_room_1 0x03000000 : AT(_RomSize)
    {
        _souko_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _souko_room_1SegmentTextStart = .;
            build/scenes/overworld/souko/souko_room_1.o (.text)
        _souko_room_1SegmentTextEnd = .;
    _souko_room_1SegmentTextSize = ABSOLUTE( _souko_room_1SegmentTextEnd - _souko_room_1SegmentTextStart );
        _souko_room_1SegmentDataStart = .;
            build/scenes/overworld/souko/souko_room_1.o (.data)
        _souko_room_1SegmentDataEnd = .;
    _souko_room_1SegmentDataSize = ABSOLUTE( _souko_room_1SegmentDataEnd - _souko_room_1SegmentDataStart );
        _souko_room_1SegmentRoDataStart = .;
            build/scenes/overworld/souko/souko_room_1.o (.rodata)
        _souko_room_1SegmentRoDataEnd = .;
    _souko_room_1SegmentRoDataSize = ABSOLUTE( _souko_room_1SegmentRoDataEnd - _souko_room_1SegmentRoDataStart );
        _souko_room_1SegmentSDataStart = .;
            build/scenes/overworld/souko/souko_room_1.o (.sdata)
        . = ALIGN(0x10);
        _souko_room_1SegmentSDataEnd = .;
        _souko_room_1SegmentOvlStart = .;
            build/scenes/overworld/souko/souko_room_1.o (.ovl)
        . = ALIGN(0x10);
        _souko_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _souko_room_1SegmentOvlEnd - _souko_room_1SegmentTextStart );
    _souko_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..souko_room_1.bss ADDR(..souko_room_1) + SIZEOF(..souko_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _souko_room_1SegmentBssStart = .;
            build/scenes/overworld/souko/souko_room_1.o (.sbss)
            build/scenes/overworld/souko/souko_room_1.o (.scommon)
            build/scenes/overworld/souko/souko_room_1.o (.bss)
            build/scenes/overworld/souko/souko_room_1.o (COMMON)
        . = ALIGN(0x10);
        _souko_room_1SegmentBssEnd = .;
        _souko_room_1SegmentEnd = .;
    }
    _souko_room_1SegmentBssSize = ABSOLUTE( _souko_room_1SegmentBssEnd - _souko_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _souko_room_2SegmentRomStart = _RomSize;
    ..souko_room_2 0x03000000 : AT(_RomSize)
    {
        _souko_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _souko_room_2SegmentTextStart = .;
            build/scenes/overworld/souko/souko_room_2.o (.text)
        _souko_room_2SegmentTextEnd = .;
    _souko_room_2SegmentTextSize = ABSOLUTE( _souko_room_2SegmentTextEnd - _souko_room_2SegmentTextStart );
        _souko_room_2SegmentDataStart = .;
            build/scenes/overworld/souko/souko_room_2.o (.data)
        _souko_room_2SegmentDataEnd = .;
    _souko_room_2SegmentDataSize = ABSOLUTE( _souko_room_2SegmentDataEnd - _souko_room_2SegmentDataStart );
        _souko_room_2SegmentRoDataStart = .;
            build/scenes/overworld/souko/souko_room_2.o (.rodata)
        _souko_room_2SegmentRoDataEnd = .;
    _souko_room_2SegmentRoDataSize = ABSOLUTE( _souko_room_2SegmentRoDataEnd - _souko_room_2SegmentRoDataStart );
        _souko_room_2SegmentSDataStart = .;
            build/scenes/overworld/souko/souko_room_2.o (.sdata)
        . = ALIGN(0x10);
        _souko_room_2SegmentSDataEnd = .;
        _souko_room_2SegmentOvlStart = .;
            build/scenes/overworld/souko/souko_room_2.o (.ovl)
        . = ALIGN(0x10);
        _souko_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _souko_room_2SegmentOvlEnd - _souko_room_2SegmentTextStart );
    _souko_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..souko_room_2.bss ADDR(..souko_room_2) + SIZEOF(..souko_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _souko_room_2SegmentBssStart = .;
            build/scenes/overworld/souko/souko_room_2.o (.sbss)
            build/scenes/overworld/souko/souko_room_2.o (.scommon)
            build/scenes/overworld/souko/souko_room_2.o (.bss)
            build/scenes/overworld/souko/souko_room_2.o (COMMON)
        . = ALIGN(0x10);
        _souko_room_2SegmentBssEnd = .;
        _souko_room_2SegmentEnd = .;
    }
    _souko_room_2SegmentBssSize = ABSOLUTE( _souko_room_2SegmentBssEnd - _souko_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _miharigoya_sceneSegmentRomStart = _RomSize;
    ..miharigoya_scene 0x02000000 : AT(_RomSize)
    {
        _miharigoya_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _miharigoya_sceneSegmentTextStart = .;
            build/scenes/indoors/miharigoya/miharigoya_scene.o (.text)
        _miharigoya_sceneSegmentTextEnd = .;
    _miharigoya_sceneSegmentTextSize = ABSOLUTE( _miharigoya_sceneSegmentTextEnd - _miharigoya_sceneSegmentTextStart );
        _miharigoya_sceneSegmentDataStart = .;
            build/scenes/indoors/miharigoya/miharigoya_scene.o (.data)
        _miharigoya_sceneSegmentDataEnd = .;
    _miharigoya_sceneSegmentDataSize = ABSOLUTE( _miharigoya_sceneSegmentDataEnd - _miharigoya_sceneSegmentDataStart );
        _miharigoya_sceneSegmentRoDataStart = .;
            build/scenes/indoors/miharigoya/miharigoya_scene.o (.rodata)
        _miharigoya_sceneSegmentRoDataEnd = .;
    _miharigoya_sceneSegmentRoDataSize = ABSOLUTE( _miharigoya_sceneSegmentRoDataEnd - _miharigoya_sceneSegmentRoDataStart );
        _miharigoya_sceneSegmentSDataStart = .;
            build/scenes/indoors/miharigoya/miharigoya_scene.o (.sdata)
        . = ALIGN(0x10);
        _miharigoya_sceneSegmentSDataEnd = .;
        _miharigoya_sceneSegmentOvlStart = .;
            build/scenes/indoors/miharigoya/miharigoya_scene.o (.ovl)
        . = ALIGN(0x10);
        _miharigoya_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _miharigoya_sceneSegmentOvlEnd - _miharigoya_sceneSegmentTextStart );
    _miharigoya_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..miharigoya_scene.bss ADDR(..miharigoya_scene) + SIZEOF(..miharigoya_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _miharigoya_sceneSegmentBssStart = .;
            build/scenes/indoors/miharigoya/miharigoya_scene.o (.sbss)
            build/scenes/indoors/miharigoya/miharigoya_scene.o (.scommon)
            build/scenes/indoors/miharigoya/miharigoya_scene.o (.bss)
            build/scenes/indoors/miharigoya/miharigoya_scene.o (COMMON)
        . = ALIGN(0x10);
        _miharigoya_sceneSegmentBssEnd = .;
        _miharigoya_sceneSegmentEnd = .;
    }
    _miharigoya_sceneSegmentBssSize = ABSOLUTE( _miharigoya_sceneSegmentBssEnd - _miharigoya_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _miharigoya_room_0SegmentRomStart = _RomSize;
    ..miharigoya_room_0 0x03000000 : AT(_RomSize)
    {
        _miharigoya_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _miharigoya_room_0SegmentTextStart = .;
            build/scenes/indoors/miharigoya/miharigoya_room_0.o (.text)
        _miharigoya_room_0SegmentTextEnd = .;
    _miharigoya_room_0SegmentTextSize = ABSOLUTE( _miharigoya_room_0SegmentTextEnd - _miharigoya_room_0SegmentTextStart );
        _miharigoya_room_0SegmentDataStart = .;
            build/scenes/indoors/miharigoya/miharigoya_room_0.o (.data)
        _miharigoya_room_0SegmentDataEnd = .;
    _miharigoya_room_0SegmentDataSize = ABSOLUTE( _miharigoya_room_0SegmentDataEnd - _miharigoya_room_0SegmentDataStart );
        _miharigoya_room_0SegmentRoDataStart = .;
            build/scenes/indoors/miharigoya/miharigoya_room_0.o (.rodata)
        _miharigoya_room_0SegmentRoDataEnd = .;
    _miharigoya_room_0SegmentRoDataSize = ABSOLUTE( _miharigoya_room_0SegmentRoDataEnd - _miharigoya_room_0SegmentRoDataStart );
        _miharigoya_room_0SegmentSDataStart = .;
            build/scenes/indoors/miharigoya/miharigoya_room_0.o (.sdata)
        . = ALIGN(0x10);
        _miharigoya_room_0SegmentSDataEnd = .;
        _miharigoya_room_0SegmentOvlStart = .;
            build/scenes/indoors/miharigoya/miharigoya_room_0.o (.ovl)
        . = ALIGN(0x10);
        _miharigoya_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _miharigoya_room_0SegmentOvlEnd - _miharigoya_room_0SegmentTextStart );
    _miharigoya_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..miharigoya_room_0.bss ADDR(..miharigoya_room_0) + SIZEOF(..miharigoya_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _miharigoya_room_0SegmentBssStart = .;
            build/scenes/indoors/miharigoya/miharigoya_room_0.o (.sbss)
            build/scenes/indoors/miharigoya/miharigoya_room_0.o (.scommon)
            build/scenes/indoors/miharigoya/miharigoya_room_0.o (.bss)
            build/scenes/indoors/miharigoya/miharigoya_room_0.o (COMMON)
        . = ALIGN(0x10);
        _miharigoya_room_0SegmentBssEnd = .;
        _miharigoya_room_0SegmentEnd = .;
    }
    _miharigoya_room_0SegmentBssSize = ABSOLUTE( _miharigoya_room_0SegmentBssEnd - _miharigoya_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _mahouya_sceneSegmentRomStart = _RomSize;
    ..mahouya_scene 0x02000000 : AT(_RomSize)
    {
        _mahouya_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _mahouya_sceneSegmentTextStart = .;
            build/scenes/indoors/mahouya/mahouya_scene.o (.text)
        _mahouya_sceneSegmentTextEnd = .;
    _mahouya_sceneSegmentTextSize = ABSOLUTE( _mahouya_sceneSegmentTextEnd - _mahouya_sceneSegmentTextStart );
        _mahouya_sceneSegmentDataStart = .;
            build/scenes/indoors/mahouya/mahouya_scene.o (.data)
        _mahouya_sceneSegmentDataEnd = .;
    _mahouya_sceneSegmentDataSize = ABSOLUTE( _mahouya_sceneSegmentDataEnd - _mahouya_sceneSegmentDataStart );
        _mahouya_sceneSegmentRoDataStart = .;
            build/scenes/indoors/mahouya/mahouya_scene.o (.rodata)
        _mahouya_sceneSegmentRoDataEnd = .;
    _mahouya_sceneSegmentRoDataSize = ABSOLUTE( _mahouya_sceneSegmentRoDataEnd - _mahouya_sceneSegmentRoDataStart );
        _mahouya_sceneSegmentSDataStart = .;
            build/scenes/indoors/mahouya/mahouya_scene.o (.sdata)
        . = ALIGN(0x10);
        _mahouya_sceneSegmentSDataEnd = .;
        _mahouya_sceneSegmentOvlStart = .;
            build/scenes/indoors/mahouya/mahouya_scene.o (.ovl)
        . = ALIGN(0x10);
        _mahouya_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _mahouya_sceneSegmentOvlEnd - _mahouya_sceneSegmentTextStart );
    _mahouya_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..mahouya_scene.bss ADDR(..mahouya_scene) + SIZEOF(..mahouya_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _mahouya_sceneSegmentBssStart = .;
            build/scenes/indoors/mahouya/mahouya_scene.o (.sbss)
            build/scenes/indoors/mahouya/mahouya_scene.o (.scommon)
            build/scenes/indoors/mahouya/mahouya_scene.o (.bss)
            build/scenes/indoors/mahouya/mahouya_scene.o (COMMON)
        . = ALIGN(0x10);
        _mahouya_sceneSegmentBssEnd = .;
        _mahouya_sceneSegmentEnd = .;
    }
    _mahouya_sceneSegmentBssSize = ABSOLUTE( _mahouya_sceneSegmentBssEnd - _mahouya_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _mahouya_room_0SegmentRomStart = _RomSize;
    ..mahouya_room_0 0x03000000 : AT(_RomSize)
    {
        _mahouya_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _mahouya_room_0SegmentTextStart = .;
            build/scenes/indoors/mahouya/mahouya_room_0.o (.text)
        _mahouya_room_0SegmentTextEnd = .;
    _mahouya_room_0SegmentTextSize = ABSOLUTE( _mahouya_room_0SegmentTextEnd - _mahouya_room_0SegmentTextStart );
        _mahouya_room_0SegmentDataStart = .;
            build/scenes/indoors/mahouya/mahouya_room_0.o (.data)
        _mahouya_room_0SegmentDataEnd = .;
    _mahouya_room_0SegmentDataSize = ABSOLUTE( _mahouya_room_0SegmentDataEnd - _mahouya_room_0SegmentDataStart );
        _mahouya_room_0SegmentRoDataStart = .;
            build/scenes/indoors/mahouya/mahouya_room_0.o (.rodata)
        _mahouya_room_0SegmentRoDataEnd = .;
    _mahouya_room_0SegmentRoDataSize = ABSOLUTE( _mahouya_room_0SegmentRoDataEnd - _mahouya_room_0SegmentRoDataStart );
        _mahouya_room_0SegmentSDataStart = .;
            build/scenes/indoors/mahouya/mahouya_room_0.o (.sdata)
        . = ALIGN(0x10);
        _mahouya_room_0SegmentSDataEnd = .;
        _mahouya_room_0SegmentOvlStart = .;
            build/scenes/indoors/mahouya/mahouya_room_0.o (.ovl)
        . = ALIGN(0x10);
        _mahouya_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _mahouya_room_0SegmentOvlEnd - _mahouya_room_0SegmentTextStart );
    _mahouya_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..mahouya_room_0.bss ADDR(..mahouya_room_0) + SIZEOF(..mahouya_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _mahouya_room_0SegmentBssStart = .;
            build/scenes/indoors/mahouya/mahouya_room_0.o (.sbss)
            build/scenes/indoors/mahouya/mahouya_room_0.o (.scommon)
            build/scenes/indoors/mahouya/mahouya_room_0.o (.bss)
            build/scenes/indoors/mahouya/mahouya_room_0.o (COMMON)
        . = ALIGN(0x10);
        _mahouya_room_0SegmentBssEnd = .;
        _mahouya_room_0SegmentEnd = .;
    }
    _mahouya_room_0SegmentBssSize = ABSOLUTE( _mahouya_room_0SegmentBssEnd - _mahouya_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _takaraya_sceneSegmentRomStart = _RomSize;
    ..takaraya_scene 0x02000000 : AT(_RomSize)
    {
        _takaraya_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _takaraya_sceneSegmentTextStart = .;
            build/scenes/indoors/takaraya/takaraya_scene.o (.text)
        _takaraya_sceneSegmentTextEnd = .;
    _takaraya_sceneSegmentTextSize = ABSOLUTE( _takaraya_sceneSegmentTextEnd - _takaraya_sceneSegmentTextStart );
        _takaraya_sceneSegmentDataStart = .;
            build/scenes/indoors/takaraya/takaraya_scene.o (.data)
        _takaraya_sceneSegmentDataEnd = .;
    _takaraya_sceneSegmentDataSize = ABSOLUTE( _takaraya_sceneSegmentDataEnd - _takaraya_sceneSegmentDataStart );
        _takaraya_sceneSegmentRoDataStart = .;
            build/scenes/indoors/takaraya/takaraya_scene.o (.rodata)
        _takaraya_sceneSegmentRoDataEnd = .;
    _takaraya_sceneSegmentRoDataSize = ABSOLUTE( _takaraya_sceneSegmentRoDataEnd - _takaraya_sceneSegmentRoDataStart );
        _takaraya_sceneSegmentSDataStart = .;
            build/scenes/indoors/takaraya/takaraya_scene.o (.sdata)
        . = ALIGN(0x10);
        _takaraya_sceneSegmentSDataEnd = .;
        _takaraya_sceneSegmentOvlStart = .;
            build/scenes/indoors/takaraya/takaraya_scene.o (.ovl)
        . = ALIGN(0x10);
        _takaraya_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _takaraya_sceneSegmentOvlEnd - _takaraya_sceneSegmentTextStart );
    _takaraya_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..takaraya_scene.bss ADDR(..takaraya_scene) + SIZEOF(..takaraya_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _takaraya_sceneSegmentBssStart = .;
            build/scenes/indoors/takaraya/takaraya_scene.o (.sbss)
            build/scenes/indoors/takaraya/takaraya_scene.o (.scommon)
            build/scenes/indoors/takaraya/takaraya_scene.o (.bss)
            build/scenes/indoors/takaraya/takaraya_scene.o (COMMON)
        . = ALIGN(0x10);
        _takaraya_sceneSegmentBssEnd = .;
        _takaraya_sceneSegmentEnd = .;
    }
    _takaraya_sceneSegmentBssSize = ABSOLUTE( _takaraya_sceneSegmentBssEnd - _takaraya_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _takaraya_room_0SegmentRomStart = _RomSize;
    ..takaraya_room_0 0x03000000 : AT(_RomSize)
    {
        _takaraya_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _takaraya_room_0SegmentTextStart = .;
            build/scenes/indoors/takaraya/takaraya_room_0.o (.text)
        _takaraya_room_0SegmentTextEnd = .;
    _takaraya_room_0SegmentTextSize = ABSOLUTE( _takaraya_room_0SegmentTextEnd - _takaraya_room_0SegmentTextStart );
        _takaraya_room_0SegmentDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_0.o (.data)
        _takaraya_room_0SegmentDataEnd = .;
    _takaraya_room_0SegmentDataSize = ABSOLUTE( _takaraya_room_0SegmentDataEnd - _takaraya_room_0SegmentDataStart );
        _takaraya_room_0SegmentRoDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_0.o (.rodata)
        _takaraya_room_0SegmentRoDataEnd = .;
    _takaraya_room_0SegmentRoDataSize = ABSOLUTE( _takaraya_room_0SegmentRoDataEnd - _takaraya_room_0SegmentRoDataStart );
        _takaraya_room_0SegmentSDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_0.o (.sdata)
        . = ALIGN(0x10);
        _takaraya_room_0SegmentSDataEnd = .;
        _takaraya_room_0SegmentOvlStart = .;
            build/scenes/indoors/takaraya/takaraya_room_0.o (.ovl)
        . = ALIGN(0x10);
        _takaraya_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _takaraya_room_0SegmentOvlEnd - _takaraya_room_0SegmentTextStart );
    _takaraya_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..takaraya_room_0.bss ADDR(..takaraya_room_0) + SIZEOF(..takaraya_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _takaraya_room_0SegmentBssStart = .;
            build/scenes/indoors/takaraya/takaraya_room_0.o (.sbss)
            build/scenes/indoors/takaraya/takaraya_room_0.o (.scommon)
            build/scenes/indoors/takaraya/takaraya_room_0.o (.bss)
            build/scenes/indoors/takaraya/takaraya_room_0.o (COMMON)
        . = ALIGN(0x10);
        _takaraya_room_0SegmentBssEnd = .;
        _takaraya_room_0SegmentEnd = .;
    }
    _takaraya_room_0SegmentBssSize = ABSOLUTE( _takaraya_room_0SegmentBssEnd - _takaraya_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _takaraya_room_1SegmentRomStart = _RomSize;
    ..takaraya_room_1 0x03000000 : AT(_RomSize)
    {
        _takaraya_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _takaraya_room_1SegmentTextStart = .;
            build/scenes/indoors/takaraya/takaraya_room_1.o (.text)
        _takaraya_room_1SegmentTextEnd = .;
    _takaraya_room_1SegmentTextSize = ABSOLUTE( _takaraya_room_1SegmentTextEnd - _takaraya_room_1SegmentTextStart );
        _takaraya_room_1SegmentDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_1.o (.data)
        _takaraya_room_1SegmentDataEnd = .;
    _takaraya_room_1SegmentDataSize = ABSOLUTE( _takaraya_room_1SegmentDataEnd - _takaraya_room_1SegmentDataStart );
        _takaraya_room_1SegmentRoDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_1.o (.rodata)
        _takaraya_room_1SegmentRoDataEnd = .;
    _takaraya_room_1SegmentRoDataSize = ABSOLUTE( _takaraya_room_1SegmentRoDataEnd - _takaraya_room_1SegmentRoDataStart );
        _takaraya_room_1SegmentSDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_1.o (.sdata)
        . = ALIGN(0x10);
        _takaraya_room_1SegmentSDataEnd = .;
        _takaraya_room_1SegmentOvlStart = .;
            build/scenes/indoors/takaraya/takaraya_room_1.o (.ovl)
        . = ALIGN(0x10);
        _takaraya_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _takaraya_room_1SegmentOvlEnd - _takaraya_room_1SegmentTextStart );
    _takaraya_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..takaraya_room_1.bss ADDR(..takaraya_room_1) + SIZEOF(..takaraya_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _takaraya_room_1SegmentBssStart = .;
            build/scenes/indoors/takaraya/takaraya_room_1.o (.sbss)
            build/scenes/indoors/takaraya/takaraya_room_1.o (.scommon)
            build/scenes/indoors/takaraya/takaraya_room_1.o (.bss)
            build/scenes/indoors/takaraya/takaraya_room_1.o (COMMON)
        . = ALIGN(0x10);
        _takaraya_room_1SegmentBssEnd = .;
        _takaraya_room_1SegmentEnd = .;
    }
    _takaraya_room_1SegmentBssSize = ABSOLUTE( _takaraya_room_1SegmentBssEnd - _takaraya_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _takaraya_room_2SegmentRomStart = _RomSize;
    ..takaraya_room_2 0x03000000 : AT(_RomSize)
    {
        _takaraya_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _takaraya_room_2SegmentTextStart = .;
            build/scenes/indoors/takaraya/takaraya_room_2.o (.text)
        _takaraya_room_2SegmentTextEnd = .;
    _takaraya_room_2SegmentTextSize = ABSOLUTE( _takaraya_room_2SegmentTextEnd - _takaraya_room_2SegmentTextStart );
        _takaraya_room_2SegmentDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_2.o (.data)
        _takaraya_room_2SegmentDataEnd = .;
    _takaraya_room_2SegmentDataSize = ABSOLUTE( _takaraya_room_2SegmentDataEnd - _takaraya_room_2SegmentDataStart );
        _takaraya_room_2SegmentRoDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_2.o (.rodata)
        _takaraya_room_2SegmentRoDataEnd = .;
    _takaraya_room_2SegmentRoDataSize = ABSOLUTE( _takaraya_room_2SegmentRoDataEnd - _takaraya_room_2SegmentRoDataStart );
        _takaraya_room_2SegmentSDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_2.o (.sdata)
        . = ALIGN(0x10);
        _takaraya_room_2SegmentSDataEnd = .;
        _takaraya_room_2SegmentOvlStart = .;
            build/scenes/indoors/takaraya/takaraya_room_2.o (.ovl)
        . = ALIGN(0x10);
        _takaraya_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _takaraya_room_2SegmentOvlEnd - _takaraya_room_2SegmentTextStart );
    _takaraya_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..takaraya_room_2.bss ADDR(..takaraya_room_2) + SIZEOF(..takaraya_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _takaraya_room_2SegmentBssStart = .;
            build/scenes/indoors/takaraya/takaraya_room_2.o (.sbss)
            build/scenes/indoors/takaraya/takaraya_room_2.o (.scommon)
            build/scenes/indoors/takaraya/takaraya_room_2.o (.bss)
            build/scenes/indoors/takaraya/takaraya_room_2.o (COMMON)
        . = ALIGN(0x10);
        _takaraya_room_2SegmentBssEnd = .;
        _takaraya_room_2SegmentEnd = .;
    }
    _takaraya_room_2SegmentBssSize = ABSOLUTE( _takaraya_room_2SegmentBssEnd - _takaraya_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _takaraya_room_3SegmentRomStart = _RomSize;
    ..takaraya_room_3 0x03000000 : AT(_RomSize)
    {
        _takaraya_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _takaraya_room_3SegmentTextStart = .;
            build/scenes/indoors/takaraya/takaraya_room_3.o (.text)
        _takaraya_room_3SegmentTextEnd = .;
    _takaraya_room_3SegmentTextSize = ABSOLUTE( _takaraya_room_3SegmentTextEnd - _takaraya_room_3SegmentTextStart );
        _takaraya_room_3SegmentDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_3.o (.data)
        _takaraya_room_3SegmentDataEnd = .;
    _takaraya_room_3SegmentDataSize = ABSOLUTE( _takaraya_room_3SegmentDataEnd - _takaraya_room_3SegmentDataStart );
        _takaraya_room_3SegmentRoDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_3.o (.rodata)
        _takaraya_room_3SegmentRoDataEnd = .;
    _takaraya_room_3SegmentRoDataSize = ABSOLUTE( _takaraya_room_3SegmentRoDataEnd - _takaraya_room_3SegmentRoDataStart );
        _takaraya_room_3SegmentSDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_3.o (.sdata)
        . = ALIGN(0x10);
        _takaraya_room_3SegmentSDataEnd = .;
        _takaraya_room_3SegmentOvlStart = .;
            build/scenes/indoors/takaraya/takaraya_room_3.o (.ovl)
        . = ALIGN(0x10);
        _takaraya_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _takaraya_room_3SegmentOvlEnd - _takaraya_room_3SegmentTextStart );
    _takaraya_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..takaraya_room_3.bss ADDR(..takaraya_room_3) + SIZEOF(..takaraya_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _takaraya_room_3SegmentBssStart = .;
            build/scenes/indoors/takaraya/takaraya_room_3.o (.sbss)
            build/scenes/indoors/takaraya/takaraya_room_3.o (.scommon)
            build/scenes/indoors/takaraya/takaraya_room_3.o (.bss)
            build/scenes/indoors/takaraya/takaraya_room_3.o (COMMON)
        . = ALIGN(0x10);
        _takaraya_room_3SegmentBssEnd = .;
        _takaraya_room_3SegmentEnd = .;
    }
    _takaraya_room_3SegmentBssSize = ABSOLUTE( _takaraya_room_3SegmentBssEnd - _takaraya_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _takaraya_room_4SegmentRomStart = _RomSize;
    ..takaraya_room_4 0x03000000 : AT(_RomSize)
    {
        _takaraya_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _takaraya_room_4SegmentTextStart = .;
            build/scenes/indoors/takaraya/takaraya_room_4.o (.text)
        _takaraya_room_4SegmentTextEnd = .;
    _takaraya_room_4SegmentTextSize = ABSOLUTE( _takaraya_room_4SegmentTextEnd - _takaraya_room_4SegmentTextStart );
        _takaraya_room_4SegmentDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_4.o (.data)
        _takaraya_room_4SegmentDataEnd = .;
    _takaraya_room_4SegmentDataSize = ABSOLUTE( _takaraya_room_4SegmentDataEnd - _takaraya_room_4SegmentDataStart );
        _takaraya_room_4SegmentRoDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_4.o (.rodata)
        _takaraya_room_4SegmentRoDataEnd = .;
    _takaraya_room_4SegmentRoDataSize = ABSOLUTE( _takaraya_room_4SegmentRoDataEnd - _takaraya_room_4SegmentRoDataStart );
        _takaraya_room_4SegmentSDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_4.o (.sdata)
        . = ALIGN(0x10);
        _takaraya_room_4SegmentSDataEnd = .;
        _takaraya_room_4SegmentOvlStart = .;
            build/scenes/indoors/takaraya/takaraya_room_4.o (.ovl)
        . = ALIGN(0x10);
        _takaraya_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _takaraya_room_4SegmentOvlEnd - _takaraya_room_4SegmentTextStart );
    _takaraya_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..takaraya_room_4.bss ADDR(..takaraya_room_4) + SIZEOF(..takaraya_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _takaraya_room_4SegmentBssStart = .;
            build/scenes/indoors/takaraya/takaraya_room_4.o (.sbss)
            build/scenes/indoors/takaraya/takaraya_room_4.o (.scommon)
            build/scenes/indoors/takaraya/takaraya_room_4.o (.bss)
            build/scenes/indoors/takaraya/takaraya_room_4.o (COMMON)
        . = ALIGN(0x10);
        _takaraya_room_4SegmentBssEnd = .;
        _takaraya_room_4SegmentEnd = .;
    }
    _takaraya_room_4SegmentBssSize = ABSOLUTE( _takaraya_room_4SegmentBssEnd - _takaraya_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _takaraya_room_5SegmentRomStart = _RomSize;
    ..takaraya_room_5 0x03000000 : AT(_RomSize)
    {
        _takaraya_room_5SegmentStart = .;
        . = ALIGN(0x10);
        _takaraya_room_5SegmentTextStart = .;
            build/scenes/indoors/takaraya/takaraya_room_5.o (.text)
        _takaraya_room_5SegmentTextEnd = .;
    _takaraya_room_5SegmentTextSize = ABSOLUTE( _takaraya_room_5SegmentTextEnd - _takaraya_room_5SegmentTextStart );
        _takaraya_room_5SegmentDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_5.o (.data)
        _takaraya_room_5SegmentDataEnd = .;
    _takaraya_room_5SegmentDataSize = ABSOLUTE( _takaraya_room_5SegmentDataEnd - _takaraya_room_5SegmentDataStart );
        _takaraya_room_5SegmentRoDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_5.o (.rodata)
        _takaraya_room_5SegmentRoDataEnd = .;
    _takaraya_room_5SegmentRoDataSize = ABSOLUTE( _takaraya_room_5SegmentRoDataEnd - _takaraya_room_5SegmentRoDataStart );
        _takaraya_room_5SegmentSDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_5.o (.sdata)
        . = ALIGN(0x10);
        _takaraya_room_5SegmentSDataEnd = .;
        _takaraya_room_5SegmentOvlStart = .;
            build/scenes/indoors/takaraya/takaraya_room_5.o (.ovl)
        . = ALIGN(0x10);
        _takaraya_room_5SegmentOvlEnd = .;
    }
    _RomSize += ( _takaraya_room_5SegmentOvlEnd - _takaraya_room_5SegmentTextStart );
    _takaraya_room_5SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..takaraya_room_5.bss ADDR(..takaraya_room_5) + SIZEOF(..takaraya_room_5) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _takaraya_room_5SegmentBssStart = .;
            build/scenes/indoors/takaraya/takaraya_room_5.o (.sbss)
            build/scenes/indoors/takaraya/takaraya_room_5.o (.scommon)
            build/scenes/indoors/takaraya/takaraya_room_5.o (.bss)
            build/scenes/indoors/takaraya/takaraya_room_5.o (COMMON)
        . = ALIGN(0x10);
        _takaraya_room_5SegmentBssEnd = .;
        _takaraya_room_5SegmentEnd = .;
    }
    _takaraya_room_5SegmentBssSize = ABSOLUTE( _takaraya_room_5SegmentBssEnd - _takaraya_room_5SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _takaraya_room_6SegmentRomStart = _RomSize;
    ..takaraya_room_6 0x03000000 : AT(_RomSize)
    {
        _takaraya_room_6SegmentStart = .;
        . = ALIGN(0x10);
        _takaraya_room_6SegmentTextStart = .;
            build/scenes/indoors/takaraya/takaraya_room_6.o (.text)
        _takaraya_room_6SegmentTextEnd = .;
    _takaraya_room_6SegmentTextSize = ABSOLUTE( _takaraya_room_6SegmentTextEnd - _takaraya_room_6SegmentTextStart );
        _takaraya_room_6SegmentDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_6.o (.data)
        _takaraya_room_6SegmentDataEnd = .;
    _takaraya_room_6SegmentDataSize = ABSOLUTE( _takaraya_room_6SegmentDataEnd - _takaraya_room_6SegmentDataStart );
        _takaraya_room_6SegmentRoDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_6.o (.rodata)
        _takaraya_room_6SegmentRoDataEnd = .;
    _takaraya_room_6SegmentRoDataSize = ABSOLUTE( _takaraya_room_6SegmentRoDataEnd - _takaraya_room_6SegmentRoDataStart );
        _takaraya_room_6SegmentSDataStart = .;
            build/scenes/indoors/takaraya/takaraya_room_6.o (.sdata)
        . = ALIGN(0x10);
        _takaraya_room_6SegmentSDataEnd = .;
        _takaraya_room_6SegmentOvlStart = .;
            build/scenes/indoors/takaraya/takaraya_room_6.o (.ovl)
        . = ALIGN(0x10);
        _takaraya_room_6SegmentOvlEnd = .;
    }
    _RomSize += ( _takaraya_room_6SegmentOvlEnd - _takaraya_room_6SegmentTextStart );
    _takaraya_room_6SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..takaraya_room_6.bss ADDR(..takaraya_room_6) + SIZEOF(..takaraya_room_6) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _takaraya_room_6SegmentBssStart = .;
            build/scenes/indoors/takaraya/takaraya_room_6.o (.sbss)
            build/scenes/indoors/takaraya/takaraya_room_6.o (.scommon)
            build/scenes/indoors/takaraya/takaraya_room_6.o (.bss)
            build/scenes/indoors/takaraya/takaraya_room_6.o (COMMON)
        . = ALIGN(0x10);
        _takaraya_room_6SegmentBssEnd = .;
        _takaraya_room_6SegmentEnd = .;
    }
    _takaraya_room_6SegmentBssSize = ABSOLUTE( _takaraya_room_6SegmentBssEnd - _takaraya_room_6SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_sonogo_sceneSegmentRomStart = _RomSize;
    ..ganon_sonogo_scene 0x02000000 : AT(_RomSize)
    {
        _ganon_sonogo_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _ganon_sonogo_sceneSegmentTextStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_scene.o (.text)
        _ganon_sonogo_sceneSegmentTextEnd = .;
    _ganon_sonogo_sceneSegmentTextSize = ABSOLUTE( _ganon_sonogo_sceneSegmentTextEnd - _ganon_sonogo_sceneSegmentTextStart );
        _ganon_sonogo_sceneSegmentDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_scene.o (.data)
        _ganon_sonogo_sceneSegmentDataEnd = .;
    _ganon_sonogo_sceneSegmentDataSize = ABSOLUTE( _ganon_sonogo_sceneSegmentDataEnd - _ganon_sonogo_sceneSegmentDataStart );
        _ganon_sonogo_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_scene.o (.rodata)
        _ganon_sonogo_sceneSegmentRoDataEnd = .;
    _ganon_sonogo_sceneSegmentRoDataSize = ABSOLUTE( _ganon_sonogo_sceneSegmentRoDataEnd - _ganon_sonogo_sceneSegmentRoDataStart );
        _ganon_sonogo_sceneSegmentSDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_scene.o (.sdata)
        . = ALIGN(0x10);
        _ganon_sonogo_sceneSegmentSDataEnd = .;
        _ganon_sonogo_sceneSegmentOvlStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_scene.o (.ovl)
        . = ALIGN(0x10);
        _ganon_sonogo_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_sonogo_sceneSegmentOvlEnd - _ganon_sonogo_sceneSegmentTextStart );
    _ganon_sonogo_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_sonogo_scene.bss ADDR(..ganon_sonogo_scene) + SIZEOF(..ganon_sonogo_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_sonogo_sceneSegmentBssStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_scene.o (.sbss)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_scene.o (.scommon)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_scene.o (.bss)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_scene.o (COMMON)
        . = ALIGN(0x10);
        _ganon_sonogo_sceneSegmentBssEnd = .;
        _ganon_sonogo_sceneSegmentEnd = .;
    }
    _ganon_sonogo_sceneSegmentBssSize = ABSOLUTE( _ganon_sonogo_sceneSegmentBssEnd - _ganon_sonogo_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_sonogo_room_0SegmentRomStart = _RomSize;
    ..ganon_sonogo_room_0 0x03000000 : AT(_RomSize)
    {
        _ganon_sonogo_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_sonogo_room_0SegmentTextStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_0.o (.text)
        _ganon_sonogo_room_0SegmentTextEnd = .;
    _ganon_sonogo_room_0SegmentTextSize = ABSOLUTE( _ganon_sonogo_room_0SegmentTextEnd - _ganon_sonogo_room_0SegmentTextStart );
        _ganon_sonogo_room_0SegmentDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_0.o (.data)
        _ganon_sonogo_room_0SegmentDataEnd = .;
    _ganon_sonogo_room_0SegmentDataSize = ABSOLUTE( _ganon_sonogo_room_0SegmentDataEnd - _ganon_sonogo_room_0SegmentDataStart );
        _ganon_sonogo_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_0.o (.rodata)
        _ganon_sonogo_room_0SegmentRoDataEnd = .;
    _ganon_sonogo_room_0SegmentRoDataSize = ABSOLUTE( _ganon_sonogo_room_0SegmentRoDataEnd - _ganon_sonogo_room_0SegmentRoDataStart );
        _ganon_sonogo_room_0SegmentSDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_0.o (.sdata)
        . = ALIGN(0x10);
        _ganon_sonogo_room_0SegmentSDataEnd = .;
        _ganon_sonogo_room_0SegmentOvlStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_0.o (.ovl)
        . = ALIGN(0x10);
        _ganon_sonogo_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_sonogo_room_0SegmentOvlEnd - _ganon_sonogo_room_0SegmentTextStart );
    _ganon_sonogo_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_sonogo_room_0.bss ADDR(..ganon_sonogo_room_0) + SIZEOF(..ganon_sonogo_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_sonogo_room_0SegmentBssStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_0.o (.sbss)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_0.o (.scommon)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_0.o (.bss)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_0.o (COMMON)
        . = ALIGN(0x10);
        _ganon_sonogo_room_0SegmentBssEnd = .;
        _ganon_sonogo_room_0SegmentEnd = .;
    }
    _ganon_sonogo_room_0SegmentBssSize = ABSOLUTE( _ganon_sonogo_room_0SegmentBssEnd - _ganon_sonogo_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_sonogo_room_1SegmentRomStart = _RomSize;
    ..ganon_sonogo_room_1 0x03000000 : AT(_RomSize)
    {
        _ganon_sonogo_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_sonogo_room_1SegmentTextStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_1.o (.text)
        _ganon_sonogo_room_1SegmentTextEnd = .;
    _ganon_sonogo_room_1SegmentTextSize = ABSOLUTE( _ganon_sonogo_room_1SegmentTextEnd - _ganon_sonogo_room_1SegmentTextStart );
        _ganon_sonogo_room_1SegmentDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_1.o (.data)
        _ganon_sonogo_room_1SegmentDataEnd = .;
    _ganon_sonogo_room_1SegmentDataSize = ABSOLUTE( _ganon_sonogo_room_1SegmentDataEnd - _ganon_sonogo_room_1SegmentDataStart );
        _ganon_sonogo_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_1.o (.rodata)
        _ganon_sonogo_room_1SegmentRoDataEnd = .;
    _ganon_sonogo_room_1SegmentRoDataSize = ABSOLUTE( _ganon_sonogo_room_1SegmentRoDataEnd - _ganon_sonogo_room_1SegmentRoDataStart );
        _ganon_sonogo_room_1SegmentSDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_1.o (.sdata)
        . = ALIGN(0x10);
        _ganon_sonogo_room_1SegmentSDataEnd = .;
        _ganon_sonogo_room_1SegmentOvlStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_1.o (.ovl)
        . = ALIGN(0x10);
        _ganon_sonogo_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_sonogo_room_1SegmentOvlEnd - _ganon_sonogo_room_1SegmentTextStart );
    _ganon_sonogo_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_sonogo_room_1.bss ADDR(..ganon_sonogo_room_1) + SIZEOF(..ganon_sonogo_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_sonogo_room_1SegmentBssStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_1.o (.sbss)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_1.o (.scommon)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_1.o (.bss)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_1.o (COMMON)
        . = ALIGN(0x10);
        _ganon_sonogo_room_1SegmentBssEnd = .;
        _ganon_sonogo_room_1SegmentEnd = .;
    }
    _ganon_sonogo_room_1SegmentBssSize = ABSOLUTE( _ganon_sonogo_room_1SegmentBssEnd - _ganon_sonogo_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_sonogo_room_2SegmentRomStart = _RomSize;
    ..ganon_sonogo_room_2 0x03000000 : AT(_RomSize)
    {
        _ganon_sonogo_room_2SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_sonogo_room_2SegmentTextStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_2.o (.text)
        _ganon_sonogo_room_2SegmentTextEnd = .;
    _ganon_sonogo_room_2SegmentTextSize = ABSOLUTE( _ganon_sonogo_room_2SegmentTextEnd - _ganon_sonogo_room_2SegmentTextStart );
        _ganon_sonogo_room_2SegmentDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_2.o (.data)
        _ganon_sonogo_room_2SegmentDataEnd = .;
    _ganon_sonogo_room_2SegmentDataSize = ABSOLUTE( _ganon_sonogo_room_2SegmentDataEnd - _ganon_sonogo_room_2SegmentDataStart );
        _ganon_sonogo_room_2SegmentRoDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_2.o (.rodata)
        _ganon_sonogo_room_2SegmentRoDataEnd = .;
    _ganon_sonogo_room_2SegmentRoDataSize = ABSOLUTE( _ganon_sonogo_room_2SegmentRoDataEnd - _ganon_sonogo_room_2SegmentRoDataStart );
        _ganon_sonogo_room_2SegmentSDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_2.o (.sdata)
        . = ALIGN(0x10);
        _ganon_sonogo_room_2SegmentSDataEnd = .;
        _ganon_sonogo_room_2SegmentOvlStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_2.o (.ovl)
        . = ALIGN(0x10);
        _ganon_sonogo_room_2SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_sonogo_room_2SegmentOvlEnd - _ganon_sonogo_room_2SegmentTextStart );
    _ganon_sonogo_room_2SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_sonogo_room_2.bss ADDR(..ganon_sonogo_room_2) + SIZEOF(..ganon_sonogo_room_2) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_sonogo_room_2SegmentBssStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_2.o (.sbss)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_2.o (.scommon)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_2.o (.bss)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_2.o (COMMON)
        . = ALIGN(0x10);
        _ganon_sonogo_room_2SegmentBssEnd = .;
        _ganon_sonogo_room_2SegmentEnd = .;
    }
    _ganon_sonogo_room_2SegmentBssSize = ABSOLUTE( _ganon_sonogo_room_2SegmentBssEnd - _ganon_sonogo_room_2SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_sonogo_room_3SegmentRomStart = _RomSize;
    ..ganon_sonogo_room_3 0x03000000 : AT(_RomSize)
    {
        _ganon_sonogo_room_3SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_sonogo_room_3SegmentTextStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_3.o (.text)
        _ganon_sonogo_room_3SegmentTextEnd = .;
    _ganon_sonogo_room_3SegmentTextSize = ABSOLUTE( _ganon_sonogo_room_3SegmentTextEnd - _ganon_sonogo_room_3SegmentTextStart );
        _ganon_sonogo_room_3SegmentDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_3.o (.data)
        _ganon_sonogo_room_3SegmentDataEnd = .;
    _ganon_sonogo_room_3SegmentDataSize = ABSOLUTE( _ganon_sonogo_room_3SegmentDataEnd - _ganon_sonogo_room_3SegmentDataStart );
        _ganon_sonogo_room_3SegmentRoDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_3.o (.rodata)
        _ganon_sonogo_room_3SegmentRoDataEnd = .;
    _ganon_sonogo_room_3SegmentRoDataSize = ABSOLUTE( _ganon_sonogo_room_3SegmentRoDataEnd - _ganon_sonogo_room_3SegmentRoDataStart );
        _ganon_sonogo_room_3SegmentSDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_3.o (.sdata)
        . = ALIGN(0x10);
        _ganon_sonogo_room_3SegmentSDataEnd = .;
        _ganon_sonogo_room_3SegmentOvlStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_3.o (.ovl)
        . = ALIGN(0x10);
        _ganon_sonogo_room_3SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_sonogo_room_3SegmentOvlEnd - _ganon_sonogo_room_3SegmentTextStart );
    _ganon_sonogo_room_3SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_sonogo_room_3.bss ADDR(..ganon_sonogo_room_3) + SIZEOF(..ganon_sonogo_room_3) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_sonogo_room_3SegmentBssStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_3.o (.sbss)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_3.o (.scommon)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_3.o (.bss)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_3.o (COMMON)
        . = ALIGN(0x10);
        _ganon_sonogo_room_3SegmentBssEnd = .;
        _ganon_sonogo_room_3SegmentEnd = .;
    }
    _ganon_sonogo_room_3SegmentBssSize = ABSOLUTE( _ganon_sonogo_room_3SegmentBssEnd - _ganon_sonogo_room_3SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_sonogo_room_4SegmentRomStart = _RomSize;
    ..ganon_sonogo_room_4 0x03000000 : AT(_RomSize)
    {
        _ganon_sonogo_room_4SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_sonogo_room_4SegmentTextStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_4.o (.text)
        _ganon_sonogo_room_4SegmentTextEnd = .;
    _ganon_sonogo_room_4SegmentTextSize = ABSOLUTE( _ganon_sonogo_room_4SegmentTextEnd - _ganon_sonogo_room_4SegmentTextStart );
        _ganon_sonogo_room_4SegmentDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_4.o (.data)
        _ganon_sonogo_room_4SegmentDataEnd = .;
    _ganon_sonogo_room_4SegmentDataSize = ABSOLUTE( _ganon_sonogo_room_4SegmentDataEnd - _ganon_sonogo_room_4SegmentDataStart );
        _ganon_sonogo_room_4SegmentRoDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_4.o (.rodata)
        _ganon_sonogo_room_4SegmentRoDataEnd = .;
    _ganon_sonogo_room_4SegmentRoDataSize = ABSOLUTE( _ganon_sonogo_room_4SegmentRoDataEnd - _ganon_sonogo_room_4SegmentRoDataStart );
        _ganon_sonogo_room_4SegmentSDataStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_4.o (.sdata)
        . = ALIGN(0x10);
        _ganon_sonogo_room_4SegmentSDataEnd = .;
        _ganon_sonogo_room_4SegmentOvlStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_4.o (.ovl)
        . = ALIGN(0x10);
        _ganon_sonogo_room_4SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_sonogo_room_4SegmentOvlEnd - _ganon_sonogo_room_4SegmentTextStart );
    _ganon_sonogo_room_4SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_sonogo_room_4.bss ADDR(..ganon_sonogo_room_4) + SIZEOF(..ganon_sonogo_room_4) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_sonogo_room_4SegmentBssStart = .;
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_4.o (.sbss)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_4.o (.scommon)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_4.o (.bss)
            build/scenes/dungeons/ganon_sonogo/ganon_sonogo_room_4.o (COMMON)
        . = ALIGN(0x10);
        _ganon_sonogo_room_4SegmentBssEnd = .;
        _ganon_sonogo_room_4SegmentEnd = .;
    }
    _ganon_sonogo_room_4SegmentBssSize = ABSOLUTE( _ganon_sonogo_room_4SegmentBssEnd - _ganon_sonogo_room_4SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_demo_sceneSegmentRomStart = _RomSize;
    ..ganon_demo_scene 0x02000000 : AT(_RomSize)
    {
        _ganon_demo_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _ganon_demo_sceneSegmentTextStart = .;
            build/scenes/dungeons/ganon_demo/ganon_demo_scene.o (.text)
        _ganon_demo_sceneSegmentTextEnd = .;
    _ganon_demo_sceneSegmentTextSize = ABSOLUTE( _ganon_demo_sceneSegmentTextEnd - _ganon_demo_sceneSegmentTextStart );
        _ganon_demo_sceneSegmentDataStart = .;
            build/scenes/dungeons/ganon_demo/ganon_demo_scene.o (.data)
        _ganon_demo_sceneSegmentDataEnd = .;
    _ganon_demo_sceneSegmentDataSize = ABSOLUTE( _ganon_demo_sceneSegmentDataEnd - _ganon_demo_sceneSegmentDataStart );
        _ganon_demo_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/ganon_demo/ganon_demo_scene.o (.rodata)
        _ganon_demo_sceneSegmentRoDataEnd = .;
    _ganon_demo_sceneSegmentRoDataSize = ABSOLUTE( _ganon_demo_sceneSegmentRoDataEnd - _ganon_demo_sceneSegmentRoDataStart );
        _ganon_demo_sceneSegmentSDataStart = .;
            build/scenes/dungeons/ganon_demo/ganon_demo_scene.o (.sdata)
        . = ALIGN(0x10);
        _ganon_demo_sceneSegmentSDataEnd = .;
        _ganon_demo_sceneSegmentOvlStart = .;
            build/scenes/dungeons/ganon_demo/ganon_demo_scene.o (.ovl)
        . = ALIGN(0x10);
        _ganon_demo_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_demo_sceneSegmentOvlEnd - _ganon_demo_sceneSegmentTextStart );
    _ganon_demo_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_demo_scene.bss ADDR(..ganon_demo_scene) + SIZEOF(..ganon_demo_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_demo_sceneSegmentBssStart = .;
            build/scenes/dungeons/ganon_demo/ganon_demo_scene.o (.sbss)
            build/scenes/dungeons/ganon_demo/ganon_demo_scene.o (.scommon)
            build/scenes/dungeons/ganon_demo/ganon_demo_scene.o (.bss)
            build/scenes/dungeons/ganon_demo/ganon_demo_scene.o (COMMON)
        . = ALIGN(0x10);
        _ganon_demo_sceneSegmentBssEnd = .;
        _ganon_demo_sceneSegmentEnd = .;
    }
    _ganon_demo_sceneSegmentBssSize = ABSOLUTE( _ganon_demo_sceneSegmentBssEnd - _ganon_demo_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganon_demo_room_0SegmentRomStart = _RomSize;
    ..ganon_demo_room_0 0x03000000 : AT(_RomSize)
    {
        _ganon_demo_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _ganon_demo_room_0SegmentTextStart = .;
            build/scenes/dungeons/ganon_demo/ganon_demo_room_0.o (.text)
        _ganon_demo_room_0SegmentTextEnd = .;
    _ganon_demo_room_0SegmentTextSize = ABSOLUTE( _ganon_demo_room_0SegmentTextEnd - _ganon_demo_room_0SegmentTextStart );
        _ganon_demo_room_0SegmentDataStart = .;
            build/scenes/dungeons/ganon_demo/ganon_demo_room_0.o (.data)
        _ganon_demo_room_0SegmentDataEnd = .;
    _ganon_demo_room_0SegmentDataSize = ABSOLUTE( _ganon_demo_room_0SegmentDataEnd - _ganon_demo_room_0SegmentDataStart );
        _ganon_demo_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/ganon_demo/ganon_demo_room_0.o (.rodata)
        _ganon_demo_room_0SegmentRoDataEnd = .;
    _ganon_demo_room_0SegmentRoDataSize = ABSOLUTE( _ganon_demo_room_0SegmentRoDataEnd - _ganon_demo_room_0SegmentRoDataStart );
        _ganon_demo_room_0SegmentSDataStart = .;
            build/scenes/dungeons/ganon_demo/ganon_demo_room_0.o (.sdata)
        . = ALIGN(0x10);
        _ganon_demo_room_0SegmentSDataEnd = .;
        _ganon_demo_room_0SegmentOvlStart = .;
            build/scenes/dungeons/ganon_demo/ganon_demo_room_0.o (.ovl)
        . = ALIGN(0x10);
        _ganon_demo_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _ganon_demo_room_0SegmentOvlEnd - _ganon_demo_room_0SegmentTextStart );
    _ganon_demo_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganon_demo_room_0.bss ADDR(..ganon_demo_room_0) + SIZEOF(..ganon_demo_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganon_demo_room_0SegmentBssStart = .;
            build/scenes/dungeons/ganon_demo/ganon_demo_room_0.o (.sbss)
            build/scenes/dungeons/ganon_demo/ganon_demo_room_0.o (.scommon)
            build/scenes/dungeons/ganon_demo/ganon_demo_room_0.o (.bss)
            build/scenes/dungeons/ganon_demo/ganon_demo_room_0.o (COMMON)
        . = ALIGN(0x10);
        _ganon_demo_room_0SegmentBssEnd = .;
        _ganon_demo_room_0SegmentEnd = .;
    }
    _ganon_demo_room_0SegmentBssSize = ABSOLUTE( _ganon_demo_room_0SegmentBssEnd - _ganon_demo_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _besitu_sceneSegmentRomStart = _RomSize;
    ..besitu_scene 0x02000000 : AT(_RomSize)
    {
        _besitu_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _besitu_sceneSegmentTextStart = .;
            build/scenes/test_levels/besitu/besitu_scene.o (.text)
        _besitu_sceneSegmentTextEnd = .;
    _besitu_sceneSegmentTextSize = ABSOLUTE( _besitu_sceneSegmentTextEnd - _besitu_sceneSegmentTextStart );
        _besitu_sceneSegmentDataStart = .;
            build/scenes/test_levels/besitu/besitu_scene.o (.data)
        _besitu_sceneSegmentDataEnd = .;
    _besitu_sceneSegmentDataSize = ABSOLUTE( _besitu_sceneSegmentDataEnd - _besitu_sceneSegmentDataStart );
        _besitu_sceneSegmentRoDataStart = .;
            build/scenes/test_levels/besitu/besitu_scene.o (.rodata)
        _besitu_sceneSegmentRoDataEnd = .;
    _besitu_sceneSegmentRoDataSize = ABSOLUTE( _besitu_sceneSegmentRoDataEnd - _besitu_sceneSegmentRoDataStart );
        _besitu_sceneSegmentSDataStart = .;
            build/scenes/test_levels/besitu/besitu_scene.o (.sdata)
        . = ALIGN(0x10);
        _besitu_sceneSegmentSDataEnd = .;
        _besitu_sceneSegmentOvlStart = .;
            build/scenes/test_levels/besitu/besitu_scene.o (.ovl)
        . = ALIGN(0x10);
        _besitu_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _besitu_sceneSegmentOvlEnd - _besitu_sceneSegmentTextStart );
    _besitu_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..besitu_scene.bss ADDR(..besitu_scene) + SIZEOF(..besitu_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _besitu_sceneSegmentBssStart = .;
            build/scenes/test_levels/besitu/besitu_scene.o (.sbss)
            build/scenes/test_levels/besitu/besitu_scene.o (.scommon)
            build/scenes/test_levels/besitu/besitu_scene.o (.bss)
            build/scenes/test_levels/besitu/besitu_scene.o (COMMON)
        . = ALIGN(0x10);
        _besitu_sceneSegmentBssEnd = .;
        _besitu_sceneSegmentEnd = .;
    }
    _besitu_sceneSegmentBssSize = ABSOLUTE( _besitu_sceneSegmentBssEnd - _besitu_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _besitu_room_0SegmentRomStart = _RomSize;
    ..besitu_room_0 0x03000000 : AT(_RomSize)
    {
        _besitu_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _besitu_room_0SegmentTextStart = .;
            build/scenes/test_levels/besitu/besitu_room_0.o (.text)
        _besitu_room_0SegmentTextEnd = .;
    _besitu_room_0SegmentTextSize = ABSOLUTE( _besitu_room_0SegmentTextEnd - _besitu_room_0SegmentTextStart );
        _besitu_room_0SegmentDataStart = .;
            build/scenes/test_levels/besitu/besitu_room_0.o (.data)
        _besitu_room_0SegmentDataEnd = .;
    _besitu_room_0SegmentDataSize = ABSOLUTE( _besitu_room_0SegmentDataEnd - _besitu_room_0SegmentDataStart );
        _besitu_room_0SegmentRoDataStart = .;
            build/scenes/test_levels/besitu/besitu_room_0.o (.rodata)
        _besitu_room_0SegmentRoDataEnd = .;
    _besitu_room_0SegmentRoDataSize = ABSOLUTE( _besitu_room_0SegmentRoDataEnd - _besitu_room_0SegmentRoDataStart );
        _besitu_room_0SegmentSDataStart = .;
            build/scenes/test_levels/besitu/besitu_room_0.o (.sdata)
        . = ALIGN(0x10);
        _besitu_room_0SegmentSDataEnd = .;
        _besitu_room_0SegmentOvlStart = .;
            build/scenes/test_levels/besitu/besitu_room_0.o (.ovl)
        . = ALIGN(0x10);
        _besitu_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _besitu_room_0SegmentOvlEnd - _besitu_room_0SegmentTextStart );
    _besitu_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..besitu_room_0.bss ADDR(..besitu_room_0) + SIZEOF(..besitu_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _besitu_room_0SegmentBssStart = .;
            build/scenes/test_levels/besitu/besitu_room_0.o (.sbss)
            build/scenes/test_levels/besitu/besitu_room_0.o (.scommon)
            build/scenes/test_levels/besitu/besitu_room_0.o (.bss)
            build/scenes/test_levels/besitu/besitu_room_0.o (COMMON)
        . = ALIGN(0x10);
        _besitu_room_0SegmentBssEnd = .;
        _besitu_room_0SegmentEnd = .;
    }
    _besitu_room_0SegmentBssSize = ABSOLUTE( _besitu_room_0SegmentBssEnd - _besitu_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _face_shop_sceneSegmentRomStart = _RomSize;
    ..face_shop_scene 0x02000000 : AT(_RomSize)
    {
        _face_shop_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _face_shop_sceneSegmentTextStart = .;
            build/scenes/shops/face_shop/face_shop_scene.o (.text)
        _face_shop_sceneSegmentTextEnd = .;
    _face_shop_sceneSegmentTextSize = ABSOLUTE( _face_shop_sceneSegmentTextEnd - _face_shop_sceneSegmentTextStart );
        _face_shop_sceneSegmentDataStart = .;
            build/scenes/shops/face_shop/face_shop_scene.o (.data)
        _face_shop_sceneSegmentDataEnd = .;
    _face_shop_sceneSegmentDataSize = ABSOLUTE( _face_shop_sceneSegmentDataEnd - _face_shop_sceneSegmentDataStart );
        _face_shop_sceneSegmentRoDataStart = .;
            build/scenes/shops/face_shop/face_shop_scene.o (.rodata)
        _face_shop_sceneSegmentRoDataEnd = .;
    _face_shop_sceneSegmentRoDataSize = ABSOLUTE( _face_shop_sceneSegmentRoDataEnd - _face_shop_sceneSegmentRoDataStart );
        _face_shop_sceneSegmentSDataStart = .;
            build/scenes/shops/face_shop/face_shop_scene.o (.sdata)
        . = ALIGN(0x10);
        _face_shop_sceneSegmentSDataEnd = .;
        _face_shop_sceneSegmentOvlStart = .;
            build/scenes/shops/face_shop/face_shop_scene.o (.ovl)
        . = ALIGN(0x10);
        _face_shop_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _face_shop_sceneSegmentOvlEnd - _face_shop_sceneSegmentTextStart );
    _face_shop_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..face_shop_scene.bss ADDR(..face_shop_scene) + SIZEOF(..face_shop_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _face_shop_sceneSegmentBssStart = .;
            build/scenes/shops/face_shop/face_shop_scene.o (.sbss)
            build/scenes/shops/face_shop/face_shop_scene.o (.scommon)
            build/scenes/shops/face_shop/face_shop_scene.o (.bss)
            build/scenes/shops/face_shop/face_shop_scene.o (COMMON)
        . = ALIGN(0x10);
        _face_shop_sceneSegmentBssEnd = .;
        _face_shop_sceneSegmentEnd = .;
    }
    _face_shop_sceneSegmentBssSize = ABSOLUTE( _face_shop_sceneSegmentBssEnd - _face_shop_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _face_shop_room_0SegmentRomStart = _RomSize;
    ..face_shop_room_0 0x03000000 : AT(_RomSize)
    {
        _face_shop_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _face_shop_room_0SegmentTextStart = .;
            build/scenes/shops/face_shop/face_shop_room_0.o (.text)
        _face_shop_room_0SegmentTextEnd = .;
    _face_shop_room_0SegmentTextSize = ABSOLUTE( _face_shop_room_0SegmentTextEnd - _face_shop_room_0SegmentTextStart );
        _face_shop_room_0SegmentDataStart = .;
            build/scenes/shops/face_shop/face_shop_room_0.o (.data)
        _face_shop_room_0SegmentDataEnd = .;
    _face_shop_room_0SegmentDataSize = ABSOLUTE( _face_shop_room_0SegmentDataEnd - _face_shop_room_0SegmentDataStart );
        _face_shop_room_0SegmentRoDataStart = .;
            build/scenes/shops/face_shop/face_shop_room_0.o (.rodata)
        _face_shop_room_0SegmentRoDataEnd = .;
    _face_shop_room_0SegmentRoDataSize = ABSOLUTE( _face_shop_room_0SegmentRoDataEnd - _face_shop_room_0SegmentRoDataStart );
        _face_shop_room_0SegmentSDataStart = .;
            build/scenes/shops/face_shop/face_shop_room_0.o (.sdata)
        . = ALIGN(0x10);
        _face_shop_room_0SegmentSDataEnd = .;
        _face_shop_room_0SegmentOvlStart = .;
            build/scenes/shops/face_shop/face_shop_room_0.o (.ovl)
        . = ALIGN(0x10);
        _face_shop_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _face_shop_room_0SegmentOvlEnd - _face_shop_room_0SegmentTextStart );
    _face_shop_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..face_shop_room_0.bss ADDR(..face_shop_room_0) + SIZEOF(..face_shop_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _face_shop_room_0SegmentBssStart = .;
            build/scenes/shops/face_shop/face_shop_room_0.o (.sbss)
            build/scenes/shops/face_shop/face_shop_room_0.o (.scommon)
            build/scenes/shops/face_shop/face_shop_room_0.o (.bss)
            build/scenes/shops/face_shop/face_shop_room_0.o (COMMON)
        . = ALIGN(0x10);
        _face_shop_room_0SegmentBssEnd = .;
        _face_shop_room_0SegmentEnd = .;
    }
    _face_shop_room_0SegmentBssSize = ABSOLUTE( _face_shop_room_0SegmentBssEnd - _face_shop_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kinsuta_sceneSegmentRomStart = _RomSize;
    ..kinsuta_scene 0x02000000 : AT(_RomSize)
    {
        _kinsuta_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _kinsuta_sceneSegmentTextStart = .;
            build/scenes/misc/kinsuta/kinsuta_scene.o (.text)
        _kinsuta_sceneSegmentTextEnd = .;
    _kinsuta_sceneSegmentTextSize = ABSOLUTE( _kinsuta_sceneSegmentTextEnd - _kinsuta_sceneSegmentTextStart );
        _kinsuta_sceneSegmentDataStart = .;
            build/scenes/misc/kinsuta/kinsuta_scene.o (.data)
        _kinsuta_sceneSegmentDataEnd = .;
    _kinsuta_sceneSegmentDataSize = ABSOLUTE( _kinsuta_sceneSegmentDataEnd - _kinsuta_sceneSegmentDataStart );
        _kinsuta_sceneSegmentRoDataStart = .;
            build/scenes/misc/kinsuta/kinsuta_scene.o (.rodata)
        _kinsuta_sceneSegmentRoDataEnd = .;
    _kinsuta_sceneSegmentRoDataSize = ABSOLUTE( _kinsuta_sceneSegmentRoDataEnd - _kinsuta_sceneSegmentRoDataStart );
        _kinsuta_sceneSegmentSDataStart = .;
            build/scenes/misc/kinsuta/kinsuta_scene.o (.sdata)
        . = ALIGN(0x10);
        _kinsuta_sceneSegmentSDataEnd = .;
        _kinsuta_sceneSegmentOvlStart = .;
            build/scenes/misc/kinsuta/kinsuta_scene.o (.ovl)
        . = ALIGN(0x10);
        _kinsuta_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _kinsuta_sceneSegmentOvlEnd - _kinsuta_sceneSegmentTextStart );
    _kinsuta_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kinsuta_scene.bss ADDR(..kinsuta_scene) + SIZEOF(..kinsuta_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kinsuta_sceneSegmentBssStart = .;
            build/scenes/misc/kinsuta/kinsuta_scene.o (.sbss)
            build/scenes/misc/kinsuta/kinsuta_scene.o (.scommon)
            build/scenes/misc/kinsuta/kinsuta_scene.o (.bss)
            build/scenes/misc/kinsuta/kinsuta_scene.o (COMMON)
        . = ALIGN(0x10);
        _kinsuta_sceneSegmentBssEnd = .;
        _kinsuta_sceneSegmentEnd = .;
    }
    _kinsuta_sceneSegmentBssSize = ABSOLUTE( _kinsuta_sceneSegmentBssEnd - _kinsuta_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _kinsuta_room_0SegmentRomStart = _RomSize;
    ..kinsuta_room_0 0x03000000 : AT(_RomSize)
    {
        _kinsuta_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _kinsuta_room_0SegmentTextStart = .;
            build/scenes/misc/kinsuta/kinsuta_room_0.o (.text)
        _kinsuta_room_0SegmentTextEnd = .;
    _kinsuta_room_0SegmentTextSize = ABSOLUTE( _kinsuta_room_0SegmentTextEnd - _kinsuta_room_0SegmentTextStart );
        _kinsuta_room_0SegmentDataStart = .;
            build/scenes/misc/kinsuta/kinsuta_room_0.o (.data)
        _kinsuta_room_0SegmentDataEnd = .;
    _kinsuta_room_0SegmentDataSize = ABSOLUTE( _kinsuta_room_0SegmentDataEnd - _kinsuta_room_0SegmentDataStart );
        _kinsuta_room_0SegmentRoDataStart = .;
            build/scenes/misc/kinsuta/kinsuta_room_0.o (.rodata)
        _kinsuta_room_0SegmentRoDataEnd = .;
    _kinsuta_room_0SegmentRoDataSize = ABSOLUTE( _kinsuta_room_0SegmentRoDataEnd - _kinsuta_room_0SegmentRoDataStart );
        _kinsuta_room_0SegmentSDataStart = .;
            build/scenes/misc/kinsuta/kinsuta_room_0.o (.sdata)
        . = ALIGN(0x10);
        _kinsuta_room_0SegmentSDataEnd = .;
        _kinsuta_room_0SegmentOvlStart = .;
            build/scenes/misc/kinsuta/kinsuta_room_0.o (.ovl)
        . = ALIGN(0x10);
        _kinsuta_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _kinsuta_room_0SegmentOvlEnd - _kinsuta_room_0SegmentTextStart );
    _kinsuta_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..kinsuta_room_0.bss ADDR(..kinsuta_room_0) + SIZEOF(..kinsuta_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _kinsuta_room_0SegmentBssStart = .;
            build/scenes/misc/kinsuta/kinsuta_room_0.o (.sbss)
            build/scenes/misc/kinsuta/kinsuta_room_0.o (.scommon)
            build/scenes/misc/kinsuta/kinsuta_room_0.o (.bss)
            build/scenes/misc/kinsuta/kinsuta_room_0.o (COMMON)
        . = ALIGN(0x10);
        _kinsuta_room_0SegmentBssEnd = .;
        _kinsuta_room_0SegmentEnd = .;
    }
    _kinsuta_room_0SegmentBssSize = ABSOLUTE( _kinsuta_room_0SegmentBssEnd - _kinsuta_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontikasonogo_sceneSegmentRomStart = _RomSize;
    ..ganontikasonogo_scene 0x02000000 : AT(_RomSize)
    {
        _ganontikasonogo_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _ganontikasonogo_sceneSegmentTextStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_scene.o (.text)
        _ganontikasonogo_sceneSegmentTextEnd = .;
    _ganontikasonogo_sceneSegmentTextSize = ABSOLUTE( _ganontikasonogo_sceneSegmentTextEnd - _ganontikasonogo_sceneSegmentTextStart );
        _ganontikasonogo_sceneSegmentDataStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_scene.o (.data)
        _ganontikasonogo_sceneSegmentDataEnd = .;
    _ganontikasonogo_sceneSegmentDataSize = ABSOLUTE( _ganontikasonogo_sceneSegmentDataEnd - _ganontikasonogo_sceneSegmentDataStart );
        _ganontikasonogo_sceneSegmentRoDataStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_scene.o (.rodata)
        _ganontikasonogo_sceneSegmentRoDataEnd = .;
    _ganontikasonogo_sceneSegmentRoDataSize = ABSOLUTE( _ganontikasonogo_sceneSegmentRoDataEnd - _ganontikasonogo_sceneSegmentRoDataStart );
        _ganontikasonogo_sceneSegmentSDataStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_scene.o (.sdata)
        . = ALIGN(0x10);
        _ganontikasonogo_sceneSegmentSDataEnd = .;
        _ganontikasonogo_sceneSegmentOvlStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_scene.o (.ovl)
        . = ALIGN(0x10);
        _ganontikasonogo_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _ganontikasonogo_sceneSegmentOvlEnd - _ganontikasonogo_sceneSegmentTextStart );
    _ganontikasonogo_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontikasonogo_scene.bss ADDR(..ganontikasonogo_scene) + SIZEOF(..ganontikasonogo_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontikasonogo_sceneSegmentBssStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_scene.o (.sbss)
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_scene.o (.scommon)
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_scene.o (.bss)
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_scene.o (COMMON)
        . = ALIGN(0x10);
        _ganontikasonogo_sceneSegmentBssEnd = .;
        _ganontikasonogo_sceneSegmentEnd = .;
    }
    _ganontikasonogo_sceneSegmentBssSize = ABSOLUTE( _ganontikasonogo_sceneSegmentBssEnd - _ganontikasonogo_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontikasonogo_room_0SegmentRomStart = _RomSize;
    ..ganontikasonogo_room_0 0x03000000 : AT(_RomSize)
    {
        _ganontikasonogo_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _ganontikasonogo_room_0SegmentTextStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_0.o (.text)
        _ganontikasonogo_room_0SegmentTextEnd = .;
    _ganontikasonogo_room_0SegmentTextSize = ABSOLUTE( _ganontikasonogo_room_0SegmentTextEnd - _ganontikasonogo_room_0SegmentTextStart );
        _ganontikasonogo_room_0SegmentDataStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_0.o (.data)
        _ganontikasonogo_room_0SegmentDataEnd = .;
    _ganontikasonogo_room_0SegmentDataSize = ABSOLUTE( _ganontikasonogo_room_0SegmentDataEnd - _ganontikasonogo_room_0SegmentDataStart );
        _ganontikasonogo_room_0SegmentRoDataStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_0.o (.rodata)
        _ganontikasonogo_room_0SegmentRoDataEnd = .;
    _ganontikasonogo_room_0SegmentRoDataSize = ABSOLUTE( _ganontikasonogo_room_0SegmentRoDataEnd - _ganontikasonogo_room_0SegmentRoDataStart );
        _ganontikasonogo_room_0SegmentSDataStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_0.o (.sdata)
        . = ALIGN(0x10);
        _ganontikasonogo_room_0SegmentSDataEnd = .;
        _ganontikasonogo_room_0SegmentOvlStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_0.o (.ovl)
        . = ALIGN(0x10);
        _ganontikasonogo_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontikasonogo_room_0SegmentOvlEnd - _ganontikasonogo_room_0SegmentTextStart );
    _ganontikasonogo_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontikasonogo_room_0.bss ADDR(..ganontikasonogo_room_0) + SIZEOF(..ganontikasonogo_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontikasonogo_room_0SegmentBssStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_0.o (.sbss)
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_0.o (.scommon)
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_0.o (.bss)
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_0.o (COMMON)
        . = ALIGN(0x10);
        _ganontikasonogo_room_0SegmentBssEnd = .;
        _ganontikasonogo_room_0SegmentEnd = .;
    }
    _ganontikasonogo_room_0SegmentBssSize = ABSOLUTE( _ganontikasonogo_room_0SegmentBssEnd - _ganontikasonogo_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _ganontikasonogo_room_1SegmentRomStart = _RomSize;
    ..ganontikasonogo_room_1 0x03000000 : AT(_RomSize)
    {
        _ganontikasonogo_room_1SegmentStart = .;
        . = ALIGN(0x10);
        _ganontikasonogo_room_1SegmentTextStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_1.o (.text)
        _ganontikasonogo_room_1SegmentTextEnd = .;
    _ganontikasonogo_room_1SegmentTextSize = ABSOLUTE( _ganontikasonogo_room_1SegmentTextEnd - _ganontikasonogo_room_1SegmentTextStart );
        _ganontikasonogo_room_1SegmentDataStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_1.o (.data)
        _ganontikasonogo_room_1SegmentDataEnd = .;
    _ganontikasonogo_room_1SegmentDataSize = ABSOLUTE( _ganontikasonogo_room_1SegmentDataEnd - _ganontikasonogo_room_1SegmentDataStart );
        _ganontikasonogo_room_1SegmentRoDataStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_1.o (.rodata)
        _ganontikasonogo_room_1SegmentRoDataEnd = .;
    _ganontikasonogo_room_1SegmentRoDataSize = ABSOLUTE( _ganontikasonogo_room_1SegmentRoDataEnd - _ganontikasonogo_room_1SegmentRoDataStart );
        _ganontikasonogo_room_1SegmentSDataStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_1.o (.sdata)
        . = ALIGN(0x10);
        _ganontikasonogo_room_1SegmentSDataEnd = .;
        _ganontikasonogo_room_1SegmentOvlStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_1.o (.ovl)
        . = ALIGN(0x10);
        _ganontikasonogo_room_1SegmentOvlEnd = .;
    }
    _RomSize += ( _ganontikasonogo_room_1SegmentOvlEnd - _ganontikasonogo_room_1SegmentTextStart );
    _ganontikasonogo_room_1SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..ganontikasonogo_room_1.bss ADDR(..ganontikasonogo_room_1) + SIZEOF(..ganontikasonogo_room_1) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _ganontikasonogo_room_1SegmentBssStart = .;
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_1.o (.sbss)
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_1.o (.scommon)
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_1.o (.bss)
            build/scenes/dungeons/ganontikasonogo/ganontikasonogo_room_1.o (COMMON)
        . = ALIGN(0x10);
        _ganontikasonogo_room_1SegmentBssEnd = .;
        _ganontikasonogo_room_1SegmentEnd = .;
    }
    _ganontikasonogo_room_1SegmentBssSize = ABSOLUTE( _ganontikasonogo_room_1SegmentBssEnd - _ganontikasonogo_room_1SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _test01_sceneSegmentRomStart = _RomSize;
    ..test01_scene 0x02000000 : AT(_RomSize)
    {
        _test01_sceneSegmentStart = .;
        . = ALIGN(0x10);
        _test01_sceneSegmentTextStart = .;
            build/scenes/test_levels/test01/test01_scene.o (.text)
        _test01_sceneSegmentTextEnd = .;
    _test01_sceneSegmentTextSize = ABSOLUTE( _test01_sceneSegmentTextEnd - _test01_sceneSegmentTextStart );
        _test01_sceneSegmentDataStart = .;
            build/scenes/test_levels/test01/test01_scene.o (.data)
        _test01_sceneSegmentDataEnd = .;
    _test01_sceneSegmentDataSize = ABSOLUTE( _test01_sceneSegmentDataEnd - _test01_sceneSegmentDataStart );
        _test01_sceneSegmentRoDataStart = .;
            build/scenes/test_levels/test01/test01_scene.o (.rodata)
        _test01_sceneSegmentRoDataEnd = .;
    _test01_sceneSegmentRoDataSize = ABSOLUTE( _test01_sceneSegmentRoDataEnd - _test01_sceneSegmentRoDataStart );
        _test01_sceneSegmentSDataStart = .;
            build/scenes/test_levels/test01/test01_scene.o (.sdata)
        . = ALIGN(0x10);
        _test01_sceneSegmentSDataEnd = .;
        _test01_sceneSegmentOvlStart = .;
            build/scenes/test_levels/test01/test01_scene.o (.ovl)
        . = ALIGN(0x10);
        _test01_sceneSegmentOvlEnd = .;
    }
    _RomSize += ( _test01_sceneSegmentOvlEnd - _test01_sceneSegmentTextStart );
    _test01_sceneSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..test01_scene.bss ADDR(..test01_scene) + SIZEOF(..test01_scene) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _test01_sceneSegmentBssStart = .;
            build/scenes/test_levels/test01/test01_scene.o (.sbss)
            build/scenes/test_levels/test01/test01_scene.o (.scommon)
            build/scenes/test_levels/test01/test01_scene.o (.bss)
            build/scenes/test_levels/test01/test01_scene.o (COMMON)
        . = ALIGN(0x10);
        _test01_sceneSegmentBssEnd = .;
        _test01_sceneSegmentEnd = .;
    }
    _test01_sceneSegmentBssSize = ABSOLUTE( _test01_sceneSegmentBssEnd - _test01_sceneSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _test01_room_0SegmentRomStart = _RomSize;
    ..test01_room_0 0x03000000 : AT(_RomSize)
    {
        _test01_room_0SegmentStart = .;
        . = ALIGN(0x10);
        _test01_room_0SegmentTextStart = .;
            build/scenes/test_levels/test01/test01_room_0.o (.text)
        _test01_room_0SegmentTextEnd = .;
    _test01_room_0SegmentTextSize = ABSOLUTE( _test01_room_0SegmentTextEnd - _test01_room_0SegmentTextStart );
        _test01_room_0SegmentDataStart = .;
            build/scenes/test_levels/test01/test01_room_0.o (.data)
        _test01_room_0SegmentDataEnd = .;
    _test01_room_0SegmentDataSize = ABSOLUTE( _test01_room_0SegmentDataEnd - _test01_room_0SegmentDataStart );
        _test01_room_0SegmentRoDataStart = .;
            build/scenes/test_levels/test01/test01_room_0.o (.rodata)
        _test01_room_0SegmentRoDataEnd = .;
    _test01_room_0SegmentRoDataSize = ABSOLUTE( _test01_room_0SegmentRoDataEnd - _test01_room_0SegmentRoDataStart );
        _test01_room_0SegmentSDataStart = .;
            build/scenes/test_levels/test01/test01_room_0.o (.sdata)
        . = ALIGN(0x10);
        _test01_room_0SegmentSDataEnd = .;
        _test01_room_0SegmentOvlStart = .;
            build/scenes/test_levels/test01/test01_room_0.o (.ovl)
        . = ALIGN(0x10);
        _test01_room_0SegmentOvlEnd = .;
    }
    _RomSize += ( _test01_room_0SegmentOvlEnd - _test01_room_0SegmentTextStart );
    _test01_room_0SegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..test01_room_0.bss ADDR(..test01_room_0) + SIZEOF(..test01_room_0) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _test01_room_0SegmentBssStart = .;
            build/scenes/test_levels/test01/test01_room_0.o (.sbss)
            build/scenes/test_levels/test01/test01_room_0.o (.scommon)
            build/scenes/test_levels/test01/test01_room_0.o (.bss)
            build/scenes/test_levels/test01/test01_room_0.o (COMMON)
        . = ALIGN(0x10);
        _test01_room_0SegmentBssEnd = .;
        _test01_room_0SegmentEnd = .;
    }
    _test01_room_0SegmentBssSize = ABSOLUTE( _test01_room_0SegmentBssEnd - _test01_room_0SegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _bump_texture_staticSegmentRomStart = _RomSize;
    ..bump_texture_static : AT(_RomSize)
    {
        _bump_texture_staticSegmentStart = .;
        . = ALIGN(0x10);
        _bump_texture_staticSegmentTextStart = .;
            build/baserom/bump_texture_static.o (.text)
        _bump_texture_staticSegmentTextEnd = .;
    _bump_texture_staticSegmentTextSize = ABSOLUTE( _bump_texture_staticSegmentTextEnd - _bump_texture_staticSegmentTextStart );
        _bump_texture_staticSegmentDataStart = .;
            build/baserom/bump_texture_static.o (.data)
        _bump_texture_staticSegmentDataEnd = .;
    _bump_texture_staticSegmentDataSize = ABSOLUTE( _bump_texture_staticSegmentDataEnd - _bump_texture_staticSegmentDataStart );
        _bump_texture_staticSegmentRoDataStart = .;
            build/baserom/bump_texture_static.o (.rodata)
        _bump_texture_staticSegmentRoDataEnd = .;
    _bump_texture_staticSegmentRoDataSize = ABSOLUTE( _bump_texture_staticSegmentRoDataEnd - _bump_texture_staticSegmentRoDataStart );
        _bump_texture_staticSegmentSDataStart = .;
            build/baserom/bump_texture_static.o (.sdata)
        . = ALIGN(0x10);
        _bump_texture_staticSegmentSDataEnd = .;
        _bump_texture_staticSegmentOvlStart = .;
            build/baserom/bump_texture_static.o (.ovl)
        . = ALIGN(0x10);
        _bump_texture_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _bump_texture_staticSegmentOvlEnd - _bump_texture_staticSegmentTextStart );
    _bump_texture_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..bump_texture_static.bss ADDR(..bump_texture_static) + SIZEOF(..bump_texture_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _bump_texture_staticSegmentBssStart = .;
            build/baserom/bump_texture_static.o (.sbss)
            build/baserom/bump_texture_static.o (.scommon)
            build/baserom/bump_texture_static.o (.bss)
            build/baserom/bump_texture_static.o (COMMON)
        . = ALIGN(0x10);
        _bump_texture_staticSegmentBssEnd = .;
        _bump_texture_staticSegmentEnd = .;
    }
    _bump_texture_staticSegmentBssSize = ABSOLUTE( _bump_texture_staticSegmentBssEnd - _bump_texture_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _anime_model_1_staticSegmentRomStart = _RomSize;
    ..anime_model_1_static : AT(_RomSize)
    {
        _anime_model_1_staticSegmentStart = .;
        . = ALIGN(0x10);
        _anime_model_1_staticSegmentTextStart = .;
            build/baserom/anime_model_1_static.o (.text)
        _anime_model_1_staticSegmentTextEnd = .;
    _anime_model_1_staticSegmentTextSize = ABSOLUTE( _anime_model_1_staticSegmentTextEnd - _anime_model_1_staticSegmentTextStart );
        _anime_model_1_staticSegmentDataStart = .;
            build/baserom/anime_model_1_static.o (.data)
        _anime_model_1_staticSegmentDataEnd = .;
    _anime_model_1_staticSegmentDataSize = ABSOLUTE( _anime_model_1_staticSegmentDataEnd - _anime_model_1_staticSegmentDataStart );
        _anime_model_1_staticSegmentRoDataStart = .;
            build/baserom/anime_model_1_static.o (.rodata)
        _anime_model_1_staticSegmentRoDataEnd = .;
    _anime_model_1_staticSegmentRoDataSize = ABSOLUTE( _anime_model_1_staticSegmentRoDataEnd - _anime_model_1_staticSegmentRoDataStart );
        _anime_model_1_staticSegmentSDataStart = .;
            build/baserom/anime_model_1_static.o (.sdata)
        . = ALIGN(0x10);
        _anime_model_1_staticSegmentSDataEnd = .;
        _anime_model_1_staticSegmentOvlStart = .;
            build/baserom/anime_model_1_static.o (.ovl)
        . = ALIGN(0x10);
        _anime_model_1_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _anime_model_1_staticSegmentOvlEnd - _anime_model_1_staticSegmentTextStart );
    _anime_model_1_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..anime_model_1_static.bss ADDR(..anime_model_1_static) + SIZEOF(..anime_model_1_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _anime_model_1_staticSegmentBssStart = .;
            build/baserom/anime_model_1_static.o (.sbss)
            build/baserom/anime_model_1_static.o (.scommon)
            build/baserom/anime_model_1_static.o (.bss)
            build/baserom/anime_model_1_static.o (COMMON)
        . = ALIGN(0x10);
        _anime_model_1_staticSegmentBssEnd = .;
        _anime_model_1_staticSegmentEnd = .;
    }
    _anime_model_1_staticSegmentBssSize = ABSOLUTE( _anime_model_1_staticSegmentBssEnd - _anime_model_1_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _anime_model_2_staticSegmentRomStart = _RomSize;
    ..anime_model_2_static : AT(_RomSize)
    {
        _anime_model_2_staticSegmentStart = .;
        . = ALIGN(0x10);
        _anime_model_2_staticSegmentTextStart = .;
            build/baserom/anime_model_2_static.o (.text)
        _anime_model_2_staticSegmentTextEnd = .;
    _anime_model_2_staticSegmentTextSize = ABSOLUTE( _anime_model_2_staticSegmentTextEnd - _anime_model_2_staticSegmentTextStart );
        _anime_model_2_staticSegmentDataStart = .;
            build/baserom/anime_model_2_static.o (.data)
        _anime_model_2_staticSegmentDataEnd = .;
    _anime_model_2_staticSegmentDataSize = ABSOLUTE( _anime_model_2_staticSegmentDataEnd - _anime_model_2_staticSegmentDataStart );
        _anime_model_2_staticSegmentRoDataStart = .;
            build/baserom/anime_model_2_static.o (.rodata)
        _anime_model_2_staticSegmentRoDataEnd = .;
    _anime_model_2_staticSegmentRoDataSize = ABSOLUTE( _anime_model_2_staticSegmentRoDataEnd - _anime_model_2_staticSegmentRoDataStart );
        _anime_model_2_staticSegmentSDataStart = .;
            build/baserom/anime_model_2_static.o (.sdata)
        . = ALIGN(0x10);
        _anime_model_2_staticSegmentSDataEnd = .;
        _anime_model_2_staticSegmentOvlStart = .;
            build/baserom/anime_model_2_static.o (.ovl)
        . = ALIGN(0x10);
        _anime_model_2_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _anime_model_2_staticSegmentOvlEnd - _anime_model_2_staticSegmentTextStart );
    _anime_model_2_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..anime_model_2_static.bss ADDR(..anime_model_2_static) + SIZEOF(..anime_model_2_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _anime_model_2_staticSegmentBssStart = .;
            build/baserom/anime_model_2_static.o (.sbss)
            build/baserom/anime_model_2_static.o (.scommon)
            build/baserom/anime_model_2_static.o (.bss)
            build/baserom/anime_model_2_static.o (COMMON)
        . = ALIGN(0x10);
        _anime_model_2_staticSegmentBssEnd = .;
        _anime_model_2_staticSegmentEnd = .;
    }
    _anime_model_2_staticSegmentBssSize = ABSOLUTE( _anime_model_2_staticSegmentBssEnd - _anime_model_2_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _anime_model_3_staticSegmentRomStart = _RomSize;
    ..anime_model_3_static : AT(_RomSize)
    {
        _anime_model_3_staticSegmentStart = .;
        . = ALIGN(0x10);
        _anime_model_3_staticSegmentTextStart = .;
            build/baserom/anime_model_3_static.o (.text)
        _anime_model_3_staticSegmentTextEnd = .;
    _anime_model_3_staticSegmentTextSize = ABSOLUTE( _anime_model_3_staticSegmentTextEnd - _anime_model_3_staticSegmentTextStart );
        _anime_model_3_staticSegmentDataStart = .;
            build/baserom/anime_model_3_static.o (.data)
        _anime_model_3_staticSegmentDataEnd = .;
    _anime_model_3_staticSegmentDataSize = ABSOLUTE( _anime_model_3_staticSegmentDataEnd - _anime_model_3_staticSegmentDataStart );
        _anime_model_3_staticSegmentRoDataStart = .;
            build/baserom/anime_model_3_static.o (.rodata)
        _anime_model_3_staticSegmentRoDataEnd = .;
    _anime_model_3_staticSegmentRoDataSize = ABSOLUTE( _anime_model_3_staticSegmentRoDataEnd - _anime_model_3_staticSegmentRoDataStart );
        _anime_model_3_staticSegmentSDataStart = .;
            build/baserom/anime_model_3_static.o (.sdata)
        . = ALIGN(0x10);
        _anime_model_3_staticSegmentSDataEnd = .;
        _anime_model_3_staticSegmentOvlStart = .;
            build/baserom/anime_model_3_static.o (.ovl)
        . = ALIGN(0x10);
        _anime_model_3_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _anime_model_3_staticSegmentOvlEnd - _anime_model_3_staticSegmentTextStart );
    _anime_model_3_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..anime_model_3_static.bss ADDR(..anime_model_3_static) + SIZEOF(..anime_model_3_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _anime_model_3_staticSegmentBssStart = .;
            build/baserom/anime_model_3_static.o (.sbss)
            build/baserom/anime_model_3_static.o (.scommon)
            build/baserom/anime_model_3_static.o (.bss)
            build/baserom/anime_model_3_static.o (COMMON)
        . = ALIGN(0x10);
        _anime_model_3_staticSegmentBssEnd = .;
        _anime_model_3_staticSegmentEnd = .;
    }
    _anime_model_3_staticSegmentBssSize = ABSOLUTE( _anime_model_3_staticSegmentBssEnd - _anime_model_3_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _anime_model_4_staticSegmentRomStart = _RomSize;
    ..anime_model_4_static : AT(_RomSize)
    {
        _anime_model_4_staticSegmentStart = .;
        . = ALIGN(0x10);
        _anime_model_4_staticSegmentTextStart = .;
            build/baserom/anime_model_4_static.o (.text)
        _anime_model_4_staticSegmentTextEnd = .;
    _anime_model_4_staticSegmentTextSize = ABSOLUTE( _anime_model_4_staticSegmentTextEnd - _anime_model_4_staticSegmentTextStart );
        _anime_model_4_staticSegmentDataStart = .;
            build/baserom/anime_model_4_static.o (.data)
        _anime_model_4_staticSegmentDataEnd = .;
    _anime_model_4_staticSegmentDataSize = ABSOLUTE( _anime_model_4_staticSegmentDataEnd - _anime_model_4_staticSegmentDataStart );
        _anime_model_4_staticSegmentRoDataStart = .;
            build/baserom/anime_model_4_static.o (.rodata)
        _anime_model_4_staticSegmentRoDataEnd = .;
    _anime_model_4_staticSegmentRoDataSize = ABSOLUTE( _anime_model_4_staticSegmentRoDataEnd - _anime_model_4_staticSegmentRoDataStart );
        _anime_model_4_staticSegmentSDataStart = .;
            build/baserom/anime_model_4_static.o (.sdata)
        . = ALIGN(0x10);
        _anime_model_4_staticSegmentSDataEnd = .;
        _anime_model_4_staticSegmentOvlStart = .;
            build/baserom/anime_model_4_static.o (.ovl)
        . = ALIGN(0x10);
        _anime_model_4_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _anime_model_4_staticSegmentOvlEnd - _anime_model_4_staticSegmentTextStart );
    _anime_model_4_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..anime_model_4_static.bss ADDR(..anime_model_4_static) + SIZEOF(..anime_model_4_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _anime_model_4_staticSegmentBssStart = .;
            build/baserom/anime_model_4_static.o (.sbss)
            build/baserom/anime_model_4_static.o (.scommon)
            build/baserom/anime_model_4_static.o (.bss)
            build/baserom/anime_model_4_static.o (COMMON)
        . = ALIGN(0x10);
        _anime_model_4_staticSegmentBssEnd = .;
        _anime_model_4_staticSegmentEnd = .;
    }
    _anime_model_4_staticSegmentBssSize = ABSOLUTE( _anime_model_4_staticSegmentBssEnd - _anime_model_4_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _anime_model_5_staticSegmentRomStart = _RomSize;
    ..anime_model_5_static : AT(_RomSize)
    {
        _anime_model_5_staticSegmentStart = .;
        . = ALIGN(0x10);
        _anime_model_5_staticSegmentTextStart = .;
            build/baserom/anime_model_5_static.o (.text)
        _anime_model_5_staticSegmentTextEnd = .;
    _anime_model_5_staticSegmentTextSize = ABSOLUTE( _anime_model_5_staticSegmentTextEnd - _anime_model_5_staticSegmentTextStart );
        _anime_model_5_staticSegmentDataStart = .;
            build/baserom/anime_model_5_static.o (.data)
        _anime_model_5_staticSegmentDataEnd = .;
    _anime_model_5_staticSegmentDataSize = ABSOLUTE( _anime_model_5_staticSegmentDataEnd - _anime_model_5_staticSegmentDataStart );
        _anime_model_5_staticSegmentRoDataStart = .;
            build/baserom/anime_model_5_static.o (.rodata)
        _anime_model_5_staticSegmentRoDataEnd = .;
    _anime_model_5_staticSegmentRoDataSize = ABSOLUTE( _anime_model_5_staticSegmentRoDataEnd - _anime_model_5_staticSegmentRoDataStart );
        _anime_model_5_staticSegmentSDataStart = .;
            build/baserom/anime_model_5_static.o (.sdata)
        . = ALIGN(0x10);
        _anime_model_5_staticSegmentSDataEnd = .;
        _anime_model_5_staticSegmentOvlStart = .;
            build/baserom/anime_model_5_static.o (.ovl)
        . = ALIGN(0x10);
        _anime_model_5_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _anime_model_5_staticSegmentOvlEnd - _anime_model_5_staticSegmentTextStart );
    _anime_model_5_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..anime_model_5_static.bss ADDR(..anime_model_5_static) + SIZEOF(..anime_model_5_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _anime_model_5_staticSegmentBssStart = .;
            build/baserom/anime_model_5_static.o (.sbss)
            build/baserom/anime_model_5_static.o (.scommon)
            build/baserom/anime_model_5_static.o (.bss)
            build/baserom/anime_model_5_static.o (COMMON)
        . = ALIGN(0x10);
        _anime_model_5_staticSegmentBssEnd = .;
        _anime_model_5_staticSegmentEnd = .;
    }
    _anime_model_5_staticSegmentBssSize = ABSOLUTE( _anime_model_5_staticSegmentBssEnd - _anime_model_5_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _anime_model_6_staticSegmentRomStart = _RomSize;
    ..anime_model_6_static : AT(_RomSize)
    {
        _anime_model_6_staticSegmentStart = .;
        . = ALIGN(0x10);
        _anime_model_6_staticSegmentTextStart = .;
            build/baserom/anime_model_6_static.o (.text)
        _anime_model_6_staticSegmentTextEnd = .;
    _anime_model_6_staticSegmentTextSize = ABSOLUTE( _anime_model_6_staticSegmentTextEnd - _anime_model_6_staticSegmentTextStart );
        _anime_model_6_staticSegmentDataStart = .;
            build/baserom/anime_model_6_static.o (.data)
        _anime_model_6_staticSegmentDataEnd = .;
    _anime_model_6_staticSegmentDataSize = ABSOLUTE( _anime_model_6_staticSegmentDataEnd - _anime_model_6_staticSegmentDataStart );
        _anime_model_6_staticSegmentRoDataStart = .;
            build/baserom/anime_model_6_static.o (.rodata)
        _anime_model_6_staticSegmentRoDataEnd = .;
    _anime_model_6_staticSegmentRoDataSize = ABSOLUTE( _anime_model_6_staticSegmentRoDataEnd - _anime_model_6_staticSegmentRoDataStart );
        _anime_model_6_staticSegmentSDataStart = .;
            build/baserom/anime_model_6_static.o (.sdata)
        . = ALIGN(0x10);
        _anime_model_6_staticSegmentSDataEnd = .;
        _anime_model_6_staticSegmentOvlStart = .;
            build/baserom/anime_model_6_static.o (.ovl)
        . = ALIGN(0x10);
        _anime_model_6_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _anime_model_6_staticSegmentOvlEnd - _anime_model_6_staticSegmentTextStart );
    _anime_model_6_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..anime_model_6_static.bss ADDR(..anime_model_6_static) + SIZEOF(..anime_model_6_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _anime_model_6_staticSegmentBssStart = .;
            build/baserom/anime_model_6_static.o (.sbss)
            build/baserom/anime_model_6_static.o (.scommon)
            build/baserom/anime_model_6_static.o (.bss)
            build/baserom/anime_model_6_static.o (COMMON)
        . = ALIGN(0x10);
        _anime_model_6_staticSegmentBssEnd = .;
        _anime_model_6_staticSegmentEnd = .;
    }
    _anime_model_6_staticSegmentBssSize = ABSOLUTE( _anime_model_6_staticSegmentBssEnd - _anime_model_6_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _anime_texture_1_staticSegmentRomStart = _RomSize;
    ..anime_texture_1_static : AT(_RomSize)
    {
        _anime_texture_1_staticSegmentStart = .;
        . = ALIGN(0x10);
        _anime_texture_1_staticSegmentTextStart = .;
            build/baserom/anime_texture_1_static.o (.text)
        _anime_texture_1_staticSegmentTextEnd = .;
    _anime_texture_1_staticSegmentTextSize = ABSOLUTE( _anime_texture_1_staticSegmentTextEnd - _anime_texture_1_staticSegmentTextStart );
        _anime_texture_1_staticSegmentDataStart = .;
            build/baserom/anime_texture_1_static.o (.data)
        _anime_texture_1_staticSegmentDataEnd = .;
    _anime_texture_1_staticSegmentDataSize = ABSOLUTE( _anime_texture_1_staticSegmentDataEnd - _anime_texture_1_staticSegmentDataStart );
        _anime_texture_1_staticSegmentRoDataStart = .;
            build/baserom/anime_texture_1_static.o (.rodata)
        _anime_texture_1_staticSegmentRoDataEnd = .;
    _anime_texture_1_staticSegmentRoDataSize = ABSOLUTE( _anime_texture_1_staticSegmentRoDataEnd - _anime_texture_1_staticSegmentRoDataStart );
        _anime_texture_1_staticSegmentSDataStart = .;
            build/baserom/anime_texture_1_static.o (.sdata)
        . = ALIGN(0x10);
        _anime_texture_1_staticSegmentSDataEnd = .;
        _anime_texture_1_staticSegmentOvlStart = .;
            build/baserom/anime_texture_1_static.o (.ovl)
        . = ALIGN(0x10);
        _anime_texture_1_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _anime_texture_1_staticSegmentOvlEnd - _anime_texture_1_staticSegmentTextStart );
    _anime_texture_1_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..anime_texture_1_static.bss ADDR(..anime_texture_1_static) + SIZEOF(..anime_texture_1_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _anime_texture_1_staticSegmentBssStart = .;
            build/baserom/anime_texture_1_static.o (.sbss)
            build/baserom/anime_texture_1_static.o (.scommon)
            build/baserom/anime_texture_1_static.o (.bss)
            build/baserom/anime_texture_1_static.o (COMMON)
        . = ALIGN(0x10);
        _anime_texture_1_staticSegmentBssEnd = .;
        _anime_texture_1_staticSegmentEnd = .;
    }
    _anime_texture_1_staticSegmentBssSize = ABSOLUTE( _anime_texture_1_staticSegmentBssEnd - _anime_texture_1_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _anime_texture_2_staticSegmentRomStart = _RomSize;
    ..anime_texture_2_static : AT(_RomSize)
    {
        _anime_texture_2_staticSegmentStart = .;
        . = ALIGN(0x10);
        _anime_texture_2_staticSegmentTextStart = .;
            build/baserom/anime_texture_2_static.o (.text)
        _anime_texture_2_staticSegmentTextEnd = .;
    _anime_texture_2_staticSegmentTextSize = ABSOLUTE( _anime_texture_2_staticSegmentTextEnd - _anime_texture_2_staticSegmentTextStart );
        _anime_texture_2_staticSegmentDataStart = .;
            build/baserom/anime_texture_2_static.o (.data)
        _anime_texture_2_staticSegmentDataEnd = .;
    _anime_texture_2_staticSegmentDataSize = ABSOLUTE( _anime_texture_2_staticSegmentDataEnd - _anime_texture_2_staticSegmentDataStart );
        _anime_texture_2_staticSegmentRoDataStart = .;
            build/baserom/anime_texture_2_static.o (.rodata)
        _anime_texture_2_staticSegmentRoDataEnd = .;
    _anime_texture_2_staticSegmentRoDataSize = ABSOLUTE( _anime_texture_2_staticSegmentRoDataEnd - _anime_texture_2_staticSegmentRoDataStart );
        _anime_texture_2_staticSegmentSDataStart = .;
            build/baserom/anime_texture_2_static.o (.sdata)
        . = ALIGN(0x10);
        _anime_texture_2_staticSegmentSDataEnd = .;
        _anime_texture_2_staticSegmentOvlStart = .;
            build/baserom/anime_texture_2_static.o (.ovl)
        . = ALIGN(0x10);
        _anime_texture_2_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _anime_texture_2_staticSegmentOvlEnd - _anime_texture_2_staticSegmentTextStart );
    _anime_texture_2_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..anime_texture_2_static.bss ADDR(..anime_texture_2_static) + SIZEOF(..anime_texture_2_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _anime_texture_2_staticSegmentBssStart = .;
            build/baserom/anime_texture_2_static.o (.sbss)
            build/baserom/anime_texture_2_static.o (.scommon)
            build/baserom/anime_texture_2_static.o (.bss)
            build/baserom/anime_texture_2_static.o (COMMON)
        . = ALIGN(0x10);
        _anime_texture_2_staticSegmentBssEnd = .;
        _anime_texture_2_staticSegmentEnd = .;
    }
    _anime_texture_2_staticSegmentBssSize = ABSOLUTE( _anime_texture_2_staticSegmentBssEnd - _anime_texture_2_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _anime_texture_3_staticSegmentRomStart = _RomSize;
    ..anime_texture_3_static : AT(_RomSize)
    {
        _anime_texture_3_staticSegmentStart = .;
        . = ALIGN(0x10);
        _anime_texture_3_staticSegmentTextStart = .;
            build/baserom/anime_texture_3_static.o (.text)
        _anime_texture_3_staticSegmentTextEnd = .;
    _anime_texture_3_staticSegmentTextSize = ABSOLUTE( _anime_texture_3_staticSegmentTextEnd - _anime_texture_3_staticSegmentTextStart );
        _anime_texture_3_staticSegmentDataStart = .;
            build/baserom/anime_texture_3_static.o (.data)
        _anime_texture_3_staticSegmentDataEnd = .;
    _anime_texture_3_staticSegmentDataSize = ABSOLUTE( _anime_texture_3_staticSegmentDataEnd - _anime_texture_3_staticSegmentDataStart );
        _anime_texture_3_staticSegmentRoDataStart = .;
            build/baserom/anime_texture_3_static.o (.rodata)
        _anime_texture_3_staticSegmentRoDataEnd = .;
    _anime_texture_3_staticSegmentRoDataSize = ABSOLUTE( _anime_texture_3_staticSegmentRoDataEnd - _anime_texture_3_staticSegmentRoDataStart );
        _anime_texture_3_staticSegmentSDataStart = .;
            build/baserom/anime_texture_3_static.o (.sdata)
        . = ALIGN(0x10);
        _anime_texture_3_staticSegmentSDataEnd = .;
        _anime_texture_3_staticSegmentOvlStart = .;
            build/baserom/anime_texture_3_static.o (.ovl)
        . = ALIGN(0x10);
        _anime_texture_3_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _anime_texture_3_staticSegmentOvlEnd - _anime_texture_3_staticSegmentTextStart );
    _anime_texture_3_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..anime_texture_3_static.bss ADDR(..anime_texture_3_static) + SIZEOF(..anime_texture_3_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _anime_texture_3_staticSegmentBssStart = .;
            build/baserom/anime_texture_3_static.o (.sbss)
            build/baserom/anime_texture_3_static.o (.scommon)
            build/baserom/anime_texture_3_static.o (.bss)
            build/baserom/anime_texture_3_static.o (COMMON)
        . = ALIGN(0x10);
        _anime_texture_3_staticSegmentBssEnd = .;
        _anime_texture_3_staticSegmentEnd = .;
    }
    _anime_texture_3_staticSegmentBssSize = ABSOLUTE( _anime_texture_3_staticSegmentBssEnd - _anime_texture_3_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _anime_texture_4_staticSegmentRomStart = _RomSize;
    ..anime_texture_4_static : AT(_RomSize)
    {
        _anime_texture_4_staticSegmentStart = .;
        . = ALIGN(0x10);
        _anime_texture_4_staticSegmentTextStart = .;
            build/baserom/anime_texture_4_static.o (.text)
        _anime_texture_4_staticSegmentTextEnd = .;
    _anime_texture_4_staticSegmentTextSize = ABSOLUTE( _anime_texture_4_staticSegmentTextEnd - _anime_texture_4_staticSegmentTextStart );
        _anime_texture_4_staticSegmentDataStart = .;
            build/baserom/anime_texture_4_static.o (.data)
        _anime_texture_4_staticSegmentDataEnd = .;
    _anime_texture_4_staticSegmentDataSize = ABSOLUTE( _anime_texture_4_staticSegmentDataEnd - _anime_texture_4_staticSegmentDataStart );
        _anime_texture_4_staticSegmentRoDataStart = .;
            build/baserom/anime_texture_4_static.o (.rodata)
        _anime_texture_4_staticSegmentRoDataEnd = .;
    _anime_texture_4_staticSegmentRoDataSize = ABSOLUTE( _anime_texture_4_staticSegmentRoDataEnd - _anime_texture_4_staticSegmentRoDataStart );
        _anime_texture_4_staticSegmentSDataStart = .;
            build/baserom/anime_texture_4_static.o (.sdata)
        . = ALIGN(0x10);
        _anime_texture_4_staticSegmentSDataEnd = .;
        _anime_texture_4_staticSegmentOvlStart = .;
            build/baserom/anime_texture_4_static.o (.ovl)
        . = ALIGN(0x10);
        _anime_texture_4_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _anime_texture_4_staticSegmentOvlEnd - _anime_texture_4_staticSegmentTextStart );
    _anime_texture_4_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..anime_texture_4_static.bss ADDR(..anime_texture_4_static) + SIZEOF(..anime_texture_4_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _anime_texture_4_staticSegmentBssStart = .;
            build/baserom/anime_texture_4_static.o (.sbss)
            build/baserom/anime_texture_4_static.o (.scommon)
            build/baserom/anime_texture_4_static.o (.bss)
            build/baserom/anime_texture_4_static.o (COMMON)
        . = ALIGN(0x10);
        _anime_texture_4_staticSegmentBssEnd = .;
        _anime_texture_4_staticSegmentEnd = .;
    }
    _anime_texture_4_staticSegmentBssSize = ABSOLUTE( _anime_texture_4_staticSegmentBssEnd - _anime_texture_4_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _anime_texture_5_staticSegmentRomStart = _RomSize;
    ..anime_texture_5_static : AT(_RomSize)
    {
        _anime_texture_5_staticSegmentStart = .;
        . = ALIGN(0x10);
        _anime_texture_5_staticSegmentTextStart = .;
            build/baserom/anime_texture_5_static.o (.text)
        _anime_texture_5_staticSegmentTextEnd = .;
    _anime_texture_5_staticSegmentTextSize = ABSOLUTE( _anime_texture_5_staticSegmentTextEnd - _anime_texture_5_staticSegmentTextStart );
        _anime_texture_5_staticSegmentDataStart = .;
            build/baserom/anime_texture_5_static.o (.data)
        _anime_texture_5_staticSegmentDataEnd = .;
    _anime_texture_5_staticSegmentDataSize = ABSOLUTE( _anime_texture_5_staticSegmentDataEnd - _anime_texture_5_staticSegmentDataStart );
        _anime_texture_5_staticSegmentRoDataStart = .;
            build/baserom/anime_texture_5_static.o (.rodata)
        _anime_texture_5_staticSegmentRoDataEnd = .;
    _anime_texture_5_staticSegmentRoDataSize = ABSOLUTE( _anime_texture_5_staticSegmentRoDataEnd - _anime_texture_5_staticSegmentRoDataStart );
        _anime_texture_5_staticSegmentSDataStart = .;
            build/baserom/anime_texture_5_static.o (.sdata)
        . = ALIGN(0x10);
        _anime_texture_5_staticSegmentSDataEnd = .;
        _anime_texture_5_staticSegmentOvlStart = .;
            build/baserom/anime_texture_5_static.o (.ovl)
        . = ALIGN(0x10);
        _anime_texture_5_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _anime_texture_5_staticSegmentOvlEnd - _anime_texture_5_staticSegmentTextStart );
    _anime_texture_5_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..anime_texture_5_static.bss ADDR(..anime_texture_5_static) + SIZEOF(..anime_texture_5_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _anime_texture_5_staticSegmentBssStart = .;
            build/baserom/anime_texture_5_static.o (.sbss)
            build/baserom/anime_texture_5_static.o (.scommon)
            build/baserom/anime_texture_5_static.o (.bss)
            build/baserom/anime_texture_5_static.o (COMMON)
        . = ALIGN(0x10);
        _anime_texture_5_staticSegmentBssEnd = .;
        _anime_texture_5_staticSegmentEnd = .;
    }
    _anime_texture_5_staticSegmentBssSize = ABSOLUTE( _anime_texture_5_staticSegmentBssEnd - _anime_texture_5_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _anime_texture_6_staticSegmentRomStart = _RomSize;
    ..anime_texture_6_static : AT(_RomSize)
    {
        _anime_texture_6_staticSegmentStart = .;
        . = ALIGN(0x10);
        _anime_texture_6_staticSegmentTextStart = .;
            build/baserom/anime_texture_6_static.o (.text)
        _anime_texture_6_staticSegmentTextEnd = .;
    _anime_texture_6_staticSegmentTextSize = ABSOLUTE( _anime_texture_6_staticSegmentTextEnd - _anime_texture_6_staticSegmentTextStart );
        _anime_texture_6_staticSegmentDataStart = .;
            build/baserom/anime_texture_6_static.o (.data)
        _anime_texture_6_staticSegmentDataEnd = .;
    _anime_texture_6_staticSegmentDataSize = ABSOLUTE( _anime_texture_6_staticSegmentDataEnd - _anime_texture_6_staticSegmentDataStart );
        _anime_texture_6_staticSegmentRoDataStart = .;
            build/baserom/anime_texture_6_static.o (.rodata)
        _anime_texture_6_staticSegmentRoDataEnd = .;
    _anime_texture_6_staticSegmentRoDataSize = ABSOLUTE( _anime_texture_6_staticSegmentRoDataEnd - _anime_texture_6_staticSegmentRoDataStart );
        _anime_texture_6_staticSegmentSDataStart = .;
            build/baserom/anime_texture_6_static.o (.sdata)
        . = ALIGN(0x10);
        _anime_texture_6_staticSegmentSDataEnd = .;
        _anime_texture_6_staticSegmentOvlStart = .;
            build/baserom/anime_texture_6_static.o (.ovl)
        . = ALIGN(0x10);
        _anime_texture_6_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _anime_texture_6_staticSegmentOvlEnd - _anime_texture_6_staticSegmentTextStart );
    _anime_texture_6_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..anime_texture_6_static.bss ADDR(..anime_texture_6_static) + SIZEOF(..anime_texture_6_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _anime_texture_6_staticSegmentBssStart = .;
            build/baserom/anime_texture_6_static.o (.sbss)
            build/baserom/anime_texture_6_static.o (.scommon)
            build/baserom/anime_texture_6_static.o (.bss)
            build/baserom/anime_texture_6_static.o (COMMON)
        . = ALIGN(0x10);
        _anime_texture_6_staticSegmentBssEnd = .;
        _anime_texture_6_staticSegmentEnd = .;
    }
    _anime_texture_6_staticSegmentBssSize = ABSOLUTE( _anime_texture_6_staticSegmentBssEnd - _anime_texture_6_staticSegmentBssStart );

    _RomSize = (_RomSize + 4095) & ~ 4095;
    _softsprite_matrix_staticSegmentRomStart = _RomSize;
    ..softsprite_matrix_static : AT(_RomSize)
    {
        _softsprite_matrix_staticSegmentStart = .;
        . = ALIGN(0x10);
        _softsprite_matrix_staticSegmentTextStart = .;
            build/baserom/softsprite_matrix_static.o (.text)
        _softsprite_matrix_staticSegmentTextEnd = .;
    _softsprite_matrix_staticSegmentTextSize = ABSOLUTE( _softsprite_matrix_staticSegmentTextEnd - _softsprite_matrix_staticSegmentTextStart );
        _softsprite_matrix_staticSegmentDataStart = .;
            build/baserom/softsprite_matrix_static.o (.data)
        _softsprite_matrix_staticSegmentDataEnd = .;
    _softsprite_matrix_staticSegmentDataSize = ABSOLUTE( _softsprite_matrix_staticSegmentDataEnd - _softsprite_matrix_staticSegmentDataStart );
        _softsprite_matrix_staticSegmentRoDataStart = .;
            build/baserom/softsprite_matrix_static.o (.rodata)
        _softsprite_matrix_staticSegmentRoDataEnd = .;
    _softsprite_matrix_staticSegmentRoDataSize = ABSOLUTE( _softsprite_matrix_staticSegmentRoDataEnd - _softsprite_matrix_staticSegmentRoDataStart );
        _softsprite_matrix_staticSegmentSDataStart = .;
            build/baserom/softsprite_matrix_static.o (.sdata)
        . = ALIGN(0x10);
        _softsprite_matrix_staticSegmentSDataEnd = .;
        _softsprite_matrix_staticSegmentOvlStart = .;
            build/baserom/softsprite_matrix_static.o (.ovl)
        . = ALIGN(0x10);
        _softsprite_matrix_staticSegmentOvlEnd = .;
    }
    _RomSize += ( _softsprite_matrix_staticSegmentOvlEnd - _softsprite_matrix_staticSegmentTextStart );
    _softsprite_matrix_staticSegmentRomEnd = _RomSize;

    _RomSize = (_RomSize + 4095) & ~ 4095;
    ..softsprite_matrix_static.bss ADDR(..softsprite_matrix_static) + SIZEOF(..softsprite_matrix_static) (NOLOAD) :
    {
        . = ALIGN(0x10);
        _softsprite_matrix_staticSegmentBssStart = .;
            build/baserom/softsprite_matrix_static.o (.sbss)
            build/baserom/softsprite_matrix_static.o (.scommon)
            build/baserom/softsprite_matrix_static.o (.bss)
            build/baserom/softsprite_matrix_static.o (COMMON)
        . = ALIGN(0x10);
        _softsprite_matrix_staticSegmentBssEnd = .;
        _softsprite_matrix_staticSegmentEnd = .;
    }
    _softsprite_matrix_staticSegmentBssSize = ABSOLUTE( _softsprite_matrix_staticSegmentBssEnd - _softsprite_matrix_staticSegmentBssStart );

    _RomEnd = _RomSize;
}
