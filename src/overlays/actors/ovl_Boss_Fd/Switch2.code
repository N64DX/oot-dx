temp_t0 = actionState - 0xC8;
            switch (temp_t0) { // switch 2
                case 0:        // switch 2
                    if (dPerp < 50.0f) {
                        this->animationTimers[0] = 0;
                    }
                    if (this->animationTimers[0] == 0) {
                        this->animationTimers[0] = (s32) Math_Rand_ZeroFloat(10.0f) + 0xA;
                        do {
                            this->targetPosition.x = Math_Rand_CenteredFloat(200.0f);
                            this->targetPosition.y = 390.0f;
                            temp_f0 = Math_Rand_CenteredFloat(200.0f);
                            this->targetPosition.z = temp_f0;
                            temp_f2_2 = this->targetPosition.x - this->actor.posRot.pos.x;
                            temp_f12 = temp_f0 - this->actor.posRot.pos.z;

                        } while (100.0f >= sqrtf((temp_f2_2 * temp_f2_2) + (temp_f12 * temp_f12)));
                    }
                    this->unk_2B0 = 200.0f;
                    this->unk_2B4 = 1000.0f;
                    this->unk_2AC = 10000.0f;
                    Math_SmoothScaleMaxF(&this->unk_280, 0.3f, 1.0f, 0.05f);
                    if (this->animationTimers[1] == 0) {
                        this->actionState = 0xC9;
                        this->animationTimers[0] = 0x1E;
                    }
                    break;
                case 1: // switch 2
                    this->unk_2B0 = 200.0f;
                    this->targetPosition.y = 390.0f;
                    this->unk_2B4 = 1000.0f;
                    this->targetPosition.x = 0.0f;
                    this->targetPosition.z = 0.0f;
                    this->unk_2AC = 2000.0f;
                    Math_SmoothScaleMaxF(&this->unk_280, 0.3f, 1.0f, 0.05f);
                    if (this->animationTimers[0] == 0) {
                        if ((this->movementTimer & 3) == 0) {
                            if (this->skinSegments != 0) {
                                this->skinSegments--;
                                if (this->skinSegments == 0) {
                                    Audio_SetBGM(0x21);
                                }
                            } else {
                                this->actionState = 0xCA;
                                this->animationTimers[0] = 0x1E;
                            }
                        }
                    }
                    if ((this->movementTimer & 0x1F) == 0) {
                        this->roarTimer = 0x28;
                    }
                    if (this->skinSegments != 0) {
                        sp17C = D_808D19E0;
                        sp164 = D_808D19EC;

                        if (this->fogMode == 0) {
                            globalCtx->envCtx.unk_D8 = 0.0f;
                        }
                        this->fogMode = 0xA;
                        sp150 = 1;
                        if ((this->movementTimer & 0x1C) != 0) {
                            Audio_PlaySoundGeneral(0x30DA, &this->actor.projectedPos, 4, &D_801333E0, &D_801333E0,
                                                   &D_801333E8);
                        }

                        for (phi_s5 = 0; phi_s5 < sp150; phi_s5++) {
                            temp_t1_2 = (s16)Math_Rand_ZeroFloat(99.9f);
                            sp188.x = this->bodySegmentsPos[temp_t1_2].x;
                            sp188.y = this->bodySegmentsPos[temp_t1_2].y - 10.0f;
                            sp168 = 0.03f;
                            sp188.z = this->bodySegmentsPos[temp_t1_2].z;
                            func_80029DBC(globalCtx, &sp188, &sp17C, &sp164, (s16)Math_Rand_ZeroFloat(20.0f) + 0x28,
                                          0x64);
                            for (phi_s0 = 0; phi_s0 < 15; phi_s0++) {
                                sp170.x = Math_Rand_CenteredFloat(20.0f);
                                sp170.y = Math_Rand_CenteredFloat(20.0f);
                                sp170.z = Math_Rand_CenteredFloat(20.0f);
                                sp158.y = 0.4f;
                                sp158.x = Math_Rand_CenteredFloat(0.5f);
                                sp158.z = Math_Rand_CenteredFloat(0.5f);
                                func_808CADC0(this->particles, &sp188, &sp170, &sp158,
                                              (s16)Math_Rand_ZeroFloat(3.0f) + 8);
                            }
                        }
                    }
                    break;
                case 2: // switch 2
                    temp_v1_3 = this->animationTimers[0];
                    this->stopFlag = 1;
                    this->fogMode = 3;
                    if (temp_v1_3 < 0x12) {
                        this->unk_13D0[temp_v1_3] = 1;
                    }
                    if (temp_v1_3 == 0) {
                        this->actionState = 0xCB;
                        this->animationTimers[0] = 0xF;
                        this->ceilingTargetIndex = 0;
                        player->actor.posRot.pos.y = 90.0f;
                        player->actor.posRot.pos.x = 40.0f;
                        player->actor.posRot.pos.z = 150.0f;
                    }
                    break;
                case 3: // switch 2
                    if (this->animationTimers[0] == 0) {
                        this->actionState = 0xCC;
                        this->animationTimers[0] = 0x14;
                        this->stopFlag = 0;
                    }
                    break;
                case 4: // switch 2
                    temp_f0_2 = 0.0;
                    this->unk_2A4 = this->unk_2AC = this->unk_2A8 = this->actor.speedXZ =  temp_f0_2;
                    
                    if (this->animationTimers[0] == 1) {
                        this->actor.posRot.rot.y = 0;
                        this->actor.posRot.pos.x = this->actor.velocity.x  = this->actor.velocity.z = temp_f0_2;
                        this->actor.posRot.pos.y = 900.0f;
                        this->actor.posRot.pos.z = 150.0f;
                        this->actor.shape.rot.z = 0x1200;
                        this->actor.posRot.rot.x = this->actor.posRot.rot.y;
                    }
                    if (this->animationTimers[0] == 0) {
                        if (this->actor.posRot.pos.y <= 110.0f) {
                            this->actor.velocity.y = 0.0f;
                            this->actor.posRot.pos.y = 110.0f;
                            if (this->ceilingTargetIndex == 0) {
                                this->ceilingTargetIndex++;
                                this->animationTimers[1] = 0x3C;
                                this->deathCameraShakeTimer = 0x14;
                                Audio_PlaySoundGeneral(0x3889, &this->actor.projectedPos, 4, &D_801333E0, &D_801333E0,
                                                       &D_801333E8);
                                func_8002DF54(globalCtx, &this->actor, 5);
                                for (phi_s5_2 = 0; phi_s5_2 < 15; phi_s5_2++) {
                                    sp144 = D_808D19F8;
                                    sp138 = D_808D1A04;
                                    sp144.x = Math_Rand_CenteredFloat(8.0f);
                                    sp144.y = Math_Rand_ZeroFloat(1.0f);
                                    sp144.z = Math_Rand_CenteredFloat(8.0f);
                                    sp138.y = 0.3f;
                                    sp12C.x = Math_Rand_CenteredFloat(10.0f) + this->actor.posRot.pos.x;
                                    sp12C.y = Math_Rand_CenteredFloat(10.0f) + this->actor.posRot.pos.y;
                                    sp12C.z = Math_Rand_CenteredFloat(10.0f) + this->actor.posRot.pos.z;
                                    func_808CAF5C(this->particles, &sp12C, &sp144, &sp138,
                                                  Math_Rand_ZeroFloat(100.0f) + 300.0f);
                                }
                            }
                        } else {
                            this->actor.velocity.y -= 1.0f;
                        }
                    } else {
                        this->actor.velocity.y = 0.0f;
                    }
                    if (this->animationTimers[1] == 1) {
                        this->actionState = 0xCD;
                        this->animationTimers[0] = 0x46;
                    }
                    break;
                case 5: // switch 2
                    this->actor.velocity.y = 0.0f;
                    this->actor.posRot.pos.y = 110.0f;
                    this->unk_2A8 = 0.0f;
                    this->unk_2AC = 0.0f;
                    this->unk_2A4 = 0.0f;
                    this->actor.speedXZ = 0.0f;
                    if ((this->animationTimers[0] < 0x32) && (this->animationTimers[0] > 0)) {
                        sp114 = D_808D1A10;
                        sp108 = D_808D1A1C;
                        Audio_PlaySoundGeneral(0x301C, &this->actor.projectedPos, 4, &D_801333E0, &D_801333E0,
                                               &D_801333E8);
                        sp120.x = Math_Rand_CenteredFloat(40.0f) + this->actor.posRot.pos.x;
                        sp120.y = (Math_Rand_CenteredFloat(10.0f) + this->actor.posRot.pos.y) - 10.0f;
                        sp120.z = (Math_Rand_CenteredFloat(40.0f) + this->actor.posRot.pos.z) + 5.0f;
                        sp108.y = 0.03f;
                        func_80029DBC(globalCtx, &sp120, &sp114, &sp108, (s16) Math_Rand_ZeroFloat(15.0f) + 0x1E, 0);
                    }
                    if (this->animationTimers[0] < 0x14) {
                        Math_SmoothDownscaleMaxF(&this->actor.scale.x, 1.0f, 0.0025f);
                        Actor_SetScale(&this->actor, this->actor.scale.x);
                    }
                    if (this->animationTimers[0] == 0) {
                        this->actionFunc = &func_808CDE30;
                        this->actor.posRot.pos.y -= 1000.0f;
                    }
                    if (this->animationTimers[0] == 7) {
                        Actor_Spawn(&globalCtx->actorCtx, globalCtx, 0x5F, this->actor.posRot.pos.x,
                                    this->actor.posRot.pos.y, this->actor.posRot.pos.z, 0, 0, 0, 0);
                    }
                    break;
            }